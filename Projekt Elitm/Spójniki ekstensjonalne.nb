(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   3342595,      60485]
NotebookOptionsPosition[   3330943,      60282]
NotebookOutlinePosition[   3331342,      60298]
CellTagsIndexPosition[   3331299,      60295]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Sp\[OAcute]jniki ekstensjonalne", "Title",
 CellChangeTimes->{{3.8498899000279026`*^9, 
  3.849889923473299*^9}},ExpressionUUID->"582a966e-e249-496c-b3a7-\
96ef36a1d70a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "=", "False"}], ";", " ", 
  RowBox[{"t", "=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"boolPairs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f", ",", "f"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"f", ",", "t"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "f"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "t"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B1", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Return", "[", "f", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"B2", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[Equal]", "f"}], ",", 
      RowBox[{"Return", "[", "f", "]"}], ",", 
      RowBox[{"Return", "[", "y", "]"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", "koniunkcja", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B3", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"x", "\[Equal]", "f"}], ",", 
     RowBox[{"Return", "[", "f", "]"}], ",", 
     RowBox[{"Return", "[", 
      RowBox[{"\[Not]", "y"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B4", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Return", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B5", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"x", "\[Equal]", "f"}], ",", 
     RowBox[{"Return", "[", "y", "]"}], ",", 
     RowBox[{"Return", "[", "f", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B6", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", " ", 
   RowBox[{"Return", "[", "y", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"B7", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[Equal]", "f"}], ",", 
      RowBox[{"Return", "[", "y", "]"}], ",", 
      RowBox[{"Return", "[", 
       RowBox[{"\[Not]", "y"}], "]"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"alternatywa", " ", "wykluczaj\:0105ca"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"B8", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[Equal]", "f"}], ",", 
      RowBox[{"Return", "[", "y", "]"}], ",", 
      RowBox[{"Return", "[", "t", "]"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", "alternatywa", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"B9", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[Equal]", "f"}], ",", 
      RowBox[{"Return", "[", 
       RowBox[{"\[Not]", "y"}], "]"}], ",", 
      RowBox[{"Return", "[", "f", "]"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"binegacja", "/", "strza\[LSlash]ka"}], " ", 
    RowBox[{"Pierce", "'"}], "a"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"B10", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[Equal]", "f"}], ",", 
      RowBox[{"Return", "[", 
       RowBox[{"\[Not]", "y"}], "]"}], ",", 
      RowBox[{"Return", "[", "y", "]"}]}], "]"}]}], ";"}], " ", 
  RowBox[{
  "(*", "r\[OAcute]wnowa\:017cno\:015b\[CAcute]", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B11", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Return", "[", 
    RowBox[{"\[Not]", "y"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B12", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"x", "\[Equal]", "f"}], ",", 
     RowBox[{"Return", "[", 
      RowBox[{"\[Not]", "y"}], "]"}], ",", 
     RowBox[{"Return", "[", "t", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B13", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Return", "[", 
    RowBox[{"\[Not]", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"B14", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[Equal]", "f"}], ",", 
      RowBox[{"Return", "[", "t", "]"}], ",", 
      RowBox[{"Return", "[", "y", "]"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", "implikacja", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"B15", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[Equal]", "f"}], ",", 
      RowBox[{"Return", "[", "t", "]"}], ",", 
      RowBox[{"Return", "[", 
       RowBox[{"\[Not]", "y"}], "]"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"dysjunkcja", "/", "kreska"}], " ", "Sheffera"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B16", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Return", "[", "t", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "B1", ",", "B2", ",", "B3", ",", "B4", ",", "B5", ",", "B6", ",", "B7", 
     ",", "B8", ",", "B9", ",", "B10", ",", "B11", ",", "B12", ",", "B13", 
     ",", "B14", ",", "B15", ",", "B16"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UzupelnijZbiorb", "[", "BSet_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"array", "=", 
        RowBox[{"{", "}"}]}], ",", "set"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"set", "=", 
           RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"set", ",", 
              RowBox[{"funktor", "[", 
               RowBox[{
                RowBox[{"pair", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"pair", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"pair", ",", "boolPairs"}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"array", ",", "set"}], "]"}], ";"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"funktor", ",", "BSet"}], "}"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "array", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"UzupelnijZbiorb", "[", "B", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"firstline", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "i", "}"}], ",", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "\[LessEqual]", "16"}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"firstline", ",", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<B\>\"", ",", 
           RowBox[{"ToString", "[", "i", "]"}]}], "}"}], "]"}]}], "]"}]}], 
     "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TablicaPrawdyB", "[", "B_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"TableForm", "[", 
      RowBox[{
       RowBox[{"Boole", "[", "B", "]"}], ",", 
       RowBox[{"TableAlignments", " ", "\[Rule]", " ", "Center"}], ",", 
       RowBox[{"TableDirections", "\[Rule]", "Row"}], ",", 
       RowBox[{"TableHeadings", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"firstline", ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<(0, 0)\>\"", ",", "\"\<(0, 1)\>\"", ",", "\"\<(1, 0)\>\"", 
            ",", "\"\<(1, 1)\>\""}], "}"}]}], "}"}]}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TablicaPrawdyB", "[", "b", "]"}]}], "Code",
 CellChangeTimes->{{3.8498917156697664`*^9, 3.8498919306098475`*^9}, {
   3.8498919653591604`*^9, 3.8498921616773615`*^9}, {3.8498922831856318`*^9, 
   3.8498923286792*^9}, {3.8498924130647326`*^9, 3.8498924380211763`*^9}, {
   3.849892541300491*^9, 3.849892591871146*^9}, 3.849892642980928*^9, {
   3.8498927068666377`*^9, 3.8498927121654925`*^9}, {3.849892743725363*^9, 
   3.849892757130839*^9}, {3.8498928281249266`*^9, 3.8498928835218005`*^9}, {
   3.8498930221355667`*^9, 3.84989306069958*^9}, {3.8498931041245327`*^9, 
   3.8498931441255302`*^9}, {3.84989325188244*^9, 3.849893291784973*^9}, {
   3.849893327776703*^9, 3.849893454444973*^9}, {3.849893580787615*^9, 
   3.849893622702241*^9}, {3.849893671124178*^9, 3.849893839155981*^9}, {
   3.8498939282381344`*^9, 3.849893983002614*^9}, {3.849894327824901*^9, 
   3.849894334968235*^9}, {3.8498944126234007`*^9, 3.8498944463240643`*^9}, {
   3.849894495962722*^9, 3.8498945011432743`*^9}, {3.849894534464425*^9, 
   3.849894549240492*^9}, {3.8498945811108427`*^9, 3.849894631339744*^9}, {
   3.849894733953483*^9, 3.8498947517836666`*^9}, {3.849935262828306*^9, 
   3.8499352788708143`*^9}, {3.8499356564817333`*^9, 
   3.8499356579534817`*^9}, {3.849936306010556*^9, 3.8499363667343407`*^9}, {
   3.849936824781768*^9, 3.8499370271927123`*^9}, {3.84993708337564*^9, 
   3.84993711749472*^9}, {3.8499375638950033`*^9, 3.84993756419915*^9}, {
   3.849937620965906*^9, 3.8499376313443575`*^9}, {3.8499377811528816`*^9, 
   3.8499378800708256`*^9}, 3.849937930770456*^9, 3.8499380976867456`*^9, {
   3.8499382816485357`*^9, 3.849938402250359*^9}, {3.850124608794529*^9, 
   3.8501246259106092`*^9}, {3.85012604850019*^9, 3.850126065988287*^9}, {
   3.8501261104937615`*^9, 3.850126214709645*^9}, {3.8501263180803413`*^9, 
   3.8501263938068953`*^9}, {3.8501264370874853`*^9, 
   3.8501265830303917`*^9}, {3.850126627488976*^9, 3.85012665561749*^9}, {
   3.8501266887187276`*^9, 3.8501267905409575`*^9}, {3.850126866955954*^9, 
   3.850126960213915*^9}, 3.850126999644117*^9, {3.8501270776065435`*^9, 
   3.8501271054056587`*^9}, {3.850135613828061*^9, 3.850135646170721*^9}, {
   3.850135952316717*^9, 3.850135974723536*^9}, {3.850136112328003*^9, 
   3.850136140008763*^9}, {3.8501361860172167`*^9, 3.8501364744073696`*^9}, {
   3.8501365278372684`*^9, 3.8501365482544804`*^9}, 3.8501371624041567`*^9, {
   3.850137243048769*^9, 3.8501372913297853`*^9}, {3.850139570437708*^9, 
   3.85013957732475*^9}, {3.850144976374266*^9, 3.8501450066284337`*^9}, {
   3.8501456728445387`*^9, 3.8501456801618896`*^9}, {3.8501457773429766`*^9, 
   3.8501458037751503`*^9}, {3.850148433220372*^9, 3.8501484591651907`*^9}, {
   3.85014849427812*^9, 3.850148550912902*^9}, {3.8523216561982355`*^9, 
   3.8523217081692486`*^9}, {3.8523242879352856`*^9, 3.8523242896711073`*^9}},
 CellLabel->
  "In[616]:=",ExpressionUUID->"e9a8eb91-63b4-42d2-90f2-94ec4249a9e7"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"B1\"\>",
       HoldForm], 
      TagBox["\<\"B2\"\>",
       HoldForm], 
      TagBox["\<\"B3\"\>",
       HoldForm], 
      TagBox["\<\"B4\"\>",
       HoldForm], 
      TagBox["\<\"B5\"\>",
       HoldForm], 
      TagBox["\<\"B6\"\>",
       HoldForm], 
      TagBox["\<\"B7\"\>",
       HoldForm], 
      TagBox["\<\"B8\"\>",
       HoldForm], 
      TagBox["\<\"B9\"\>",
       HoldForm], 
      TagBox["\<\"B10\"\>",
       HoldForm], 
      TagBox["\<\"B11\"\>",
       HoldForm], 
      TagBox["\<\"B12\"\>",
       HoldForm], 
      TagBox["\<\"B13\"\>",
       HoldForm], 
      TagBox["\<\"B14\"\>",
       HoldForm], 
      TagBox["\<\"B15\"\>",
       HoldForm], 
      TagBox["\<\"B16\"\>",
       HoldForm]},
     {
      TagBox["\<\"(0, 0)\"\>",
       HoldForm], "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "1", "1", 
      "1", "1", "1", "1"},
     {
      TagBox["\<\"(0, 1)\"\>",
       HoldForm], "0", "0", "0", "0", "1", "1", "1", "1", "0", "0", "0", "0", 
      "1", "1", "1", "1"},
     {
      TagBox["\<\"(1, 0)\"\>",
       HoldForm], "0", "0", "1", "1", "0", "0", "1", "1", "0", "0", "1", "1", 
      "0", "0", "1", "1"},
     {
      TagBox["\<\"(1, 1)\"\>",
       HoldForm], "0", "1", "0", "1", "0", "1", "0", "1", "0", "1", "0", "1", 
      "0", "1", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[1.2]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableAlignments -> Center, TableDirections -> Row, 
    TableHeadings -> {{
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}, {
      "(0, 0)", "(0, 1)", "(1, 0)", "(1, 1)"}}]]]], "Output",
 CellChangeTimes->{{3.850137273957901*^9, 3.8501372939196405`*^9}, 
   3.850138736254747*^9, {3.850139571948497*^9, 3.85013957810891*^9}, 
   3.850143367674893*^9, 3.8501447190631275`*^9, 3.850145010610965*^9, 
   3.8501456610140343`*^9, 3.850145806419034*^9, 3.85014846061691*^9, {
   3.8501485058325644`*^9, 3.8501485536644335`*^9}, 3.8522661176309357`*^9, 
   3.8522982906279287`*^9, 3.85232202235682*^9, 3.852324295805428*^9},
 CellLabel->
  "Out[633]//TableForm=",ExpressionUUID->"2ca01f21-45b9-4d27-9a8d-\
42ba2a6c1e3a"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Func", "[", 
    RowBox[{"f1_", ",", "f2_", ",", "f3_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"set", "=", 
        RowBox[{"{", "}"}]}], ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"f2", "==", "0"}], ",", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"f3", "\[Equal]", "0"}], ",", 
          RowBox[{"set", "=", 
           RowBox[{"b", "[", 
            RowBox[{"[", "f1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          "\t\t\t", 
          RowBox[{"{", "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"set", ",", 
              RowBox[{
               RowBox[{"B", "[", 
                RowBox[{"[", "f1", "]"}], "]"}], "[", 
               RowBox[{"f", ",", 
                RowBox[{
                 RowBox[{"b", "[", 
                  RowBox[{"[", "f3", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], " ", "]"}], ";", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"set", ",", 
              RowBox[{
               RowBox[{"B", "[", 
                RowBox[{"[", "f1", "]"}], "]"}], "[", 
               RowBox[{"f", ",", 
                RowBox[{
                 RowBox[{"b", "[", 
                  RowBox[{"[", "f3", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], " ", "]"}], ";", 
            "\[IndentingNewLine]", "\t\t\t", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"set", ",", 
              RowBox[{
               RowBox[{"B", "[", 
                RowBox[{"[", "f1", "]"}], "]"}], "[", 
               RowBox[{"t", ",", 
                RowBox[{
                 RowBox[{"b", "[", 
                  RowBox[{"[", "f3", "]"}], "]"}], "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], " ", "]"}], ";", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"set", ",", 
              RowBox[{
               RowBox[{"B", "[", 
                RowBox[{"[", "f1", "]"}], "]"}], "[", 
               RowBox[{"t", ",", 
                RowBox[{
                 RowBox[{"b", "[", 
                  RowBox[{"[", "f3", "]"}], "]"}], "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}], "]"}]}], " ", "]"}], ";"}],
            "\[IndentingNewLine]", "\t\t\t", "}"}]}], "\[IndentingNewLine]", 
         "\t\t", "]"}], ",", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"f3", "\[NotEqual]", "0"}], ",", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"i", "=", "1"}], ",", 
            RowBox[{"i", "\[LessEqual]", "4"}], ",", 
            RowBox[{"i", "++"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"set", ",", 
              RowBox[{
               RowBox[{"B", "[", 
                RowBox[{"[", "f1", "]"}], "]"}], "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"b", "[", 
                  RowBox[{"[", "f2", "]"}], "]"}], "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"b", "[", 
                  RowBox[{"[", "f3", "]"}], "]"}], "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], " ", "]"}]}], " ",
            "]"}], ",", "\[IndentingNewLine]", "\t\t\t", 
          RowBox[{"{", "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"set", ",", 
              RowBox[{
               RowBox[{"B", "[", 
                RowBox[{"[", "f1", "]"}], "]"}], "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"b", "[", 
                  RowBox[{"[", "f2", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "f"}], "]"}]}], " ", 
             "]"}], ";", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"set", ",", 
              RowBox[{
               RowBox[{"B", "[", 
                RowBox[{"[", "f1", "]"}], "]"}], "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"b", "[", 
                  RowBox[{"[", "f2", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", "t"}], "]"}]}], " ", 
             "]"}], ";", "\[IndentingNewLine]", "\t\t\t", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"set", ",", 
              RowBox[{
               RowBox[{"B", "[", 
                RowBox[{"[", "f1", "]"}], "]"}], "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"b", "[", 
                  RowBox[{"[", "f2", "]"}], "]"}], "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ",", "f"}], "]"}]}], " ", 
             "]"}], ";", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"set", ",", 
              RowBox[{
               RowBox[{"B", "[", 
                RowBox[{"[", "f1", "]"}], "]"}], "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"b", "[", 
                  RowBox[{"[", "f2", "]"}], "]"}], "[", 
                 RowBox[{"[", "4", "]"}], "]"}], ",", "t"}], "]"}]}], " ", 
             "]"}], ";"}], "\[IndentingNewLine]", "\t\t\t", "}"}]}], 
         "\[IndentingNewLine]", "\t\t", "]"}]}], "\[IndentingNewLine]", "\t", 
       "]"}], ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"Return", "[", "set", "]"}]}]}], "\[IndentingNewLine]", "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"KtoryFunktorB", "[", 
    RowBox[{"f1_", ",", "f2_", ",", "f3_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"set", "=", 
       RowBox[{"Func", "[", 
        RowBox[{"f1", ",", "f2", ",", "f3"}], "]"}]}], "}"}], ",", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", "16"}], ",", 
       RowBox[{"i", "++"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"set", "\[Equal]", 
          RowBox[{"b", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", 
         RowBox[{"Return", "[", "i", "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.8501380977133017`*^9, 3.8501384214633226`*^9}, {
   3.8501390579593487`*^9, 3.850139079627576*^9}, {3.8501393994196825`*^9, 
   3.8501394002305336`*^9}, {3.850139980718706*^9, 3.8501402104155664`*^9}, {
   3.8501403321473093`*^9, 3.850140396290023*^9}, {3.850140447430852*^9, 
   3.850140609762376*^9}, {3.8501406685642815`*^9, 3.8501406986500635`*^9}, {
   3.850140730787851*^9, 3.8501407536985264`*^9}, 3.850140786770919*^9, {
   3.8501408333904476`*^9, 3.8501409537918177`*^9}, {3.850141479214368*^9, 
   3.850141498332124*^9}, {3.8523001538254595`*^9, 3.852300187912422*^9}, {
   3.852321841954336*^9, 3.852321910130789*^9}, {3.889013679073241*^9, 
   3.889013743150262*^9}},ExpressionUUID->"e996f882-0969-4752-bbb1-\
c0e5598014ac"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"list3d", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", ",", "j", ",", "k", ",", "array", ",", "set"}], "}"}], ",", 
    "\n", "\t", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "\[LessEqual]", "16"}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", "\t", 
      RowBox[{"{", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{"array", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ",", 
          RowBox[{"j", "\[LessEqual]", "16"}], ",", 
          RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", "\t\t\t", 
          RowBox[{"{", "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{
            RowBox[{"set", "=", 
             RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", "\t\t\t", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"k", "=", "1"}], ",", 
              RowBox[{"k", "\[LessEqual]", "16"}], ",", 
              RowBox[{"k", "++"}], ",", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"set", ",", 
                RowBox[{"KtoryFunktorB", "[", 
                 RowBox[{"i", ",", "j", ",", "k"}], "]"}]}], "]"}]}], "]"}], 
            ";", "\[IndentingNewLine]", "\t\t\t", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"array", ",", "set"}], "]"}], ";"}], 
           "\[IndentingNewLine]", "\t\t\t", "}"}]}], "\n", "\t\t", "]"}], ";",
         "\[IndentingNewLine]", "\t\t", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"list3d", ",", "array"}], "]"}], ";"}], 
       "\[IndentingNewLine]", "\t", "}"}]}], "\[IndentingNewLine]", "\t", 
     "]"}]}], "\n", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Wypisz", "[", "funktor_", "]"}], ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"StringJoin", "[", 
         RowBox[{"\"\<B\>\"", ",", 
          RowBox[{"ToString", "[", "funktor", "]"}]}], "]"}], ",", "18", ",", 
        "Red"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"TableForm", "[", 
       RowBox[{
        RowBox[{"list3d", "[", 
         RowBox[{"[", "funktor", "]"}], "]"}], ",", 
        RowBox[{"TableAlignments", "\[Rule]", "Center"}], ",", 
        RowBox[{"TableHeadings", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"firstline", ",", "firstline"}], "}"}]}]}], "]"}], "]"}]}], 
    "}"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.85014355951362*^9, 3.850143599789261*^9}, {
   3.8501436909976683`*^9, 3.8501437152975426`*^9}, {3.850143762281622*^9, 
   3.8501438609920406`*^9}, {3.8501439006422825`*^9, 
   3.8501439841596146`*^9}, {3.8501447359814043`*^9, 
   3.8501447457659273`*^9}, {3.8501449047363534`*^9, 
   3.8501449076303225`*^9}, {3.8501450549703064`*^9, 3.850145186406535*^9}, {
   3.8501452757755346`*^9, 3.850145316221966*^9}, {3.8501453818369064`*^9, 
   3.850145383051226*^9}, {3.850145417687968*^9, 3.8501454187083855`*^9}, {
   3.850145499377632*^9, 3.8501455548392754`*^9}, {3.85014571914231*^9, 
   3.8501457431230154`*^9}, {3.850145848518267*^9, 3.850146013820813*^9}, {
   3.850147204697174*^9, 3.8501472266811914`*^9}, {3.85014776660818*^9, 
   3.850147767064104*^9}, {3.8501480323918037`*^9, 3.850148058579921*^9}, {
   3.850148090321634*^9, 3.850148097409775*^9}, {3.8501481355430927`*^9, 
   3.850148143840312*^9}, 3.852265014290492*^9, 3.8522650604991274`*^9, 
   3.852265144535938*^9, {3.852265330236682*^9, 3.852265361470372*^9}, {
   3.852265621754369*^9, 3.8522656719574304`*^9}, {3.852265702205464*^9, 
   3.8522657074715734`*^9}, {3.852266662483283*^9, 3.8522666682496834`*^9}, {
   3.8522817973850527`*^9, 3.8522818065906935`*^9}, {3.8522818370921884`*^9, 
   3.8522819691730995`*^9}, {3.852282254683501*^9, 3.8522822852011733`*^9}, {
   3.852282318008768*^9, 3.8522823549946547`*^9}, {3.8522824536764545`*^9, 
   3.8522824785586877`*^9}, {3.852310680381786*^9, 3.8523108439835668`*^9}, {
   3.852322052556593*^9, 3.852322066933585*^9}, {3.8890137476950502`*^9, 
   3.8890137957305098`*^9}},ExpressionUUID->"20094ba8-9fb8-4305-a8c5-\
1f47b2312d6e"],

Cell[TextData[{
 "\nZdefiniujmy nast\:0119puj\:0105ce z\[LSlash]o\:017cenie funktor\[OAcute]w \
dwuargumentowych:  ",
 StyleBox[Cell[BoxData[
  FormBox[
   SubscriptBox["B", "i"], TraditionalForm]], "Subsubsection",ExpressionUUID->
  "20e2c2cc-97ae-4a78-af15-6282c9f314ce"], "Subsubsection"],
 StyleBox["(", "Subsubsection"],
 StyleBox[Cell[BoxData[
  FormBox[
   SubscriptBox["B", "1"], TraditionalForm]], "Subsubsection",ExpressionUUID->
  "0cd60ffc-6925-4cea-a1e2-ee0af92cf7b3"], "Subsubsection"],
 StyleBox[", ", "Subsubsection"],
 StyleBox[Cell[BoxData[
  FormBox[
   SubscriptBox["B", "2"], TraditionalForm]], "Subsubsection",ExpressionUUID->
  "a3c10d37-be86-4936-8a96-0038fb1d6e23"], "Subsubsection"],
 StyleBox[") :=  ", "Subsubsection"],
 StyleBox[Cell[BoxData[
  FormBox[
   SubscriptBox["B", "i"], TraditionalForm]], "Subsubsection",ExpressionUUID->
  "87ce14e2-ad85-40b4-963a-ff3f9c662df0"], "Subsubsection"],
 StyleBox["( ", "Subsubsection"],
 StyleBox[Cell[BoxData[
  FormBox[
   SubscriptBox["B", "1"], TraditionalForm]], "Subsubsection",ExpressionUUID->
  "ac637f18-66df-47b2-a703-59269e3ae584"], "Subsubsection"],
 StyleBox["(x,y), ", "Subsubsection"],
 StyleBox[Cell[BoxData[
  FormBox[
   SubscriptBox["B", "2"], TraditionalForm]], "Subsubsection",ExpressionUUID->
  "285896f5-9357-4ce1-8fd8-c5bae2954bfc"], "Subsubsection"],
 StyleBox["(x,y) )", "Subsubsection"],
 ".\nPoszukajmy teraz takiej pary funktor\[OAcute]w ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["B", "1"]}], TraditionalForm]],ExpressionUUID->
  "6157cce4-3281-438c-b683-980117cd175d"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["B", "2"], TraditionalForm]],ExpressionUUID->
  "e3ebd3f5-046c-41b2-b099-168ecf1da337"],
 StyleBox[")",
  FontSize->14],
 ", kt\[OAcute]ra podstawiona jako argument do dowolnego sp\[OAcute]jnika ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["B", "i"], TraditionalForm]],ExpressionUUID->
  "c323290b-f9b7-45aa-832c-dc5154c8ec1c"],
 " da w rezultacie w\[LSlash]a\:015bnie ten sp\[OAcute]jnik.\nSzukamy \
wi\:0119c funktora o nast\:0119puj\:0105cej w\[LSlash]asno\:015bci:\t   ",
 StyleBox["(x", "Subsubsection"],
 StyleBox[Cell[BoxData[
  FormBox[
   SubscriptBox["B", "1"], TraditionalForm]], "Subsubsection",ExpressionUUID->
  "f6a1e2c2-084c-474f-8942-ca0094658e22"], "Subsubsection"],
 StyleBox["y) ", "Subsubsection"],
 StyleBox[Cell[BoxData[
  FormBox[
   SubscriptBox["B", "i"], TraditionalForm]], "Subsubsection",ExpressionUUID->
  "3737f07f-6f81-4822-b366-1c7bc34972e4"], "Subsubsection"],
 StyleBox[" ( x", "Subsubsection"],
 StyleBox[Cell[BoxData[
  FormBox[
   SubscriptBox["B", "2"], TraditionalForm]], "Subsubsection",ExpressionUUID->
  "63cdb050-64fa-4aa7-969e-122223631a8c"], "Subsubsection"],
 StyleBox["y) = (x", "Subsubsection"],
 StyleBox[Cell[BoxData[
  FormBox[
   SubscriptBox["B", "i"], TraditionalForm]], "Subsubsection",ExpressionUUID->
  "d514b111-ccbb-4fc4-8675-8474dc3e0a29"], "Subsubsection"],
 StyleBox["y)", "Subsubsection"],
 ".\nNa podstawie tablic prawdy utworzonych dla takich z\[LSlash]o\:017ce\
\:0144 \[LSlash]atwo udowodni\[CAcute], \:017ce istnieje tylko jedna para spe\
\[LSlash]niaj\:0105ca powy\:017csz\:0105 nier\[OAcute]wno\:015b\[CAcute]. \
Wystarczy spojrze\[CAcute] na tablice dla B4 i B6:\n\t1. w tablicy dla B4 sp\
\[OAcute]jnik ten uzyskujemy tylko, gdy pierwszym argumentem jest B4 (drugi \
argument jest nieistotny);\n\t2. w tablicy dla B6 sp\[OAcute]jnik ten \
uzyskujemy tylko, gdy drugim argumentem jest B6 (pierwszy argument jest \
nieistotny)."
}], "Text",
 CellChangeTimes->{{3.8522778757748356`*^9, 3.8522780442238894`*^9}, {
  3.85227809041573*^9, 3.852278124819772*^9}, {3.852278158729455*^9, 
  3.8522783914852767`*^9}, {3.852278426461974*^9, 3.852278434020753*^9}, {
  3.8522785991431756`*^9, 3.8522787791459007`*^9}, {3.8522789100244083`*^9, 
  3.852278936941221*^9}, {3.852278983251828*^9, 3.852279368969555*^9}, {
  3.8522795441119833`*^9, 3.8522795459166927`*^9}, {3.8522800900055647`*^9, 
  3.8522800916875215`*^9}, {3.8523113123437386`*^9, 3.852311341233306*^9}, {
  3.8523115073252077`*^9, 3.8523116922246475`*^9}, {3.852311765279973*^9, 
  3.852311773355658*^9}},ExpressionUUID->"2940d00b-52a1-4e8b-8356-\
49c06789110f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Wypisz", "[", "4", "]"}], ";", 
  RowBox[{"Wypisz", "[", "6", "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.852311777385174*^9, 3.852311787093134*^9}},
 CellLabel->
  "In[583]:=",ExpressionUUID->"b4671a5d-3bf9-44a1-b8ac-da62d2eb7845"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"B4\"\>",
  StripOnInput->False,
  LineColor->RGBColor[1, 0, 0],
  FrontFaceColor->RGBColor[1, 0, 0],
  BackFaceColor->RGBColor[1, 0, 0],
  GraphicsColor->RGBColor[1, 0, 0],
  FontSize->18,
  FontColor->RGBColor[1, 0, 0]]], "Print",
 CellChangeTimes->{3.8523117888156166`*^9, 3.8523220779054136`*^9},
 CellLabel->
  "During evaluation of \
In[583]:=",ExpressionUUID->"cd61b498-cdab-415a-bc88-0f7cbab33a08"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"B1\"\>",
       HoldForm], 
      TagBox["\<\"B2\"\>",
       HoldForm], 
      TagBox["\<\"B3\"\>",
       HoldForm], 
      TagBox["\<\"B4\"\>",
       HoldForm], 
      TagBox["\<\"B5\"\>",
       HoldForm], 
      TagBox["\<\"B6\"\>",
       HoldForm], 
      TagBox["\<\"B7\"\>",
       HoldForm], 
      TagBox["\<\"B8\"\>",
       HoldForm], 
      TagBox["\<\"B9\"\>",
       HoldForm], 
      TagBox["\<\"B10\"\>",
       HoldForm], 
      TagBox["\<\"B11\"\>",
       HoldForm], 
      TagBox["\<\"B12\"\>",
       HoldForm], 
      TagBox["\<\"B13\"\>",
       HoldForm], 
      TagBox["\<\"B14\"\>",
       HoldForm], 
      TagBox["\<\"B15\"\>",
       HoldForm], 
      TagBox["\<\"B16\"\>",
       HoldForm]},
     {
      TagBox["\<\"B1\"\>",
       HoldForm], "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1"},
     {
      TagBox["\<\"B2\"\>",
       HoldForm], "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", 
      "2", "2", "2", "2"},
     {
      TagBox["\<\"B3\"\>",
       HoldForm], "3", "3", "3", "3", "3", "3", "3", "3", "3", "3", "3", "3", 
      "3", "3", "3", "3"},
     {
      TagBox["\<\"B4\"\>",
       HoldForm], "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", 
      "4", "4", "4", "4"},
     {
      TagBox["\<\"B5\"\>",
       HoldForm], "5", "5", "5", "5", "5", "5", "5", "5", "5", "5", "5", "5", 
      "5", "5", "5", "5"},
     {
      TagBox["\<\"B6\"\>",
       HoldForm], "6", "6", "6", "6", "6", "6", "6", "6", "6", "6", "6", "6", 
      "6", "6", "6", "6"},
     {
      TagBox["\<\"B7\"\>",
       HoldForm], "7", "7", "7", "7", "7", "7", "7", "7", "7", "7", "7", "7", 
      "7", "7", "7", "7"},
     {
      TagBox["\<\"B8\"\>",
       HoldForm], "8", "8", "8", "8", "8", "8", "8", "8", "8", "8", "8", "8", 
      "8", "8", "8", "8"},
     {
      TagBox["\<\"B9\"\>",
       HoldForm], "9", "9", "9", "9", "9", "9", "9", "9", "9", "9", "9", "9", 
      "9", "9", "9", "9"},
     {
      TagBox["\<\"B10\"\>",
       HoldForm], "10", "10", "10", "10", "10", "10", "10", "10", "10", "10", 
      "10", "10", "10", "10", "10", "10"},
     {
      TagBox["\<\"B11\"\>",
       HoldForm], "11", "11", "11", "11", "11", "11", "11", "11", "11", "11", 
      "11", "11", "11", "11", "11", "11"},
     {
      TagBox["\<\"B12\"\>",
       HoldForm], "12", "12", "12", "12", "12", "12", "12", "12", "12", "12", 
      "12", "12", "12", "12", "12", "12"},
     {
      TagBox["\<\"B13\"\>",
       HoldForm], "13", "13", "13", "13", "13", "13", "13", "13", "13", "13", 
      "13", "13", "13", "13", "13", "13"},
     {
      TagBox["\<\"B14\"\>",
       HoldForm], "14", "14", "14", "14", "14", "14", "14", "14", "14", "14", 
      "14", "14", "14", "14", "14", "14"},
     {
      TagBox["\<\"B15\"\>",
       HoldForm], "15", "15", "15", "15", "15", "15", "15", "15", "15", "15", 
      "15", "15", "15", "15", "15", "15"},
     {
      TagBox["\<\"B16\"\>",
       HoldForm], "16", "16", "16", "16", "16", "16", "16", "16", "16", "16", 
      "16", "16", "16", "16", "16", "16"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableAlignments -> Center, 
    TableHeadings -> {{
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}, {
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}}]]]], "Print",
 CellChangeTimes->{3.8523117888156166`*^9, 3.852322077952278*^9},
 CellLabel->
  "During evaluation of \
In[583]:=",ExpressionUUID->"bf64b493-d586-4c93-bee8-ace31fd785d3"],

Cell[BoxData[
 StyleBox["\<\"B6\"\>",
  StripOnInput->False,
  LineColor->RGBColor[1, 0, 0],
  FrontFaceColor->RGBColor[1, 0, 0],
  BackFaceColor->RGBColor[1, 0, 0],
  GraphicsColor->RGBColor[1, 0, 0],
  FontSize->18,
  FontColor->RGBColor[1, 0, 0]]], "Print",
 CellChangeTimes->{3.8523117888156166`*^9, 3.852322077983528*^9},
 CellLabel->
  "During evaluation of \
In[583]:=",ExpressionUUID->"238448fd-0d85-4d99-a755-b3711731831d"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"B1\"\>",
       HoldForm], 
      TagBox["\<\"B2\"\>",
       HoldForm], 
      TagBox["\<\"B3\"\>",
       HoldForm], 
      TagBox["\<\"B4\"\>",
       HoldForm], 
      TagBox["\<\"B5\"\>",
       HoldForm], 
      TagBox["\<\"B6\"\>",
       HoldForm], 
      TagBox["\<\"B7\"\>",
       HoldForm], 
      TagBox["\<\"B8\"\>",
       HoldForm], 
      TagBox["\<\"B9\"\>",
       HoldForm], 
      TagBox["\<\"B10\"\>",
       HoldForm], 
      TagBox["\<\"B11\"\>",
       HoldForm], 
      TagBox["\<\"B12\"\>",
       HoldForm], 
      TagBox["\<\"B13\"\>",
       HoldForm], 
      TagBox["\<\"B14\"\>",
       HoldForm], 
      TagBox["\<\"B15\"\>",
       HoldForm], 
      TagBox["\<\"B16\"\>",
       HoldForm]},
     {
      TagBox["\<\"B1\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B2\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B3\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B4\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B5\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B6\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B7\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B8\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B9\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B10\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B11\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B12\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B13\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B14\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B15\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B16\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableAlignments -> Center, 
    TableHeadings -> {{
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}, {
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}}]]]], "Print",
 CellChangeTimes->{3.8523117888156166`*^9, 3.8523220780212975`*^9},
 CellLabel->
  "During evaluation of \
In[583]:=",ExpressionUUID->"3aaf8724-7997-4848-aada-5f302d713804"]
}, Open  ]]
}, Open  ]],

Cell["\<\
\tSt\:0105d prosty wniosek, \:017ce naszym jedynym kandydatem na tak\:0105 \
par\:0119 jest (B4,B6). Poni\:017cej sprawdzimy, czy w\[LSlash]asno\:015b\
\[CAcute] ta jest zachowana dla pozosta\[LSlash]ych funktor\[OAcute]w.\
\>", "Text",
 CellChangeTimes->{3.8523117538733664`*^9, 
  3.852311836390709*^9},ExpressionUUID->"d542d940-d32e-4c7b-868f-\
4783daa1df7e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"set", "=", 
      RowBox[{"{", "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", " ", 
       RowBox[{"i", "\[LessEqual]", "16"}], ",", 
       RowBox[{"i", "++"}], ",", " ", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"set", ",", " ", 
         RowBox[{"KtoryFunktorB", "[", 
          RowBox[{"i", ",", "4", ",", "6"}], "]"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Bi(B4,B6)\>\"", ",", "18", ",", "Red"}], "]"}], ",", 
       "\"\<\\n\>\"", ",", 
       RowBox[{"TableForm", "[", 
        RowBox[{"set", ",", " ", 
         RowBox[{"TableAlignments", "\[Rule]", " ", "Center"}], ",", " ", 
         RowBox[{"TableDirections", "\[Rule]", "Row"}], ",", " ", 
         RowBox[{"TableHeadings", "\[Rule]", " ", 
          RowBox[{"{", "firstline", "}"}]}]}], "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.8522652153614345`*^9, 3.852265277618493*^9}, {
   3.8522653399974346`*^9, 3.852265340364877*^9}, {3.8522653724647274`*^9, 
   3.8522655850778136`*^9}, {3.852265625912876*^9, 3.852265676136526*^9}, {
   3.852265714830721*^9, 3.852265749504179*^9}, {3.852265808671755*^9, 
   3.8522658189373245`*^9}, {3.852265934602253*^9, 3.8522659642240405`*^9}, {
   3.8522660768858585`*^9, 3.852266083590053*^9}, {3.8522661482208643`*^9, 
   3.852266155285166*^9}, {3.852266193699736*^9, 3.852266195375391*^9}, {
   3.8522662263946095`*^9, 3.852266294528408*^9}, {3.852266333016519*^9, 
   3.852266477574682*^9}, {3.852277856498757*^9, 3.8522778592763367`*^9}, {
   3.8522794008528886`*^9, 3.852279422982082*^9}, 3.8522984550846014`*^9},
 CellLabel->
  "In[584]:=",ExpressionUUID->"08550ab3-f702-4b2d-bc46-af9bb8bcc057"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"Bi(B4,B6)\"\>",
    StripOnInput->False,
    LineColor->RGBColor[1, 0, 0],
    FrontFaceColor->RGBColor[1, 0, 0],
    BackFaceColor->RGBColor[1, 0, 0],
    GraphicsColor->RGBColor[1, 0, 0],
    FontSize->18,
    FontColor->RGBColor[1, 0, 0]], "\[InvisibleSpace]", "\<\"\\n\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"B1\"\>",
         HoldForm], 
        TagBox["\<\"B2\"\>",
         HoldForm], 
        TagBox["\<\"B3\"\>",
         HoldForm], 
        TagBox["\<\"B4\"\>",
         HoldForm], 
        TagBox["\<\"B5\"\>",
         HoldForm], 
        TagBox["\<\"B6\"\>",
         HoldForm], 
        TagBox["\<\"B7\"\>",
         HoldForm], 
        TagBox["\<\"B8\"\>",
         HoldForm], 
        TagBox["\<\"B9\"\>",
         HoldForm], 
        TagBox["\<\"B10\"\>",
         HoldForm], 
        TagBox["\<\"B11\"\>",
         HoldForm], 
        TagBox["\<\"B12\"\>",
         HoldForm], 
        TagBox["\<\"B13\"\>",
         HoldForm], 
        TagBox["\<\"B14\"\>",
         HoldForm], 
        TagBox["\<\"B15\"\>",
         HoldForm], 
        TagBox["\<\"B16\"\>",
         HoldForm]},
       {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", 
        "14", "15", "16"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
      GridBoxDividers->{
       "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     OutputFormsDump`HeadedRows],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableAlignments -> Center, TableDirections -> Row, 
      TableHeadings -> {{
        "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
         "B12", "B13", "B14", "B15", "B16"}}]]]}],
  SequenceForm[
   Style["Bi(B4,B6)", 18, 
    RGBColor[1, 0, 0]], "\n", 
   TableForm[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16}, 
    TableAlignments -> Center, TableDirections -> Row, 
    TableHeadings -> {{
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.852265737163461*^9, 3.8522658226652966`*^9, 3.8522659693873405`*^9, 
   3.852266090060113*^9, {3.852266138606775*^9, 3.8522661569063187`*^9}, 
   3.852266203011998*^9, {3.8522662436695766`*^9, 3.852266296039192*^9}, 
   3.8522663951678667`*^9, 3.8522664283632336`*^9, {3.852266460032132*^9, 
   3.852266480516348*^9}, {3.8522794029757366`*^9, 3.8522794240546923`*^9}, 
   3.852298176207287*^9, 3.852298317709854*^9, 3.8522984564194098`*^9, 
   3.852322085044104*^9},
 CellLabel->
  "During evaluation of \
In[584]:=",ExpressionUUID->"a30cf20d-5ba8-40cd-8802-34e5487eeabb"]
}, Open  ]],

Cell[TextData[{
 "\n\tTworz\:0105c tablice prawdy dla dw\[OAcute]ch zmiennych x i y, \
mo\:017cemy te zmienne zast\:0105pi\[CAcute] kolejno wyra\:017ceniami B4(x,y) \
i B6(x,y), gdy\:017c ich warto\:015bci odpowiadaj\:0105 naszemu systemowi \
warto\:015bciowania. \n\n\tNa podstawie tablic prawdy zdefiniowanego przez \
nas z\[LSlash]o\:017cenia mo\:017cemy udowodni\[CAcute], \:017ce nie istniej\
\:0105 \:017cadne inne ni\:017c dysjunkcja (B15) oraz ",
 StyleBox["binegacja",
  IgnoreSpellCheck->True],
 " (B9) dwuargumentowe ekstensjonalne sp\[OAcute]jniki zdaniotw\[OAcute]rcze \
w pe\[LSlash]ni wystarczaj\:0105ce do zdefiniowania innych sp\[OAcute]jnik\
\[OAcute]w dwuargumentowych.\n\tSprawd\:017amy to po kolei dla poszczeg\
\[OAcute]lnych funktor\[OAcute]w."
}], "Text",
 CellChangeTimes->{{3.8523088552519813`*^9, 3.8523089174665856`*^9}, {
   3.8523089516098948`*^9, 3.852308966662212*^9}, {3.8523090141101046`*^9, 
   3.8523091693529296`*^9}, {3.852309231995777*^9, 3.8523092696641617`*^9}, {
   3.8523099025800223`*^9, 3.8523099379172716`*^9}, {3.8523100026843395`*^9, 
   3.852310214276286*^9}, {3.852310259722721*^9, 3.8523104845644913`*^9}, 
   3.852310549521208*^9, {3.85231189686057*^9, 
   3.8523119772058363`*^9}},ExpressionUUID->"78f3eefb-831b-411f-ad13-\
112bcf3b5f88"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Wypisz", "[", "1", "]"}], ";", 
  RowBox[{"Wypisz", "[", "16", "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.852312002147935*^9, 3.8523120223768196`*^9}},
 CellLabel->
  "In[585]:=",ExpressionUUID->"8fa68f71-b342-4aed-a854-674646c6302b"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"B1\"\>",
  StripOnInput->False,
  LineColor->RGBColor[1, 0, 0],
  FrontFaceColor->RGBColor[1, 0, 0],
  BackFaceColor->RGBColor[1, 0, 0],
  GraphicsColor->RGBColor[1, 0, 0],
  FontSize->18,
  FontColor->RGBColor[1, 0, 0]]], "Print",
 CellChangeTimes->{3.852312023078417*^9, 3.8523220925692496`*^9},
 CellLabel->
  "During evaluation of \
In[585]:=",ExpressionUUID->"06ba5249-0942-4527-9c18-f53d7ea300fd"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"B1\"\>",
       HoldForm], 
      TagBox["\<\"B2\"\>",
       HoldForm], 
      TagBox["\<\"B3\"\>",
       HoldForm], 
      TagBox["\<\"B4\"\>",
       HoldForm], 
      TagBox["\<\"B5\"\>",
       HoldForm], 
      TagBox["\<\"B6\"\>",
       HoldForm], 
      TagBox["\<\"B7\"\>",
       HoldForm], 
      TagBox["\<\"B8\"\>",
       HoldForm], 
      TagBox["\<\"B9\"\>",
       HoldForm], 
      TagBox["\<\"B10\"\>",
       HoldForm], 
      TagBox["\<\"B11\"\>",
       HoldForm], 
      TagBox["\<\"B12\"\>",
       HoldForm], 
      TagBox["\<\"B13\"\>",
       HoldForm], 
      TagBox["\<\"B14\"\>",
       HoldForm], 
      TagBox["\<\"B15\"\>",
       HoldForm], 
      TagBox["\<\"B16\"\>",
       HoldForm]},
     {
      TagBox["\<\"B1\"\>",
       HoldForm], "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1"},
     {
      TagBox["\<\"B2\"\>",
       HoldForm], "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1"},
     {
      TagBox["\<\"B3\"\>",
       HoldForm], "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1"},
     {
      TagBox["\<\"B4\"\>",
       HoldForm], "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1"},
     {
      TagBox["\<\"B5\"\>",
       HoldForm], "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1"},
     {
      TagBox["\<\"B6\"\>",
       HoldForm], "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1"},
     {
      TagBox["\<\"B7\"\>",
       HoldForm], "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1"},
     {
      TagBox["\<\"B8\"\>",
       HoldForm], "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1"},
     {
      TagBox["\<\"B9\"\>",
       HoldForm], "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1"},
     {
      TagBox["\<\"B10\"\>",
       HoldForm], "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1"},
     {
      TagBox["\<\"B11\"\>",
       HoldForm], "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1"},
     {
      TagBox["\<\"B12\"\>",
       HoldForm], "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1"},
     {
      TagBox["\<\"B13\"\>",
       HoldForm], "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1"},
     {
      TagBox["\<\"B14\"\>",
       HoldForm], "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1"},
     {
      TagBox["\<\"B15\"\>",
       HoldForm], "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1"},
     {
      TagBox["\<\"B16\"\>",
       HoldForm], "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableAlignments -> Center, 
    TableHeadings -> {{
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}, {
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}}]]]], "Print",
 CellChangeTimes->{3.852312023078417*^9, 3.8523220926161222`*^9},
 CellLabel->
  "During evaluation of \
In[585]:=",ExpressionUUID->"caafe116-bb4e-4284-be80-f7338d9eea4a"],

Cell[BoxData[
 StyleBox["\<\"B16\"\>",
  StripOnInput->False,
  LineColor->RGBColor[1, 0, 0],
  FrontFaceColor->RGBColor[1, 0, 0],
  BackFaceColor->RGBColor[1, 0, 0],
  GraphicsColor->RGBColor[1, 0, 0],
  FontSize->18,
  FontColor->RGBColor[1, 0, 0]]], "Print",
 CellChangeTimes->{3.852312023078417*^9, 3.8523220926382647`*^9},
 CellLabel->
  "During evaluation of \
In[585]:=",ExpressionUUID->"bd2833ea-4748-4458-b427-69c149415d93"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"B1\"\>",
       HoldForm], 
      TagBox["\<\"B2\"\>",
       HoldForm], 
      TagBox["\<\"B3\"\>",
       HoldForm], 
      TagBox["\<\"B4\"\>",
       HoldForm], 
      TagBox["\<\"B5\"\>",
       HoldForm], 
      TagBox["\<\"B6\"\>",
       HoldForm], 
      TagBox["\<\"B7\"\>",
       HoldForm], 
      TagBox["\<\"B8\"\>",
       HoldForm], 
      TagBox["\<\"B9\"\>",
       HoldForm], 
      TagBox["\<\"B10\"\>",
       HoldForm], 
      TagBox["\<\"B11\"\>",
       HoldForm], 
      TagBox["\<\"B12\"\>",
       HoldForm], 
      TagBox["\<\"B13\"\>",
       HoldForm], 
      TagBox["\<\"B14\"\>",
       HoldForm], 
      TagBox["\<\"B15\"\>",
       HoldForm], 
      TagBox["\<\"B16\"\>",
       HoldForm]},
     {
      TagBox["\<\"B1\"\>",
       HoldForm], "16", "16", "16", "16", "16", "16", "16", "16", "16", "16", 
      "16", "16", "16", "16", "16", "16"},
     {
      TagBox["\<\"B2\"\>",
       HoldForm], "16", "16", "16", "16", "16", "16", "16", "16", "16", "16", 
      "16", "16", "16", "16", "16", "16"},
     {
      TagBox["\<\"B3\"\>",
       HoldForm], "16", "16", "16", "16", "16", "16", "16", "16", "16", "16", 
      "16", "16", "16", "16", "16", "16"},
     {
      TagBox["\<\"B4\"\>",
       HoldForm], "16", "16", "16", "16", "16", "16", "16", "16", "16", "16", 
      "16", "16", "16", "16", "16", "16"},
     {
      TagBox["\<\"B5\"\>",
       HoldForm], "16", "16", "16", "16", "16", "16", "16", "16", "16", "16", 
      "16", "16", "16", "16", "16", "16"},
     {
      TagBox["\<\"B6\"\>",
       HoldForm], "16", "16", "16", "16", "16", "16", "16", "16", "16", "16", 
      "16", "16", "16", "16", "16", "16"},
     {
      TagBox["\<\"B7\"\>",
       HoldForm], "16", "16", "16", "16", "16", "16", "16", "16", "16", "16", 
      "16", "16", "16", "16", "16", "16"},
     {
      TagBox["\<\"B8\"\>",
       HoldForm], "16", "16", "16", "16", "16", "16", "16", "16", "16", "16", 
      "16", "16", "16", "16", "16", "16"},
     {
      TagBox["\<\"B9\"\>",
       HoldForm], "16", "16", "16", "16", "16", "16", "16", "16", "16", "16", 
      "16", "16", "16", "16", "16", "16"},
     {
      TagBox["\<\"B10\"\>",
       HoldForm], "16", "16", "16", "16", "16", "16", "16", "16", "16", "16", 
      "16", "16", "16", "16", "16", "16"},
     {
      TagBox["\<\"B11\"\>",
       HoldForm], "16", "16", "16", "16", "16", "16", "16", "16", "16", "16", 
      "16", "16", "16", "16", "16", "16"},
     {
      TagBox["\<\"B12\"\>",
       HoldForm], "16", "16", "16", "16", "16", "16", "16", "16", "16", "16", 
      "16", "16", "16", "16", "16", "16"},
     {
      TagBox["\<\"B13\"\>",
       HoldForm], "16", "16", "16", "16", "16", "16", "16", "16", "16", "16", 
      "16", "16", "16", "16", "16", "16"},
     {
      TagBox["\<\"B14\"\>",
       HoldForm], "16", "16", "16", "16", "16", "16", "16", "16", "16", "16", 
      "16", "16", "16", "16", "16", "16"},
     {
      TagBox["\<\"B15\"\>",
       HoldForm], "16", "16", "16", "16", "16", "16", "16", "16", "16", "16", 
      "16", "16", "16", "16", "16", "16"},
     {
      TagBox["\<\"B16\"\>",
       HoldForm], "16", "16", "16", "16", "16", "16", "16", "16", "16", "16", 
      "16", "16", "16", "16", "16", "16"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableAlignments -> Center, 
    TableHeadings -> {{
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}, {
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}}]]]], "Print",
 CellChangeTimes->{3.852312023078417*^9, 3.852322092669544*^9},
 CellLabel->
  "During evaluation of \
In[585]:=",ExpressionUUID->"8eda4ee6-7ea9-49de-adfa-e3e080aec080"]
}, Open  ]]
}, Open  ]],

Cell["\<\
\tJest to przyk\[LSlash]ad trywialny - ka\:017cde zdanie utworzone za pomoc\
\:0105 sp\[OAcute]jnika B1 jest fa\[LSlash]szywe, a za pomoc\:0105 B16 - \
prawdziwe. Nie mo\:017cemy wi\:0119c za ich pomoc\:0105 uzyska\[CAcute] \
\:017cadnego innego sp\[OAcute]jnika.\
\>", "Text",
 CellChangeTimes->{{3.8523120612285767`*^9, 
  3.8523122311227546`*^9}},ExpressionUUID->"cf20a5ac-8cdf-4f99-b2a9-\
5886f3a9e222"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Wypisz", "[", "2", "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.852312604857987*^9, 3.852312613487386*^9}, 
   3.8523126683641844`*^9},
 CellLabel->
  "In[586]:=",ExpressionUUID->"0efbd676-c820-4fc5-bc55-5b77ca3a84a1"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"B2\"\>",
  StripOnInput->False,
  LineColor->RGBColor[1, 0, 0],
  FrontFaceColor->RGBColor[1, 0, 0],
  BackFaceColor->RGBColor[1, 0, 0],
  GraphicsColor->RGBColor[1, 0, 0],
  FontSize->18,
  FontColor->RGBColor[1, 0, 0]]], "Print",
 CellChangeTimes->{3.8523126159643106`*^9, 3.852312675756338*^9, 
  3.8523220959631042`*^9},
 CellLabel->
  "During evaluation of \
In[586]:=",ExpressionUUID->"536bd0dd-034a-48d7-959d-7301e119de4b"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"B1\"\>",
       HoldForm], 
      TagBox["\<\"B2\"\>",
       HoldForm], 
      TagBox["\<\"B3\"\>",
       HoldForm], 
      TagBox["\<\"B4\"\>",
       HoldForm], 
      TagBox["\<\"B5\"\>",
       HoldForm], 
      TagBox["\<\"B6\"\>",
       HoldForm], 
      TagBox["\<\"B7\"\>",
       HoldForm], 
      TagBox["\<\"B8\"\>",
       HoldForm], 
      TagBox["\<\"B9\"\>",
       HoldForm], 
      TagBox["\<\"B10\"\>",
       HoldForm], 
      TagBox["\<\"B11\"\>",
       HoldForm], 
      TagBox["\<\"B12\"\>",
       HoldForm], 
      TagBox["\<\"B13\"\>",
       HoldForm], 
      TagBox["\<\"B14\"\>",
       HoldForm], 
      TagBox["\<\"B15\"\>",
       HoldForm], 
      TagBox["\<\"B16\"\>",
       HoldForm]},
     {
      TagBox["\<\"B1\"\>",
       HoldForm], "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1"},
     {
      TagBox["\<\"B2\"\>",
       HoldForm], "1", "2", "1", "2", "1", "2", "1", "2", "1", "2", "1", "2", 
      "1", "2", "1", "2"},
     {
      TagBox["\<\"B3\"\>",
       HoldForm], "1", "1", "3", "3", "1", "1", "3", "3", "1", "1", "3", "3", 
      "1", "1", "3", "3"},
     {
      TagBox["\<\"B4\"\>",
       HoldForm], "1", "2", "3", "4", "1", "2", "3", "4", "1", "2", "3", "4", 
      "1", "2", "3", "4"},
     {
      TagBox["\<\"B5\"\>",
       HoldForm], "1", "1", "1", "1", "5", "5", "5", "5", "1", "1", "1", "1", 
      "5", "5", "5", "5"},
     {
      TagBox["\<\"B6\"\>",
       HoldForm], "1", "2", "1", "2", "5", "6", "5", "6", "1", "2", "1", "2", 
      "5", "6", "5", "6"},
     {
      TagBox["\<\"B7\"\>",
       HoldForm], "1", "1", "3", "3", "5", "5", "7", "7", "1", "1", "3", "3", 
      "5", "5", "7", "7"},
     {
      TagBox["\<\"B8\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "1", "2", "3", "4", 
      "5", "6", "7", "8"},
     {
      TagBox["\<\"B9\"\>",
       HoldForm], "1", "1", "1", "1", "1", "1", "1", "1", "9", "9", "9", "9", 
      "9", "9", "9", "9"},
     {
      TagBox["\<\"B10\"\>",
       HoldForm], "1", "2", "1", "2", "1", "2", "1", "2", "9", "10", "9", 
      "10", "9", "10", "9", "10"},
     {
      TagBox["\<\"B11\"\>",
       HoldForm], "1", "1", "3", "3", "1", "1", "3", "3", "9", "9", "11", 
      "11", "9", "9", "11", "11"},
     {
      TagBox["\<\"B12\"\>",
       HoldForm], "1", "2", "3", "4", "1", "2", "3", "4", "9", "10", "11", 
      "12", "9", "10", "11", "12"},
     {
      TagBox["\<\"B13\"\>",
       HoldForm], "1", "1", "1", "1", "5", "5", "5", "5", "9", "9", "9", "9", 
      "13", "13", "13", "13"},
     {
      TagBox["\<\"B14\"\>",
       HoldForm], "1", "2", "1", "2", "5", "6", "5", "6", "9", "10", "9", 
      "10", "13", "14", "13", "14"},
     {
      TagBox["\<\"B15\"\>",
       HoldForm], "1", "1", "3", "3", "5", "5", "7", "7", "9", "9", "11", 
      "11", "13", "13", "15", "15"},
     {
      TagBox["\<\"B16\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableAlignments -> Center, 
    TableHeadings -> {{
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}, {
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}}]]]], "Print",
 CellChangeTimes->{3.8523126159643106`*^9, 3.852312675756338*^9, 
  3.8523220960099707`*^9},
 CellLabel->
  "During evaluation of \
In[586]:=",ExpressionUUID->"b554b2ab-fa0f-40ff-8144-932bf38fe0e6"]
}, Open  ]]
}, Open  ]],

Cell["\<\
\tFunktor B16 mo\:017cemy zdefiniowa\[CAcute] tylko za pomoc\:0105 \
z\[LSlash]o\:017cenia B2(B16,B16). Tak wi\:0119c nie mo\:017cemy go uzyska\
\[CAcute] pos\[LSlash]uguj\:0105c si\:0119 jedynie funktorem B2.\
\>", "Text",
 CellChangeTimes->{{3.852312682108937*^9, 
  3.852312953566847*^9}},ExpressionUUID->"e782e98f-3896-455e-9d26-\
6b2a8d869dab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Wypisz", "[", "8", "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.8523129637403984`*^9, 3.8523129755985303`*^9}},
 CellLabel->
  "In[587]:=",ExpressionUUID->"0cee2c06-015f-46e0-9397-a88dda296dae"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"B8\"\>",
  StripOnInput->False,
  LineColor->RGBColor[1, 0, 0],
  FrontFaceColor->RGBColor[1, 0, 0],
  BackFaceColor->RGBColor[1, 0, 0],
  GraphicsColor->RGBColor[1, 0, 0],
  FontSize->18,
  FontColor->RGBColor[1, 0, 0]]], "Print",
 CellChangeTimes->{3.852312976200435*^9, 3.8523220991198683`*^9},
 CellLabel->
  "During evaluation of \
In[587]:=",ExpressionUUID->"a90addb8-0b28-4bba-a20a-0b5634d0c757"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"B1\"\>",
       HoldForm], 
      TagBox["\<\"B2\"\>",
       HoldForm], 
      TagBox["\<\"B3\"\>",
       HoldForm], 
      TagBox["\<\"B4\"\>",
       HoldForm], 
      TagBox["\<\"B5\"\>",
       HoldForm], 
      TagBox["\<\"B6\"\>",
       HoldForm], 
      TagBox["\<\"B7\"\>",
       HoldForm], 
      TagBox["\<\"B8\"\>",
       HoldForm], 
      TagBox["\<\"B9\"\>",
       HoldForm], 
      TagBox["\<\"B10\"\>",
       HoldForm], 
      TagBox["\<\"B11\"\>",
       HoldForm], 
      TagBox["\<\"B12\"\>",
       HoldForm], 
      TagBox["\<\"B13\"\>",
       HoldForm], 
      TagBox["\<\"B14\"\>",
       HoldForm], 
      TagBox["\<\"B15\"\>",
       HoldForm], 
      TagBox["\<\"B16\"\>",
       HoldForm]},
     {
      TagBox["\<\"B1\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B2\"\>",
       HoldForm], "2", "2", "4", "4", "6", "6", "8", "8", "10", "10", "12", 
      "12", "14", "14", "16", "16"},
     {
      TagBox["\<\"B3\"\>",
       HoldForm], "3", "4", "3", "4", "7", "8", "7", "8", "11", "12", "11", 
      "12", "15", "16", "15", "16"},
     {
      TagBox["\<\"B4\"\>",
       HoldForm], "4", "4", "4", "4", "8", "8", "8", "8", "12", "12", "12", 
      "12", "16", "16", "16", "16"},
     {
      TagBox["\<\"B5\"\>",
       HoldForm], "5", "6", "7", "8", "5", "6", "7", "8", "13", "14", "15", 
      "16", "13", "14", "15", "16"},
     {
      TagBox["\<\"B6\"\>",
       HoldForm], "6", "6", "8", "8", "6", "6", "8", "8", "14", "14", "16", 
      "16", "14", "14", "16", "16"},
     {
      TagBox["\<\"B7\"\>",
       HoldForm], "7", "8", "7", "8", "7", "8", "7", "8", "15", "16", "15", 
      "16", "15", "16", "15", "16"},
     {
      TagBox["\<\"B8\"\>",
       HoldForm], "8", "8", "8", "8", "8", "8", "8", "8", "16", "16", "16", 
      "16", "16", "16", "16", "16"},
     {
      TagBox["\<\"B9\"\>",
       HoldForm], "9", "10", "11", "12", "13", "14", "15", "16", "9", "10", 
      "11", "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B10\"\>",
       HoldForm], "10", "10", "12", "12", "14", "14", "16", "16", "10", "10", 
      "12", "12", "14", "14", "16", "16"},
     {
      TagBox["\<\"B11\"\>",
       HoldForm], "11", "12", "11", "12", "15", "16", "15", "16", "11", "12", 
      "11", "12", "15", "16", "15", "16"},
     {
      TagBox["\<\"B12\"\>",
       HoldForm], "12", "12", "12", "12", "16", "16", "16", "16", "12", "12", 
      "12", "12", "16", "16", "16", "16"},
     {
      TagBox["\<\"B13\"\>",
       HoldForm], "13", "14", "15", "16", "13", "14", "15", "16", "13", "14", 
      "15", "16", "13", "14", "15", "16"},
     {
      TagBox["\<\"B14\"\>",
       HoldForm], "14", "14", "16", "16", "14", "14", "16", "16", "14", "14", 
      "16", "16", "14", "14", "16", "16"},
     {
      TagBox["\<\"B15\"\>",
       HoldForm], "15", "16", "15", "16", "15", "16", "15", "16", "15", "16", 
      "15", "16", "15", "16", "15", "16"},
     {
      TagBox["\<\"B16\"\>",
       HoldForm], "16", "16", "16", "16", "16", "16", "16", "16", "16", "16", 
      "16", "16", "16", "16", "16", "16"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableAlignments -> Center, 
    TableHeadings -> {{
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}, {
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}}]]]], "Print",
 CellChangeTimes->{3.852312976200435*^9, 3.8523220991732693`*^9},
 CellLabel->
  "During evaluation of \
In[587]:=",ExpressionUUID->"855a0fc8-8415-4a68-a88a-84e8d70d7520"]
}, Open  ]]
}, Open  ]],

Cell["\<\
\tSytuacja jak wy\:017cej, tym razem nie jeste\:015bmy w stanie uzyska\
\[CAcute] funktora B1. \
\>", "Text",
 CellChangeTimes->{{3.852312982869491*^9, 
  3.852313048626877*^9}},ExpressionUUID->"80eff861-6d0a-4ccf-9fcd-\
168ffd2486a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Wypisz", "[", "3", "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.8523131154858027`*^9, 3.852313118834544*^9}},
 CellLabel->
  "In[588]:=",ExpressionUUID->"ec7c0e9e-4e66-4e08-9eaa-b3bf8b266da3"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"B3\"\>",
  StripOnInput->False,
  LineColor->RGBColor[1, 0, 0],
  FrontFaceColor->RGBColor[1, 0, 0],
  BackFaceColor->RGBColor[1, 0, 0],
  GraphicsColor->RGBColor[1, 0, 0],
  FontSize->18,
  FontColor->RGBColor[1, 0, 0]]], "Print",
 CellChangeTimes->{3.8523131201176243`*^9, 3.852322109493146*^9},
 CellLabel->
  "During evaluation of \
In[588]:=",ExpressionUUID->"742b2701-3b89-48d3-aa80-a0125cb74f7c"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"B1\"\>",
       HoldForm], 
      TagBox["\<\"B2\"\>",
       HoldForm], 
      TagBox["\<\"B3\"\>",
       HoldForm], 
      TagBox["\<\"B4\"\>",
       HoldForm], 
      TagBox["\<\"B5\"\>",
       HoldForm], 
      TagBox["\<\"B6\"\>",
       HoldForm], 
      TagBox["\<\"B7\"\>",
       HoldForm], 
      TagBox["\<\"B8\"\>",
       HoldForm], 
      TagBox["\<\"B9\"\>",
       HoldForm], 
      TagBox["\<\"B10\"\>",
       HoldForm], 
      TagBox["\<\"B11\"\>",
       HoldForm], 
      TagBox["\<\"B12\"\>",
       HoldForm], 
      TagBox["\<\"B13\"\>",
       HoldForm], 
      TagBox["\<\"B14\"\>",
       HoldForm], 
      TagBox["\<\"B15\"\>",
       HoldForm], 
      TagBox["\<\"B16\"\>",
       HoldForm]},
     {
      TagBox["\<\"B1\"\>",
       HoldForm], "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1"},
     {
      TagBox["\<\"B2\"\>",
       HoldForm], "2", "1", "2", "1", "2", "1", "2", "1", "2", "1", "2", "1", 
      "2", "1", "2", "1"},
     {
      TagBox["\<\"B3\"\>",
       HoldForm], "3", "3", "1", "1", "3", "3", "1", "1", "3", "3", "1", "1", 
      "3", "3", "1", "1"},
     {
      TagBox["\<\"B4\"\>",
       HoldForm], "4", "3", "2", "1", "4", "3", "2", "1", "4", "3", "2", "1", 
      "4", "3", "2", "1"},
     {
      TagBox["\<\"B5\"\>",
       HoldForm], "5", "5", "5", "5", "1", "1", "1", "1", "5", "5", "5", "5", 
      "1", "1", "1", "1"},
     {
      TagBox["\<\"B6\"\>",
       HoldForm], "6", "5", "6", "5", "2", "1", "2", "1", "6", "5", "6", "5", 
      "2", "1", "2", "1"},
     {
      TagBox["\<\"B7\"\>",
       HoldForm], "7", "7", "5", "5", "3", "3", "1", "1", "7", "7", "5", "5", 
      "3", "3", "1", "1"},
     {
      TagBox["\<\"B8\"\>",
       HoldForm], "8", "7", "6", "5", "4", "3", "2", "1", "8", "7", "6", "5", 
      "4", "3", "2", "1"},
     {
      TagBox["\<\"B9\"\>",
       HoldForm], "9", "9", "9", "9", "9", "9", "9", "9", "1", "1", "1", "1", 
      "1", "1", "1", "1"},
     {
      TagBox["\<\"B10\"\>",
       HoldForm], "10", "9", "10", "9", "10", "9", "10", "9", "2", "1", "2", 
      "1", "2", "1", "2", "1"},
     {
      TagBox["\<\"B11\"\>",
       HoldForm], "11", "11", "9", "9", "11", "11", "9", "9", "3", "3", "1", 
      "1", "3", "3", "1", "1"},
     {
      TagBox["\<\"B12\"\>",
       HoldForm], "12", "11", "10", "9", "12", "11", "10", "9", "4", "3", "2",
       "1", "4", "3", "2", "1"},
     {
      TagBox["\<\"B13\"\>",
       HoldForm], "13", "13", "13", "13", "9", "9", "9", "9", "5", "5", "5", 
      "5", "1", "1", "1", "1"},
     {
      TagBox["\<\"B14\"\>",
       HoldForm], "14", "13", "14", "13", "10", "9", "10", "9", "6", "5", "6",
       "5", "2", "1", "2", "1"},
     {
      TagBox["\<\"B15\"\>",
       HoldForm], "15", "15", "13", "13", "11", "11", "9", "9", "7", "7", "5",
       "5", "3", "3", "1", "1"},
     {
      TagBox["\<\"B16\"\>",
       HoldForm], "16", "15", "14", "13", "12", "11", "10", "9", "8", "7", 
      "6", "5", "4", "3", "2", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableAlignments -> Center, 
    TableHeadings -> {{
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}, {
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}}]]]], "Print",
 CellChangeTimes->{3.8523131201176243`*^9, 3.8523221095400496`*^9},
 CellLabel->
  "During evaluation of \
In[588]:=",ExpressionUUID->"5ed4ae84-1977-412c-9f94-f8f038d75a4a"]
}, Open  ]]
}, Open  ]],

Cell["\<\
\tB16 odpowiada z\[LSlash]o\:017ceniu B3(B16,B1), a wi\:0119c jest \
zale\:017cny od samego siebie -- nie mo\:017cemy go uzyska\[CAcute] za pomoc\
\:0105 B3.\
\>", "Text",
 CellChangeTimes->{{3.85231314486847*^9, 
  3.8523132326104813`*^9}},ExpressionUUID->"8a05623d-51a7-492a-ac0c-\
175c9e89904f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Wypisz", "[", "5", "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.852313238530219*^9, 3.852313240118922*^9}, {
  3.852313470436366*^9, 3.8523134749304314`*^9}},
 CellLabel->
  "In[589]:=",ExpressionUUID->"6fcd3fb9-2737-42fb-b8ef-460e9ea97def"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"B5\"\>",
  StripOnInput->False,
  LineColor->RGBColor[1, 0, 0],
  FrontFaceColor->RGBColor[1, 0, 0],
  BackFaceColor->RGBColor[1, 0, 0],
  GraphicsColor->RGBColor[1, 0, 0],
  FontSize->18,
  FontColor->RGBColor[1, 0, 0]]], "Print",
 CellChangeTimes->{3.8523134761039667`*^9, 3.852322113654173*^9},
 CellLabel->
  "During evaluation of \
In[589]:=",ExpressionUUID->"f5964001-ed0b-4884-8e0a-34607d9cd853"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"B1\"\>",
       HoldForm], 
      TagBox["\<\"B2\"\>",
       HoldForm], 
      TagBox["\<\"B3\"\>",
       HoldForm], 
      TagBox["\<\"B4\"\>",
       HoldForm], 
      TagBox["\<\"B5\"\>",
       HoldForm], 
      TagBox["\<\"B6\"\>",
       HoldForm], 
      TagBox["\<\"B7\"\>",
       HoldForm], 
      TagBox["\<\"B8\"\>",
       HoldForm], 
      TagBox["\<\"B9\"\>",
       HoldForm], 
      TagBox["\<\"B10\"\>",
       HoldForm], 
      TagBox["\<\"B11\"\>",
       HoldForm], 
      TagBox["\<\"B12\"\>",
       HoldForm], 
      TagBox["\<\"B13\"\>",
       HoldForm], 
      TagBox["\<\"B14\"\>",
       HoldForm], 
      TagBox["\<\"B15\"\>",
       HoldForm], 
      TagBox["\<\"B16\"\>",
       HoldForm]},
     {
      TagBox["\<\"B1\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B2\"\>",
       HoldForm], "1", "1", "3", "3", "5", "5", "7", "7", "9", "9", "11", 
      "11", "13", "13", "15", "15"},
     {
      TagBox["\<\"B3\"\>",
       HoldForm], "1", "2", "1", "2", "5", "6", "5", "6", "9", "10", "9", 
      "10", "13", "14", "13", "14"},
     {
      TagBox["\<\"B4\"\>",
       HoldForm], "1", "1", "1", "1", "5", "5", "5", "5", "9", "9", "9", "9", 
      "13", "13", "13", "13"},
     {
      TagBox["\<\"B5\"\>",
       HoldForm], "1", "2", "3", "4", "1", "2", "3", "4", "9", "10", "11", 
      "12", "9", "10", "11", "12"},
     {
      TagBox["\<\"B6\"\>",
       HoldForm], "1", "1", "3", "3", "1", "1", "3", "3", "9", "9", "11", 
      "11", "9", "9", "11", "11"},
     {
      TagBox["\<\"B7\"\>",
       HoldForm], "1", "2", "1", "2", "1", "2", "1", "2", "9", "10", "9", 
      "10", "9", "10", "9", "10"},
     {
      TagBox["\<\"B8\"\>",
       HoldForm], "1", "1", "1", "1", "1", "1", "1", "1", "9", "9", "9", "9", 
      "9", "9", "9", "9"},
     {
      TagBox["\<\"B9\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "1", "2", "3", "4", 
      "5", "6", "7", "8"},
     {
      TagBox["\<\"B10\"\>",
       HoldForm], "1", "1", "3", "3", "5", "5", "7", "7", "1", "1", "3", "3", 
      "5", "5", "7", "7"},
     {
      TagBox["\<\"B11\"\>",
       HoldForm], "1", "2", "1", "2", "5", "6", "5", "6", "1", "2", "1", "2", 
      "5", "6", "5", "6"},
     {
      TagBox["\<\"B12\"\>",
       HoldForm], "1", "1", "1", "1", "5", "5", "5", "5", "1", "1", "1", "1", 
      "5", "5", "5", "5"},
     {
      TagBox["\<\"B13\"\>",
       HoldForm], "1", "2", "3", "4", "1", "2", "3", "4", "1", "2", "3", "4", 
      "1", "2", "3", "4"},
     {
      TagBox["\<\"B14\"\>",
       HoldForm], "1", "1", "3", "3", "1", "1", "3", "3", "1", "1", "3", "3", 
      "1", "1", "3", "3"},
     {
      TagBox["\<\"B15\"\>",
       HoldForm], "1", "2", "1", "2", "1", "2", "1", "2", "1", "2", "1", "2", 
      "1", "2", "1", "2"},
     {
      TagBox["\<\"B16\"\>",
       HoldForm], "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableAlignments -> Center, 
    TableHeadings -> {{
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}, {
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}}]]]], "Print",
 CellChangeTimes->{3.8523134761039667`*^9, 3.8523221137073526`*^9},
 CellLabel->
  "During evaluation of \
In[589]:=",ExpressionUUID->"66f44f2f-7f64-4d42-be58-6ba69b2d7fb1"]
}, Open  ]]
}, Open  ]],

Cell["\<\
\tB16 odpowiada z\[LSlash]o\:017ceniu B5(B1,B16), a wi\:0119c jest \
zale\:017cny od samego siebie -- nie mo\:017cemy go uzyska\[CAcute] za pomoc\
\:0105 B5.\
\>", "Text",
 CellChangeTimes->{{3.852313484083911*^9, 
  3.852313519459983*^9}},ExpressionUUID->"2d3424b5-dcd2-449d-b974-\
9f45ef5d3ffe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Wypisz", "[", "12", "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.852313527940432*^9, 3.8523135428909016`*^9}},
 CellLabel->
  "In[590]:=",ExpressionUUID->"e3562b33-4c9d-4e8a-983e-dcc4e0e9268d"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"B12\"\>",
  StripOnInput->False,
  LineColor->RGBColor[1, 0, 0],
  FrontFaceColor->RGBColor[1, 0, 0],
  BackFaceColor->RGBColor[1, 0, 0],
  GraphicsColor->RGBColor[1, 0, 0],
  FontSize->18,
  FontColor->RGBColor[1, 0, 0]]], "Print",
 CellChangeTimes->{3.852313543793946*^9, 3.8523221159623194`*^9},
 CellLabel->
  "During evaluation of \
In[590]:=",ExpressionUUID->"6bdeb98c-a1a7-4cca-b54e-50894f49e372"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"B1\"\>",
       HoldForm], 
      TagBox["\<\"B2\"\>",
       HoldForm], 
      TagBox["\<\"B3\"\>",
       HoldForm], 
      TagBox["\<\"B4\"\>",
       HoldForm], 
      TagBox["\<\"B5\"\>",
       HoldForm], 
      TagBox["\<\"B6\"\>",
       HoldForm], 
      TagBox["\<\"B7\"\>",
       HoldForm], 
      TagBox["\<\"B8\"\>",
       HoldForm], 
      TagBox["\<\"B9\"\>",
       HoldForm], 
      TagBox["\<\"B10\"\>",
       HoldForm], 
      TagBox["\<\"B11\"\>",
       HoldForm], 
      TagBox["\<\"B12\"\>",
       HoldForm], 
      TagBox["\<\"B13\"\>",
       HoldForm], 
      TagBox["\<\"B14\"\>",
       HoldForm], 
      TagBox["\<\"B15\"\>",
       HoldForm], 
      TagBox["\<\"B16\"\>",
       HoldForm]},
     {
      TagBox["\<\"B1\"\>",
       HoldForm], "16", "15", "14", "13", "12", "11", "10", "9", "8", "7", 
      "6", "5", "4", "3", "2", "1"},
     {
      TagBox["\<\"B2\"\>",
       HoldForm], "16", "16", "14", "14", "12", "12", "10", "10", "8", "8", 
      "6", "6", "4", "4", "2", "2"},
     {
      TagBox["\<\"B3\"\>",
       HoldForm], "16", "15", "16", "15", "12", "11", "12", "11", "8", "7", 
      "8", "7", "4", "3", "4", "3"},
     {
      TagBox["\<\"B4\"\>",
       HoldForm], "16", "16", "16", "16", "12", "12", "12", "12", "8", "8", 
      "8", "8", "4", "4", "4", "4"},
     {
      TagBox["\<\"B5\"\>",
       HoldForm], "16", "15", "14", "13", "16", "15", "14", "13", "8", "7", 
      "6", "5", "8", "7", "6", "5"},
     {
      TagBox["\<\"B6\"\>",
       HoldForm], "16", "16", "14", "14", "16", "16", "14", "14", "8", "8", 
      "6", "6", "8", "8", "6", "6"},
     {
      TagBox["\<\"B7\"\>",
       HoldForm], "16", "15", "16", "15", "16", "15", "16", "15", "8", "7", 
      "8", "7", "8", "7", "8", "7"},
     {
      TagBox["\<\"B8\"\>",
       HoldForm], "16", "16", "16", "16", "16", "16", "16", "16", "8", "8", 
      "8", "8", "8", "8", "8", "8"},
     {
      TagBox["\<\"B9\"\>",
       HoldForm], "16", "15", "14", "13", "12", "11", "10", "9", "16", "15", 
      "14", "13", "12", "11", "10", "9"},
     {
      TagBox["\<\"B10\"\>",
       HoldForm], "16", "16", "14", "14", "12", "12", "10", "10", "16", "16", 
      "14", "14", "12", "12", "10", "10"},
     {
      TagBox["\<\"B11\"\>",
       HoldForm], "16", "15", "16", "15", "12", "11", "12", "11", "16", "15", 
      "16", "15", "12", "11", "12", "11"},
     {
      TagBox["\<\"B12\"\>",
       HoldForm], "16", "16", "16", "16", "12", "12", "12", "12", "16", "16", 
      "16", "16", "12", "12", "12", "12"},
     {
      TagBox["\<\"B13\"\>",
       HoldForm], "16", "15", "14", "13", "16", "15", "14", "13", "16", "15", 
      "14", "13", "16", "15", "14", "13"},
     {
      TagBox["\<\"B14\"\>",
       HoldForm], "16", "16", "14", "14", "16", "16", "14", "14", "16", "16", 
      "14", "14", "16", "16", "14", "14"},
     {
      TagBox["\<\"B15\"\>",
       HoldForm], "16", "15", "16", "15", "16", "15", "16", "15", "16", "15", 
      "16", "15", "16", "15", "16", "15"},
     {
      TagBox["\<\"B16\"\>",
       HoldForm], "16", "16", "16", "16", "16", "16", "16", "16", "16", "16", 
      "16", "16", "16", "16", "16", "16"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableAlignments -> Center, 
    TableHeadings -> {{
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}, {
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}}]]]], "Print",
 CellChangeTimes->{3.852313543793946*^9, 3.852322116015708*^9},
 CellLabel->
  "During evaluation of \
In[590]:=",ExpressionUUID->"47c19cf2-ce96-430a-a345-cf4109382deb"]
}, Open  ]]
}, Open  ]],

Cell["\<\
\tB1 odpowiada z\[LSlash]o\:017ceniu B12(B1,B16), a wi\:0119c jest \
zale\:017cny od samego siebie -- nie mo\:017cemy go uzyska\[CAcute] za pomoc\
\:0105 B12.\
\>", "Text",
 CellChangeTimes->{{3.852313552106736*^9, 
  3.8523135848109694`*^9}},ExpressionUUID->"f3ef7394-28bf-4831-bc8c-\
a8f8b732246d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Wypisz", "[", "14", "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.8523135885067816`*^9, 3.8523135961884336`*^9}},
 CellLabel->
  "In[591]:=",ExpressionUUID->"b770089b-3f40-4bd0-ad01-5636ddc26c88"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"B14\"\>",
  StripOnInput->False,
  LineColor->RGBColor[1, 0, 0],
  FrontFaceColor->RGBColor[1, 0, 0],
  BackFaceColor->RGBColor[1, 0, 0],
  GraphicsColor->RGBColor[1, 0, 0],
  FontSize->18,
  FontColor->RGBColor[1, 0, 0]]], "Print",
 CellChangeTimes->{3.852313596821045*^9, 3.852322120244135*^9},
 CellLabel->
  "During evaluation of \
In[591]:=",ExpressionUUID->"be85c334-dc38-4e6f-af92-4992c8d858c4"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"B1\"\>",
       HoldForm], 
      TagBox["\<\"B2\"\>",
       HoldForm], 
      TagBox["\<\"B3\"\>",
       HoldForm], 
      TagBox["\<\"B4\"\>",
       HoldForm], 
      TagBox["\<\"B5\"\>",
       HoldForm], 
      TagBox["\<\"B6\"\>",
       HoldForm], 
      TagBox["\<\"B7\"\>",
       HoldForm], 
      TagBox["\<\"B8\"\>",
       HoldForm], 
      TagBox["\<\"B9\"\>",
       HoldForm], 
      TagBox["\<\"B10\"\>",
       HoldForm], 
      TagBox["\<\"B11\"\>",
       HoldForm], 
      TagBox["\<\"B12\"\>",
       HoldForm], 
      TagBox["\<\"B13\"\>",
       HoldForm], 
      TagBox["\<\"B14\"\>",
       HoldForm], 
      TagBox["\<\"B15\"\>",
       HoldForm], 
      TagBox["\<\"B16\"\>",
       HoldForm]},
     {
      TagBox["\<\"B1\"\>",
       HoldForm], "16", "16", "16", "16", "16", "16", "16", "16", "16", "16", 
      "16", "16", "16", "16", "16", "16"},
     {
      TagBox["\<\"B2\"\>",
       HoldForm], "15", "16", "15", "16", "15", "16", "15", "16", "15", "16", 
      "15", "16", "15", "16", "15", "16"},
     {
      TagBox["\<\"B3\"\>",
       HoldForm], "14", "14", "16", "16", "14", "14", "16", "16", "14", "14", 
      "16", "16", "14", "14", "16", "16"},
     {
      TagBox["\<\"B4\"\>",
       HoldForm], "13", "14", "15", "16", "13", "14", "15", "16", "13", "14", 
      "15", "16", "13", "14", "15", "16"},
     {
      TagBox["\<\"B5\"\>",
       HoldForm], "12", "12", "12", "12", "16", "16", "16", "16", "12", "12", 
      "12", "12", "16", "16", "16", "16"},
     {
      TagBox["\<\"B6\"\>",
       HoldForm], "11", "12", "11", "12", "15", "16", "15", "16", "11", "12", 
      "11", "12", "15", "16", "15", "16"},
     {
      TagBox["\<\"B7\"\>",
       HoldForm], "10", "10", "12", "12", "14", "14", "16", "16", "10", "10", 
      "12", "12", "14", "14", "16", "16"},
     {
      TagBox["\<\"B8\"\>",
       HoldForm], "9", "10", "11", "12", "13", "14", "15", "16", "9", "10", 
      "11", "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B9\"\>",
       HoldForm], "8", "8", "8", "8", "8", "8", "8", "8", "16", "16", "16", 
      "16", "16", "16", "16", "16"},
     {
      TagBox["\<\"B10\"\>",
       HoldForm], "7", "8", "7", "8", "7", "8", "7", "8", "15", "16", "15", 
      "16", "15", "16", "15", "16"},
     {
      TagBox["\<\"B11\"\>",
       HoldForm], "6", "6", "8", "8", "6", "6", "8", "8", "14", "14", "16", 
      "16", "14", "14", "16", "16"},
     {
      TagBox["\<\"B12\"\>",
       HoldForm], "5", "6", "7", "8", "5", "6", "7", "8", "13", "14", "15", 
      "16", "13", "14", "15", "16"},
     {
      TagBox["\<\"B13\"\>",
       HoldForm], "4", "4", "4", "4", "8", "8", "8", "8", "12", "12", "12", 
      "12", "16", "16", "16", "16"},
     {
      TagBox["\<\"B14\"\>",
       HoldForm], "3", "4", "3", "4", "7", "8", "7", "8", "11", "12", "11", 
      "12", "15", "16", "15", "16"},
     {
      TagBox["\<\"B15\"\>",
       HoldForm], "2", "2", "4", "4", "6", "6", "8", "8", "10", "10", "12", 
      "12", "14", "14", "16", "16"},
     {
      TagBox["\<\"B16\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableAlignments -> Center, 
    TableHeadings -> {{
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}, {
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}}]]]], "Print",
 CellChangeTimes->{3.852313596821045*^9, 3.852322120306259*^9},
 CellLabel->
  "During evaluation of \
In[591]:=",ExpressionUUID->"60810db6-f623-4d90-a10c-d725a9701d84"]
}, Open  ]]
}, Open  ]],

Cell["\<\
\tB1 odpowiada z\[LSlash]o\:017ceniu B14(B16,B1), a wi\:0119c jest \
zale\:017cny od samego siebie -- nie mo\:017cemy go uzyska\[CAcute] za pomoc\
\:0105 B14.\
\>", "Text",
 CellChangeTimes->{{3.852313625536066*^9, 3.8523136387486506`*^9}, {
  3.852313669066449*^9, 
  3.8523136731981707`*^9}},ExpressionUUID->"4ab4cc67-91e9-4153-b37b-\
a6d7f726faab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Wypisz", "[", "4", "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.8523136438129706`*^9, 3.852313661024688*^9}},
 CellLabel->
  "In[592]:=",ExpressionUUID->"04bacbb0-f26f-4fb6-8684-7c16d337c2cf"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"B4\"\>",
  StripOnInput->False,
  LineColor->RGBColor[1, 0, 0],
  FrontFaceColor->RGBColor[1, 0, 0],
  BackFaceColor->RGBColor[1, 0, 0],
  GraphicsColor->RGBColor[1, 0, 0],
  FontSize->18,
  FontColor->RGBColor[1, 0, 0]]], "Print",
 CellChangeTimes->{3.8523136619964867`*^9, 3.8523221235160084`*^9},
 CellLabel->
  "During evaluation of \
In[592]:=",ExpressionUUID->"2a06034f-98ce-4e17-b062-0a53f60571cb"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"B1\"\>",
       HoldForm], 
      TagBox["\<\"B2\"\>",
       HoldForm], 
      TagBox["\<\"B3\"\>",
       HoldForm], 
      TagBox["\<\"B4\"\>",
       HoldForm], 
      TagBox["\<\"B5\"\>",
       HoldForm], 
      TagBox["\<\"B6\"\>",
       HoldForm], 
      TagBox["\<\"B7\"\>",
       HoldForm], 
      TagBox["\<\"B8\"\>",
       HoldForm], 
      TagBox["\<\"B9\"\>",
       HoldForm], 
      TagBox["\<\"B10\"\>",
       HoldForm], 
      TagBox["\<\"B11\"\>",
       HoldForm], 
      TagBox["\<\"B12\"\>",
       HoldForm], 
      TagBox["\<\"B13\"\>",
       HoldForm], 
      TagBox["\<\"B14\"\>",
       HoldForm], 
      TagBox["\<\"B15\"\>",
       HoldForm], 
      TagBox["\<\"B16\"\>",
       HoldForm]},
     {
      TagBox["\<\"B1\"\>",
       HoldForm], "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1"},
     {
      TagBox["\<\"B2\"\>",
       HoldForm], "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", 
      "2", "2", "2", "2"},
     {
      TagBox["\<\"B3\"\>",
       HoldForm], "3", "3", "3", "3", "3", "3", "3", "3", "3", "3", "3", "3", 
      "3", "3", "3", "3"},
     {
      TagBox["\<\"B4\"\>",
       HoldForm], "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", 
      "4", "4", "4", "4"},
     {
      TagBox["\<\"B5\"\>",
       HoldForm], "5", "5", "5", "5", "5", "5", "5", "5", "5", "5", "5", "5", 
      "5", "5", "5", "5"},
     {
      TagBox["\<\"B6\"\>",
       HoldForm], "6", "6", "6", "6", "6", "6", "6", "6", "6", "6", "6", "6", 
      "6", "6", "6", "6"},
     {
      TagBox["\<\"B7\"\>",
       HoldForm], "7", "7", "7", "7", "7", "7", "7", "7", "7", "7", "7", "7", 
      "7", "7", "7", "7"},
     {
      TagBox["\<\"B8\"\>",
       HoldForm], "8", "8", "8", "8", "8", "8", "8", "8", "8", "8", "8", "8", 
      "8", "8", "8", "8"},
     {
      TagBox["\<\"B9\"\>",
       HoldForm], "9", "9", "9", "9", "9", "9", "9", "9", "9", "9", "9", "9", 
      "9", "9", "9", "9"},
     {
      TagBox["\<\"B10\"\>",
       HoldForm], "10", "10", "10", "10", "10", "10", "10", "10", "10", "10", 
      "10", "10", "10", "10", "10", "10"},
     {
      TagBox["\<\"B11\"\>",
       HoldForm], "11", "11", "11", "11", "11", "11", "11", "11", "11", "11", 
      "11", "11", "11", "11", "11", "11"},
     {
      TagBox["\<\"B12\"\>",
       HoldForm], "12", "12", "12", "12", "12", "12", "12", "12", "12", "12", 
      "12", "12", "12", "12", "12", "12"},
     {
      TagBox["\<\"B13\"\>",
       HoldForm], "13", "13", "13", "13", "13", "13", "13", "13", "13", "13", 
      "13", "13", "13", "13", "13", "13"},
     {
      TagBox["\<\"B14\"\>",
       HoldForm], "14", "14", "14", "14", "14", "14", "14", "14", "14", "14", 
      "14", "14", "14", "14", "14", "14"},
     {
      TagBox["\<\"B15\"\>",
       HoldForm], "15", "15", "15", "15", "15", "15", "15", "15", "15", "15", 
      "15", "15", "15", "15", "15", "15"},
     {
      TagBox["\<\"B16\"\>",
       HoldForm], "16", "16", "16", "16", "16", "16", "16", "16", "16", "16", 
      "16", "16", "16", "16", "16", "16"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableAlignments -> Center, 
    TableHeadings -> {{
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}, {
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}}]]]], "Print",
 CellChangeTimes->{3.8523136619964867`*^9, 3.8523221235850353`*^9},
 CellLabel->
  "During evaluation of \
In[592]:=",ExpressionUUID->"c784ee83-df48-4622-9580-1e7baacc8322"]
}, Open  ]]
}, Open  ]],

Cell["\<\
\ti-ty sp\[OAcute]jnik odpowiada z\[LSlash]o\:017ceniu siebie samego z \
dowolnym innym sp\[OAcute]jnikiem, a wi\:0119c jest od siebie zale\:017cny.\
\>", "Text",
 CellChangeTimes->{{3.8523137078372426`*^9, 
  3.8523138607637677`*^9}},ExpressionUUID->"6730c214-0db5-4143-bfa9-\
2b046a471e0a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Wypisz", "[", "6", "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.852313867965495*^9, 3.852313886828047*^9}},
 CellLabel->
  "In[593]:=",ExpressionUUID->"c6d78f85-152e-419d-ab50-bd69fca3c8dd"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"B6\"\>",
  StripOnInput->False,
  LineColor->RGBColor[1, 0, 0],
  FrontFaceColor->RGBColor[1, 0, 0],
  BackFaceColor->RGBColor[1, 0, 0],
  GraphicsColor->RGBColor[1, 0, 0],
  FontSize->18,
  FontColor->RGBColor[1, 0, 0]]], "Print",
 CellChangeTimes->{3.8523138872455044`*^9, 3.8523221268796215`*^9},
 CellLabel->
  "During evaluation of \
In[593]:=",ExpressionUUID->"ec42ff25-94c2-4c56-bb5b-9d78d4082908"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"B1\"\>",
       HoldForm], 
      TagBox["\<\"B2\"\>",
       HoldForm], 
      TagBox["\<\"B3\"\>",
       HoldForm], 
      TagBox["\<\"B4\"\>",
       HoldForm], 
      TagBox["\<\"B5\"\>",
       HoldForm], 
      TagBox["\<\"B6\"\>",
       HoldForm], 
      TagBox["\<\"B7\"\>",
       HoldForm], 
      TagBox["\<\"B8\"\>",
       HoldForm], 
      TagBox["\<\"B9\"\>",
       HoldForm], 
      TagBox["\<\"B10\"\>",
       HoldForm], 
      TagBox["\<\"B11\"\>",
       HoldForm], 
      TagBox["\<\"B12\"\>",
       HoldForm], 
      TagBox["\<\"B13\"\>",
       HoldForm], 
      TagBox["\<\"B14\"\>",
       HoldForm], 
      TagBox["\<\"B15\"\>",
       HoldForm], 
      TagBox["\<\"B16\"\>",
       HoldForm]},
     {
      TagBox["\<\"B1\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B2\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B3\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B4\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B5\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B6\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B7\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B8\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B9\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B10\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B11\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B12\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B13\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B14\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B15\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B16\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableAlignments -> Center, 
    TableHeadings -> {{
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}, {
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}}]]]], "Print",
 CellChangeTimes->{3.8523138872455044`*^9, 3.8523221269264927`*^9},
 CellLabel->
  "During evaluation of \
In[593]:=",ExpressionUUID->"0fdec40a-168c-485b-9732-48448dd66b5b"]
}, Open  ]]
}, Open  ]],

Cell["\<\
\ti-ty sp\[OAcute]jnik odpowiada z\[LSlash]o\:017ceniu dowolnego \
sp\[OAcute]jnika z sob\:0105 samym, a wi\:0119c jest od siebie zale\:017cny.\
\>", "Text",
 CellChangeTimes->{{3.8523138966747246`*^9, 
  3.8523139260302687`*^9}},ExpressionUUID->"fe3be7c4-98f1-4972-ae60-\
1d878028082b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Wypisz", "[", "11", "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.852313944213947*^9, 3.8523139660351562`*^9}},
 CellLabel->
  "In[594]:=",ExpressionUUID->"2ccf2db9-5ef8-4f17-af1e-9995cff3aefa"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"B11\"\>",
  StripOnInput->False,
  LineColor->RGBColor[1, 0, 0],
  FrontFaceColor->RGBColor[1, 0, 0],
  BackFaceColor->RGBColor[1, 0, 0],
  GraphicsColor->RGBColor[1, 0, 0],
  FontSize->18,
  FontColor->RGBColor[1, 0, 0]]], "Print",
 CellChangeTimes->{3.852313968049182*^9, 3.852322130290598*^9},
 CellLabel->
  "During evaluation of \
In[594]:=",ExpressionUUID->"db35fe25-3d73-4bfa-ada0-7add72e0ed00"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"B1\"\>",
       HoldForm], 
      TagBox["\<\"B2\"\>",
       HoldForm], 
      TagBox["\<\"B3\"\>",
       HoldForm], 
      TagBox["\<\"B4\"\>",
       HoldForm], 
      TagBox["\<\"B5\"\>",
       HoldForm], 
      TagBox["\<\"B6\"\>",
       HoldForm], 
      TagBox["\<\"B7\"\>",
       HoldForm], 
      TagBox["\<\"B8\"\>",
       HoldForm], 
      TagBox["\<\"B9\"\>",
       HoldForm], 
      TagBox["\<\"B10\"\>",
       HoldForm], 
      TagBox["\<\"B11\"\>",
       HoldForm], 
      TagBox["\<\"B12\"\>",
       HoldForm], 
      TagBox["\<\"B13\"\>",
       HoldForm], 
      TagBox["\<\"B14\"\>",
       HoldForm], 
      TagBox["\<\"B15\"\>",
       HoldForm], 
      TagBox["\<\"B16\"\>",
       HoldForm]},
     {
      TagBox["\<\"B1\"\>",
       HoldForm], "16", "15", "14", "13", "12", "11", "10", "9", "8", "7", 
      "6", "5", "4", "3", "2", "1"},
     {
      TagBox["\<\"B2\"\>",
       HoldForm], "16", "15", "14", "13", "12", "11", "10", "9", "8", "7", 
      "6", "5", "4", "3", "2", "1"},
     {
      TagBox["\<\"B3\"\>",
       HoldForm], "16", "15", "14", "13", "12", "11", "10", "9", "8", "7", 
      "6", "5", "4", "3", "2", "1"},
     {
      TagBox["\<\"B4\"\>",
       HoldForm], "16", "15", "14", "13", "12", "11", "10", "9", "8", "7", 
      "6", "5", "4", "3", "2", "1"},
     {
      TagBox["\<\"B5\"\>",
       HoldForm], "16", "15", "14", "13", "12", "11", "10", "9", "8", "7", 
      "6", "5", "4", "3", "2", "1"},
     {
      TagBox["\<\"B6\"\>",
       HoldForm], "16", "15", "14", "13", "12", "11", "10", "9", "8", "7", 
      "6", "5", "4", "3", "2", "1"},
     {
      TagBox["\<\"B7\"\>",
       HoldForm], "16", "15", "14", "13", "12", "11", "10", "9", "8", "7", 
      "6", "5", "4", "3", "2", "1"},
     {
      TagBox["\<\"B8\"\>",
       HoldForm], "16", "15", "14", "13", "12", "11", "10", "9", "8", "7", 
      "6", "5", "4", "3", "2", "1"},
     {
      TagBox["\<\"B9\"\>",
       HoldForm], "16", "15", "14", "13", "12", "11", "10", "9", "8", "7", 
      "6", "5", "4", "3", "2", "1"},
     {
      TagBox["\<\"B10\"\>",
       HoldForm], "16", "15", "14", "13", "12", "11", "10", "9", "8", "7", 
      "6", "5", "4", "3", "2", "1"},
     {
      TagBox["\<\"B11\"\>",
       HoldForm], "16", "15", "14", "13", "12", "11", "10", "9", "8", "7", 
      "6", "5", "4", "3", "2", "1"},
     {
      TagBox["\<\"B12\"\>",
       HoldForm], "16", "15", "14", "13", "12", "11", "10", "9", "8", "7", 
      "6", "5", "4", "3", "2", "1"},
     {
      TagBox["\<\"B13\"\>",
       HoldForm], "16", "15", "14", "13", "12", "11", "10", "9", "8", "7", 
      "6", "5", "4", "3", "2", "1"},
     {
      TagBox["\<\"B14\"\>",
       HoldForm], "16", "15", "14", "13", "12", "11", "10", "9", "8", "7", 
      "6", "5", "4", "3", "2", "1"},
     {
      TagBox["\<\"B15\"\>",
       HoldForm], "16", "15", "14", "13", "12", "11", "10", "9", "8", "7", 
      "6", "5", "4", "3", "2", "1"},
     {
      TagBox["\<\"B16\"\>",
       HoldForm], "16", "15", "14", "13", "12", "11", "10", "9", "8", "7", 
      "6", "5", "4", "3", "2", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableAlignments -> Center, 
    TableHeadings -> {{
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}, {
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}}]]]], "Print",
 CellChangeTimes->{3.852313968049182*^9, 3.852322130337575*^9},
 CellLabel->
  "During evaluation of \
In[594]:=",ExpressionUUID->"9e6ecb8d-6098-4c4a-949b-a8c26a67519f"]
}, Open  ]]
}, Open  ]],

Cell["\<\
\tB16 uzyskamy ze z\[LSlash]o\:017cenia dowolnego sp\[OAcute]jnika z B1, za\
\:015b B1 uzyskamy ze z\[LSlash]o\:017cenia dowolnego sp\[OAcute]jnika z B16.\
\[LineSeparator]W efekcie sp\[OAcute]jniki B16 s\:0105 zale\:017cne od siebie \
nawzajem B1, a wi\:0119c s\:0105 te\:017c zale\:017cne od siebie samych.\
\>", "Text",
 CellChangeTimes->{{3.8523139865190496`*^9, 
  3.852314097523449*^9}},ExpressionUUID->"7f0cbf38-4b7a-442b-be36-\
beff9108f963"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Wypisz", "[", "13", "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.8523141125592446`*^9, 3.852314119853119*^9}},
 CellLabel->
  "In[595]:=",ExpressionUUID->"b78dc951-3839-4c39-9cad-70488f63c6e6"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"B13\"\>",
  StripOnInput->False,
  LineColor->RGBColor[1, 0, 0],
  FrontFaceColor->RGBColor[1, 0, 0],
  BackFaceColor->RGBColor[1, 0, 0],
  GraphicsColor->RGBColor[1, 0, 0],
  FontSize->18,
  FontColor->RGBColor[1, 0, 0]]], "Print",
 CellChangeTimes->{3.8523141202232585`*^9, 3.8523221332685776`*^9},
 CellLabel->
  "During evaluation of \
In[595]:=",ExpressionUUID->"d27d194f-0f43-4cce-8937-38a25c8c12c1"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"B1\"\>",
       HoldForm], 
      TagBox["\<\"B2\"\>",
       HoldForm], 
      TagBox["\<\"B3\"\>",
       HoldForm], 
      TagBox["\<\"B4\"\>",
       HoldForm], 
      TagBox["\<\"B5\"\>",
       HoldForm], 
      TagBox["\<\"B6\"\>",
       HoldForm], 
      TagBox["\<\"B7\"\>",
       HoldForm], 
      TagBox["\<\"B8\"\>",
       HoldForm], 
      TagBox["\<\"B9\"\>",
       HoldForm], 
      TagBox["\<\"B10\"\>",
       HoldForm], 
      TagBox["\<\"B11\"\>",
       HoldForm], 
      TagBox["\<\"B12\"\>",
       HoldForm], 
      TagBox["\<\"B13\"\>",
       HoldForm], 
      TagBox["\<\"B14\"\>",
       HoldForm], 
      TagBox["\<\"B15\"\>",
       HoldForm], 
      TagBox["\<\"B16\"\>",
       HoldForm]},
     {
      TagBox["\<\"B1\"\>",
       HoldForm], "16", "16", "16", "16", "16", "16", "16", "16", "16", "16", 
      "16", "16", "16", "16", "16", "16"},
     {
      TagBox["\<\"B2\"\>",
       HoldForm], "15", "15", "15", "15", "15", "15", "15", "15", "15", "15", 
      "15", "15", "15", "15", "15", "15"},
     {
      TagBox["\<\"B3\"\>",
       HoldForm], "14", "14", "14", "14", "14", "14", "14", "14", "14", "14", 
      "14", "14", "14", "14", "14", "14"},
     {
      TagBox["\<\"B4\"\>",
       HoldForm], "13", "13", "13", "13", "13", "13", "13", "13", "13", "13", 
      "13", "13", "13", "13", "13", "13"},
     {
      TagBox["\<\"B5\"\>",
       HoldForm], "12", "12", "12", "12", "12", "12", "12", "12", "12", "12", 
      "12", "12", "12", "12", "12", "12"},
     {
      TagBox["\<\"B6\"\>",
       HoldForm], "11", "11", "11", "11", "11", "11", "11", "11", "11", "11", 
      "11", "11", "11", "11", "11", "11"},
     {
      TagBox["\<\"B7\"\>",
       HoldForm], "10", "10", "10", "10", "10", "10", "10", "10", "10", "10", 
      "10", "10", "10", "10", "10", "10"},
     {
      TagBox["\<\"B8\"\>",
       HoldForm], "9", "9", "9", "9", "9", "9", "9", "9", "9", "9", "9", "9", 
      "9", "9", "9", "9"},
     {
      TagBox["\<\"B9\"\>",
       HoldForm], "8", "8", "8", "8", "8", "8", "8", "8", "8", "8", "8", "8", 
      "8", "8", "8", "8"},
     {
      TagBox["\<\"B10\"\>",
       HoldForm], "7", "7", "7", "7", "7", "7", "7", "7", "7", "7", "7", "7", 
      "7", "7", "7", "7"},
     {
      TagBox["\<\"B11\"\>",
       HoldForm], "6", "6", "6", "6", "6", "6", "6", "6", "6", "6", "6", "6", 
      "6", "6", "6", "6"},
     {
      TagBox["\<\"B12\"\>",
       HoldForm], "5", "5", "5", "5", "5", "5", "5", "5", "5", "5", "5", "5", 
      "5", "5", "5", "5"},
     {
      TagBox["\<\"B13\"\>",
       HoldForm], "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", 
      "4", "4", "4", "4"},
     {
      TagBox["\<\"B14\"\>",
       HoldForm], "3", "3", "3", "3", "3", "3", "3", "3", "3", "3", "3", "3", 
      "3", "3", "3", "3"},
     {
      TagBox["\<\"B15\"\>",
       HoldForm], "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", 
      "2", "2", "2", "2"},
     {
      TagBox["\<\"B16\"\>",
       HoldForm], "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableAlignments -> Center, 
    TableHeadings -> {{
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}, {
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}}]]]], "Print",
 CellChangeTimes->{3.8523141202232585`*^9, 3.8523221333154774`*^9},
 CellLabel->
  "During evaluation of \
In[595]:=",ExpressionUUID->"d9e76767-0bda-4972-add2-2c26d51c57bd"]
}, Open  ]]
}, Open  ]],

Cell["\<\
\tB16 uzyskamy ze z\[LSlash]o\:017cenia B1 z dowolnym sp\[OAcute]jnikiem, za\
\:015b B1 uzyskamy ze z\[LSlash]o\:017cenia B16 z dowolnych \
sp\[OAcute]jnikiem.\[LineSeparator]W efekcie funktory B16 s\:0105 \
zale\:017cne od siebie nawzajem B1, a wi\:0119c s\:0105 te\:017c zale\:017cne \
od siebie samych.
\
\>", "Text",
 CellChangeTimes->{{3.852314134245782*^9, 3.8523142123076315`*^9}, 
   3.8523143575486956`*^9},ExpressionUUID->"8de1cbf8-3543-4125-9a15-\
03a98591b4d6"],

Cell["\<\
\tDla sp\[OAcute]jnik\[OAcute]w B7, B9, B10 i B15 trzeba rozpatrzy\[CAcute] \
wi\:0119cej przypadk\[OAcute]w. Rozwa\:017caj\:0105c przypadki dla \
ka\:017cdego z tych funktor\[OAcute]w, jako argumenty mo\:017cemy podstawia\
\[CAcute] tylko dany funktor oraz funktory B4 i B6 odpowiadaj\:0105ce \
mo\:017cliwym warto\:015bciowaniom dw\[OAcute]ch zmiennych zdaniowych.\
\>", "Text",
 CellChangeTimes->{{3.852314362952421*^9, 
  3.852314607629985*^9}},ExpressionUUID->"3ef45c21-f470-43e4-870d-\
d6371a2ab358"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"WypiszDlaKilku", "[", 
    RowBox[{"argumenty_", ",", "funktor_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"tablicaB", "=", 
        RowBox[{"{", "}"}]}], ",", "tablica", " ", ",", 
       RowBox[{"heading", "=", 
        RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Do", "[", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"tablica", "=", 
           RowBox[{"{", "}"}]}], ";", "\n", "     ", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"tablica", ",", 
              RowBox[{"KtoryFunktorB", "[", 
               RowBox[{"funktor", ",", "n", ",", "m"}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"m", ",", "argumenty"}], "}"}]}], "]"}], ";", "\n", 
          "     ", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"tablicaB", ",", " ", "tablica"}], "]"}], ";", "\n", 
          "     ", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"heading", ",", 
            RowBox[{"StringJoin", "[", 
             RowBox[{"\"\<B\>\"", ",", 
              RowBox[{"ToString", "[", "n", "]"}]}], "]"}]}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "argumenty"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"Return", "[", 
       RowBox[{"TableForm", "[", 
        RowBox[{"tablicaB", ",", 
         RowBox[{"TableAlignments", "\[Rule]", "Center"}], ",", 
         RowBox[{"TableHeadings", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"heading", ",", "heading"}], "}"}]}]}], "]"}], "]"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.852316863944289*^9, 3.8523168650944853`*^9}, {
  3.8523169114047375`*^9, 3.852316912238039*^9}, {3.852318779837743*^9, 
  3.852318780639848*^9}, {3.8890135771495886`*^9, 
  3.8890136173489914`*^9}},ExpressionUUID->"81ddb226-495b-4bb5-8ee8-\
eb885502cede"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Wypisz", "[", "7", "]"}], ";", 
  RowBox[{"Print", "[", "\"\<\\n\>\"", "]"}], ";"}], "\n", 
 RowBox[{"{", "\n", "\t", 
  RowBox[{
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"WypiszDlaKilku", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "6", ",", "7"}], "}"}], ",", "7"}], "]"}], ",", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"StringJoin", "[", 
        RowBox[{"\"\<B\>\"", ",", 
         RowBox[{"ToString", "[", "7", "]"}]}], "]"}], ",", "15", ",", 
       "Purple"}], "]"}]}], "]"}], ",", "\n", 
   RowBox[{"\"\<\\t\>\"", 
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"WypiszDlaKilku", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4", ",", "6", ",", "7"}], "}"}], ",", "7"}], 
       "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"StringJoin", "[", 
         RowBox[{"\"\<B\>\"", ",", 
          RowBox[{"ToString", "[", "7", "]"}]}], "]"}], ",", "15", ",", 
        "Purple"}], "]"}]}], "]"}]}], ",", "\n", 
   RowBox[{"\"\<\\t\>\"", 
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"WypiszDlaKilku", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4", ",", "6", ",", "7"}], "}"}], ",", "1"}], 
       "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"StringJoin", "[", 
         RowBox[{"\"\<B\>\"", ",", 
          RowBox[{"ToString", "[", "1", "]"}]}], "]"}], ",", "15", ",", 
        "Orange"}], "]"}]}], "]"}]}], ",", "\n", 
   RowBox[{"\"\<\\t\>\"", 
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"WypiszDlaKilku", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4", ",", "6", ",", "7"}], "}"}], ",", "4"}], 
       "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"StringJoin", "[", 
         RowBox[{"\"\<B\>\"", ",", 
          RowBox[{"ToString", "[", "4", "]"}]}], "]"}], ",", "15", ",", 
        "Green"}], "]"}]}], "]"}]}], ",", "\n", 
   RowBox[{"\"\<\\t\>\"", 
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"WypiszDlaKilku", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4", ",", "6", ",", "7"}], "}"}], ",", "6"}], 
       "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"StringJoin", "[", 
         RowBox[{"\"\<B\>\"", ",", 
          RowBox[{"ToString", "[", "6", "]"}]}], "]"}], ",", "15", ",", 
        "Blue"}], "]"}]}], "]"}]}]}], "\n", "}"}]}], "Code",
 CellChangeTimes->{{3.852314273197322*^9, 3.852314295082796*^9}, {
   3.852314901193322*^9, 3.8523149207117147`*^9}, {3.852314954182479*^9, 
   3.8523149721476064`*^9}, 3.852315153886896*^9, {3.852318904229206*^9, 
   3.8523189532281938`*^9}, {3.852319186923009*^9, 3.8523191870611815`*^9}, {
   3.889013622860523*^9, 
   3.889013649154947*^9}},ExpressionUUID->"ee8b04cb-ec41-4fa2-8ac5-\
e8e590a98c05"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"B7\"\>",
  StripOnInput->False,
  LineColor->RGBColor[1, 0, 0],
  FrontFaceColor->RGBColor[1, 0, 0],
  BackFaceColor->RGBColor[1, 0, 0],
  GraphicsColor->RGBColor[1, 0, 0],
  FontSize->18,
  FontColor->RGBColor[1, 0, 0]]], "Print",
 CellChangeTimes->{{3.8523142863493013`*^9, 3.8523142969882975`*^9}, 
   3.852314923382019*^9, 3.8523151554542007`*^9, 3.852316824814576*^9, {
   3.852318906521322*^9, 3.852318924616482*^9}, 3.8523189552361484`*^9, 
   3.8523191896642494`*^9, 3.852322181008903*^9},
 CellLabel->
  "During evaluation of \
In[597]:=",ExpressionUUID->"2662401e-5597-4f8a-ac7c-aa01e8ed5cf7"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"B1\"\>",
       HoldForm], 
      TagBox["\<\"B2\"\>",
       HoldForm], 
      TagBox["\<\"B3\"\>",
       HoldForm], 
      TagBox["\<\"B4\"\>",
       HoldForm], 
      TagBox["\<\"B5\"\>",
       HoldForm], 
      TagBox["\<\"B6\"\>",
       HoldForm], 
      TagBox["\<\"B7\"\>",
       HoldForm], 
      TagBox["\<\"B8\"\>",
       HoldForm], 
      TagBox["\<\"B9\"\>",
       HoldForm], 
      TagBox["\<\"B10\"\>",
       HoldForm], 
      TagBox["\<\"B11\"\>",
       HoldForm], 
      TagBox["\<\"B12\"\>",
       HoldForm], 
      TagBox["\<\"B13\"\>",
       HoldForm], 
      TagBox["\<\"B14\"\>",
       HoldForm], 
      TagBox["\<\"B15\"\>",
       HoldForm], 
      TagBox["\<\"B16\"\>",
       HoldForm]},
     {
      TagBox["\<\"B1\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"},
     {
      TagBox["\<\"B2\"\>",
       HoldForm], "2", "1", "4", "3", "6", "5", "8", "7", "10", "9", "12", 
      "11", "14", "13", "16", "15"},
     {
      TagBox["\<\"B3\"\>",
       HoldForm], "3", "4", "1", "2", "7", "8", "5", "6", "11", "12", "9", 
      "10", "15", "16", "13", "14"},
     {
      TagBox["\<\"B4\"\>",
       HoldForm], "4", "3", "2", "1", "8", "7", "6", "5", "12", "11", "10", 
      "9", "16", "15", "14", "13"},
     {
      TagBox["\<\"B5\"\>",
       HoldForm], "5", "6", "7", "8", "1", "2", "3", "4", "13", "14", "15", 
      "16", "9", "10", "11", "12"},
     {
      TagBox["\<\"B6\"\>",
       HoldForm], "6", "5", "8", "7", "2", "1", "4", "3", "14", "13", "16", 
      "15", "10", "9", "12", "11"},
     {
      TagBox["\<\"B7\"\>",
       HoldForm], "7", "8", "5", "6", "3", "4", "1", "2", "15", "16", "13", 
      "14", "11", "12", "9", "10"},
     {
      TagBox["\<\"B8\"\>",
       HoldForm], "8", "7", "6", "5", "4", "3", "2", "1", "16", "15", "14", 
      "13", "12", "11", "10", "9"},
     {
      TagBox["\<\"B9\"\>",
       HoldForm], "9", "10", "11", "12", "13", "14", "15", "16", "1", "2", 
      "3", "4", "5", "6", "7", "8"},
     {
      TagBox["\<\"B10\"\>",
       HoldForm], "10", "9", "12", "11", "14", "13", "16", "15", "2", "1", 
      "4", "3", "6", "5", "8", "7"},
     {
      TagBox["\<\"B11\"\>",
       HoldForm], "11", "12", "9", "10", "15", "16", "13", "14", "3", "4", 
      "1", "2", "7", "8", "5", "6"},
     {
      TagBox["\<\"B12\"\>",
       HoldForm], "12", "11", "10", "9", "16", "15", "14", "13", "4", "3", 
      "2", "1", "8", "7", "6", "5"},
     {
      TagBox["\<\"B13\"\>",
       HoldForm], "13", "14", "15", "16", "9", "10", "11", "12", "5", "6", 
      "7", "8", "1", "2", "3", "4"},
     {
      TagBox["\<\"B14\"\>",
       HoldForm], "14", "13", "16", "15", "10", "9", "12", "11", "6", "5", 
      "8", "7", "2", "1", "4", "3"},
     {
      TagBox["\<\"B15\"\>",
       HoldForm], "15", "16", "13", "14", "11", "12", "9", "10", "7", "8", 
      "5", "6", "3", "4", "1", "2"},
     {
      TagBox["\<\"B16\"\>",
       HoldForm], "16", "15", "14", "13", "12", "11", "10", "9", "8", "7", 
      "6", "5", "4", "3", "2", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableAlignments -> Center, 
    TableHeadings -> {{
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}, {
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}}]]]], "Print",
 CellChangeTimes->{{3.8523142863493013`*^9, 3.8523142969882975`*^9}, 
   3.852314923382019*^9, 3.8523151554542007`*^9, 3.852316824814576*^9, {
   3.852318906521322*^9, 3.852318924616482*^9}, 3.8523189552361484`*^9, 
   3.8523191896642494`*^9, 3.8523221810623055`*^9},
 CellLabel->
  "During evaluation of \
In[597]:=",ExpressionUUID->"6d3d78b6-8317-4963-9e4b-1557bbc27984"],

Cell[BoxData["\<\"\\n\"\>"], "Print",
 CellChangeTimes->{{3.8523142863493013`*^9, 3.8523142969882975`*^9}, 
   3.852314923382019*^9, 3.8523151554542007`*^9, 3.852316824814576*^9, {
   3.852318906521322*^9, 3.852318924616482*^9}, 3.8523189552361484`*^9, 
   3.8523191896642494`*^9, 3.8523221810779314`*^9},
 CellLabel->
  "During evaluation of \
In[597]:=",ExpressionUUID->"14c82450-5d50-4e13-85da-75e4cd4521f1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     TagBox[
      TagBox[
       GridBox[{{
          StyleBox["\[Null]", ShowStringCharacters -> False], 
          TagBox["\"B4\"", HoldForm], 
          TagBox["\"B6\"", HoldForm], 
          TagBox["\"B7\"", HoldForm]}, {
          TagBox["\"B4\"", HoldForm], "1", "7", "6"}, {
          TagBox["\"B6\"", HoldForm], "7", "1", "4"}, {
          TagBox["\"B7\"", HoldForm], "6", "4", "1"}}, RowSpacings -> 1, 
        ColumnSpacings -> 3, RowAlignments -> Center, ColumnAlignments -> 
        Center, ColumnLines -> {1, False}, RowLines -> {1, False}, 
        ColumnAlignments -> Left], {
       OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}], 
      Function[BoxForm`e$, 
       TableForm[
       BoxForm`e$, TableAlignments -> Center, 
        TableHeadings -> {{"B4", "B6", "B7"}, {"B4", "B6", "B7"}}]]], 
     StyleBox["\"B7\"", 15, 
      RGBColor[0.5, 0, 0.5], StripOnInput -> False]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   RowBox[{"\<\"\\t\"\>", " ", 
    TemplateBox[{
      TagBox[
       TagBox[
        GridBox[{{
           StyleBox["\[Null]", ShowStringCharacters -> False], 
           TagBox["\"B1\"", HoldForm], 
           TagBox["\"B4\"", HoldForm], 
           TagBox["\"B6\"", HoldForm], 
           TagBox["\"B7\"", HoldForm]}, {
           TagBox["\"B1\"", HoldForm], "1", "4", "6", "7"}, {
           TagBox["\"B4\"", HoldForm], "4", "1", "7", "6"}, {
           TagBox["\"B6\"", HoldForm], "6", "7", "1", "4"}, {
           TagBox["\"B7\"", HoldForm], "7", "6", "4", "1"}}, RowSpacings -> 1,
          ColumnSpacings -> 3, RowAlignments -> Center, ColumnAlignments -> 
         Center, ColumnLines -> {1, False}, RowLines -> {1, False}, 
         ColumnAlignments -> Left], {
        OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}], 
       Function[BoxForm`e$, 
        TableForm[
        BoxForm`e$, TableAlignments -> Center, 
         TableHeadings -> {{"B1", "B4", "B6", "B7"}, {
           "B1", "B4", "B6", "B7"}}]]], 
      StyleBox["\"B7\"", 15, 
       RGBColor[0.5, 0, 0.5], StripOnInput -> False]},
     "Labeled",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       BaselinePosition -> {1, 1}]& ),
     InterpretationFunction->(RowBox[{"Labeled", "[", 
        RowBox[{#, ",", #2}], "]"}]& )]}], ",", 
   RowBox[{"\<\"\\t\"\>", " ", 
    TemplateBox[{
      TagBox[
       TagBox[
        GridBox[{{
           StyleBox["\[Null]", ShowStringCharacters -> False], 
           TagBox["\"B1\"", HoldForm], 
           TagBox["\"B4\"", HoldForm], 
           TagBox["\"B6\"", HoldForm], 
           TagBox["\"B7\"", HoldForm]}, {
           TagBox["\"B1\"", HoldForm], "1", "1", "1", "1"}, {
           TagBox["\"B4\"", HoldForm], "1", "1", "1", "1"}, {
           TagBox["\"B6\"", HoldForm], "1", "1", "1", "1"}, {
           TagBox["\"B7\"", HoldForm], "1", "1", "1", "1"}}, RowSpacings -> 1,
          ColumnSpacings -> 3, RowAlignments -> Center, ColumnAlignments -> 
         Center, ColumnLines -> {1, False}, RowLines -> {1, False}, 
         ColumnAlignments -> Left], {
        OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}], 
       Function[BoxForm`e$, 
        TableForm[
        BoxForm`e$, TableAlignments -> Center, 
         TableHeadings -> {{"B1", "B4", "B6", "B7"}, {
           "B1", "B4", "B6", "B7"}}]]], 
      StyleBox["\"B1\"", 15, 
       RGBColor[1, 0.5, 0], StripOnInput -> False]},
     "Labeled",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       BaselinePosition -> {1, 1}]& ),
     InterpretationFunction->(RowBox[{"Labeled", "[", 
        RowBox[{#, ",", #2}], "]"}]& )]}], ",", 
   RowBox[{"\<\"\\t\"\>", " ", 
    TemplateBox[{
      TagBox[
       TagBox[
        GridBox[{{
           StyleBox["\[Null]", ShowStringCharacters -> False], 
           TagBox["\"B1\"", HoldForm], 
           TagBox["\"B4\"", HoldForm], 
           TagBox["\"B6\"", HoldForm], 
           TagBox["\"B7\"", HoldForm]}, {
           TagBox["\"B1\"", HoldForm], "1", "1", "1", "1"}, {
           TagBox["\"B4\"", HoldForm], "4", "4", "4", "4"}, {
           TagBox["\"B6\"", HoldForm], "6", "6", "6", "6"}, {
           TagBox["\"B7\"", HoldForm], "7", "7", "7", "7"}}, RowSpacings -> 1,
          ColumnSpacings -> 3, RowAlignments -> Center, ColumnAlignments -> 
         Center, ColumnLines -> {1, False}, RowLines -> {1, False}, 
         ColumnAlignments -> Left], {
        OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}], 
       Function[BoxForm`e$, 
        TableForm[
        BoxForm`e$, TableAlignments -> Center, 
         TableHeadings -> {{"B1", "B4", "B6", "B7"}, {
           "B1", "B4", "B6", "B7"}}]]], 
      StyleBox["\"B4\"", 15, 
       RGBColor[0, 1, 0], StripOnInput -> False]},
     "Labeled",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       BaselinePosition -> {1, 1}]& ),
     InterpretationFunction->(RowBox[{"Labeled", "[", 
        RowBox[{#, ",", #2}], "]"}]& )]}], ",", 
   RowBox[{"\<\"\\t\"\>", " ", 
    TemplateBox[{
      TagBox[
       TagBox[
        GridBox[{{
           StyleBox["\[Null]", ShowStringCharacters -> False], 
           TagBox["\"B1\"", HoldForm], 
           TagBox["\"B4\"", HoldForm], 
           TagBox["\"B6\"", HoldForm], 
           TagBox["\"B7\"", HoldForm]}, {
           TagBox["\"B1\"", HoldForm], "1", "4", "6", "7"}, {
           TagBox["\"B4\"", HoldForm], "1", "4", "6", "7"}, {
           TagBox["\"B6\"", HoldForm], "1", "4", "6", "7"}, {
           TagBox["\"B7\"", HoldForm], "1", "4", "6", "7"}}, RowSpacings -> 1,
          ColumnSpacings -> 3, RowAlignments -> Center, ColumnAlignments -> 
         Center, ColumnLines -> {1, False}, RowLines -> {1, False}, 
         ColumnAlignments -> Left], {
        OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}], 
       Function[BoxForm`e$, 
        TableForm[
        BoxForm`e$, TableAlignments -> Center, 
         TableHeadings -> {{"B1", "B4", "B6", "B7"}, {
           "B1", "B4", "B6", "B7"}}]]], 
      StyleBox["\"B6\"", 15, 
       RGBColor[0, 0, 1], StripOnInput -> False]},
     "Labeled",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       BaselinePosition -> {1, 1}]& ),
     InterpretationFunction->(RowBox[{"Labeled", "[", 
        RowBox[{#, ",", #2}], "]"}]& )]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8523189066372232`*^9, 3.852318924716798*^9}, 
   3.8523189553611703`*^9, 3.8523191897866716`*^9, 3.8523221811313133`*^9},
 CellLabel->
  "Out[597]=",ExpressionUUID->"2f2eb97f-f5f4-4d9c-9a95-0d2941d8b4bf"]
}, Open  ]],

Cell["\<\
\tNa pocz\:0105tku rozpatrujemy dost\:0119pne warto\:015bci B7 dla argument\
\[OAcute]w B4, B6 i B7. Jak widzimy, jeste\:015bmy w stanie uzyska\[CAcute] \
kolejny funktor - B1. Rozszerzamy wi\:0119c nasz\:0105 tabel\:0119 o kolejne \
warto\:015bci.
Widzimy, \:017ce nie jeste\:015bmy w stanie w ten spos\[OAcute]b uzyska\
\[CAcute] innych sp\[OAcute]jnik\[OAcute]w ni\:017c B1, B4, B6 i B7. \
Mo\:017cemy jednak u\:017cy\[CAcute] ich jako argument\[OAcute]w w odpowiadaj\
\:0105cych im funkcjach, co obrazuj\:0105 3 ostatnie tabele.
Pomimo tego zabiegu, jeste\:015bmy w stanie utworzy\[CAcute] tylko 4 funktory \
za pomoc\:0105 B7.
\
\>", "Text",
 CellChangeTimes->{{3.85231804427849*^9, 3.8523183963657646`*^9}, {
  3.8523184420865574`*^9, 
  3.852318650811288*^9}},ExpressionUUID->"54b4a9e3-3dc1-45cb-9e93-\
0e979d7ac675"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Wypisz", "[", "10", "]"}], ";", 
  RowBox[{"Print", "[", "\"\<\\n\>\"", "]"}], ";", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"WypiszDlaKilku", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "6", ",", "10"}], "}"}], ",", "10"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"StringJoin", "[", 
         RowBox[{"\"\<B\>\"", ",", 
          RowBox[{"ToString", "[", "10", "]"}]}], "]"}], ",", "15", ",", 
        "Purple"}], "]"}]}], "]"}], ",", " ", 
    RowBox[{"\"\<\\t\>\"", 
     RowBox[{"Labeled", "[", 
      RowBox[{
       RowBox[{"WypiszDlaKilku", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "6", ",", "10", ",", "16"}], "}"}], ",", "10"}], 
        "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"StringJoin", "[", 
          RowBox[{"\"\<B\>\"", ",", 
           RowBox[{"ToString", "[", "10", "]"}]}], "]"}], ",", "15", ",", 
         "Purple"}], "]"}]}], "]"}]}], ",", " ", 
    RowBox[{"\"\<\\t\>\"", 
     RowBox[{"Labeled", "[", 
      RowBox[{
       RowBox[{"WypiszDlaKilku", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "6", ",", "10", ",", "16"}], "}"}], ",", "4"}], 
        "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"StringJoin", "[", 
          RowBox[{"\"\<B\>\"", ",", 
           RowBox[{"ToString", "[", "4", "]"}]}], "]"}], ",", "15", ",", 
         "Orange"}], "]"}]}], "]"}]}], ",", 
    RowBox[{"\"\<\\t\>\"", 
     RowBox[{"Labeled", "[", 
      RowBox[{
       RowBox[{"WypiszDlaKilku", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "6", ",", "10", ",", "16"}], "}"}], ",", "6"}], 
        "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"StringJoin", "[", 
          RowBox[{"\"\<B\>\"", ",", 
           RowBox[{"ToString", "[", "6", "]"}]}], "]"}], ",", "15", ",", 
         "Green"}], "]"}]}], "]"}]}], ",", 
    RowBox[{"\"\<\\t\>\"", 
     RowBox[{"Labeled", "[", 
      RowBox[{
       RowBox[{"WypiszDlaKilku", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "6", ",", "10", ",", "16"}], "}"}], ",", "16"}], 
        "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"StringJoin", "[", 
          RowBox[{"\"\<B\>\"", ",", 
           RowBox[{"ToString", "[", "16", "]"}]}], "]"}], ",", "15", ",", 
         "Blue"}], "]"}]}], "]"}]}]}], "}"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.852318653983328*^9, 3.8523186575109153`*^9}, {
  3.852319036817933*^9, 3.852319083788945*^9}, {3.8523191331660995`*^9, 
  3.852319181560295*^9}, {3.8523192137212863`*^9, 3.8523192161243353`*^9}},
 CellLabel->
  "In[598]:=",ExpressionUUID->"af013473-102c-4d54-a79b-f1622cfaa050"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"B10\"\>",
  StripOnInput->False,
  LineColor->RGBColor[1, 0, 0],
  FrontFaceColor->RGBColor[1, 0, 0],
  BackFaceColor->RGBColor[1, 0, 0],
  GraphicsColor->RGBColor[1, 0, 0],
  FontSize->18,
  FontColor->RGBColor[1, 0, 0]]], "Print",
 CellChangeTimes->{
  3.8523186588279004`*^9, 3.8523190879028845`*^9, {3.852319194748659*^9, 
   3.8523192177669134`*^9}, 3.852322186348378*^9},
 CellLabel->
  "During evaluation of \
In[598]:=",ExpressionUUID->"d001ecf0-b788-4b22-9475-6664e903a3b8"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"B1\"\>",
       HoldForm], 
      TagBox["\<\"B2\"\>",
       HoldForm], 
      TagBox["\<\"B3\"\>",
       HoldForm], 
      TagBox["\<\"B4\"\>",
       HoldForm], 
      TagBox["\<\"B5\"\>",
       HoldForm], 
      TagBox["\<\"B6\"\>",
       HoldForm], 
      TagBox["\<\"B7\"\>",
       HoldForm], 
      TagBox["\<\"B8\"\>",
       HoldForm], 
      TagBox["\<\"B9\"\>",
       HoldForm], 
      TagBox["\<\"B10\"\>",
       HoldForm], 
      TagBox["\<\"B11\"\>",
       HoldForm], 
      TagBox["\<\"B12\"\>",
       HoldForm], 
      TagBox["\<\"B13\"\>",
       HoldForm], 
      TagBox["\<\"B14\"\>",
       HoldForm], 
      TagBox["\<\"B15\"\>",
       HoldForm], 
      TagBox["\<\"B16\"\>",
       HoldForm]},
     {
      TagBox["\<\"B1\"\>",
       HoldForm], "16", "15", "14", "13", "12", "11", "10", "9", "8", "7", 
      "6", "5", "4", "3", "2", "1"},
     {
      TagBox["\<\"B2\"\>",
       HoldForm], "15", "16", "13", "14", "11", "12", "9", "10", "7", "8", 
      "5", "6", "3", "4", "1", "2"},
     {
      TagBox["\<\"B3\"\>",
       HoldForm], "14", "13", "16", "15", "10", "9", "12", "11", "6", "5", 
      "8", "7", "2", "1", "4", "3"},
     {
      TagBox["\<\"B4\"\>",
       HoldForm], "13", "14", "15", "16", "9", "10", "11", "12", "5", "6", 
      "7", "8", "1", "2", "3", "4"},
     {
      TagBox["\<\"B5\"\>",
       HoldForm], "12", "11", "10", "9", "16", "15", "14", "13", "4", "3", 
      "2", "1", "8", "7", "6", "5"},
     {
      TagBox["\<\"B6\"\>",
       HoldForm], "11", "12", "9", "10", "15", "16", "13", "14", "3", "4", 
      "1", "2", "7", "8", "5", "6"},
     {
      TagBox["\<\"B7\"\>",
       HoldForm], "10", "9", "12", "11", "14", "13", "16", "15", "2", "1", 
      "4", "3", "6", "5", "8", "7"},
     {
      TagBox["\<\"B8\"\>",
       HoldForm], "9", "10", "11", "12", "13", "14", "15", "16", "1", "2", 
      "3", "4", "5", "6", "7", "8"},
     {
      TagBox["\<\"B9\"\>",
       HoldForm], "8", "7", "6", "5", "4", "3", "2", "1", "16", "15", "14", 
      "13", "12", "11", "10", "9"},
     {
      TagBox["\<\"B10\"\>",
       HoldForm], "7", "8", "5", "6", "3", "4", "1", "2", "15", "16", "13", 
      "14", "11", "12", "9", "10"},
     {
      TagBox["\<\"B11\"\>",
       HoldForm], "6", "5", "8", "7", "2", "1", "4", "3", "14", "13", "16", 
      "15", "10", "9", "12", "11"},
     {
      TagBox["\<\"B12\"\>",
       HoldForm], "5", "6", "7", "8", "1", "2", "3", "4", "13", "14", "15", 
      "16", "9", "10", "11", "12"},
     {
      TagBox["\<\"B13\"\>",
       HoldForm], "4", "3", "2", "1", "8", "7", "6", "5", "12", "11", "10", 
      "9", "16", "15", "14", "13"},
     {
      TagBox["\<\"B14\"\>",
       HoldForm], "3", "4", "1", "2", "7", "8", "5", "6", "11", "12", "9", 
      "10", "15", "16", "13", "14"},
     {
      TagBox["\<\"B15\"\>",
       HoldForm], "2", "1", "4", "3", "6", "5", "8", "7", "10", "9", "12", 
      "11", "14", "13", "16", "15"},
     {
      TagBox["\<\"B16\"\>",
       HoldForm], "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableAlignments -> Center, 
    TableHeadings -> {{
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}, {
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}}]]]], "Print",
 CellChangeTimes->{
  3.8523186588279004`*^9, 3.8523190879028845`*^9, {3.852319194748659*^9, 
   3.8523192177669134`*^9}, 3.8523221863952656`*^9},
 CellLabel->
  "During evaluation of \
In[598]:=",ExpressionUUID->"37d837a9-ddbc-4cb3-b001-0b41f98dd07f"],

Cell[BoxData["\<\"\\n\"\>"], "Print",
 CellChangeTimes->{
  3.8523186588279004`*^9, 3.8523190879028845`*^9, {3.852319194748659*^9, 
   3.8523192177669134`*^9}, 3.8523221864265165`*^9},
 CellLabel->
  "During evaluation of \
In[598]:=",ExpressionUUID->"199cb5b2-9331-4b83-bddb-ea9d64822673"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     TagBox[
      TagBox[
       GridBox[{{
          StyleBox["\[Null]", ShowStringCharacters -> False], 
          TagBox["\"B4\"", HoldForm], 
          TagBox["\"B6\"", HoldForm], 
          TagBox["\"B10\"", HoldForm]}, {
          TagBox["\"B4\"", HoldForm], "16", "10", "6"}, {
          TagBox["\"B6\"", HoldForm], "10", "16", "4"}, {
          TagBox["\"B10\"", HoldForm], "6", "4", "16"}}, RowSpacings -> 1, 
        ColumnSpacings -> 3, RowAlignments -> Center, ColumnAlignments -> 
        Center, ColumnLines -> {1, False}, RowLines -> {1, False}, 
        ColumnAlignments -> Left], {
       OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}], 
      Function[BoxForm`e$, 
       TableForm[
       BoxForm`e$, TableAlignments -> Center, 
        TableHeadings -> {{"B4", "B6", "B10"}, {"B4", "B6", "B10"}}]]], 
     StyleBox["\"B10\"", 15, 
      RGBColor[0.5, 0, 0.5], StripOnInput -> False]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   RowBox[{"\<\"\\t\"\>", " ", 
    TemplateBox[{
      TagBox[
       TagBox[
        GridBox[{{
           StyleBox["\[Null]", ShowStringCharacters -> False], 
           TagBox["\"B4\"", HoldForm], 
           TagBox["\"B6\"", HoldForm], 
           TagBox["\"B10\"", HoldForm], 
           TagBox["\"B16\"", HoldForm]}, {
           TagBox["\"B4\"", HoldForm], "16", "10", "6", "4"}, {
           TagBox["\"B6\"", HoldForm], "10", "16", "4", "6"}, {
           TagBox["\"B10\"", HoldForm], "6", "4", "16", "10"}, {
           TagBox["\"B16\"", HoldForm], "4", "6", "10", "16"}}, RowSpacings -> 
         1, ColumnSpacings -> 3, RowAlignments -> Center, ColumnAlignments -> 
         Center, ColumnLines -> {1, False}, RowLines -> {1, False}, 
         ColumnAlignments -> Left], {
        OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}], 
       Function[BoxForm`e$, 
        TableForm[
        BoxForm`e$, TableAlignments -> Center, 
         TableHeadings -> {{"B4", "B6", "B10", "B16"}, {
           "B4", "B6", "B10", "B16"}}]]], 
      StyleBox["\"B10\"", 15, 
       RGBColor[0.5, 0, 0.5], StripOnInput -> False]},
     "Labeled",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       BaselinePosition -> {1, 1}]& ),
     InterpretationFunction->(RowBox[{"Labeled", "[", 
        RowBox[{#, ",", #2}], "]"}]& )]}], ",", 
   RowBox[{"\<\"\\t\"\>", " ", 
    TemplateBox[{
      TagBox[
       TagBox[
        GridBox[{{
           StyleBox["\[Null]", ShowStringCharacters -> False], 
           TagBox["\"B4\"", HoldForm], 
           TagBox["\"B6\"", HoldForm], 
           TagBox["\"B10\"", HoldForm], 
           TagBox["\"B16\"", HoldForm]}, {
           TagBox["\"B4\"", HoldForm], "4", "4", "4", "4"}, {
           TagBox["\"B6\"", HoldForm], "6", "6", "6", "6"}, {
           TagBox["\"B10\"", HoldForm], "10", "10", "10", "10"}, {
           TagBox["\"B16\"", HoldForm], "16", "16", "16", "16"}}, 
         RowSpacings -> 1, ColumnSpacings -> 3, RowAlignments -> Center, 
         ColumnAlignments -> Center, ColumnLines -> {1, False}, 
         RowLines -> {1, False}, ColumnAlignments -> Left], {
        OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}], 
       Function[BoxForm`e$, 
        TableForm[
        BoxForm`e$, TableAlignments -> Center, 
         TableHeadings -> {{"B4", "B6", "B10", "B16"}, {
           "B4", "B6", "B10", "B16"}}]]], 
      StyleBox["\"B4\"", 15, 
       RGBColor[1, 0.5, 0], StripOnInput -> False]},
     "Labeled",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       BaselinePosition -> {1, 1}]& ),
     InterpretationFunction->(RowBox[{"Labeled", "[", 
        RowBox[{#, ",", #2}], "]"}]& )]}], ",", 
   RowBox[{"\<\"\\t\"\>", " ", 
    TemplateBox[{
      TagBox[
       TagBox[
        GridBox[{{
           StyleBox["\[Null]", ShowStringCharacters -> False], 
           TagBox["\"B4\"", HoldForm], 
           TagBox["\"B6\"", HoldForm], 
           TagBox["\"B10\"", HoldForm], 
           TagBox["\"B16\"", HoldForm]}, {
           TagBox["\"B4\"", HoldForm], "4", "6", "10", "16"}, {
           TagBox["\"B6\"", HoldForm], "4", "6", "10", "16"}, {
           TagBox["\"B10\"", HoldForm], "4", "6", "10", "16"}, {
           TagBox["\"B16\"", HoldForm], "4", "6", "10", "16"}}, RowSpacings -> 
         1, ColumnSpacings -> 3, RowAlignments -> Center, ColumnAlignments -> 
         Center, ColumnLines -> {1, False}, RowLines -> {1, False}, 
         ColumnAlignments -> Left], {
        OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}], 
       Function[BoxForm`e$, 
        TableForm[
        BoxForm`e$, TableAlignments -> Center, 
         TableHeadings -> {{"B4", "B6", "B10", "B16"}, {
           "B4", "B6", "B10", "B16"}}]]], 
      StyleBox["\"B6\"", 15, 
       RGBColor[0, 1, 0], StripOnInput -> False]},
     "Labeled",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       BaselinePosition -> {1, 1}]& ),
     InterpretationFunction->(RowBox[{"Labeled", "[", 
        RowBox[{#, ",", #2}], "]"}]& )]}], ",", 
   RowBox[{"\<\"\\t\"\>", " ", 
    TemplateBox[{
      TagBox[
       TagBox[
        GridBox[{{
           StyleBox["\[Null]", ShowStringCharacters -> False], 
           TagBox["\"B4\"", HoldForm], 
           TagBox["\"B6\"", HoldForm], 
           TagBox["\"B10\"", HoldForm], 
           TagBox["\"B16\"", HoldForm]}, {
           TagBox["\"B4\"", HoldForm], "16", "16", "16", "16"}, {
           TagBox["\"B6\"", HoldForm], "16", "16", "16", "16"}, {
           TagBox["\"B10\"", HoldForm], "16", "16", "16", "16"}, {
           TagBox["\"B16\"", HoldForm], "16", "16", "16", "16"}}, RowSpacings -> 
         1, ColumnSpacings -> 3, RowAlignments -> Center, ColumnAlignments -> 
         Center, ColumnLines -> {1, False}, RowLines -> {1, False}, 
         ColumnAlignments -> Left], {
        OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}], 
       Function[BoxForm`e$, 
        TableForm[
        BoxForm`e$, TableAlignments -> Center, 
         TableHeadings -> {{"B4", "B6", "B10", "B16"}, {
           "B4", "B6", "B10", "B16"}}]]], 
      StyleBox["\"B16\"", 15, 
       RGBColor[0, 0, 1], StripOnInput -> False]},
     "Labeled",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       BaselinePosition -> {1, 1}]& ),
     InterpretationFunction->(RowBox[{"Labeled", "[", 
        RowBox[{#, ",", #2}], "]"}]& )]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8523190880187936`*^9, {3.852319195196992*^9, 3.8523192178893394`*^9}, 
   3.8523221864799156`*^9},
 CellLabel->
  "Out[598]=",ExpressionUUID->"e0880bcb-1c46-49d7-a911-0a75699d06d5"]
}, Open  ]],

Cell["\<\
\tSytuacja podobna jak dla funktora B7.
\
\>", "Text",
 CellChangeTimes->{{3.852319496155671*^9, 3.8523195149051437`*^9}, 
   3.8523206951275125`*^9},ExpressionUUID->"0d216568-94d7-41d2-99c7-\
258fd3339d02"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Wypisz", "[", "9", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"headings", "=", 
       RowBox[{"{", 
        RowBox[{
        "\"\<(4,4)\>\"", ",", "\"\<(6,6)\>\"", ",", "\"\<(9,9)\>\"", ",", 
         "\"\<(13,13)\>\"", ",", "\"\<(11,11)\>\"", ",", "\"\<(8,8)\>\"", 
         ",", "\"\<(4,9)\>\"", ",", "\"\<(5,5)\>\"", ",", "\"\<(6,9)\>\"", 
         ",", "\"\<(3,3)\>\"", ",", "\"\<(3,5)\>\"", ",", "\"\<(10,10)\>\"", 
         ",", "\"\<(3,13)\>\"", ",", "\"\<(2,2)\>\"", ",", "\"\<(8,11)\>\"", 
         ",", "\"\<(1,1)\>\""}], "}"}]}], ",", 
      RowBox[{"values", "=", 
       RowBox[{"{", 
        RowBox[{
        "13", ",", "11", ",", "8", ",", "4", ",", "6", ",", "9", ",", "5", 
         ",", "12", ",", "3", ",", "14", ",", "10", ",", "7", ",", "2", ",", 
         "15", ",", "1", ",", "16"}], "}"}]}]}], "}"}], ",", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<\\n\>\"", ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<B9\>\"", ",", "15", ",", "Purple"}], "]"}], ",", 
      "\"\<\\n\>\"", ",", 
      RowBox[{"TableForm", "[", 
       RowBox[{"values", ",", " ", 
        RowBox[{"TableAlignments", "\[Rule]", " ", "Right"}], ",", " ", 
        RowBox[{"TableDirections", "\[Rule]", "Row"}], ",", " ", 
        RowBox[{"TableHeadings", "\[Rule]", " ", 
         RowBox[{"{", "headings", "}"}]}]}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.852319528695007*^9, 3.852319537462843*^9}, 
   3.8523196522743216`*^9, {3.852319733370401*^9, 3.8523200260102453`*^9}, {
   3.852320080273836*^9, 3.852320188414558*^9}, {3.8523202235309286`*^9, 
   3.8523202304258194`*^9}, {3.852320278507928*^9, 3.852320281015752*^9}, {
   3.85232034713636*^9, 3.852320405872696*^9}, {3.852320447145425*^9, 
   3.852320462724684*^9}},
 CellLabel->
  "In[599]:=",ExpressionUUID->"6f212729-ddc3-42a5-9dfe-63e1d106270f"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"B9\"\>",
  StripOnInput->False,
  LineColor->RGBColor[1, 0, 0],
  FrontFaceColor->RGBColor[1, 0, 0],
  BackFaceColor->RGBColor[1, 0, 0],
  GraphicsColor->RGBColor[1, 0, 0],
  FontSize->18,
  FontColor->RGBColor[1, 0, 0]]], "Print",
 CellChangeTimes->{
  3.8523195380794487`*^9, {3.852320177931445*^9, 3.8523201893167896`*^9}, 
   3.852320231545239*^9, 3.852320328896099*^9, 3.8523204643463326`*^9, 
   3.8523221941269407`*^9},
 CellLabel->
  "During evaluation of \
In[599]:=",ExpressionUUID->"be5a3fcb-296a-4e17-aab7-00a819fd18dd"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"B1\"\>",
       HoldForm], 
      TagBox["\<\"B2\"\>",
       HoldForm], 
      TagBox["\<\"B3\"\>",
       HoldForm], 
      TagBox["\<\"B4\"\>",
       HoldForm], 
      TagBox["\<\"B5\"\>",
       HoldForm], 
      TagBox["\<\"B6\"\>",
       HoldForm], 
      TagBox["\<\"B7\"\>",
       HoldForm], 
      TagBox["\<\"B8\"\>",
       HoldForm], 
      TagBox["\<\"B9\"\>",
       HoldForm], 
      TagBox["\<\"B10\"\>",
       HoldForm], 
      TagBox["\<\"B11\"\>",
       HoldForm], 
      TagBox["\<\"B12\"\>",
       HoldForm], 
      TagBox["\<\"B13\"\>",
       HoldForm], 
      TagBox["\<\"B14\"\>",
       HoldForm], 
      TagBox["\<\"B15\"\>",
       HoldForm], 
      TagBox["\<\"B16\"\>",
       HoldForm]},
     {
      TagBox["\<\"B1\"\>",
       HoldForm], "16", "15", "14", "13", "12", "11", "10", "9", "8", "7", 
      "6", "5", "4", "3", "2", "1"},
     {
      TagBox["\<\"B2\"\>",
       HoldForm], "15", "15", "13", "13", "11", "11", "9", "9", "7", "7", "5",
       "5", "3", "3", "1", "1"},
     {
      TagBox["\<\"B3\"\>",
       HoldForm], "14", "13", "14", "13", "10", "9", "10", "9", "6", "5", "6",
       "5", "2", "1", "2", "1"},
     {
      TagBox["\<\"B4\"\>",
       HoldForm], "13", "13", "13", "13", "9", "9", "9", "9", "5", "5", "5", 
      "5", "1", "1", "1", "1"},
     {
      TagBox["\<\"B5\"\>",
       HoldForm], "12", "11", "10", "9", "12", "11", "10", "9", "4", "3", "2",
       "1", "4", "3", "2", "1"},
     {
      TagBox["\<\"B6\"\>",
       HoldForm], "11", "11", "9", "9", "11", "11", "9", "9", "3", "3", "1", 
      "1", "3", "3", "1", "1"},
     {
      TagBox["\<\"B7\"\>",
       HoldForm], "10", "9", "10", "9", "10", "9", "10", "9", "2", "1", "2", 
      "1", "2", "1", "2", "1"},
     {
      TagBox["\<\"B8\"\>",
       HoldForm], "9", "9", "9", "9", "9", "9", "9", "9", "1", "1", "1", "1", 
      "1", "1", "1", "1"},
     {
      TagBox["\<\"B9\"\>",
       HoldForm], "8", "7", "6", "5", "4", "3", "2", "1", "8", "7", "6", "5", 
      "4", "3", "2", "1"},
     {
      TagBox["\<\"B10\"\>",
       HoldForm], "7", "7", "5", "5", "3", "3", "1", "1", "7", "7", "5", "5", 
      "3", "3", "1", "1"},
     {
      TagBox["\<\"B11\"\>",
       HoldForm], "6", "5", "6", "5", "2", "1", "2", "1", "6", "5", "6", "5", 
      "2", "1", "2", "1"},
     {
      TagBox["\<\"B12\"\>",
       HoldForm], "5", "5", "5", "5", "1", "1", "1", "1", "5", "5", "5", "5", 
      "1", "1", "1", "1"},
     {
      TagBox["\<\"B13\"\>",
       HoldForm], "4", "3", "2", "1", "4", "3", "2", "1", "4", "3", "2", "1", 
      "4", "3", "2", "1"},
     {
      TagBox["\<\"B14\"\>",
       HoldForm], "3", "3", "1", "1", "3", "3", "1", "1", "3", "3", "1", "1", 
      "3", "3", "1", "1"},
     {
      TagBox["\<\"B15\"\>",
       HoldForm], "2", "1", "2", "1", "2", "1", "2", "1", "2", "1", "2", "1", 
      "2", "1", "2", "1"},
     {
      TagBox["\<\"B16\"\>",
       HoldForm], "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableAlignments -> Center, 
    TableHeadings -> {{
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}, {
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}}]]]], "Print",
 CellChangeTimes->{
  3.8523195380794487`*^9, {3.852320177931445*^9, 3.8523201893167896`*^9}, 
   3.852320231545239*^9, 3.852320328896099*^9, 3.8523204643463326`*^9, 
   3.8523221941585035`*^9},
 CellLabel->
  "During evaluation of \
In[599]:=",ExpressionUUID->"4a052fc7-0c04-4688-8ee3-8d9111830ffd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\n\"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"B9\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.5, 0, 0.5],
    FrontFaceColor->RGBColor[0.5, 0, 0.5],
    BackFaceColor->RGBColor[0.5, 0, 0.5],
    GraphicsColor->RGBColor[0.5, 0, 0.5],
    FontSize->15,
    FontColor->RGBColor[0.5, 0, 0.5]], "\[InvisibleSpace]", "\<\"\\n\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"(4,4)\"\>",
         HoldForm], 
        TagBox["\<\"(6,6)\"\>",
         HoldForm], 
        TagBox["\<\"(9,9)\"\>",
         HoldForm], 
        TagBox["\<\"(13,13)\"\>",
         HoldForm], 
        TagBox["\<\"(11,11)\"\>",
         HoldForm], 
        TagBox["\<\"(8,8)\"\>",
         HoldForm], 
        TagBox["\<\"(4,9)\"\>",
         HoldForm], 
        TagBox["\<\"(5,5)\"\>",
         HoldForm], 
        TagBox["\<\"(6,9)\"\>",
         HoldForm], 
        TagBox["\<\"(3,3)\"\>",
         HoldForm], 
        TagBox["\<\"(3,5)\"\>",
         HoldForm], 
        TagBox["\<\"(10,10)\"\>",
         HoldForm], 
        TagBox["\<\"(3,13)\"\>",
         HoldForm], 
        TagBox["\<\"(2,2)\"\>",
         HoldForm], 
        TagBox["\<\"(8,11)\"\>",
         HoldForm], 
        TagBox["\<\"(1,1)\"\>",
         HoldForm]},
       {"13", "11", "8", "4", "6", "9", "5", "12", "3", "14", "10", "7", "2", 
        "15", "1", "16"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{
       "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     OutputFormsDump`HeadedRows],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableAlignments -> Right, TableDirections -> Row, 
      TableHeadings -> {{
        "(4,4)", "(6,6)", "(9,9)", "(13,13)", "(11,11)", "(8,8)", "(4,9)", 
         "(5,5)", "(6,9)", "(3,3)", "(3,5)", "(10,10)", "(3,13)", "(2,2)", 
         "(8,11)", "(1,1)"}}]]]}],
  SequenceForm["\n", 
   Style["B9", 15, 
    RGBColor[0.5, 0, 0.5]], "\n", 
   TableForm[{13, 11, 8, 4, 6, 9, 5, 12, 3, 14, 10, 7, 2, 15, 1, 16}, 
    TableAlignments -> Right, TableDirections -> Row, 
    TableHeadings -> {{
      "(4,4)", "(6,6)", "(9,9)", "(13,13)", "(11,11)", "(8,8)", "(4,9)", 
       "(5,5)", "(6,9)", "(3,3)", "(3,5)", "(10,10)", "(3,13)", "(2,2)", 
       "(8,11)", "(1,1)"}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8523195380794487`*^9, {3.852320177931445*^9, 3.8523201893167896`*^9}, 
   3.852320231545239*^9, 3.852320328896099*^9, 3.8523204643463326`*^9, 
   3.8523221942057853`*^9},
 CellLabel->
  "During evaluation of \
In[599]:=",ExpressionUUID->"feaff92b-7183-4269-8d9d-e127c760f92f"]
}, Open  ]]
}, Open  ]],

Cell["\<\
\tPowy\:017csza tabela przedstawia jak mo\:017cemy uzyska\[CAcute] kolejne \
funktory zdaniotw\[OAcute]rcze za pomoc\:0105 B9. Jako argument\[OAcute]w w \
kolejnych kolumnach u\:017cywamy tylko sp\[OAcute]jnik\[OAcute]w, \
kt\[OAcute]re otrzymali\:015bmy w kolumnach wcze\:015bniejszych.

\
\>", "Text",
 CellChangeTimes->{{3.852320484520137*^9, 3.85232064513841*^9}, {
  3.8523207016438246`*^9, 
  3.8523207114077516`*^9}},ExpressionUUID->"898d15fe-2fad-4bc1-97be-\
a2644763be2c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Wypisz", "[", "15", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"headings", "=", 
       RowBox[{"{", 
        RowBox[{
        "\"\<(4,4)\>\"", ",", "\"\<(6,6)\>\"", ",", "\"\<(15,15)\>\"", ",", 
         "\"\<(13,13)\>\"", ",", "\"\<(11,11)\>\"", ",", "\"\<(2,2)\>\"", 
         ",", "\"\<(4,15)\>\"", ",", "\"\<(12,12)\>\"", ",", "\"\<(15,4)\>\"",
          ",", "\"\<(14,14)\>\"", ",", "\"\<(2,3)\>\"", ",", 
         "\"\<(16,16)\>\"", ",", "\"\<(11,13)\>\"", ",", "\"\<(8,8)\>\"", 
         ",", "\"\<(12,14)\>\"", ",", "\"\<(7,7)\>\""}], "}"}]}], ",", 
      RowBox[{"values", "=", 
       RowBox[{"{", 
        RowBox[{
        "13", ",", "11", ",", "2", ",", "4", ",", "6", ",", "15", ",", "12", 
         ",", "5", ",", "14", ",", "3", ",", "16", ",", "1", ",", "8", ",", 
         "9", ",", "7", ",", "10"}], "}"}]}]}], "}"}], ",", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<\\n\>\"", ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<B15\>\"", ",", "15", ",", "Purple"}], "]"}], ",", 
      "\"\<\\n\>\"", ",", 
      RowBox[{"TableForm", "[", 
       RowBox[{"values", ",", " ", 
        RowBox[{"TableAlignments", "\[Rule]", " ", "Center"}], ",", " ", 
        RowBox[{"TableDirections", "\[Rule]", "Row"}], ",", " ", 
        RowBox[{"TableHeadings", "\[Rule]", " ", 
         RowBox[{"{", "headings", "}"}]}]}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.852320717779934*^9, 3.8523207512199044`*^9}, {
  3.852320801862105*^9, 3.8523209044669533`*^9}, {3.8523209461458783`*^9, 
  3.852320972098622*^9}, {3.852321003638839*^9, 3.852321021064204*^9}, {
  3.8523210604282117`*^9, 3.8523211986547885`*^9}, {3.852327230273716*^9, 
  3.8523272344343653`*^9}},
 CellLabel->
  "In[684]:=",ExpressionUUID->"0204de62-3e42-4d27-ade5-12790dc1e1cb"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"B15\"\>",
  StripOnInput->False,
  LineColor->RGBColor[1, 0, 0],
  FrontFaceColor->RGBColor[1, 0, 0],
  BackFaceColor->RGBColor[1, 0, 0],
  GraphicsColor->RGBColor[1, 0, 0],
  FontSize->18,
  FontColor->RGBColor[1, 0, 0]]], "Print",
 CellChangeTimes->{{3.852320896780326*^9, 3.852320906627161*^9}, 
   3.8523212028214674`*^9, 3.8523222025170836`*^9, 3.8523272357920494`*^9},
 CellLabel->
  "During evaluation of \
In[684]:=",ExpressionUUID->"5ebe1ef0-ec68-4657-8c92-56027d238297"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"B1\"\>",
       HoldForm], 
      TagBox["\<\"B2\"\>",
       HoldForm], 
      TagBox["\<\"B3\"\>",
       HoldForm], 
      TagBox["\<\"B4\"\>",
       HoldForm], 
      TagBox["\<\"B5\"\>",
       HoldForm], 
      TagBox["\<\"B6\"\>",
       HoldForm], 
      TagBox["\<\"B7\"\>",
       HoldForm], 
      TagBox["\<\"B8\"\>",
       HoldForm], 
      TagBox["\<\"B9\"\>",
       HoldForm], 
      TagBox["\<\"B10\"\>",
       HoldForm], 
      TagBox["\<\"B11\"\>",
       HoldForm], 
      TagBox["\<\"B12\"\>",
       HoldForm], 
      TagBox["\<\"B13\"\>",
       HoldForm], 
      TagBox["\<\"B14\"\>",
       HoldForm], 
      TagBox["\<\"B15\"\>",
       HoldForm], 
      TagBox["\<\"B16\"\>",
       HoldForm]},
     {
      TagBox["\<\"B1\"\>",
       HoldForm], "16", "16", "16", "16", "16", "16", "16", "16", "16", "16", 
      "16", "16", "16", "16", "16", "16"},
     {
      TagBox["\<\"B2\"\>",
       HoldForm], "16", "15", "16", "15", "16", "15", "16", "15", "16", "15", 
      "16", "15", "16", "15", "16", "15"},
     {
      TagBox["\<\"B3\"\>",
       HoldForm], "16", "16", "14", "14", "16", "16", "14", "14", "16", "16", 
      "14", "14", "16", "16", "14", "14"},
     {
      TagBox["\<\"B4\"\>",
       HoldForm], "16", "15", "14", "13", "16", "15", "14", "13", "16", "15", 
      "14", "13", "16", "15", "14", "13"},
     {
      TagBox["\<\"B5\"\>",
       HoldForm], "16", "16", "16", "16", "12", "12", "12", "12", "16", "16", 
      "16", "16", "12", "12", "12", "12"},
     {
      TagBox["\<\"B6\"\>",
       HoldForm], "16", "15", "16", "15", "12", "11", "12", "11", "16", "15", 
      "16", "15", "12", "11", "12", "11"},
     {
      TagBox["\<\"B7\"\>",
       HoldForm], "16", "16", "14", "14", "12", "12", "10", "10", "16", "16", 
      "14", "14", "12", "12", "10", "10"},
     {
      TagBox["\<\"B8\"\>",
       HoldForm], "16", "15", "14", "13", "12", "11", "10", "9", "16", "15", 
      "14", "13", "12", "11", "10", "9"},
     {
      TagBox["\<\"B9\"\>",
       HoldForm], "16", "16", "16", "16", "16", "16", "16", "16", "8", "8", 
      "8", "8", "8", "8", "8", "8"},
     {
      TagBox["\<\"B10\"\>",
       HoldForm], "16", "15", "16", "15", "16", "15", "16", "15", "8", "7", 
      "8", "7", "8", "7", "8", "7"},
     {
      TagBox["\<\"B11\"\>",
       HoldForm], "16", "16", "14", "14", "16", "16", "14", "14", "8", "8", 
      "6", "6", "8", "8", "6", "6"},
     {
      TagBox["\<\"B12\"\>",
       HoldForm], "16", "15", "14", "13", "16", "15", "14", "13", "8", "7", 
      "6", "5", "8", "7", "6", "5"},
     {
      TagBox["\<\"B13\"\>",
       HoldForm], "16", "16", "16", "16", "12", "12", "12", "12", "8", "8", 
      "8", "8", "4", "4", "4", "4"},
     {
      TagBox["\<\"B14\"\>",
       HoldForm], "16", "15", "16", "15", "12", "11", "12", "11", "8", "7", 
      "8", "7", "4", "3", "4", "3"},
     {
      TagBox["\<\"B15\"\>",
       HoldForm], "16", "16", "14", "14", "12", "12", "10", "10", "8", "8", 
      "6", "6", "4", "4", "2", "2"},
     {
      TagBox["\<\"B16\"\>",
       HoldForm], "16", "15", "14", "13", "12", "11", "10", "9", "8", "7", 
      "6", "5", "4", "3", "2", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableAlignments -> Center, 
    TableHeadings -> {{
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}, {
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}}]]]], "Print",
 CellChangeTimes->{{3.852320896780326*^9, 3.852320906627161*^9}, 
   3.8523212028214674`*^9, 3.8523222025170836`*^9, 3.85232723583892*^9},
 CellLabel->
  "During evaluation of \
In[684]:=",ExpressionUUID->"f3cad3b6-ab1f-4e1c-bf94-fbbfba5e0159"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\n\"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"B15\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0.5, 0, 0.5],
    FrontFaceColor->RGBColor[0.5, 0, 0.5],
    BackFaceColor->RGBColor[0.5, 0, 0.5],
    GraphicsColor->RGBColor[0.5, 0, 0.5],
    FontSize->15,
    FontColor->RGBColor[0.5, 0, 0.5]], "\[InvisibleSpace]", "\<\"\\n\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"(4,4)\"\>",
         HoldForm], 
        TagBox["\<\"(6,6)\"\>",
         HoldForm], 
        TagBox["\<\"(15,15)\"\>",
         HoldForm], 
        TagBox["\<\"(13,13)\"\>",
         HoldForm], 
        TagBox["\<\"(11,11)\"\>",
         HoldForm], 
        TagBox["\<\"(2,2)\"\>",
         HoldForm], 
        TagBox["\<\"(4,15)\"\>",
         HoldForm], 
        TagBox["\<\"(12,12)\"\>",
         HoldForm], 
        TagBox["\<\"(15,4)\"\>",
         HoldForm], 
        TagBox["\<\"(14,14)\"\>",
         HoldForm], 
        TagBox["\<\"(2,3)\"\>",
         HoldForm], 
        TagBox["\<\"(16,16)\"\>",
         HoldForm], 
        TagBox["\<\"(11,13)\"\>",
         HoldForm], 
        TagBox["\<\"(8,8)\"\>",
         HoldForm], 
        TagBox["\<\"(12,14)\"\>",
         HoldForm], 
        TagBox["\<\"(7,7)\"\>",
         HoldForm]},
       {"13", "11", "2", "4", "6", "15", "12", "5", "14", "3", "16", "1", "8",
         "9", "7", "10"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
      GridBoxDividers->{
       "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     OutputFormsDump`HeadedRows],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableAlignments -> Center, TableDirections -> Row, 
      TableHeadings -> {{
        "(4,4)", "(6,6)", "(15,15)", "(13,13)", "(11,11)", "(2,2)", "(4,15)", 
         "(12,12)", "(15,4)", "(14,14)", "(2,3)", "(16,16)", "(11,13)", 
         "(8,8)", "(12,14)", "(7,7)"}}]]]}],
  SequenceForm["\n", 
   Style["B15", 15, 
    RGBColor[0.5, 0, 0.5]], "\n", 
   TableForm[{13, 11, 2, 4, 6, 15, 12, 5, 14, 3, 16, 1, 8, 9, 7, 10}, 
    TableAlignments -> Center, TableDirections -> Row, 
    TableHeadings -> {{
      "(4,4)", "(6,6)", "(15,15)", "(13,13)", "(11,11)", "(2,2)", "(4,15)", 
       "(12,12)", "(15,4)", "(14,14)", "(2,3)", "(16,16)", "(11,13)", "(8,8)",
        "(12,14)", "(7,7)"}}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.852320896780326*^9, 3.852320906627161*^9}, 
   3.8523212028214674`*^9, 3.8523222025170836`*^9, 3.8523272358767047`*^9},
 CellLabel->
  "During evaluation of \
In[684]:=",ExpressionUUID->"ee6e4e16-84e9-4782-9b68-44fc0d893d85"]
}, Open  ]]
}, Open  ]],

Cell["\<\
\tSytuacja jak w B9.

Wniosek:
\tTylko funktory B9 (binegacja/strza\[LSlash]ka Pierce\[CloseCurlyQuote]a) i \
B15 (dysjunkcja/kreska Sheffera) mog\:0105 samodzielnie definiowa\[CAcute] \
inne dwuargumentowe funktory zdaniotw\[OAcute]rcze.
\t\
\>", "Text",
 CellChangeTimes->{{3.8523213075100408`*^9, 3.8523213685526266`*^9}, {
   3.8523214013060246`*^9, 3.8523214330600863`*^9}, {3.8523214665215435`*^9, 
   3.8523214831456656`*^9}, {3.8523215252046275`*^9, 3.8523215676716795`*^9}, 
   3.8523222525145864`*^9},ExpressionUUID->"2cf7ae85-edeb-4da7-891a-\
11e1044b3c64"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fraktale", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "3", ",", "5", ",", "8", ",", "9", ",", "12", ",", "14", ",", 
     "15"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"calaPrzestrzen", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"4", ",", "7", ",", "10", ",", "13"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"prosta", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6", ",", "11", ",", "16"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list3dfrac", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"list3dfrac", ",", " ", 
      RowBox[{"list3d", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "fraktale"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list3dline", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";", " ", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"list3dline", ",", " ", 
      RowBox[{"list3d", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "prosta"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list3dsurface", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";", " ", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"list3dsurface", ",", " ", 
      RowBox[{"list3d", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "calaPrzestrzen"}], "}"}]}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQ/WzNVKGlm984hsyrFgXR6+bskATRigfq5UC0Q/Rz
NRDtFx6nCxZnjY4C0StuqcWD6KgjL1NAdE2jehqIFllinQWiF1XcKgfR87bx
7QDRdl+WXgTR/ft/XQPrvzzhFohm0Uu/B6IVTpY9AdFy/hs+gmgbkcLvILrr
9YU/INpQrIRlGZA+3v6TE0QbX43mA9ESO7VkQfRhJzsFEM0j7GQKotnd8+xA
tJoklweIttCz9QLRfgeMAkD0XO2iaBCd8nhXPFg929MkEL3w6crpIPqbkt4i
EL1g5d1VILqwyH0DiD6UM28LiH555MhWEL1S9Gn7ciCtadneDaJDnn7rB9FN
ibemgui9rZOWgegOJ+XNIFor6vmOHUD62ZzHu0E0ADVP1zc=
  "],ExpressionUUID->"9f445e9d-a6aa-461a-8c5c-4d7e446006f5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"list3d", "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
       RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}], ",", 
     "\"\<B4 (B13,B7,B10)\>\""}], "]"}], ",", 
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", " ", 
      RowBox[{
       RowBox[{"list3d", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}], ",", 
     "\"\<B1 (B16)\>\""}], "]"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"list3d", "[", 
        RowBox[{"[", "6", "]"}], "]"}], ",", " ", 
       RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}], ",", "\"\<B6\>\""}], 
    "]"}], ",", 
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"list3d", "[", 
        RowBox[{"[", "11", "]"}], "]"}], ",", " ", 
       RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}], ",", "\"\<B11\>\""}],
     "]"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"list3d", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
       RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}], ",", 
     "\"\<B2 (B5)\>\""}], "]"}], ",", " ", 
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"list3d", "[", 
        RowBox[{"[", "15", "]"}], "]"}], ",", " ", 
       RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}], ",", 
     "\"\<B15 (B12)\>\""}], "]"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"list3d", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
       RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}], ",", 
     "\"\<B3 (B9)\>\""}], "]"}], ",", 
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"list3d", "[", 
        RowBox[{"[", "14", "]"}], "]"}], ",", " ", 
       RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}], ",", 
     "\"\<B14 (B8)\>\""}], "]"}]}], "}"}], "\[IndentingNewLine]"}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.852289255457777*^9, 3.8522892671327844`*^9}, {
   3.8522893065124493`*^9, 3.852289427640644*^9}, {3.852289530923087*^9, 
   3.8522896617918873`*^9}, 3.8522898648449636`*^9, {3.8522899359842243`*^9, 
   3.852290046496729*^9}, {3.8522900813274517`*^9, 3.852290125651865*^9}, {
   3.852290189388547*^9, 3.8522902844092784`*^9}, {3.8522903718529587`*^9, 
   3.852290432060408*^9}, {3.852290484575038*^9, 3.852290561682104*^9}, {
   3.852290623124853*^9, 3.8522906579766455`*^9}, {3.8522907759513597`*^9, 
   3.852290885767528*^9}, {3.8522910722274466`*^9, 3.8522911029214544`*^9}, {
   3.852291161164385*^9, 3.852291274760191*^9}, {3.852291320490437*^9, 
   3.8522913434824705`*^9}, {3.852291407825935*^9, 3.8522914479833107`*^9}, {
   3.8522914965374227`*^9, 3.8522915147814307`*^9}, {3.852291572586913*^9, 
   3.8522918652110467`*^9}, {3.8522919519794283`*^9, 
   3.8522920213722615`*^9}, {3.8522920653316994`*^9, 
   3.8522920701531944`*^9}, {3.8522921406598344`*^9, 3.85229220689939*^9}, {
   3.8523222811279907`*^9, 3.852322314691798*^9}},
 CellLabel->
  "In[612]:=",ExpressionUUID->"d953b3d8-25c1-4f2e-a1b3-edd9094bc082"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{}, {{{
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 1.}, {3., 1.}, {4., 1.}, {5., 1.}, {6., 
           1.}, {7., 1.}, {8., 1.}, {9., 1.}, {10., 1.}, {11., 1.}, {12., 
           1.}, {13., 1.}, {14., 1.}, {15., 1.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 2.}, {2., 2.}, {3., 2.}, {4., 2.}, {5., 2.}, {6., 
           2.}, {7., 2.}, {8., 2.}, {9., 2.}, {10., 2.}, {11., 2.}, {12., 
           2.}, {13., 2.}, {14., 2.}, {15., 2.}, {16., 2.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 3.}, {2., 3.}, {3., 3.}, {4., 3.}, {5., 3.}, {6., 
           3.}, {7., 3.}, {8., 3.}, {9., 3.}, {10., 3.}, {11., 3.}, {12., 
           3.}, {13., 3.}, {14., 3.}, {15., 3.}, {16., 3.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 4.}, {2., 4.}, {3., 4.}, {4., 4.}, {5., 4.}, {6., 
           4.}, {7., 4.}, {8., 4.}, {9., 4.}, {10., 4.}, {11., 4.}, {12., 
           4.}, {13., 4.}, {14., 4.}, {15., 4.}, {16., 4.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 5.}, {2., 5.}, {3., 5.}, {4., 5.}, {5., 5.}, {6., 
           5.}, {7., 5.}, {8., 5.}, {9., 5.}, {10., 5.}, {11., 5.}, {12., 
           5.}, {13., 5.}, {14., 5.}, {15., 5.}, {16., 5.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 6.}, {2., 6.}, {3., 6.}, {4., 6.}, {5., 6.}, {6., 
           6.}, {7., 6.}, {8., 6.}, {9., 6.}, {10., 6.}, {11., 6.}, {12., 
           6.}, {13., 6.}, {14., 6.}, {15., 6.}, {16., 6.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 7.}, {2., 7.}, {3., 7.}, {4., 7.}, {5., 7.}, {6., 
           7.}, {7., 7.}, {8., 7.}, {9., 7.}, {10., 7.}, {11., 7.}, {12., 
           7.}, {13., 7.}, {14., 7.}, {15., 7.}, {16., 7.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 8.}, {2., 8.}, {3., 8.}, {4., 8.}, {5., 8.}, {6., 
           8.}, {7., 8.}, {8., 8.}, {9., 8.}, {10., 8.}, {11., 8.}, {12., 
           8.}, {13., 8.}, {14., 8.}, {15., 8.}, {16., 8.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 9.}, {2., 9.}, {3., 9.}, {4., 9.}, {5., 9.}, {6., 
           9.}, {7., 9.}, {8., 9.}, {9., 9.}, {10., 9.}, {11., 9.}, {12., 
           9.}, {13., 9.}, {14., 9.}, {15., 9.}, {16., 9.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 10.}, {2., 10.}, {3., 10.}, {4., 10.}, {5., 10.}, {
           6., 10.}, {7., 10.}, {8., 10.}, {9., 10.}, {10., 10.}, {11., 
           10.}, {12., 10.}, {13., 10.}, {14., 10.}, {15., 10.}, {16., 
           10.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.915, 0.3325, 0.2125], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 11.}, {2., 11.}, {3., 11.}, {4., 11.}, {5., 11.}, {
           6., 11.}, {7., 11.}, {8., 11.}, {9., 11.}, {10., 11.}, {11., 
           11.}, {12., 11.}, {13., 11.}, {14., 11.}, {15., 11.}, {16., 
           11.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 12.}, {2., 12.}, {3., 12.}, {4., 12.}, {5., 12.}, {
           6., 12.}, {7., 12.}, {8., 12.}, {9., 12.}, {10., 12.}, {11., 
           12.}, {12., 12.}, {13., 12.}, {14., 12.}, {15., 12.}, {16., 
           12.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[
           0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 13.}, {2., 13.}, {3., 13.}, {4., 13.}, {5., 13.}, {
           6., 13.}, {7., 13.}, {8., 13.}, {9., 13.}, {10., 13.}, {11., 
           13.}, {12., 13.}, {13., 13.}, {14., 13.}, {15., 13.}, {16., 
           13.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 14.}, {2., 14.}, {3., 14.}, {4., 14.}, {5., 14.}, {
           6., 14.}, {7., 14.}, {8., 14.}, {9., 14.}, {10., 14.}, {11., 
           14.}, {12., 14.}, {13., 14.}, {14., 14.}, {15., 14.}, {16., 
           14.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 15.}, {2., 15.}, {3., 15.}, {4., 15.}, {5., 15.}, {
           6., 15.}, {7., 15.}, {8., 15.}, {9., 15.}, {10., 15.}, {11., 
           15.}, {12., 15.}, {13., 15.}, {14., 15.}, {15., 15.}, {16., 
           15.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 16.}, {3., 16.}, {4., 16.}, {5., 16.}, {
           6., 16.}, {7., 16.}, {8., 16.}, {9., 16.}, {10., 16.}, {11., 
           16.}, {12., 16.}, {13., 16.}, {14., 16.}, {15., 16.}, {16., 
           16.}}]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 350, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotRange -> {{0., 16.}, {0, 16.}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     "\"B4 (B13,B7,B10)\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 1.}, {3., 1.}, {4., 1.}, {5., 1.}, {6., 
           1.}, {7., 1.}, {8., 1.}, {9., 1.}, {10., 1.}, {11., 1.}, {12., 
           1.}, {13., 1.}, {14., 1.}, {15., 1.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 1.}, {3., 1.}, {4., 1.}, {5., 1.}, {6., 
           1.}, {7., 1.}, {8., 1.}, {9., 1.}, {10., 1.}, {11., 1.}, {12., 
           1.}, {13., 1.}, {14., 1.}, {15., 1.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 1.}, {3., 1.}, {4., 1.}, {5., 1.}, {6., 
           1.}, {7., 1.}, {8., 1.}, {9., 1.}, {10., 1.}, {11., 1.}, {12., 
           1.}, {13., 1.}, {14., 1.}, {15., 1.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 1.}, {3., 1.}, {4., 1.}, {5., 1.}, {6., 
           1.}, {7., 1.}, {8., 1.}, {9., 1.}, {10., 1.}, {11., 1.}, {12., 
           1.}, {13., 1.}, {14., 1.}, {15., 1.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 1.}, {3., 1.}, {4., 1.}, {5., 1.}, {6., 
           1.}, {7., 1.}, {8., 1.}, {9., 1.}, {10., 1.}, {11., 1.}, {12., 
           1.}, {13., 1.}, {14., 1.}, {15., 1.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 1.}, {3., 1.}, {4., 1.}, {5., 1.}, {6., 
           1.}, {7., 1.}, {8., 1.}, {9., 1.}, {10., 1.}, {11., 1.}, {12., 
           1.}, {13., 1.}, {14., 1.}, {15., 1.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 1.}, {3., 1.}, {4., 1.}, {5., 1.}, {6., 
           1.}, {7., 1.}, {8., 1.}, {9., 1.}, {10., 1.}, {11., 1.}, {12., 
           1.}, {13., 1.}, {14., 1.}, {15., 1.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 1.}, {3., 1.}, {4., 1.}, {5., 1.}, {6., 
           1.}, {7., 1.}, {8., 1.}, {9., 1.}, {10., 1.}, {11., 1.}, {12., 
           1.}, {13., 1.}, {14., 1.}, {15., 1.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 1.}, {3., 1.}, {4., 1.}, {5., 1.}, {6., 
           1.}, {7., 1.}, {8., 1.}, {9., 1.}, {10., 1.}, {11., 1.}, {12., 
           1.}, {13., 1.}, {14., 1.}, {15., 1.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 1.}, {3., 1.}, {4., 1.}, {5., 1.}, {6., 
           1.}, {7., 1.}, {8., 1.}, {9., 1.}, {10., 1.}, {11., 1.}, {12., 
           1.}, {13., 1.}, {14., 1.}, {15., 1.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.915, 0.3325, 0.2125], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 1.}, {3., 1.}, {4., 1.}, {5., 1.}, {6., 
           1.}, {7., 1.}, {8., 1.}, {9., 1.}, {10., 1.}, {11., 1.}, {12., 
           1.}, {13., 1.}, {14., 1.}, {15., 1.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 1.}, {3., 1.}, {4., 1.}, {5., 1.}, {6., 
           1.}, {7., 1.}, {8., 1.}, {9., 1.}, {10., 1.}, {11., 1.}, {12., 
           1.}, {13., 1.}, {14., 1.}, {15., 1.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[
           0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 1.}, {3., 1.}, {4., 1.}, {5., 1.}, {6., 
           1.}, {7., 1.}, {8., 1.}, {9., 1.}, {10., 1.}, {11., 1.}, {12., 
           1.}, {13., 1.}, {14., 1.}, {15., 1.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 1.}, {3., 1.}, {4., 1.}, {5., 1.}, {6., 
           1.}, {7., 1.}, {8., 1.}, {9., 1.}, {10., 1.}, {11., 1.}, {12., 
           1.}, {13., 1.}, {14., 1.}, {15., 1.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 1.}, {3., 1.}, {4., 1.}, {5., 1.}, {6., 
           1.}, {7., 1.}, {8., 1.}, {9., 1.}, {10., 1.}, {11., 1.}, {12., 
           1.}, {13., 1.}, {14., 1.}, {15., 1.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 1.}, {3., 1.}, {4., 1.}, {5., 1.}, {6., 
           1.}, {7., 1.}, {8., 1.}, {9., 1.}, {10., 1.}, {11., 1.}, {12., 
           1.}, {13., 1.}, {14., 1.}, {15., 1.}, {16., 1.}}]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 350, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotRange -> {{0., 16.}, {0, 2.}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], "\"B1 (B16)\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.852290129195343*^9, {3.852290205244326*^9, 3.8522902221844473`*^9}, {
   3.852290254034783*^9, 3.8522902855125065`*^9}, 3.852290436337156*^9, 
   3.8522905642056885`*^9, 3.8522906256276093`*^9, 3.8522906604213715`*^9, {
   3.8522908642177086`*^9, 3.852290888846531*^9}, {3.8522910755699944`*^9, 
   3.8522911067493916`*^9}, 3.8522913664831285`*^9, 3.8522914550391345`*^9, {
   3.8522918502865863`*^9, 3.8522918666692095`*^9}, {3.8522919533682036`*^9, 
   3.852291969369771*^9}, 3.8522920294204907`*^9, 3.8522920725851965`*^9, 
   3.8522922098245153`*^9, {3.852322307247031*^9, 3.8523223167114077`*^9}},
 CellLabel->
  "Out[612]=",ExpressionUUID->"2bb05134-c392-472c-bf11-4b928e831b9f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{}, {{{
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 2.}, {3., 3.}, {4., 4.}, {5., 5.}, {6., 
           6.}, {7., 7.}, {8., 8.}, {9., 9.}, {10., 10.}, {11., 11.}, {12., 
           12.}, {13., 13.}, {14., 14.}, {15., 15.}, {16., 16.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 2.}, {3., 3.}, {4., 4.}, {5., 5.}, {6., 
           6.}, {7., 7.}, {8., 8.}, {9., 9.}, {10., 10.}, {11., 11.}, {12., 
           12.}, {13., 13.}, {14., 14.}, {15., 15.}, {16., 16.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 2.}, {3., 3.}, {4., 4.}, {5., 5.}, {6., 
           6.}, {7., 7.}, {8., 8.}, {9., 9.}, {10., 10.}, {11., 11.}, {12., 
           12.}, {13., 13.}, {14., 14.}, {15., 15.}, {16., 16.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 2.}, {3., 3.}, {4., 4.}, {5., 5.}, {6., 
           6.}, {7., 7.}, {8., 8.}, {9., 9.}, {10., 10.}, {11., 11.}, {12., 
           12.}, {13., 13.}, {14., 14.}, {15., 15.}, {16., 16.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 2.}, {3., 3.}, {4., 4.}, {5., 5.}, {6., 
           6.}, {7., 7.}, {8., 8.}, {9., 9.}, {10., 10.}, {11., 11.}, {12., 
           12.}, {13., 13.}, {14., 14.}, {15., 15.}, {16., 16.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 2.}, {3., 3.}, {4., 4.}, {5., 5.}, {6., 
           6.}, {7., 7.}, {8., 8.}, {9., 9.}, {10., 10.}, {11., 11.}, {12., 
           12.}, {13., 13.}, {14., 14.}, {15., 15.}, {16., 16.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 2.}, {3., 3.}, {4., 4.}, {5., 5.}, {6., 
           6.}, {7., 7.}, {8., 8.}, {9., 9.}, {10., 10.}, {11., 11.}, {12., 
           12.}, {13., 13.}, {14., 14.}, {15., 15.}, {16., 16.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 2.}, {3., 3.}, {4., 4.}, {5., 5.}, {6., 
           6.}, {7., 7.}, {8., 8.}, {9., 9.}, {10., 10.}, {11., 11.}, {12., 
           12.}, {13., 13.}, {14., 14.}, {15., 15.}, {16., 16.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 2.}, {3., 3.}, {4., 4.}, {5., 5.}, {6., 
           6.}, {7., 7.}, {8., 8.}, {9., 9.}, {10., 10.}, {11., 11.}, {12., 
           12.}, {13., 13.}, {14., 14.}, {15., 15.}, {16., 16.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 2.}, {3., 3.}, {4., 4.}, {5., 5.}, {6., 
           6.}, {7., 7.}, {8., 8.}, {9., 9.}, {10., 10.}, {11., 11.}, {12., 
           12.}, {13., 13.}, {14., 14.}, {15., 15.}, {16., 16.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.915, 0.3325, 0.2125], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 2.}, {3., 3.}, {4., 4.}, {5., 5.}, {6., 
           6.}, {7., 7.}, {8., 8.}, {9., 9.}, {10., 10.}, {11., 11.}, {12., 
           12.}, {13., 13.}, {14., 14.}, {15., 15.}, {16., 16.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 2.}, {3., 3.}, {4., 4.}, {5., 5.}, {6., 
           6.}, {7., 7.}, {8., 8.}, {9., 9.}, {10., 10.}, {11., 11.}, {12., 
           12.}, {13., 13.}, {14., 14.}, {15., 15.}, {16., 16.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[
           0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 2.}, {3., 3.}, {4., 4.}, {5., 5.}, {6., 
           6.}, {7., 7.}, {8., 8.}, {9., 9.}, {10., 10.}, {11., 11.}, {12., 
           12.}, {13., 13.}, {14., 14.}, {15., 15.}, {16., 16.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 2.}, {3., 3.}, {4., 4.}, {5., 5.}, {6., 
           6.}, {7., 7.}, {8., 8.}, {9., 9.}, {10., 10.}, {11., 11.}, {12., 
           12.}, {13., 13.}, {14., 14.}, {15., 15.}, {16., 16.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 2.}, {3., 3.}, {4., 4.}, {5., 5.}, {6., 
           6.}, {7., 7.}, {8., 8.}, {9., 9.}, {10., 10.}, {11., 11.}, {12., 
           12.}, {13., 13.}, {14., 14.}, {15., 15.}, {16., 16.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 2.}, {3., 3.}, {4., 4.}, {5., 5.}, {6., 
           6.}, {7., 7.}, {8., 8.}, {9., 9.}, {10., 10.}, {11., 11.}, {12., 
           12.}, {13., 13.}, {14., 14.}, {15., 15.}, {16., 
           16.}}]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 350, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotRange -> {{0., 16.}, {0, 16.}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], "\"B6\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 15.}, {3., 14.}, {4., 13.}, {5., 12.}, {
           6., 11.}, {7., 10.}, {8., 9.}, {9., 8.}, {10., 7.}, {11., 6.}, {
           12., 5.}, {13., 4.}, {14., 3.}, {15., 2.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 15.}, {3., 14.}, {4., 13.}, {5., 12.}, {
           6., 11.}, {7., 10.}, {8., 9.}, {9., 8.}, {10., 7.}, {11., 6.}, {
           12., 5.}, {13., 4.}, {14., 3.}, {15., 2.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 15.}, {3., 14.}, {4., 13.}, {5., 12.}, {
           6., 11.}, {7., 10.}, {8., 9.}, {9., 8.}, {10., 7.}, {11., 6.}, {
           12., 5.}, {13., 4.}, {14., 3.}, {15., 2.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 15.}, {3., 14.}, {4., 13.}, {5., 12.}, {
           6., 11.}, {7., 10.}, {8., 9.}, {9., 8.}, {10., 7.}, {11., 6.}, {
           12., 5.}, {13., 4.}, {14., 3.}, {15., 2.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 15.}, {3., 14.}, {4., 13.}, {5., 12.}, {
           6., 11.}, {7., 10.}, {8., 9.}, {9., 8.}, {10., 7.}, {11., 6.}, {
           12., 5.}, {13., 4.}, {14., 3.}, {15., 2.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 15.}, {3., 14.}, {4., 13.}, {5., 12.}, {
           6., 11.}, {7., 10.}, {8., 9.}, {9., 8.}, {10., 7.}, {11., 6.}, {
           12., 5.}, {13., 4.}, {14., 3.}, {15., 2.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 15.}, {3., 14.}, {4., 13.}, {5., 12.}, {
           6., 11.}, {7., 10.}, {8., 9.}, {9., 8.}, {10., 7.}, {11., 6.}, {
           12., 5.}, {13., 4.}, {14., 3.}, {15., 2.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 15.}, {3., 14.}, {4., 13.}, {5., 12.}, {
           6., 11.}, {7., 10.}, {8., 9.}, {9., 8.}, {10., 7.}, {11., 6.}, {
           12., 5.}, {13., 4.}, {14., 3.}, {15., 2.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 15.}, {3., 14.}, {4., 13.}, {5., 12.}, {
           6., 11.}, {7., 10.}, {8., 9.}, {9., 8.}, {10., 7.}, {11., 6.}, {
           12., 5.}, {13., 4.}, {14., 3.}, {15., 2.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 15.}, {3., 14.}, {4., 13.}, {5., 12.}, {
           6., 11.}, {7., 10.}, {8., 9.}, {9., 8.}, {10., 7.}, {11., 6.}, {
           12., 5.}, {13., 4.}, {14., 3.}, {15., 2.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.915, 0.3325, 0.2125], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 15.}, {3., 14.}, {4., 13.}, {5., 12.}, {
           6., 11.}, {7., 10.}, {8., 9.}, {9., 8.}, {10., 7.}, {11., 6.}, {
           12., 5.}, {13., 4.}, {14., 3.}, {15., 2.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 15.}, {3., 14.}, {4., 13.}, {5., 12.}, {
           6., 11.}, {7., 10.}, {8., 9.}, {9., 8.}, {10., 7.}, {11., 6.}, {
           12., 5.}, {13., 4.}, {14., 3.}, {15., 2.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[
           0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 15.}, {3., 14.}, {4., 13.}, {5., 12.}, {
           6., 11.}, {7., 10.}, {8., 9.}, {9., 8.}, {10., 7.}, {11., 6.}, {
           12., 5.}, {13., 4.}, {14., 3.}, {15., 2.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 15.}, {3., 14.}, {4., 13.}, {5., 12.}, {
           6., 11.}, {7., 10.}, {8., 9.}, {9., 8.}, {10., 7.}, {11., 6.}, {
           12., 5.}, {13., 4.}, {14., 3.}, {15., 2.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 15.}, {3., 14.}, {4., 13.}, {5., 12.}, {
           6., 11.}, {7., 10.}, {8., 9.}, {9., 8.}, {10., 7.}, {11., 6.}, {
           12., 5.}, {13., 4.}, {14., 3.}, {15., 2.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 15.}, {3., 14.}, {4., 13.}, {5., 12.}, {
           6., 11.}, {7., 10.}, {8., 9.}, {9., 8.}, {10., 7.}, {11., 6.}, {
           12., 5.}, {13., 4.}, {14., 3.}, {15., 2.}, {16., 
           1.}}]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 350, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotRange -> {{0., 16.}, {0, 16.}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], "\"B11\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.852290129195343*^9, {3.852290205244326*^9, 3.8522902221844473`*^9}, {
   3.852290254034783*^9, 3.8522902855125065`*^9}, 3.852290436337156*^9, 
   3.8522905642056885`*^9, 3.8522906256276093`*^9, 3.8522906604213715`*^9, {
   3.8522908642177086`*^9, 3.852290888846531*^9}, {3.8522910755699944`*^9, 
   3.8522911067493916`*^9}, 3.8522913664831285`*^9, 3.8522914550391345`*^9, {
   3.8522918502865863`*^9, 3.8522918666692095`*^9}, {3.8522919533682036`*^9, 
   3.852291969369771*^9}, 3.8522920294204907`*^9, 3.8522920725851965`*^9, 
   3.8522922098245153`*^9, {3.852322307247031*^9, 3.8523223172197943`*^9}},
 CellLabel->
  "Out[613]=",ExpressionUUID->"2bb96ac9-80a5-4282-892e-1d5b8dfc4d27"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{}, {{{
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 1.}, {3., 1.}, {4., 1.}, {5., 1.}, {6., 
           1.}, {7., 1.}, {8., 1.}, {9., 1.}, {10., 1.}, {11., 1.}, {12., 
           1.}, {13., 1.}, {14., 1.}, {15., 1.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 2.}, {3., 1.}, {4., 2.}, {5., 1.}, {6., 
           2.}, {7., 1.}, {8., 2.}, {9., 1.}, {10., 2.}, {11., 1.}, {12., 
           2.}, {13., 1.}, {14., 2.}, {15., 1.}, {16., 2.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 1.}, {3., 3.}, {4., 3.}, {5., 1.}, {6., 
           1.}, {7., 3.}, {8., 3.}, {9., 1.}, {10., 1.}, {11., 3.}, {12., 
           3.}, {13., 1.}, {14., 1.}, {15., 3.}, {16., 3.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 2.}, {3., 3.}, {4., 4.}, {5., 1.}, {6., 
           2.}, {7., 3.}, {8., 4.}, {9., 1.}, {10., 2.}, {11., 3.}, {12., 
           4.}, {13., 1.}, {14., 2.}, {15., 3.}, {16., 4.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 1.}, {3., 1.}, {4., 1.}, {5., 5.}, {6., 
           5.}, {7., 5.}, {8., 5.}, {9., 1.}, {10., 1.}, {11., 1.}, {12., 
           1.}, {13., 5.}, {14., 5.}, {15., 5.}, {16., 5.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 2.}, {3., 1.}, {4., 2.}, {5., 5.}, {6., 
           6.}, {7., 5.}, {8., 6.}, {9., 1.}, {10., 2.}, {11., 1.}, {12., 
           2.}, {13., 5.}, {14., 6.}, {15., 5.}, {16., 6.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 1.}, {3., 3.}, {4., 3.}, {5., 5.}, {6., 
           5.}, {7., 7.}, {8., 7.}, {9., 1.}, {10., 1.}, {11., 3.}, {12., 
           3.}, {13., 5.}, {14., 5.}, {15., 7.}, {16., 7.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 2.}, {3., 3.}, {4., 4.}, {5., 5.}, {6., 
           6.}, {7., 7.}, {8., 8.}, {9., 1.}, {10., 2.}, {11., 3.}, {12., 
           4.}, {13., 5.}, {14., 6.}, {15., 7.}, {16., 8.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 1.}, {3., 1.}, {4., 1.}, {5., 1.}, {6., 
           1.}, {7., 1.}, {8., 1.}, {9., 9.}, {10., 9.}, {11., 9.}, {12., 
           9.}, {13., 9.}, {14., 9.}, {15., 9.}, {16., 9.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 2.}, {3., 1.}, {4., 2.}, {5., 1.}, {6., 
           2.}, {7., 1.}, {8., 2.}, {9., 9.}, {10., 10.}, {11., 9.}, {12., 
           10.}, {13., 9.}, {14., 10.}, {15., 9.}, {16., 10.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.915, 0.3325, 0.2125], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 1.}, {3., 3.}, {4., 3.}, {5., 1.}, {6., 
           1.}, {7., 3.}, {8., 3.}, {9., 9.}, {10., 9.}, {11., 11.}, {12., 
           11.}, {13., 9.}, {14., 9.}, {15., 11.}, {16., 11.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 2.}, {3., 3.}, {4., 4.}, {5., 1.}, {6., 
           2.}, {7., 3.}, {8., 4.}, {9., 9.}, {10., 10.}, {11., 11.}, {12., 
           12.}, {13., 9.}, {14., 10.}, {15., 11.}, {16., 12.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[
           0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 1.}, {3., 1.}, {4., 1.}, {5., 5.}, {6., 
           5.}, {7., 5.}, {8., 5.}, {9., 9.}, {10., 9.}, {11., 9.}, {12., 
           9.}, {13., 13.}, {14., 13.}, {15., 13.}, {16., 13.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 2.}, {3., 1.}, {4., 2.}, {5., 5.}, {6., 
           6.}, {7., 5.}, {8., 6.}, {9., 9.}, {10., 10.}, {11., 9.}, {12., 
           10.}, {13., 13.}, {14., 14.}, {15., 13.}, {16., 14.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 1.}, {3., 3.}, {4., 3.}, {5., 5.}, {6., 
           5.}, {7., 7.}, {8., 7.}, {9., 9.}, {10., 9.}, {11., 11.}, {12., 
           11.}, {13., 13.}, {14., 13.}, {15., 15.}, {16., 15.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 2.}, {3., 3.}, {4., 4.}, {5., 5.}, {6., 
           6.}, {7., 7.}, {8., 8.}, {9., 9.}, {10., 10.}, {11., 11.}, {12., 
           12.}, {13., 13.}, {14., 14.}, {15., 15.}, {16., 
           16.}}]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 350, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotRange -> {{0., 16.}, {0, 16.}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], "\"B2 (B5)\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 16.}, {3., 16.}, {4., 16.}, {5., 16.}, {
           6., 16.}, {7., 16.}, {8., 16.}, {9., 16.}, {10., 16.}, {11., 
           16.}, {12., 16.}, {13., 16.}, {14., 16.}, {15., 16.}, {16., 
           16.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 15.}, {3., 16.}, {4., 15.}, {5., 16.}, {
           6., 15.}, {7., 16.}, {8., 15.}, {9., 16.}, {10., 15.}, {11., 
           16.}, {12., 15.}, {13., 16.}, {14., 15.}, {15., 16.}, {16., 
           15.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 16.}, {3., 14.}, {4., 14.}, {5., 16.}, {
           6., 16.}, {7., 14.}, {8., 14.}, {9., 16.}, {10., 16.}, {11., 
           14.}, {12., 14.}, {13., 16.}, {14., 16.}, {15., 14.}, {16., 
           14.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 15.}, {3., 14.}, {4., 13.}, {5., 16.}, {
           6., 15.}, {7., 14.}, {8., 13.}, {9., 16.}, {10., 15.}, {11., 
           14.}, {12., 13.}, {13., 16.}, {14., 15.}, {15., 14.}, {16., 
           13.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 16.}, {3., 16.}, {4., 16.}, {5., 12.}, {
           6., 12.}, {7., 12.}, {8., 12.}, {9., 16.}, {10., 16.}, {11., 
           16.}, {12., 16.}, {13., 12.}, {14., 12.}, {15., 12.}, {16., 
           12.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 15.}, {3., 16.}, {4., 15.}, {5., 12.}, {
           6., 11.}, {7., 12.}, {8., 11.}, {9., 16.}, {10., 15.}, {11., 
           16.}, {12., 15.}, {13., 12.}, {14., 11.}, {15., 12.}, {16., 
           11.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 16.}, {3., 14.}, {4., 14.}, {5., 12.}, {
           6., 12.}, {7., 10.}, {8., 10.}, {9., 16.}, {10., 16.}, {11., 
           14.}, {12., 14.}, {13., 12.}, {14., 12.}, {15., 10.}, {16., 
           10.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 15.}, {3., 14.}, {4., 13.}, {5., 12.}, {
           6., 11.}, {7., 10.}, {8., 9.}, {9., 16.}, {10., 15.}, {11., 14.}, {
           12., 13.}, {13., 12.}, {14., 11.}, {15., 10.}, {16., 9.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 16.}, {3., 16.}, {4., 16.}, {5., 16.}, {
           6., 16.}, {7., 16.}, {8., 16.}, {9., 8.}, {10., 8.}, {11., 8.}, {
           12., 8.}, {13., 8.}, {14., 8.}, {15., 8.}, {16., 8.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 15.}, {3., 16.}, {4., 15.}, {5., 16.}, {
           6., 15.}, {7., 16.}, {8., 15.}, {9., 8.}, {10., 7.}, {11., 8.}, {
           12., 7.}, {13., 8.}, {14., 7.}, {15., 8.}, {16., 7.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.915, 0.3325, 0.2125], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 16.}, {3., 14.}, {4., 14.}, {5., 16.}, {
           6., 16.}, {7., 14.}, {8., 14.}, {9., 8.}, {10., 8.}, {11., 6.}, {
           12., 6.}, {13., 8.}, {14., 8.}, {15., 6.}, {16., 6.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 15.}, {3., 14.}, {4., 13.}, {5., 16.}, {
           6., 15.}, {7., 14.}, {8., 13.}, {9., 8.}, {10., 7.}, {11., 6.}, {
           12., 5.}, {13., 8.}, {14., 7.}, {15., 6.}, {16., 5.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[
           0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 16.}, {3., 16.}, {4., 16.}, {5., 12.}, {
           6., 12.}, {7., 12.}, {8., 12.}, {9., 8.}, {10., 8.}, {11., 8.}, {
           12., 8.}, {13., 4.}, {14., 4.}, {15., 4.}, {16., 4.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 15.}, {3., 16.}, {4., 15.}, {5., 12.}, {
           6., 11.}, {7., 12.}, {8., 11.}, {9., 8.}, {10., 7.}, {11., 8.}, {
           12., 7.}, {13., 4.}, {14., 3.}, {15., 4.}, {16., 3.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 16.}, {3., 14.}, {4., 14.}, {5., 12.}, {
           6., 12.}, {7., 10.}, {8., 10.}, {9., 8.}, {10., 8.}, {11., 6.}, {
           12., 6.}, {13., 4.}, {14., 4.}, {15., 2.}, {16., 2.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 15.}, {3., 14.}, {4., 13.}, {5., 12.}, {
           6., 11.}, {7., 10.}, {8., 9.}, {9., 8.}, {10., 7.}, {11., 6.}, {
           12., 5.}, {13., 4.}, {14., 3.}, {15., 2.}, {16., 
           1.}}]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 350, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotRange -> {{0., 16.}, {0, 16.}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], "\"B15 (B12)\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.852290129195343*^9, {3.852290205244326*^9, 3.8522902221844473`*^9}, {
   3.852290254034783*^9, 3.8522902855125065`*^9}, 3.852290436337156*^9, 
   3.8522905642056885`*^9, 3.8522906256276093`*^9, 3.8522906604213715`*^9, {
   3.8522908642177086`*^9, 3.852290888846531*^9}, {3.8522910755699944`*^9, 
   3.8522911067493916`*^9}, 3.8522913664831285`*^9, 3.8522914550391345`*^9, {
   3.8522918502865863`*^9, 3.8522918666692095`*^9}, {3.8522919533682036`*^9, 
   3.852291969369771*^9}, 3.8522920294204907`*^9, 3.8522920725851965`*^9, 
   3.8522922098245153`*^9, {3.852322307247031*^9, 3.8523223177673655`*^9}},
 CellLabel->
  "Out[614]=",ExpressionUUID->"0b71fb26-a764-4726-88e2-7c988fbef4eb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{}, {{{
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 1.}, {3., 1.}, {4., 1.}, {5., 1.}, {6., 
           1.}, {7., 1.}, {8., 1.}, {9., 1.}, {10., 1.}, {11., 1.}, {12., 
           1.}, {13., 1.}, {14., 1.}, {15., 1.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 2.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 2.}, {6., 
           1.}, {7., 2.}, {8., 1.}, {9., 2.}, {10., 1.}, {11., 2.}, {12., 
           1.}, {13., 2.}, {14., 1.}, {15., 2.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 3.}, {2., 3.}, {3., 1.}, {4., 1.}, {5., 3.}, {6., 
           3.}, {7., 1.}, {8., 1.}, {9., 3.}, {10., 3.}, {11., 1.}, {12., 
           1.}, {13., 3.}, {14., 3.}, {15., 1.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 4.}, {2., 3.}, {3., 2.}, {4., 1.}, {5., 4.}, {6., 
           3.}, {7., 2.}, {8., 1.}, {9., 4.}, {10., 3.}, {11., 2.}, {12., 
           1.}, {13., 4.}, {14., 3.}, {15., 2.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 5.}, {2., 5.}, {3., 5.}, {4., 5.}, {5., 1.}, {6., 
           1.}, {7., 1.}, {8., 1.}, {9., 5.}, {10., 5.}, {11., 5.}, {12., 
           5.}, {13., 1.}, {14., 1.}, {15., 1.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 6.}, {2., 5.}, {3., 6.}, {4., 5.}, {5., 2.}, {6., 
           1.}, {7., 2.}, {8., 1.}, {9., 6.}, {10., 5.}, {11., 6.}, {12., 
           5.}, {13., 2.}, {14., 1.}, {15., 2.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 7.}, {2., 7.}, {3., 5.}, {4., 5.}, {5., 3.}, {6., 
           3.}, {7., 1.}, {8., 1.}, {9., 7.}, {10., 7.}, {11., 5.}, {12., 
           5.}, {13., 3.}, {14., 3.}, {15., 1.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 8.}, {2., 7.}, {3., 6.}, {4., 5.}, {5., 4.}, {6., 
           3.}, {7., 2.}, {8., 1.}, {9., 8.}, {10., 7.}, {11., 6.}, {12., 
           5.}, {13., 4.}, {14., 3.}, {15., 2.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 9.}, {2., 9.}, {3., 9.}, {4., 9.}, {5., 9.}, {6., 
           9.}, {7., 9.}, {8., 9.}, {9., 1.}, {10., 1.}, {11., 1.}, {12., 
           1.}, {13., 1.}, {14., 1.}, {15., 1.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 10.}, {2., 9.}, {3., 10.}, {4., 9.}, {5., 10.}, {6., 
           9.}, {7., 10.}, {8., 9.}, {9., 2.}, {10., 1.}, {11., 2.}, {12., 
           1.}, {13., 2.}, {14., 1.}, {15., 2.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.915, 0.3325, 0.2125], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 11.}, {2., 11.}, {3., 9.}, {4., 9.}, {5., 11.}, {6., 
           11.}, {7., 9.}, {8., 9.}, {9., 3.}, {10., 3.}, {11., 1.}, {12., 
           1.}, {13., 3.}, {14., 3.}, {15., 1.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 12.}, {2., 11.}, {3., 10.}, {4., 9.}, {5., 12.}, {6.,
            11.}, {7., 10.}, {8., 9.}, {9., 4.}, {10., 3.}, {11., 2.}, {12., 
           1.}, {13., 4.}, {14., 3.}, {15., 2.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[
           0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 13.}, {2., 13.}, {3., 13.}, {4., 13.}, {5., 9.}, {6.,
            9.}, {7., 9.}, {8., 9.}, {9., 5.}, {10., 5.}, {11., 5.}, {12., 
           5.}, {13., 1.}, {14., 1.}, {15., 1.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 14.}, {2., 13.}, {3., 14.}, {4., 13.}, {5., 10.}, {
           6., 9.}, {7., 10.}, {8., 9.}, {9., 6.}, {10., 5.}, {11., 6.}, {12.,
            5.}, {13., 2.}, {14., 1.}, {15., 2.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 15.}, {2., 15.}, {3., 13.}, {4., 13.}, {5., 11.}, {
           6., 11.}, {7., 9.}, {8., 9.}, {9., 7.}, {10., 7.}, {11., 5.}, {12.,
            5.}, {13., 3.}, {14., 3.}, {15., 1.}, {16., 1.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 15.}, {3., 14.}, {4., 13.}, {5., 12.}, {
           6., 11.}, {7., 10.}, {8., 9.}, {9., 8.}, {10., 7.}, {11., 6.}, {
           12., 5.}, {13., 4.}, {14., 3.}, {15., 2.}, {16., 
           1.}}]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 350, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotRange -> {{0., 16.}, {0, 16.}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], "\"B3 (B9)\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 16.}, {2., 16.}, {3., 16.}, {4., 16.}, {5., 16.}, {
           6., 16.}, {7., 16.}, {8., 16.}, {9., 16.}, {10., 16.}, {11., 
           16.}, {12., 16.}, {13., 16.}, {14., 16.}, {15., 16.}, {16., 
           16.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 15.}, {2., 16.}, {3., 15.}, {4., 16.}, {5., 15.}, {
           6., 16.}, {7., 15.}, {8., 16.}, {9., 15.}, {10., 16.}, {11., 
           15.}, {12., 16.}, {13., 15.}, {14., 16.}, {15., 15.}, {16., 
           16.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 14.}, {2., 14.}, {3., 16.}, {4., 16.}, {5., 14.}, {
           6., 14.}, {7., 16.}, {8., 16.}, {9., 14.}, {10., 14.}, {11., 
           16.}, {12., 16.}, {13., 14.}, {14., 14.}, {15., 16.}, {16., 
           16.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 13.}, {2., 14.}, {3., 15.}, {4., 16.}, {5., 13.}, {
           6., 14.}, {7., 15.}, {8., 16.}, {9., 13.}, {10., 14.}, {11., 
           15.}, {12., 16.}, {13., 13.}, {14., 14.}, {15., 15.}, {16., 
           16.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 12.}, {2., 12.}, {3., 12.}, {4., 12.}, {5., 16.}, {
           6., 16.}, {7., 16.}, {8., 16.}, {9., 12.}, {10., 12.}, {11., 
           12.}, {12., 12.}, {13., 16.}, {14., 16.}, {15., 16.}, {16., 
           16.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 11.}, {2., 12.}, {3., 11.}, {4., 12.}, {5., 15.}, {
           6., 16.}, {7., 15.}, {8., 16.}, {9., 11.}, {10., 12.}, {11., 
           11.}, {12., 12.}, {13., 15.}, {14., 16.}, {15., 15.}, {16., 
           16.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 10.}, {2., 10.}, {3., 12.}, {4., 12.}, {5., 14.}, {
           6., 14.}, {7., 16.}, {8., 16.}, {9., 10.}, {10., 10.}, {11., 
           12.}, {12., 12.}, {13., 14.}, {14., 14.}, {15., 16.}, {16., 
           16.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 9.}, {2., 10.}, {3., 11.}, {4., 12.}, {5., 13.}, {6.,
            14.}, {7., 15.}, {8., 16.}, {9., 9.}, {10., 10.}, {11., 11.}, {
           12., 12.}, {13., 13.}, {14., 14.}, {15., 15.}, {16., 16.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 8.}, {2., 8.}, {3., 8.}, {4., 8.}, {5., 8.}, {6., 
           8.}, {7., 8.}, {8., 8.}, {9., 16.}, {10., 16.}, {11., 16.}, {12., 
           16.}, {13., 16.}, {14., 16.}, {15., 16.}, {16., 16.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 7.}, {2., 8.}, {3., 7.}, {4., 8.}, {5., 7.}, {6., 
           8.}, {7., 7.}, {8., 8.}, {9., 15.}, {10., 16.}, {11., 15.}, {12., 
           16.}, {13., 15.}, {14., 16.}, {15., 15.}, {16., 16.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.915, 0.3325, 0.2125], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 6.}, {2., 6.}, {3., 8.}, {4., 8.}, {5., 6.}, {6., 
           6.}, {7., 8.}, {8., 8.}, {9., 14.}, {10., 14.}, {11., 16.}, {12., 
           16.}, {13., 14.}, {14., 14.}, {15., 16.}, {16., 16.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 5.}, {2., 6.}, {3., 7.}, {4., 8.}, {5., 5.}, {6., 
           6.}, {7., 7.}, {8., 8.}, {9., 13.}, {10., 14.}, {11., 15.}, {12., 
           16.}, {13., 13.}, {14., 14.}, {15., 15.}, {16., 16.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[
           0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 4.}, {2., 4.}, {3., 4.}, {4., 4.}, {5., 8.}, {6., 
           8.}, {7., 8.}, {8., 8.}, {9., 12.}, {10., 12.}, {11., 12.}, {12., 
           12.}, {13., 16.}, {14., 16.}, {15., 16.}, {16., 16.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 3.}, {2., 4.}, {3., 3.}, {4., 4.}, {5., 7.}, {6., 
           8.}, {7., 7.}, {8., 8.}, {9., 11.}, {10., 12.}, {11., 11.}, {12., 
           12.}, {13., 15.}, {14., 16.}, {15., 15.}, {16., 16.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 2.}, {2., 2.}, {3., 4.}, {4., 4.}, {5., 6.}, {6., 
           6.}, {7., 8.}, {8., 8.}, {9., 10.}, {10., 10.}, {11., 12.}, {12., 
           12.}, {13., 14.}, {14., 14.}, {15., 16.}, {16., 16.}}]}, {
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{1., 1.}, {2., 2.}, {3., 3.}, {4., 4.}, {5., 5.}, {6., 
           6.}, {7., 7.}, {8., 8.}, {9., 9.}, {10., 10.}, {11., 11.}, {12., 
           12.}, {13., 13.}, {14., 14.}, {15., 15.}, {16., 
           16.}}]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 350, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotRange -> {{0., 16.}, {0, 16.}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], "\"B14 (B8)\""},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.852290129195343*^9, {3.852290205244326*^9, 3.8522902221844473`*^9}, {
   3.852290254034783*^9, 3.8522902855125065`*^9}, 3.852290436337156*^9, 
   3.8522905642056885`*^9, 3.8522906256276093`*^9, 3.8522906604213715`*^9, {
   3.8522908642177086`*^9, 3.852290888846531*^9}, {3.8522910755699944`*^9, 
   3.8522911067493916`*^9}, 3.8522913664831285`*^9, 3.8522914550391345`*^9, {
   3.8522918502865863`*^9, 3.8522918666692095`*^9}, {3.8522919533682036`*^9, 
   3.852291969369771*^9}, 3.8522920294204907`*^9, 3.8522920725851965`*^9, 
   3.8522922098245153`*^9, {3.852322307247031*^9, 3.852322318337824*^9}},
 CellLabel->
  "Out[615]=",ExpressionUUID->"bd92beb3-2790-4a47-9365-915d9fbcc2fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ListPlot3D", "[", 
    RowBox[{"list3d", ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Range", "[", "16", "]"}]}]}], "]"}], ",", " ", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{"list3dfrac", ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", " ", "fraktale"}]}], "]"}], ",", " ", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{"list3dline", ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", "prosta"}]}], "]"}], ",", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{"list3dsurface", ",", 
     RowBox[{"PlotLegends", "\[Rule]", " ", "calaPrzestrzen"}]}], "]"}]}], 
  "}"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8522855072565975`*^9, 3.852285508075297*^9}, 
   3.852286441337468*^9, {3.85228773210913*^9, 3.8522877560331373`*^9}, {
   3.852288866239194*^9, 3.8522888778584332`*^9}, {3.852288916799404*^9, 
   3.852288935192365*^9}},
 CellLabel->
  "In[211]:=",ExpressionUUID->"c8a3d560-540b-40d5-9f2d-474cced611f9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     Graphics3DBox[{
       GraphicsComplex3DBox[CompressedData["
1:eJzs3V2SJWdy3vkcSKMB9dEqDSANpoSWEocldAkE0djB5BLG5mKuy8ZsrmcL
Zym1lFwKliCRTbJJNsm5QDxudn6ebh5VWQUDZI2bsHgQFSfSz3s8/H3ef3h8
9f/8f//X//vJ3d3d//l/3939s7v899/+j6e3dw9P658O+otB/3zQvxj0Lwf9
ftAvg/5q0L8e9NeD/s2gfzvo3w3694M+xTv76p8O+otB/3zQvxj0Lwf9ftAv
g/5q0L8e9NeD/s2gfzvo3w3694M+jescp/7poL8Y9M8H/YtB/3LQ7wf9Muiv
Bv3rQX896N8M+reD/t2gfz/oU/5I/NU/HfQXg/75oH8x6F8O+v2gXwb91aB/
PeivB/2bQf920L8b9O8HfcrTib/6p4P+YtA/H/QvBv3LQb8f9Mugvxr0rwf9
9aB/M+jfDvp3g/79oE/3w8Rf/dNBfzHonw/6F4P+5aDfD/pl0F8N+teD/nrQ
vxn0bwf9u0H/ftCnuiPxV/900F8M+ueD/sWgfzno94N+GfRXg/71oL8e9G8G
/dtB/27Qvx/0qb5L/NU/HfQXg/75oH8x6F8O+v2gXwb91aB/PeivB/2bQf92
0L8b9O8H3b/D+Kt/OugvBv3zQf9i0L8c9PtBvwz6q0H/etBfD/o3g/7toH83
6N8Putdr/NU/HfQXg/75oH8x6F8O+v2gXwb91aB/PeivB/2bQf920L8b9O8H
3esy/uqfDvqLQf980L8Y9C8H/X7QL4P+atC/HvTXg/7NoH876N8N+veD7ucb
f/VPB/3FoH8+6F8M+peDfj/ol0F/NehfD/rrQf9m0L8d9O8G/ftB93OMv/qn
g/5i0D8f9C8G/ctBvx/0y6C/GvSvB/31oH8z6N8O+neD/v2gez7jr/7poL8Y
9M8H/YtB/3LQ7wf9MuivBv3rQX896N8M+reD/t2gfz/o/jvjr/7poL8Y9M8H
/YtB/3LQ7wf9MuivBv3rQX896N8M+reD/t2gfz/o/n/jr/7poL8Y9M8H/YtB
/3LQ7wf9MuivBv3rQX896N8M+reD/t2gfz/o0/aP/v+P25+L/68fvfn/+neb
/6/fsfn/zg83/996evP/rT82/998vfn/07qK8d/8f/1o9ef6//od6pfhPGf9
f+tp9ef6/+brbf3E+Duup3jr/+tHb/6/49/z6//rd2z+v+Pf8+v/W09v/r/j
3/Pr/0/rJMb/Q/v/+tHq+v/6d+qX4XM/lv9vPa2u/2/9sa2HGH/z9Fn/3+/P
eOv/60d7vP6//t3m/zv+N//f/O/16P9bT3u8/v+07mH8N//f/KM+jWvj7XFu
9f/1Sd/X/zf/qOv/G391/X/r6W19w/hbd0z3Q/1/85H5Q//f78N46//rR2/+
v+Pf69f/N/97/fr/jn+vX/9/Wscw/uo/d/8/W/3/bPX/s9X/z1b/P1v9/2z1
/7PV/892mq/o/zv+N//f/L/5/+a7zf93fBhv/X/9aI/X/9e/83j9f/0Oj9f/
n9YljP/m/5t/1J/r/5vv1C/o2TfeHudW/1+f1PPo/0fX/9fv2NYfjL/zwmm+
ov9v/t/8f8e/59f/N9+ZP/T//T6Mt/6/frTn1/93/Ht+/f9pncH4f2j/3/uv
uv6/92/1C3r2zR/RHdfRjbfndav/r0+qrv8/rScYf32Os/6/+d/5iv6/9Y/H
6/97//Z+qP/v+Pd4/X+/P+Ot/68f7fH6/9O6gfHf/H/zj/o0L7Rec/xbR+v/
WydZd5gPouv/m3/Up3FtvD3Orf7/tD4w+f+Of/0k/X/zv/Nv/X/Hv/MV/X/r
Ues7/X/Hv/dD/X/zkflD/9/vw3jr/7+rH/1H//92+7H8/2lr/P3/+oDG3+PP
8v/TPNz4e/xZ/n+q84y/x5/l/6c8Mo1r4zv5/ZN/ra7/r3+n/lz+3/mh+nP5
f+sP9efy/47jaV1lOm7ytf3/+v/G3/Pryxh/z6//b/w9v/MK4+/59f+Nv+f3
vjjlafOFunWN8Z38/p+K/9fvUNf/d36o/lPz/+Zl42T+cBxP6yrTeTf+3/G/
8f/6Sl6P/r/zcI/X/zf/b/y/43+rO7z/qZsnHP/T+pX/3nrT874v/69/p67/
7/hX1/83/6s/l/+3zvDv1o9x/E/rhOZv/X/jP13H5Jv7//X/jb/Xr/9v/L1+
/X/j7/U7b5nq6Gz1d7PVd8xWPyxbfZps9Q+ydV6brfOtaWv9r/5z5/+tm/07
rO+sMzze+6F52ePNH47jaV1luu6N/7f+2fh/8//G/zv+t3mh8xN167jLsdX/
j+59z/ufunki59H/v7D1+vQbvO735f/N/+rP5f+dB3pd+v+Of3/H3t+sMzy/
/r/jf1ontH7X/zf+0985+fKeX//f+Ht+faXJ53C+ra7/7/xE3fvY5djq/0fX
/4+u/39h6+fpH/s7VNdv87p/Kv5fX8PP8ffnPNDj9f/N/97H9P8d/9O6t/W4
/r/x93j9f+M/xWXj/x3/m2+nf6Tu78zxr67/b/5X1/+/HFv9/wtb6279f+8r
zlP1/42/f79+s3F5X/5fn85/p//v+Pd3pv9v/ve+pP/v+J84Dutr/X/j73xU
/9/469/o/xv/KY6bD/1H//92+3Px//WjN/9f/27z//U7Nv/f+eHm/1tPb/6/
9cfm/5uvN/9/Wld5V/9fP1r9uf6/fof6ZdDP+v/W0+rP9f/N19v6yebrG+9t
e9b/179T13/R79j8f+eH6tb31tOb/2/9oe79Y1on+dj+/8fm/z+2//+x+f/N
pz/r/5/l/Tf+f+KkJ/5/8v/1Ozb/3/mh+ln+f+I8pnWPd/X/zRfqE9dvvLet
PvLE/7+r/6/foa7/7/xQ/bn8/+a7ez80L6ubPxzH6hvv7/Yy6M4b9O/U9f/1
O9T1/50fqjs/mdYxsv2l+v/Z/lL5/81HP+v/e//b/H/zxeb/n+X9N/5/4qQn
/n/iSif+f+LwpnWJd/X/refUn+v/my/UL4NuvLetPvjE/+vfqT+X/998cecr
1s3qZ/1/73/q5mnzhbrj2viqT1v9f31Sdf1/faVtneFj+//Wc+rWHd7/1C+D
bv5wHKsb7237sfj/zec+6/87P1G3jraeU7fu8P6nbp42X6g7rs/y/hv/P3HS
07rBu/r/zrfVnRc6P1G3jraeU78MuvdD87K6+WPj+o33ttXHn9YHNt9aP0lf
Q935t/NAdecr1s3ql0G37vD+p26eNl+oO66Nr/q0Pev/64fqm+on6QfpMzn/
dj7svNz5ivMB5zHWd9ZD1n3eD70feJ+c+pFN/bCMt/tTvCef2u9D31SfTj9v
6hMx+R/Oy52nOV+cnhOe6mvrPu/T1iPeJ81T5m/zyvRc1zTep/UAx7vHT77p
5OdN/SP0P5w/Oy+f5ovT88PW19ZP1n1TPeJ90vzl8dP6of7/2Xwz+drmI31T
x7+6PpO+hv6H8/LozhejO4+JPtXX1n2Of3Xvk9Nzusbf/DGta03rLWf5f/OK
59fPM05+H5P/Mc3Lp/ni9Lyx9bX1lue3HvF+4/1Q/9/xb/7Q/5/yzbTe4P3W
8+ibmj/MR/pM0Sf/w3m5+X963ljd+nriLawDrDum9XD9f/OPx5tXpnpnWm+w
3vH4C3r2Jz9PnynH63+Y/z3e+eLEG+V462vrM+s7/X/Hv7r+v3lNXf//bL05
+ebWo/qm0fXzouszRdf/iO68PLrzxejOY6JPHI3jy/F/YX9aD5/Waaf1w2ld
a1pvubC13o9uXRldPzG698no+inRnc9Hdz4Z3XHk70H/3/Fvfaf/b/73fqj/
b54yf+j/T/lmWs9wvuV16ptaP3qd+kz6LF6n83Lzq/cDx4vj3+P1/83/1h3T
erj+v/nL4y/D9Zjvp/UM57ser29q/DeeVf/F4yf+Tv/f8a+u/2/+t77T/3f8
q+v/m9f8XP3/s37D5Mv7ufqmjn91fSbrcecDfv+Of+eFE6+k/+/91/Pr/3u/
9/yX4fzWL5Ov4Hja1jP0ezy/vql+peefeFL9f8e/82/9f/O/59H/t/7xPPr/
1gGeR//f8e959P8nv2FaL9Fv8zz6pvo3W/8fx7/H6/+b/z3efOn493j9f+sz
j7ced/x7vP7/5KtNfue0XqLf6fGbH6ru92n81c1/xl/desH4q18GXf/f8a+u
/29eVtf/P+s3b77/H/3/2/2fi/+/+dH6/8Z/8/83P0L/3/hv/v9Wj+r/G//N
/9/y0bSu+Fz/3/hPfuj7+v/G3/vxBT37Z/1/4z/VQ+/r/xv/LX9P/v803t13
e9b/N/76efr/xn/z/42/80X9/60enbiPiUfQ/5/ukx/b/5/4f+PvfEz/3/j/
VP6/8be+nrgP/f+pHpn8f+O/+f/TeN+eB5j4dP1/47/5/8Z/8/+Nv/PFiWOa
+Br9/6nue1f/3/hP64eO6y3eG/9v/N/X/zf++h8TlzfxYhPHpP8/1deT/2/8
vR+al6f1W+PvuN7i7fYy7E/c9MTz6v8bf/2PicubeDH9/2ke80v3/7Od+PSJ
m9b/N/4X9if+ceLy9P+n+eLk/xv/zf83/pv/b/w3/38a7+5v/L/x1zedeN6J
M534R/3/aV7+rv6/8be+e67/b/yn9UPH9Rbvjf83/vqmE887cab6/5P/Mfn/
xt/5inWz8d/8f+Pv/dC8PK3fZn96rmWLt9uJT5+46Ynn1f+ffKaP7f8bf+u7
6blD73/TOnn2p+eHpudatnhv/L/x1zfV/5/8vMn/N/6b/2/8na9Mz9FOz3da
Z0w8Qvan57Sm54ccx9N4354HmPh0/f/JN31X/9/4O/+engufnleenqO1njP+
1h3T83DTc1rmC+PvuN7ivfH/Z/1QfTv9I+OvzzE9fz89Fz49r2zdbPyt76bn
Dqfn4czLxt/8MT3XssX77DrAH/3/H7c/tf8/bY23/ujkk+rf6ffo8+l3ON/V
F7mgW+87j7Sett6x7rb+mJ6Tm/h/x7t53bhu6yse53j33+uTbnztc/n/ja96
Lv+/ra8/l/+f1rGm9Zbpd2C+0R/SJ9Vv00+dfKULuvW+80Lnh84T9FGsp833
1h3WH94nrNON07Ze6Ljcnpf4qfn/jRd0Hr7xUj81/z+tyxqPaVxO6yjTeTf+
f/rdmD+cT+grOd+y/nIebr2pX3WW/7eu2vj/bf3bPO54NH7+Tqb13ikPWe9s
/P/Gv+orOd91/uc83Pmbfslz+f+JMzB+Ux6f8s70O5m+1+k6rEMv6Nb7ztv0
75zv6nPodzhP1hd0fug8ZKubs3V8WU9E355nM29uz/M4brbnGbxu6/3o1pXR
rY+ie5+M/rH5/4mb8XqnumFa557y5vSczzRuvM9d0Kd5gPMt6yPrJutH7ydn
+f/pdznx/xufZJ194e/w77MO2J5PM8/6+zf/XtAdHxNv8r78v/cH89lz+X/n
gdO8Zaqz/R1bb1kHTPetKc9O64LT73AaN9PfaV3o/Xm6b3j/t56yzpr4/423
83e5PW9sXX7huvx9W5c4vozHBd185/3G39XEO0z34Y/N/09co+eb5nUThzTV
5eYRf9/TuDP/TfcV50nmr6mumXiTyQea+P9p3qx/4/zZ71P/wu/Zebh/t3nR
emH6HV+OrfnVusD85X16qhPNj96f/J07/ibe8H35f326yVeafJBp3j7NM6d5
0VTHT3XnVCdN9/XpPjTlzel3Po3LKY6b7/9H//92/+fi/xv/zf83/pv/P/H/
27z8gr7NY876/8Z/8/8n/n/LK8/1/6f/b/zf1/9/V/7/Xf3/d+X/39X/f1f+
f/P1je+2Pev/G391/SPjv/n/xl/d+YPx3/x/46/u/cP4/1T+/8fm/z+2//+x
+f/Npz/r/xuvifff+H/H/8b/b/OMs/6/8fc8Z/l/x//G/7+r/789L+Q43p6v
eC7//67+/zT/MP4e7zzN/PO+/P/mu3v/m/LylC+mcTzFd9te2N/mDfoZjn91
/Qjzv7rzPce/+v9o/r/X6/7Pnf/ffPSz/r/x3/x/47/5//49E++/8f/WPxv/
b/7f+H/H/8b/v6v/vz3P+Vz/f/JvjL/Xs/Hm78v/m/+9nufy/5sv7vxkqpuN
/+b/G391fUrjv43jKb7bVr/b/K/u/dzxr/5T+//b85z6vo5/z38Zzj89L6T/
P/HO3n9/Kv5/87nP+v/Gf6ubp+c5Hf/ql+E8U77W/3dcqm+8/8b/O/43/v9d
/f/teXvngdvzydbN2/Ocl+H46fk38/L2vJDjeHu+4rn8/+Zb6x9NvsY0357m
gdP8ZKqbp3puqjOm+9+Ul6d8MY3jKb7bVt/f+Pv70P/Xh/J+ov/vPN/6S//f
edQ0X3Eeqf9vXaXvov/vfUufUv/fvDA9x7Ktt5h/1PWn9QfV9fP0X9QnvtB5
+YWtfonzGOOvv2jdZ/z1471PGv9pfVHd7286rz64x78Yjtf/1xdzPq3/7/j3
+Au68zr9Wv1/x7/H+3dbl0zr6B5v/jb+1o/6/2efN1WfeHH9/+j6edH1mS5s
ozvfVp+eD3ceY/zNr1PetR5x/Kub76bfoeNm+zsv7Ht+/X/zj+fXz7uw9XvW
/3febl50vjjdx8z/nl//3/Hv+b0PmR/V/d1euC71rd+Auv50zqNvemFrPpvy
3Mb/qTtfNO+qW187/tWtD6b71oXP8fgXw/H6/1O/jQv7Hq8/fWHrfXvjXD1e
/9/4e7zzRfOPx1tfG/+JJ5jWuaf112ldcFqvmtZRJn9f3f+/1a36/45/df1/
87+680XHv/r0HIN1nnVJ9Ok+at6/cNz0/OL0XKlxn+YB1v/RrT+jW/9En7hV
83908090x3904+/vdfodm1+3+5730a1O3J7PUb+g++/VJz5e33Razzf/q+t/
OP7V/V1O86KpjnD8e7z1zXRfn+apjn+PvwzXMz0Hou/v+Pd4/X/zv9ej/+/4
93jz31aX6f87/tW35y3V9f8d/+qX4XOndbhpfWhat9D/N/+r6+c5/tW9z0w+
gvPebZ42+Sjmf8+v/+/49/yX4fzT8+tTXwH9/2ldxPw/8XGeXz/P+DufnubZ
5r/Nl9L/N/+r6/87/tUvw3n0/42/59H/n3hb/351/WnHv7q/m8l3m3w+x7/H
6/+b/z1e/9/x7/GX4Xj9f+9zHq//b/w9fuOdJw7X4zceWl3/3/GvvvF26huf
pH4Z9I0zUN/WZaf1wmkda1tfmXzoP/r/t9f9c/H/9U83/19/avP/nf9v/v/0
fPXko1i/bv6/9cHm/5t/N//f//++/r++6uQDvq//ry/gffSC/q7+v3XtVIe9
r/9vXjZ+Z/1/P8/vW/9fv3Xz/52nOp/T/9cv2Px/53v6hfr/1rub/2/+cDw6
Tj3fT+X/68NaH+n/63NNvsxP5f9bB+vv+ru3zjAeZ/1/f5+b/+/fb72p/68/
a/7V/9f/2vx/f0+b/+/9Tb9c/9/62PHluPPz39f/93drneH48LrNs/r/+rbT
88Hv6/+bz7z/eF1+//5e/R1bN/v3nfX/vZ9ZT5g3/T2bTx03/j2OJ/1//dzN
/7f+8n7ufd77ofnPvOjv2/HiOJrq6V+6/6/PG11fMro+WnR9nwvHmf+cV0ef
ePlsz/r/jpfN/zf/bf6/+Wvz/x0f+g36//q/+nP6//pr+tn6//oXfv+OC/++
9/X//b1OHMP7+v/mNeuwC7px0e/U/9cXdhz77/x+/D35O9PX8PPP+v/WF96v
vI+ZLzf/3/u99Zb3FfOd/rHj0ng5XvX/9YvNT+Ytf39+n37PxuOn8v+9X011
z3Sfth6/oBuPadxP39P0vJc+nPlJ31Pf2u/TOG3+v/O5zf93/mZ9Yx1nveD8
xjppen5vyhOOR++f/k6m5zf0942v/3/63ozf+/r/zqf1P6yLnX84X7S+t16z
vr6ge3+zHjG/mw/M347v6XmL6Xeg7+z/P+v/68fpJ+n76Ec4/3be63zM+Yp1
v/Wo9Z11j/dj74fmffOR+cNxvz2P4fcw+dF/9P9vr/un9v8nn3riqicfcOL/
J59l4gKneeyF7TRft67a/C3vW5sfbF7Y1k8c19O64nTeaR3e+/PE/0/1rPF3
nuf878LWOnXiup7L/09+/BSnaf3K+Ju/p3Wd6Tq8D0/ctvGf5m3Op53nXdg6
T5vm1c7rjL/3ren5hmncWZcYf/P0tE7u73Cqa7wOr/un5v+Nv3WV83nj7/X+
1Py/8bdO9Hdr/J1XTX/nWf7f+G/8v/G3rpqeP5jGhfNA47/x/8Z/4/+Nv/W4
+dT4O391/Pl3Gpfn8v/G3/NN37N+ivE3LzqfNP7vy/8bf+c93ueM/+QT6N84
Xo2LcXQedmHr/5++N31D4z+tc3r/cd5u/K3XnLcY/wvHWecZ/+jGP/rk0xj/
6MY/unG8LFvjH/2Xwv8bf+fx1oXGX99k4pEnTnzi96e4XpbjNv7f+G/8v/Hf
+H/jv/H/xl+/xHrd+OubTNy3913jb5zMUxe25pXpe30u/2/8nU88l/83/vpS
zqOMv77JxNdPf7f3aeNvnrigG3/vq9M48Pom/t/4O2/T1zP++hwTZ6qPYPz1
oZx3GX//DutU4+/v3vv6ha33SfOg8beunMbNT83/G399PX0H4+91OU8z/v6O
rWuNv/e9C7rxt040bxp/51XTODvL/xv/jf83/vrV0+foUxh/f5fO64y/9zHr
4Atb6z7rBuPvPMk8a/z1FaZx+Vz+3/j77/TpjL+/M30N4+99yXmg8beOu6Ab
f+c91hnGX5/AvGz89dWmcbz5/n/0/2/1n5v/7/e8+f8T/z/5/9Ypm/8/8f+T
/2/9uvn/E/8/+f/m383/d3y/r//v73LyAd/X/7eu9PgL+rv6/9a1Hv9c/9+8
7PFn/X//vbr+uHl08/8d/+r6L84DNv/f8a9ufW+9u/n/jv8pHuo/tf/vfe9D
8/8f2/+3Dv7Q/P/k/zv+N//f65t4h43/nzjjif+f/H/H/+b/m/8nXnvj/7e/
+7n+v7+raRx4vP6/4/99+f939f/NPxOH5/HO66a/w7p54/8n/9/xr27e9Pem
7rjx+tT1950HbP6/41/d+4z5X93fpeN/ul71/9H8f+dt0X8p/P/k/zv+N//f
/L/5//7+N//f+E6828b/TxzzxP8b/43/367ruf6/+cfjn+v/mxc8/jJcj/6/
4/99+X/j7/mey/9P/r/jX9263Py/+f+Of3XztPnCz3Vc+vere159LP+/vxvH
/3Q+9Z/a//f+6/mtO7zPTXnZ8+v/T1yzcfT8PzX/P/n/jv/N/zf/ex7reOsf
z2Pd4f3P85jHHf+ex3FtfCfeeeP/t3/3XP/f/OPxzm+Nv8dbR1u3efxlOF7/
3/Hv8eaPies3jh7/XP5/86313Yy/ur6D8Vd33mX81S+Dbt3h+Fc3T5sv1B3X
xld92p71/42/un6S8Vd3/m381Z2vGH916zvjr+790Pirmz+M/zSut+ddtueQ
9P8n3nfiUCc+cuL2Jp5s4pwm/mbiQiZeYVpHn9Z3p3XHLa+f7f8z+d0Thz3x
wRO3OvGUE+c38WcTFzXxOhNHMvEN07r7xilM9cvZ/j/TOsTkj0/c9sQTT5zr
xF9OXODEq00c1cT3TNzJVnebD6b1Y/Pa1v/H8aH+YtDP8v/Ov9T1/51/qev/
O7+d5oXqE0fm79v6SX2aj57t/zM9tzM9TzKtc0z++8SFT7zyxNFOfOfEHW6+
iL/XiR+auJaJt7AO0PfS/5/WU7f+Gfr/03MRk18/ceQT3zxxtxvnO/l/5sWJ
65p4o4mDsT7T39X/j67/H/3FoOv/R9f/j67/f2F/8qHVJ9/a31N081x07z/R
rQuiW69Ft46Ofrb/j/WH+otB1/83j6jr/09x374Hfx/6p+reT/Sb1K2/nJ+r
O19xPuPvVf9/ei50el5xeo5uer5ryjvbuuJl0M/y/xNvPXHAE586cZMTz+c8
0/uS/v/E60zPkU7PN0733e05uWn9/DLo5vvtPmx9NPHZEzc88awTZ+n83/pL
/3/iqCa+Z6o7N+7D8Tg9Pzata07rbdM60FaHOj+YeO6JM574V30Z5xn6/85v
t3mX8wF1x5f1k7r52PuNuvWLv0916/1tHub8WP9XXT9Jv8z5tP7/5Ds4H1Z3
vDh/UDe/Wm+pXwbdOtG8qe68alpn2nwI/SH9YvWz/X/0g9T9/p0/q5svnW+o
W19MfIZ1g7rzJPOsur6C43Ly2zb+f/KXN27a73PiRyeuceLtJg5s4pMmbmbi
OSbOYFr/ntZlp/XCaR1r86H/6P//uP25+//Gf/P/jf/m/xv/zf83/pv/b/w3
/9/4b/7/lF+252Ge6/87/tWf6/87/tUvw3nO+v+Of/Xn+v+O/y1/b897WO9s
vPtZ/9/4e359DuO/+f/G3/Pro0/14vY8pPGYOIXpPvmx/X/zv7q+heNf/TJ8
7sfy/83/6vr/jv+tHtmejzrr/0/z3Y2P1x9y/Hv8Zbieqb/DWf/f+Hs95lHj
7/GOu6nue1f/3/E/+QfOq/R7Jp7e8a9+Ga7zrP/v+FfX/zf/q+v/O/63+vpy
bJ33GH/9MH2Cyb/ZnifR79x4+gt69iduWv9/4nyNv9c/cXle78SRTfOYX7r/
b/2vrv9v/aOu/2/+V9f/d/yrn/X/jf/m/xv/zf+f1hcn/38a7xt/7/3B+sfj
rafM/x7v509c5DQvf1f/3/Gv/lz/3/E/rR/qq5lvJl7f8a+u/2/+V9f/d/xv
/sf2vLp+4fa87ln/3/h7fvPytH67Pa9ivt94ff3/iVs3/p7f73nymfQRPrT/
b/5X1/93/E/r4cZJ/9/xPT1XMcV74//NPxO3u/l5k/9v/Df/3/hb30zP9071
qHWG8Xd8T893TfnIcTyN943v9/9P3Lrxf1//3/Gvrv9v/lfX/3f8T3zHdN9V
1/93/Kvr/xv3Kd4b/3/WD9W30z9y/OtzON/enod3frI9D3xBz/703KH3v+15
MPPF9jyM8d2eB/ij///j9ufi/xt/85D3B+Pv8dZTxt/jnX8Yf4+/DMef5f+N
v8frBxv/s+uOxnXi/8/mG+/D0/1Z/9/4qz+X/zf+6s/l/42/+nP5f+PvfXWr
d6xD9f+Nv+d3PmH8Pf9lOL/+v+Pf8+sjTtyJ8ff81h/G3/Of7f/j96e+3W9/
Kv7f+Kvr/5t/1H9q/t/4Wyfq/xt/j9/muxv/b/w3/t/4n+UCvS7zv9dzlv83
/hv/b/zV9f/9HapPXOHmN7wv/2/81f2ezT/q+v/GX/25/L/xd96j/2/89Qkm
fnPiaje/c/KdvX7/nePf6/d3Zv73+r0vOf69/mnecrb/j+Nf/cWg6//7O1TX
/z8737pw3C+V/zf+zuP1/42/x+v/G/+zz+0YV//Oab1r4/+N/8b/G/+N/59+
lxP/b/zV9f/NP+r6/9N9yPHveRy/jj/zyrbe+L78v/FXfy7/b/y9r+j/G/+J
25jqgOm+NeVZz39BN/7eVzfewTpUP3q6bzj+Pf9U557t/+P4354rNv/7dzi+
/Dumv1v9gm781fX/p+91ug87r/rQ/L/xn7i6aV7n8dPzItNzPFNdOP3uL+jG
3zpxymtTXbnxbhv/P82b9TEnTlR9+xz16bkc5znT73iqI61vprpPfZsnqU99
BTbe8H35f+M/+UqTDzLN26d55jQvmur4qe6c6qTpvj7dh6a8Of3Op3E5xTHb
P/L/t/rP3f83/pv/b/w3/9/4b/6/8d/8f+O/+f/Gf/P/p/yy5ZXn+v/GX/25
/r/xV78M+ln/3/irP9f/N/7qZ/1//736i0E/6/8bf3X9f+Ovrv9v/NX1/6d6
cbvveT82/uo/tf9v/D80/2/8P7T/b/w/NP9v/NXP+v9+3sQ7bPy/8d/4f+O/
zf+Nv7r+v/Hf+H/jf/a5z7P+v/FX1//3Oibe5H35f+O/+f/GX13/3/irP5f/
N/7q+v/GX13/3/irb7zP5ucaf3X9MuOvrh9h/NWd7xl/9f/R/H/jr/5z5/+N
v/pZ/9/4b/6/8d/8f/+eiXfb+H/jv/H/xn/j/43/2efyz/r/xl/9uf6/8Ve/
DPrGG74v/2/81Z/L/xt/df1/47/xFsZfXf/f+KtfBl3/379fXf/f+Kvrzxp/
dT/H+P9U/r/xV9f3Nf7ql0HX/zf+6vr/xv+n4v+N/8bPGX91/X/jr67/b/zV
L4Ou/2/81fX/jdfEO2/8v/Hf+H/jv/n/xl9d/9/4q+v/G3/1y6BPz7/p/xt/
df1/4zjx5u/L/xt/9clXejHo0zx8mh9O85apnr4M+lR/TPfFKV9PeWQa3xvv
7/afhnWAf8KXjv6/PDx9fHSOv/7q6eNL9/yfDef/7OnjH//D08eX7vW8HK7n
5dPHP/ynp48v3ev/arj+r54+/ofL08eX7t/ruoY6x791vUPd+LgOos7xb1wf
UTeerpuoc/y96ynqxj/j1nWqjE/0Goce/9nTeo0rz/Pyab3Gief/6mm9vnc/
Vz/f79Hr0c/3e/E6h3XxirPXnzi/QE+c0SvOHv/Z03rF2fO8fFqvOHv+r57W
K85+rr69cfZ69O2Ns9epb2+cvf7E2XXUxBm94uzxnz2tV5w9z8un9Yqz5//q
ab3i7Ofqzxtnr2fglt7ozxtn9Iqz1584uy6dOKNXnD3+s6f1irPnefm0XnH2
/F89rVec/Vx9eOPs9ejDG2evUx/eOHv9ibPr/IkzesXZ4z97Wq84e56XT+sV
Z8//1dN6xdnPHbjSt/rtxhn9jX67cUavOHv9ibPcROKMXnH2+M+e1ivOnufl
03rF2fN/9bRecfZz9dWNs9ejr26cvU59dePs9SfOF/TEGb3i7PGfPa1XnD3P
y6f1irPn/+ppveLs5+qfG2evR//cOHud+ufG2etPnK1/E2f0irPHf/a0XnH2
PC+f1ivOnv+rp/WKs5+rT26cvR59cuPsdeqTG2evP3F23pA4o1ecPf6zp/WK
s+d5+bRecfb8Xz2tV5z9XP1w4+z16IcbZ69TP9w4e/2Js/OtxBm94uzxnz2t
V5w9z8un9Yqz5//qab3i7Ofqextnr0ff2zh7nfrextnrT5ydpybO6BVnj//s
ab3i7HlePq1XnD3/V0/rFWc/V3/bOHs9+tvG2evU3zbOXn/i7Pw+cUavOHv8
Z0/rFWfP8/JpveLs+b96Wq84+7n62MbZ69HHNs5epz62cfb6E2d9kcQZveLs
8Z89rVecPc/Lp/WKs+f/6mm94uzn6lcbZ69Hv9o4e5361cbZ60+c9akTZ/SK
s8d/9rRecfY8L5/WK86e/6un9Yqznzusf7/VlzbO6G/0pY0zesXZ6/8ntsb5
H2/1ivM/cHzi/IdbveL895wncf67W73i/LecP3H+/a1ecf4bPjdx/utbveL8
V1xP4vy7W73i/JdcZ+L8F7d6xfm/c/1HfK/699lHT5yv/4LjE2f0xPn6P3Oe
xBk9cb7+c86fOKMnztd/xucmzuiJ8/UTridxRk+cr/8T15k4oyfO18F/vv5b
9MQXveLsOknijF5x/jecJ3FGrzj/a86fOKNXnP8Vn5s4o1ec/yXXkzijV5z/
hOtMnNErzoP//Oh60RHnK3ri++Dx2UdPnB//V85zxPmKnjg/oFec0RPnx3/H
5x5xvqInzg/oFWf0xPlx8J+vg//8MPjPj/8beuKMXnH2+MQXveLMOl7FGb3i
7Lpf4oxecf73fG7ijF5xRq84o1ecB//5OvjPD4P//Pgf0RNn9IqzxyfO6BVn
1j8rzugVZ9dLE2f0ivP/zucmzugVZ/SKM3rFefCfr4P//DD4z4//GT1xRq84
e3zijF5xZt244oxecXadOXFGrzj/ms9NnNErzugVZ/SK8+A/Xwf/+WHwn39w
PfyI8yN64vzW4484X9ET5zee54jzA3rie+/5s4+eOP8w+M+Pg//8dvCfr4P/
/Gbwnx8G//l+8J9/+FP0xBm94uzxiTN6xdnzJM7oFWfPn/iiV5wvfG7ijF5x
Rq84o1ec0SvO6BVn9Irzf0FPnNErzh6fOKNXnD1P4oxecfb8iTN6xXnwn+VK
Ks6D/3wd/Oc3g//8MPjP94P//MNv0BNn9IqzxyfO6BVnz5M4o1ecPX/ijF5x
Hvznx8F/ltOpOA/+85vBf34Y/Of7wX/+4b+iJ87oFWePT5zRK86eJ3FGrzh7
/sQZveI8+M+Pg//8dvCf5Z4qzoP//DD4z/eD//zDn6EnzugVZ49PnNErzp4n
cUavOHv+xBm94jz4z4+D//x28J+vg/8sR1ZxHvzn+8F//uHP0RNn9IqzxyfO
6BVnz5M4o1ecPX/ijF5xHvznx8F/fjv4z9fBf34z+M9yeRXnwX/+4bfoiTN6
xdnjE2f0irPnSZzRK86eP3FGrzgP/vPj4D+/Hfzn6+A/vxn854fBf26c41ku
959u49+Ol8v9i9vvxeMbl/sPt99XO79c7u9uv0ePb1zu399+v+165HL/+vZ7
9/jG5f4t48Hrl8v9/e048fjG5f7N7fhpf69c7t/djiuPb1zuX92OtxYfudw/
3I5Dj29c7l/ejs8WT7ncf7wdtx7fuNz40Ge53MNXblxutnK5v2dcbVzuJz9u
G5ebrVzu8Xec5nL/wPfI+RuXe/jcp7nc3xFnr18u1/wQPX4HXG7ty+X+gThH
9/cb/fD75XLLh5bLPeLQuFx/X9EPv18uNz5043IPvXG5jv/oh98vl3s1zh+a
yz0+p3G5x7Zxuce2cbnZyuUe1//RuNzj99K43FynXO6xbVxutnK5jufo3tei
e/+Kfvjlcrm1vgKXG59YLrd8aLncY5w3LtfxHN37QnTzf/QjT8rlPhrnXP/h
u8vlPhjnjcs1P9uvSC73WPdoXK7jOfrh+zYuN1u53OP3cprLNT9z/Y3LPb7H
xuUa5+jHOGlcbrZyuY7n6Obne/blco99udw2nu9v9+Vya18u9/geG5freI5u
fs7nmp9z/PF7lMtt4znnOcavXO6Dcc71Op7RfzZc7vH3Ni732DYu99g2LvfY
Ni732DYu99g2LvfYNi43W7lcx3N083N083N05xHRrTfgLBqXa/0f/TivXG6t
r8DlxueWy40PLZcbH10uNz60XG58ernc8qHPcrnmZ+tQuVzr543L/eS4frlc
62fuY43LPfblcq/GmW3jcg+fu3G5x/nlcrM+0LjcbOVyHc/Rzc+v2ZfLtX6O
7niObv2c81s/5/jj38vltvH8+nZfLvetccaHlstt4/nQ4/fL5d4b5w/N5Vo/
U4c2Ltf62bpVLve4vzQu99hvXO6hNy730BuXmzwhl3tsG5d7bBuXm61cruMZ
jqxxuebn6NbP397uy+W2+jl+mPVzzn8cJ5fbxnPOY9449Jafcz3mjW9v9+Vy
49PL5d4b543LNT87j5fLtX5mntS4XOtn61C53KNualzusS+X2/IzebRxucf6
WONyjXPO73h2K5freI5ufv6efblc6+fvb/flclv9/D37crnHvlxuG8/f3+7L
5bb8/P3tvlxuG8/f3+7L5d4bZ7dnuVzzxsbleh/cuFzruo3LdZ6ycbnOuzcu
Vx9p43LxRVcul/F8DX8brlYul/p55XKpN4rLDfcql4tPvnK5zAevnxz63xHn
6PjYK5eLX3dlvaNxuY7n6OTnxufK5VI/F5freI5+/H1yua2uyz7+c3G5jufo
+Bs133beHS4X/7m4XMdzdPzn+KH6oiuXS71RXG5+l3K55OficvP9yOUe36dc
bnGvcrn4zyuXi19XXO4xzhuXi7/xiK/euNzjPI3Lzfcgl8t4Xrlc83N06me3
jculfk491+o61mcal8t4Xrlc83N0/Of4R/pI18F/jh+qL7pyueTn4nLNz9Gp
nx/x9eVyrTfC5Rb3KpeL/7xyueTn4nLNz9Hxn4vLNc5f3G7lcq/G+T/f7jcu
l/wcLrfl5xxP/Rwut43n1BfUz43PlcvFfy4u1/EcnfwcLrfl5xyP/xwut43n
wX+OH6ovunK55OficsnPxeXibxSX+8lxnFzu8XmNy819Ui6X+vkHfGm53NwH
5HJz/2lc7hG3xuUeeVEuN78budyrcf7T2/3TXC75eeVyqTdWLtf6OTr+s9vG
5R5buVzn3VeOl8vVR3rgeLlcfdGVyyU/F5dLfi4ul/p55XKpn4vLtX6Ojv9c
XO6xL5frfDBcbr5nuVz95zecXy5Xvy5cbn0PcrmO5+jk53C55uficqmfi8t1
PEf/5NiHy231c47Hfw6X28bz4D+7bVwuPlK43DaeB/85fqi+6Mrlmp+jm5+j
Uz8Xl0v9XFwu9XO43FY/53j85+Jyj325XP26t/jScrn6G+Fy833J5T46nvO5
xvnPbvdPc7nm5+jUz+FyrTeKy6V+Dpfb6uccj/8cLreN58F/Dpfb8vPgP7tt
XC5+XfxQfdGVyzU/Rzc/R6d+Li6X+jlcrvVzuNxWP+c8+M/F5R77crktP+NL
y+XqPxeXa5zZyuU+GOff3u43Ltf8/Nvb/cblUj+Hy23jOcdTP4fLbfVzjsd/
DpfbxvPgP4fLbfl58J/D5bbxPPjPjc89y+X+99v4r1zuP+KjblzuX97mn5XL
df1x43L/6vb+u3K5f4dPu3G58WU/Fpf7t/hjG5f71/jAG5eb+uQsl/s7fOON
y/0H/LeNy/0LfOaNy9XXlyOVy/0d41COVy738NMalxu/UC73D4wTz3+Wyz22
jcv95Mft6X65v+d74fyNyz3y6tl+uVfjDHfa+uX6e4drlcstP0Eu9/B5Wr9c
f48Ll5t6u3G5x/269cv194L/KZdb/o5c7hGv1i/X8SxHKpebOkEuN1u53GO8
fbR+uROXG/9SLvfYNi43f5dc7hGnj9Uv98E4w53K5T4aZ7jW1i/X+xHcbOuX
63heuNzU23K58aHlcqv+kcuVY4RDbv1yzdtyznK52crlHtfZuFzjDNfauFzz
M9zs6X65E5cb/1Iu96gbG5freIYrblyu+Rlu+Wy/3AfjDHcql9vGM1yrXG7L
z3CzrV+u43nhcvPv5XLzeXK5bTzDFcvltvwMt9z65Tqec73ZyuVebj+nHS+X
e7n9O9p55HKPbeNysz3L5VpPov9c+uWWXwqXGx9aLjf+lVxu5l9yueUnwOVm
/iuXW3E8yeW2eh6Oo/XLtd6AK279cs3PcMutX67jWY4ULje+X+NyD71xuYc/
0LjcnA8u92qcPf9ZLtf6Ge73dL9c62fO3/rlmp+HfgWNI4XLjY8tl9vGMz6u
XO5b44yvKJfbxvPC5bb6Ge639ct1PMMVy+W2/Ay33PrlOp7lSOVyw4vI5WYr
l5t8I5d7Oc4jl3vojcs99NNcrvUzeuNyrTeYl3ysfrn3xhnuVC73jXHGV5TL
bfkZf1Iut43nhctt9TPcr1xuqzfgilu/XPMznF3rl+t4liOFy706nv3e5HJ/
c/t3NA4WLrflZ+/bZ7lc62e438blOp7hihuXa36GWz7bL/feOMOdyuW28QzX
Kpfb8jPcrFxuG88Ll9vqZ7hfudw2nuGK5XJbfoZbbv1yJx5XPzlcrn7y1i9X
f3jrl+u8e+uXq3+79cu1rtv65VrXbf1yzRtLv9zic8/2y9Wvi44vGi63tmf7
5TofjC4v+s9ut6f75VpvRKeuC5eb7el+uYzj4nL1RaPji679cvFFi8vV34jO
vHvtl4svWlyu9XN06rq1X678c7hP83N08sbWL7f4XLncrP/B5RYPe7Zfbr5X
uVx8pOqX63iOLi/679jK5WZdEy63fsdyucy7w+Xm+2xcLvfBh8F/Li4XX7T8
UHzRB4+Xy8UXXfvlkp/XfrnyouFpqZ9Tz1nXPXB843Lln7d+ueTnrV/uoxxu
9vH5w+U2vy7H44uGyzU/r/1yHc+sw8jl1lYul3lKuNxWb+R46rpwuebntV+u
4zk8Lb5ouFx90eqXa5yjyz+z7te4XPLz2i8XX7S4XOrncLnWddUv1/Ecnbru
cfCfr8TrbL/c4nPhcsPbyuX+gF97xSeWy33k7y4u9/gdyOVWPjvZL7fuM3C5
uT653OTzxuUy7w6Xa36ufrnk5/vBfy4u97huuVx90bceD5erL/qG4+VynXff
e365XHnRHEf9/Bid+vktxzcul/r5Dcc3Lpf8fM/xcrk/wOEWl3v8O7lc/bri
cvE3wuVm27jc4zxyuW0+mOPlRZMnqJ/XfrnUz9Uvl/o5XK75ee2X63gO74ov
Gi5XX7T65R5/p1yuvugbzi+X67z73vPL5cqLDv5z9culfl775VI/v+H8rV8u
+Xnrl1t8LlxueFu53OJh5XIvx7+Hy01+ksvVRwqX28Zzzi8vGj+F+rn65VI/
h8u1ft765bb8nOPNz4P/XFwuvmj8UH3Rtx4Pl6svWv1yL8f/h8tt+ZnjG5cr
Lzr4z+FyrZ/fcnzjcqmf5cgal2t+HvzncLk/wOEWl4svGi5Xv664XHzRcLkt
P+f4y7EPl9vGc46XF42fTP1c/XKpn98O/nP1y6V+Dpfb8vPWL9fxHN4VXzRc
rr5o9cs1zuF18UWrX675Obyu+TnHX46tXK7PWw3+c3G51M/VL9fxHJ36ufrl
mp+J17P75WZ7lss9tqe53GzPcrlyZRuXm+s5y+Ue29NcbrZnuVw5zI3Lzd97
lss9tqe53MTnLJdrv8qNy008z3K5x/Y0l6s/unG5mS/L5WYrl5v66iyXm9/j
2X65cowbl3tsT/fLPbanudxje7pfLpypeuNys5XLtQ+V55HLPbaNy/V5K3S5
3Ppcudxj27jcXI9cruvdXqdc7rFtXK7+6IfmclNffax+uXJfH5rLPbaNy/1Q
/XKztV+uHKPHy+XCvbbzyOWGq5XL9XkrdLnc+txXT+utX26uRy732DYuN9cp
l2t/Ua//LJd7bBuXm61cbuorudycRy43z/ef7ZcrJ7Nxuce2cbm5HrncY9u4
3FynXO6xPd0vF85UXS5XjlVdLldOVr1xudnK5cpv+Lmvntblcut65HKPrVxu
Xadc7rFtXK7+aK432587l3tsG5ebz5XLPbY/m3652dovV47R4+2XK1/neeyX
Kyfj+eVy5Xb9XP+9/eu8Hrlcnjtu1ymXy/Pd7fpPcrk1X5bLzVYuV1504XKz
bVxutnK59CdonyuXqx/q9cjlpj+BXG6uUy43/QnkcnmOvjhSOFN1udza2i9X
7svz2C83/O9/elpvXK7crp8rlwsX3K7Hzwt3/M3TeuNywzXL5eqPfmguN+uX
crk5j1xunpuWy81WLpf+BO1z5XLTn0AuN9cjl6sf6nU+t19utvbLlWP0ePvl
4ju287x8WpfLra1crtyun/vqaV0ut65HLlfu2Ov0+uhX0K7/JJdb/KxcLj6i
euNy8SnVG5ebrVzusW1cbj5XLvfYNi431yOXe2wbl5vrlMvVD3Vrv1w4U3W5
XDlWdblcOVl1uVw5XHW5XDlfdblcOWJ1uVw5ZfXG5W587lkud+qXO3G5U7/c
icud+uVOXO7UL3ficqd+uROXO/XLnbjcoV/uyOUO/XKzbVwufN3K5Q79covP
lcuVF9243GMrl1tbudxje5rLHfrlXvGfw+UWnyuXm///q6e3jcs9tnK5tZXL
Pban++XCMWYdOtvG5R5budyxX+6xlcvNtnG5x/Zsv9yJy60tXG71zT3ZLzdb
udxs5XKLz5XLla9buNxs5XIf4L62frnZyuVmK5crnxuOrXi2k1xu8blyuTnf
yX652Z7ulwv3FS63tie53Gwbl0vfy61f7hX/eeuXO3G5tYXLrb65crk5H1xu
8bkn++UWnyuXC4+0cblXnrcKl5tt43KPrVzuI/7z1i9XPjdcbvG5crn0xw2X
W3yuXG7OZ7/c5F+43GxP98uFkwmHWlu53GMrl1t9c+Vyj61c7iP+c7jcK/7z
1i934nKLz4XLrb65cLnZyuVmK5dbW7jc6pt7sl/uD/jP4XIf8Z/D5b7Ffw6X
e8V/Dpf7Bv85XO4D/nO4XPnccG/F557kcovPPcnlZnuWyy0+Vy4313t5eiuX
m61cbrZyudnK5WYrl5vt2X65E5ebrVxu9c2Fy2183cLl1hYut/rmyuXC7YbL
zVYut/VjfHW7bf1y8Z/D5WZ7tl+ufG643OJz4XKzlcstPlcuV77uN7dbudza
wuUWnyuXm+u9HNuvb7dyudnK5bZ+jF/fbuVys5XLzfZsv9yJy30cuNy39Me9
wvHK5WYrl1tbuNxsG5cLtxsu9wf853C5j/jP4XLf4j9v/XLf4D+Hy33Afw6X
K58bLrf43JNcbvG5crn0xw2Xm23jcrOFyy0+Vy4313s5tt/cbuVys5XLzVYu
N1u53GzlcrM92y934nKzlcutvrlwudk2Ltf+uH/OFi4328blwu2Gyy0+Fy43
W7ncbOVys5XLzVYuN1u5XPnccLnF58LlPtIfN1xu8blyufTHDZebrVzuA/1x
w+Xew+EWl5vrvRzb7263crnZyuVmK5ebrVxutnK52crlln8nl6s/Gr9J/tZ9
udz4eXC5zX/K8fKQ8rhyub53z+ec5XLlzXwuVy7X9/T5HKlcrjyPPK5crvyJ
z+ldOP7Yl8ttzzvFJ0zdDZfbns/J+V2P9rkduVz6NrfnTORyXe/zuQi43Ct5
uHH8crmOZ/lRuVzfpxldnz+6fQLhdOVy2/s0w7/qI+X89u2B05XLbe/TDKd7
HC+X296nCacrl9vepxlO13XY+HfmA/TG5fr73rhcf7/ojcuVF40uXxf92G9c
7qE3LvfQG5crJxPdOKM3Ltc4y4/K5bKe0jhduVzXraK7bhXd9x3n/Pr8Od6+
anC6crnOB+V05XKdpxSne5xfLtf5YHG6cjI8d9+4XO9r0b1/Rff93Zy/cbmf
HNcrlyvPv3G5x75cbrsv5HjjHN28wfnlcuOHNC7XOMuPyuWan6Obn6P7Pvro
jufovo8+uuuw0e17SR6Ry235OZzucbxcbnsffTjd43i53PY++vikuT65XMcz
euNyzc/ojct1PKM3Ltf6KLo8f/Rjv3G5h9643ENvXO6hNy730BuXe+iNy831
yeU6nqObny/sy+X6vuPL7b5cbnvf8YV9uVz7EmcrVxCd9e76XNdhc7x9AnP9
PjeR88jz5/rNEz6XJpdrfvZ5Jrlc5xHclxqX67xAHl8u1+eAhvq9dN4/6PU3
Lve4/zYu1zhH5/2D7frlch3P0c3P0c3P0a2f4XRbv1zr5/iN1s85P1xB6Y7n
6LwftnQ5mejHuJLLbeM513+sO8vlug57x3yrcbnmZ4+Xy7V+tm6Sy7V+9vkn
uVzmJV5P43J9DnSYX5bu855ep1yuz1t5/XK5jmc4Xbnclp9zvPVzdOuN6NbP
Ob/1c46HRyrd8Rzd/Jzzm59zPJxM6XJf0eGR6vzOs33uVi7X/OzzoHK51s+c
v3G5n/y4bVyu9TN+Q+NyHc/Rzc+cv3G5x/fYuFyfR86W93e365fLdTxHNz9H
Nz9Ht36O7niObv0c3fo5uhxjdMdzdPNzdPNzdPtsR3c8R/9H4izPKJfreEZv
XK75Gb1xuY5n9MblWj+jNy7X8YzeuFzzM3rjch3P6I3LnfzmqV+u+Tnj2Lzx
h9u4Ny7X++Df3ca9cbnWdb+/jXvjco99udzmb4TLdd79u9u4Ny5XH+kvbuPe
uFzyRPG45o2lX2441cblUj+Hx211Xbhc6o3rkR/r/edyufjk4XHbvDtc7qHL
5RbnIJeLj52/s/mi+fvx6665f2SdzX65jufo5Oe1Xy71c/XLdTyH06V+rjrD
ui46/nP1yz325XL1N6pfbv49XK7+c/XLNc6Hrv9cdQZ1XPG4vo+ecSqXW3/f
yX65xbPbLzfnhcutfrxyufpG/459uVziHB63+o/J5R7nkcsNt9C43HAQcLnF
adgvl/F8ldOFy235OTr189ovl/r5gXWYxuXKi4anzT5crvm5+uWan8Pp4j9X
v9rj/HK5+s81D2SeXTyu4zk6+Tk8bsvPOZ76OTyudd3WLzd5t3G5+M/J4208
J78fulxuy885nrwRHldf9IovLZdbHJ39ch3P0cnPDx4vl0v9/Mi6ceuXS/28
9suVM//1oWcfLtf8/MDxcrn6z9Uv9zheLlf/+YHj5XLb+46jk5/D45qfr6zj
tX65yZf2y81zGPbLzfd3tl9uniOAy83vTC63+vfC5doXIjxuPkcuN3+3XK5x
LR6X8ZzvyfxcPC75OeOgvY8+uu/v/lP27Zdr/Rwd/1kOQi5XfyPrKM67s/7U
+jFGx0cKj6v/XOsocubkEblc83N4XPNz9cv1/d1wuq1fru+jz/HWzzke/zk8
rvNuuRK53HrODi5X/zk8rr7oA760XK73veJxHc/Ryc9vPR4ut72PPrrjOZwu
9fM9xzcuF/85PG4bz4P/LKcjl6v/HB63jefBf77neLncNp6jm5/D15qfczz1
c/G41M/hca2fw+O2+jnH4z+nrm3jOTp+XXjcmqfJNw39cnM9crn5++VynZcU
j+t4htNt/XLNz9Gpn99wfrlc6+d7zy+Xi/8cHreN58F/Do/b8vPgP8uRyeXq
P99zfrncNp6jm5/D15qfczz1c3hc6+cHzi+X2+rnHI//HB63jWd8Y7nclp8H
/zk8rr6oXJ5crr5R8biO5+jmZ4+Hy7V+fsPxcrnWz/eeXy4X/zk8bhvPg//8
luPlcls/c46Xy9V/lnM8zeXq421crj7qwuW29a+Ny9V3Xbjc5hMuXG7zaRcu
t/EPG5err7twuc2HXLjc5gMvXG7j3xYut/nGC5fbfM6Fy20+88LlNs5843Id
n5+yL5freNu4XMfPp+zL5ToeFi63fb+f3u43Ltfva+FyW/w/ZV8u1zjTP1cu
t8WZ/rlyuS3O9M+Vy21xpn+uXG6LM/1z5XJbnOmfK5fb4kz/ArncFucPzeUa
Z/rnyuW2OMtzyOUa5w/N5Rpn+uc2Ltc4y3PI5Rpn+ufK5bY40z9XLrfFmf65
crktzvTPlcttcaZ/rlxuizP9c+VyW5zpXyCX2+K8cbnG2f65crnGmf65crkt
zvbPlcs1zguX2+JM/9zG5Rpn+ufK5bY42z9XLtc40z9XLrfFmf65crktzvTP
lcttcaZ/rlxuizP9C+RyW5zpXyCX2+KMTyqX2+J8Yf/nzuUa58vtvlxui/Pl
dl8ut8X5crsvl9vifGFfLtc4RzfOr9iXyzXOr2735XJbnF+xL5drnF/d7svl
tjizL5fb4sxzQXK5Lc4+r3KWyzXOX7Mvl2ucNy7XOH/Nvlyucf76dl8ut8V5
6Ffguqxcbosz/Qvkcluc8Qkbl2ucX7Mvl2ucX9/uy+W2OL9mXy7XOL++3ZfL
bXF+fbsvl9vizL5cbovza/Y/FpdrnL+53ZfLbXH+hn25XOP8ze2+XG6LM/0L
5HJbnId+BXIzcrktzvZ1lcs1zt+yL5drnL+93ZfLbXH+ln25XOP87e2+XG6L
M/0L5HJbnOlfIJfb4uz+WS7XOH/Hvlyucf7udl8ut8X5O/blco3zd7f7crkt
zt/d7svltjh/d7svl9virK8kl2uc6Z8rl9viTP9cudwWZ/rnyuW2ONM/Vy63
xZn+uXK5Lc70z5XLbXGmf65cbovz1i934HJbnBcut8V54XJbnBcut8V54XJb
nBcut8V54XKN88rlTv1yjfO/uN0/y+Ua5+s/v91vXC5x3rhc43z9hH24XOO8
cbnG+Tr4z8XlGmf6557ul2uc/w37crnG+V/f7jcu1zj/q9t9udwW53/Jvlyu
cf6T23253BbnwX9euVx5Ufrnnu6Xax9X+ue2frnGmf65Z7ncxovSP1cu1zg/
Dv7zdfCfHwb/ubhc47xwuS3O9M893S/XONM/t3G5xvnfs3+Sy21xpn+uXG6L
8+A/Pwz+88rlGmf65zYu1zi/vN0/3S/XONM/9yyX2+JM/1y53BbnwX++Dv7z
w+A/F5drnO2fmzjTP7dxucb5P93ut365xnnrl2ucf80+XG6L869v9xuXa5wH
//k6+M8Pg/+8crnySPTPbVyuvCj9c+VyGy9K/9zT/XKPfblc4/x28J+vg//8
ZvCfHwb/+X7wn4vLNc4Ll9vivHC5Lc4Ll9vi/Ke3+/IOLc7sy+W2OF9u9+Vy
W5wvt/tyuS3OG5drnOmf27hc47xwuS3O9M9tXK5xHvxnt3K5Lc6D/xwut8V5
8J/D5bY4/+Z2v+Ic3Tj/5na/cbnGmf65jcs1zvTPbVyucR7853C5Lc6D/3xl
Xy63xXnwn8PltjhvXK5xpn9u43KNM/1z5XJbnOmf27hc4zz4z+FyW5wH/9mt
XG6L8+A/h8ttcf6z2/2K88LltjjTP1cut8XZ/rlwuS3O9M+Vy21xHvzncLkt
zoP/7FYut8V58J9XLtc40z+3cbnGmf65crktzvTPbVyucR7853C5Lc6D/xwu
t8V58J/dyuW2OP/2dr/iTP9cudwWZ/rnyuW2ONs/Fy63xZn+uXK5Lc6D/xwu
t8V58J/D5bY4D/5z4xrPcrn//Tb+K5cbf+hXt8ePXG6enz7L5WY+fZLLrffR
nOVy836Yk1xuPb/4kbjc1LlnudwHxtXG5VY//7Nc7jv2y8195iyX+2jeXbjc
lifCo/oesXCwf42vH33ql8t7l4qPZZ5dnytPF9516pc7cbnUcfW5eT+GXO7x
7xuXSx1XXC55oq4zfcG/u9XrORW43OpnIJd7+NmtX+5fEufo8W/gcuv9O3K5
9q8LT5vn3U9yuam75XIfjHN8zsxH5XLtLxqON/cNuNzUC3K5rY4Lv4oPWpyq
/lz8QN+7FG72WFf5aP1yJy6XOq7+LuqL4nK579XnUl986H65D/DOxanm9/6r
W/0RPrS42WNdovXL/SviDPcrl1vPJ57kclN3y+U+GOf4nKl35HLzfgy43Pg6
crnxUeRy2zw7/Co+aHGquV//6lZv78VL3I/j5HLbex5zfNbZzvbLnbhc6rj6
u/J+DLlc5iV1nd4344syz644HPFsXG6uDy63+hnA5V7lyuM3wu8XN2vfy5wn
62/2yz3WS1u/3L8hzguXm7pbLvfBOMfnzHxULjfv1YHLja8jl5v7rFxu80Ev
6HC5vt+quFZ8o+Ja8TOKa2WeXVyr879Db+/1uNzuy+X+Uvrl1jiHyy1f7Ve3
ej1fDpeb351cbv1O4XIfjXN8TvijjctNnpHLTV6Sy608BpebvCeXW+8Rhcu9
Dv1y2zpVfEV80OJaj79HLtf34hXXim9UXCvzbLlWudz23qWFy23v4YUrlssd
++XyfHfFgXWq+tz4Bd/d6lO/3Huuq7hTufLM/y/HPlxu6iK53Kqj4HIfjXN8
TvjQjctNHSiXm7pRLrfqTLjc1KVyufUeUbjc1L1yuY0jiK+ID1pcq/5cfEV8
o+JaWT8prpV1quJaXT/J/BZff+NyfQ9vXQ/r2/W5rLvW+Xk/bOkfqF9uzRPh
ch/051LHw4cW1wq/Xxzs5fj/cLmPxjk+J3li43IzT5fLvfIcW31u5gVwufEN
5HLjM8jlxpeQy22cV3xFfNDiWuXK4yvi6xfXyjpVca2sUxXX6vMo8WVYd924
XN/DW9dDH6r6XN8rnfPzXuk6j+9Jz/HH/VQud+qXW8fB5Rav8Ktbva4DLjfX
LZdbfi9c7qNxhrM9y+Xm38vl5vPkcssPh8vN3yOXW/wKXG7iJZc78rhTv1x9
461frj7w0i83fMrpfrmXH/flcn2OrXxGfaSlX+6d85SlX27u+3K58vvF5eqL
4uvL5ab+b1yuzxmHv9WvW/rlFncml3v5cSuXW+8Nhsttzwt+chw3cLk+9xMu
t+oiuFyfR7nGr8Z/rnytLxr9+PzT/XLl6dIvl+eMk9fuWL9Y++VeftzK5foc
W7jc3Jflcn0uM3Vz60uc9R7950O/4j9v/XIbH5r4ZX1HLhduceuXm++t9cuF
ww2XW58vl3v5cSuXW+8NhstNHpDLrfc4w+WWTwCXW/NWuNw7/OdwuY/4z1VP
2wciOtxi+XT6otEzXzjbL/cYR6f75V5+3Mrl+hxb+Yz4SNUvV/85et5nC5db
vgVcbjgmuVyffw2X2/jQjFf6bRSXm36Jcrn0Nal+ufkdn+yXW/lLLvfy41Yu
t94bDJfr84Lhch+Nc47H53+kv4RcbvlecLmP+M/ld9gHInq4YLhc+5oUlwu/
/8i6X+uXe9w/T/fLPf4uuVyfY6v7LhxB9cvVf46Oz1/rGfgx4XKv+M9bv1z5
0OJy8UXD5T7CLV7xexqXK7fI+Vu/XOcprNvL5eZ4udw76rq3+MZyuT7P/Ybj
5XLv8J/vuZ7G5R7XLZd7xRctnw5ftLhc35Me3eeMc/6MA/vl6otynY13mPrl
Hr8XudyxX+7xe5TLnfrl5vculzv1y5UPrfF6/Du53Kqf5HLx64rLxa+rfrk8
z139cn1POtcjl1vXLT8y9Mut+wVcrn2n3pDv5XKnfrlX/OfynfFFq+7BF611
lOPvbFyu76OPbpxzft9Hn+P1RflcuVz7qGUeknqm8ThTv9yjXpLLtU9PuNzc
l+Ryp3658qHF5eKLhst9hFssLvdy/H+5XHnnHA+HW/1y4XDvOL9cbuptudzk
Abncquflm4Z+ucWDweWmDpLLveI/l++ML5q4X/FFy6fDFy0uF7+u+uVejuPk
cnMft1+uvijnkcu1j1p8xtY3nnVsudzErfFiU7/cT47rhsud+uXKh9Z4xRcN
l5v5fuNy8euKy8Wvq365l2MfLveR5yTuOF4uN+NNLtd+deFyq+5jHcg+auFy
a11en2Pol3uH/1y+M75o4n7FF611FHzR4nJZ765+ucY557euy/GXYyuXe+hy
ufZRy303dbFcrn0BU/dk3imXa5/LcLnxdRrP+K79cumDu3K5g980cbn2y1y5
3GE+P3G59iPcuNzm0y5crlzJyuVeftye5XLtp7Vxuc0HXrhc+xVtXG7zjRcu
134wG5fbfOaFy21+/8blxv+Dyx375cqLblyu4+dT9uVyj/nKWS439WPjcvWf
cz1+XwuX+zhxufL8+d3SH1e9cbn+3rNPn8vS6b+oLpfbfo/ReV6wdJ6vUpfL
bb+X6I7/6KzjqcvltvH8oblcOfMP3S/3yD8fjcvNurFcrutW79svF0629n1u
Pjr9REtnPcXzNy7XvOH55XJ5LrN0nq+qz5NjzPGsG5d+5AG53JbPc37jzPlP
c7n2x8380/Ec3yTr+/bLNT/nvMZ565d75NuzXG7qx8blOp5zPcY5XK75OX+X
+Xnrl0t/XHW53Dae0eVyW35Gb1yu4zn7PP9aOpyCulxuG8/ocrktP6PL5bbx
fFzvL4bLPc4vl1u+P1xu6/d1ud2Xy239vi63+3K5LT9f2LdfLv5icacDl1vc
n/1y5UXlsOyXi/9cx8PFlM5zxl6/XG6r27n+xuVa13H9jcs1zl7/SS43/l/j
ch3POU5edOFyH41zuFzHc+J0fI9yua1+zvVbPw/9Cur6jXOu3/yczzM/D/0K
alxmC5db3/uvntZbv9zcj+By5bDU5XLbeIY3lMtt9TN643Idz3CjcrktP6PL
5bbx/KG5XPNGrtv8nHxnfg7f43jO330cL5fb6ufsWz/n+q03cv3Wz0O/Ajkw
udw2nuVM4XL1n+s4uL/SWU/x/K1frnnD88vlhm+9PH3+xuVaP3P+xuVa13F+
udyWn73+k1xu/L/G5Tqec5x5I+PD/JzjjHN8Gcdz/o5Dl8tt9XPOa/2c63c8
Z9845/rNz/k887O+kv1y4UzV5XLbeEaXy235GV0ut41ndLncVj+jy+W28Ywu
l9vyM3rjcjc+9ySXO/bLHbjcqV/uxOWO/XIvP+7L5bb6eeFyW72xcLktPy9c
ruN55XLt4xr+Vr8uOr7oxuVO/XLbfDA6vujG5TpPuX5y/H/rjUO3rtu4XO+D
18F/ju/c/Ofs44uu/XJ9/0/65epvhMtl3r32y8UXrX65A5drXbf1y7W+qH65
5ufwuuSNrV/uxOXW+k74usQ1PNrJfrmtr2h08ka43Daeo+OLblxu1qXlcrO+
LZfrvDtcbu6ncrneB8PlOp7rPe7GeeFym1+X4/FFt3655ue1Xy6+aPXLfUcu
t9Ub4XKpN7Z+uebnrV/uxOXq84fLbX5ddHzRcLnm561fbhvP0fFFNy7XeUq4
3FZvhIs1zuFsyc9bv9w2no/46j9X3PFF67lQxzPHt3655OcrPujpfrn4otUv
l/o536t1XfXLdTxzvFyu+Tm+vPl565c7cbkPA5dbPBpcrs8PhssNJyWXGz5L
Ltf+i1u/3EfyRrhc+5yEy00+kct13h0u1/wcLtf8fD/4z/Gd9Z83Lle/buNy
9Tc2LrfNB+F75R2sn8PlWj+Hy7XeKC6Xui5crvk5XK75OVxuG88Ll6vPHy5X
vy5/j77oxuXqI4XLbfPB6Pii4XKtn902Lpf6ubhY4wxHJpdrfr4f/Of4zvrP
FXd80YzjNp7hb+Vy9TfiCzvvDpfbxnOOxxdN3Wz9/IgPKo/TxjN+nlyu+fmB
ebxcbhvPC5f7MHC5xaPB5bpu9cbzwOXqI4XLbeMZTlgu1/q58j71c7hc62e3
crktP+dzzc+D/xzfWf9543L164rLlTP/s9tt43KN86G38QwPLJdr/VzP/1M/
h8u13igul7rOrVxuy8+D/7xxufr84XL16+r+bd7IeczPf84WLreN5+j4ouFy
rZ+TT62fw+VaPxcXa5w5j/xdy8+D/xzfWf+54o4vmnHcxjPHy+W2/Mzxcrlt
PHO8XK71c3G51M8Zx208c7xcbsvPHC/P2Pzn//a0j3cX3yk6XG75KXC5lfd+
dXv8G/Wc3/4ScKGNy7W/B9xp43LtRwHX2vrlHvWjXG6+18blHvppLpf3Y8j9
Ni4XrluuWC73zv45cMuNy4UDl4tuXC7Po8ldNy4XblyuWy737vB9J468cbly
5fHx7NsT7tQ+8eFUHYfhWu2PFA72cvx/uNwHx0842+P4xuX6vec89u3J9fCe
pfq77HOS89u/Lrp9e6L/BXHmuZTG5Rpn9MblGme42cblXo7zyOUeeuNyD71x
ubx/vnSeA1JvXK6/F3jjxuWaL9Ebl+t4tr8rXG7rq0b/WLnc1oeKv1Mut/Xt
CWeb88vlvuT/019XLrf1VbN/L1xu1t/kclvfHvo7yOW28QzvKpebeX/jcg+9
cbnmDc4vl9vuO55fLjf9aC/oyQdwuXef/LhtXK732+i/J86cXy635W3OL5db
zyXD5ZafxLpUG8/hWo/j5XJbfg43a5zNC3K5/4H/T39dudysx8rltvEc/XfE
Obr5Obr52b6icrm5brncQ29cbo6Xyz30xuXmPPr4h9643JxfLte8Ep16Tb1x
uY5n9Mblmp/RG5freD6ut/UlPvTWl/jQW1/iQ299iXOeY51TLjfr0nK5rS9x
9KN+k8ttfdXyufZVy/Vbb+R89lXLeczPOd78HN3x7O8MLvfOPtveZ+Ry6dtz
Z50Fl5v7TuNyrfepIxqXaz2frXU719+4XOtwn9+Cy2352euHy21943Pf8j2l
qSeMc/6O43Plclvf+Oh/R5yjO57pJyCX2+rnXL/1M/WQXG6rn6Obn6Obn6M7
nq1r5HKpa9rxcrnp3yaXy3xRvXG5jmfmE43LtX5Gb1yu45k6unG55mf0xuU6
njMPyTwGLjfcjVxue69H9CMPy+W2/Jzjzc/RHc/RDy5JLrfVzzne+jm69UZ0
62fmaXK5LT9Hdzw7j4TLrfe0/wrd57CjH3FoXK75Obr52fPL5eZ9O5enzy+X
e/fJj9vG5VpvRLd+5vxyuS0/e/1wue09VtH/kThHdzxH/8OtP1S6+Tm6+Tm6
4zn672/9s9Ktn6NbP0d3PEe3fo5ufo5uftb3lMu1DwF643Idz+iNyzU/ozcu
1/GM3rhc62f0xuU6ntEbl2t+Rm9c7tAHoo6Dy21+8j9wHXK5+sN/f/t3yuW2
efffEke5XP3bv7n9nuRyW133V7fjoHG51nV/eTvO5HJb3rDvM1zuA3ldH7Zx
ucb50PVFw+X6fuPcn/SRruFvL8dWLhdfNFxu5lNyuc5Trp8c/996Izp1Xbjc
XK9crvfB6+A/h8dt/nO4XMZz883lcvFFw+U2fyNc7qHL5bbxHC4X/yNcbquf
w+XqF1IPNS6Xuq765Zqfo5M3Wl9+uNziEeBya30HLtf3dbvOIZfrOlG4XH2k
B/riNi4XXzRcbnGycLkZL3K59ZwCXK7z7nC5yUNyud4HHwb/OTyu/nPNA4+/
Ry63+XXhcskbrkvJ5ZqfH/Tj5HLxRcPlWj9nHnj3ye3nV79c643o1HWPg/8c
Ltf83N6bApcbXkwuV5+/uNwcD5erLxou1/zsOmLjcnN+uVy+h3C5yZetXy7z
lOJyrTeiU9eFyzU/V79c8vPD4D+Hx9V/Li730OVy23jmeLlc8/MVf04et43n
Yb2l+uVSPxeXS11X/XIdzxwvl2t+Li6X/NzeawWXe8WvC5d7pS9xuNw73otX
/XJ5T264XJ/DCJd7pZ/5vfn4JJeb+2rrl3v8PXK5d58cnw+X67w7XK75ufrl
kp/vB/85PK7+c/HQ+KLhcvXr6r6IL1rvAcLfSB5x3l39cp0PRscXlato/XKp
n/O7st4oLnfol2t+rjxLfq684HgOT4tfVzwuPn9xucY5Or5ouNyal9gvFx+p
uFzng9Gp+8LlWj9b3zQu1z6B0amfw+Wan6tfLvm5uFzH8zF/038uLpf7bXjc
Np5zPL5o9cvF3ygul3l39ct1PEfHFw2Pa/1cXK59Lwf/ubhc6udwuebnqoPt
Yzf4z+Fyq+62X27mVXC5Nc+2Xy7rVm88j/1y8ZGKy3U8R8cXDZdr/Rwu1/o5
XK71s5yZXG7Lz9HNz4P/HB5X/7l4aHzR6peLX1dcLr5o8bjm5xxvfo7ueI6O
Lxoe1/o5XO7dJ8d1w+VabxSXS/0sFyiX2/Lz4D+Hyy1fxH65+PzF5cq7RccX
DZfb8nN087Pnl8vFF/0Bv6H1y6V+fjv4z+FyrZ/fcB553JafB/+5eFz85+Jy
8UWLx3U8c3zrl2t+5vjWL9fxzPFyudbPxeXax3Twn68cL5fb8jPHjzzuSS63
9eVYuNxHfmcbl9ver7dwue29ewuX297Ht3C5D8xPNy63vb9v43J939zC5bb3
/S1cbnsP4MLltvcDblyu7w1cuNz2PsGNy/U9gxuXqw+9cLntfZrhcnNeuVzH
1cLltvdppm5L3OVyHQ8bl+v7NPO5vk8z5/d9mhuX6/s087m+TzPzK/tQpU6y
D9Wht7496R8hx5h6VJ8/fQCM86G398O+uN2Xy23vh831uJ6Szz1+j43L9f2w
0X0/bPTj/iuX23zoD83l8pxm608rl5v7ij5R/k65XOP8obnco06Ty23vO6af
sFxue99x/Fz7BGYee/w9crnt/d2Zn9tXLe8VsA8Vz/vL5bb3d39xuy+X297f
jW/ZuFzf3x39qPPlctv7u/O5vr87f5c+9MLltvfRh8vlOfricuMnyuWm3oDL
be+jp/9t43KN88blHr9rudz2Pvoc730zcfB99DmP76O3/zBcbuvj6vu24HJb
38s8728f10NvfQLTB8A4H3p7ro1+HI3L/RviHP2YB8nl1vxULle+LnGgr3ad
J78/uNzmQ1/Qf+5crnE+tvle5HIfeB42en3vcLmtv+ihZ1zJ5WYcyuXWuIXL
bX227X/DevYDPn/xqMdxcrn1O5XLTd8sudy/Jc7RjXP6Uh1/p1zuo3FO/wL7
I+U68TWiJ0/K5SavyuU2H3rjclNnyuX63tL8HXKMG5ebeQFcbr1fVy7XOKc/
QO6/cLn2OYle92W43NzH5XJz35fLTZ0gl1t1BVxuew9C5v2+ByHP79u3J9cr
/xz974lz9PgzcLn13mO5XON86D5HX3+XcT701rcHP0kuN3WsXG7qXrnc5kN/
aC7X96fkOf/MC+By671+cLn1fl25XOOc/gDxPeByMw+Sy615E1xu5llyuZmX
yeUmL8nl1rwPLrf1Ccz5/vrWJyj9H4hzdN/rkXmLfQLtmwWXW+89lss1zul7
Qp+T+lzjnPF9/Hu53PgGcrmtT2Cu0z6u6V+gD71xubl/weUWDyWXy3p39PKF
4HKvvCe9+tFknV8u1zjHj8z6MFxuftdyueXjweXGD5TLja8olxt/Ui63fE65
XPu40j9XLrf1vaQfh1xu6+NK/1y53NZXjX4ccrnFc8Dl2h/JPhFyufaTsU+E
XK79N1r/3ImDPsnl1u/4JJdb95mTXK513Mbl1nziJJdb8+aTXG75T2e53Pij
J7lcx+/1OG+tO9kv1/Xkhcut+zZc7oNxDpdLnDcut+avcLlX1rvvDt33LK1c
bvxFudy/uB3Hdf9zfSR9dPFFG9cvlyv/HP7W9Yvkffnn1HPUccXlGufU2cY5
+nFflsutebNcLu95rPtQ1h/kcn936z9X3Rbf9CSX63vSw+XWeLNfLvk4XG71
bYLL9T284XIfjDN9dE9zubyHt/rlypnn+Pgxcrn0ey4u9/idNS433wNcbo2f
k1zunXGOji/q/bBxubmPw+Vax93hS8nl3hnnjcvN+pVc7hE3udzyh+Ry8Z9r
Xh2f9SSXa5/AcLnFbdkvF1/0EV6jvS+U+iJc7oNxxuc7zeVm/UcuN/dhudys
y8HlXrmu4nLjL8LlXvGfyz+CFwuXezVv5HjXo6Pjiz4y/5DLzTy39cm1rxq+
aeNysz4sl/uH2/Xw4nKzviSXe9wHGpfLukTxtfjP5XvGZz3J5WYctX65+T7l
cnM/kst1XHB+udwrvr51tFzulefoi8uVY8Q3blyu75Xm+Mbl+p50rkcu1/fi
bVzunXFeuNwaP2e5XHiHO65TLtd5Sa234SNlvl2/L7ncoV9u1Z9wuVf85/JD
kx9Ocrn22Q6XW/lVLjfr9me53NT/crmpT+VyjXPqwvgZcLmtT2COx+e/4j/J
5da6vFxu/Dm43LrfweW6bllcLr5orVfRN764XDlGeN3G5X5y7MvlwhHc8bly
uXfGGT9ZLrf1vYyO/1zroHyfqYPzO2hcbvL+WS73iFvjcjPe5HLpGx8ut+pV
uVyfm8jxxpnzy+VW/1q53OPfyeVWPS+Xa99LfObG5Zo3cjz+c/mk+bvOcrnJ
n3K51M1Zh/O9pcXlZh1ZLheO4I7zyOXeGefEER+puNzUJXK5+M/6SXK5V/zn
8kNTl57lcnlPTXG58SfkcnmPdLjcK35d+SO8ByFc7tU4c7xc7gN5ubjcrJ/A
5ZbfIpeL/xwut9bl5XLt4yofLZeb8SmXm+e25XIz/uVy8/yrXK51XXTWU4on
8L0e6I3LNc7xG454Ni6XfFFcLv5zcYTEN1xufgeNy9VvXrjc1sdg4XJ97n7j
cttz4huXy3PNG5fb+iQsXK7PjW5cbnvO8QNzua0Pw8bl2t9s4XLbc+4bl2s/
tI3L5TmIlcu1P8/G5ervh8t13NKn5nS/XMdbuFzHVepsxw/PU53mcv3ecz1+
v9T3jcv1+8p5/F5Ytz7bL7fFmfUDudwWZ/wCudwWZ/w1udwW54XLbXFm/imX
2+LM/UYut8WZ+qz1yzXOvvdKLtc4s97QuFzj/KH75Q5cbosz9bpcboszHJtc
7ofql9virD8Fl9vijC8jl9vizPqHXG6L88LltjhT38jltjjj18jltjgP/Qr0
nRuXa5zhfRuXa5zDqRrncLnGGX/tdL/cgcttcc71GGffQymXa5xzHuOMv3m2
X26Ls+sHcLktzqy3yeW2OLM+LZfb4rxwuS3OzD/lcluc8Wvkcluc8Tdbv1zj
fOE4uNwW5wvXAZfb4nzoLc6H3uJ86C3O7Mvl/lL65bY445vI5bY44xfI5bY4
M3+Ty21xXrjcFuehX0HrkwWX2+LM8zlyuS3O+M5yuS3OcK1yuS3O8D1yuS3O
8HByuS3OC5fb4sznyeWO/XKNc85jnOEDzvbLbXFm/UAut8UZv0Aut8UZf00u
t8V54XJbnOGf5HJbnJnny+W2OMMHtH65xlkODy63xVm/EC63xTlcq3GGV5bL
bXFeuNwWZ3gRudwWZ/4eudwP1S+3xRl/Si63xZn1NrncFmfWP+RyW5wXLrfF
mfV1udwWZ3hBudwW56Ffgb6zXG6LM7yvXG6LM3y8XG6Lc7hW4xyu9XLsn+Ry
W5xzPcY5n2ucc37jnPMYZ+Illztxoi3OrB/I1bU4s94mh9TizPq03EaL88Ll
tjjDP7ku2OIML+g6SoszfO3oO5/sl9vivPTLbXFe+uW2OG/9co3z0i+3xXnr
l2uct365xnnpl9vivPTLbXHOuov3c56vPtsvt8X5n9/uy+W2OIfXHfrltjh/
cvv3yOW2OG/9co3zv709Ti63xVnfHC63xTn9co0zff1O98s1zumXa5z/1e3n
yeWO/XKN88EBtDjDBzQud+iXa5zD5RrnB39XJ/vlGucrfXTlcluc6c8ol2uc
w+Ua5wee121c7tAvt/VxHfznh8F/rn65xpnnxlu/XOMcjtc4L/1yW5y3frnG
+d/f/nu53BZnnlNqXK5x3vrlGuelX26Lc/hb4/wfb6+j9cs1zv5uT/bLbXF+
ebsvl9vinL6oxpnnGxuXa5wH/3ntl2uc//PtcXK5Lc7pl2ucw/Ea5/TLNc7E
5XS/XOP869t/J5fb4vzr2+trXK5xHvxn+drG5Q79co1zuFzjHC7XOIfLNc7h
co1zuFzjfG/d5vo8//+HwX9+HPznt4P/fB385zeD//ww+M/3g/8cLrfFmefG
5XJbnOF75HJbnHmuUi63xflPb/flcqd+uS3Ol9vra1yucc55jHOON87Rh365
Lc5wqHK5Lc7hdY0zz/3K5bY4H3qL83+53W9crnEe/OdwuS3Og/8cLrfFefCf
w+W2ONs/Ai63xdnncuFyW5x/c/t3yuW2OB96izP9v+RyW5wH/1luqXG5xnnw
n30+rXG5Q7/cFuc8b2ac7bcCl9viDBcrl9vifOgtzv/1dr9xucZ58J/fOo+S
yx365bY4D/5zuNwW5z+7Pa7izHPjcrktzvDxcrktzvQlkcttcab/l1xui/Pg
P4fLbXEe/Ge5QLncFufBf/7B/hFwuS3Of377+XK5Lc70zZHLbXE+9BbnP7/d
b1yucR7853C5Lc6D//zGulYu1zgP/vMP9o+Ay21x/u3tdcjltjj/9vbvlMtt
cT70Fmf6f8nltjgP/nO43BbnwX8Ol9viPPjPY5+ChcttfQwWLvfK97Jxua3v
wcLl+nzixuW2PgkLl5u66SyX2/oqbFzucZ6zXG7rw7BwuZlvneVyW9+Gjcvl
+feNy219HjYu9zjPaS5Xf3Thch/ftV+u423hclPfne6X6zxm43L9fvN3Tf1y
7eO6cbmHPyqXO/XLbfkBXS639YWIzv28dH+/6HK5rS9EdDma6P6+0OVyW1+I
6PKDL263jcuVa0b/aFwu95kP3i/X+eKH5nL1fT9wv9w2npMfBy633b+ip46A
y3VdtM5vf1HPL5crr0TfALncdl/44nbbuNzj+uRy5TpL1+/k/Ge53Jaf87sy
P8c/NM7hch3P4WlTP57tl+u8fONyjXP+LvNzzn8cL5fbxnPOb/yWfrltPKPL
5bb8jC6X28Yzulxu6wsRXS7s/nYrl9vyM3rjcuWO0RuXK9eM/ovlcvU/cv2/
kH65bTynjh+43Jafo1vXDVxhnd95AVxt43Ll77j+xuXCQ3n9jcvVv+H65XKv
+p1e/0kut+XncLnm54xX47xwua1+zn3O+pl+AnK5bTzn+o1zrn/qlys/mOt3
POf6jV+uf+iX28Yzulxuy89wl61fruMZXS631c/whnK5bTyjy+XKqZV+xEsu
t41n9Mbl6o9+aC7X+jlcrvVGvg/r5+QF6+fs6+fl+h3PuX7zc67f/JzrN2/k
+j9Qv9w2nhPfgctt+Tn71nWcv/XLtX72/HK5x98jl9vGc85v3uD8jcvV9+X8
crlX/U6v/ySX2/Jzflfm54xX45y/0/EcP9P6OXG0fs6+vmmu3/Gc6zfOuX7z
c67PvJF/73jO9Ru/XP/UL9fxjN76XZqf0eVy23hGb/3UrJ/R5XLbeEaXy235
GV0ut41n9MblTnyucV643JY3Fi633QcXLrfVdQuXO/XLnbjcsV/uwOWO/XIn
LnfolztxuVO/3LdTv1zquo3Ltd64HvztPRzBXbjcy4/bs1zu1C83/Ffjcu3j
unG5+HXXu9tt65freD508/PWL9f6ufrlOp4P3fp57ZeL/1z9ch3P4XLxN9Z+
ufjP1S/X8fwnt9vG5eKLblyu9Ua43OoXdbJfbtYn5XKzziyXew9HUFwu/vPG
5erXhct94Hn0rV9u9fGVyz3+nVyufG75pIznjctt+TlcLvXz1i/X+nntl4v/
XP1yGc8bl9vyc3T8561frv7z1i934nLbczB5L6b5OcdT1xWXS1239cu9hyO4
Y75+lss1Pycvt/yc4/Gfw+Xqi279cuVzyyd1PB+6+fnB4+VyjTP1mlyu9fPa
Lxf/ufrlOp5/fbuVy235+de3W7ncNp4H/3nrlztxuebncLnm5yvzY7nc6rMI
l3ul3giXe+99cOmXG66tcbk8xx8uN1xq43KP88rl5rrkcq+M53C58rnlkzKe
Ny7X/LxxudYbG5fb6ufo+M/OV+Ry9TfC5TrvDper/xwuVx8pXK7+c3G5+KIb
l2t+Dpdrfq5+udR1G5dr/Zy6udXP2cd/DpfrvNt5oVzuW+M8+M/hcvVFH/AF
5XLlc8sndTyHmyU/v/V4uVzjnOMdz79ha79c80Z0/OcfmE/L5epvOP+Wy9V/
foOfKper/3yv/3qSy235Ocebn1PvUj+Hy7V+Dpdr/Zw83urn7OM/h8tt4xlu
Ti635hVyufgb4XJzPXK5V8fz69tt65freF643Jaf4+dSP7/h/I3LpX6+9/xy
ufjPP+D3yOW2/GwfArhc/Wf9JLlc/ed7/dSTXG7Lz39+u239cqnrisulfn7g
/HK5rX7OPv5zuNw2nvHV5HJbfh7853C5+qL6dnK58rnlkzqef3u7bf1yzc+/
vd22frmO59+ytV+u9fNvb7dyuW08D/7zW46Xy9V/fsPxcrn6z80fhcttevwm
fTyPh8stv/xXTx/fuFzXCzy/XK7rYhzfuFzXF7yel08fL5fbfHKvXy7XccLx
crnNV/fvffX08Y3LdV2D4xuXy32qxUcu13UQjm9cbuIpl6ufz/GNy9XnN/5w
uZW34XLvuA+24z97WpfLvaPeUJfLbfdBdLnc+txXT+tyuW19EF0u9868jC6X
29YH49/xXIt643Jd70ZvXC7P5ag3Ltf1bvTG5eZz5XKzXi2Xm+uRy7XO8Drl
cuUFvH643Kqr4XJrfvGrp3W53Ohyuc3nR5fLbfMUdLnc+txXT+tyuXU9crnH
vlxu4zfQ5XIbvwHvKpdrn7x2vFyuz4l4npdP643LlUfauFx8JPXG5eZ65HLD
K8nl5jrlcuWRvH64XPs4qsvl2idSXS63zvPyaV0ut/lI6HK5d/oa6HK5dT1y
uYcul1vX+e3Tulxu4+vwAxuXe+iNy83xcrmH3rjcnEcu99Abl5vzy+UeeuNy
87lyuYfeuNxcj1zuoTcuN9cpl3vojcvN9cHl2mdXXS7XPr7qcrn2CVaXy23v
9UCXy23rsOhyuc3nR5fLbfwzulxu45/9ncHl2me6HS+XSx/rdp6XT+uNy/W9
eOiNy6Vvt3rjcl2HRW9cLn3H1RuXa78T7w9wufZNb8d/9rQul2sfd3W53Pbe
JXS53PYeXnS53LYOiy6Xax99dbnc9nyKdY1cLn2Y2vFyuTzP1M4jl8vzUu38
crm+J8HPlcvlPQzteuRofZ7M65TL9Xk1rx8u1/dUqMvl+h4Mdblc37OhLpfb
3ouHLpfre0LU5XLbe0vR5XIbJ4Mul9ueH3QeCZfr86DteLncQ29cbs7z8mm9
cbk5v1zuoTcuN5/rcx2H3rjcXI9c7qE3LjfXKXd76I3LzfXD5Zb/AZcbXS63
jv/saV0ut87z8mldLrfOL5d76HK59bmvntblcut6Xj+ty+XWdX77tC6XW9cv
J8pz5OqNq+O5dvXG5fKcvXrjNnzuH71xufQhUG9crn0R0BuXa58G9OY785z9
2i9XPzn9cvWNw+XqD6dfrj5wuFz93vTL1dcNlytnfnC5jTM/uNysI8jlNs48
77O0v8jB5TbO/OBysw4ilytnXlyuvujWL1df9NCz/tO4XH3R9MvFFw2Xm/Wo
xuWyPhgu957+NOFyXR+8fnJcP/1v7g79yrpVuNys08nluj54TV7LOpv9cvVF
0y8XX3Ttl4svWv1y9UXTLxdftPrl6ouGy4UrCJd7T7+lcLkP9mc6+Nv2HNCh
uw4bLvct69LhcbNeLZfrc0DF5eKLVr9cfNHql6svuvXLxRetfrn4otUvV180
XC48UrjcrPvL5YZfkMut9wPD5cojhct9C1cQLvcRLiM8br3f2H65+KLF5eKL
Vr9cfdFwufiia79cfNHql6svmnwvx3jwtOFr5HLD4cjlht+Ryw3vI5crjxQu
NzyRXK7PaRaXiy9a/XLxRatfrr5o+uXiixaXiy+69svVF02+kX8+eNp7+juG
y32AOwuP+4b+keFyr/SbDJf71v6UmefDzYXHDU/X+uUe1y2XG16v9cvN8XK5
h9765eY89ss99NP9cnluIlxu+Ee53PCScrnhK+Vyw2PK5YbflMsN7ymX63P0
xeXii1a/XHzR6peLL1r9cvFFq18uvmj1y8UXrX65+qJLv9z8O7ncfI5cbq5L
Ljd/h1xu/m653MRJLjdxlct9wBfN93TFF833+ogvmnGQcSGXm3Ekl1vjDi63
+HG5XMZ7tmO/XPpP53dln5P8Du/ob53frTx//c7pJ5O8YJ+T5JEHfNHknSu+
aPLUI75ocbn0C08efKC/ePLm1fd35/x5jkEul37nyeMP5PtH7gdyublvNC6X
fu25Dz3Q373uWzx3kvtc7ntyuQ/4ormPXvFFc999xBfNffqO/ve5rz/wXE7q
gCv99atuyHM5crn0709dkjpFLvdKvfOWekgu1+eAUlc98FxU1WG836CeK6AP
Veq8eg5LLhdfNHVk6srG5fI+h9SpD7z/obhcnkurOjjPmcnl8j6K1NkPvL+i
uFzed5E6PnV943KHfrmZNzQul+cCMw/JvEQut54vhMvNvEcut55fhMvNvEou
N/Mwudyat8Hl1vOXcrmZL16ObeZthy6Xm3mnXG7mqXK5d8x33zAflsvNvFku
1z6BmYdf8UWLy+W528zzM+9vXO4nx7+Hy70eeuNyeW44PkV8i8blxv+4HNvU
WYfeuFyeey6f5dAblxv/Bi73euiNyx365cY3alxunv+Gy40v1bjcPF8Olxvf
q3G5f3Xri8ZHK19NLjfPx8vl/v7WFy1f729vfdH4gPEFG5f797e+aHzG+I6N
y/2HW180PmZ8zcblDv1yJy63voeTXG7zURcut763k1xu810XLrf8z5NcbvNp
Fy63xsVZLldfd+FyM47OcrnNB1643PKrT3K5zTdeuNyM07NcbvOZFy63jeuF
yy1OXy7X8RY9PvBJLvfq+PH8crly2guXe8V/9vyNy/X7Wrjc5PXG5Zof4uPl
fg6Xm/uhXG77vaf+iw8Ml1t1B1xu7odyue33mDrSPlS5/oHLzf1QLrf9XnL9
8uqsf8vlPhhn178/Fpdr/oxuPkRvXK7jObqc+YfmcuWfvU65XPOG1w+XW34p
XK7+c/E9OR4u13Wr4nu8H8VXNG+E73E8Z55vn8Bc/8Dl6j/LJ8nltr6XuX7z
ea7fvC2fdJLLredc5XIdz9HNG9HNzzm/cc7xjufo8vwLl3vFf/b6G5drnLl+
udyWn71+uNzyS+Fyy0+Cy23jOb6ifS/jQ5qf41uan+NzOp7jk9rHFX5ULjf7
crltPMOPyuW2/Aw/KpfbxjPX+7Pncn1uIlvrSfTG5VpvoDcu1/yM3rhcx3N+
b/FL7Zc7cLnV70QuF/+5zh+/1365+M+N75fLtc92+H7r+ZzHuj3j23oj12Nd
F77f/Jy/y/ws33+Wy816lFyu4zl6fOCzXK5x9vxyuT6fAjcnl9vq56FfQenG
mfPL5bb8LPcEl1t+KVxufGy53Daec73HeeRyy++Fyy2/Ay63jeec3/cgJI9Y
P+dzrZ9T5zme8Tnkclt+5vkrudw2nj80lyvPz/2kcbnmZ58Lkcv1OSDi0bhc
62f0xuVaPw/9CtQbl+t4Tr0Vv1QuF/+5PR8rl8u6Vf2ezc85j3nD52Plclnv
rnmL9XPOY/3M+JbLbfVzno81P+fvGvrltvG8cbnwXqU7nqPbt476vXG5xpn6
qHG5lx+3jcu1fk5esH7m9924XONM/ORyW36WG5XLzb5cbngOuNw2nvGV5HJb
fmYeLpfbxjPzFrncVj9T58nltvHMfVEut+Vn8ohc7uhD6ycvXG7z6xYut/kb
C5fb5oMLl9vq54XLbfXGwuW2/LxwuY7fjct1/Gb9pvl1h64vunG5jt+sP7X5
YLhcfNGNy23j95Nj33rj0K3rNi7X8Xsd/Oe6/xnn9MvFF1375eJvVL9c45x+
ucy7q1+u4zm6/HPWa62fD926rvrlOp6zTkxdV+vN5uc/ud2Xy3U8b1xurZ/B
5VY/rrP9cnMd9sslb1S/XMdzuFx80Y3LzTq2XG6tl8Llmo/DT9zDPxdvQZzD
Zziea35inBcut/l14XLxRdd+ucbZ51rkcvFFi6ehft643FZvhOORfx785+Jy
yc8Pg/+8cbn6/NUvV78ux5M3isslb6z9ch3PzG/OcrnOU8KftXojxxvn+NW+
l5j30MnltvGc+bNxTr9cfNGabzue44Pgiz4y/2j9csnPa79cef7wjnJ1v77d
l8tt4/nXt/tyuebnK897y+U6njcu94ovWv1y8/fbL/dy/Hv75YYPtV8u/lz1
y5Xn3/rlkjce8ZPlcu95bqL65TLvrn655OfilYnz/eA/l79vnBcuV79u43L1
NzYut80Ho+OLOl+Ry7V+fsvxcrnWz284Xi7X/HzP8We5XH3+en4Av+4KN3uW
y9VHSp5t88Ecjy8aLtf62XmhXK71c3G5xjnHk58fOL9cbhvPuZ8Z56wL4ovW
/c/xHB1f9A3nb1wu8+57zy+Xiy/6A/6QXK71s/NvuVzr5zecXy7X/HzP+c9y
ufW8V+Kc41PPyuX63ESOp89JuFx9pOpL63jO8fii4XKtn4vLpX4Ol2v9rM8h
l9vyM/yjXG4bz+FjjPPC5erXFZcrzx/d/Jx1WePM8Y3LxRf9YfCf6/lP6ue3
g/+c76P1Mx/853C5LT8P/vPK5cqZyyfJ5TI/CZfb8nOONz+7/i2Xe/lxK5dr
/VxcrvXG4D8Xl2ucc7z5Gd9OLreN58wHjDOcaONyHc/4So3LNT/DzTQu1/HM
vKVxudz/Ms+0fi4u1/HMfbFxueZnfP/G5eo3L1xu62OwcLntPXoLl9v6Hmxc
ru/dW7jc1idh4XLbe/oWLrf1VfjAXG7rw7BwuRlfZ7nc1rdh43JdP1243Nbn
YeFyHxyvC5fb3j+ojyeX63qgHK9cruNNDlYu13zs+c9yuX6/cL+Ny9Wvgytu
XK7xh1tuXG6Og8tt+QHuVC639YWAa5XLbb9fuFm53NYXYuFy2+8L7lcut/WF
yPX7fthcv+M/12/f/Vy/74fVx5PLNa96vFwu/Tc+eL/cict1PKM3Ltf8A1fc
uFx4jfftl9vGM9ypXG67f8G1yuXaF0JuVi639YVYuNw2nuF+5XJb/ocrlstt
7++GW5bLbe/v1seTyzVv4BM2Ltc4y8HK5epnbP1yJy7X8Qz327hc8zNcceNy
Hc9wy43LzXXA5bbxDHcql9vyMz6kXG4bz3CzcrmtL8TC5bbxDPcrl9vyM1yx
XG4bz3DLcrn2hWgcqVyu+dnj5XKtYz2PXK51qec/y+Xyvak3Lpdxod64XMad
euNyMy7gctt4hjuVy235Ga5VLrfVG3Czcrmt/l+43PYeXtZV5HLtCyFXLJdr
Xwi5Zblc+0I0jhQut+Vn+0fK5RpnfUi43FY/e/6zXK7jGe63cblTv1zep+n5
5XLv6L/ROGe43DaeyftyuS0/4xPI5bbxDDcrl9vq54XLbeOZ+65crn0h5Irl
ctt4hluWy7UvRONI5XLNzx4vl2v9rA8pl2v9jH6ay3U8ex+TyzU/U180Lpd5
m3rjcjOvgstt4xnuVC635We4VrncVm/Azcrltvp54XLbeIb7lctt+RmuWC63
vScdLkku174QjSOFy235mfM1Ltc460PC5bb6mfvJaS7X8RzdODOfaFwu76OX
Q5bLDe/WuNz4c/80+E3wiy0/63/Be7X6WY4QPqbVz/qDJ7ncNp6577ou2PIz
edB1lDaeGZej73yyX27Lz0u/3FY/L/1yW/289cv1e1j65TZ/Y+mX28bR0i+3
jdOlX27LG0u/3EfzxqFbP1/hb8/2y611M7lcfPIr/K1c7tQvN76HXG7jReFv
5XKnfrmPxpn+PnK55uetX671c/XLdTynP9HA5ba6Llwu/nP1y3U8H7r+xtYv
V/+5+uU6nrM+jf+89cttz0lknc/30afvlZz50i+31pPhcrNuLJdbXINcLv7z
IzytXK5+XbjcjHO53KlfbvHDcLkPjOfwGY/Gmf5rcrntPpA63vyc46mft365
1s9rv1z55/TLZTyHyzU/V79c83OOJ29s/XKd5239ctt4pv+gXG7Lz+GW5EWH
5zK3frnFncnlyj+Hp3U8p88j+Tl8Q8vP4R7wn6vvpPPjpV/uo3F2fg6Xa35+
oP+mXK71c/XLdTwnH1M/r/1y5Z+P+riN53C25o34RObn8Lr4z9Uv1/E8+M9b
v1zHc7jc9r7j9I0lP1e/XPyN6kubfAiX+0C9UX1vvQ8u/XLv5L4ybxm43OK2
4HLtsx0uN/ydXO4D4zlc7qNx/tPb4+Ryzc/hcs3PV46Xy7XeeOB4udxWP+d4
/Odsp365+hvhcsd+ufjP4XKnfrn6z+Fyp365bTzbvztxDl9Ffs7vv72/m/PL
5Vo/F79l/ZzzyD8PfU22frmVV+Ry8Z/fcH653Klf7tU4u74ll2uc+V01Ltc4
hyN0POf81M/hclv9nPPLP+f37Hge/Odsx365+M/hctt4HvzncLlTv9w2npPv
zM/hZs3PPIcgl2v9HC7X+rn4Wuvn7Ms/s77XuFzjbN0jlzv0yy1+WC43zy0l
ztGNM+//aFyu+Tn3Y/Nzjqd+zn3deqP65VI/h8tt9XOOl3/me2r9cs3PuT7z
8+A/17wQHynjQ/85XO7UL7eNZ5/jSpzzfIL5OfUEdV24XOvn1LXWz/X8g/Vz
ziP/7PozXG7Lz/jSjcvFfw6Xqy9a8++hX+6dcZYPg8tt+dnnzOVyjTPP4TQu
l/r5Hp+ocbmX2/+fuqSN58F/fkvdKZer/5zfbRvPg/8s93yWy20+3sLlNh91
4XLb+tfC5TbfdeFym0+4cLnNp1243MY/bFyuvu7C5TYfcuFymw+8cLmNf1u4
3OYbL1xu8zkXLrf5zAuX28btwuW2cejxcrmOq4XLbePE88vl+r0vXG77Hr0e
uVy/l4XLbXH2+uFyW5zR5XJbnNHlcluc0eVyW5zR5XJbnNHlcluc0eVyW5zR
5XJbnD80l2ucP3S/XOP8oblc4/yB++W2OKPL5bY4o8vltjijy+W2OKPL5bY4
o8vltjijy+W2OA/9Ctr1n+RyW5w9Xi7XOHuel0/rp/vlGueFy21x9nrkco2z
1/nt03rjco3zPTpcbouzx3/2tC6X2+KMLpf7/7N3h8lyHFeSqDHonh621OqG
JKiHoqAWmASBCxAEsYS7FCylloKl3KVgCRRFUZRISu+H0o9ZfqeOZYB6Y/Oe
Wf8qS79xozJPRUZ4nPDwaHEGV5fb4gyuLrfFGVxdboszuLrcFucN/P/rulzj
7PeqyzXO3o+6XOPsfarLNc7eP7rcFmf1Jv9+HW9+ucZ50K2Iq8ttcQZXl9vi
PPgVtPtRl2ucvc+X13F1uS3OJ7rcFmfLq8s1zie63BZn61eXa5z9XnW5xnnw
KxBvulzjDN50ucZZ3RO63BbnQSclri63xRlcXW6LM7i63BZncHW5Lc7g6nJb
nMHV5bY4/7+tyzXO1qMu1zhbv7pc4+z3qss1zt6PulzjPPgViDddrnEedHni
6nJbnMHV5bY4g6vLbXEGV5fb4gyuLrfFGVxdbovz4FfQ7n9Rl9vibHl1ucbZ
evTLNc7Wry7XOPu96nKNs/ejLtc4e5/qco3zpBt9Da6u0ThbXt2Ycbaej67j
zU/NOIOry21xBleX2+IMri63xRm86XKN84lfbovziV9ui/OJX26L85lfrnE+
8cttcT7xy21xPvHLbXE+8cttcT7xy21xBl/V5Rrn6HJbnMFXdbnG+XKf+0GX
a5zPdLnG+TLkn2u90DiDr/rltjj/7Iiry21x/rcj3nS5xvmnR1xdbovzT454
0+Ua53894upyW5yH/POZLtc431p+0S/XOF/A1eW2OIOv6nKN8y24ulzjXOcN
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
oK7A/l//AnUFxL/pPP5BXYHxP9MVGP8zXYHxLzyf6gqIvzobdQXGX52NugLj
r86mnYPg+IvOaVlX4PiLf8GqrqCNv/gXtHMQHH/xL2i6gsGvoI2/+Bc0XYHj
rzpLdQWOv/gXNF0B8T/VFRB//QtWdQXGX/+Cdg4C8de/oOkKiLf+BU1XQPzV
WaorMP76F7RzEOQ/6FyXdQXyH9ff1RXIf26O101XIP+5OV43XcF+3XQF8p+b
43XTFch/HA/MF8l/bo7XTVdA/JvO+x/UFRh//QuaroD461/QzkEg/voXNF0B
8de/QF2B8de/oOkKiL86+3YOgvzTfT6rugL5J/4FTVcg/8S/oOkK5J/4FzRd
wX7ddAXyT/wLmq5A/ol/QdMVDH4FjX/iX9B0BcT/VFdA/PUvaLoC4q9/QdMV
EH/9C5quYL9uugLir39B0xUQf/0Lmq6AeOtf0HQF6Y8WdQW5XtUV5HpVV5Dr
VV1Brld1Bble1RXkelVXUNfqCvZrdQW5XtUV5LrpCvZrdQW5XtUV5FpdQa7V
Fdy9p64g1+oKcq2uINfqCnKtriDX6gpyra4g1+oKcq2uINfqCnKtriDX6gpy
ra4g1+oKct10BblWV5BrdQWJC7qCXK/qCi6TriBxQVeQ66YrSFzQFeS66Qqy
7q5fQa71K9iv1RXkWl1Brld1BblWV5BrdQW5brqC/VpdQa6bX0H2zaMryPWq
riDX6gpyra4g101XkHV6dAW5VleQa3UFuVZXkGt1BblWV5BrdQW5VleQa3UF
uVZXkOumK8i1uoJcqyvItbqCXKsryLW6glyrK9ivm19BrvUryDV5mLrWryDX
+hXkmjxMrptfQa7JP9S1fgW51q8g1+Qfct38CnKtX0Gu9SvINfPrXDe/glzr
V5Br5om5bn4FuWZek+vmVyCPPvMrGM5BKP636FdQ/G/Rr6D436JfQfG/Rb+C
4n/oCia/guJ/i34FxfdW/Qp+tn+unoOQfUCLfgXFF/UrcB0j+Hv6FRRfRFeQ
8UJdwV3+H13B5FdQfBFdQcYLdQV3zuNP/Aou/7rji+cg1D6FRb+C8MzmV5C4
oysIj131KwjPbH4F5BHlsat+BcUz9StgHimPXfYrSHtbPQch8VFXkH1q6gqi
s1VXkP3v6grUcZz4FRSv1a/APJb+XOgKLuZR9CXQr8A8rn5hi34Ft8T/9BwE
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
wg/H+Lf6t6F+dQXw/1a/ugL4T6tfXQH9f6tfXYH8M+P5vxz/3vbXoyu499Ux
/oUT/1aP5yDkez0H4atj/Fv921C/PjipH11B1a+uQP5p/eoMUr95zq+O8W/1
qysI7jkI5Pkarq6A+Lfy6gro/1t5dQXEv5VXVwD/b+XVFRD/Vl5dAf1/K6+u
IP07uoLk89UVJM+sriD7ktQVJM+sruB223F0BckzqyvIvip1Bckzqyu4hO+i
K0ieWV1B9oWpK0ieWV1B2nPzK0ieWV1B4omuoPiX5yBs+ye6guSNm65gL6+u
IPv31RUkD6yuIHnjpisIf9WvYM8DqCvIeNf8Cva8cdMVpJ/VryDri+gKko9t
uoLgv7teXl1B1unVFSQf23QFwZ8N5dEVhCc0v4I9H9t0BeG7+hUkf6uuIL8f
uoLKI6kr2Pa/61fwK/6PfGnzK9j7+aYrCI/UryDnjKsr2OfRza9gj1vTFWQ+
hq4g+TF1BclbqivIe6iuIHlFdQXJXzW/gj2vqK6g9hejK6j60RVU/foV7PU3
XcH+XOoKLju/VVeQeDa/gv0+m64g76N+Bft9qiuo+vUrSP3qCjKuqyvY77/5
Fez5q6YrSD36FaS8uoKU168g5dUVpLx+BcmnqSvIfEFdQfIV6grCV9UVJL+k
riD5JXUFmXeoK0j+iDxM+nl1BcnDNL+C5JWGPIy6gvTzza9gz8M0XUHGF/MP
0TGaf7i/X5t/2PMSTVeQftX5dXRbw/y66QpSzzC/brqC/XdpfgX7+Nh0BZnv
Oa/Zn6v5FezzmqYrMK+r7vEf1BXoA3amK9AH7ExXoA/Yma5AH7AzXYE+YGe6
An3ATnUF+kOE772nrkAfPPWZq7qCu22/RlegD5760lVdgT54hXues74Kq7oC
fPAKxwev8HyiK9AH8lRXkO9DV6AP5JmuQB/Idn4BugJ9IM90BfpAtvMX0BXo
A3mqK8AHsp0rga5AH8jm27+qK2C/WNMbqCtgv0bzAVBXkN8dXYE+qKe6gjyv
uoKsU5uXxAe1+TOoK8AHtZ0roa4APt58+/9BXYE+wO18AXQF+gC38wvQFegD
fKYr0Af4VFeAD3A73wFdgT7A7VwJdAXNB1jf/kVdgT7Y7bwAdQW0/3YeAboC
fbCbb8B2xEddAT7Y7fwFdQX4YLfzHfQrwAe7nSuBrkAf7Obbv6oroP9p5wWo
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
ma7A+Df85YCrKyD+Z34Frf850RW0/kdcXYH9j/ijAV/0K2j9j/jTAb8ZcHUF
9j/irwb89YDrV0D8T3UFxL/h6gqIf8PVFRD/M78C499wdQXEv+HqCoh/w9UV
EP9TvwL7/zNdgf2/uLoC+39xdQX2/+LbgKsrsP8XV1dg/y+ursD+X/z1gOtX
QPx/rK7A+J/pCoz/ma7A+Dd80a/A+J/5FRj/M78C43/qV+D4e6IraOOv+KKu
oI2/4voVOP6KPxlw5/WOvyd+BW38FXde7/h75ldA/E91BcS/4Yu6AuPfcP0K
iH/D9Ssg/g2/GXB1BcS/4eoKiP+pX4H850xXIP8RV1cg/xFXVyD/Ed8GXF2B
/EdcXYH8R9x8kfxH/PWA61dA/H+srsD4N1y/AuLfcP0KiH/D9Ssg/g2/GXB1
BcT/zK/A+J/6Fcg/T3QFjX+KqyuQf4p7DoL8U3wb8CcDrq5A/imurkD+KW6e
U/555ldA/E91BcS/4eoKiH/D1RUQ/4ZvA65fAfFv+M2Aqysg/g1XV0D8xVd1
BTV+L+oKCl/UFRQ/W9QVFL6oKyh8UVdQ+KKuoOKMrqDi+csBX9QVFP6767i6
gsIXdQWFPxvw5wO+qCso/IvruLqCwvUrCP6bAV/0Kyhcv4Lgnw74ol9B4foV
BP98wBf9CgrXryC4uoK0H/0Kgi/qCgpXVxB80a+gcP0KgqsrSPtRVxB80a+g
cP0Kgi/qCgp/PuCLfgWFL/oVVDv/eMAXdQWFPxvw5wOuriD4ol9BjUPoCgrX
ryD4pwOuX0Hw5wOuX0Hwzwd81a8guLqC4OoKgqsrCK6uILi6guDqCjJODXmY
Vb+Cwhf9Cgof8jBNVxB8yD80XUHwRb+C6leH+XXzKwg+zK9X/QoKH+aJTVeQ
fmCY16z6FVR7+Cvr18nn/sC6aub5/3J7Fb/3PeuAwffyDf/3Af+O9ax87/+8
vY7/7Dp+94vr+L2/sF4TfK+/4T+7jl9+MeD/eR2/92fWKVL+n2+v4/92Hb/9
xYD/54B/dB2/9y15++D7/TT83wb8FwP+nwP+0YD/14D/ifx24vNPt9fxn17H
734+4L8a8F8P+G+v4+/Me+f+vyE/HHy//4b/9Dp++fmA/2rAfz3gv72O35k3
Dr4N9/lH8q6p//7tdfwn1/Hbnw/4rwb81wP+2+v4W/OxwbcBNx+b5/2aPGfw
/Xkb/pMB//mA/2rAfz3gv72OX8x/Bt8G3PxncPOf+d4/kG9M+f9xex3/1+v4
3YMBNw8Z3DxkcPOQyYeahwy+Dbh5yODmIYObh0x8viIfGHyPT8P/9Tp+eTDg
5gmDmycMbp4w74t5wuDbgJsnDG6eMLh5wuDmCROH35PHy/2b9wtufi/1m98L
bn4vuPm94Ob3kmc0vxd8G3Dze8HN7wU3vxfc/F5w83uJ5yqvy7W8budDy7zu
64HXhWfI6757T16X/5fX5ftWeV2eS153f7+W1+15usbroleQ1/154HX7+y+v
q2t4Xb3/8Lq6htfl/V/mdSknr4vOQ16X/5fXRechr0u98rr9uRqv+9N78ro/
vSevS/lVXpf7k9clLqu8br9uvO77gdelHa/yur3+xuu+v87r0r4br8vzyev+
OPC63Ce8LteN1+332XjdHwde95frvK6+D16XvLm8rq7hdcl/LfO69IPyurwX
8rr9uvG6vF/yuvSn8rr9PWq8LvVu4LmG1yVv23hd8lDyuj+8J6/7w8Dr0g7h
dbluvC74o+vlG6/b893yurqW1wV/OpSH11W+e5XX7deN16Wdyevy/srrooeA
1+W68bq9Pcjr0l80XpdreF1dw+vSzuR1tS9MXpd4y+t+P/C6r67zulw3Xpf4
wutyLa+r+MLr6hpel/jK6+oaXpf4yuvqGl6X+Mrr6hpel/g2XpdPeV30N/C6
vM+N1+VTXpfxTl6X/k1el3YLr6t9VfK6vO/wulpvhtfJ4xofg9dlHG28LvGQ
14UfyuuiN4LXhU+0fF3aG7wufKXl69LO5XXhD/I6eVmuo3+V1+V75HXR0crr
PuIzeHimvC7/L6/bjs8RPJ+N1+2f8rp8Nl4X/NdDeXld/g6vK10CvE6e1fgS
vK7W1eB1Nf7C6+rv8rq9fnld6m/5un19t/G6tB95XXjA/dsDnnXNlq/b65XX
RW/ReF3GD3hd6m/5ur1+eV1+v5avi74TXpd+R15XfOc+11lvg9fVera8br8P
eV14VeN1qQdeV+1hOF+p8brch/m68EN5XfpxeV14Dbyu+I68LvwLXpf1v5av
2+9bXhd+1fJ1Oy6vy/vZ8nX5Pnhd3Yf5uuDwuvQv8jp5XOMz8LroWuR15XsA
rwu/avm6/TnlddHlNF6XdfENPPWar8t9yOv2fq/l6/ZxvvG68Ad5XXiT/j9Z
7zdfl3rhddFdtXxd7lufn/Qn5uu2/Vqfnz1uLV+X/9fnZ+9XW74u96fPzx63
lq/L8+vzE56zyOvqU14XfrbK6/Ipr8snvK542SKvq89fXMdXeV3h8rp8/mLA
//M6Lq8rngWva/k5cHldy8+Jf3QdX+Z15tXE5XXyMnF5nTxRHF5X/G2R1xXP
WuR1hS/yuvp8fB1f5XWF//Q6Lq8rfJHXNT8McHldfW7DfcLr3g68ruXPwOV1
hf9qwH894L+9jsvrWn5O/Ml1fJXXFS6vk0+Jy+v0+RCX1+VTf8t8bgNuvg5e
2b4XXvfmPXndm4HXNT4lLq8L/ug6Lq9r+TbxJwNuvi6fN9fxVV6n36G4vK5w
eZ38S/zRdVxeV5/bgJuvy+fTAb8Z8BfXcXnd44HXmZ8Tl9eZn2v4hwP+6Dou
r2v5OfEnA26+Lp83A26+Lp8vr+ON1+V6VV+3v+eN1+VaXhfeIK/b+8FVfV2u
W74u+1pdh83+Btdh/zKsw076uuTDzddlvcx8Xepf1ddlnXFVX7eXX9bX7eUb
r8u1vC7rQfK6lJPXZb1VXpf/l9dlvVVel3oX9XW5bvm6tAd4Xa5bvi75Xnhd
rlu+LvvMzdelXbsO+82wDjvp69IuXYfNvApeV/lk83XJe8PrysfMfN1+/y1f
l/tf1ddFR7Gor8t8s+XrMp7B6/J+t3xd9kubr8v3bdfvp+nr9vtv67DRk+zP
W3jeI9dh0x+u6uuS/zFfl/fCddjsOzJft79fLV+X5zFft99/y9fl/hf1dblu
+bq8j/C6vLer+rrU3/J12VcMr0v9q/q6eh7zdanfddi9/rYO+9WwDjvp6+JT
6zpsxl3XYbMuuaqvy/ulvm6vv63D5nlW9XWp33xd6jdfl/is6uviI72qr9vL
L+vrUn5VXxc/5m0or74u5Vf1dSm/qq8Lz1nldYO+LtfLvC7X8rpcL+rrJl5X
1+br0h+u8rpJX5dr83W5Nl+X51jU1+V6VV9X14v6ulwv87pcy+tyLa/Ltbwu
1/K6XMvr4KFn+rqJ19V4scjrcr3K6+rafF3Wr1d53aSv26/bOmz4wSKvy3Xj
dbk2X5frDXy/XtXX5XpVX5dreV2u5XW5ltfVtfm6XG/guTZfl99hldft143X
Zd66qq/brxuvy3ku8rpcm68b1mHr2nxdrs3X5Xde1NdNvC7X8rpcr+rrct30
dbk2Xzesw076uro2X5dr83X5HVZ53aSv26/bOmz4Obzu8p76uro2X5frDTzX
i/q6ujZfl2vzde+pr8v1qr4u16v6ulyv6uvqegPPtfm6XC/q6+p6UV+X68br
5HEn+roaj+R1GcflddFTyesyvi/q6zIetXxdfOLM18V/RF6317Oqr4vuqOXr
Bl5X/fmivi7+Jqv6uujAV/V19TvL67b9U14XXF4XXF4XXF4XXF4XXF4XfFFf
F9+Wlq8jT1Pl409hvi7jg7wu/hTm66KzMF+361jkdaWzWtTX1fhqvi56G3ld
9Cfm6zKuyuui4zBfF7+PDTzv86K+7g4ed6avi89Oy9elfzVfF9x83f68LV+3
P9eqvi6/R+N18ae4f3vEh3XY0t0t6uvKz0Jel35bXhddlvm6xH8DT39lvi78
wXxd3v9FfV18KFq+Lu1NXpf3a1FfV/MM83XhXfC6/O6r+rq8Py1fl+8zXxe/
IXjdBR53pq+r84nM1+W9lte9p74u/kQtXxdd2QaeedOivi7+Si1f5zk8we/v
n4v6ujp3bFFfF73iqr6u+p9FfV36+VV9XXzKVvV10Suu6uuK5yzyuklfV+to
q7wu8015XfT2i/q6ideVj5X7JsjPnfG6SV9XOmTzdbkfvy/1L+rrqv5FfV35
Wi7q62ofxCqvCz+R12Wcl9eFt8jrMk7K6zLeyesynizq6yZe9+49ed279+R1
7yZel357kddN+rrEQV6X/nGV19U4C68r3yd4XemstyNe97+or6v7X9TXXdI/
q68beF35OP32evm2H3aPz6q+rtrhIq8r/z55XdrDor6u/MjU1wWX18UXy3xd
xoeN8pkXmK8LLq8jP3emr5t43ZuB18XnblVfV/5l6uv2+uV1qX9VX5f6W74u
9cPrUv8qr5v0dfU7wuuKz8jr3lNfV++L5yzHp2+7Xv+qvq7qdz9s6ofXVXwW
9XUVn0V9Xd3Por6uyi/q68rncBvKuw6b8ov6uiq/qK+b/OvSr8rr6v2V16W8
vC7jNbyuxgV5XcYZeJ370kpPs/MNeV3667YOm/rdNxHeAq+r8vK6vX55Xd2P
67CpH15X/EReFxxel/KN1wX/z6G8vG7HG68L35PX5f/kdeHh8rrESV73IX93
fVZel3wpvM59vRXHrDvA6xIXeV36TXld4t58TqLnMV+3/67N52RvN20dNvMa
eF21L3ld8tXm6+Kro8/J/R03X5f2La+b/OtyrvUGnvuH19X8af9+dW7yunqP
9TnZ+4WWr9v7hWX/ur1886/L/W3X76fxurRDeV3a/V5fW1eV1z04/l1dXON1
eT/N12X9V143+ddF97uBT/m63J+8LvcPr9MXofJaaW/m6/Zxpfmc5D2B19V5
4PqcZDwwX7fX33xO9vrldTW+wetSf8vXpX54XekrXIfN+Ge+LnmUVf+66OjU
12U8Nl+X8XzVvy73vV2vv+XroqOT103+danffF3iY74uOrpV/7ro4lb961J+
1b8uOrdV/7qUl9dN/nUpL6+b/OtSXl43+NdNvC75f3ldfMZXed09+u/Cw/dc
h808cpHXhR/K62odf5HX1Tzd/bDpB12HzTxXXhffcNdhU4/7YYO7Dpv3RH1d
cNdhM59SX5f3aZXXTT4nweV1weV1weV1weV1wV2Hzbi1yOvqXLdFXlfnxq3y
upwXCK9Lf7rK6+p55XU5b0Nel/a3yuuyviavG/zr8ju1fF3aj+uwif/+/TUf
y/vgOmzGFfN1GbfkdTkXatG/rs6fM1+Xc+Y2yu/PJa/L+QrLvC48UF6X90Fe
l99dXpf3UF6XfUnyuv39bLwuv8sGPuTral1VXpc4uA6bdrXK63K+o7wu75fr
sGmX7ptI+5TXpZz7JoJvlA8/g9flfI7G61LOfF3em1VeF5686l8X3bW8Lrod
eV3awaJ/Xa2Tbkc8eZjG6zLuwOvSzhqvSz3m68If5HXR0S3619V5b4v+dXXe
26J/XZ03tuhfl3Yir0t8G68Ln4PXJb6N14XPweuK58DrbvN/5uvyHPC6N/nd
4HXJ/7d8XcrD64pPmq/L98Lr3qZdmK9LHh1e9zb9E7wu+pyWr8t9wuuyviav
uwv/hNdFX9TydXkueN27PJf5urwP8Lp3A6/L+qO87l36H3ld1hHkdXnv5HXp
5+V1WYeS14Xny+vC5+V14dvwupzrI6/LOUDyupwbJK97PKzD5lwieV3OMZLX
5dwjeV3OSZLX1XoNvK7mR/rXRTflOuygr6tzoeB1dY4UvG7yr8s5VY3X5XeC
1+UcrMv92yOe3wVel3O25HU5l0tel3O8Vv3rck6YvC7nirV83f5c8rqcW9Z8
TvI77s9beH5HeF3N71yHzfuiz0neF9dh39O/Lr5kjdflvD15XXiCvC5+jPC6
OvcOXlfn5MHrcq6evC7n8Mnrcm6fvC7n/Mnrci6gvC7nCMrrcu5g43V7HOR1
Odew8brkJ+B1dW4ivK7OWVz0r4tuRF4XPZi8rnQpi/51OYey8bro5eB10RM2
Xjf415UO3Hxd9GDwupzTKa+b/OtyDuiqf13OGV31r4uv5qp/Xc5JlddN/nXx
O5XXTf51OedVXndx/+sJr6t1bXhd3utVXlc8QV6Xfs98Xb53kdeFx8rriucu
8rpap4bX1TmI6usSV3ld6jdfl+eC1xVvMV+Xdf9fXC/f8nUp/9H18su8Lvcv
r8vvKK/L+yqvy+8rrwufl9dlvDNfl7gt8rpqD4u8LvOmVV6XeVnjdRkPF3ld
tTf969LO3Q876OsmXld5b3hd2//KOC+vq/s3X5ff5f7tAa95mfm6tE94Xfqp
lq/LOLHoX5fy8rr87i1fl/Mf3Q+b9r/I6+o9ktelHvN1+d3ldWn/5uuCy+vc
/2r+baNc+hl5XXB4Xd2/+br87ou8rt5HeF3Nv8zXRf8pr4ve1XxddHHwutTf
8nU5fxNel/pbvi71w+tS/yqvq9990b+udHTyuvxe5uvyuyz615WObrtef8vX
5f2F17X9r9YPr6v4mK/L/S/619X9LPrXVflF/7rSuS3611V598Pm03xdyrsf
Np/m61L+5fXyjdfld1vU11V7l9elnzBfF1xeF3xRX1e4+brMs83XsW7TdHSL
+roa98zXBZfXpZ5FfZ06rzN9nTqyM31d8ZH/n/oST/q6wtXXcS5Hw3814L8e
8N9ex+V1xa/dN4EP4pm+ruYN8jrOP2m4Pifs7xFvvG5ah819Lurr7oZ12Elf
V/ivBnzRv67ee/fDosM909fVfNF12MxT9+dtuOuwnKtzqq9jn1nDXYed/OuC
bwMurwtuvi7fu6ivK1yfk+jl9K8LvqivK/zRdbytwwbfBtz9sMGfDrj7YTOe
uQ6b/Mmqvm7yrwvuOmzwVX3d5F8XfBvwVX3d5F8X3Hxd4rCqr5v86yZ93eRf
N+nrJv+6SV83+ddN+rrJv27S103+dZO+bvCvm3jdpK97O+jrJl5X8015XfBF
fd3E6yrfYr4uz7XI6yZ9XeVDzNfl/ZbX5XsX9XXJC63q65J/WNXXJa+1zOu2
/VNel3VSeV3iKa/L+pG8LnxbXpd1qEV93cTrSp+zyOuq/CKvS/mWr8tzLfK6
SV9X+6zV1wVf5HUVN3ldruV1yeNtR7zWixf1deFhq/q69KctX5dxa9G/LvW3
fF3WZzfKD/q6rAss87q0e3lddJWr+rqse8rr2GdfeK7lddt+vR3xy6Svyzqg
+brEYVFfN/G60q+6Hzb99aK+LuunLV8XPme+bliHnfR1Wf9t+bqUN1+X8WuV
1036usG/rtqN+2HfU183+del3bR83Xvq6+rafF2uzde9p74u16v6usm/btLX
Tf51k75u8q+b9HV1vaivq+tFfV3xHH1Okh9e1NcVb3HfROoxX5e8q/smgi/q
6ypPa74u69L6nAz7Juo+F/V1l2Ed9nbgdcUPF/V1aeer+rq7gddN+rq8p43X
JQ7yuvwu8rq0L3ld3lN5Hfrctj4rr8vvtaivq/agvi7+CT+/Xr7p61LefRMp
r75uL9/2w6afd99E4ryor6v1fc8RC+6+icRBfV3albwu74u+xMM6bPGQRX1d
3eeivi732fR1WQ9a9K9L/fK6jDer+rrEq/G6/I7787b1Snldft9FfV29X+rr
8h7J6wb/uuj0Wr4u5eR1qdd8Xd7bRX1dtUP1dXm/zNelHS7q62r+rr4ufMx8
XdrFdsQnfV3xQ/V1Ke9+2LQTeV3ayaK+bvKvq/fXfF1+50V93eRfF/1ty9el
3KK+bvKvc5xs/HZRXzf51036usm/btLXTf51k75u8q+b9HWTf92kr5v86yZ9
3ehfN/C6SV9X5Rd5XeHyuuCL+rqJ19X4qy9x6l/kdZO+rr7X/bDB5XWpZ1Ff
V/iivq7wRX1d3c8qrwsurwsurwsurwsurwsurwu+qK+beF21h0VeV/girwve
eF3uf5HXTfq6ei7zdcEXeV3hv72Ot/2wwbfhPhf1dYUv6usKN18XfNG/rvRy
+pwE3wb8yXV8ldcVLq8LvqivK9x8XXB5XeJsvi74NuDyuuDyunzvor5u4nXV
rh4M+KK+rnDzddHL6XMSfBtweV1w83XB5XWJzyKvm/R1k39d4fK64Iv6unpf
XIcNvg34or6ucNdhg8vrEodFfV3hi/q6whf1dYUv6usK3wbcddjgi/q6whf1
dRXPv8Hr4n/yN3jdl8dyDf8bvI7y4hd5HfV4PmzqaefG/vt1vM63FP8bvM7n
Aq/1BMv/8jrefJD5Xs9vrfVvz4399+t4vlf8Tl735fE5Wz35vT4Gz+8FXr+X
5X95Hb+T13E/4rfyOu6z+BL3KZ77bOV/eR3PfbZ6PrqON53il8c4Njzt+Ql4
2jN4tWfL//I63vwZuX/xytta/8fX8TxPK/83eB3PJV66Dcv/8jredLE8V/Ov
+6/reJ5LPM/VvldeZ79xA55+A7z6DcurU7HfsJ6PruOlO7D+j6/jpdv1e+V1
Xx5/11b/3+B1xEG86bCJg3ji0Or56DqeOLT6P76OJw7te+V1xKHdj7zOfv4l
uDon+3nL//I6Xv289Xx0HW/+VsRHvHQnfq+8jvi0+5HXfXlsN+1+ohd7Bb7H
TTxxa+V/eR1v+yeJm3jplqz/4+t4rd/4vfI64tbuR15H3Np9yuscxzPOO46D
1zgOXuO49Xx0Ha9x3Po/vo7XeOn3PrmOV7/s/dxcx+v99D5fXsebTtG4yZN/
eR2vuIFX3MDbeWDGDbzi5vc+uY5X3Lyfm+t4xc37VF9i3Ib4OF+o8Q68xjvw
Gu+cd3x8Ha/xzu99ch2v8c77ubmON1018RGvPPsQhzY/+ug6Xu3EedPH1/Fq
J+DVTsCrnXg/6s9sJ97ny+t4tZPheZ2vFV91Hvfxdbz4KnitQ4O3fRQ8r3ie
t93ny+t4rccMz9XmiR9fx6s9O99U32l7dj57cx3XP661Z/Bqz8P9O99s+47k
FeDFK5zP3lzHi1eA13okeOmuhvts89kn1/F6X5zn3lzH631x/vvyOl7vy3A/
zjdzP20+e3Mdz/20ee7L63itXw7f2+ahN9fxeo+cn768jtd7NNTvfK3W750n
vryOp/6pnjb/enkdr/diKO98IeUnfOLJ7ktp+bofjuUKzzqr+bo/UG/wb6g3
+J+P31v923fHek7zdd8d76PwrOObr/sjz4Wu3Xxd1v9avi7rZOTrkv9t+bo/
H7+3cNa5q1/POqj5Ov2XMz/zPlI++m3zdX/i9wr+V36vjCf3j/dT5f/leD9V
Pnpg83U/4/7S3/N7Vf/AfZ7m6/50bA+n+bo/HdvHab7uT8c4Fs7v7r7olq8j
zjUO7+s3LV/39fH+C/8j/Cd41oHM19EOCicuNe/cjv9X/RvvUeHuswqP+Mnx
uar8t8fnsv6Wr7t/fK5Wv/m6D4/PVfsjeM6qJ/uDzNfRLxVuvxF+tK8bTfvK
zNeln2n5uqzbka9r7ye6OPN1WY9svjbZV0K+Lvu5Wr6Ofv40X/eH4/vY9lOQ
r8u6bMvXZT3yv66Xb/m6fV3NfJ1xqPI7br4u5Vu+jvfJ/YctX8c42PIH5usY
X4qH2s+HRzgeOJ8wX6ePQnjNfm2+znYivzNfF99F83WPyacUP/39MW6F05/o
e9LydYPf2S3tqspnHxb5uqzLtnyd++Wyf2G/Nl93IW76nrR8XfSi5OseG8fU
b54l7en3jOPBfzi2t8L/AA8L/h38Kfgf4TfB/3wcXwpXXwXexqc/M97wvS1f
9x39FM/V3rcfaH9T3BJX9YXBvyFuZ/m6vZ9v+brUb77ur8TtLF/3V+JG/S1f
t9/Pcr7uG+I2xKfi9+djfAqnXdX4SXwKRxdY+P2/f7Z8He1KHwfzdeEPjq/p
Z1q+jnble2a+LvW0fN0+DrZ83d7/t3ydOsjge/yX83Vf006Cf8v7Rf0tX6d+
iPtv+Tp9hTJuMb4XzvhV7WjnRS1fx+9e+ODnYn9S9fNeFO/Wd4z7NF/nc9Xv
nHmZ+bqfHZ/rNF9new5+//bwXIXrVxLc/Zl5L3mu6f6Ldzw43n+1X34Xxw3z
db6P9gfm6/xdbEfm627hh5572PJ1zk+CZ/+4+Tr5a3B1cvhDtXwdetniHdvx
fmp+sx3vp/hvPl9cx+Vzqcd8nd9b7fGT4/fW+/fJ8Xsrrnyv5c3XWX/xKXhm
8XfqN07m6x7D++v3dJ9J3qdPj/VU+WfH8sXj4HMTXt8jj8m8k/xbjTvhw+Tr
LveoJ/OMXxzL17gd3TD5ujvyM9V/Zv5Fvs7xvpUnX5d9F+brosNu+bromMnX
3VF/8x1j/nTJPgTzdeH/5OviZ970dXyv/WHT131wvI/q3+4f76fmH9nnSL7u
Qr9Y42Tu33zdb473U/139N/k68qfnHxd9jO0fF0+ydfJz1r5X14v3/J1qeej
6+Vbvi6f5Ou8/8oDJf9jvi79D/m69DPm627hHzUv1H8u19x/W58hX5ffxXzd
5f7xuWq8Yj6gr0jT1/FclTeL/7PjIfyj6me8b/WTr7tlP0yVD382X8f7W/Pp
+PCQr6t9iOTr3sCPqz/neWv8ST3k62553rZuZr7uN8e/Vz3pN9TX7f2Y+Tr7
z+IdzOsqr6Xfm+XJ172hPZs3M19X46/6uh03X3c35OvkY+b9mr4ueR7ydY5f
xQuIT42/2b9Mvs75j/tbzdfV+6W+bsfN19lO6n6GfF3Go6avY1+T85WWr/v5
8fkKhz8UP2X+X3yKdlXliVvltbKfWn0d/UnVT9yq/LZ/kq97POTrMr6br3Pf
V5WnXVX5nUc1fd3eX7V8Xfib+TrX3YJ/NeTrvoeHBf/6yJ8K/wv8Jvg3R55R
+LdDvu7b43hpPS1f95djv+x9tnzd90O+7qshX2fcElfjFnwfL1q+Tn4Z/Fvi
Zv3m63Ju6Xa9/pav28u3fN1XxI37afk61xt43pavIz4Vv33e3fJ1rOcWPuTr
6px09XX7/bR8nT4jwfdxrenryFMV/v0xPoVn3dl8Hf2X9bR83fe8X+TNWr6O
OBS+9w8tX+e6L3mzlq+b/HbJW3r/LV/3Le8X99/0dfQnhfNeFL7nb1u+jn3F
1e4Gf+QL+1erHsavwr89Pq/32fR1PFf9zvSThZPvqvdDfp/y+oDic93ydYwv
he/vRdPX6Ts23L96EudPF8ZH49H0ddy/70HT1/30eP/2r01f53iEP3vL1z04
3qc+7y1f5/uCr2jL17lfNDjjY90v42Ph9POFMz6KN75Ie56+t+LEuFw440vh
6efV19FvTPXX70D/XDj7kx0Pm76O+NTv+ZNjPYUzDhZOf1i/P/Gc8GoX8TdR
XwfPq3kn40/D1dfJY8Cbvg6+aF5uNV/n+Ndw8nXyJ/Gmr2Mcbf2n+Tp4bc2f
6D/EzdfZP4k3fR39X6tHfZ28ELzth5UfgLf9sI5D4G0/LPzevNlqvk6+cpav
c1w8y9fZvzecfJ18Wtx8nbxK3Hyd47e4+TrHIXHzdc6jKs825Ovkwa28+Tr4
U6vno+u4+TrHUfGmr2O8afWQr3OeI970dfBd8aavg1eJN30d/EDcfJ3jqHjL
1zEfNi+3mq+T34ubr5NHipuvkw+JN30dvEG86esYv9v3kq9zfituvs55jnjT
1+kPB26+Tl4o3vJ18Cdx83XyGHHzdeZNKg825Ouc97by5uuYL7V6PrqOm6+T
N4s3fR38Urzp6+B54k1fB5+b4lbjvOuv4C1f57qp9Zivcz3S+s3XuQ7n95qv
c33I+zFf57qC92m+znzxFDd5sjzXfSBn+Tr3V1i/vMx9BWf5OvXu3o/5OnXS
Z/k69a9DfJwvyN8bzwZv+jr4qLh8sO1bAG/6OsdvcMc3+3Hxpq9TZ+D8yHyd
+2qcN8nH3U9ylq9zn4P3Y75Ofbz3ab5O3fPwvM7XnN84rxCX1zd+DC7flIeJ
N30d47G444/P1eaJH1/HV/N18uM2n5VXwqvEm76O8XK6f+ebzp+ch4jL6+W7
4vLBxnvAm75OHYbzWfN17ttxnmu+zv0ezn/N16njH+7H+abzG3m/uLxY/icu
3/F72zxUfZ3r4s5P1dfBn6b6na/J3+Wp4vIy62nzL/V18LapvPMF+Z34xJNr
fP3rwFO+OpZruLzve+oN/s/8f/DsX5Mnfn2sRx7Uxr1/PdZb+PcD3/wLzxX8
2+Pzu0+2javs42v1y2e/OX5v4V8dv7fwr4/xFW/6uq+Oz9m+Vx79Lb8Xef6W
r4vuSL6gzt91B/N10c+br4s+U17Pfcpbm77up8f7lL80fV3WcYZx0n79wj6p
qof7r/6e371w4lx4dE3yLPZ5Vf/F/bu/1XHS36PKs67X7t/5E+9R4bRn9702
nsi+v+IdPJd409dF3+i4yjqs92m+zve3xmH6pcLtN1hnafyX96XwrGu7HxZf
8saj5Quss3v/TV/37fF3bffvPJh+3nle09f97Hi/1tP0dd8e+7HCs/6rvi7v
u/wI3UXhxKHwvZ9v+rroQNwPy/hV4yvjZuGMg20e7LyH8cX6m75u70/krfbv
lpev+V54P/Ig3wef13yd/KH4KeclFE5/UjjvV+GMj4VzPkHh3xzH6cLx8Rdv
+jr86P3epq/D99znavo6/K+nuFW/xT7iGv/ZR1zt13MdUp59xFWefcRVnvGx
fmd9/FN+v27rQrvuseXr7KdSP/uIq7ztL/Ub35RXF5X2HV0o+boL45e8teXr
GL+qn8g5kuTr1MHKg1q+zrjlfWI/Ud0n+4ns19t7vuuEzdeVrph83R37QSqu
tKsq7/5BypuvU0dd5fdr83XRaTd9Xf6ffN0bxokqr26Yca/p69RpJU6ej5L2
Fb2Q6/bRdZuvQ1cv/zVfdyvvCS+Lzl+eYTvJeO44Ed7KfrHqp/f3tOkdojtS
X5f+inyd+yaqfK7J1z3meas8/UnxUJ7X+s3X5f1q+jr3eaa93z8+V+Hsc3Fe
0vJ12/G5anxzXTZ8wfYcnsVzVXvkuYqPZ98Q+TrPfan2y/07r2r6uu14/5Zv
+jru3/JNX7cd/+4+L/N1+V3M1916jgj7zszX3Q37YS/yD/bBma+73D/eTz1H
9tmRr0u/0fR17COu8jn3inxdxve2Hzb8Vn3dT4/fW++l+8pT/lfH7632Qpyr
vf/PY/31+1C/733T13E+Sj0H+/3rfWK/f7XTXxzLV33oJ6tdfHDE63vY97q8
Hmu+zv9znXZYhzRf5/c0nriYr2v7bF2/mtaHh/XPad1vWgeTl/kcjc8O66vT
uuK0zjatR7X9sD63697Duu60njmt703rYNM6kvk649R4/WK+zvs8y9d5n2f5
Ou+7rc9MeoFhPXxaB57WRaf1w2n9bVrXmtaR5AX+Dm3+NKznT+vY07rutP45
rR9O63LTOti0HmW+zt+t6TgGncK0Pj+tV0/rutO66LTeOK3vTets0zqY+Tp/
5zYPXszXGQf5/rSOPa0DT+ur03rmtK44rftN63Xm62wX03pYm+8OuoxJpzCt
50/r4dM687SuO62vTuuf07rltA7pvN921PIlg35n0q1MOo5J7zDpBaZ1+Gnd
e1p/ntaHp3XdaZ12Wo81X9fyshNvk9/J2xzH4WXyiDaOy3fkGY6XjPP2u20d
hfHH96/l0+m3fD9b3pP2OO0vmfaRrObrWtzkg8O+h9V8XYsb4/OkE1/N17W4
+b4O+2mm/THTvpZp38m0/2PabzHtY5j2AUx6+Uk/PummJ13wtB9o2scz7bOZ
9rus5utaO4GXTfsDJr38pBOfdNDT/qRp/9C0j2faNzPtR5n2c0z7HqZ9AJP+
fdJ3T/ufpn1Iq/m61p7ly8O+jWkfw6Tfn/Tp036paX/StO9n2jcz7S+Z9ltM
+wwmHf20X2rahzTt45n2u0z7P6Z9D5Ouf9r/NO0fmvbZTPtOpv0W036CaX/S
tI9n2tcy7eeY9itM+4Gm/THTvpBp38O0n2baRzLtk5j2l7zv/onG5352xPWX
aPPR/0E96Z9/dSxf/Tz+bDVecA6C/gPyHsfv6lfxVSs8ugv45d1veK70k9xn
9VfDOHrvP/i+9IeJG/w156/Lz+4m/7rEwf2w+pCnPH4g9b34UFU/MPDC24EP
vRn4wWUYR98O49Dd1L8P+2GzviNPlW9VPwb/sF9yXL8wbk3rMdWPDfM277/6
pYFP38P3rPq9+PzDq24/O95/9d+Mr9VPfna8/6b7cD/sMF7Zfqrfe3Z8ruon
s44PD67fEV74GN5T44DreRmXGI+rHTAuls55yNflfWnjDe9vjQ88b41L7qvJ
OMnvWOP58+PzVj/vPoSMC/yOEw8oXjbk66rfUF+392ON39F/1ji234/zOucn
NU59sZeH37/Dn62eJ+0HHpn3Qn52B38qnfmQr9Pfpu6TdlbPu48vjXcwfhXf
Yd5b4zzxmeYzxV+YV9T4T3yK9xGf5tvhftghX3c3+dexviwvbvm6vXzjO/CH
4mVpJ8z/E8+Wr0s7ZB6Y97TNl9B1FG9i/lC/B/qB4lVDvi7je8vX7Xyj6evw
56n73PGmr8OPpb43/E193Y639Vf2I1T7zXvhuik65xrf9ucyX1c8R33dkK9L
nM3XvXF+lPvM70i+Lr+7+boaB8nXvTO+ea69HbZ8Xdqt69B5X8jXtfXS/D76
94YXDPo631PH26av+/T49+qnJ32demLev7bewPyieNmkr9v7ybYfNv0q+bpb
+Wt+B/TzNc4M+bo74lN8hPhU/cSneCU6q7rPvZ2Yr2v73fO88LeK0z7ONn3d
Pi63fN0+jpuvc9x3vG36uv1+zNc9Zl5a9/P8WF/x64w7rjPZ34X3Tfo6ztVq
+6eYZ8jrqh51POH7g86meCb5usfMt+t+Pjk+b/GXQV+X/qrp68KrmSfJwx2v
mr6O37HmMeqB8l59dnyu4tf8jtUe9dUPLyOfVfOkIV93y/073pqvq3kZ+Tr3
EVZ7GXiJ4269T58c79N5aMvXDTqAt/Bv58UtXzesm97CM5ynN30dPpz1HOwH
qd8BP0b3l7X12kFfl/G96ev43orffxy/t35/+GuV53vrPf7Nsf5q7+j3CkfH
aPtq+jp4Vz1H9hH4PnGf1U6JZ9X3P47l3b/T9HXk5Wp8H9ZfL3ucW77uP47l
qz/XvyN4dIyuTybPRr6ueMtivu72d8d6qx7mU9X/kDerfi/8gXxdzmcxX1f+
ma6PpX7ydXe5T/N1wzqizyXe9HXD+k19r/q67Xg/hZNvKZzxvnDm3YUzfhTO
+FU4/LvyYO+Zr6u8ymK+7k184BfzdY8zrzRf9/x4/9WPJW9Dvs48T/VX6rBS
fsjXXT4/3n+V//x4/1X/6+P9V/lBf1T3T77u3ZCvezesW/u71Dj6+fG5Kl+S
eZN5lPBkx2N+l/rez47P5X22darcp/q6/L7k6y7Pj89b5Z2/pLw6qZTneas8
z1vl+R2t33xd5QndJ7HjbZ1w0Km8e8983dspX0d7Lh7G+1j10J7re/ndq569
fNPXDet8aYdNX8d4XPUwz69xdtCj3JIHKL6W35F83S3vhfWbr7ulv2r1m6+D
h1m/+bpb4mP95uvyvC1fR96k+OCQr3sz6FRsV4UP+gb7k/reYd3ddiXe9HXD
enC+t+nrhnXZt8TNOLR1b+JW43z6I/ld+Jv6OvyWahzLeqI6/Z3nmK8rvqG+
btvvdzviGd+brtm8U8oP+bqWT0j5IV93IY5VfsrXGbfEm3zUWb6u5hHm6yZ9
nfPKk3xdeIX5unf277kf43aSr8t7bb4u7bPp6+TJ6f/2dtL2sex8u+nraFdV
3nlseEfy9u5bcL5H+aaPJz9Q5Yd8XfpDx8OUb/o6z2VL/GwnGR98v9ivupqv
u5vydeGT6uvUR4df+37lPvd6Wr6OvE/Fg/6keO6kr3OfRHhEeIX7Txi/qnze
d/J19+iHrb/p3Qd9nXy1ntv2nN//2fG5zvJ1dzxX8Saeq94znqv4dfiV/ML8
c+ZJ5JWqnZonyria9u8+n9fH+7d820/y+nj/lm/7CngfLd/ydfDkanfut8w8
I3zVfJ3vS/gpca74uQ4S3kHcql0wPtY8dNDXOT5W+UFfZ3uu8uS56r7oP6ud
8r3Fj4hDtQv6jeLptIf6Heifa97H+FXlaQ+WN1/3jnqqPTIO1n3RDqu+QV/3
ht+9fofwOvV1rkeGFw/7nB5TvsYL5u/Vz6MjqvLufwi/hmc0PRT5ujfbsd6q
hzxD9Vfkf6rfI09V/Sf1W77p61I/+brHqQc+95bnqvko3ytuvq7qcX9P6jFf
N5wPe891zeDT+bCOu8FzzrX5ukHnXv4k5OtuOVe3raeRr/M836ndFP6T4306
nzBfl3PJm+7b847TvjmPuPox94ekvOcdB48ejHzdvfvH+y98z+e3fN2Xx/sv
nHPk2/2rr+Mc58J5rurXea7iF/90fK7qV/94fG/Fzdf5u6iXM193Sxzbc5mv
4/zr5jtnvi7tQX3dvxyfVx8583V1fpP5On5H62/5Os698v5bvo72XONO/GTc
D8v4UfgfjuOE9Ziv8310fcp8nb97lb//90/zdZd/279XH5e9HZqvu/fdsN/u
z/v3uh92j7/5uvibtXzdl8f4FM57Yf1NX/fXYztp9buu+1f6Wepv+jriY/3m
6/K8bf9H4uN+2N8P+2F/gJcEp10V/h18Ijj9SeF/ZpwOTrsSN1+XepqO+Y/H
ftP7NF+X52r6uh+GfZzErd5D8gsVb+bbxQvQJVZ5191Sf3Qm5OuKb5ivG/zr
bjk3sMpzrm6V51zdKs+5h3Wfez9jvi7tsO07+T37TNIejVvGAdcr4Snm6+6M
W8bPvXzL18k/4MXNX8NxNP2Q403qR3dhO2r7rb/hvQ3+w/F9NJ8mXwuPbfm6
HTdfV3zYfN3gX3fHOeBVnnPALd/ydfg+Ff4H1mmCf3mMj+XN12We0nx2bCcZ
P/fnbPk6+as6R9fbd15kvi7jYNPX7e+L+br2fqX8Xo/5uur31NfxvMUH8zzm
6/b5RZsP7PzBfN29+3t95OtqXDBf57mW1G++zv7E+s3X2U/W7+/8RF0z+brw
fPN1PlfhnoOZ9y/8Sn3dX2nPwcN/zNc9PN5/4X863n/hXzKvoHzL130Jr6B8
y9fxPlrefF3mcebrMj8yX6eurMr7vqT8/dvDfVZ54lw4cav7ZXyseNPPV3nG
x2pf/3a8nypPey78z8ffq35P+s+Kn+csp/3+0/F7qzz9RuG05/od6J8L/+7Y
HgqnPVjefF3xQ3XHjIOFMy7U7088C/+B9pl2EV6n79Qw37pDR1Hz78+P5Wsc
GfJ1t+rOGaeaTwr1nOXrMq61fF3un3zdY/lN+iv3tWX8Y5yreZL9ePIKfG/N
n8gT1vyA761+HT1SzVPZT1fjG7qUymfIU5NnGvJ1d4+P91P5D3SG1f/ED5N8
3ZvUQ77ulvXTmg+lfvfDwmvP8nUX+NBZvu6ev3fwKV/3V+K4Xb//6sfYf139
Dzy1+MWHx/uv8j893n/1e/98vP8qH15hvo52UPfJfKryWLSf4gXsW6/x9rfH
56r+EN5Z9fCeV3n84av8Px+fq8rbXpN34blqnGEdVj2e+bo78pPFg9znE37B
79jyZoyrF/ujlMd3us0n1NfxvJVnGvR1t4xzlT8gDjW+7O1qOV/3DeNEeNYe
n7YfFl5b4/xe3nzdxX4nz0Mcqjy6i+IvtIP6XvZJVR6F8avG853/tHzd90O+
Tl+J1IPeqXho3i/zdYN/nf1y4cSn8kDysNwPup22Hqu+jjgWb4I/FD/lnI7i
QXs8W74u7ZB8Xc3Tydd5fk3xI/Z1Vv2OT+GtxK3qQSdWejzaVd0P69HF49jX
Wc+FrqP45pBnCW6+7o59xPV+D/m6uk/mjY+dd+U9CM/R32I6b2IYn27ZR1z3
wz7iei78oqt+5tdVz96uWr6O801qfEu7JV+Xdr6ar8t7ZL6u1qnJ1/menuXr
7jFe1n2m31BfZ/97lq/7/nq+rvo98kSPyWcW30m/Cg96R7uqcTV8mHyd/XyV
lyfle/dxpO2HHcbXjFMtX/cN/b55cfN1ySOZr4O31zhgPiLjZ3T+7oe1nZzl
63Ze0fJ1rkemvPnw3GfGZfJ1F/rf4rOcM1K8T/+W/H7pr8jXyesqrvLptLud
N7Z83V/geSkPv6nyw/ia98t8neejFZ8lX1Pjue35LF/3k+Nz1fuUeYH5OvYP
1u/A71jlGS/rPjOvIV/nuULVfv865OvUAQSXT5u/5/24yJNoRy1f57yOeaj5
uvwu5utqnqu+7vHxPp1Hm69LP2++7h33U/MY8lD1HqD3K/476OvSr8rnHsNX
6vf85Pi9NX/ie+t3Rv9WzwG/rHbN9xafYt5SfIr93XVfyf8PcTJfd4F3FS9z
n3jao3wu8wPi6f4g83X5vczXmZdr69jq6xyPT+YZbb3N+Qf5OnlVWw93Pyz1
tHme/nXwubauzvzY+p0vtv2w9u/yJPV1fK/zqqavc1yETzR9Hf31WZ6m/V7M
55p/nevL5AmcF7b1HvNDzIfaPpnt+n22/Vvk65pef7t+n+ZvzNd5n6UHzn16
38xPms6CfF1rz+QPzNd5/813zf2w3H9bnxl8Gqbnd1z1uZzHm6/zucwPma/z
udp6Du3e53Jcbfo64tLaK/m61m/o1wW/aP3GzfHTfqrxLcc93n+fV77Q8ig8
rzxu+j3M17V9UO53hE8Zh+YPQT/e9nUwzts/Ggf5kf2CcWj7QszX8Tu1fpB5
bevnXx4/HUdbPw8vcPxr/bz7CRhX2voxPNH+1PjI333PjY/ztql9OK81bs3P
A15i3ORN8gnjJh90nG48Xh69cZ/EzfmN/aZxc1477TOf2tmUZzHeU/ud3vup
X5zGh2k8nMb5iadMfGridxOvHHnrwH/9v7Yuob7OuDEeNn2dcYPXNH2dcYM/
Nn3dkK9rcYOnm69rcaOdtfbH7+B4aL6ujXfwIOfnbbyDn5qva+MdvL7p61w/
G+YrVQ/xaXpM83W038aD1NfZTuCzTV9nO2HeYL6utZNp/vTL42fjNbYT3o+m
r+P9ls+aZ2l8lXmG+Tqfd5qf1ffyvP4+jQfwvL73TV9HP9d0AerrbM/DfK7e
G9uzukXzdbZn3r+Wr7M964ugvk5e8V/Hz/Z+yyv4/Zu+Tl7hvnn1dfKJk/Gq
vS/8Ps4r2vvCe9n0db4v9PdNX8d4a7to+bpJX6cfTerhfhxnGh+CF7T3TH3d
sC+/vUeMY01fB0+x32rzB+p3PGz6OvcRuW6jvs73Aj7S+D3l5SlNXwcfqXF/
yNfp/9xwx+chX3cvfgiMfxf0G/V7871n+TrXi6senyv92JCvu4dvSfWTrKta
3vHgju+t/ornqn5BX6P0P/jziLfxCX+e9r3uh9X3Jrg8I7jry8EHHcc91w2D
u24YHP+36h+4z7N83S3t4Sxfp37gLF9Xek750eBf5+9e/Q9xrn4P3lPl0VVW
/dx/lU+eX/6iL0Ou6cfb/dtPD/k623P1h7Tn6ld5rhq3eS7xlqdm/b2+d/Cv
u8MXoj0X44P9UvOdY35S/Y/6uiHPUT546uueH5/XvF/L1w26pwvP6/2br7P/
rHHsPfN1d/B762nrLvRjVQ88rL6X9feqZ/CvMw5Vz+Bf53pl1aOOOr+r/Xze
Z8ZB83htP6z9PPU3fR18tNVvvs51U+pv+2FpJy0Pab5uf17bh/yheMqQr7M/
KX7E+1U4cat6mG/U9+IvVHx58K8L3vJ1xM3vbfo6/Fh8rqavwxdlilu9r0O+
7h7trcbbIV93z/le6ud8kyrvPqLUP+Tr7qlnyPi573OUT5fPhvo6/KKr/L5f
punr9v1NLV93b6+f/Mu7SV/H+HWWr7swflU/Ounrtv37N753yNfdY1yseiZ9
Hfqx03zdrudp61fxxyaP89bzlRJX2lWVJz6Wb/q6nY85/7Rd1fPsvmFNX4dO
psrvOqKmr6Ndmcdr+brsszNfZ34k4wB6s+Kzk77O9dizfJ361fBN3y/227b1
peiT1dft9TR9HTrn4uODLuoe41fxBfz6qjy/e/Flntd9tW09nPfC+s3X5f1q
+Tr2BRSvSX+ivo78y1m+7p7tOXHFn7/eM9tz6v/d8bmqfsbFqj8+Rerrnh3v
v9ovv4t5vKav4320fNsPy+9i+ZavU4+acZ79F/V86AiKb2Y/u/2T+ovMS9B9
VbvejvdZ80vmacVn4av1HPCx0pkM+rp78Laqf9DX3XO+lPtynTm/M/q3mm+h
Q6t2/ez4vcXTiXPpOtSx5ffhudSBtHyd/D7fk/mXPPf5sZ6KN99b8R70dffk
c/m/YX2x8RjmW47fjQ85HyVfN61XNb41+G6Im6+b1ofaPgrzGeTrpnW4aV1q
Wr9p+zoG/xFx83XTuDutJ039e+PHGeeHddxp/XJaz5vWvaZ1o2k9pvH7jXLm
64b112k9clq3m9a97O9b/cM60qhbJ183rStP66zTeqTrbOLjOP/xddx8nfO0
xnfM1/0/ld1PruS3DQTgvoEXWRhx/tgZJ0AMZDFHmKPN0eYoc5RsmhX0V6/Q
ky2fHn8SmxKpUlEa5+jrXNlzztIzzkWN84vfufiUi6dY9WDmraNeRLzOc2nl
6xy78LrBr10814VTL77m4jtWvZz7FfA69yvVfvAUxOsWv3nxjxcPePFuF591
8UEXb1IcZPFQlM99sHjdOK8ybikXr3N9Vy5e5zqlXLzO+aBcvE5cqfCSH+X9
L37/4usvnv3iwS8++uJ/L1714iUv/u7isy4eJ3ab9Xja+08fy13/Fq9i8RUW
P2Cd069z9HX+vc6z/99z6+J1Lrs5j8XrBs9m8VQW/2PxLRbvYfESFp9g8QMW
D6DwfuSLR2w8XPykxe9ZvJnFU1l8kcXnWDyMxauQJ179HOdU+lHhPu6PfvlY
bj67eDyLT7P4LounUueByFfdQP3+gzfseOuc9u8fy91nLF7R4v24X6995ajz
8Hdb/PLFn3ZctU/8x8dy93OetytfdTZl71FXsPj0iy9eeNaoQ6p96+BBaKdV
H7LqJVadwOLBr3qpVXe06nZWfcuq91h1DovHb3+0q/Ng1eGsupRVj7HqDWrf
5T703x/Laz0e9SGr/kH9zuOqhx11KavuovYh7r+Mn6Ouw/bGDfMU5StPTj49
8LqH+fjtf8b9dd/JA9Jv3k/M/lA+0sUx9LzD6x7YKe0d1/kN73XGD47Pw37R
dy3jZ7xvGLyD7ybemlfd/JG/ee3Hfv37uL/uwTob/f5e4Pbu5w7ndx985wKF
ExAX69wBfOgL67LnGsWv4569d3id7/m+w+tyjvODeF30WxdF/xNfeS8jcYD+
J4753vGtV3957X/03zmacfTOywYPveqTzX8uruM/iVd3P5t43Z3jg3/4u6Q9
95ipv/A67psq/cRVz2HTnjiRuOe6cfGH+/qSB10/wXVyv4d59qhX+MZ4o5/x
Vh5PvuA5e+L2ur+Od+ISD7FD8o57h+IH8Trf3UiehT+nPfMx7fFn25sfybtI
e/KJtH/O36rfZv+S9sSvxPPjmbiPffJSZh2VeQHzInnNzS/xOtarwgXIE+Xt
JL+w7vz6g33Mg9y3feE8N/ngur/uyWsSrzt7Fl6HXyW/e87TwuuYX2nPO4xp
j18lbx31sA/2U8nLeMct7fGr6MfP0h78JPpHfne8u6rHg+ecdW7gdV/hc0bP
wOu+wEtM3uF7fMjrnBM+p98Vr/PdQ8clXnd2KDx04HVlt7M37zi/w+se8DlL
v3mZOOcbvO7a17k3fE7786N43QOewLJP4oF58uU71F9kXeQd8OjBPvl94FFH
D/fT5ruuW6fH9zTvu2N/9W3gdc5P9RReJx5+/qWfXHv95NqL677B6x68C5/2
f7z+n/oLr3N+0f/C61hPks+ynkTOeGM/6ibiX/CjEj+JX8qrbtt3Le+78Jzt
p3id40rc1p/v9xd/foPXPRhX9DOutGdc0S9f/tpzrrH6Hz/947X/+T1/f+2/
+5LCNem/+a943RfudzUPqvOl8T7sgzzZurDC68b7sDVfqFMrvM7zI+rgCq8j
PmYesI7Fj1jnlYvX6c/ru/FL4nLs5zvL9/uP92FdN5b++Dvrc/qFP5i3itfV
u8k3b9CT35k4aF2SeJ32XPL47ziP9d3Y7LeIx4k78vRu/2195e0/qGcJjkJ/
sl83D7h18vOrnmoPXvcwb7v9n3Vt1L2K1/026mGt4wveA24TvMfzyFt/jPfX
Xt4562Hx61yvTz/3omf/MephK1+9ffCoh/1K3ApeMuphv7HOBvca9bD2M+sr
/lDtve/j82s/bV/3Snx+7Wfpt75Hvuitr/rzrVfYOXELOyc+U+cVvMH859Y3
8t7ifXiOBI89eg4/BK9zHmXdw5/Tnjpl62TrXJNxRT/jKv2egxHPsp6PfOHx
t9fxJj64Hl4e4bpxcZLxZj1nvmS/fno8p6Iups65Pd8Dn0w/f30db/pD3Vm+
y7vAiYf87ukH87Hae58HebC4mXjdg7zN9nWeaf0AuJ943YP7hG1fdj8c3vsq
Bu/EOFg8FfE61/nLp1znz5/Id4tn47kueGb0iO9ff/AT8+LiWTz9p3goPz3/
Lu8Kv0oexHqS9syv2BG7pT1+Ff3UdaY99x5E/6fn3z+9yr/hV2n/XE+Kf/Hz
8/vyUJgP6efTbuU34EqJn+ZdN4/xt6zrrMORiyecHvGE+677jfudB153cvG6
0yNel7hAvL1+itfduMTrzg7Fm9Rut94vfp12u9/h1kP5dcSv0i+/buB1yWc8
Bx543Vf3G/RHvC75j/w6cZhhn+Rl4BfJC/CrzO+B13033l2cGXidfpXvUkcW
Pey7813quaIHv3J9Eq/7Dm4ZPwI3ETcTr3usetiB15WfgJuJ14lbql+87sH6
bv+Lz8u9H8nHqYOOfPHrBl7n7578QpwBuXjdb8yLfNc6PvopXue44u+3L5Nf
N/A6f8e0159P/+WT8uv059NP/E5773EY/ZdPUjwt79kg3orXOR/N+8Tr/F3c
HxS/jvwn80m86eTgopFbl3Lyf732M3LrFk7++2s/I//02p/4O3XQkS9+3a+v
/VFeeN3g1/nd2In7FuKnf339btpbV0774t2jP98nz4wfMS79q/h1P7/qye95
57nGzz+/6omcfD36fnptv+TxC/I243Lx604OXmd744J4nfu4ai+/Dj3v8Lq0
F69zXKx74nXqr/beXwf+U+3l1/Fd5cWv47vKi19Hflh6rIf190Je9bD0R3nV
w5qvIq96WPopbvajeJ39fIfX2c93eF30i9fpz/9ELr9Of7a999fR/9Ijv47+
l37xus+v46n28usYl/Li1zEu5cWvY1zKi1/HuJQXv478p/RYD+u6gbzqYV03
kFc9LONVXvWwjFd51cOa7yGveljsIC73o3iddlBe/DrsoLz4ddhBefHrsIPy
4tddf8TrXOf/g1x+neu87a2HdZ1Xj/w67FP6xeuwT33XvBL7VH/E657yqofF
bslPsZvy4tdhN+XFr8Nuyotfh92UF78Ouykvfh12U178OvCTZbfEeeM4cvG6
iuPq+eVjuXiddlNe/DrxBOTiddpNed3XIu6EXLyu7GaeLL9Ou73B68pu6pdf
p93e4HVlN/sjv067vcHrym7DPu4X6v464x1y8bqKd8jF6yreIS9+HfZRXvcg
YB/l4nXlJ+6P5NfpJ+6b5NfpJ2/wuvIT+yO/Tj+xn+LZ+skYr/s18brKV5GL
1zle5XXvCeNVXvw6xqtcvK782X2i/Dr9+Q1eV/7sflZ+nf6MvPh1+vPov/vN
uifIvAK5eErlFcjF6+y/8uLXOV/cz4rXOV/c54rXOV/c/4rXOV9Gf9xvitfZ
H+XidfZHuXhdzSP3oeKdziP3p/LrnEdDv/s18Tr1Kxevq3nh/ku8znkx2rtf
EK8r//xfnvxfZz9IRw==
        "], {{{
           EdgeForm[], 
           Directive[
            Specularity[
             GrayLevel[1], 3], 
            RGBColor[0.880722, 0.611041, 0.142051], Lighting -> {{"Ambient", 
               RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
              "Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{2, 0, 2}]}}], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1: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
8fqdbL284jUfbd119crfbZ0O8MpJbZ129srfba319crfbT3288rHbR119MoX
bN0184rttnaaesVeW1+dvGKvrfcuXrm/Pf/+XvmFzckmuDl+G7+KR+NV+DP8
Pt6B1+IP8E68Dr+Lt+HVeBLeiJd6xQOLC8vwe3g7XoNnWY6LN+GJeANegsfj
dfhzPAavxgvxWLwGL8KjIj3nT/HISM9/AR6H1+LFeAJej7/AH+JdeL1XLmNr
rbFXTmfrqKHX/mFzY6TXnmFzZoTXPLM19ZZXPWRrbZhXnWRr6m2v/NHWaX2v
mszm/3Cv/NHWVD2vWtzygfRetaPF4tRedbnF9DRedbnlD2m9cluL+w951eUW
x5/yWg+Wk9T1ysVsr2jktbfZWnvHa3+y+TzVay+2ddTWq+a2fbi9Vx1v+3AH
r/re1l07r/zX9pkGuFmkNTLYK3baupvste/aWpviFQdsvUxP/NYWZ2d77YUW
f+d67YUWo+d57ZcW0+d47bW2pqZ57eu21t71qqctP/GJz7X3/AT3wu/jCXht
pL7BCbwgUt23E38aqR7chT+LVJPuxvMj1X078LpIvYiTeGGkmnoPXh+pTv8W
f41v4Qt4Q6Sa/RTej+/gi/gbfBv/gffgG/g83otv4t/xPvwv/hMfwHfxX/jj
SLXbZjw7Uq26FS+NVJMe8KpdrRY+hFvjkfj1xL5hc/JN3AaPwm/gJZHq4v34
k0j1xRb8RaQ6fR9eHKlX8DVeFKm3sBd/HqnW/gavitTPOYpXR+rnHMNrIvVz
juNlkerxg/gNvBDP8spLLCm5jA/i//jfv/FreAH+CA/Fn+IZ+HX8GZ6Jh+D5
+EP8Jl6EP06sQZt7k/CreB7+AL+Mp+ExuCuegkfhVngEHop74w/wRNwTv4fH
4x74XTwOd8fT8VjcDU/Fo/EhfA9fwoPwHPwe/gjvxhvwpkg9je/xDnwV/4x3
4mv4F7wLX8e/4t34H/wb/jJSb+Q7PBjPxe/jjZH6J6fxlki9kTN4Bt6DN+KZ
ker9L71yRMsVz+Ht+Ar+CW+N1Ec6izdH6rf84NXrspz/Ma9+odULGb16gVab
ZLZ1Eeu57SeWtWD8HTwk8fvaZ/3olXdavprEK2e1HD6LrbtY63SfFfGRcv5n
bG3Gev7fMD4/1jPfi1fg2Tbn8fJYz/kgXhnrmRzCq2PNjSNW+ydyANsbFsT6
Hb9mfF6s+bCnvPpqFqOPeOVuVmusSuyfth+2waUi9W1a4JKR+jnNE3umxeXe
uE6kHk4vXDpSD6dl4pnb2jyMy0bqt7T2yj0P4u1euZ7VQSu9ckmrlVYk1rvF
xOWJNW5r/yuvPPEA3obLROoLtcLVI/VVutl7xpqfu7nHOXiy7Xt4b6x4dw4f
ixWjf8PHY8Xo8/hErDj4Oz4Zaw5fwHtixdyz+NtYc+wPvDtWPD2DNyZqKNvj
d8aKy98zviNWbvAdXhdrLR/H62PtCSfwhlhr+STeFSuO/4Bnx1qzu/DRWLnB
r/hwrFziFzw1Vh6yBU+LNQ+34ul4uD03/G6s9b4Nvxdrn9yO34+1N+7Aa2Pt
OcfwB4k82faVNbH2paOMfx0rD/nR+maxcpif8L5Yv5f9bkfwV7bGGT8dK4e5
iFfF2pcO4xqRemsv83vVjNTv6o5rR+r79fTqDT+Mn/TqDz2Gn06sI1tTSb16
SI/jTF697YfwE169yUdxBq8edipbZl69pUdwOq8+t+X/z3v1k6xnUsGrX2X1
YG6vPo31Rip59Xus71HRq3du+X8urx685f85vXps1icp79VTT4kf5/UK/9qZ
xINe5wZWI2Tz6uVbjZDdq49uNcJzXv11q0FyePXUrQZ51qv+tz0kK24Z6fd9
zaunbv2TR7x6/8nxw7xe9ToDScbrNf5NilN4nQkkw6m8enLW00judYaQAj/q
1dO1/klKr/6O9XDKefWxrI9U2au/Zf2oKvjFSH3RmjhLpJ5kGa+63f62LM4c
qW9ZyqumtB7FfJw3Ui+0tlc/zHoFhfBLkfqutfAzkfqfpXGtSH3RHonvZvle
HZsLkfoJLyaelfUN8mIfqXfxEo4j9WlrePUCrVdT2Ku3Z/2Kgl69QOuBFPHq
DVu/oqRXr9T6WtW8epzWK6vu1SutiYNXD9X6clW9+o7Wc4i9+pHWi8vv1cu0
0vcFrx4kS8Pl8erLWv+kmFc/2/oqxfE2LliOvy2v3rb1mop69SmtR1cg8Zzt
fvN59cWtP1MCn4m1D9s+OglPcjrvKBG0p1vv+oOgWG7nKdOC8jY7mxgbFCPt
TGFMUKy1s4APg+a09cGmB+Vwdn7xUdCcs57bu0G5oJ1lvB+U69j5xbigGGzn
YuODcgI7F5sclCPa+deUoBzRzoOmBuWadh70XlCOaGciE4JyCDtHGx0Uv+28
4/Wg3Mv6xn2C8jzbo94IytvsjKNKUP1mffjGQTmTxYuqQbHcev7Vg3JKO4MY
FZTH2DlOtaD8yXryBYPmtPXHhgblpnbW8FpQrmn73pCg/NLOHV4NyiMtduQP
mq/W95sRtD6th1kjKGe1M5FJQfmQTfzBQbmpxaOXg2pLiyk9gvItixfdg2o5
izsDgvJ7i3Gdg2pOiy9dg+pMq8c7BtWBFo+6BdWuVpv3CsqfLN71DaoNbD/v
ElTH2jzsF1RXWAzqH1RXWGzqHVS7WpztGZSTWXycGJTn2Vln86C81vKcZkH5
ruUnbYNqWosRbYLqasttOgXVwBYrBwbVJBavBwXl6Bav89lGHaln2CIo57b8
ql1QbWx5UYeg+tliXJOgfNpyoaZB+bflWi2DcmvL61oF1c+Wd7UOqqst72of
VEtbTKwZlFvbWU8I2pft7GZYUA1m5277Y+UwFh/LBuUrdkb2ZlD9YGdt5YNi
oZ2RlQrKpeyMqUxQ/mTnRAWC9jLrDx/iPQ859dyKB+2hdgZ0IFaOZH25kkE5
nJ1JHYyVd1lvrUFQ3m9xv2FQ7m45UqOgPNvyjbeC6hk7KywdlG/Z+dc7QXWg
nbG+HVQr2pnm8KA60M5hywXFeDv7eyWolrOcoXJQzWzna5WCckc7g6sdVKtY
DlMxKA+w875iQTHAzrxqBdUe1o+qEBQD7KxwZFCdYGegI4JqAzvnrRNUt1gu
VDgoJlnvul5QnWO5UP2gmtlyoUJBMcZ60XWD6h/LnYoExQw7UysaFOfs3O3/
PQjpUw==
              "]], 
             Polygon3DBox[CompressedData["
1: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
ekq9pc/sbP7+yXbuzd/kb3uqnd/mPXqv5p9HNlMDMB/1Gfus9WDnwCPb8Yp6
RL3iCPjMRjyYXmxUO95Rz6h3fL4d76hn1DuuXTOfFy2JJx/X5C/3ltS/+tbM
/4VL4qc5trU2a4rm3ua01hatUZrrmpNbq7Qmaa5ujmwt0hqdubOeXe9uDO9T
kzNbq7NmaS5tTDe2G9N719TArIUZExavmaPOVWtkS9TE8J4dvVSfrClaW7Tm
tXPNHHYuO8drTc3M+eqkdj5b47B2pj+y9mEMNZYaY9Uin4mxVo3wWakRaoWa
0q8m5zD3MAZa67BGYq1xaCO1EzVQLTRHsfZhTcRarTVcayXWXPRn+q0dOv7H
uecc1C+ZU6tH05aMP2sk1n7VWGsnvhO1TY30XTkm1ZNmyVg15hn7jGmtjp4b
K42Z+gNjqrHVmLlaTUzu1tH7ZWtiqLFUDVm1JkYbq7t35ouaq/aqqWvVaILa
oKasXPMdftc8JfqmR1E/5y7RVzVBbVATlqvRKLVKjVqlJkYbq43hS9Z4EvW0
VaKHeiL1dskSPbaGYC3BnHSRmpqstdlFHeM1mqK2WLNdrCYHnbczn62v6vnU
81qiv+ak83XiwwI1Oa25rTnwQp34oXYv04kHejb1YakSPTInNjc2J164Jmc2
dzbnXbDGk6nvc5X4Cz2OXqdLTa/RcLVczRtQ47H1qquU+A09uF6uR4mfsOZr
7dca7Wc1NVZrtda4rb1ak7c2b43405qat7Vva9Bf1Hho4/2qJX7FGoC1AGsA
c9XEBGvj1oyNFXp89WO1Er/jmHXsrl46+lgT3w8siYfWmK012yP4pKYGZi3M
GvlbNTmIsX9AiR5Z87L2Zc1rbE2OoBauU6JH1pCsJVljGllTY7fWbk367Zqa
k7Una1KjampS1qYegp+vqXFb634OfrOmRm2t2hr4G/CwEm+uR7dWbU6kl123
RB/1IHoRPdg6NZqiXu1REr/VIOPzriXapCYa+zcr0Uo12Fi+eYk2q/Fq2RYl
2q9H1htsWuKdrdFYq7FGM3dNf0A9MqYZ2/TY6slWJd7b/EOv4ph0bOrR9Grm
Y+Yj5uDqzdYl+a2aq3ZuWaLFaqb6sVuJlq7TihapSZ92pYdhL8OeyIc1mqZ+
7lSidWqU+rhziXap0erhLiXarYarR7uX6J8eSP0cWuKN7LHYa7En81FNj8Fe
gz2Md2pisLFmkZLYPLwkFzYnfremx2Gv4wV4XE0Pw16GPZj3a3I+vcraJbmg
nlfvq2ddvqaGoX86oERPzeGtX55W4s/M8R17p5f4MWsOjrUzSvyYNQLrl6eW
+D3HoGPz8pKx6Rj0t1xRMjbtKVj/vKikfmlNyX7K+SX5kTUM670XlNQ2rNlY
772wpJbzZU29/OGSfpI1LefOeSX50Fc19eZHSvpT39TUGx8rqf8aI62HTlYS
O4151uMmLImFxizrhxOVxDJjqPXUyUti69c19etHS+rNarb15ClKtNw57LO/
pmRuq8nWl6cq0Wo13fr0lCVar2YZe6Yu0TI1wLE/TYk2GIOtL05cEput6Vkf
PqXEb1vzs7Z1UonfNCbYn7u1JFbYA3LuX1pSX7aH5Ny/pKS+7BixfntXydix
p2Q/6+KSerIxzPrrfaXTP6upvz5UElsds9Zf7ykZy84R68V3l8wdx6T199tL
xqox2/ryAyWx3BqX9euTS/IJY7b14vtLYrkx09h9S0kstQZ4A3x4ib+zxmd+
cESJf7aGaS3sxBK/bQ3RfOOwEn/onLJfcFvJXLPmaL5yaIm/NEaqJTeXxE5r
GNY+TyjJL6xZmc8fX5J/GJON7ZeVxGprmuZDh5T4YXNEc0VzzhVqNNJ6+yQl
2vlyTWy5tqTfMRs8BfxHM/2J2eEp4T+b6WfMAU8F/9VMv8Ic11xXj9vDscY2
Nft/N1PPtkdnr+7Fknr73/Df8OiSfsz38A/wkyX1+h/hH+GnSur5P8E/wSNK
6v//wP/AY0r6Nz/DP8NPl9Tf1dBp4H+a0VZzbnNvPfZK/na2Sdn/tZn+g55W
LzZfide1Rmr+dFBJfjIjPDH8czP19VnhyeHfm+lvzFCzjuCnZur91tCtpf/Q
TD9hFngy+Ldm+h8zwZPAvzTT7zDnN/c3p1+Rc9OzTcj+j83U5/VY9ksmLfFe
v8C/wM+U9D/+hP9Ua0v6Ea/WeIfrS/pVekq96RwlXlMPZr9jghJv9kpN7L+u
pJ+sJ+S/xuwlXvG1Gi9xQ0m/Sw+rV5yzxNu+XuN1bizpJ+lZ9XLTlXhZPa5e
bPoS76vm651uKvECv8K/ws+W9Ff0tOYis5Z4XTVCbzdjiXb8Bv8GP1fSz/kD
/gMeVdKv+Qv+C36hpJ/5O/w7PLKkn6QH1lvOUOKN1fhp4X+b0X7HsLnPbCVj
2zmj152pZC75jhaFZy55d44pve4sJWPNnoj1iYNL8lWfmb1CNcdnOaCVfvhR
HPusK+/I3qIa47uzBm0t2hqrvVprrNZaT1XjajzBkZ382nq/emxvcVxHf+0H
HNHJ3/Ue1oCtBVvTPaWmpmtt13s4ueYejurkvyfV9BztPbomZfeaNSeuPXFN
yCE1a1Zcu+KalENr1rS4tsWe8mE1a15c+2KP9nAHUt/Utt9txC+4xsW1Lq5B
2a1mzNiLNOY7lqyRWiv9Fv625m/0GneUXGt8TX3+zpL6uv7xsY5fUeut2T/R
8SeudbBm/3jHn+gvrdlbu/carnWwJjy841ftb/id1uOfKLkX18i4VmZXju1a
01Owt2AN2t62NWhr0fYY7I3bY7ij42ftjds/ub3jj/Uuj5f0HvUEegNzcL3Q
AiW5+X89BHi9kvU/rslxbY5rfA6qecY+u41Lnv0uNbWB3iXre+yp2FuxP2O/
y3fuuxtSMhbsh1nLUrP+60/V1BLWKsntd6rJndcsWc9ij8telz0b11qYMxmr
FirJpfTk5q6Ll3h1cyhz3SVKcis9sLlrtxJvbE/O3twtjazVcEw7lrYvGeuO
SdcjDS4Zq45xe1vblox9x6jPYruSseuaJ9c++ZkDa9YsuXbJaxxc88xcn7R+
ybP0mLWLDUo+698MhQeVXMt+jr0ocxBzEZ+pa6dcU+Wzdsxaa+kqGcu+I/tv
9tt8d455584mJXPBOeLY2ahk7jiGrO30KRlbzimvvWHJXLMHYy/GnpRrHZyD
1m76lsxN34lrjfxNvivngL0mx6xzw5hor1uPY6zUI47pxAe9o57UtVN6EL2q
mvxeZ76p1WqYvWs9qdqm5tlb1pOqhWqSvWM1RK1Ss+216+G+74zvsZ37cS6p
Ufbq9XBql57ZtVh6RL20mm3v3JqYWq4GubZJD6426UFcK6EH1puoEfbi9Whq
x389+2bWa6m9aqprCfSsaq0ew7UfXzfiPdQA1xZ83og26Mlf7MQn56Pri4w/
38EKpx5jfGe+6j3sl1urNhxNV+NJXJugB9Wr6JFc+6En1zvpMVzroOfSe+hp
XKugR9Xr6AlcG6HG6xX0TK4F0LPrpfRYrg3Rs+u91HjXHpiDqP3W+PR2C5bU
/vQkrr0wx9CrWDOy9jN/SS1JTXStjzmKWqlmutZBT62W2rOzdt2/pJenJ3Qt
jDmSXtGelr2lfiW9rv8DLU+rOA==
              "]], 
             Polygon3DBox[CompressedData["
1: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
2DP2jH1ie9if7Dl7ztrpXc/2szPsFvs/K0VtlQ==
              "]]}]}, {
           EdgeForm[], 
           Directive[
            Specularity[
             GrayLevel[1], 3], 
            RGBColor[0.368417, 0.506779, 0.709798], Lighting -> {{"Ambient", 
               RGBColor[
               0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
              "Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{2, 0, 2}]}}], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1: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
b1SMxGPwBrwDn4SX4adyr7Waq48wPorxy/Ts8Nl4rX6XzxybPA8fxb30Xurz
uCe+VXE0dx6g+fk4HpQ8r57IvfZr/jzId57Fd67RfCjWg1p78+Q162ze04cZ
H4kv5TOf40sy39uP8KLMz+7DYq2hmm4+3/+ecg3GF+CPlIPghfjjcKyYh99V
7oAX4U/D8W0x/iyKcQ9/E44ny/DX4Rh1Mf48HCcvwp/giYpF+KtwfFuBvw3H
n1X453Bs3ITLJMeZufgdxs/FG/E/4ThzOd47OQZuw3slP5eteM/kuLca/xKO
vZvx7snxagveIzmursQ/hePeevxX+H1fgr8Ix/xT8Nrk2nAc97AS93Ao42Px
gVpz8Rh8AB6CpxXrQeWt03E9fBbjM3B9PS/dE3xI5vu/EJdmvs8LcPPM1zsa
V8Qn4aWcw5fhNWU845UZH4bPxVXwcHwerqocAw/j86uT84rheE1ynTuBz1RX
fsJnLsA1lG/gibimchJ8Pq6m+Iwn49r4TDwJ11KugofynauScxjFG+VIl3N+
axj/NbyWXYp/D8fY8/FT4e+cgJ+O4jngZ8LncB5+Mnz+k/Bz4b81Bb8Uvoez
8BvhmnEqfjl8Py/Eb4XX7on42fC1zMSvh+vHyfj58LUs5VpaZZ7zvzV3jq1Y
+ivemDn2foGXZY5Xvzd3rq539g+8JfO7/AvekDnuLcNtMs/zn5o7V1Fd/zNe
nzmGX8k5lE2OUWvxb+EcYAZ+LVz/TsOvhOvfUXhrcn9jJN6S3AcYgx8Nz7fZ
+M1wDjMHvx3OW5YU+yeqyS5j/I/wGrcO/xleBzfgv8Pr3Wj8SHi+Tcevhmu9
s/Hm5H7ImXhjco9iHP5f+F0Yjx+P4pzET4Tn5Fj8WPgdOQNvSO6ZnI7XJ/cx
RuBLk/szp+LLkvs2p+F1yf2Ws/Cm5H6I6nrV/i9RA37JNV6IG3ZzTal1vEo4
z1C+MR5XTM5V6uEByfnwOFw5OY9qhA9IzrXqh2Ow5sDp+MDkPKpBOJbrWZ8W
vk9l8KsFP4fd8esF17i74ZfxHrnrW/WCds9d06oXVCZ3Hat+ndYxzY1T+Xel
5PWlofpdyTXpRNw/OQceq2eTXLdO0TxOruPm691Izs8XhOOc8syKejeSc/iF
qr2T69/J6g0m18WTcJ/k+mgkPjq5djgH903OyUeHY6py1APxXrlrdfXrFEeV
3x7Av3sn11Zn4aOSa6tRuF9yPj8mPBf2wG8WPEf2xu8XPHf2wu/ixPfXSO65
Ba6e3Fcp5K5LKxfrVtVHy8M9G9WMy1Sr5q5X1atRHahaaWu456Ge4ZpwL0S1
4epwr0v9w5vDvSvVYleE1yjVAn9xPuVy1/Dq1eyTu05Wz6187npefR7N31+V
7+mdSa6zFoV7J+qNXBruh6ke3BS+JvV7O+AqyblKY92P3L0D9UX3zN1TUC9U
79mefObtgt+P35TThtelX5SLhvs36mutD/d11OfcEO7bqa7cou/NXcOrr6Xe
kmrGyzT/Ga+V3ONV/0m16sZwz0l9nnXhvppq283h+lM16S3h/plqycXh9/V3
fDdultzvPQo3TX5P83Buq3x+UDiHVZ5/XDgnUr53vO59ct+4TzivVM5/bDgX
Vj5zDO6cXOsNDccz1Vxlw2u4aqh9w7FNddN+4VismHwK7ppcPw4P5yyq9f7m
3nZMrk9PCs9B9ec7Fn9XudNA3Dy51310OKdTrnVCeH1WLflnwbmDept/FJwH
qYf5O66T3Bvvwljt5N5753DNprzusHDfTnX0xTr35Fr1ZF1Tck09JJwHqY4r
x/HQ5H5y//AzVG//cFya3J/vi2sm9/874S7Jdfcw3CG5Rj4Rt0+ukQeHY+3f
+N5wrqfe7G8Fx/6/8K5wLP8T7wzH8j/wPeG14h98n+J+cn9sWjinU42Z8JDk
3trU8Jr2L74/vNb9hx8I9/q1f/FgODdUDbt7OKfTOrtHuEbVGrcbx5HJvYuL
wjmd1vcyHHcwtxsk11/KN5Vr/Vtw31R9jKXhfqr6GEvCta7q38CHJPft+4Xz
Zs2BAeG1VD2BfTiektxvnBWuaVXbzg73YtW/ugQPTe4ZTsfDknuVM8K5s/K9
fwrOm9RD2JPj8OTe5sxwDqWew97hfEE9h73CPXvtC9wU7teqJ7Y2nPf9hHfo
nHPHffW1Ds0d99X7uglXTa5xbsF1k2ufsrl7dtpHuDF3bFLtc0juNUk9sVq5
54r2gKrnnmfaS6qR+35pL6lm7nmpPaDaueeZ1ug6ud8x7Qfdiusl17835F6P
VYtdl3vdVT3VIveap95dy9zzRv261rnvqfpFbXLfU/WLDs8df9XXbZV7/qkP
1in3/FDv9zZcP7kGvwan5Nrq2ty5gmq37blzAtVT1+dem1UzVsr9DmtvrjR3
PqEeVLvc80B9tmq5Y4T22qrkjmXa11tRXI+2he+9atUm4d6neg7Vw7WXaoSf
C6631G//FTfKXe+pf6WeuvoS1cK5pHoaVYvvi2LyreH6UH2bg8LXp75N3XCd
pL5TpXD9pB5IZf2d3Ou3emgNcsdH7U81zp0fqIemXoL6nCvDdb/6n6vC66zW
4hW6rtxxX3uaB+WOWdrvq5s7lml/sF7u2K19w/q545H2xZrkzhvUG2yaOxdR
/7B57hxIfcJmufMJ9fcOzp2jqI9XOfcao73RjrnzHvX8b8bVkvtj7XPnTOrt
q+bYj3P+vOBcUevCiHC9qzrom4LrCdVBnxWcU6tu+qLgWlk13U8F16aqob4q
uHeifkLbcM6tGvDHgusV1WgfFdx3Uf+hTbjPod5Cu3D+rtrtk4LPVz2NpuEe
jHoR7cMxTH2G1oo9uXM+7VmoltqX8U8L3pfTvuEN4b077WPeGK7VfsS36bO5
e/HaH1Rd+DPjt4f38bT/eH24N6Ba77uC9+60T3ql7lnu/r72s7R/qP3Qa8P7
b9pvvSa8v6f91qvDNV9Z/HHBtd0++MOC9+K033pVuD5TPftBweugephdw7FB
vZSW4b6Remu9w3W18v9X+HzF3Gub9uBUM6kGf6vgfpL6gT3D/Sf1344M1zSq
2d8puKelnk+3cPxTj6VFuL+lvlz3cI9Kfb9e4Z6Wenc9wnWnavM3Cq5NtS/5
WsF1Zzn8ZcExRj2ZVuFatjz+uuD9WO0dXxeuRyvgbxlvmzvuq9etfVrt827X
+ebOFbQvrz6K9kZ/KbheVC/iPfx/NXC6kQ==
              "]], 
             Polygon3DBox[CompressedData["
1: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
rWC1JtpEzah29B69171KvIg1A2sD65fUEvRkasG9S7yaGs9awzYl2s/493q7
vo3X23P+lzuJCcaGHZrEBveke3MAfGUnHkYvM7CJl1Gzql1XbaJd1VBqqdWb
zIc1BWsLU/YmnlVtvF2X8Ts7iSnGFjWr3n/bEi2rh1K77lPirR6u4431wHrh
vZt4TT2n3lcPZO1i0xJv9Ggd76qH1Stv1mQtu0fcK1s02YvuOffepk3Wvmve
tb9lk73oHnYvP14nVhuz9fIP1dn7xgC96iYc/1gne8i9tF6TWGkMNhYPaI8/
ruR+Brbf5/gSr/+IHr+TGoC1AGsAavUDS1jNrhYfWqLl12+yF405xp6tm+wN
96R70xqBXvSAkvnSA1g7GVLiDdT01la2K9H6azSZP/eoe9UYZGw+tGR+jGHG
7sNK5sM9aOw9vGRvGgOM9UeUXN8YZOyeUDLfxjy18CElsdAY4/o6qGS+jDHG
/oNL5t+YZuwbVxLrtmoSS40BXm+bJrHHmGPsGdkklptjzbUjmuQCY7yx3nz6
Cutvija/Dm7Xx8SS52nNxFx3Tsl6Msaq5Y8qib0718kl5ghzhTUTc+XZJbWU
dZrEFmOQscgYaK44suT+jOF6xaNLYrs5zVrMSSW5btsmsdMY7/XMgdZiTizZ
f+Zoay8nlOzPtZrEPmOssVaPYW47ucR7rNkk1hojjZV6NL1aU1JbNOdaGzql
JBfvw/EfdFLjsdYzrsn3UwOoBczZzuepJbncnOX+O6Ykl+mB1RZnlXjjzZvk
InOez9sc7fM5rSR3m0PVLmeU5FY1gtro9BLtsHaT3GHMNnbrqdRSZ5Z4rbFN
rqdmUbsMapJ7zSHmkgPraGE1slr5ojreSg+kF7qgjpfSk+nN9mzyvPX03v/5
dbyaHkuvdV4dr6VH0itdXMcL6dn0bmfW8TJ6Fr3L2XW8jh5IL7RXk+dvzc31
cmEdL6an09tt3CRXmdNd75PqeDk9ll5rYh2vpcfSa51bx2vpcfQ659TxOnos
vdZuTfanGsz57G2S68yJ5sbdm+xXNY3zv0uT/a5G8/lO5ny7d+Ip9ZYn1vFW
eii91Bl1vJmeTe82pIk2UbO4vndssp/VcK7v09Q8nXguvddOTeKDHtn1unOT
+KAmdD3uVkdbqvnUfns02U96bJ//6XW8ohpcLX5SHS+oB9QL7lJHi6oB1YKn
1PFyejy93nZN4osazPV7Qh1vqCfWGx9fxxvrefQ+x9XxPtb0re0fW6e2r+fT
+51ax0vqGfWOJ9fxknpUveoxdbyhnk/vd1Ydb6wH1gvv2iS+qmndH5fUqQ3o
ufXeR9TxhnpIveShdXoJejy93uF1vKWeTm93WB1vZ8/B3sP4Ol5Mz6X3OqqO
l9Sj6lUfg//WSc3ZfDS2jvfSk+nN9qnjjfTgevGj1XCdeFK96SF1vKaeUe+4
QRMtp4ZTyx1Ux1vqUfWq4+p4Pz2eXu8AeLlOPKJecf86XlEPqZc8so6X1iPr
lSfU8aZ6Wr3twXW8rR5WLzu0jnfT0+ntxtTxlnp4vfzedWoJeja924g63lAP
qZfct47X1NPqbYfX8ZZ6Sr3lfnW8pZ5Ub3oZPLaTmo21m1F1agN6VL3qrnW8
ix5Jr3RpndqONSBrQaPr1BasKVhbGFnH2+pZ9a5NEy+nBleL71FHu+sJ9YZ7
1tH6anq1/V51vKgeQC+g5lf771+iV3av4yX1cHq5YfDCnXheve+GTbS3Gl2t
vlETLaxmVjsPbqLd1chqZT3Vt+73Eq81vkk+1ZPqTfVk37u/S7yaPYnv3P8l
vYor6/Rm7MHYi7miTi/GHoy9GHsyxutFS8at0Vr7XaekdjtDE6+sxlRr2rMx
fvcv+bw9j2/g80p6IdZorU2vW1K7nalJLcCagL2JMU3yjZ5Z73xtnd6VPSt7
V1fX6TXZE7I3dB18dCc9Lntd9r/sL9k/sh92VZ3ekT0oe1Ezcv6+nfSg7UWr
ib3+y1Xu3560tdC/VRm3B+f1Vy3pzVnjNh/1K+ll2ZMyvy1ecj/WyGaGX6iy
X61JzAQ/X2W96wlnhJ+rsj70gDPAz1ZZP9YYpoefqbK+rIHMCr9UZX1YI5kF
frHK/rqv1evWoNXv9tjMb4uVfF9rasav/7Xx15qb8eeXNh/YszOfLlHSy7Mn
aPxbsmS+7WHYW1i7pLdhD8LeyJolvQl7FPZC1irpXVizM1783MZjeyL6lY1K
eiX2IN1/S5U8L3ukPs8BJb3Ta+r0Ju0pej8+Q5/liiW9zj+0+tyej/7k963e
tiem3/pdu9/03Poza7Tmy9lL9IQ1XOP/nCX535qr+ayU6Atrvub/+UriiTVb
9cRcJfrFmrF6YN6S+GFNWf0xR4meubf1f9b49Xt3w1d00lPVfz4IP9pJT0A/
oQfXP4wq2e96XvX16JL9rUdWn44p2f/31PGfemb97f2tP7HnoL94AL6jkx6C
/sKasXplnpJ8Zo1bvTJ3iX6yZm3+nKlEb9xex6/aE9fP3lbHT9sjU7/q6dUb
Y0v0jD1wn9fAkt64PXD32yolvXFr0Ob3aUv0mD1r48tKJb1se+rGn5VLeu3W
pM3/05TkZ2vW6p/pSvSVNW7z+wwleuyOOv7Vnr5+/c7Wb9nT1s9bI1d/zFii
5+Zo0tuxh2EvwxqqtdQPqsQfa+Dqi6lK9JU1RvXDlCV6x5q2emf6Ev1njVx9
MnWJ/ry8zno1Bhkf7mr9nj106w3WqM3H37T6xd8omD+/bfWNNV7z63et/rFH
YH7/vtVH1qjN3/9p87E1W/PP21X0gr9xMJ/9s9Uf1pjNv/9q9Yk9PXtty5f0
w+wJ2ntctqRXaA1f/fJjq+esoatfPmv1ijVz9f3XrZ6yZ2ivc7mSXqI9RXuV
3ZJeoz08e5/LlPT2RjXxG9ZQraXaE1BP/dDqW3sK6qmfWv1mzV098t9W71jD
Vl+8X0Wv3FKnvuNvMlx/1uDVBx+1eseauvrh41afWINXb3zS6pdb+fzZnfzm
wvh+Q516jr+xcH3eWKce5G9AXJ/X1/Fz9uCMR9b41Rv/aPWgNXv1w6etHrNH
oJ75sPVDw5r4S38TYD6cq0kv0R6evbzZ4S076UHai7SGr/57r4oes2avfnq3
ip4c2sSf+hsCf0uwbxN/a81VPWANXz3yThW9d1Odepe/WXF/2hNRb/671bf2
WNQ3b1XRa9asf4YvK8nH1tT/B19aUmu3Bv4TfEnJ87Snbr1s45Jeuz1ue+Or
lfS+rQlPDf+xij+wZj0N/Kcq+swa87Tw01X8hzXu6eA/V9FL9hDUc29W0Wf2
HPQbb1TRj9b4f4QvLqlH2FO3179GSa/dHob1xNeq6EdrcNbiXq2iN+1ZWG94
vYrevLlOvdDf9JifrFn/AF9UUt8Y3cRP23NwPqxhTwU/VaVeYc3D2scTVXoN
9kz0V3+pok/tYakH/1pFf9pjt/dfl/TerYFPCT9Zpf5pj8HftlxZou/2a1J/
8Dcn6rnhTeoL1uTVe/YUfoEvL/Hr/sbka3hyyXrZsc73tybp/dlz+BW+oqT+
YM/e+mJvSS/f36B8BU8qqVfM2aQXbE/c3vj/AX4RKn0=
              "]], 
             Polygon3DBox[CompressedData["
1:eJwV12XcFUUbB+CDSnd3STeIdJd0d4OA9PPQ3d3d3d1doqSdgKSCLyaYL91e
8+H+8L9+9+zu7NmdnZP13ehGUa9FIpFvVUxVvEok0jB5JNInWSSyNUYk8lqh
SGSFSsvysHbso4KRSEl9LdkQto/F01OCtWCD2V4Wn5VirdhQtp8lYHNUbJaa
1WYHHG8ei8vSsrrsEBvIbsv3kkYiOdgsNovF1JeS12T72GwWi6Vitdh+tpAl
YBlYA3aUlXEtbdhwdpAl0jNTvcFSsBpsr765LA5Lw+qwg2wQ+0m+71pystls
PounLx2vxw6zBSw+S8/qsyNsBnudJWfV2R62geVmJVkUu8ymsxdyQlWRbWWr
WHp9+VgH9gnbwUqyGmw0+41tY8XZO2wk+4XtZzVYCzaHPWFbWTFWjY1gP7Pt
4bdj1dko9ivbzIqyKmwYu832sGqsKZvJHrJ9rDprzmazx2wve4c1Y7PYI3aI
NWVd2CoWWz6omrDObCWLJR9Wzdh7bDWLIx9RzVlXtobFldeqHKwY68kuOsc6
lpMVZ73YJbaR5WGlWDS7wjaxvKw068Ousl2sCmvMprP7bD3LxUqw3uw7toZl
Z2+zHuwCO8Aas05sBYspF/Gs1WE92Qb2Qt9qno0VZd3Zt2xneEdYTTaG/c52
s6qsCZvBHrBFLDnLxlqwU2w0+1N+4ZksxJawoexX9ojlYfPYZPaExVVl2UY2
iT2W46gybAMbwn6RHxqbm81lE9kjFluVZuvZYPaz/EBfLjaHLWEpXV8O3oqd
YctZGpabtWXn2TKWmuVibdg5tpSlYjlZa3aWLWYpWHbWkp1mK1k6lpe1Zx+z
KeypHE+VY5vYNPZcTqAqsC1sGPtNfuya87L5bDj7nT1h+dgCNob9xV6ywmwp
G8HusKcsP1vIprJnLL4qzzazUewP+bm+gmwxG8vusddVcbaaTWAP5ViqFFvH
xrMHckxVkq1l49h9+Q1Vgq1hI9ld+ZlzFGCLWCHPWi33pTtfx56y1mwK28x+
YuWMe4vVZb3YRvZSXy9+Wb7peGnYWNaX3WC/s4xsEuvJvmPfs9RsDOvCvmR3
WCI2mPVgl9h1loqNZv3ZD+xPlplNYf3Y9+wuy8Qmsz7sOvuVZWATWRS7ym6z
dGw8i2bX2M8sPZvAPmTjzW0+/4qVlE+pCWwB+5qVknurK/KPxqZl44x9j33F
/mCJ2RDWmX3BfmMJ2SDWlX3N/mJJ2FCWzj3N6BxleT/2KWvPZrDtYTyrZNy7
bDbbFebMqrK2bBrbyn5hFVg7Np1tC/eBVWRt2FS2JcyZlWcd2Ey2I/xOrDLr
yGaxneE3YVVYRpaFVWAD2Zeurzu/KF81j5RsFOvGLrDLLAUbyU6z+cau57dY
zfAtcrxMrBzrzz7Xl4FlZuXZAPYF66T38zAvx0vABgbTN0ff7nCvWTU9J9R7
bBDbw9LKx1RnNoDtYqnD2mJsIlaAvcuOOV5qloQVYp3Z+ywFS8jys47sOEvL
MrAyrC/7jKViiVlB1omdYGlYUlaYdWEnWTz2jfyPeWRlw1l8dou9YkXYdDbA
Nd5kf7MsbCpLrO9flkRVYStYQva3nEhVYstZIvaPnFhVZstYAvajHFFvsWks
CXspZ1QN2XZ23Hm7uOaBbDdLIyfV90rOpBqxbfqSsxj6srAmbCd7X29/Np6d
ZLnkD9RANpF9yPLIJ9UANoF9wHLLR1Un1p/tZKnCM64+C+uNexCfDXCOjuxT
9j8Wj/Vn7dhH7AaLzfqwDuyT8JyxuKxfWMPYWfYde4P1Zm3YOXaFxWRRrBU7
wy6y11kv1padZ9dYLBYd3kv2MfuBxWF9WTL3JWIemXljtoMVZrVZD7aePQ/v
DFvCDofvHqsXnlE2l+0Jaxt7h2Vh+VltNo5dMzYzy8dqsbHsOivIarJubC17
xsqz9mwUO8KSOl4F1oGNZkdZMpaVFWB12Hh2w9g3WUFWl01g37NsrBCrxyay
H1gBVol1YEvYvyw/q8jas8XsH5aJZWUV2SD2FcvBirAGbDK7xbKzwqw+m8Ru
soqsIxvDjrHkYb/FyrO2bCH7S18l1pVNYqdYen01WTSbxT5hb7LSrDUbxg6w
hKwsa8tGsEMsMXub1WdRbDOLhL0ua8Ci2RYWI+xrWT3Wm21ir1xLbdaXzWGf
sexhD8Z6sKnsLMsY9oisO5vCzrAMYY/NothM9jHLGvbErDebwT5iWcKemPVi
09l5ljnsp1lPNo2dY5lYOdaOjWSHWRJWmXVjk9lplo51Y4vZIXaf1WX5WAXW
ji1if5tbblaWtWbz2R+sLhvMFrFvWV5jG7BhbCm7xAqyOmwQW8i+YflYIzaC
LQ/fC1aYNWTD2bLwvrJCrB4bwhazCyw/q8+GsiXhfWUFWAs2kW0I32VWhnVl
i9hBdo/VCescW8D2s39Z7fDtYAvZAfZ/Vou1YpPZprBvYGVZSzaJbQxrESsd
9uxsJFsR1hNWJPxXYOVYG7aA/eleNWdj2ZqwZrFi+nqwpewIe8jqsz5sNTvJ
nrOmLIqtZCfYU9aY1WJ92Gz2KcvGcrLSrCWby+46by5WhrVi89idsPdhq9j7
7BlrYmxftoZ9wF6wZqwfW8s+ZC9Zc9aEjWIrw7efvcWastFsVVgrWVHWky1j
R9kj1oD1YsvZMfaYNQx7KbaCHWdPWCPWjI1hq9l19jbbEt5NVpUNZz+Zx39I
1Ga6
              "]]}]}, {
           EdgeForm[], 
           Directive[
            Specularity[
             GrayLevel[1], 3], 
            RGBColor[0.560181, 0.691569, 0.194885], Lighting -> {{"Ambient", 
               RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
              "Directional", 
               RGBColor[
               0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[
               0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[
               0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
               ImageScaled[{2, 0, 2}]}}], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1: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
vc61Lv4HAh46Lw==
              "]], 
             Polygon3DBox[CompressedData["
1:eJwtmmWgHFXWRR8PieDk3uDumvtgcKfx4O46uMPA4DrDIIO7u7vL4O4WEgKB
QHB312+tb/ePB7XqVne6u6rO2XufmnGbPdbZvbenp+d0/jMO/7+k09NzKduL
lZ6esYf29PyNvwPY/pB9V7eenhtYv53toeybmLX5+fsn2++z70rWF4QPhD+C
r4Ev4/jL2V6CfeOydjl8BbwkPB48J3+7sj2Sfedy/D9Yn5Hthwf19IxYtafn
YvgSeFGO6eXYefjbg+1R7LuA469j/Va2V2HfhH4WeH74ZV7/Oq+/Fr4FXpn1
CVifm7/d2X6Dfefz+mtYv5bt5dg3PmtXw9fAy8ID4bn4243t19l3Hsf/h/Xt
2e5l3ye8/6XwZfDi8Dgcez18G7wqPBF8BXwlvBTcD9629vTsw/bb7LuE92vs
2xd+F74MXgg+CP4Yvha+itdfzfYy7BvA2pXwVfDScH94Xv72ZPtN9l3I8fPB
e8FvwRfB+3L8TGw/wu/xGp93COt7sz6afRez3gfvB78HXwGvAT/OsbPCrw3p
6Zkd3pn1EfDZrC8OHw5/Ad8ELwkfCX8F3wIvAR8BfwnfDC8DX8v7FfgJ3m85
+EZ4MPwUvBJ8Nzw1/Dy8tOcAHgQ/Du/D73UU7/c1fCvvtwrr97E+Lfwi66ex
djk8KfwYvB7rz8Jzw2/B68LPwHPBb8Jrw0/Bc8BvwKvCD8DTwS/BQ+GH4Om9
huAD+P2WZftt9o3i91vKc8D2ZOx7lPWV4XvhaeAX4KM4fhu2/2TfBxx/ILwc
/A78JnwwvDz8Ljwa/pG/GfgO//Ea5vt9C08DHwWvAP8MzwQf6z0HfwdPC/8L
XhH+AZ4ePtprHP4CnhjeF14Y/h6eDv43vBL8EzwjfIzXKDyI33dm+Dh4Nfgb
1qeGj4Q78LJe03zWCj/J91sBvh2eEn4WXhG+E54Kfg4em/cbxOsP8J7g9V/y
fpPA+8GLwAfx/Ttsj+E1b7H2NX+Tsb6/NYf1r+BJ4X96z8Nz8P67wK/B58BH
8vqt2f6D17/Psf+Ct4X/gj+EZ+X4HTn+VfadyfGzwDvAw+Az4JngbeDn4ZPg
GeGt4efgE+F1+fzbwi/AJ8OLsH4I/Cl8PTwzvD38CnwaPAO8FfwsfAK8MHyw
tQG+Dp4a3hR+Aj4Gng3eCR4OnwVPB28BPw0fD08Lbw4/BR8HTw9vCT8D/xee
Bt4MfhI+Fl4A3h/+AL4KnhLeGH4MPhqeCt4Efhz+D/xvfq+/W/Ct0fxei7F+
GNufs+9G1leHH+O3nAUewfk8jOPXZftr9o3h+EPhdeCv4Hfgw+H14G/gd+EN
ef0LbM/nNc/rN4Cfh+f1HoLXh5+D54FHw4fw+rXZ/pJ9b/P6dVh/mu052TeK
9bXgJ+HZ4dfhIzh+fba/Zd97HL8o64fy+T9j3w18/tXgR1mbGR7O8ZeV1D5r
4DB4P17f573OvpG8fn94AfgV+A14n05qiTVlOLwm7/cE27OxbySvP5r17dge
yxrN+o3wHd478CTWPv4Gsm1TnYHP879OzpXn1HN7On8Lsn0++9Zg/Qx4IfgC
eE34VHgB+Nzu/XgmvDB8IbwWfJo9GT4PXr17/84Pn9OtDxexvj78ALwnfOXQ
1M+vuv1mZ/hjvs+q8O98nyvgf3T70Skt/enIbv22P+zB+hccv6bfGd4J/ghe
Bf6N1+8N/wBvBA9k/WR4Dl5/oj2rpR7M1K033t/HD029ObZbHy6A14Xvg3eH
94S/4/02gPvDw0rOtee8H7wj6x/CK8O/8u/vAH8ArwT/Au8Ffw9vCA/g+F3g
T+Ch1gzWL4TX4z3vh/dg/WJ4A/hBeC/4JHh2+AR7LHyKGgU+CV4WPhGeDf6v
PR3+LzxLt34uAZ8AzwofDy8JnwUvAl8Erw1vD7/P51kR/pnP06mpR9afQ1nf
lfVPWV/NHsL6uZ1os3k55neut7PgU+C54F/g8+Ez4SHwn/CF8NlwH9zDe50H
nwHPB//B+tnwqfDc8K/wOfBp8Dzwb/DJndR+e5C96Hj4H73pKfaWY+G94Qm9
5+Dj4H3giawh8DHwXvAE1kz4JPiI3vQUe8sF8Flwg/+CT+ukN9nD7GWndtLb
7Fn2rlM66YX2PHvf5HynDb2n2XcUv9eLnWgnNYxa5u/8jeb3W9qaxO+3O/w5
vIY1j+N3gz+DV7dnsH7J0NR7+8Fh6lV4O/hF+Aj4Ut+z2w8O7/aHvbv6yv5x
eie91x5uLz+jk15uj7XXntnJte89YC+3Zlo7ramV10/B+2/E2qPwv+HLh0Yf
ju72ny3gkRy/KPwZn3dz+DV4EfhTeFN4OLwQ/DF8Yie9055qbz2I9XHY3pF9
U/F+B8JjwzvAU8IHw+PCO3mOrB+d1BJrylisndBJ77Yn25sPYd94bO/sNdJS
U6wdf6+pNfvz9xufZwv2TcLaP+Ff4c29huD3SrSzGnoK+DDW+8O7es7hQ+F+
8C6ec3gzeASvXxj+hO+3EfwiPAQeA9/O5/sf2+vwmsGs3Qbf670GV7VdJ73T
Hm2vvq+T3mrPtffe3UmvtEfaK+/ppFfas+3d93bSu+259t77O+nV9mR78wH8
/c7n2dLfiM/7UCf3sve0WuOuTs6tPdnefDN8l7Ufngy+Bb7b2g8Pgm+F77HW
wwW+A364N9e81/6dnVz7XjNeOw92oj3UMGqZw/kbwPZu3lPqJXh8eA+vSfi2
kl5nz/uA329r1kfBS9iD4W3gN+El7fHwdvB78ArwT/DMNV5Jz7QZ73c26x34
OnscvBX8BscvDn/R1e+neq/3xh9syfrrrC8Gf876OfDyrF/vOVHP1JxLz+lu
8Hmsrwjf6DmEz4VXgG/wHMDnwyvBN/kbwJvAr/L+C8If8f4bw8Pgv8Efwjfx
e91p7+Q1k6oVSrS4mvxH1rdl31vwUvDXQ1LTrG3WwIV4/2NZnxI+1BqmH4Qn
hw+2xsJHw4Phg6zZ8DHwFPAh1mj4OHgq+DBrNLwP/CP/3sbw+OozuLJ+oDUZ
Pmpo9LT6eC79MfwTx29ijdXfwT/Dm1qT4f3gX+DNrMn6hZJaYE2Y037ViTdQ
k6vN/8XxpUSvz91S063t1vQFvX9b7ofFa/y+GlutrYacraWm2Ps/KKk11hC/
y4cltcVr0Hv/05JrU01kbfisRCtZg+zV75fUJmuK3+2jklpjDfC7fVxSG6wR
frdPSmqHmnBy+OoSrainmwK+psTrPQP3h8+Flx8azWItfapEy6gJvFafKdEK
3iPey5+X3Dt6Rr3NdSVe0nNgLf2+5NzYU7xWni/pNdY4e8uoktr3w5D4nYdL
8gjPkVrk9ZJz5zlXS71Wci14zuz9b5ScS2uK2uutklpjTbWXvVlSa9VcaqER
JVpMjWbve6FEu6khvLefLdEW9jzv7edKeqEa0Hvx6RJtqOZSm7xaosW8JuwN
P5RcK15zaseRJdeiGl0veG2Jdjcz0CteWZIlWFPU+veV1BrvSbOFO0ruVWuM
3uD+ktpjjfHefayk9ngP6iUeKLk3vYf1JreX3NvWGL3+/0pqjz1QrX5nSW/0
HrJX/Vhyb1lzzALuLalF9lS9xj0lvdaeajZwd0mvtefoPe4q6UVqNnvt4yVa
zozB7OL6kuxBDWqveqJEm9qjzBJuLuldegizj6tKvIUey2zkihLvpScyS7ih
xCvpocwmbirxVnoos48bS7yVGlgt8GSJNjZDGR++oCRb0ZMPhM8v8epmGhPD
l5RkHXoks5bLS7yTGchE8MUl2YiZxgTwhSVZh5nLhPBFJVmMGste/GCJ9rLm
2bt/KqmF3w1J/vFQid8aty9aWo+gV3ii5fc3k/F+fUhP3ZsMxs/3ZMv50hN6
fb3Qcn1Y0z3/T7WcfzMe788HW35vMx0//8Mt14ue0O/3eMv51VNaL75v6ZX9
u/XkuxYt0q9bbx5puV71xJ6fR1uuLzMyr+/HWq4PPaLn83m49UajeL5/aPGC
A7r177mW30uP7Pl8puX61xN7vl/tJDs1AzQLHN5JFmimYLYwrJMs1ozVrPXl
TrJXMwCzgJc6yfLMZM1mR3bijfX4ev3XOsky9Mx65xGdZBVmHGYdz7bcb3p2
r68HWq4/MzfP9/0t15+Zl9eDGZdZlxnMrPrdlvvBTMjr7emW+99MzvtjPM7/
yb3xVHqrSeGbe9PD7eWT9KWX2/Pt/f364nX1xHrj/n3xznpgvXBPX7yXnlJv
+ZMesjeax/r9c0tvG9St1wP64rX14HrxCeCLe+PR9Grj98Wr6bn13mP3xQvq
+fR+4/TF2+oR9Ypj9cXr6QH1gr198YZ6QL3gwL54dz2+Xv+Xlt5euvX0xxZt
NrDbD39t0Q61W6/+gg/vjWZQO0zWF++qZ9Y7D+qL19fT6m0n7IuWUpOpzSbu
i3ZSM6mdJuqLdlJzqb1KX7yvmYHZQYUf6o0n1htPAb/UG0+kN/q9RcuoedQ+
f7RoITWOWufPFm2jRlIrDe6Ld9Jj6bUm74u30lPprX5r0U6Du/Vivu7993P3
/c0w/PwL1Xw+Pbuff8Ga76sHNItbqUYfm3GZra1ao+f1VGZ/K9foZTM6Zwdr
1fgBMzKzwlVq9LkZnVn30Br9b8Zm9rhajf43g3N2sGaN/jfj/hPeqyb7NoM3
S9uqJpt3xuD9tkXN7MFMz1nH6jV5kJmfs4U1avyIGaRZ/to1et6M/Q94z5rs
Xc+p91ynxl84M7E+bFYzS9m+ZT4zd808wsxVf9pTo/f0XHqvd0vys8EtWu6d
knxv8pZ8a0xJnrdji16et2ZeY6ZqvdmoJms1A9V/b1CTjTojsZ5sXjM7cWZg
vdqkZpbgzMZ6tGXNLMcM1Oxy45ps1IzW+rVhTXZr5ms93LQmCx7Ukq+PLskL
d2rxU/PVzFeceTib2LpmFrJLi59qNfOTfVr80yI186BdW/xiX828Z+cWPzak
Zr6iB9GLzF8zH9qvxS8uVjPfOaAl31uyxk8c2OIvl6rxd/u3+MclavJBMx79
4XI1fvXgFn+6TI3fO6jFXy5d4wcPafF3y9b42X1b/OSiNfMuPZXeau+aWYwZ
7u/wHjX13pndj/BONbM8Zypjw2eUzFrMTH+Dd6/pB85oxoHPLJndOOPohU8v
mX04AxgXPqt0ZwO8/ld4t5r+Yeb9C7xrTb9yhvUzvEtNP3Mm+BO8c03/cmb4
PbxDTb9yBvUdvH1NnuNM7FvrT82szEzSbHKbmlmWmfcP8I41/c9MxV70dknW
MkdLfvFNSV6rB9ILfVsyvzOTU49MWVP/zVit71PU1H89rf1nlpp62tet1791
63Hr9vdfu/XOzNZ+VGr6lRmt/aHW9CszX/vD4Jr+44zFPG78mnzsaX7ffvA5
vF9naDJMs83hJdmmM5cB8HklsxgzY/vT5DX9ZfFuvxunph86QzLfm6Amz1u2
W58H1vTfpbr1t19Nf9ND2//mqOnHZmL2m+Vr6veQrl76pVvvzUzt1wvX9Asz
XPvP32r6k5mZ/WmFmnpvpma/WbGmn+jp7Y+z1/T7pbv9pX9Nf12i2y/Hremv
S3b743g1/dXMQD0wa00/MxOwv89W0++W6fanATV60xmZeenENXmjMzHz0Ylq
8kZnauatE9bkjeu2zMOnqslbx2uZd7xcMr9av2X+O3VNnrphy3x72pq8doOW
+fc0NfnquC3Z30sl88CxW+YpL5bMF824zbpfKZkPzt7i178umdfouc0ivirx
4jO35LFflMzD1GB69y9LtJmZhtnGIyXzjY1a5tHT1eTBG7fMk6evyY83aZk3
z1CTz27bMl+fs2b+bgZiPvtnSTZipm++2VuTN5oZmNf+UZIlLNCSJ/9ekgfv
0DIvmafmeQBnfOalY9Xki6900g985sB65Yx4PPjsktmxM1Lz40lq8tbtWubt
c9U8r7Bpy/x+xpr824zKrGqmmjzTGYn55mQ1eawzUPPySWvyWmem5tF/leTd
r3fSz51523/va/Fnzqz1V96jNw9KBuG9+2pLnmDGpb8c1uKvzXD1l8Nb/LgZ
mX51RIsfN4PTH49s8e9mUPrd1+FlepNp669ea8kbzOj0y1+15BFmuuYnL7f4
QTNT/eq7LXmBmbd+/82WvMCZif707ZY8wpmQ/n9Ut944o9DfvtOSRzhDMR95
H16rNzMh84X3WvIJM3bzjzEt+YczDPOGb1v8oJmxec43LX7czNl86OuWfMGM
2vzopRb/bKatfx/VSb13JmV/e6UlvzED15/f3uKffWbAfuY14LMr3pNeG16z
PjviPey1fFuL33WGbz/7pCVfMlMzz/i0JV8yUzOf+awlvzJTM495shM96DMr
6q0vWvIiM2/zmA9a8ixnWOYnH7XkYc7IzGc+bMnLnFFZz99qyX+caenfP2/J
x8zMzY8+bsnDzAjNh0a35C/O4Myv3mjJa8xo/z+rHZLnX24peX7G5yMuG5Qe
bi83/320O981S3m+Ez3pTMN+6jMij3Tnp+bD1iifXTDDsnZZ88Z081JrofO5
97rzLLMj/82Hu/NWP8tznehZn0lRjz3TiX72GR713+Od6HWfMVEfPt2JHvYZ
HfXyU53oZZ/BUU8+24l+95kX9fUjneh/Z/zqRWvmu9282lr6WCf63pm7+vLR
TvyAzwioX9XIPrtjjVY7q4m/7c4f1cpqYmff1ny18tR9eRbFmarzjin7Mv9w
ZuPsxhmq/mb9mtnqVKy/05sZq+xMRz+0Xs3x/sZm8beW/PbOqP3tLi2ZP5tZ
3joomaZZpnn1sG6+bVZmTX+lm29b69Xs33TnpWp5NbKzdXuM2tke47MsZjL2
Hv8NZ90+zzKsOy/33vAeMRtyXvNdd55qVmuG4+zca8xsx0zz5e48wazzBX7f
Mb15pkm99iWv2ao3MxLzyzta8kGfCVJfmin7LJk9waxZTe2zU3oYtbYa12e7
rPFqX+elel81idrkjU70vs8c6b/UyM5+1OxqZzW3s3k9jFpcje1sRc2v9laD
O29w/qw2V+M733CeofZX0zsr0GOo9fUIPhtmT9E7OK/Qa6t51D72aJ+t0EPZ
u9WcPiug51KL2qN9dkUPY+9WgzoPcx6nNrVHOju1p9s7X2zJG51pmJfqWXyW
zZ6sl3mY7/9yb55J0X+Z99sL7Alm1Xoenx2zJ+qF9CTOnvQ4epUnOvG7PmOj
v1KjOAtWA6ld7mzJK30GSL1vD3U26PMJ9ta7Wnqfz3TZn50PmdWomdXOaiZn
1WpctZSaw1m0GkwtYo92Vm1PtnfreZyF6dn0QmoEnx1UU6kd1FjOrtW0ai81
irNke7jaRc3lrFxNpxZT0zgbVzOode5uuZfs2fZuPa3PIqqJ9Lr3tOTZ3nPe
e3pKn91TI+k19YQ+e6dG0ive2zIf8Jko9fj/AfivieE=
              "]], 
             Polygon3DBox[CompressedData["
1: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
zMtT0SfYs/Ee7Ck2MvoYe4X9BwRPoZ0=
              "]]}]}, {
           EdgeForm[], 
           Directive[
            Specularity[
             GrayLevel[1], 6], 
            RGBColor[0.922526, 0.385626, 0.209179], Lighting -> {{"Ambient", 
               RGBColor[0.30756835, 0.18676585, 0.147065275]}, {"Directional", 
               RGBColor[0.2306315, 0.0964065, 0.05229475], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               GrayLevel[0.3], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[0.2306315, 0.0964065, 0.05229475], 
               ImageScaled[{2, 0, 2}]}}], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1: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
9dgneNVIdl5QPSiPWv92rFctZGcQo73qCjv7uOvV+7DzxKFBWdl6yJO9ajM7
7xjuVe/ZecqQoAxnPcyBQXnReqo3vHordtZz0as+sV76Ba+6wvrz57xqBuvP
3/Tqodi53jiv+s3OO2559W7sXHJQUK61PvDgoFxrfdTxXjWena3M96qB7exm
lFctZ2cis7zqQztnmepVT9oZTYFk7Zu2f53G63EZ/q15XnW1nR9N86qf7azq
X6962M6PpnvV2HZuNdOrlrbzqRFe9ZWdWfznVSfb+dRsr9rYzpJue/V97Mx0
kldtbOdHI73qNzvjmOtV59tZ2B2v/pSdddYOqhmsf546qGdkZ7tzvOp2Oz+a
4lU/21nVda+el53XnPCqM+1c5rJXT8H+3m5Bedf6xl2C8rH1k58NytDWQ+4b
lPUtG5z3qgntzOWsV71n5yaPBWVQ69/Ggvpfdhb8RFCOt572k0FZ33r1vYPq
Cuur9wmqGSzb9AjK3Nbf7hlUb1i/vV5QfrK+Yveg3G+98bpBWcp6jL2Cagzr
59cJqsfsXOOSV81sZz1dg+oE66Uv8urj2Bno40E1oZ2tpArq99k5+4CgusjO
DhZ41cx2PtUwKMtaH7hfUB1lZxMNgrKv9Y2vefXa7FysUVANYP3zK179BTuH
uurVj7Dzr4Ve/SY7q+0fVLPZ+cXTQXWRnS88E1TPWD+/VlBNaGconYNqMDsT
eSqotrGzjPpB+dJ6tv8DT8vhiA==
              "]], 
             Polygon3DBox[CompressedData["
1:eJw1mmWg3VTahS+9uFsStFClhSJJW6RAqVy0Fyvu7u4wMAMMg7vbDO7u7u7u
Di3FrUyh+Pc8s/L9OJAnO+ee02Tv911r7dNr6z3G7t6jo6PjDP4zJf8f1tXR
Mb6zo2PVsqNjqu6OjqXhT+CV4U54GXgcvAo8JTx5dEfH4fDXRUfHo2M6OkYw
/iW8JuMzMD4K/hpeG54JXh7+DO6Gp4X/4P1HwT/w/qd4/0jGv4LXYnxGxkfD
38Bj4ZnhTvgM+E+uf4HrV4C/gNdgfHrGl4I/hleCe8A1/BY8HP6d6xv4bXgF
+A+4Az4V/o2/9yw8FXwW3MH4S/Bc8B1wT3gc/Bff9xj4R65/Bh7K+HvwKMY7
+LzXODc9x5dw7r6aP8P4bRzPx7mPGXub1ywcX8m5RxjvwfjpHP/B33uesSng
0+Df4efg/3qfeZ3PuTu4flHGX+N4GOcmM74k/D48Gp6Cz3+dczNwfCnnHqjz
mX727fBL8OJc/wbHy3HuV8aWgN+El4d/gz/iNW+Z7/wi178DzwpfBT8KfwjP
A98KvwAvxvtf53hZzv3C2BD4XXgk/Bf8Fq+ZOb6Ccw9z/WDG3+F4BOf+ZOw9
XrNzfA3nHmf8T+7v0RxP5N//NGPbdufffx7nLmf8d8aP5Ph7xp9kfH3OLQuf
zzXLc+0G8HLwv+Hh8Ibw8vB/4BWcDz4T+EC4V3eeqc/2Ts694v3hNSfH+3Nu
AcY/ZXxBju/m3GuMLcxrFo735tz8jDdwBR8E94aXgAv4AHhBeDF4Dng/uGd3
5phzzWd8HWNH8NrRfzvj6zF+ILwZfC88Fj4S3hl+Et4AftE5WGSO3szYcbz2
4Pg5xjftzpx17p7NuVvqzCnnlmvmxjpzyrnlnLsBPorXLhw/xXs25P0HwZs7
d+F14MHwXPDf4D7w3+At4PvhdeF/wTvBT8DrwwfAm8L3wGvDS8Lzwn+H+8ND
4XngQ+B+8BB4bvhguG931qxr15rzO2Pr8RrG8XmcW876A/eED4MHwqv5zOBT
4CW7U6OsVdaoPxlbi9dQjs/k3FKMreIagk+Ch8Bj4aXgs+FlrB/wfPA/4IXg
deCl4XPgYfDa8JLwWfDS8LrwMvC58LLw0fCu8NPwRnA/eHp4N3gueCF4RngP
eB7rKzw/fCg8AB4IzwzvBc/n/akoURx/yLlfGevNaxqOd+ZcwfiC8FTwjvAc
8ALwlPAO8OxwT7gT3h6eDe4LTwfvCldwf3gGeHd4bngAPBO8Jzwv3AueGt4J
nhPuA08L7wKX8C+sx3/C3zCnHmNuHcP4bvAzjG/cnRptrT6Tczf53fj3zMnY
dc5p/y3Ug3M47sG5V7h2JvjyztQMa8e08LlwJ/yqtbMrtdOaZG36hNf8ZWr0
y95bxi/jeCbOvWkt7EotnBF+A14W/hReDZ6a7/eyNbfMd7i1zmd0tvXmdvh9
eA74Wue4a5n338zx3Jz7gLE54Vs6UxOtjVN25d/qGnWt/sr9OQL+Fn7ctQ//
C/4OfgKeuitr1e/gdym6UlutwdZiP8PP8jOe4/Nn70qt9Dv53WbuSm21p9hb
pu9K77EH2Ave5TUbx1dz7jHeP1tXjq251t5Zu1LbvcZrp4Mv7kwPs5dZY621
9uiLef81vE7m+EvGd+rOM/PZ+YxuY2wjXsM5voBzIxjfGF4BvhAeCY/n///l
7x3X1vNtea3K8VWcX5HxbeBV4CvhLnhreGX4Cng0vD+8CXw3vFZ35pxzz3t8
AWP78dqY47sYX5PxreCV/Cx4FLyv3xG+E14DPhbeHX4W3gTeDl4NvhpeCd4B
7oavhVfpTk+yN6kBLrU281rTWsr4mO5oGLWMPewSayOvNTi+nvHVuvPMffb2
sIus/bxWtxcwvmp3NIXa4ljOXcbY3rw2cC4y3s349vAY+Bp4ZXgfeEP4Dnj1
7swx55pz7MI6mkxt5hr9t72R5zuB4zFcPw3X/8R83B/+hGse5tqqK1rBNeXa
qprU2xOL1IM5mtTvI4vUj9mb1O8jitSDskk9O75IfZuzSf0/ukj969Ok/v6n
SH0tmtTbY4vUn35N6vmFRer7rE3666FF6s/MTfrrwUXqWy94Efj8Iv1kQXhh
+0WRfjJTk35+UJH6Nxe8AHxykfo6W5P+dniRejpLE33w9yL1tC+8mHOrSH3u
DQ/yXhbpZ0s3eR53F+lPg5vMt9uK9JuBTfrLFfCi6oEm+uRauLEfNOlPl8GL
wAs36TdXwovBg5r0v6vhJeBFmvSbq+DF4UWb6J9r4Fo9Ao+AbyzSDwc06VeX
w4PgxZvooevgweqVJuv1+iL9cEiT9XZ7kf7WH17CuQovbH9ssj7uKtLvhjZZ
r3cU6Z91k/V+AzzU/t9kfd9ZpH9u1GTtWwM2s1/BA+2fRfRFT3iA/baInhrZ
ZD0/WaQ+jGiyfp8oUh+Wa7L+7i9Sb1Zosh4eL1IvVmuin94ost7HNNE7bxap
D8ObrK/HitSH7ib9+60i9WV5eC34gSL1a3QTffN0kfW3Mrwl/HyR9b9SE330
XJH1PqpJvXqqSD1ZsYm+erbIel+lif57rcj67mqi/54pUm9WbaKvXi+yvueG
F4RPLaI/N4APtR4XqV/rwX+HPy+iP4Y1qS/3FtHDyzSpZ/cU0cvLNqlP9xXR
x/PDC8FnF9HH88B94TOK6Nf54P7wWUX07bxwP/jMInp5ffgf8BdF+v/a8EHw
+CL6ds0mevXdIvpyQ/gw+Ksi+nUd+GB4QhG9u0aT+vxOET28LnwI/FkRvbp6
E73xdhG9uRa8J/xeEX06Fv4b/GkRfTqc+vY5vDr1bTrrJ+MfwSvCB8B7wC/A
Q+B94I+pj4Ot9bz/Ovsx3Bs+Hb4a/hCu7Y3wNfD7cC/4NPgqeCE+7xm45u9N
hPvBT8GLw9/DP3P9AfA4rn8E7sv4k/BijH+nH2O8sZcwfq29A94OfgW+R38I
7wt/BD9orYe3hl+E79RfwbPB+8FXwl/BW8EvwHfYK+Bt4Zfhu+318Pbwq/C9
9lZ4G/gl+C54Erwf/DH8ENyH7/sEvCjf91t4APws3MA/wgvAj8AD4S/1WvDD
8AD4C70pfA/cG/5sTDSaWk0N96B+i/GXOV6Kc5MYGwS/Ci8D/zwmGk+tp2Z8
iOv7M/40x0tw7ge1U1e83QLweL1tV7xcL3gC3At+DF4E/hoeCD8HD1an6HXh
uzrjAfWCveHH4UHwN/Ai8Cvw0vBPalH4XrgP/LneEX4UXhj+Ct67iZZX0+/v
+q7TX04uUy8ncn/3hj/g/t7P9Vtw/Snwr/A2jG8GnwRPhrdSr8AXwdO1emxT
+ET4Z8a3hDdvotd+gbeGd4Hvh/ty/R7wJvAJ8E+MbwHvCj8A92N8T/UYfAE8
DbyDegr+NzwVvB28F/wSvCS8H7wn/CI8FN4X3rJJdqGH18vvC38PrwsfCG8L
XwhPC++o3oP/A08Nb69+hI+HJ/H9Nod/5P7sA38IP8D92Y3xB+H+XL8X4zvC
N8AlvCv8JdevBz/K9bdz/Xh4NHwLfCP8Bbwu/Ah8m34CHgnfBF8Pfwp3wbfC
N6nt4L3g9+H74HHwKPhm+AZ4dz7/IXghPn9vPv9zxteBH2b8Vsa7mA/fwusw
Pot6rokX0hPtrN6Er4cLeBf4M94/1rnN+2/h/TsxfiNcMb4b4zM2yRcOYHxW
eALXr+3agW/m+p0Zvwmei+t3t1/V0S8nlun/ZkZmRx84RxgbUaeeH1VGL0yu
k781VfItr/H7D67yXueIc8U59VSdDMX6NXOVbMXMyfUyY5UsSv/n2nCN6KfU
uHqHcWW0r8/QZ+kcfLrOHHWu3tcZv/hznTyxrpIvmaHod74qk614z733zoln
GPtvnXxwsSr531+ec71WyS+n4f78Do+okjdOC/8Bj6ySV5pBTHR+V8kmvq/j
Hxeukr9NqpN3Ll4lT/yhjr5epEoeNrFO3jmoSt72Y53+s2iVvO2nOnnnElXy
MD2ytezbMt7ZzMZa+E2ZLMfMRj/7dZksxwzR+vZX6/9c4651a8S5dWqEtcKa
cE6dGmItsSacVyfDsz5NX8W/6jGt19NV8Z56Ov3ixNafm+Hptf9s/bmZoPWx
o4of12NaX6eo4ifN9KzvPar4TZ+5z76zin81Y7T+zlDF7+pRzMbeK+NdzLD0
+9+Xybb0XHr1T8p4MT2W/vnjMt5rOp7fn/CoKnmxntCs6/0yXlHPpT//sIwX
0/Prf39o/beZmn76uzL+XQ9ldvZBGW+lBzZ7+6iMN56az/sNXqFK3m3m9KP9
qkoWNRXjv8LDq+TTw+voiSPK6Ac9jF5Gj2J24xp2Lc8Oz1dnjbvWrWl316kR
c7Z5hHmwNaJo85Q766xx17o14h7/7XW86qtl9IU10dpojbmrTk2xtlijdq9T
o6xV1sQ96tQQa4k1aFf9ehktoaaYv04NtZZaI7eoUwOthdbYzevUUGupNXJT
53IZb6RH0pubb5tlmGmYt9xWRouryfW+3XXee2oZfWWNtlZb0/fUe9f57NPL
6DNrvLV+fc7tpfeu811OK6OfzB8627zC2jOhTl7dq4o+G1dnv6BnFf31XZ39
kIFV9MbXdbLJharokffq9P+5qugZMyj10ExV/POUPP9f4OWr6M0e8M/wslX8
dyc8GV6uyn5IBzwJXqbK/ssU8E/wsCp51Qd19M/cVfTUG3X01uxV9NOrdfTl
LFX0jpm1emjWKvrlszr7Fb2r6LNP6+TxC1bRS5/U2Q+Yv4qe+6hOvj9vFX00
vs7+yQJV9OvndfYf+lTRSx/W2Z+Yp4reeb2O/p2tit56s46+mqOKPhpWx48f
XsZfflxnf2K+KvpKjaHWUENcUWeOOFd+LJPVqfnMK/4oowX1mHpNPanZrR5Y
L6wnNSvWo+pV9bhmv3ogvZAe3r0EPbxeXo9r9qzH1evqYc167Yl6aT27vVKP
rlfX44+qo+H0vnpqtZ0ZgPN9xc5k0WeU0RLOWeeuHvv2dj2YLevR9Gp6NPcy
zFTMVswozF7NJMwmzEDMfs1EzEbMLMxqzVjMWsxozJ7NFMwWhlij6nhGvaP3
3L0MMxCzEDMes2czF7MXNalZuxmOWY4Zjdm1GZBZkBmPWbGZjdmNGY9ZshmK
WYqZjVn1v8p4J2uetc/MwuzCjGN0HQ2oFvyuM/l2F899G/gve1ITTam2VFO+
UycPVzupQdQialy1rhr27DoaUi2pZr26jiZWG6sxzS7VlGpLNeyVdTSt2lbN
eVUdzap21QO+7f2t4gWcs85dPaHe8Hn4rTqeUe+opv+yjqYyWzHjUWuZ2Zjd
mNl01clYzFrMYNyLMAMyCzLDWalORmRWZGYzsk6mY7ZjBrRiHQ2sFjZDObOO
h+hq9dsXcN8qes416dpU06vt1dBn1clczF7MF8+oo2lvbefnlnUyPbM9Mz33
CvT8ev8+ndnLMvMw+zDTMIs0M3msrbdbtfX90bY++/fMYB5v67lZrhmIWYiZ
jlmrmY7ZjpmOWbAeXi9vBuNekhmMWYyZjdmvmY/ZjxnP/7Li7mQlZjJmtWYq
ZitmKGarZjBmMWYuZrFmKGYpZi5mp+7Rmq3/Wibvds/U/P23Mvm5HtS90N/L
eFP73768v0fbn80kzCbMINy7M2M0a1ST92z7mV56+//vR93Josx0zKLNoMyi
zKjMrs2AzIJ2aPufmZLZkpmSWbM10izOjNTaaWZidmIG5F6gmY/ZjxmJe1Fm
aGZpZjruVZrRmNWY6bjXaYZjlqPmd+/SzNTs1EzOvbl9y2QdZh6D6mSsZq1m
rO7lmYGahZrButdnpmu2q8dwL83M1OzUzNe9LjMlsyUzJPdizfzM/sz83Gs0
gzKLMrNy79ZMz2zPjMq9BTMfsx8zIvcuzZjMmsy83Ht6rUx+ruZR+5gxmTWZ
Ibm3aUZmVmZGZfZvRmRWZCbl3qYZkVmRmZV7m2Z+Zn9mjO5lPFYmqzGz+Wed
TMts68DO7OWaWZldmTm5d+s9897tUyZ/+bbO3uSAKnnBcnXynX+WyYuseda+
0VX8ofWnb+uvrDd6DH+7YM/We7iG/a6vl1nbaiSzKP+m2knNZh50Yxkt53fY
r9WXfjdrrrVraJVabE3xu79RptbokfythxpI76SH8bcDagS9jR7MvX41hd7M
NeHa2K6MltWDeK/fKeNN1DDuvemR1DZ6Mn+boabQq6k5zaNuLqNFrenO5bfK
1Ho1pFr0ojLaUo2pdr24jPa0pziXji3Ta9RkZk16GrWaGlVte0kZ7WpNdC69
WaZWqkn6tH7Teq/GNG+7pYz2dA27lm8tozX/lyGV8ThqHTVY79bfvtGunwPa
emD9VGObp91URnvrUca2/Uzv4jNfp+2HzgU1vL3rl9a/OwecC0WVXqQnVvtP
VcUr65n1CtNU8dJqQLMvPZraUE/qbzXUWHpVNa1ZmppNras+uazVN+oVNfWl
rX5Qr9gT9eZllV5pT9ZrV1V6tZrPrEtPpxZUc1/S9n+1uBmB3mPqKtmBnsnf
CumB9VJ6dr3LtFW8vGvitLb+uFbU0Ga3enq1tZ7HXv5Tm5foidSKk9o8xZ5o
L+9Xtb2yit4wg5qhiQey9//c5kV6fn+rZOZhFqBntra8XcZLq8n9bZQZgFrd
zMDfKplJmCWo4f1tkx5fba/Gd6/NDEDtr4Y2azQTUVvr6dQqk9s8R4/ob5nM
FPSOagq1T/8qWkMNYW0+roy2sMfaay8t08vVMHr9z8toGzWO2uizMtrHPb5P
2vp1GmOH1clzHy6T/1rTHHu0TP6rZxzX1jfr6eF19gsfKZM/H1onf36oTD6s
RldrTCij3fUIZt16EL2DHsNsVk+g9zCDsHe9WyabOKRO/vlAmXzaPWK1zqdl
8kM9mlm6nmdCW+/Ht/XaWmgmbTbtdzy1jua11x1ZRgurqew9R5fRWmYw/vZJ
z2c2Y8Y1qtVPZl9mMv5WSY9oVmPmaPbov/nkOhmgWaDf+YQ6Gs5eeEIZbacn
GtzqRfWYGb1Zvff8lDoZr1mvmeZJdTSr2c0XZbSsnsLefUwZr6Fna1o9qpdT
E9qLjy+jFfWEZu1mOnpF/6Z74y+U+Sx7jlm1HtJe5DN8pdUnPlufoVm/Ndhn
a8blb830gGZfel6zeD2vXliPZhau59W76Zndu9CDjmv75Wut3rI/OqdebfWN
c8175t7082XupZnI6a3e1C/oH85o9YrP0nvu3vaLZZ7FP+rcuwfL7Hc4h93L
sGY7t9XDQ1o9by3wGvdGrMG+12fgXvxLZZ6Nc869EXumc1EP7N6Gmabe2Dnl
byFeLjPXXEPu9b9SZm39H52hlJo=
              "]], 
             Polygon3DBox[CompressedData["
1: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
P5KbxuawKnLfs5WsDuvA/gM2mHbm
              "]]}]}, {
           EdgeForm[], 
           Directive[
            Specularity[
             GrayLevel[1], 6], 
            RGBColor[0.528488, 0.470624, 0.701351], Lighting -> {{"Ambient", 
               RGBColor[0.41139519999999996`, 0.3882496, 0.4805404]}, {
              "Directional", 
               RGBColor[0.264244, 0.235312, 0.3506755], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               Hue[0.7, 1, 1], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[0.264244, 0.235312, 0.3506755], 
               ImageScaled[{2, 0, 2}]}}], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1: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
Tr3MYXxlWnnwGL46rZpkBf7OKS+vwt875eueXvPSZnzfp4LmSmvxM0GzufWx
8oDVKlc6xW+rKyKneG+1kHPKD1bD5HOal1oNU8gpV1jtlNcpx1q9dK3T97c6
NpvTXbSaM6vT52Z1bE6n3GI1QC6nnGB1TkGnXGG1WW6nWsRmsxlOv5/Vw1mc
covVGHmc8rnVPGmnvGc1WH6n3Gi1WQGn2tFqziWR4ofVnIsj3XWrGxdFigFW
ry6IdNet7p2XOT+x+rwmLupUt9fAbzjV/E0yZ6fWv3eJlG+tfrvaqaa3+r9Z
pPxs9dtVFkeceoSmPK/h1O93wjWdaunOuLpT798xUqyyent+pLrG6qjrnM7I
Rfyg0123Oj/lVF9aPXmbU479C9/hlP+tdr3VKWb/je90imFWJ/8X6VxbL384
Uvyz3v/rSPHb+v1vIp1H67s/iRSrbLbwXaS6wOrkW5x6eJstfBEpxttM4Cje
6DR/OBYpbtl84EikeGY9y+VINYXVrjc71VBWQ97odD8u4Yec7u4F/IBTjDmL
73W63+fwfU535Ty+3yk+/YPvdrrr/+KHnWruVHY+J6fYdpnnsVOdZbXoTU71
l9XYRZzqRKtFb3CqH612vd4pFp7B9zjdy/+wd4qFp/FdTnnM+qCFkWKqzQ02
RYoZNk/YjNslOgfWP7bHjZ36qU64mVOf1RE3dZoRdcBNnGZEbROdJ+tDWyU6
o9Zvtk505qzfbJPobFnfemXQnmAgcSB/0P5gEG6Z6KxbX5knaH/Qj+f/JtrN
dMCXEu1g2uP/Eu1mOuJ8QTuPARZbEs0Km+A/E80cLRadSTTja4k74w5O8/ko
aHZpPXg6aBZsPf7TQTP3dfh0ollkC/x3otmlzTT+SjSvtFnHP4nmkjbTOJ9o
X9IGX0g0l2yL/0g0D22KLybao7TD1wTNB21WcDbRjLIVPpdoRtkaXxU0Jx2M
CwTNN202UjBoRmnzE5tZ2OxiSObc23rYKZHqEeuvJ0fqM6znnRTpPbC+dXyk
z9Z2GYMifba2mxgY6SzY/mJApLNgu4/BkXppmxFtiZS3bWa1MVI+tB55YqTc
bjOuDZHqL5uPrY1UN9lca32kesrmY+si9TrWg0/A7+IHcWN8KtEMtzG/4+VE
e7tOOHfQrqgvzhW0Q+qD8wbtnPrjQkHzXJvhFA6aydrs5eqgHYDNmp4N2hVt
wFmD9nZdcSpot9cZXxG0u+qJcwTt23rhLEH7uS44Z9DP3RtnBO0Iu+NsQXvB
bjh70M6vB+7jtdezczUpUZyyGWP3zPmM5YGi/H/HMtRTvBxrv2M9xUuxcqLl
xj+8djpWV/fz2j/aOX84Vi6znOZj7QqtZ3mE174M9TVxrL2k9TW/e+2DrCc6
5bXTsT5ivNeOz37+EZnzJcszI712dnY3R3nt7Ow+jvba/dlnNNZrF2nvzySv
Wbq9hxO8Zv72/kz0mtXbezLOa4do7/9tvDZkqH+pGStmWux80+5Shnq0N2Ll
Hcs/BWLty+xzvCrWHs3qjatj7fus5yoYa09nPVQhXgsy1IPkjzUftrn0zbHm
EjYrLhJrN2e9262xdmr/78ssRuMSNsP32m/aObFZs821ivP8b6+dnfVoWWPt
H60eyxZrz2h10Z9euznrj7LE2kVaP5hh71GG4s9lr52m9YCn8YAM9Yn/eeU7
y3upWLtO6wH/8trlWa832WvPZWf1llg7U+tV53ntbixmtvPaiVhNOwQ/lKEY
u9Brt2UxZ7bXLsPu2szM3YHVIG28djHWfw32urMW0zp47Yutru7otZex2ri9
187FauPOXvt0u9c9vPbvFhvbeu1irPbu5LVrtnlIa699kPV3rbz2R1arD/Da
oVuc7IJvzlD8H+i1a7Y4vMBrl2e5Zr7Xvs9y0BT8Qobu7CCvHbrF6rle+yyL
IbO89kEWW+Z47XEsN/X3+m8ALFb/D7cGVDM=
              "]], 
             Polygon3DBox[CompressedData["
1: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
arZLW9Fsajc12rRWNJpaTU02tRUNpZ5ZrxN/jG9HdeKL8UrNoHZQc4xvRcOr
5f/mGoG/gw+C/wSfCX+vBoH/DJ8FfwMfAK8AD4YL1xsB7wDf1oqecu24htS3
CzM+DN4OvgVeCD4f3ha+GV4QPg/epjv6a341KLwJfBW8JDwZ3h9+BJ5PDdqI
Jr0SXhqeAh8IPwYvoMaFN4WvhpvwSHhH+HZ4cXgMvCt8N7wYPBreBb4LXhQe
Be8M3wkvAl8A7wTfAf++R+oh67uH4AY8HN4evhVeAr6okXrpYfiUklxqTn2w
FY2qVh3YiSfGAGNBX/gN+E/wDXAf+LVWNLfaWw1/RSs1gbWBNcFl8Bc8j306
+es0+PN28pn5yXrG+mavTv6yflm+R+KZ8ct67ivO3w/+A3w6/CW8L7wcPBD+
M+ffCB8Hvw7/Ab4UPhR+Cl4WngofDD8B/xW+uZEY9yb8R/h6uDf8Kvw3+BZj
N/wWvBR8MXwA/Ci8gpq0E29fgZeBL4EPgh+Hl4OnwYfAT3bqU+Ox9az1tpp8
4Y7e/U+VmmqhTr5dt5OPFuzUj+anN/i9y8KfwXvCVxmDud418ApqiSq/3Wfi
s7m4ym/3O/hdzJHmSnPKdD7/sirP0nvmvZsCH9ade+a9M+eYe8xJ97WSo4Z0
1ssD8Iol2k6N1wu+osq98p56b0dWWWvOOefeiCpzzzXmWptU5V65JlwbF1V5
Nt5D7+XkKvfOZ+az8/PWY39GjvXk865k/ITuPCOflRpILaRmWsDavspacs27
9qdVmas+Y5/11CrP2mfoszTnmnvNyfdz/d5VYokxxljTt0rsMUeZq46rkqvM
KeaWPlVyizHIWHRsldhkTDW2Hg//ozs5xFxyZJW14BpwLbj+zuvEG9fr0VVi
lznMXNazytx3zjv3L6ky91wjrhU1wNBOfHL9ns/4Zt2JMcaa86rEGmOWsWto
ldhljDJWHVVlLblGXau9quRO15xr75gqucGY+v/YWiU3m5PNzcOrxE5jprFz
WJXf4m8yduqh6KXoccxUxePQ69DDmLGKJ6E3Yc37eSs1r7WvNfJnrdTI1srW
0J+24nnofeihzFBFE6mNrBm/bKVmtHbU8/iiFU9Gb0YN9VUrnovei55OVxUP
SC9oJPxrKx7IzB19aD2hZ6V3pcdVVfG4ZunoxVaV+qO7ow+tF/VUluusV+vZ
a60luP4I+JdWPCS9JD2o31qpf5ft1Efq7VFVYrk5wdzwTEk9ar27RBVNrbZW
sy8NT6iSe4zpxvaxVXKHOcPcMaZK7jBnmDtGV8kd5gxzhzWJtYk1yXyMTawS
68xp5jY1t9p7/s76syaxNrGmmb+KZle7Wy8vCV9YJdcZM42d1jjWOtY4v6tS
A1gLWCMsU6XmsPawBlhK7c/9+Be/+bdOvJtu7cn4JfA88D5VtJYaTC02vkou
M+eZ+6yhrKWmcmxexsax7dadnGpu9XlM78wnn/dudWKzMVrtrIZQy25Ssp59
hsbqWZp5tuYM49OoknhnjjDeji6JR4tV8SqegKdZG1ep/Z+CL2snRxn/RpbE
X2vmH/xtzdTS1sQ/ea+aqZXNWT6vwSXx0Bzj/BhUEi/VDGrpPiXzRY9Ebf96
iXeihlF7HV2yPtVA5ubeJfFRTaB2O7YkXi9fxbt4Cb6yHc1iPD29JF6rkdR2
x5TEc3OQ3svLJblJz1Lv4ZUSL3O5Kt7Di/AV7WgmtfChJfFIjaTWO6QkHv1f
s8H/LYk35ny1/UYl8cicrzbfsCQeqqHU2oeVxDs1v7XCxiXxU83hfNmgJL6p
4dSuvUrikxrD+XN+STzV8/genrsZL0TNY366oEQLqXmc3yNK8q053vV1Rkm+
XbyKd/MkfGk7GsT1eGZJflUzuF6HleQfNYfrbXhJfnKNu9afhi9vR5NbS7VL
8slCagBzBXxROxpQrdm3ZH33Yj5Pgl9zzVirw+N9no2cryek9/FxiVfUk/EL
4VcZn9LOmnBtXFcSG49ifKLPk/GL2/HY9EY+KvHeJrO93Mg5jc76Nf7pMe9V
5W/8Wz+jVImRxsq3S7w2PTxr87dKvD1jtvrkkpJYbkxXq00tifXGcPXGtJLY
rqel1/JBiddlTDV3XF8Sa/Xc9AbeLPHijuT3TOjOd/a7z9Spr28uyVXeI++V
53ivF63iJT3O+NR2crT5bUBJvFETqncGlsQ7awD1zmkl8VONbX48tSQ+e4+u
hh8u+Xw9Q72un0u8RDW++blfSfxW06utjyuJ14tU8fYfK3m+1qAzwSuVxENz
mrn0hpJcZ440F95YkjvNuebKm0pysR6X3t6PJd6XOVg9OaUkN1uDqB+OL4mf
zSq9iUdL5ovPVC36SMmz1lPTS/ypxGuzB6EX82pJb8Ia31p7sxI9pQer9/ZL
iTdrjlefTS7J/XqOX8OzN+NFqgnUcxeXaIXv4CHwZfD5jM/N+VPgu61r4G8Y
Pxe+VJ3VTk2jfrqopNaxplav7VRSa+s5fgvP2YwXaY2s/tqupHa2xlaf7VBS
e1ujqgd3LaldrcnVSzuW1Op6nr/CCzTjherB6Z3O2Iw3Z02t3ty5pNa2ZldP
7lJSy+sx6X12NeM9WSOoPb4tqR30gPVefyvxhvU89aJeK/FC9ZD1dt4o8Zbt
cem9ztBM78seld7dTM30rvQ4v4Jna8b7nLnKWriFvx/djkZRq3Q34xXqeX4J
z9qMF/o9338ofDnnD2tHM5nr3y/RUmomtct7JVpq9irx6nZ4XDs1kVrru5Ja
aQ74IvgOeDzjc8KT4TvhCfBsVWLLbfDYdjxtvetfS7zuWavEplvhMe1oOrXG
uyVaTw9Bb6pHid7X81Cfb1PihejBqIe3L/Fm9Izmhf9T4iXpec0Jr1Xihelx
zQGvWeJ96Sl/B8/VjNesZ/4zPF8zXroe1jzwuiXelh73j/C8zXjfemCzwauX
eGN6UjPDq5R4VXpes8Crlnhhelx6c5uW1Cej2vF/rOfVn9bcelfrl9Qfaiq1
1T3wpHY8Lr2xLUrqFT2xueF1SrwyPbhZ4dVK9L8e3+zwGiXen57gXPDaJV6h
no1e3eYlXs5c5gT4LnhiOx6B3taBJd6BHvIv8PzNeMt6SnpdB5R4TWpCteGC
zdTGP1hjw1cwPrwdT1Gv6qASr9HfrPa+puRe6MFZz+1W4s3puVn/bFvixelZ
6aXtX+Jl6Vnpxe1X4mXpceitHVzifdgz+Qaeo5leip6Y3tq+JV7Zj9Zk8JXw
CMZ/gofBV8Ej2/EI9RZ3L/EO9cT0Avcp8cp+hofDV8MXtONp22v6pMTrtsdk
b+PDkt7T0XXWy+uN5KtL6qx3ezbOt0vrrF9rDu/fhDq9DXs8xtdpdeKBPRvj
1cQ6+cEekb9vfJ1ehz0R48PUOvHMHoDPa0qdeGWPR/06uc56tEekvr2wTn6w
x2N8dQ482chvdG4MrZPP7dnYuzm/jt6Ys5NPTqyT/+zxGN8urhP/7BG5XobV
0TdzdfLppDr51R6P6++iOvnGHpf67lT4zu70yNQPo+p4+74TYHz0nYlT4PEl
/bUT6uQ/e+zmMzXem43kHLXfSXX0gj1L9bfvHJwMjy3pF1kTvNHIGrBW8J2G
k9gfU9IPtN57p1MvWU+NreMF6QkZb60h3urUQ9YWasS3O/WO2nFknd7evJ18
MKJOr3OeTjwcXmf+zN3Jt4fXWR/WqK7/0XXehbBnZH7ynZAB8ISSfueYOr0k
33EwX4yD3+hOD8z47zsZ/eFxJf3M0+rof3uizs+BdeoLe7bqR9fEnY18hmvF
d0Dsr51V0q91zt/diH/tWvAdFPulZ5f0a83ptzZyD83159TRk/Zs7N24xu5i
/NTurD1zzGONxAxzz/qcv1R3emj20jao40XqSdpL05OU65J+ph6e9eLQkv6j
78jYnx1S0r80Bz3aSA40N5lzHmlEo5iLzqqTj+1Z2bvyHRn7t+eU9KvNsQ83
oln+n3vhJxqJGea+M+vUd/Zs7N2cXUff2uOy19W/Tv1hz1m9e3KdetSesvn/
lDr1qD109faAOvWGHoN63B6B9/rCknrYnPt4IzHMXOw7Od7LiSX9aN8Bsh9+
bkl//Lw68WiOjp48vU59aE/aeuPcOvpfz8Re3KA69aI9O+OZMfyORtacsX0I
4090p6dqb1VNcXsjc0ytcUYdvWNPy97W4Dp6056cvTk14W2NrEG1oj1Se5db
ljzvC+r00u3pqa9611nLrjHXWt869dZHjdTDh9WJVU81oi/71dHzerLWv/bU
XH+flXyf4+voY9/psR4+pM699Jn6bPVc9LLuL/Fi9qrz27wH3ou969wL14hr
RQ9GL/TfJd6MPadueOWSXpSejN7aAyVejT1L1+tXnfWgB6P3dV+JN3Mc178S
/rCR+ly/5ZmOP6V/Ykx4uuOPqRX61Ik9xhxjjz1V48WXnflnD9b4+UVnfuvp
6C09V+L12GP0fn/emb96QHq3L5R4Q3rexruvO/PjmDp6z5hp7LTHajz7tOT5
GiONlc+WeFH21Oyt7VXSa7YHb776vjN/9LR9P+TEEq/bdwLMfz908o3P9KmO
X2ctocem1/V8ifemx6yX+WCJ96xn7PshJ5V4yd4z7929JV7UnnXmnnPWues7
T3rrR5T0gw+sExuMGcaOferEQmOWsWu/OutRDad+ObROLDBnmjsPqhNrjGnG
toPrxDbXrGv32Dq5xhxlrjqgTmwxJhmbnNPObeew3o89fvvfe5b0/nfn/BO7
E2ONtfvD53QnRhmr7KHZGziqpL/sO1X2Gg4v6X87p5xbriG9IN8ZsB++R8m7
BL6zpPd+ZEm/3ZpSL8KawFpTDaOWcQ5Yi+9bJ/6YE8wN1sB6HWoea2N7FL5P
cnJJ78Keor3FrUriuR65va7+Jd65PRHf/zmhpFeyR51cYswwdvwPCFP0/Q==

              "]], 
             Polygon3DBox[CompressedData["
1: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
              "]]}]}, {
           EdgeForm[], 
           Directive[
            Specularity[
             GrayLevel[1], 6], 
            RGBColor[0.772079, 0.431554, 0.102387], Lighting -> {{"Ambient", 
               RGBColor[0.35441579999999995`, 0.2863108, 0.2204774]}, {
              "Directional", 
               RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               GrayLevel[0.3], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
               ImageScaled[{2, 0, 2}]}}], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1: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
GbwubMJ3Ba8dm/HdwWtHtrT7HVq/djD+QPC6sws/FBwPF2Zi3Rq+z4HonqDW
wX3RvUutg/uj+4Za+7bge4LXoF9wieBezYLoa6qe2M/R11R9jzHRear6AFvx
vcFr1sLoe6x+ztHofpme67+je2F61rbj+4PXzW34vuD1dG90T1Zr/bHo/pri
w+7o3qvW33X4luA+6kp8TXAvdDm+KriPtyh6zqk39Ud0j1h91DX4puA+6lp8
c3AP9nd8Q3Af9UR0H01xYzG+PLjXdDy6N6cYsgJfHdzj3YDvCI6le6L7yMoZ
/oruIysPWY9vC+7r/olvDe4JL42eW+qPLcGlgntcy3Dp4B7ar/jK4N7ab/j6
4D7z2Oh6QL2XZ6PrnJmqzaPrnxl63tPufyk3aBadF6o32zy6xlPPKm/afUnl
Bpfi6cFrcSH8WfD6q2dRucE45lK76DVJ9X6b6PVMtXmX6LVEPag8affglCe0
iK4f1GcukHb9qbxiRnA+sIhzXsL4mODcoG30eqYewsWMfxKce+RKu0+n3CZ/
2j1T1a2totda9Q1yp93XU87TMXotVB2dL+2epnKbi9LuaSr/+SU491irWMH4
zOC8QjmA1uJpjC8KzknW4a+Dc5JZuETa+b1q6rHB+c9MxkcH50vTFevS/rx6
UyHtv6feVPG0f7/ynBxp9xmV43WIXrPVH+gUnVuoj9c5ev1Wr699dB6gXsp7
0XmA+ifvRucT6qscju77Kx+ejS8O7p8fjO6tK38ulvbvUZ5WPbr+mcZnj0T3
u7VGt47OXdSH+SA6T1Ifr2l0HaK9gI+ia0j1tT6Mzl3U1+oVnU+oh9kjOpdS
z7NndO6lXmj36FxK/c+CiiVct+u4boU0r/ENeFB0f0F9mwIcL2T8GtWe0XWU
9jKejq79plf086r9gmtVd0TXTtqnUDzTfkHZTN2nmi6l+iJ4P+KylK9TXlwO
F+T6DArOaQtzzM/4TYznw7mVo2re4gL4NtwvusZWD7BI2vNA+Xn/6HpbPcO+
0TW5+ordonNK9Xv1zCmf/yXlZ075+de4ZXRfRv3krtF5ifrAyj+Uoy7kPQOi
a371UT+J7l+oJ5k97V62apne0TWVeptFNNf47C0pz3fl54tVY0b3EdSrzJl2
v1v5+afR/RH1kAdG90TUC+0T3YNQn7No2s+A8vzR0T0L9cd24geDc3I936op
ZqQca7UXcC/OSlxrKwdQXNTewUOMX5C4ZlferhigumM04+fLu37Xeq11Q3tk
MeXYr/2+8in/Te21VU15bdReWxX8H5+9NadzNq0b2mu4M+X7rBpqLJ4enSdp
/2sqzhO8hzUF5w7et9KarD27J1Neq7Uf94Rq2+gaQP15rQnaB3yc8WmM5w3e
X9P6o/2L+xmfEZ03aN9qQnSPQD1e/Wb99sdSXvO1X/k/XZO0942Uhx/mt5TO
6TzkfPQ+kHJ19TrU07g95ZxC+xR34csT90O0RihH0L7kUymvw9pbTOu5S9xj
0XN0ceLei3Ktgol7MooPhTP1lGqrUvipnF5rstLeQ1LOr7VR+zt3cM4rEvdJ
lJt9Hd0j077Akcz+jr7vofLuqyjv0lqnPdxb+WzpxD0Z5UvKlbQ3d7fudaa+
U319ZeKej/JArY3aS7on5fVWe1IP675H74GpBtGar72kBxgvwGcfyuk8bVJ0
r0q9d93nbIwX5z2Hovcm1WcYFt3/Un9VOYj2th5U3Rfdh9Ieyrno/TnVQcOj
exzqzZ6J3ntTzfJP9N6b6ppvonup2lsZF91b1B7NqOgeonrLX0X3B9VPHhrd
N1Qf+NvoHo32cb6M7kWq/zwkupennvbk6H6c9hdGRvci1YseEd1zUQ95cHR/
Vn3vf6P3GlXTjY/ue2pPR30w7cUU4/d+Hx2vtQ87PzqGai9P+aP2wSulnL9o
7/Vm/FN0fq99vR+jY5D25edFx1Dtyyt/1F52Zd5/OnoPVXXczOiYq33eWdF5
vPZ250SvB9o7nhjdW9ReiZ6zHJynBOeZG72WaP9Xz3F2xgPjZ6P3R1VjKufS
HvT1jP8QHev1/w/8H6MrXzc=
              "]], 
             Polygon3DBox[CompressedData["
1:eJwtmnW8Y+UVRR8SXAd9BylaSqnRd4O2FMngb3B3d3ct7u7uDsUHd3fGYBQZ
YHArboWu9dv5YyArN8lL7v2+c/be58679R5r7z5xT0/POfxnUv6/ffX0HNvb
03NAq6enaXp6roOfhh+ED4RXhNeHV4Rngr/r9PQ8y+MhPHd2f0/PcRw/j8cn
8dwGHN8fPg4+CF4R3o3XnAOfAK8H7w6fC58Irw//ntcPhPvgL/t6et7j82/i
8WCeO5LX3sPx13j8Es+dyOt/7M/nHwi34ZkH8X3gh+GD4Vng5+BH4EPgn3n9
CfDB8OLwTBx/Bn4IPgj+heMnwofAS8Czcvx5+FH4UHha+Gb4cnhTeAivXwlu
w1/xfdfn+20PbwAvwPF52j09j7XyGX7Wrrz+bB4fz3Prcvzf8F3wjfD+8BHw
3b35zQfAh8F3wNfD+8KHwLfB18J7w4fCt8PXwfvAh8N3wjfA+8EHwrfAV8G7
w3vDV8DnwlvD/4NPgg+Fl4S/53w/x+OhPHcOx36An4eH+R74R/gFeDh8HnwA
/67l8UU8t4PXG74GvhDeHt4HvtLXwtvA+8FXwxfA28EHwf+Br4b3hA+Gb4Wv
gfeC14XXgwfCA+Ad4NPgo+BB8I7w6fDR8JrwRvB28Prw/PBO8BnwMfBa8C7w
WfBx8DrwhvC28HrwfPDO8JnwsfDa8AbwNvC68LzwT/Dx3fW8GPxfzwG8I7wg
vBd8uecO3go+j/VwHXwxvCO8B8cvhc+CN4e3789+c/0OhNeB14U78IzwdvAx
3f3YgfeEL3OvwVvC+8JXwefD23b353bd3+P5moY1dxN8GbwJPPnAnp5xPH7P
c8x7J+P4xTw+jedW8zh8CXw6vDrcgi+CT4VX7e7nc7v71+/7A59xOLwH/Cd4
OLwqvAT8LfvhNXh1eCn4e3g0vCa8DPwzPBIeBP8D/hH+Gj4I3hleiM+blL9/
IXwKvAo8iuNrwP+Ef+L138KHwLvCC7t+4cPg3eFFrE/wofBu8B/h1+F+eGn4
B94/CZ9/AXwyvDLHJxqU+nVit14tVll/Xo+J4Ld5/ybwqvDk8Dh4g249nAQe
D28KrwZPAb8JbwSvDLfgsf2pn67niZvUi/3g7bvr9S2ObwyvAk8Gj4HXgv8F
/8L3/Qo+EN4J/j3HR8CrwUvC33F8Yr7/+d36uxLHv+T4/vAO3Xr0Krwi3MD/
5fXD4FXgxeFv4KHwyvBi8Nfw1HzejfCl8Ma8/x2ObwavDk8J/wqfDB8GLwXP
yeu/g7+Ab/F88/u+hT+Hb4bfh1v8+w1+CH6GxxM4/gZ8EVy8/334TfhiuBce
Bb8KnwLPDo+EX4FPhmeDX4dfhk+Cp4PvgW/u7rcB8APwbfCucA98Kvxv+B/w
HPAH8FvwJfCM8P3wrfAu8AzwffB/4J27+3lwtz5b76bn+L3wLfBO8Decj4Ph
XeA/wFNx/Ab4EngjeIpBqQcXdfvjF7x+D3gLeE74M3g3eDO44M/h3eHN4Tng
9+At4EHw1PC78OZwPzwV/Am8C7wJPDv8KbwrvCncC38M7wxvDM8GT4C3hNeA
p4F/g0+BD4eXbtLPr+3Wc/vzlHz/67v1bEOvZ3/6nfVWPfAhvCO8ITwL/BG8
E7wRPCv8AbxDtz/ODL8BbwivBE/a5DWu/VUr7523nWvtNfZav8fxZVvZE+6N
uzrRCmqGNeF3m+wVa4y15oMme8+/4d+a0GSvugfdi3fz/uWs9fBa8PtNvot7
2r0968CsXdfwXfAbTfaaNc5a92H3+7rH3esfNakN7mH38rgmtdA95l57s0kt
dM+6d99uUvusSdam8U1qmzXR2vhWk1plDbWWvtOkdloDrYWfNNmL1hxrz8x8
30/du/Ad1l7+NTyej+c+Zz9Pw/H3ePwJz93IsWnhCfCnrml4avhd+GP4BngA
/LG1wj0EzwB/CH/hnoCnhz/ws90D8IzwR/CX7qH+6LnFeLxAt95MxfF3ePwR
z13fn/pqPWp362E/z7Xh+VvRfzPx+k94/BXP3c6xKeHx8IfwdfYO/q3A47/z
3K+8fg2405s10dNkTQzs1jvrt9fYa708PJ39u8ladU26Nu9gPSzaymf62V82
Wauucdf66/Bf4GXhl+CXmvw2f+MT8Ej4r/By1iR4Fr7vZ9ZW+E74cdc4/Dv4
XvgxeBZ4Lvge+FF4Zvc6PBh+BJ7JvQvfDb8G/xn+F/wiPAL+E7wM/AI8BP6D
tRh+Bv66yV53D7qfRsF/g5e3hsLD4UXgf8LPwy/DC8KLw0/Cw+A/Wivh5+BX
4N/DS8BPwS/C88B98OPwE9ZkeF74PvhJa7a9Db4fvo3zO28ra9K1+XmT2mNN
s7Z94TVrpSZZmz5u0kvtufbeT5vUOnuQvej2Tta2a8a181mT2mhNtDaObdLb
7Gn2tjFNepuaXe0+usnacw3aG5+y58ALwg/AT9uT4IXgB+EX4N/Bi8KPwc/D
c8N/hR+Fn4Pngv8MPwJPx/V/H/7MngQ/Y8+BF4Yfgp+1Z8KLwA9bbyrX2mv+
Nut5NZ6bDR4Avwl/06S2W8Ot5V/z+5+CX4bPgP8LPwG/CJ8GfwM/Db8Cn+l6
hh+HX4BPtX7Bd8OPwMdaL+G74IfhY+Cv4Cfhl+DTrY/wnfBD8NHwt/Az8Kvw
WdY/eDD8KHyc17MT76iHPMXrDT8APwWfbH2gvn/ZimZQO3zG8fvhJ+GTvP7w
PfBj8PFef/g++An4ROsffC/8OHyC9bITb6Qn0hu92YmX0DPpnd7uxCvpqfRW
73bivfRceq+52/GKeki95Jzw7a1oCLXE/PCQVjSJ2mRt3rMOj1fguRlcG+14
RT2n3nMCn38H/CB8FK+dox0tosZQa1Q7WkONodbobUdrqCnUFnO142X1qHrV
NzrxSnokvdJY+MpWPJ5eb1wnXk9Ppbca34l31BPqDW+FZ2xlTbm2Zm9Hu6iZ
1E7vdOId9aR60/na0V5qLrXXAu1oJTWaWm1ieM9WPIBeYJZ2vIaaUe04czva
UQ2kFpq1He+sJ9GbDGhHS6iJ1EZTwUe0otHUaj818VZqWLXsTO1oKTWIWuTn
JlpYD6YXm43jV7Ti0fXqU7ejhdX0avsZ2vE2eh69z3TteBs9hl7jzk56iT3E
XjJ9O95ID6QXmrYdL6Jn0DtM0453UHOrvWeEz2jFQ+mlfmviPfQoepVfmngb
Nbxa/n9NtKKeR+8zeTtaWk+uN5+oHW+lp9HbtNrJJswwzDK+aqKt1Fxqr0na
8aZmImYj6/Nvax6vw3PzqD/b0XZqdrX7pO1kIXpave1k7WQBZiBmIVO2o5XV
hGrDb5toSTWmWvO7JlpVjanW/L6JVlXDqmV/aKJt1bBq2R/hLVvRvGrfBfn8
t1vR4Grxnna8m55N7/ZrE2+nplZbr8e/rXi8Ns/NrZ/h30I8XpLnnvb3U29H
WTvhK+CfuJ4vwiPg8/vjqfXynYrXds96blao7GU1gZ+9fEUr/Mr7h8Njef/F
cA+f/xr8Bnwp/BvHR8Dj4Ev647n13gMr2UWL14+B3+H4VZ5veDQ8Hr4S/rmT
LMtM6wLXBzwUHg1f2B/Pb1a0byULWKFJdrEPvC38F3hv+yW8seuJ9w+Dx/D+
i/rj0fXq+1WyhuWaZCF7wVvDyzfJOvaGt4GXaZKt7AFvCS/bJFvZE96qPx5U
ffP3iv72GmwNr1W5Nq6xbeC1K2vviCb945ZKvzCjsp5fUanPZlrW7ysr9dhM
y/5xeaVeH9mkv/2n0o9Oa/L7Hqj0r6HwwvDS/N5n4ROaXO+7K/3FjNDzO7jS
f8yY7G+XVuqjGZP977JKPTUzs79cVamXenK9+XqVbMmMaDt43Up2ZCa0LbxO
JSuaiOv7ur2a73MZPDE8En4Lvhw+vEl/vrnSD8z87HdXV+qtmZ/98ZpKPzJz
tX9eW8k//wbvA28FbwIf3ySPu6vSL81szYq2g7eA/w7vB28Db9afPeHecA1e
12QNu5b9zlc3+c5+d7/zNfC1/fHn+nH9u7/B3+Ieu7bJnnBvuAeubLKmXduu
+evhq+2xvcmcbmySOZk96fdvarIn3Btj7RFNNIRawkz5nCaaRG3imjiqyTmz
l6pBPJeuKbWI19S1psZR66hJzm6iidRGaqCzmqwhtY3X3LX1aV/03PwVPWxm
Yj08sFLP1TBqGdfs0U00iFrENXtMkz3v3rcmXNVkz7n3rBlXNMnEzcbNVM9t
kgnp5/5Z8WvmH3pbPa55xyRdfbpExX9O3vWL/6jo30m7enbJip+dYmDOpdfI
azVxV88uXvG3i8L7wlvDm/Ync9O/LFrxx9YYa4176rImNchaZJ5iHmMmrj64
vqI/zITNhs2Ez2uSoekf/lLxr2bEZsWuyfOb1Fxrr3vwwiYZn37lrxV/a4an
n/lbxc+akemXl6r4aTMw/fbSFT9t5mz27B6/gGN9/Nufx9tyfPP+XCOv/W2V
a+ea8drfWllLXjPX1u2Vazm4Ey+ohrP+39OJljODtT/c20n2ZwZoPb+/k/5g
T7W+TcbnzGrv57lX+C1nNtkLD1X08hlN1sKDFT3uzED9cUpFn7gmXTsPV9aq
Ga164+SKPrqPv7dWKz3P+qrH9fv2VfzpK53UbzNts+2XO6nvZthm2a920i+c
OTh70EPol2ap6L+HOulXZsbWNzMC9c8CFX/2YCf90ozcevdAJ/3STNx6p0fX
ay9Y8V9mWuqt4yt6zoxIfXRCRa+ZIaq3TqroQzNm9cVhFb3U7uq9HSr6ZbGu
vtuxok8W7+qnnSr6x8xaPXNoRc+ZEatfDq7oOTNr9dQhFf1mxqt+Oqii38x4
1UsHVPThEl09tnNF/yzZ1R+7VPSYmaF6bPeKPjVjVL+eX9HPZoDq0wsq+t3M
T714YkX/miGqhy+s6H0zSfXwxRV/Yeaofr6o4g/M4NRDu1X011JdPblrRb9Z
46zdj1Rq39BO+r0ZvbO1IZ3oB2duzt5e6qSfOxNxNvJiJ/3eGYqzFGcK+ovT
KrMGZwr6h7MqswZnOvqlcyqzHmc4+oWzK7MdZxr6j1Mrsw5nPvqtMyuzIGci
+rHTK7MSMxn3V7uS1TiT0r+dUZlVmbGatZ5bmTU543H28e/K93Wm46zliMrv
ccZlb7ik4oeObVJ776j4w+Oa1K47K/7RGaSzqGMq58eM06zz2Mr5c0bnbOXo
yv5x5uTs5vDKLMoZkbO0Iyv7zZmSs66jKvvxSc7vXn7f3ugp/6be1Z7vd3m2
k/58dG/03DOd1OujeqPHXu/k852hef5e6+T3OsPz/Izo5Hw4c/J8DoPPbGXG
5Pkf08nvMcP1/I3s5Ps5M/J6ju7k9zuz83q+AB/ZyozN3zeqk9/vzM7rO7yT
3+8MyvVhxma9bCp+abKB6eX2fHv/E53oJ2cc6pGnO9EvR/ZGfz7ViX49ojf6
8vFO9NW+vannj3aiJ/fuTf96rBO9tU9v9MzznegdZ2jq24fhreA9e6OHH+lE
n+7VG730XCf9wpmaelqNaBahxlI7ukbMEtSArh1rtlmKGtZabmZndmdmN6wv
GZdZl5ne8L5kXGZdZmAj+pL5mf2ZIT/YJJM1mzUTfKBJpmm2aWZ7f5MM1izW
zOiuJhmpWamZ7O1NMlmzWTPcO+D3+vK35qjkfWa6ZrtmundyfEJf8rc5K/rY
jN78e6VKnjmG49PCAyr51Th4enjmSp43Fp4OnqmSd41yJgTPUMmrzCTNqwZ0
+5+Zpdml+dWQvmT85ukrV/LV0WbQ8IyVfMzM0+zTzHNoXzIv3ztbJU81MzM7
M2O+u0kGbRZtJnwf/G5fzn1V/J9/cxJ4isp3MYM2izbDvrfJ35iUx1NW/rbf
2d49eXXzVXgKeNpK/ufMxTxxjYp/deZkPnRfJQ9xJmXec38lD/qoL3nePJV8
1jXSgqeqrB3XyGTw1JW14wzMWdiEynzB3/QzPL7yW0eamcPTV/LC8X05V7NX
8tl3+rIWeyt57Ad9ySvnruS596i54Lcqef3rHJ8Snq6SZ7oG/+d+raxNz9FP
8NuVc+ea/AV+p7JWXcO/wu9V1rZrfHJ4msra9284G3AG4N/2Nzk7cR7ob1Uv
mT2ZQb3aF4/htX2l4j1c41/Doytr/1b4K3hUJe/Xo7g3Xq54FzW3a/2liha3
xlprrSl6WTWi9ejJina0xlhrrEF6WzWqXuWJinZ1T30Dj6nsNTWuXunxivZ1
pmYevXol/3CG5rxntUoeq8dxLw+v1L/3+5Inz1XJzz/sS/77u0perweyFoyo
eCM9kGt7WMUb6dE8l0Mq3k0PZi15raL39WDOY16teDM9l2t9aMWLWQO+hcdW
aoOeSm/3aMVr2XPsPdZEswU9it7usYp38X4gszc1mdrMmZ7ztFUqeZMzSvP4
QZW8xxpvrXferBfVszovdR6rl/V+IrNGPYXeYrAegsdvVuZH7vHv4Tcqe98a
+B08rlIb9SjOj56veBd7hL3CHqMXsEfYK+wReh97hL3CnqIXtqfaW+25Zh96
HP3T0xXvo0fRqz5V8S72KHuVPdnsxPm1WbWZ9cNNZqrO3/or+Zce2Nr8YsUb
24PsRfYgsxo9obX8hYpXtCfZm+xxentnwM5D1qzkY86Qzfs3qeRfniNnbV5z
z501ylmFNd7aZQ13FuEMwtpujXUWYU2y9lrTndXoea311nRnGc4wrPXeA2Ce
9sfKvNIa72zCNWvtt8Y4+3FGZO2x5pq9OROyFntPgPPMZSrzGe85cH62QSW/
dcbsfHa5ynzHGbbzzGUr8x9n2M4//1WZ35jxOKswMzH78Z4E/9bClXmONdBZ
lTM4a6M9w1mc80N7ifMUZ0N6Hr2PM0hfu1Bl3vNJX377fJV53cd9OXfzVuZ7
ZirOIsxkzFr0dM5CzKT0et7z5bn4Q2We5D0uzsv+XJnXmjk5+/D+MrMo7zEw
T3+uknda05xluqatdd4z4/xukcp82XvWnA/cWJkneD+F2bsZvPdXeM+H+def
KvNkMwSzhGcr+bz3yzk7cIbg/RHeE+d84YbKfMPP8LNGVuYvZiDOBs34zEas
Wc7+/BvWMnuKs0J/o73GnuQsy55jr1JjmMX5G9Qe1jhnk2YE1j7PqbNTPb/n
2u/kd7u3Mt/3Gjg7NaPw2qhpnGW6JtU63vNi3r1RJT+3xzoLNVOw93rPkPPO
jSt5uvdkOd/dsDIf8B4g8+rNKvmy9wyZZ29ayee9Z8j8evNK3m6PdPZnDbd3
eo+TefYWlXmH9wQ6z7mpcn/f/wHh5gm7
              "]], 
             Polygon3DBox[CompressedData["
1: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

              "]]}]}, {
           EdgeForm[], 
           Directive[
            Specularity[
             GrayLevel[1], 6], 
            RGBColor[0.363898, 0.618501, 0.782349], Lighting -> {{"Ambient", 
               RGBColor[0.28733552, 0.34844024, 0.38776376]}, {"Directional", 
               RGBColor[0.10916940000000003`, 0.1855503, 0.2347047], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[0.10916940000000003`, 0.1855503, 0.2347047], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[0.10916940000000003`, 0.1855503, 0.2347047], 
               ImageScaled[{2, 0, 2}]}}], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1: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
bsWWg/BnOcfmYviLnOtJ7c9TWXsp+oxr5rANr8hcYz+Kb8nc7++NvreaJ6yO
3kvq416O/i6ae+zHGzLPH16JjiGajShXqEY6Mjg/qyY8gr+vcs39met8zUg0
ezmt6OzoHh4anOsOwd/l3Bfqt6FSwX2bflvJ4Qej94ZmDr2L5jb6fg8UzV0V
O9Vr6neTEsG9pn4PKhmcb4/Ef/L6FaLvle7ZQjwhc67pEX3uNBtU3j4U/5hz
H6zfrcoE9zT6/aUwOM9n+H9c0ys6bmh+qP5Yv2eV1rkrqpn/yzOF/j2rbHCP
qN90gvYY1xyfeR74KX4+8/xnDZ6XuR9/JDoHaT5zW3SM1dxmT3SOUL+2vmh+
qDOhmkW/Wx0bXMfp96bj8S1F8zrtx1ujc5D6d81p9HvWicG1zNH435xrPf1u
dRxrD0efR812Rkb3HZqpbo3Og+qFVT+qvzg4uE45HP/K62yJPr/q5TdH5yD1
2puic5P6/VHRPY7mpaOjY4tizMbofKQ+XfWjfiM7QXG4qE/RPtoQHSc1x9gX
HX80p1JNqr7m8ODaTb3A0cF1q/qaw/j7C9e/n3led0hRfFb+/Dk6xmp21zo6
Vmiu2waXyTz7vTI69mp2cUV0fNZ8QLXYwfgbvvvK6DisecKq6Jiv2YXqLPUR
R/F3RXRO0exieXTe0ax7WXR8U/zW7FC/PZ2umBnd62nmrLpMv0seo/jJeufM
M+3/A1oh1cE=
              "]], 
             Polygon3DBox[CompressedData["
1:eJwtmnW8nNUVRV+RR3EpPhcJEOJCkjsBQhICfDiBBEJwh5AQwT24uxZ3a3F3
1+LWluLQQpFSoNAWSil0rd+eP2jfyjdv5s185569zz7TY6cZ46fP0tXVdQ7/
Mxv/v3LT1XVcd1fXLq2urlFju7q2rF1da8Kzl66uHvCqXD8B3o3rq8OrwMfD
u8Kj4cPbXV1fw8/AX8IHwY/CF8KfwhN5vjXg2Xi+ZeEDuP4wfD7X/wofCD8C
XwB/Au8PPwSfB38ML8brLQh/umRX11LwIVx/Gf4N1z+Hl2ny9/aEe8IHc/0l
+Dr4M3grXn8tuJvXXw5etgmvyPUV4cHwfvBmcBvuD+8FbwIPgQfAe8Pj4KE+
H88/Ax4LPwsP5Po+8Hh4GLwSvD88AR4OD4L3hTeFKzwEPgDeHF4ZPpTnewX+
Lfw3uA/Xd4HXggfBbfgYeCd4NXhz/juNn+/k397ivU2AT4XvgN+EN4NPgW+H
34An8r4nwSfBt9bcQ+/lifAtNffQe+k9vrnmNXytY+Eb4JHwzq3UyI01NWKt
WAM3+fzw6fBd8NvwFvAZ8N3wO/CW8JnwPfC78FbwWfC98HvwRvAR8DXw8/BY
+Ej4WvgFeGP4KPg6+EV4fXgmfKU1B68Cbw8f5T2HN4APg6+Cn4W3gc+B74c/
gLeDfw0/CP8Z3hY+F34A/hDeGj4bvg9+H97QGoevhp+DN4GPhn8DvwSvCu8A
H+09hNezhuEL4UfhmfDD1jY8L/f6MPgRzwY8H3wU/AT8BbwQfCj8kGcDngc+
BH7QswDPDR8I3wf/GZ4DPhp+Ev47/Cv4YPgB+CN4Lvgg+H74L/Cc8DHwU55V
eGH4SPhxaw9eED4cftSzA88PHwE/5lmDF4DXgfeFz4cf5v1Nor4OgC+CH4PX
5fp+8AXwI/Da8D7wefBD8Ah4x1Zq+nq4gfeGfw0/CI+Bp8NnwffAx5f0AnvC
X+xNXN8TPge+394Cz4DPhu/zrMN7wefCD8AH8PvHwzfCr8Gbcv04+Ab4VXgc
fAz8W/hluCfnbQI/t/m3flybzHs+HZ4K/wneHT4N3gN+A+7N43eG14QHwr3g
neA14AHwNt4DeCL8vGfLzxjeFn4V3s57DG8Jvwhv6z2Et4BfgKfAZ8DT4Dfh
SfCp8BT4j55l+BR4MvwHzzJ8Mrw7/Hv7NzwSXsb36NmAP4DvtWbg2qR2vSfe
m6Hwkd05U56tna0BeDv4NXhYk7NmzVv7y8Hj4aFwb3h5eFN4GNzHXtFO77EH
vQ6vwPXN4Ar3hXvA4+AhcC9rwzMCbwO/4tn2TMBbwS951uCZ8Nbwy/Am3LO+
8E/2CHhjuA/8P3uItcTjL4UPht+Fx3K9N/yjPQeeyvWL4QPht+HNuD4QnoW6
ucFa4/rl8KFcfx8ez3/H8vP1/Nsr9gv+q/z8Sx5/E9dG8PhR8LI+xtqEL4MP
gd+DhzfprfZUe+s4fr8f/LM9Bd4UHgD/ouT3V+TxO8JjuN4f7gvvCjfwYLgf
vBu8NrySZ4nXuwk+Af4QngZfAh8Ev+PZaOcseCY+8CzDt8An2SPgPdo5y57p
t3y//D394a6S+tmP67fCJ9tjPNvwzfCJ9iR7tT0XHsDjn1Gvm/QOe4y9Zgl4
OfUYXsb6gF+Ar4WnWL/wq/YGeA/rG35NLYKnep7gJ+FL4Z2sT/h5+Bp4sucH
fgq+DN7Z8wY/B18N7249wc/AV8C7ev7gp+HL4V3greEn4EvgHdV7+HH4YngH
708TbVPT1LYt4cfgi+Dt4S2aaIkao9bso8Z5/vg8HoEnNtEiNUftmdBEC9Uc
tWdcE21XU9XWzZpop5qpdo5vorVqrFq7eROtUuPUuh3g38FXwrt5nuBn4avg
SZ6XJl5BD6GX2LiJV9BD6CXWb6K1apxat0ETrbNH2is3bNIrPQOehaaJFqu5
au/aTbRXzVQ712minWq8Wr87/Hv4Jng6vF4TrVfj1fp1m3gBPYBeYKMmZ82e
be9W49WGjUv601pcv6I7nkBvMKqJNqgBasEaTbRKTVKb1myiTWq0Wj0Wvq07
nknvNKaJVqlxat3qTbRJDVPLRjfRFjVL7RrZRHvUJLVptSZ/n5qkNo2Az+yO
pqltk+DX4RvhaWOjgf6940r6rx7C59ukpL/qwXy98SXeTE30896u5PnUYO/P
LiV/r5rr/dm15P3qmayfvUs+XzXOetm35H7q0az/I0rqSc9jvRxdUo96NOvp
qJL608N5fo4sqX813XrZueTz0WN53o4pqUc13fu7U8nnpWZbDzuUfF56OOtv
Wsn9O7HGTw8p0c+V6S8j4KU6/V1PZ/1OL6k3PaPnYc+S+tKjeX5mlNSfnsB6
3L7kfujJrKfdSu6/HtPzvFdJvekZrL8dS+pnCvfrj/AtvP6eY+Nx7S+Hl5xP
PaP959iS83xKjf+vJf355Jr5YliJnz+pZh4YWuIXTq2ZB9ol/fvSGi++dsl8
oMe2Hjcr8d56cOtx0xL90MNbz5uXeHs9vPU+ocTbX1Lj1ZuSeUTPa789rqQ/
XVSjR2uWzCcX1nizNUrmGWcI+9+hJefDmcP+e1hJ/9AD27/2KekXaqL9bb+S
/qDHsh/uX3J+nVHsrzNL+s0FNf5jTMl8dV6Nv1i9ZP46vmb+WqlE/y6umUXW
KpnXFuf+9IBn5/4srV5SLz3VYz0g3AteEZ5TjwkvCS8Kf808eSLcgheDv4FP
sh/C28IjefzD9jN4LDwIvsv+BG/i3wPfAx/exEs/DR9rv+P6xvBg+G77F7w1
PAJ+0H4HT4SHw/faj+Ht4FGt6MN4eAffP/yY/R3eA14ffkr9hBeBv+TvPQFe
DP4V/Dl8nJ8HvDD8BXy8egXvDq/D7z+unsCT4XXhJ9QreBq8YSt6PQGeAq8H
P6lewVPhDeCn1Tt4OrwR/Dv7Zzt6v5oeXX2At4JXhR9QT+At4JXh+9QTeEt4
Ffh++IAav7xcif8rfJ5D4UVbmdcPqfE7PUv84sE18/EKJf7yoBr/vXyJ/1y6
Sd6wAr+/gveD60Pgf3XqYymuj/Hx8PLej5rX+3fHjxxa46dWLPH/BzWZ1ZyJ
nI1aTZ5vkVbykUk1/vdXJc93aJNZypnO2c6asDa+8nf09k1mK2cqZ6uZTWY/
ZzhnucOazHLOaM5qBzaZHZ0ZnR0n1/jrhUve35QaP71ISf6xR838smhJvrEk
v7+Sj2918pcms6UzqbPpZPgP8M3wDHgcf+P28Gj4UXhIO/52MfgKuA2vArc6
/rnCK8NLwlfDA9vxrwvAl8CD2vHTC8KXwoPhQfBC8GXwSvBgPz/4cvUTHg33
aMV/j4RXtz7gG+GhcBteHL4SXgZuwT9Q76fBw+Dh8BJcvwru346/ng++CO7b
znwwD3wB3BvuBc8Fnwf3aWc+mBs+H14BXhaeDT4bXhYu8I+83ulwD3gp+Cf4
DLhfO/PIvDz+Qng5eGm4Cz4TXh5eBp4FPgse0I6/nh++GO4JrwDPAZ9jPcNL
wt/z/KfCY+D14L5cvxWexv17E74d3geeCv8Jvg3e23qA34BvhfeCp8NvwXfA
+8Iz4LfhO+H94P2bZA1mEGYRW/N6e8Ibw8/BTTt+diB8J7wmvAHcH74d3pPf
fwe+C97f88b1JTxf/P2nwHtx/V34bq4fAO/XJKsw4zDrGMXj14Z7tTJPrQ6v
C/eBb4HXgNeH+8G3waPNJODe8M32D3hx+J+83snw3jz/h93JTMxOhtfMH39t
JU/cp0mWYkZiVrIWv78hPAC+A963SXZipmK2ch3n6h5+fl/NaacGrAVrcKWa
9+h79W8YWHNmPDvD7OE1NWvteqY2qKlRa9Wa3hD+rpXeZ0+yN3mmPFvW9EY1
mqQ22XP3rjmjnlU1ZN+aTMBswEzgypqZ29nbvO8yeJ2S/E+PoddQc9QeNc9Z
xczA7MCZ/fKamXTpVjyYs6oeTC+2andmbzVWrbVmV63RWLVWDR5Rc6Y8W2rw
avAnrcx+3gPvhWfes29PaGpq3tpfXo2o6RH2CnvIWjU9x95jz3GWd8YvrfQk
Z39nVLOO1bozu9qD7EWesTVqMgyzDDOYc2syE7MTM5MrajIdsx0zlqtqMl6z
XjXvmBrNU/vUzKNrNFPtVCOdfc14zHoOhE+De5XM5mqK2mKmY7ZjJnQ6PLwk
C9YD6gVntlNb1tgXno8aP9GjxA94Bj2LZtDH1mRGZkdmRmfUaLxaPwmeWaPZ
arce4siaDMUsxczpzJpMy2zLTOvqmrzY2UhPqbf0NfUiaoJ/i5mA2YD5pnmy
mZTZlBnZNTWZltmWGc45NRmOWY6Zzdk1HkYvo8c4oqbH2mvtwSNrPIneRM9y
WE3GY9ZjBnRWjSfRm+hhDq85A57XpUvOhj3UXmrPH1PT8+399uTVzSZqztqc
Jf3CmrMf/7OjP55Ra/n7jt5tW3P25irpP9ag/fzbjn5tV1OLc5f0Y++Z9+49
n7OmX6j/esTZ2snc7u30j3/V9HR7uz1yELx9TS3PU9Lf3Kk80/EP9ps1a/Tm
m46ejqrpNX/v6Jk9ws/yvx09VrPULt9j9TyW9F578Lc1Pcez+UNHLz0j6ts/
Ovptj/Is/6ejt36m9rqvO3rlPdM/f9HRy3t4/j/y88/d8Tuja97blx099B6o
Z1919NhMzGzMjO7OmozOrM7M6o6azMrsyozu9hoPqZfUQ0+r8Zx6Tz32XjWe
XG/umdm1xmPrtTeHp9Z4cL24HnVP//aSrFfPpHcyczO7MzM1i/Mz1SvoCfys
fQ9qux7C92ZmaHZoZnZbjUfRq+hhJtR4XL2uHnh6jSfWG+uBZ9R4HL2OmaHZ
oxqqlqpxO9TUlFqvBlpr1oTapwewVpxJnE3U5J1rNEvtUpN3rKlZtVONtJat
ebVSjfUsOKM4qzjj7FJTU3o1PZy1psar9Z6xnWo0WW1uupN9zlGyS3On5q5N
DfK5li3RJu+ZWrRVyb30ntpbty651/Yk713/kl71VY2fOaskv/q6xq+cXZJf
ucP4Fr6+RK//UeNfzinJ99TcX8LvtaLFs3f66W9KzlJ/rnfD77Qy7/WDZ4ff
bmUeHOB7gt9txT94JueE32/lrA6G54I/aMVvflPjd84tyR+/rPFfZ5bki5/X
5F2nluSJw9vRTjVL7epqJx+9ssS//a3Gj59Wkm96Rj2rvy7JRz+ryY9OKckj
7SHuQy8o6S1/r/F7Z5TkmV/U5Benl+Sh9iT3o+eX9KpPavLVk0vySz3M3PCH
rXibIfA88J9b8bf2kPnhj1vpLR/X7G9PKtlfukP6r2e1JO91Z/SDZ6Nk3rEn
2BvuLpmN3DH9Ry0pma/cSf0E31Uy/7gT+9FeUDJPqcF6nUEl2uxOyN3QCSX7
3o9q9ssnluyH3Yn9z95SMl+5Q/sXfGOJ33RH9k/4hhJ/587t3/BNJf73DzX5
+CEl++yh8LzwX1rx88Pg+eCPWvHzv6/Jww8u2We/XpPHH1Sy7+4Lzwa/1cr8
7g7vG/i3Jf7UneD3am/JvPeLdubJq0r8ujvE7+CbS+a3PjzfrPCbrcz77rjM
9w8s2Z/P0s58eXWJv5+1nfnymhJ/riapTdeW+PHHa3rt5JL9wRM1vXhKSb5v
j7BXLVjSO9z52ft2L9kn2IPsnQuU9CZ7hl5s/pJeYk/SS85X0qv0UHrPgSXe
yp5ur1qipNfbw+2lC5X0dnui52fekl5pT7U3LlnSa5+q2bdMLdlPPFmjLXuU
7Dfs0Xq9LUt691013mXbkv2OGqQX2qZEm/Q4euEtSryPnkXt6FfiZfQg9vK+
Jd5Ez2Kv71PiZdQYe3kp0R49kV5yVIlX0hObR/2tFa+sZ1Pbepd4OTXNXr5U
idb5nty9WJO+Vz2mXmnlEu+pB9RbrVriDf9bM89dUpK3OwPoPdctmQ30fHq1
jUq84I81+cClJXmAHljvtmGJN/6hZl67uCS//k/NfHRRyX7m55p844qS+fOn
mvzk8pL58381ecZlJXnqdzXz14Ul+x5nFr3eBiWzjJ5cr7p+iVd3JtHrrlcy
q6jpatniJVqvR9SLr1biHfW4et8RJd5Xz6yXHVzipdVgtbRVos3OLOZrn7cy
yzjTmKd91sqs40xi3vZpK7OKHl4vukqJt9cDO1uMLfHGel5nhZElXtiZQ+8+
umQWsSbdvdkzrNVV2jkvzlzOXvYYswM9n73HHuR3a+y59iY9hrPTrCXewx7o
d19e7E5vtOf4XRt7pL3I+W9iZ/6wFsyYN+/MK86D7tvdxZkRmxXb88029IRq
gT3O7EIPbO+zBtxlqHHWhj3X7+aoMfZia8LdnZplrVgDZhFqpLVhTzJ7UEPt
VWb+7s7N9NwFmJG7WzfzMzt3fjTr9B54L5zh/W7QQt2ZJ60hd4dqmrVlDZtt
qYHWtjVnlq9GWotmiO6qzdDMFs2Y3bWaSZo9mxmaLTuvmiWaEXZ35lPnc/1j
r46fshbN3Fbs+CP9pJmgWaOZpFmhmZ3ZpN9ZMsszY/e7Q+4EzN7N6MzqzBgn
dvyV+YF5gX7LTNR8wDxBv2UGaRZpXuB3t8wAe3b8mNmgmbrfXXKnYtZupu53
m8zUzdrNXN29m2GaxZqhuss3YzRbNY9wHncmcjYyg60dv2w2a0ba7vhr51vn
3eEdf24vc6fgd5/cgbhrMLP3u1buSMzy3Un4XSnnX3cVb/DzJ9zPWeBeNTsT
vwtlBuwuxR7m7lCPZG9TE82y9IBqpd9HcVfojsddj57R3ac7Kb2kGnd3Zz5T
+9Q4d+Vqptqn53R36g5ML6qndHfsjkev6U7H3bvzvLsePd81nfOiF3S+uq5T
/3otNcXvDqhJao0a/UWnftVuNdNdvN9HUUvVWHfpega118/Az+JPreT7zlfO
g37nbtF2PKjZpzOV3lTPavblTKaX1YP43To9kd5Ez+uuQ83RC/v9GHfV7mjc
1fgan3fOU6/O/fB8+R283jWexd2DPVEvo2d2l2LP1Evred2tuzPUC+tB/P6O
37fSm+gx3ZW7U9J76nHd5btT0/vqkd29u2PSO+sp/W6cHlevaV5ivqHmqX16
XHf37iT1vnrkazv9T++sxzGL1EPrffTM7vLdQeml1SizUmcOtUsPbpbqzKE3
dydnfmOeYj6jh/a7Be5M9db/By/qleQ=
              "]], 
             Polygon3DBox[CompressedData["
1:eJwV1mV8VmUYB+BXEKRFRKVhhAKjS7qRGgwGKLmNjY6NUdINoqC0IoKSCioo
ZTfYjd2NmGCACXrdH54P9/X7P+85Ozvnvp+krNy0nHyJROKYVcDq2iyRuKhC
IpFUPpFoVzCRGNk0kajAPlH/Vi6RKMTqscu7JBIN5frwPLacJcv9rP5Trhxr
zyqzz9lfrChryK6wt5G9fflkdh2rIveF+h+5YqwRq8q+Yv+xEqwJq2lvY3vT
+BR2PSsv97H6F7kLWF1Wln3IfmIFWHLcM/uO/cwuYa1YHXaS/c3Ksw6sDPuA
/cDOZ7VZdfYNy2+VZM1YEvtSfVauOGvMqrGv2XnWhawpq8d+UZ+Tq8g6sdrs
J3aGlWXtWDn2ETvJCrI67DL2PvuO5We1WC32I/udlWFt45my79kpdilrzbqw
Cz2ryrwNy2Z12Sn1v3IVWMf4Pc+0iVw/PpXdEM9Z7gf1r3KXsTasBjvBfmSl
Wcv4O+xtam9/Po2tYBXlPlWflivM6rMUuWly6/nD7HV2lVxJVoW1ZSPYFDaO
zWK3s6NsFlvONrIn2NdsPBvIxrAVbD/LYUPYeHYTO8SmsQlsDtvKnmNjWAob
yuaxnWwc683S2QJ2J7uSnVUXt2qzPmwmmy23gt3P3mUT2CA2lq1kB9g8divb
w95gZ9hctpHtZq+z02ws68WGsflsF5vDbmCb2FPsOJvPdrOH2OesYNyHdT27
lT3JvpHLY2PYDLaZPcMmsWFsIlvNHmAT2WA2jt3IDrJcNpRNYKvYYTaZjWUz
2RZ2hDVj/6qLWbVYKpvKxsvNZnewZ9kMNovdwO5j77DpbAZbzvayt1gblp9d
zBqwq1knVpxVZK3YcNaBFWXlWQuWwTqzEqwSa82yWHtWhJVjzVk6a8cKs7Ls
SjaM1We/qhNWJdaZNWS/q8+3qrCrWFtWyN4yrBkbyjqyYqwCa8kyWSX2mfoP
730R1oA1YL+xfFZl1oW1ZAl7S7K6rB9rwf6LnmHVYWmsFTtP7iJWj/Vnzdk5
dQkrmfVlTdk/6qJWTdabNWF/q4tYV7BerDH7S13YupylsGvZTNe4nu1jb7PR
rCcbwuayHawR+1NdyKrBerLWLJ9cKVafDWDDWAvWnY1jq9lgVp+1YxlsKRvK
mrNubCxbFd+WHnE/ez1mCCshM4cdZMdiNrCL4v1h97HX4lmz4iydrWb3sXfZ
j9E32H72RswfdmF8M+wAezN6PivJ8tid7NmYFyw/G8VuY4+wL9kf0TfYFvYY
+5r9Hd8M28mOxLxg59k7mm1mj7Kv2F9yI9km9jD7gv0Zz4qtYvvYO+yH6Afs
dvY4+4b9E/8jto+9GvOCFXONaexe9nLMAVaEpbK5bDN7hr1n70C2jO1iL7Mv
WG82h93Gnmbvs75sPrudHWUfsj5sHtvCjrAP4vtle9kr0d9ZUdfNZGvZfvY+
+1luOFvHDrAP2MnoEewe9lKcJVhhezPYGnY/e4/9JJfF1rOD7EN2KuYCu5u9
GDOJXWDvZLaHvRCznxVi5dj5rBrrwAZGb2d3sCfYcfZv9ES2ix2Necby2ZvN
NrBD7CP2S8xQlsNuZAfY8/Hesww2j21nD0YPY5lsPtvBHo7vl6WzuWwbeyh6
CRvOFrCd7JHoYWwiW8n2sxdYVzaJrWKH2EusJ5vK1rGH2GsxQ1kuu4kdZC+y
Xmw628AeYW+wbiyPrWaH2cusO5vM1rAH2CsxQ9kO9gz7niU8l3Ysiy1ku9ij
0Z/ZKLaU7WFPsiHsRnYve4t9FzOPHWJvxZmDlYoZw25ie9nb7PuYR2w7ezrO
Ouy/mPFsK3uSfcvORm9n2WwRu5M9FrORPcDeYedY6ZhtbCW7hx1j38b8YCPY
YnYXe5wNYivY3exNdiJmNzvM3mZn2cV+bwS7mR1mH7NfYwawkWwJ282eiLMo
K8Cqs47smjg/s4KsBuvEBrE0toDdwZ5lH8UMYAPYVHYL2xuzgl3NprGNbF/0
EvfTnQ1is9m2mAty/dkUdjO7l42Q68YGsllsa5xp5PqxyWwDu4dlx/+YpbJJ
7OY4J8p1YJlsEbslZhnrzLLZUnYbG2VvDzaYzWHbY67KdWJZbAnbFOds1p5l
sIVsY5yLWUc2nC1mt8b8ZV3YCLaMbY7zBktjeWw9u5v1YFPYWvYge5VVZdVY
R5bFrmVJrCrrwIazGawaq846sWw2k6X7O1qyHmw8WxM9jLVhvVgOWx+z1t6+
bBJbx/aw6qwG68xGsFksw95WrCebwNbG/JVLZTlsDdsdZ2p2OevCRrLZMbtZ
H5bL1rK7WKbfa81S2ES2Lvoka8t6s1y2Iea0vVexkew6tiW+S7kGrD3LZMvi
vWf1WFuWzpawyvZewpqwfmxsnGlYadaYpbHRrJ+9NVlzNpDNi/eZJbGGrA+b
zq5hdVhrNpQtYlezZNaKDWELWUXXuJg1Yn3ZGDaALWbb2Qvs07guW8i2sufY
x6wKu5Q1Zf3ZuLguW8p2spfY56w/W8S2sefZJ3EvbAnbwV5kn0XO/dViLdgg
Nj/uhdVmLdlgtiDmKqvL2rBhbDFLYeVZMuvBJkXPjpnEarPuLJeVcd3T6tJW
Q9Yt+rNcKbmqrD0bxcrKnVFfYjViXaO3y1WQq8N6sryY06wyq896s6kx41lF
VpelsMnsMr93XF3ASmLNY+7LVZFrwFLZNJbKKrF6rBebErOClWE1WVc2Mb5B
VpbVYt1YDkt2jWZsAJvOVrIJbBt7ip1g59j/qiJsSw==
              "]]}]}, {
           EdgeForm[], 
           Directive[
            Specularity[
             GrayLevel[1], 3], 
            RGBColor[1, 0.75, 0], Lighting -> {{"Ambient", 
               RGBColor[0.334, 0.2755000000000001, 0.1]}, {"Directional", 
               RGBColor[0.26, 0.19500000000000006`, 0.], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               GrayLevel[0.1], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[0.26, 0.19500000000000006`, 0.], 
               ImageScaled[{2, 0, 2}]}}], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1: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
vcf4zNWRcyHVgKrBm6n/Z3nPTOvwP/C8yPVLheD9EmUdNwVn2arH/+ScNZGz
r9NZ3ntT7lQzOKtVPVI7OFtU7ZMK3ktTbXVbcK6nOqhhcIarLOjW4AxRtdWd
wRmlsrvGwdml8rp7cPfY+VWt4CxY9dG9wc9pZVB1gjNE1UclgutbZXH1gvNN
1VaNgjNN5Xu6HsrfjtDfGgRnpsqj7gjOJVVz3R6cP6q2qhuceyor0/hTlluT
z7gvOINQ9tU0uMZQhqaMXBlyH80hWd5fVP1yd/A+hLKs81neC1S9mRW8V6Ec
LATvSSgHuyt4/0AZ5trsMfID37kJ7W/GzvfOZXmfUrWq7o9yy6OZPl+55U58
Nsv7lKqndJ+VYW6nvXjwPpbytGLB+2fKfOZnv3dHpucY5di1Is8rysSa4+rB
+y6qYT+kziqf4Wf3uLTHuJ59n6a9VtTzS/OHMrGukZ+3Ov8Qn18teM9GWc3Y
7DxW3/2a4D051Zgf014xw8/0C4Prf2UphYL32FR7Fg7ee1Pdem3wHptyAM2d
yq6rR55rtUdQLfJcq72DGrh94ixO9avWBRXwYb5bZvAeoXKz8WmvpbUGUH88
g8dEvg//4NGR1w7ad/uO90bBe5DK07SO0D7dPtpH8TnlMryG+Sjtv6X1mDI+
5YedI+91l8UHM72+UNZ3INPzrvLDLpHXGtrv25/pNYL21HZnep2i/cG9mc65
tX+3B+cNzlyUO2n9ou/wPe31g/cPlAmr/lcO0ID/fzLL++jKmfUs0n5HQ/79
d5b3zpVFVwreK1LemA7ex1JenQTvnynH/ivL+4LK0k9leT9eWbfWz1oDL8j0
ddf1HxH5GaV9kDsjP5eU5bbAVYL3zJS3Vw7ee1MOeUvwnpwyxozgLEn5wD9Z
3ndX7jEy7eupNWTu4IxMmcP/AAtvc0E=
              "]], 
             Polygon3DBox[CompressedData["
1:eJwtmmWgHUWzRS96cHduD+5uM8CHw+AQ3N3dXYMlwS1AcHd3d3cP7u7u9tZ6
e34Ezro9R2a6q2qXTLPFrmvsMmJfX99Q/jMy/5+j6eu7rtfXt1LV13fngL6+
5eDX4S3gBl4Ffg7eHr4PXgy+H94QvheeE74eXhm+C14Vfh7eAb4fHhU+A54B
Hg9eAn4J3gieB67g8+FF4dvg0eAz4ZngCeAWHg5vBi8AD4ffg4eU/J5Xuu/b
H74H7sHD4Bm5fnx4Ufg+eIMq66/CL8AHlPz+G+q+vqXgV+EfV+U5sP42vA3X
/4/1leF34G3hReDX4Pfho0vub5Pu9+zP+gPwr3zeYHgSeHT4Anhe+DGu/57P
vxleBn4N/hlehPffC6/P9Xdz/UWszwc/zvoPrL/O+vfwsJLPnw2+Bl6B62+H
f+b6o+CJ4B78CzwInhgeDf4NHgJPCo8BPwmvCH/D550Ar8DnvQlvxfpC8Ozw
tfCK8B3wsvBr8OZwDX/P+w+Hx4dHhgvr58GLwLfCP7F+JDwhPCq8IutvwVvD
C8M/sn4EPAE8CvwEvAL8Nb/nePhxeHn4K/g4eHne/wa8JdcvCN/E+tLwcNZ/
4vk8Da8MfwefxHo/158L/4/rb4EvgzeEx+ru92B/Qz/nmL9dy3vvYv0QXs/B
+kWs3Q8fBy8MXw7fBx8LLwRfBl8Crw+P0f2+e+Fj4AXhS+GX4AfgHUvs4Q74
IHg2+AL4he48bl/yfC+G14NHh4+FX+zsa4cSe7wTPhieHb4Qvhs+FJ4Tvhi+
Gt7M/YBP9fl1+7ESfD38KHyO5wW+Fn4YPgleDL7a8wBfAK8C3+h+dPa4MnwD
/Hx3PrcrOW+PwGfDy8PXwA/BJ2q/8FXwPfBAeC74Evixbj9WhK+DL4U3gMfs
9vtB+ATPD3wl/AB8vPsHXwFfBW8Kjwefon3A68KjwcfAN8O7wlPBZ8MnsafT
wrfD33E+bmP9AHgW+DzWn+381YYl5/U8eBX4P87EIPgMeFn4d/hQ+Nwm5+tf
+Cj4HHgl+B/4SPisJuf3L/hw+Dn4Bv1biT8bBi8H/8H6QPjsJvb3N3wEfGaT
8/4nfBj8dGd/6/P+m+Hz4VXhPniw/gQeAI8AD4GvhbeHJ4dPg6+Bt4Mng4dq
L/AucAWfBd8C7wZPDZ8D3w4fCM8Knw/fCu8PzwyfC18H7wBPAZ8OXw/vCE8J
nwE/08WPDUrs7UZ4Z7jAZ8JPdf5qPfgm/S28E9wPD4MvhFeDR4SPhq+AN4bH
6ez5cngjeGz4RPhKeBN4XPhk+K066/923/d2nff/193vO3Wu76tyPp6r8/x+
7Ozl2TrP94fufD1VZ3+/7b7vmTrn4/vu+4bXOX9/dM/3qzr3M3YV+3y9jn/4
q3teb9bxP/909/tGnfP/d/f8vqjzfMes8vy/rPN8x6riL76u8zzHqeKfRuH+
T4enh8eFR4KHwtPCY8MjwqfC08BjwVN09rpQleffB5/i/sNjGs/q+J8/u/Mz
MuunwdOxPg78eZ3zNUYV+3m3jj2OUOX8fFbnvI1e5bx8U+e8jVvFP30K7wv3
4JHgb+vY63hV/MMn8D7wqPCI8DidP5mzij8au/MPc1TxRx9z/d7wKPAI8F91
/Gt/FX/xEbwXPDLcB38I7wmPBP+HP3gF3hr+lfv9G/6zzvmfsoq//6dOPKiq
+LNX4W3g37j+H65/udND+5XE67/r+OdSxX+Nx/pF+j94QvjfOv56qir+dgLW
L4bnhieCJ4QvgeeBJ4Z/r2N/k1eJJ1N2/nvhKv5g9C7ezFLF/47ZxavZqvjX
Mbp4NWsVf/8Qn7cm/Am/91d+/1idf529Snz4o45/nKJKfHsAXgP+mOt/4fpH
4LXhz+Df4ffhPbRXrv8XfhheC/6U9d98PvBW8C/wX/AL8BbwT/Af8EvwlvDP
8J/wMvyeV+FN+bz5jdeszwQ/w/o+8NKsvwJvwvp88Iz821hf4jNs8owXLznT
Pns1yTQlv1GtosaYtuQMqD3UJNOVnBG1ykzwJvpaeN4mmmmGkjOplnKPliix
Kfdu+Sq+TJ+mFpuN9S2MjXBtLK8SK42ZartZWd/cWAAvAM8Cb2bsgeeHZ4Y3
1XfC88EzwOsam93DJppu+pIzr9ZTU85YYlNqTc/4RCXP3LOvT5i/RAPqK7Th
+Uo0oratj5i3RKPpO/QR85RoMn2HPmHuEo2nr1CzL1CiadXyM1fROp5Bz6Ia
vdF396Ld1dx1ieZUi2ujE5fYnLarjU9SYlPa/tzwtmp3Y34THzEpvG0vvkPN
OhO8Xy9adrIqsUkb0VZGqxLr9EH6Im18wpIzpu3Pxfu30Va1IT5/DngrtRW8
oFqsRYf18jfX7m+ztjU8p/YA39XLZ/hZD7b5LH+zv/1h+CF4Z3he+K42e+ke
u9f6LLWUmkxfdmebs+aeu/f3tjk7W8Kzw4/Cj8C7ltjD7fCNvZx5z/4j8MPw
LiX28BD8ILxTST51T5uz5pn0bN7d5qx5Bj2L/fxbtcRHTc3vKfCAEp80LVzB
q5X4pOngKeBlS3KyyeBp4bXUZvBM8HTw2mo3eGZ4engdtaA+qsk9eW8+4wae
El7O2KyPgyeH25KcbVJ4MniZkpxxEnhSfUBJzJsYnhpeA74MngGeCl4dvtSY
2GTP3Dv3bCF4GnhN+HJ4xiY+dsmSmKnvnQReqiTmTQQvWEXbGjONnc/x/F7k
9YH8bdEB2WP32j1YivWtjRFot6ngE8wl4YElOdM6TXLGfeFne8klzYH2hp/u
JTdyD91L91xf556794/24huXgA8p8ZFrNcmBd4Mf6yU3XhI+tCRHXhteHD64
xGeu2eRMeDY8o+beV3j2+b3jw4epZVg/g79955lqco/eqzn6avBi8EHwy/Aa
assqsc8YaG3AnHB3+PFeckVrBnvAT/RSSzCH3gd+ppfcegB8IvyZNgWvA58O
f6sNwWvDp8HfeKbVvvAJ8KfapFodPh7+RJuF14KHwl/DO8JrwqfCX8E7wGvA
p8BfwtvDq8Mnw1/A2zXJefeCn+olFzbH3BN+spfcc3c1Bc9rTvhcc0/4sJIa
ybqst/ARJTn0+mpZ+CT4c30EvAx8eEkOux68Ffwyn1fBxxtL1TTwXPB5ajFt
Fp4AHqhW1CfBE8FHqCX1QfDE8JFqX30QPAl8lNpXHwJPCg+CN4efhaeEj1Gb
6nPgCeHD1XLwk/Dk8BB4M/hpeAr4aLUf/BY8I3wafIdnuz85lrnWNqy/Dk8H
n2Jsh1+EC3yc2hB+E54BHgpvC78BTw+fqjaAn4f74WPV6vDj8GTwYLUx/HZ/
NMHpamP4HXhm+Ay1Hfw5PD98MfyEZ6s/NRRrKbuy/gE8O3y22hR+H54NPktt
Db8HzwqfqXaEv4AXgC9RG8Lfw4vAV6s14R/gReFr1KLwl3ANX2ouAL8LzwIP
q6NhvoKbXrTNbvCH8BzwOWpj+Gt4QfhytR/8LbwwfGUdH6PtbVzF9+zHv29Y
X4i/XcH6821sVRvVVp9tY2v6HH3PM218jTaoLQ5ro33UFGqLM9poIzWR2ujo
NvWp3/qj94a0qbf82h99dxg8DTy8P/WsM9toEzWT2mlgG9+ijzH/PquNllKz
qF1Ob6PN1GRqs4vbaAU1hFriojZaQw2hlriwjZZRg6hFLmijZdQ4ap3T4N17
0Xxqv7PbaCM1g9rh8DZn1TNrPW1wm3rfL/3Rw4PgJeGf+6N392piO9qUtrVn
E9vS5rS9PZrYnjapbe7exDa1KW1rtya2pQ1ry5+38W36WH3tx218kT5KX/VR
G1+kj9JXfdLGd+nT9G1DzEt4/V/nn49sU0/8tD/1r/PbaDk1nlrvCHge+JP+
1DM/beMb9an61s/a+FZ9rr73qDa2os1Yj/ywje/SR+orz2ujDdWMasdz4MN6
0YhqRWtY23d619qhNS9rX9awrA1bw7KWZc3LWrM1pO06vTdbF2/X7fTC5J2+
3rbTa+pfc9b1Oj1sPLYGOqyLV5t08WhwSY3W+GpN19quNWFr1eZo+3XxVz1u
DXj/Ln4t2un1fbv4pP60pmxt+d0uvu1XZe/cw42b5GDWZtT/5mbWPKx9WLOx
9mhNydqSNRFro8e3yY9GLck3j2uTj41Skh8d2ybfGrkkHzoGXh0eqSRfGtpG
K6uJ1cYntMnHeiX56MlttK45gLnASW3yLTWwWviUNrmBGlwtbk3K2pQ1MGvv
1rCtZVvDtnZ/bhvtb05gbjC4ia/Sh+pLT2R9c3iCkvzv1DbaXk2vtj+1iW/U
Z+o7927iy41JxqYP2sR+Y6Sx8r02sdwYb6y/Fr6wF42qVr2ujVZVo6pVb2qj
/dR0arub22g7Nana9JY22lRNqja9vo22VdOqbW9rc9Y8c+ZaN7bRjmpKteUL
bfytGkotNbBJ7DOGGcsObRLLjGHGsqOaxBJjiLFkaJPasjHCWPFSG+2mRlOr
3dBGW6tZ1a63ttHOama186VtcllzTnPPy9rknmpWtetTbbSJmkXt8kQb7aXm
Uns91kY7qhHVio+30YpqNLXa0220jhpULfpkG62m5lH73NEmtzYnNjd+sY2W
VIOqRa9qo83V7Gr3S+CTe8nBzcUvb6Ot1dRq68OaxG41hFriijZaW02vtr+m
TW5hTmBucHWbXMCcw9zjyjba35zA3ODwJrFfTaA2OKJJrFUTqA0OaaIt1CRq
k7d4/wfwMbx/RWN/Gy2pBlWLvtxGO6vZ1e77NNFCahC1yH5NtJOaSG30Ntd/
CB/L9SupReCP4OPglY398Me9aFS16pttfJM+agX4tTZa8Uh4WbVTm/7IUfBy
2mITLajmVHsOb6Md1ZhqzVfbaE81pdryjTb9qkHw8vArbXIPNapa1d/kb/M3
bWntiH9z96I51Z7HNdEuah61z0FNchk1qlr1YHOuXnIcc50Dm2hXNZ5ab/8m
2k2NqdY8oIn2U9Op7Y5soq3URGqjQU20mBpMLbZvE62pBlWLDmmitdVIaqXj
m2gnNZZa65QmWuw7+AD42CZaTQ2oFjzZnKMXDaWWOrGJVlJjqbVOaKK11GRq
s5OaaC01ldrKZzioiycbNfkOv8vPvKrOnrl37tkGTWo42ttqVfJ9a0Da4xpV
8m99ur5dn2/tyxqPud6AKvm/MfzTTq/a27JGpL2uXiVfN8c2d16min8zhhhL
jAHWMo0RxgpjiLU2c2Lz/6Wq+DNzXusLS1fxl8YcY48xyVqdMVd/2FSxPzWD
2kGNYW/UnF3/sGaVXN4c7Ff9QRV/bQ73m/6tij3ZU3P/Xi7ptZmj/aI/rWIP
xnRj+3JV/K81AnP1Zav4P2t65qqrVKl3WKPR361VpT5jjcH6TFvFv1uzMxdf
tYq/Mj+5u8tvzEfUoHd2+ZT5ijUM/W1dxb8YQ42l6/RS67UGYfxYoIp/+7yk
F2RP6NE6mlht3PZSG1UzfdblH/Z21chqZTX0/9dGm8S3Xar4TzWn2lNNbW1W
zan2VJNae/VMqf/2qjr/UHK2PeO31MkBR+b11SX60xxf2965SryyBqB/27VK
vLEGYbzdrYp/M0dVf+5ZxZ+Yw6r3dq/iL6y5GE/nr+JvraEYL9auUlv5vaT3
Zg/EXog1GePxfFX8uTUU4+m8Vfy/OZP2/mKJHrBGYz1qySrxz5qT9bDFq8R3
c2T18B5V/Js1KOtpS1SJ32o0tdq6Vepv1rCMV4tV0QvW+Mx31qlSrzNHU7+8
VBKPr6vjX1+BDxmQHEv/9HyJvzAH1B89UBLPzTHVL/eVxBdzUPODe0vijznr
WO59ib8zpzRePFji38w59Y8Plegnc2jziXtK4qE58tjubYk/NWc0/txf4i89
w57lO0vimTm0+cfdJXrEHNr8464SPWKOP6a+pMQfm8OPAd9YEr/M8UfXtkv8
rTWGEeErS/IVc1L998Ml/tccfDT4+pJ4aI1hVPjakvzIGkMPvq5E31nTGAe+
tSR+WIP5y/hVJd+xBvOn8atKvmPN51/jV5V8xJrMH8avKvmHNaB/jI9V8hdr
PH8bP6vkR+ZE5kaDq+RX1rfu6M89eW/W5Mbl9W0l8et0rl8C/qk/+2/Orr57
uiS+aGPa2hsl/d9b68THN0v6t+bo6o9nS+KJNQL14FMl8dOelb10e+j2sqxJ
qEeeLIlPxhD14gslsUWfom/5oqSfbU6vnnmuJB5ZEzIeP1oSr9UIagVj/obm
K6wvzuuPSvqn99bRnx+W9IfvqaPHPyjpH1uT+t1nU0V/W9Mynj9SojesKY0C
X1OS75rjD+/qPc6ymEO/1tV7rK/4DH2W/gZt6646sfK9kn75HXXi7zsl/e67
68Tv90v67XfWib/vlvTTb6sT798q6YffXidev13SX7e+83pXP/LZntbku53p
MN5Yo1SP7VSlHmJP0FkCe2T2Cv1Oe/329P0tPhN76/Z4fVb6+14XX/Xv3oO9
f3vC3pt7NFoXL9w7/fNvnb/X/3sPzgbY4/fevAd7+84AeG+eoT+6eOLZ8oz9
3sUTz557ar6+d5W99p6dLXBGwGdhD9tZB3us9rbdY2cB7GG79/b0nP1w5sJe
nz1BZy/sIdortCfoLIj1bXuF9vycbbGfYy9wC/72E68PrKJv7Yk6C2NP0V6p
PVFnPezJ2iv1zNm7t6fuWbQn7GyBPV57xfY8nTWxp2sv1B6psx72IO2deiac
hXCGwrPiDMzoXXx5rM6MjbM29qidDfJvPssvS641Jzc337eKvt4M/hE+oIre
N0c1VzUntndpz99ZGXvYzgJ4jbmBmn6zLt83/zcftr5g/cV6gzNYuzb5DrW8
9QG/2xq5792xSu3cZ2Zu4Bn0WTpT4OyKMwjOGjhD4OyCMwrOFjhj4GyDMwLO
HjhTYD9r2y6+2pN3tsP+lr16Z2acnXHGwNkpZwyczbBH7+yBMwXOZjhT4KyB
MwfOWjhT4CyCMxLOZjiz4OyEMxbOWjhD4SyVPWX7H/Zn7O85M+XslDMLzo45
U+EsiTMJzlqoB6xNWKNQP9kfNJczp7MfaI15JF5fVVIfc6bBWSh77s46qLGt
R+1TRXs7M+Bskz14ZwnMWX7m9UFVchn7fdb2rPHZH3Qmwtkte/DOSjij4KyP
/UFnF5ypcLbFHrezFvYPrTVac7Sf6MyGs1XOEDjL4UyCs0v27J1VsAdvv9P+
pv1GZxzsP9qPtN/4f4JEvYA=
              "]], 
             Polygon3DBox[CompressedData["
1:eJwV1mXYVtUSANBX8kqrhEqroEijgiCNqIDSBiWtl2680o1KSxh0gzRISkhI
I6V0KaBStnhJXfNjfsx6Zu9zvu89e8/kbtahdvskiUTikEgullZOJCrkSCSa
ZE8kPk+ZSDxaIpFYyEqw19h89iBbwsqzxmwFe4RtZY1YL3aIlWc/sMFsFrvN
2rAFrDh7lc1jWdh5NoBNZzfYf9l3rB+byv5mb7HP2DOsLpvLMrPvWX82jf2f
vc02s9dZd7aHlWLnWF82hV1nLdlGVpd1YTtZCbaavcLass2sKJvPnmZ12ByW
iS1nlVgztorlYSvZC6wlW8ueYKvYi+wtto7lY3NZMVaLzWIPsLWsBmvPtrJi
7AzrzSaxP1lztom9yrqyXexZdor1ZJ+y31kTtoxVZE3ZSvYYW89qs05sO3uG
fcleY93YblaSnWa92ET2B2vGzrI+bDL7i7Vgc1hRVpPNZPezxawce5MtZ7nY
LtacDWDH2ItsESvLGrFlLDfbw1qyQewEq8KOs+5sPLvKGrAjrAv7kF1ib7AT
7B02gV1jDdk+9jYbwk6xauwY68bGsSusPvuKNWZ92DesEvucVWYt2Br2ONvB
mrJ+7AirzHazFmwgO85eYjtZM9afHWUvsB/ZEDab3WFt2RpWnbVjW1gRtpe9
xQazk6wqO8q6srHsMqvHDrB2bDg7z2qzb1lnNob9xF5nX7BarCP7ij3NLrCB
bAa7yVqxi2wQm8lusdZsHavJOrBt7Cm2jb3JerPDrCLbwOqwzmwHK85Osh7s
E/Yba8q+YZ3YaPYje41tZ01YX/Yte54dYh3YSHaR1WWHWUc2iv3AXmX7WVs2
jH3ParJ57ClWm81mGdnXrA37gH3HarGf2FA2h91l7dhB1p6NYBdYHTabFWE1
2AyWga1gz7PmbDXLy7rGNx2/Y7ZEIiUbUtzz4tuKv4vlYlPZBvaQtfl4D3aD
fWi/5Owx1pWdZyvV3cseYq3YT2wNS8OysbbsClvFUrGHWWt2iY2xXzL2KOvC
vmfb1OVjJdkwlireTTzJSrHhLHXcByIbK8B6s9vWjrNfSpaXdWcX2XZ1+dlz
bARLE+dDFGCl2UiWVj7W2hQsD+vGLlj7McvInmKD2B/sE5aJPc0Gsz/Zpywz
e4YNYX+xUSwJy806se/YTs8pyMqwUSxdfGuiPmvNNrGy8mnRL+KO9HuUYxut
PciqqWvAl7BC8f2Jl1lDtpQVjnMk0rOcrAP72dpNLCvLz3qxW2w9y8BysY7s
F7aOpWM5WHt2ja1mqVlW1oZdZmtZWpadtWNX2Uf+3gdYMTaQ/c7Gs/tYEdaf
/cYmsPtZUTaA/coGsm+jd/h7K7BlbKNnPKzuSd6T3WS7WCFWlo1m6aOHiuys
IOvD7qg7wlqxd9l+Vl3e3zO2xzn1jKJsuroBbEecU1aMTWOD2dHovawSW87e
Zz+yFKIu28qO2rO1Z/RgB1gN+XvqfpAnF3XYFnUj2d/yzKIl+4YNZ3/JM4rm
7BA7Zv279nufnWON424X97D7WBN2Vt0KlmAZWGN2hg2z35/yB0QzdiDONPtD
fr9oyg6yEey6PJNowQ6zA/arar/6bDErKB+i7oI8qajFNqsbxI5ET/V/qciW
spnscWtf4B+zlHG3iwasDfuSlZNPVJeFFWdD2XVrt/AcrBDry+6yrSwnK8z6
sX/YDGvzssrsI5ZCzVB2UZ5M1GZfquvHVke/83652Rg2neWx9nk+gSW3djRL
yh5hndk5dZNZblaefcgS6iaxXKwcG8PuYVPYI6wCG8uSsKnsUVaRjWNJ4/yy
x1glNp4lY9Njfow5xfuVZ5s8dz+roq4eX8QKxH4xU0YvUleWbVDXMWY7to4l
ZQNY/5iT2FaWhU1gXdjC+L+zFGww6xazTvRF9h82lL3DlrKdLBV7n3WKuZWt
Z8nYQNadLWHb2b3sPdaZLWAbWXI2iL0bcybby9KwYaxPzIpsA8vIxrKe8U3H
eWHp2Ij43eLOYptZZjae9Y2eHvchy8TGsR7Rz9jXLC0bzv4X8yPbzVKzD1jv
mGVjPmIZ2Kg459H7Y65gD7KP4lzGDMNOsSfYXDaUbYk7g2Vnk9iQuGPYPpaN
TYw7IvoP28Oysk/jDmMbY65gD7GP2XtsKzvIcrDJcVZjzmTHWR42K84W28R2
sYfZJ3FHxMzGTrC8bHb0t7jzY4Zghdii6DMxP7LTLB+bx0bHLMHOsCfZ/Oi1
MYewsyw/+yz6ecxncd+wAmxB3BEx37KT7HE2h42NmSNmElaQLYw7MWYsdpjl
ZFNYL7aSHWLp2ci476PHxZzCirAl0S/ZKXaVlWRr2G5W0lmowiexrPKZ4rL8
prqX2A51s9gVdotVYTvZbHaV3WZV2S42kZ1m11gptpYtZDfYveINdjTOPjsr
/0VdafZF9H12gl1mJdgqdpjV836t4ttnZeQzxCX5DXUvsu3qprBz7FdWhq1n
k9gZ9jN7jq2LfsmOs0usOFsZs0XMo+wKe5atjh4aMyU7zwqzxWwRu8lSiXrs
GNvDSnm/qmwyyyafK36W37X2ZbZH3Rx2jd1h1dhuNp/9yhKiOtvHFrDf5UlE
TbaffcZ+k98jarCv2Tz2i/wf+73C9rLF7BZLLeqz4/G7uRMLe7/qbDq7L75R
UYa9wqaxnHHfiNvyNKIBO2HtUnZHnlY0ZCfZXvactdXYFJY97iDxjzy9eJOd
VreM3ZWnE43YKbaPlbb2ZTaV5Yhz7/0asp5xXlkF9i8NwMMS
              "]]}]}, {
           EdgeForm[], 
           Directive[
            Specularity[
             GrayLevel[1], 6], 
            RGBColor[0.647624, 0.37816, 0.614037], Lighting -> {{"Ambient", 
               RGBColor[0.40723968, 0.3210112, 0.39649184000000004`]}, {
              "Directional", 
               RGBColor[0.2590496, 0.151264, 0.24561480000000002`], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               GrayLevel[0.3], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[0.2590496, 0.151264, 0.24561480000000002`], 
               ImageScaled[{2, 0, 2}]}}], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1: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
9J6h+nF+5n5iCX52Qeb+VEk8G/+r75bfNSdznZ9jfG7mHmIxPC9zD644/itz
XNjH63tErzfVWauoFwq09lVHRu+pO/Hh0etHdZl+z228prj2gejYpzqlkGts
3nmyagLVsJsS1xCq9TYmzvdVw27Ah0THR9Uv7aJjq2qlVtG5purHFtE5sWrS
1tGxWzVU2+jYrTqrTXTsVr3TIXr/UK2kOkZ/z+bE9YpqzLWJa4Lr8L7Eefq1
eG/iHuT1eH/iGuIGfCBxX/BGfDBxHaMacH3ieugavCdxr/EmnEtd96i+W5e4
z6mYvLsoPismr07cP1T/s2zqmkk9gTWMd4yOj6orO0XHRNWzhdF7np5L4+g8
XrV/0+jcXXV3w+i8Xz2K+tE5d1/cIDpvVo+iRnSOfjhuEl37/b82j64T1Os4
LDqGqtZuFF0DqKfRPTrOqo4uiK4f1ANJo2sG9UxqRtdpPXCt6HqvJ64dXfMc
gTtHx33V74dG73+qx7tG5wSqwbtFx27V4CF6/1AN3iV6j1S93zK6DlGPpXl0
XaQeSJ3omqqXehTRdZT6FfWi640+uG50HdIbV4uuPbrjkdE55Q71VAqdA2gf
G1VUa5yH7wnup6lHWjs4Z1OsuyI4N1af+fLgfFi95auC817Vnlfjt/KuN68M
zo1Vh7YJzofVSzwXP5V3//mc4NxePfDLgvPwsvwt1+Kn8+6zXRPcQ1bf7Prg
vrH6Yw2C83/1Qk/At+Qdl7YVOtfSHtQwOAfWPt9ae1XefctLgnvX6r/dENxn
Vj+tnva8vONk3eDaQf3V64J71Orj1Q+uL9SPrRS8t2rvu5vry7x7bmcH10fq
4Y8Orqe0JnoFrxetld7B60v9hDOD6yz19vsEr1n1H0YG1yDq2w8NzvnVozge
T827/z88uB5RH2BYcN6u2vzY4DWoNXpjcN9ePca+wfFBvYuBweta/Y13gs8a
NGfuCK7R1DO8K7hGU115Z3CNpn7jkfjmvHsptwfXeqqlzgiuE3UG0S845qg3
cl7w2ZD2rP7B8Ue9kbOCazGdidxWNAf0PrcG9/zVE74l+FxAveLXgs9lNJ+n
B5/XaC2MCz6LUa/47eCzDK3HV4PPerQfvRV8xqQ1+0bwGZNixZPB51/qXT8V
fP6lXu7rwWdD2tfeDD5L0tp/IvgMSD38V/Dveff/nwk+U1M/fEzw+ZfOES4M
Pv9SH/6C4LMz9fbH47fz7jk/HXzWpp75RcFnZDoLeDn47El78bPB53c6U3gu
+DxOZwfPB9fL3fjexgafxahvfFxwvax+0dTg8xGdTTwefBam84gTg/c75Q+n
Bp/lKQ85Jfg8S7nEacHnRMo9HsFf5X1ucnrRHNPcvjj43Ec96puDz4zU878p
+NxH/fxLi9aC1vio4P6D8oppwec1Olt5NPiMT2cxjwX36nXOMin4vE99+MnB
Z4LqvU8JPu9Tv31i8Dmg+vYnB58tKs+ZEHxOpD7/vcFnAToPejj4jEDnO/cV
zeFW/G0nBZ8jKAf7IDg2DmJ8RHAtr7O8AcH7pvqH5+NpeedpD+Hf8u717S90
va9c97vgPpJi7eDgekR5SxZc7yjPOQpfkndO1R2fnvcZzTHBNY7yokHBdZNy
ofLB9azyt1bBNa/OccoE1/jKz/NcvfLO29sG1z46xzk6uOZSHvVgcH9GfcgH
gns46k8eHlz7KCd8P7jPo+9hd6FrRp01lGO8Y969pjWMV8377Gl1UW9W+8t7
wf0u7dfvBvcetU8NCa7XlLPtLdqPVLcdEZxLKE7eXzS39VwqBNd06uXEoliq
+PZC0d+m+b+H92mU91lYu+CaTmdepYP7G6pB5hW6P6waunhwH0Z5eLHgPozy
0orBe4d+V7fgOlTnYj2Ca0Dllj2D60Tl2B/iTXn3KqsF9z1UX1QP7nWo7qgZ
3DNRznmg0L0a1T4HC92fUW5cNbjfoprlJa4lefdFawX3VVSb1Ajut2gfrxLc
L1Lt0z64nlV9XDm4BlQdlAvuESkPfzG416c+bdng3oh6gyWD+0uqTUoF94VU
s5QI7kGp/vofZ8gmnQ==
              "]], 
             Polygon3DBox[CompressedData["
1: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
vbIeQW+j59Qr6xH0ou5J7k3uSWZX7knuTWYCZplmNGY1enSzRTMRsxE9j1mW
nkfvoyc2OzRjMWtRg9lr0lPqLfVMZtl6RL2intPsTQ+hl9BDmF3rMfWaelh7
V3pQvage0+xPT2X2oafRa/2coldhpmu2+0wKrafm65yHB9YL67HtReip9dbd
qpGF6rn13npus1I9sl5ZD2w2d24KL6InMUuzx9cpRcZp788eXOcUGai9uU55
6MmnUui/PrXQWmous3U17Fj4g2poWzXr9vC0amhZPcImKTSq3kGPq9fVE5uN
65n1zq5Js1g9w6YpNLBeQk07Cf6+Glq3Xguvoeew19ioFnuVe5bZtT0ie0Vq
bHuB9rzsfT1fjd6je4R7hZrY3o4Zb/8UGtjs10y4b4oe5RFlvbmnfJ6ufzPl
Pvy/+6qRNZsJ90vRczQr1uPdXb4P65Oe8a7yeS8ZFh5UL6rmaJTHM32rrMc+
azW32lvN3TGPev1MWd+s72p2tbsavX0ev2EtvDrFb6vJ3y73g85l/Tk3i56B
+4f34G9fleLe1Pz2yvR0Z5Xz7Z1yv3PvVrOr3dXc/fKYP5PL/cf5ZsZ4Xrk/
OZ/UUE+V9blJHhmGWYYZib1WM6+ny3rq/qNH0CvoEfrkoenV9s65/nl4mK/K
+T8gDw9jr1CPqbdpXwtvpkezl2UGnKXo2ZkNXzo+9g/326fy0CRqEzWGvQo1
hlpDDWNvRI2n1lPTmZWr6dR2akKz9LG12L/dr5/MQwOqBdVEZv1qRrWjGtGs
Xk+kN9Lj2PtV46h11Ehm92owtZga0Szcd+qzeCLFu3b/OyZFz0694JzwXTyZ
Yq74jn02T6d492q23uX89HmoOdWeaiyzfjWaWk1NZ29ITderXD/2jvQEZttm
OHoFPZneTE9m79ln6NrepBbPVk+cl+vLejAwj3722yn86TspslozDbMN/5/1
bNtqHOscca7flWLuOAfs97+eYm44R1wbd6eYO64Z5/6dKdaSmlntrCa2d+Ec
tZ/7Roq565yxH/1Wirlk/aqX9cF6pccfVs4fe/lqWrWtGt5ejRpeLa+mthej
plZbmxnYq3GO2k9+M8Xc1fPr/c0Q7EWaKZgtmAnYW9UTmv2bAekV9Sh6FT2S
vTUzjanl8zLr6Iq+vbkac9q5rYfRy+g57TV1qcdct2Zbu/WgelE9g70aPYRe
wgzC3os9YXvd3rO9Yj2F3kLPYa/GHq7fWvgM7e3qcfW6eih7XVk9tI2aRG1i
ptKu1C/WXzOYtqV+sfdXq8de4h7jXmMmYzZjZmPvL9Vj71EzqZ0610PrqInU
RnqGKeV8ycp6377UQ9Zfe+T28n3H9s7twfvtgXPQ3rweSa+k57G3pMY3+zLj
Uvvbk/ZbDXvY9qr1GGZRZmR6DzMisyIzqAfzyKTMpsyQHsjDg5iVmVnpTezx
+y3HPtXQP/bI/dbBHry9c3v+fgthj99vAcz0zPac8/VSP9lrMRM0G/QbAr8d
safvtwV+I+C3HX5z4LcD9nzVW8dUQy+oH5aUekv95zcCi0s9Nq7cP8eW+7H7
qd8U+O2H3yz4rYE9a799sWdvL9u/2Tx5vVo8i4fyyK/Xr0Ue5zMwHx9Vi2fz
cB759Qa1yMMG8j4/rsae7t4+oB57u5pAbfB4HlqgqEX+2L8e9+Y9qi0ey0ML
jq5FnvmyNdq/rRb5+TPWVK9fi3zyOWu8z6oW+eITeXipMbXIH5+35vvsa5Gf
v2gN9NnUIt9/wRrps61F3m6Nt9ZvXIt8s009tLYaW639aB7aZaNa5Kv29Kul
/la/d6iHllZjq7Xb10Nrq+HV8n7z4Lc0fgPitxDt6qHt1exqd78B8Fsgv7nw
24C29dDyan61v998+C2P35T4Lcgjeey1G9Yin/SbBb/N8ZsRv2XoVg9to4ZR
y/iNRcNSb/rtRc96aCM1kdpIP9Ko9Bf6kx710EpqHrVPJ/jiamh4tXzHemh5
PYReons9tJGaSm1l5mb2Zkbnt1VmomajZrb21s34zPrM4Py2zIzQrNCMzm99
zATNBs0Qbyj3/z6lXlPfmeGZ5Zn5+a2Qz8Cs1gz8kXL/nlTqU/cy3+l2pb70
XTuHzLrNHJxbZrJms2acfmvlHDRbNzN3bjqnJpZ61LnmHDZLN/N2bptBmkWa
Yfptmz0He2/20OxF2COxV2wPzd6J++Wcsn79/146PurBPuX+aYZor9oehNmi
GYq9bnsQZitmfva27amZBboGzNrNOFwb9hiWlPXC+mKPxN6lPSJ7J/Yk7P3a
87FXYQ/D3qE9Q3sb9jzsZduzsRdiz2NuWa/shdjDs7dsj8jenj0oe1HWDL+d
M4MySzRjNJtyzdlbs8a4Fl1D9irsYbi2rDFm/2bs1h4zXLNcM1y/7RvM/Jpe
Dc+h97DmmMWb0VuLzHDNcvUrflvmmrd3ZoZkLRhUj7ngnNBrDKlH1qBmVN9Y
Y+zVWdOsPdYEe3HWPGuFmbN+SP+jH/k/Dqy8RQ==
              "]], 
             Polygon3DBox[CompressedData["
1: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
ZoPYvzg1ll0=
              "]]}]}, {
           EdgeForm[], 
           Directive[
            Specularity[
             GrayLevel[1], 6], 
            RGBColor[0.571589, 0.586483, 0.], Lighting -> {{"Ambient", 
               RGBColor[0.36004492, 0.36421523999999994`, 0.2]}, {
              "Directional", 
               RGBColor[0.20005615, 0.20526904999999995`, 0.], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[0.20005615, 0.20526904999999995`, 0.], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[0.20005615, 0.20526904999999995`, 0.], 
               ImageScaled[{2, 0, 2}]}}], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1: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

              "]], 
             Polygon3DBox[CompressedData["
1:eJwtmnXAFFUfhV/bFbvbmbW7Y8fP1rH1xQAFERsbW8FWDOwAA7vBQLC7A7u7
u7v7ex7O/LEwz97dfWdn7v39zjl3yx0Gbrb3hF1dXcP4Z2L+/6q7q2vBsqvr
7VZX11RVV9dRna6uTTkexnMr9uzq+oLx+Tl+k+d6MP41vBD8Djw13IfjfkVX
1wzw2rz3SB6bcHw2z6/A+8/l9ScyvizP7cTY2XBfeHp4TXg4PAieF94CPoLH
xhyfxfuX5/3r8XiB8SN57lLGvuH1CzP2LjwNf38YfAjjbXgzxr+EF2D8LXhK
xmdvd3UtAr8HTwvvzvFgXj8fvCWv34XH8hwfyvPz8rdOhHvDF8ArwSvDU8Cb
wxPDG8Nz+l3gGeBN4bnhXeCZ4D3gCj4KXgiekMdu/L1Zea7D2P949PC7Mj4J
Y6vAU3ou8KRwBbf8LvBE8KrwVHAveDJ4JXgyuBueAF4BngTeBP6P774dvCR8
ENxmfHl4Ynhj+F/GV4QnhTeFu3rmnCaHe5Y51+XgieCN4H94/SbwXPDO8IyM
f85z83H8Bs9NwfUcwPgKHB/Gc/MxvhW8ILw3PDvcF14E3heeC+4DLwzvA88J
bw0vBA+E54CvhQfBd8Prw9vAi8L7wXPDveEF4L3g2XrmHnov94BngXvB88N7
wrPCu8Md+Eh4Qe8FvBJ8BLwAvC28OHwAXMC7wivCh8Pzw/3gxeD94Xngbnge
eAA8M9wfXgI+EC7h1eCp4d7w5PAG8Gzw9vC08Ibw7PAO8HTwyXAf+GJ4ZfgU
uC98Cfw/+BJ4b3gsvC58MbwXPAau4YvgPeEb4XXgk+Ct4YvgCj4YruGT4SXg
Q+B14VPgJeFB8HrwqfBS8OHwRvCZ8HLwYfCG8Bnwsj2zBgfCN5VZm4fCG8Cn
w8vAA+FV4SHwYvBgeH34NHhpeB94Nfg4eHH4Anh3+AZ4LfhCeA94NLw2PALe
Db4eXrNnaoy1pi88BVzDM8H94CnhdeAZ4W3gHtYPeBa4Pzw1vH4na3E7eBp4
I3gOeEd4enh1eBp4K7gFD4W3gi+EO/C68MzwtvBU8F6uafgYeBH4VHgbaxW8
CnwG3B++Al4d3hNeGT4aXhg+Hd4WvhxeDT4f3hW+Dl4D3hteBT4WXhQ+De4H
XwavCn/EepyH45d5bhLW483wq9Sb4+Hbee0ncMn4q/BkjP8OrwB/Dc9VZY33
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
a1XxEmp8tf5qVbS0nkRvcnsdLaRn1DveVccb6vn0fotU8Xp6HL3OolW8mx5Q
L7h4FW+nh9JLLVzFC+1RJN9arIq32reI91uiipfSE+oNF6zi1wcUybsWqOLn
9ZB6yTvqeFk9ql51oSp5i5mbedaScNGKR9OrLVVFy+uR9ErbVdEqaii11JpV
vI4eRi+zXBVtqGZUOx5XZa26Zvvr56tocTWV2mqPKtpKDaWWOh5+zvnB67eD
T4Cfh+eEt9cbVsk21fRq+2Ph++EpGe+nV6ziffXAzq/dq2gzNZXaagj8ADwV
49vqdausJddUX70tfB/cA97G/KSKlzyziJdcuYoX1jPrnasq3llPrbdet4rX
02PqNddTo7biAfWC61TxqnpUvWpdxYvqYfWyq1bxtq4h19IqVdaSGkEvvGIV
7310Ea/eqeLl1dBq6f/BS7Xi2fXuK1XR1np2vfsKVby9mlxtvnwVba6mV9tv
X0W7qknVpjtU0apqWrVt/yraWQ+ll7KG2Mu+K1NbrDn2uu/L1CJ7jLXikzK9
p6u5v1Oy/nfsmR5j7fu0TO+xB1mLPi7Tm+wB1v7Xy/QGPbi17YMy3tyeYC39
rEyv0NNYKz8s43XsWWrjN8r0MjWzteqjMlpaD28tfL+Mt1dDW3s/L6Otrbn2
8h/K1GLzlfU5/q+V/MYeZi99tUxvs6fY68aV6TVqxvG9sIyWVLPa+x4vo2XV
mPa+h8toTzMoe/VjZbIpe6a9+LUyvdSeby3+oowWsKfbu18p0+vVuGqBR8to
XzWuWuCRMtp3dB3tp4ZUS/aq4n313HrvLar0Tnuo3rsfvF0rnlRvuk0Vb6rn
1ft2V/FqlxXJJnar4l30VHqrXat4Kz2T3mlAFW2uRtdr7gLv04qH08ttW8Ur
6Bn09j2reD89od5wxypeSg+ll9q5ivd7sIjX26mK19Nz6b02q+JF9ZB6yU2r
ZCdmGmYbm8PdrXhWvWvfKl5+bBGv3qeKV9eD68W3quKlzQDMArasklWYYZhl
9K6SDZgpmC0Mhd+HFy0z37eu4uX15HrzDatkKWY4ZjmbVMlazGDMYjauksWY
0ZjVbFQlqzGDMYvZoEr2Y8Zj1rN+Fe2qhjU7UlOZXb1YRmud2PRf93h2YPwA
+HT4PV6/CXx1He+gZ9A7XFPHO7iH4V7GyDp7Ge5xudd1VZ2sVM+h97ikjtZQ
I6oVL4VfaMVT6i0vq+Mt9Rx6jwPq+CM1mevlxjrexszF7OXyOt7EzNbs9so6
XtiM1qz2ijpZrh5Zr7xfHT9mpuv6GVMnuzEzMDu4Af6gFQ+kFzqtTr1R06ht
Tq9Tr9RkarMz6tQnNZva7YI62lzNrna/sI52V4OqRS+qo0XVZGqz6+rsFboH
6F7gxXW0mppMbTa2TpZhhmOWc32dvUL37Ny7u7bO3px7ju49jqqzt+ienXt3
p9apZ2o4tdy+dbytntf1v38dP6pntt4MqlMP9Ax6h+Pq1C81v/X3+Dr1Rs1t
PT2kTn3SU+gtDq5Tz9TszqfBdeqNHsP6c2id+qXGtx6+r4eGv2367Ql16vnv
Rerr4XXq5edF6vthdeqjnsF6d0QdL6AHsX7vU8eb6+GtZ0Pq1D89jf3l2DrZ
iJ7G/rE3fHQrHt76O7COl9fjW28PrOMF9HB6ub3q+FUzAbOBPev423FF/Pse
dfymGYX+/sQ6/UVPZj0+us56M2Oz/xwEn9mKJ9IbHQlf1kqGbL85pk4WZ6Zj
PzqqTrb8Q5H+dmad/qYn0BucUqe/qbnV3ifV6V9dTb+9tU72ZcZm1nYo6/tS
+7Oehut/CHwR/LWeBb6lTtZlZmZ2dnOd7NAMzCxs2zreSU+jt+lXx+voqfRW
fet4aT20XnoQn38x/A28ufWS8TVayTDMMraBe7bimfROu9bJE8yozJP61Mk+
9Oh69cF83iXOH3gLs0R4DPwv3AfeFz4FfhveEN4PPhV+B94I3h8+DX4X3hje
Bz4ZfgveAB5YxZvp0dw/3Rs+qpU9dPfrDqqS7Zvxd5uFwqPhv+Gt4IPhC+Gv
4J7wYVW8jp64l1lplfn/D7w1fDh8QyueSG+0dZ1sx8zH7Kd/He84sogX3a6O
F9Wj6lXPrtP/9Wh6tXPq6C0zB7OHYfCDrWQMZg3n1tEvZhhmGSPqZAlmDGYN
59fJMswYzBrOq5N1mHGYdQyFx7biGdV3w+voPTMNs42T6+ixCRp9dFYd/aRn
1DvuXidPMuMzH7upTlZtRm1WvVudfMnM0jxwALxvK5mkeeKOdfIfPbfee4c6
XtzMyOxopzpe3AzQ/GeXOvmQGad508518iAzO/OpA7n+Z8Dvw5uqdxnfvhWP
r9ffEl66lUzNbG2LOvsV7nGYz29WZ6+qb5H9i83hspXfVLjf0KtOFndikfy/
d51838zP7M9MxvX+Upl6qqfT2+nB/C2DmYnr/4Uy9ULPbb/4vbmeZkj2w/+a
62+GZD/9t7nfZgj2p1+a/mWGq96bqp3+a+Zgv/q16Wd6fPv1H818MtOyn0/Y
zv03w7K/drUzv8wI7c9Tt9O/zSjsd7819ck9VfvtNO30azMF59dPTX8yk/8D
nredeuMewJ/wfO3UK/ON2Zq8wnPTM87e5E3mHa5Z165r9rpONIvaxTV+Yyc9
Rm+nJ7T3uEfwC8fztNP/XYOuRdfwc53kxdZ+e4D5r3smv3FctjM/3VP5FS7a
6c/WCGuFeZ/5shnsTxzP1Y6eNhOzf7fa0T9mLvb/ydvp99Ysa5c14flONJha
zN/nmGepEdWKajS9kjXGWmPNeLbJv9QG/g3/lvuP9h57kF5Hz6/31/P72xc9
7RRNnmM+p6ft0eRH73bimfXOet73OqlZ1i7zxaeb/Mreaw8237Rn2Dusefd2
UvOsfdbIezrJLNWLE7dTX8ws1ZMTtVNfzOjUL5O2o5fMPNWTk7Sjp8yw1DuT
taOfrPnWfnvK/Z1knPb3l8voF2uytdl80nzNjFZ9OEE79c7fM5m9mMH4+yfX
vGtfzTumk4zArMD9eLMp97D+4nj+dvIg94B+h9vt9EPnmPnFA2XmntfUev9V
kx/4G4B/4YXayauu78QP3VumP3nNvZdfN/mC19y5+E2TX3iP7c/vlLn33gOv
7Vtl7o2Zm/X750avugb0V/eUWRs3dJJ33Fem//kbBuvtdO3o5dGd5C33l+mH
XgPzlAfLXBuvkddqtnb0p9fctfVcmXvhPbffPlNmLvgbOPOkWdrRp2Z8zo23
y/Q354T99ukyc+W+Tvrzs2X0wQOd3Ivny+gTfyOlfpmxHb/hb9LM02ZuR+96
j137T5W59+P3OOxX7fgP17Rz5d0ya12PrldfuJ38zb+pNvEaey7WFNfCX2Vq
jeegVlJzeG7eM7WF38F7acZpf/yx0V+uWfOtHu2sZX8j8je8QDv5n9dY7eF3
9tqbaZlt+Z7vOvmNyD8cL9hOHucac609UUaPeg/VMl5z7601w3N7r0wt8TeF
5qOztuMvzMjMysxYvu/kN4jmmzO149d8ztr4T5nXukfjXs2GZfJT9xj1I9O2
46fcM1IfztCOH3QP/Gd47nb8mXtIP8JztuOn/E7Wkr/LfFf3B9Qqahazi/8D
/8kOxQ==
              "]], 
             Polygon3DBox[CompressedData["
1:eJwV1lUYVtUSANBfGukGaSTFApVOUUBpULq7G0S6QbpB6cZLN9jdgBIWCkqY
GDQI6F3zMA+zvjk1Z1fBjv0a902SSCSOiuSibc1EYnHBRGJfgUSiU+pEYmL5
RGIQ+5D9xBax/WwAe5+dYwvYXtaOLWH7WWc2ifVn77GzbD7bw4awj9kvbAk7
yNqzF9kB1oVNZp3YBvY+G8QWsOZsMlvPGrFBrANbx95lA9h81ocdZF+zKWwT
6872sGNsPFvD2rBFbC/ryMazLmwT+5ANYYtYZ7aRfcAGs4WsI1vP3mMD2TzW
gk1hG1hjNpD1ZPvYCTaRrWcT2DmWNJ7NvmSt2AvyTeqeYUNYSzaVbWRN2GDW
i+1nX7JJbAPry95hP7K5bDfryl5mH7GhbDHrzQ6wr9hktpH1Y++yM2we28UG
sg/YebaQ7WOz2VWWNXrDfmGD2Ufyn9UtZgfYC+wvll68zc6yaexveQbxDjvD
ZrBL8kzRQ3aezWc35TnFp+wCm84uyjPGP2bn2Dx2Q55DfMJ+ZzPZZXnmGDPs
JzaXXZdnFx+z39gsdkWeJf4n+5nNYdfk2aJf7Ff2EktWKJG4N/rFbrBlLAUr
wr5h/7AF7F95XvEFu8x6sL3y4/oyga1jjVkLNowVZDXYUpbc/QrHWGU32UL2
nzyfOMouscXsLnUF4p7sKlvEEix/jGl2hb3IkrJCMT7YdbaEJWEFYwyya2wc
OyO/S+xmx9lyllJdUfYtu8VWsFSsGDvJbrO1LCN7KOY/S14hkVjN0rMHYhyx
JGwVS8fuj3HJkrI1LAN7MNYEloxtYtnYo+xXdjfbyLKyR2KdYKnZOpaJPRzj
kqVg61lmVirWJ5aSbWBZWOkYlywVe5llZ4+x31gatpnlZGXZBZaO7WQFWFV2
lWVnW1guVo79wdKzbSwvq8QuscxsJUvNirPv2B292srysIrsIsuibjvLxyqz
yywr+x/Lwcqw31latosVZNXYNZaD7WaFWHV2neVkO1h+VoVdYdlYa7ZQvsdY
68AmeJfKvBcbwYqwpqws68j6sNysLhvr2h9ZQuxiR2MtUbc2xoq69mxurJPx
P6OGtWNzYk2MPrDtrDWbGWs7W862spZseqzZbAXbxlqxGawtW8o2s+bshdgD
YhyxHawNmxVrNlvA1rGGbBx7ls1gy1ht9nys2TEu2U7Wls1m3Xzb7phXbBxb
y55RN50tZbXYMFaSPcP6srSscuxvbBnbwlqwabHWsbR6n4d/zu6STxB/yO+o
285+UDeZ3WZpxZvsb9aAjZPPVVeJ9WEN2Xg2j1VmfVmjuCebz6qwfjF/2e/s
FtvKTrG9vq2wd6nBb7J71OxjRdgT7B+Wm90vnpX3d206VsW1E9mf7F+2g/3I
xrML7Dbbxk6zSewWSyPeYH+xKeyOPJ14i11k97Em8t6uTcMqsaZsJlvOnmLD
WTM2i61gT7MRsQ+yeWwNq8/GsNZsPlvLGrCxsa/GPIz3YL3Z8tgbY35Fj1kf
tiL+ecx19irrwV6K9ZltZa+zXmxZnA9irrPXWE+2NPbLmF/xXawvWxlni1gn
Ym9j/diq2H9jvsbexvqz1Wy/3hfV+yfjP7E8al5hJVjt6DXLzw6y4qxWjBmW
jx1gxVjN6D/Ly6aKNCw3O8IS8iKivryj56ZgZWOfYRPZAlaV9WdFWQPWmaVk
5Vhx1oh1Z6lZhTjXsdfZITaSbY0zHHuNfcZGsC1xzmFz2CpWl42Kswqby1az
emx0nNfYbLaS1WEj47zBXo39nQ1nm+OMyd6M72Kj2fY4W7C3Yl6xMWwHK8Ea
s57sblaRFWb1WHuWnJVh97K6rC1Lxh5jhVgd1polZY/GWZS9Hfs2G8t2smKs
IevKUrHyrArrzUayoqwZa8ImsYWsGhvA6rExbDarwHqxUrEesw4sG6vJSrM2
rBPLzmqxh1hzNpRlZNXZw6wVa8eysifZg6wZG8wysGoxf42X8yyZ2Me+Yo+o
ayvvoi4Hq83KsA6sF7uH1Yl56dphbDF7nHVk5dR1Yv1YHlYv5qq659kSVoN1
Zo+pa896sFzsafYoa8e6sZzsKVaedWYDWF5Wn1VkXdkQlp81ZLXYEDaJPcTa
s2qsLxvNirMWsWZ7lx5sKivNGrOq6vqwUawYa87GqPuB/cd2smOxrrGzLEns
j+xE/EvWXT5FXSnWhFV3v35sDCvBWrKabDCbyB5k7Vgl1o09xwqwRuxx1p+N
ZfexVqwGG8DGsZKsNXuCDWTj2f2sDXuSDWIT2AOsbexv3u85tohVZ51YBXVd
2CCWjzVgD7CmbCBLz6qy2mwom8weZh3YU2wEm87KsG5sODvCTrPZ7C1Wh41i
M1k51oONZCfjnMKWsUPsaTaSzWBlWXf2PDvMTrFZ7E02jB1i37OZ7A32HPss
zkxsBnud1WWj2SxWnvVke/TgXuvf4/wGyxU17JvI1b3MPlE3gn/OfmBz2Nts
KPuUnWTT2WtslGu/ZtfZJvYxq69uLJvDKrLe8b3qvmLX2Eb2UbwzO8ousjXs
ndjj2c8shTjAvmHT3C+3dy4Z78Myyaeo+0WeUhxk38a+yn6SJxf72ddsKvtV
nkq8wk7Gd7Av5H977mr2bnwv+5JdZRvYh9F7dpxdZuvY+9F7doxdYmvZe9ED
7/Mdu8CWs8NsNPue/cFWsCMxj9gp9idbyT6PcyI7zf5iq9gXMYY84wS7wtaz
D9hAdW+ww2wU28b+D1Wcr2I=
              "]]}]}, {
           EdgeForm[], 
           Directive[
            Specularity[
             GrayLevel[1], 3], 
            RGBColor[0.880722, 0.611041, 0.142051], Lighting -> {{"Ambient", 
               RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
              "Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{2, 0, 2}]}}], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1: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
g/qtYC0vr9o0tU6Xn22SOlentbYh9ffWnEmC9bt88Uf0/xF8/4fS/suxX89O
uzZ4rh4WnOuS32ymvSnzPJCmrZR5fkjTVoa3BGtszUtp4KK0/3Ec0Lul3c2x
V3OD9h+OfXq3wTkG+c22qfOU8qdfpc6XSBsvSJ0XlDZeWNhHtActSZ0XVFxa
lDr/oTgwL3X+Q2t8bupci9b+/NQ5D3nedvAZmfd4+XTlJ+RfBqbOm8ovt0md
E5WP/jJ1jkdxdTCcZNZtmj/lM+/98ginZ9YryglUzKw55C/WBa/xw2n/5tij
+UO7lWOH4nNwfkXz56C0SrS+l9dT/NKa3UP/zGgPII+5Kngu5YL3Cs2lQ2hn
RWtl+cqNwTHkqODcoebtv6nzslqn/2mvj9bN8rbLoj2Dcp7zo72HvO3yaJ+g
XOXCaL8hX7wg2hvICy+N9hjKJ2tNam2+zvXXB8eTI2hnR2t9+eJdmh+KD7R/
aX5ojwvORSm38DXnboN3ac+i/ZNjp/Ys2u16j/AJwetZ67p5QedIi34D79A8
U4zVeZrf8Mm0c6I9jDz4ymgfovzqvGjvIZ8+N9p7yC8r36Y9enfqPKV0yCz4
mMw6Xmv86My6X3uHcp/SIbNT5z61T81JnfOWp1uc2n9Jm90m/5JZByu/dFFm
faw8zwWZdapyWSUza2J53lKZtbK8sDy6tNOtXCfNnLtUvqhMZk0mL1w2s1aT
P1VeX/vyOsaXzqztlGsql1mTyZPKA8oblmbMpZk13JLCulYMOUaxP7NeVB4s
ZNbcyr+dmzlmKV9XIbPul49WjvlGzn0+dR79JviF1Pm/G+DnUuctlP95NXVu
Qzmi11LnNpQjapQ6V6G8UOOCV1KcfDF1vrAC/FDqPGJF+GH4/MweQDnD8zJ7
BuUMVTORJlmfupYinbO2ECe11vbqG2XWx8rLKbbJv+8r6Gp5tEfgRdE+Wbma
Epk9knIdypFLl05IXd9Q/nmF4lV0zJXmVP1E+eqV9J+V2Yf8PzeYWUMrH3Vy
Zg8pPVA8s6dSPuTYzF5Oe4rqJMqBr0pd/5Ee+wM+LbNfUo5LuWrpwyH0F8vs
05QzOTOzt1F+UnUV5cxXp641SeOtgYtm9jzSBsdl9p/SP6dk9jnKyx2f2YtK
C52T2R8qn6Mcv/Tq5IK3km6fmroOIP08JXVOXbp3XOq8vrT6+NT1BOntSalz
/9LnY1PXB6Thx8BnZ/aoyhedmNkDS3fJD0pb/po6ry+dPDR1PUF6/ufUtQtp
zl9S1zek+SfCJ2T2z9J7J2X27dJ1S6JzDcrRbQjWdUcG+195z56p62DS0n/K
kxbyaVrrRTJrNWnXQzN7MHmE3dE5BdUgdkV7PNVu/o7OU6juoDqANPx2rrkp
WAceTXtIZs0njXpYZr8kr3FEZk0mf5HLrP+klw5G5yykhQ5Eey1ppGnc5/WJ
c4ZHZs5lyKeodiHfsUter1Bj0ppTjUgaaT/97ek/KXGeULUIadq/6f8nOm8i
Lbcu2veq5rg+2veqnrg52seqBqeaoXzHttR1J+mxA/DO6NyE6mUbo/2walhr
on21amQzC3pJe86maD+smtcf0b5adcDt0bkq1ebWRnts1Qqn5x2XlEfdGp23
Un1Q9RZp13+4hzXB2q+I3n10nku1wi3ReRnVFmfkHdOUR90RnUNR7e+v6DyL
an/bonWzaosbor26apcj8o5Xqi0enlm7y0sOyzumqTanuo3y591T11Xkjwal
ru0ox94jdV1F+fCu2muiNZw84+honSEdOzVae0nbD+f65RPXX8ZG77XSwMOi
9Yq8yZjofVd6eHj0Xi6vqjqPcqEDUtev5KN3wtOjtal8yuLoPJ1y18obyItt
Ysyk6L1fmnlatEaUxxkRva7kF0ZGaxdp7FHR816eQvUx+da/lIuI1qzyVlOi
9aU81G957ynKh6uWpbpA59R1OdUFusD/Ref45C9Uy1KN4EfpzOjvLY+8Lzpv
KJ+yJzpXKH+xNzpXKD8yN9hT7+Dc/dE5R3mZozLn3eQrV0fnQFWrXRWdA1Xt
dXy07pEXGBetaeQdJkbrFXmNydF6UZ5xRXRuVzXiIdH6T76+V/R9qNY5IVr3
yFOoLqd6Rzfu7d/oXJX81/8AGiXAIQ==
              "]], 
             Polygon3DBox[CompressedData["
1:eJwtmmWgXNUVhR8QbChQHIq/gxZ3mNNSSukMUiQPh+Lu7u7uwd3d3TUJASLE
iJCEJLi7S7+va37Q8nHemzf33rPXXmftu/DOB/TsP2VXV1cf/qcX/39Rs6tr
2kZX18Klq2tY766ueXu6uu7u7uo6i/82Ve3qGsF/+xs8D3wJP/smvDI8B3wB
PAZuwQvAV8CD4eXh2eDz4CHwivDs8Pnwknz+G/A98GJ8/l/hgfC98OLw0vBg
+H54yZrvtDo8VyPfdSnWB8H3wUuwPpT1VeE54QtZPwI+E94N/gL+heuagX++
hI/m599hfWPWF4dvZP09eDN4afg2+Ej4LHh3+Ev4MPh0eBf4M/gYPusceE/4
a3gS673hJeGb4aPgs+E94K/gt+C14HnhS+FD4dPgneFP4AnwRvBi8A3wRHgT
eAn4JvhdeFN4KfhWeDLcA/8VvsX7wfdZtnO/r4UPZ/0MeFf4c78vfCl8CPwb
fCx8GXwo/Dt8HHw5fBj8B3wIfDS8BfwOvA+ffwy8JTwRPoj1I+HN4PHwAfDh
cA88Fh4IN/idL+CjuN8Hw0exvjk8gfUD4SPgTeFxfj68B7w2/Dq8L7wn/C94
IHw03Ac+GP4F3g/eC14HHgTPy99aGp4FPhfeFt4HbsFD4LH8/LrwgvCV8Gh4
HXh++HJ4f3hv+N/wYHgkvCb8F7gPvBD77QH4fHg6rud91jeHl4FvZ31l1n+B
x8Nbsf46f/9j+A24Ba/I+qfwIHhdeBX4V3gCvDW8EvwZPBheDx7L7/8Mj4O3
hM+B74LPhKeEP+Pv7wCvDj/E3/8c3hFeA34YHtQ7+2FW+Bx4Pj7/HvhsuBe/
/wXrO8FN+BHWV2D9E3gg3Gb9k5Ln9zm8J7wA6/exfi48DbwgfD98HjwtvDj8
Anw9PA+8GPw8fB08N7xqT+rP/bAXPD98L+vnwFPDi8LPwdfCc8GLwM/C18Bz
wgV+Br4angPuhp+Gr4Jnh6/ms5+Cr4Rng4dzfU14bvhiru9LeGe4wo/Cn8Db
wavCD8DL83nj4efhNfj9ZeG34Wfh1eDvemc/uT+e5+eXY30c/By8Ous/sL4f
3IZfZP1beHf4H/CT8N18v9fgu+BF+PkPWN8CXha+g/UP4S3h5eA74Q1K9qP7
+zl4Cf7e6/Dd8KL8/qf8/PbwavCDrP8MHwivD78C/wjvD68LvwRXPm8beCX4
Xvgj1reFV4bvgz+G/wuvAt8PfwXvAv8Nfgz+CT4AXg9+GV6Y7/MgfAE8Pd9n
GXgs/Ay8Kvw9P79vp/5e4Oe/gXeD14SfgL+Gd4X/Dj8OP833GwM/Da/C7+/W
O/Xs/r2a9VPgW+FT4ZlY3xPeCl4Rftr73WLf8+9D3XOsfQnfCQ9wj8BftXLv
fQZXw4Nb0XY1Wq1+Bl7Y2lPz4W/gh+A33ZPwc/AKjfxN//azcDe8vhoPP92K
9vid/e7fwY/Aw6wJ+DP4NrgffDn8PfwoPBy+Af4EvsVnB18KfwrfCveFL4M/
gm/yWcKXwB/DN/ss4D7wF/Ad8KvWAPw5fDvcH74C/hC+0b0JXwz/AD8Gj4Bv
hJ9v5V5uDe8FD2hFq+0B9oKXW9FiNVftfaWVvekeVTsn1/RWa9xa92/4t/zO
S9U8E5+N92RN+KVWtF6NV+utj6c79e3+9hq9Vq9xGfiFVvaue3hvPxv+ZyM9
w97xRiu92Z5n73u1ld5kz7H39IV7N9Kj7FX9WulV9iB7Uf9WepE9zd42sJXe
qYfQS7wG79RIz7Z3v95K79YT6A0GteI19Ax6hx/hx+GR3gO4V5vvBL8P3wdP
BfeH34PvhSfy85eoxWoi/A58sVquZsMT4IvUevgseEwrtXCbNQEPb6V3XwEf
D0+C+6h1ajb8FnwSfDN8EjwKPhm+BT7Zv8c9HtJID7IXTWb9UmtfjWf9Xfgy
a9UeCL8PX6G2wRfCY+HT7IXwafDb8OlqG3w6PA4+Q22Dz4DHt9LL/t/T4Pfg
y9UGNQUeDZ/SSM1b++Nreqc9yl41hPWDGvEEeoM3W/EGehy9zoSaXmrPtfd2
cb9fgSepwaxP105vtkc/BE8DvwZ/CD8ATwu/Dn8EPwhPDQ+AP4Dvh//g770M
T4TvhKdkvR/8LnwPPAXcF56sZsO/8/Mvwe/Ad8C/wE/Bo+Fb4Z/hJ+FR8C3w
CPhw+Er4BHhYK15Nj6ZXG9qKl9PD6eW8Z947n0k31z6S9SP496v4byey9hP8
BPyWNQV/0EqvtGdeBP/aivaqwbfBv8EvwhPg23vHXy3Fv0/ZiJ/wmT/Z6bel
RoPUIjVs2Y7/Gdvpn/oJr3F0R9//XXMPvBfeww1rrtlr956sU6NJapM19M+a
7zSm01/0U16D1+I9+1dNjVlrXuPaNd/Z7+493wB+WE2Eh8Lbwo/aI+Dh8Pbw
APcA3/kT+DC4vzULfwQfol75zPn5d+H94X7WMOsfwgfDL8Nd8HvwAfAjajI/
PwzeDu7rHmH9A/gg+BX3CPw+fCD8Bjx9x28dWbOn3Fvu2Y1q9qh7VX+mH7TG
rXX3SFdNf98AXqTTz+1J9qbS6ff2NHubPevujr/YttPv9TPuMfeae2aKmh6w
dccvPNuM5m7T8Qv6EWvEWrFGNq/ZY+61Ixvxp2qa2qbm9XT8rLVrDeuPrSlr
yxrcoqamrC1rcLOaGrVWraGNazRT7bQGN+344avt3Y2cT605a09N7V1Tc9ae
NbmJ+9Ga53c+U/Ph16xx+FN7AvyqNa5nhw+t0Uy1Uw1csEYz1U41c4YazVQ7
1agZ4fHwhvCi8PXNaKBaqAb+uUZD1VI1dKEaTVQb1cRZajRcLVdDZ67pAfYC
NXyBGs1Ve9XIhWt6vL1ej7NSjWfQO+gZlqvxDHoHPcfy8DXwkO54mlrjt/ST
nr/1a3oSvYmeYYUaz6R30jOtXOMh9BJ6jBVrPJReSj+qX7Mn2ZvsWfPW9Cx7
lz1t/hrNV/vV/Fnhp+Dv4NHwLvCT8LfwKHhn+DH4K3gEvAP8OPw1PBLeEX4C
/gZ+C97J64G/h8fAu8IvqrnwZHg//YOaBk+C94GfgX+Ax8K7dc47nt88j3k+
0ZPpzfRIa9V4QL2gHvPvnfOG+YjnKc8f9jB7mXmJ5w81VW31fKLf1wPqBfV8
/4CfU5O7c77boyaf+Av//NHIefn53jn/eZ70/PWsngJ+G9695ry/fqee9cej
WF8bns+eAI+D/9PRg+ua0UC1b3CJNloj3rvhJbWjBqtVQ0q02Zrz3g8tqUU1
SK18s0SbrGmf1YiSWrcmfZYjS2pVjfLaxpRo1+M1WYmZSYN+/IQaA58Lz9AT
DfFZjCrRFjXAZ/lWiTaoEV776BLtsKbdC8NKat2MaSr3Wkn29BjrO8Kn8vnT
8/lPwfvA58Mzwo127ocarVaPrTnLeeb7/9mv5izoGc+znhqo/12vRBvHuaca
OTN6dvQZ+Cz+WuL/x9T0PnugZ6NH4O3hk+FpPbvC+8IXwDN5toX3gy+EZ/bv
wfvDF8F/9mwMHwBfDM/i2Ro+EL4EnhV+Et4bPg/+U088tr3jpRLv7Z61175Y
spfVAHvjCyXa8GrNXnZPm/25B92LP5dkOQNqzupmCGYJ9shf4O9Leqca+iv8
Q4m2qrG/wT+WaK897Xf4p5JeZw/91vtf0lutcXvnxJLat6btlZNLat2at1dO
KtECa/hr+LOS2rbGv4E/L6l9Nfxn+LsSbbcnfwd/WdKr7bnfw1+V9GJ78g/w
1yW9Wo9hb3qtxHvoWex1A0q8jJ7EXtO3xKuoEfaaV0q0wxq3d71cUvt6Gnvb
qyVeZzT8QCMZp1mnnsVe2a/Ey7xQ09vscbP1xGP8CH9T4j30JD/B35Z4FT2G
WjehZD/rcdS68SXe50X4aPgaPm/2nngme2n/Ei/lGdrz2Lol59tRNdmrGatZ
61s1WasZrVntjO3og5rs8/hTO/qgZvv8Zm+nXtU4tU7P4Hlx/RIvMUc7+qDG
qXUztKM/ejK92Uzt1Lca7/OfuR29skfYKxZox5tN3Xm+s7SjP/YAe8Gs7eiH
Gq/Wz9aOvqihaumf29Eve5C9aL529ttUnfs7fzverlfn/v6lnf05RWe/zNvO
fpyys1/u4P78Bz6Iz/vFXgdvCB8M/2pvr8lmzFDMUm6tyVLMaMxqbqnJasyQ
zJJuhzdoJNMx21mwHW8yTafe7mZ9Y/hQ1n9X/2qyYjNts+152vGqXZ39Pic8
sZEeaL3M1c7+sEdaL2/3jn/UL5ofn1OTRetp9DYPwf+FT4Sn7knP9v6/V3L/
FmrHO0/bqf/Ta2YBZqxmrSNqvIaewyxLD2resEaJN32U9R3gU1ifjvWTamYN
ZnhmeQ/D28EnwdP0xNPqTZslXne4PbuRDNIscnBNlmCmYFY4sma24MzB2cOb
NVmjGaNZ49CarNIM0ixyWE2WaYZpljmkJos0gzSLPK5m9uFMw9nG8TWzB2ci
zkZOqJlVOJNwNnFszezDmYj96Ux4oUYyabNpZwx6+aNK8oMzarJqZyrOVk6t
6e3OEJwlnFaTXdvz7f1n13hPe769f+F2vO10Hf09q8YL+Ix91ufWzD6cOTh7
OKZmdmBmbHbc3Y5Xnr6j16Wds0mj0w9OrMlWnck4mzm5Jit3RuSs6JSaWYcZ
ulm6Zyz34zsl9a3Hs77eLalnPZv7+/2S+u3XTPa4aUn99G8mK9wM/g3u20yW
21NSbwOayVq30EP1TgZqtt27pH5ebSZ73LykXszMrZe1SrL0oc3U3/bwlD3J
mO1315Y879k7/fGakv1kJm0Wfl3J/jHjdjZwQ8l+McM2G7++ZD/91Ez/PkWf
B//YTH8/GZ4H/qGZ/n8SPDf8fTP+4ER4LvhdeBv1o8S/OHObGl6wZL+958xD
vSjxEx80Uy8Hl/gHZ1T6r2NL+snoZvRjtxJ/ZIbsfvhHSbY8Ct4I3rWkHkc2
o287l9SfMyBnQfuW+LnJ8NbqWYn/mARvpZ6V+DtnMGbB/4W7rL9msvLt4Cns
L83o5S4l/uibZvzhcSX9yoz5BPjikuzZjNr9/veS7NoMXb1ZrSRbd2bTgBcp
2X/OaKyXVUtmN878rM/lS/TSmZ/1tUrJLNAztPXyt5Ks3JniNPBCJfVsRm99
rl6S3TtjmA7uLtErPbf1vkxJPXomVC+WLdFTZ3zqxXIl9edMcAZ40ZL6duZn
fa1QMgt0pqgerlgya3TmZ72tVDILdCZova1cMit0JnMcfGHJrEZNt76XLql/
Z2Azw0uW6I8zsBnhxUv02hnuTPASJfrjjOYY+PyS2Y0zsOPhi0pmY86EjoUv
KJkVeQb5E7xYiT45Y7GfrFkyexnWTP/bAZ6Knx/eTH/cEe4Fj2im/+1U0m+m
6vihc0v8aa+OnzmvxI+u1/Hrg0ryy++a8fsnwHP2ZGbhbGyTkv7bt/P9b+hO
vfXr7K8bu1OPL3Wu91p4jp5kGp5dzy7JOsxIPLufVZKd9IdPhG/qTn2byXj2
P7Mkq3HGal57ekle55nZLOypkrO0Z2KzuytLzsrOOM0aTi3JN53ZmjWcVpJv
OqM1KzijJA98uXP/r+vO9TojMTu4tCQ/NaPwLN6nJLswYzDbuKwke/BMab/4
sMQf/f9MDH9Q4p88o9oPPirxc6919M8ZnvvBM6r94eMSP/d6R/+cGbofnAGY
PTxYMht4o6OXzhDdn4PgCxuZKVnfZiJmHVeUZCVmKGYnl5dkK2YwZg2XlGQz
r3T2+/Xd0cuBNbMpZ7buT8/kZpVXlZzVv23mvHR8yfN1xuDZ/qGS2YMZimf1
R0qyFd9Z6AUvUNLv5+l8/o0lfsNM1Gx0vpL+aWZjFnpLSZZjhmQ2c2tJtvR+
M37qoJLznjNYZ/lrl8xmnbn5LsI6JbM4Z3jOejcu8YvOGJ39bVTiFz9s5nx5
SMn58KNm/NShJedDZ56+O/CvklmoGZTZ0G0l2ZSZsdnOHSVZshmTWdDtJdmT
Ga9Z050l2a8ZkdnsYyXZkRmTWcmjJdmTGZFZ7OMl2ZEZktnukyXZkpmV2e0T
JVmWGaRZ5H9KZq1myM6KHi7Jls1QzKLuKslWnKk6K22XzFrNmJwV3VySPTlj
dLbaKpk9OhP33Yx/lszKzaicTd1Ukl05g3SW/++S2aQzS2fDG5bMMm+q6V/O
gP1+c7dz3jIT9vzqOxLOE/cumZf5joPzoL1K5k831/Q7Z6J+nu88OK/ao2T+
5DsTzpN2L5lPrdbxq8+W5BG+Q2I2e3TJvHLVjp9+piRfuLrG7/gOgNfnOxnO
r/YsmWf5joTzsK1L5ncTa7IuMy/fXfCdFucJh5fMs3wHwvnfNiXzPd9Rcb5y
WOnMv5qZn21ZMn/zHQ3nZ1uVzPP26nz+pyXzwEnwO4288+C7D6t3zpPPleQr
V9Xos+806MeW7PjvB0rOxxfV1IPvwNjfFu34+3tKzhNLdPz7/SXn1cU7/v6+
kvPqhTX733dm7JeLdfz8vSXngTU6593nS/Kcy2r2oxm5/f/6Gv/ozNr9cWVN
PTqD1y9dUVOPvlNgf7u8Zv84U9efXFPjV33nwvq+tsbf+k6C9XhDjX91Ru5+
va7G7zqDt/4vqNEH3zGy//tOk/O+I0vmk9OzH99sZMbheV8PaLZkD9Qb2hPs
DfY0e6OaZ2+zh6qF9ix7lz1Qr2pPtDeqqXpTe6K90Z6pd1Vj1Vp7jl5VDTO7
0rOqbXpMswvnAXpPNcnsSs+rVunZPSvb4/XyenzPynpMvb+aZbalZ1bL9PyH
dMcjehbQE5pl6An0inpcszI9tN7X97OcR1gz1o7vQDk/O6JkPqyHNgu0B+it
fV/IWbd73r2vpzWr9P0tva4e1qxSD6239X0o3x2w5q19PavZnp5bL6unNntU
g/XaX7fobY1k8OZtemrPumq2XtsziWd5PbdnFT20WZ4eWG+tJzqhO2cAvZKe
+djueHC9tGeW47rjuT3L6NE9K9tj9O56rOO749H1Xnoqz/KeGfRanpkO686Z
wLOUHt33vXz/S+9+cY0++o6c/th3AKeHS8l5z3eazE8Hlsxb74E3aeQz/exL
4eUbecdFv3xfzXf1GryW+2u+m9fgtZxfo9e+A6f/7VOj974zo7+/EV6rkXds
1H9nSs6W3i7Rswdq7pXX7LU7gzSPfaNkfnxJTX/wHS7PA/fW3Euv2Wu/q+ZZ
uOfce76j5Tx5XIl+PVhz73wmPpv/Ac3OZTI=
              "]], 
             Polygon3DBox[CompressedData["
1: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
WzueFWfVWFa2lP0Hp03gTw==
              "]]}]}, {
           EdgeForm[], 
           Directive[
            Specularity[
             GrayLevel[1], 3], 
            RGBColor[0.368417, 0.506779, 0.709798], Lighting -> {{"Ambient", 
               RGBColor[
               0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
              "Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{2, 0, 2}]}}], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1:eJwt2Xf8zeUbx/Ej7a+0fu1o+NwVSto4R8oeZVxfW/beolIIWVmlslVURpui
JdFWRnvvPaRNQsnv9X68v3+cPk93H8c5n3Pf131d131Kt8ExaJ9cLreS/5Tm
+nDkcruzXO6rQi7XkFfPolzuoga53Pk48Nn4AtwCV8GNcW98WcrlGuFeuBrj
DXAPfCGuj7vjC/BR+Bx8Or4QF+Oq+Bh8Pj6R96mHu+LzGK+Lu+Hz8UW4JT4H
V8Ot8Lm4Om6NC/zdHK+j8QF8hz28jsSluO7ldRTej+u/vI7Aeyvkcv/h/+HS
uvI+5+IzeM8d/LkIH8b1b15l8BFcb+KeB3D7Bn5Oh+Jjud7M+IN4Ov/+Tv58
CP4f1128yuKjuR7NPefhivzdM3A9fCb3n47r4rMYn4QX42I8Ad+DA0/GS3Er
PBXfi9vgafg+3BZPwctwazwR341b4PZ4OK6FW+NhOI874GvxFXyGNvgqPUPG
2+Fr8MW4Lb4a18R/8R0OxmW53sj4EtyS8avxrbghno7vx+3wCDwXN8Wn4Tr6
vjjhS3ElnOHauDK+Hi/Ao/g81+E5+HLGR+H5uDm+Ct+GG+GReB5uhq/BM3Fj
fC2erTmJh+NZuAluha/E1fF2vsNBuAzXtxj/Vb8d40vwC7g3vhe/hPviB/Ar
eABehJ/Bd/A5l+LncS/GN+Ef8SS8GW/BN+Ky3Jdwef6t+xlfj/szXobxCprz
jL/G+E94MuOHMJ7hcozfx/jLuB/jy/CLuA9eiNfgnngBfhJ3xQ/iV/FAPA8/
jjvjh/AGPAjPx0/gLrg0/9Zx+BD+rdsZfwp3Y3wOXoU74jvx07gHnosfw53w
HXg17o5n4ZWaS3g2fhR3wIfy/qfhk/S88Un4OHwgLo+PwX/w2h/vz7UU48fg
g/BvvPbF+3B9nffciqfwnr/z5/3wvlz34f5jcRH+k9cB+ECuv+j/4f9Y42/y
d3/B0/i7vzJeGue4vsH4z3gq4z/r38b/cv/bjP+GN/Pe2/RZ8cH6LPz5eHyo
Ygk+Eyd8mNYwPhkfjs/Ap+iz4HL4KH1efAI+XN8Vn4iPVEzAZ+HTFJNwRXwq
LocvUExQXMKVcZY5PipOnomPwVUUS/Gx+GzFLsU8XAlXwA/zXTbiwXzHlngo
roH74RtxfXw699dSnOf+dxjPlfF3/y7vZ6Jncxp/vljxHCdcU/Ecn4prKA7j
CjivuK3vWPDc1hzfnne8Vdzdj/FT9Ny09vl/BcV2PVvGT9VzUJzh/sP1ffEp
3FNdMZ97buWedbq/JvEDD1JcxTVK9iDF/9p4sOYV45fjEfh4XAcPUazGt+Fn
9flxHvdRnMcF3Fe/EZ5RssYVzy/BA/U7Ml4T99NegGvhAYrzNX2f4v8dfM7F
jL+pOMP4PfgNXA3fjV/Xc8bBPtshOSa3wO2T42173B83wFfgq5JjXQc8LDnG
tsP9kn+75rhdcnxuiBsm77ONcePkvbsZbpsc2xvhRsn7cgPcIHlvrY/rJ++5
TfmcI/mcJ/A56zGeT95nW+PeuA5+kXt+1zPnnpX4C80r/Cj+HD/EfXfh10ri
5Ez8nOYP97Tlffpqn+d9XihZa8/ofRmvnpwPFOMeevZ4Ffd8qT2Lv9uS8Z6M
X8p4G9wH11Vsx730++M+3D+xyOPN8CjFWP5uk5L9TrnKFXhKyd7XBd+k+cY9
XfHNmp+4M56udYQ74Wlam7gjnqo1jofgO7WX4fH4Ea0F3A3P0HzGw/BdWst4
KF6k9as5gMcoNuLu+BatZTywZB8cwGcbhG/Xuma8N55Q5OffC48v8vftiycV
+Xn2x5OLPH8GlHxHvc84vELriPfpiW8o8rMtr7mAqzBvBzN+B67IPT3wuCI/
5yvxQlyZ8ZM0p/DZ3H8yroar4hu4Z7nMPWPxw7oHj8EP6f3xibiRYrJiAK+m
uDTjx+MGig9cj+NVH//D9diCcyTFvBNwQ7yHazlejfFerifxugyX4n2a4+tx
OXwyvlx7Bz4Pd1HcxuVxE8V/fA7upL0PX4av096ET8XNtL/gKriD4j++Ba9V
fMMVC845lb+1wKNxecZHFxwHlMMU47HaFxivgJvj/fC5uDMuiyvjtvgAfDa+
QnsZroTb4P1xVdxRsRSfidtpj8Nn4fb4IM1t5n+T5Nx7OeObGB+Cn8Of4dF4
TPJcncHvVTv53wo8MHk+X4/HJv/Wt+g3TZ6rt+LRyXPj5szfTfNzeua1pNh7
BR6aPOfH4RbJsbEr7p48z4fhbsnPaii+Mnmt3YCHJK/BsZqHyetuDP4v771v
C99jb9577k94d9577nd4Z9751Td4V975xrf6/ZNje0fVAnnviT8y/m/e++wP
2kOS1/Vo7vkn7737+4LXjNbOKMZrJT/zZvjS5PnQAjdN3i864WbJ+0JnXDd5
XrXEU5JzpPvw5OT86l48Ljlfulu5dHL+tgxPSM6vFuNJyXnaUjw1OQe7X/tg
co76CL4tOSd8FM9Nzv2ewLOT88zH8MzkPHYlnpWcT65SvpR3Pval4mVyrriE
8eOSc/JqOJL3vm64a/L6uhI3x/1xF1wneX4W43rJc7sVHp+cQ96Di5P36+64
Y/JaG4hbJu/XPTLHYsXnAbhLctwegjsl7+ODcOfkvWkwnpacAz+At/FdTi5y
3fp33vnz1/is5HhSM/NaVTwp4O/zrg3f5Z5vS/IT5Tk/5F0Pvsf4Jcnrqznj
P+ZdP77P+E9556gfKt4kx+ebuGdr3rnoR8o3884VP1GOmXeO/bHiYnIOsDbz
Hqn98Rm8PDlPWIdvSY7Vd+G1yXvra3hGcoxdpHozOcYuVE2aHGPvxFvyrn8/
KHhP1V68OXM+p33208z7sXKbhzJ/Z333PeS9i5LzohWM3Zkc6x7GC5PzruW4
SnKsvhifnRyTa+GqybH9EuXDBeeHf3M9vOC8cSfXMgXnctu4HlzwPvIH16KC
95E/uR5QcH6rvPHQgvPDHVzLFpxb/qX8tOCceSvXQwrOP7dz/SPvmuILXJpX
Vfwr11IF58k/c92Rd16qXPTAgnPs37juU3D+/Is+b3JMbso95yXvL3VwzeSY
fDk+J3kPujRz3qm94DLVOAXvp79zPTd5r6nN+IXJe0p9/HvedcHn+q7J+1Rd
1Tt51wWf6XMl74/1GP8179rhU8afL8mv9NtOL/kdH+Sekcl9iQWZc0DV8r0z
7wmq/ftlzu+U//fMnAOqru+TOU9Uvd8Xt0re968qWY+KgSNx6+R84+qSmK91
2j9z7qnc49rM+axyjxGZ81nVF9eVrDs9nya4cnLfpjGulNzPaYRPSO6B1Cip
cbRO8/j45L5BdXw//gS/ih/An+INuE1yXnQNPiO5T9VA8TxzTXF85vmkeVUZ
V0zuOzXERck9mUqZ54TmxglcD07uBVXMnDsrnxyeOV9W/6QXPlIxAu/m+iqv
7/B49tlXFFPwOLwWf6xniB8peL1r3a/BH+r5ML4Cb1ZcxRvw93gC3oh/wBPx
swV/3+vxuoKfwyj8Mv4Kj8Hr8Tf4BvwS/hqPxfclf4ZX+MyPM/4WHsr4E/gd
/da4RnKvr13mfF99vPaZ83H18drii5J7ca1xteSeXhv8GO/zNh7WwGtB+UAH
xp9i/D39Low/jT/QPMFHFFxv7lKM4vWR5gzjT+J3Ncfwavy+nnkD5xvKqW7n
PR9Mzmc24keSv+8beF5yf+NJPCe5V/N45ppJPbTb8NPJfYCPMq8fxcNP8Dr8
p9YdXpPcC/pYzyq5n/Nu5jpMfbmZ+l7JvYgP8OrkHsKH+Dm8XfEHX53cH5uF
r0nu3c3G1yX36+ZlzjGUR03LXA+pVzY5c/2nftfUzPWN+mA3Zq751O+agp9I
7i+9l7kmU79rUuYaSP2uifja5D7hXDwiuS83Hw9P7hPOyVxjqZ82PnNdpR7a
BPxkcj/qffws3qZ4hZ/Hf+Ev8aPJ8/xNvCA551yN70qeD8/ie5J/0+fx4uT5
8AK+O3nuPYdvT57/T+Mlyb/7i3hF8hx+vWTP0tpZg+9NnjPr8dLkefUSXpa8
pl4u2VsVJzfhlclr8y3N1eQ19Q7ehPfin0r2R/U9tuKN+D/Gt+D5yf2Tp/Cr
+F/8A16VvE7fxhvwHvwjfgHvwF/hl/Eu/C1+Bf+Dv8cv4Z34G7we78bf4Rfx
3/hr3DQc19SnvbjgXOtI1SnhGK0e5vTwPFAMuSn8m2kdzQjPS8WHW8NzWvn/
LeE1oBhSKxx/1Y+9OTynFaMuCcdo9aJHhn8/9RtHhX8/9UJrhuOs+reXhuOC
zgIuDsdW9XJHhH9j9VGrheOpej5zws9IcXJ0+PdTL3RM+PdTf/X68DxQz3Ns
+PdWP/OicExXX+i28LpV3Jsc/o0VN+aFn69i5rTwGlbMmRr+7RVPZofnseLz
rPC6VcycGZ7ripk3hOOm+qWF8P6kvn2fcF6uPvy14bmrHuzV4Rik3unw8HpQ
v/SqcF6u3uw14fmkfunAcP6qc4Rh4ZilfuzQcO6unu3c8JzQXjAonPerp3pl
OI9XD3ZwuAZQ33VIONdXz7Z6eG9TP21AuH5QT75bOBaoZ/5ZONdRv+u68LpV
H7tGuAbQGU3vcG2gPn/fcK2i84X+4dpG5w79wrWNziN6hvN+nVl0Dcc79f97
hWsbnWu8Hc7LVdv2CNdCOqfoHs5j1OevHd5jdN40Lrz3q4d5YzjuaM96P5yH
qTbPFTsnVm/wo3Bepbq+VLHzZvX63g3nrKqdDyx2bq3+1X/hWld9mw/DOZ9q
7Z/C9Y/q+g/C+Zxq82/CNZ56jF+Fa2n1Br8O10LqSf4crm1U+38czudU738S
zgXVi/gjXFOp1/RnuDZWv+j3cP2jftTn4fpT/cbfwvWP+lEHFLtmUE/sy3Bd
qj5k6WLn7uoxfhrOWdXb3LfYebz6kPsXuw5Rv26fYtcb6svtV+waQH3L8eEc
Sz2EX8I1m/pdW8O1nHpW74TrAfUu/gn3CNTzeS9cD6gv8W+476C+0O5wvaRe
0N5w3aJeSufwnqTzmo7hvVPnOFPCcVb5Q6fwPqpznEnhvV/5xsTwPqF8ZkI4
P1Ae9Wu4blS/bk+4r6He185w30H9t+/CPQL1fP4K9wLU+/oxXN+qZ7gl3MtQ
T+nbcH2rHvKucL9DPb3vw70A9Zm7hPddnVv9He5rqG/2Q7hHoJ7qjnCPQz3D
7eH+i/p728K9EvUA54f3D50l5cN5sM4lnw2fMaiGWho+81C9eXf4bEN1613h
8w/VtovC+5zOtu4M71U677g3fAam+vSO8N6ms5Ul4fMY1baLw2ctqiVfDfcK
1aPbEO4Dqhf3ZPg8Q7XY5vB5gHprj4fPS9S3uSd8lqPa+bHwmZP6MLeH90Wd
eS0Ln7WoRl4RPpdVP+fR8Jmu+jwPhs9WVd89FD5bVe/igfAZreqpVeEzIfV2
6obzWp0XXx6uYXT2sTx8Nqz+wHPhcxfVjwvDe7/OiV4Jn8GoD3lf+OxT9dcj
4bNk9ZdWhs+r1C+6P3xmrNptY7g3qj7nF+E+gvbuF8JnOapn3wqfu6gf+HL4
LEf58Orw2Zjq0KfCZ0iqW9eHz3hUazwdPktTbbsufP6k2vmN8NmMeqoLwrmF
zh9fD5+1qBe6Jny+qJr3ifC5lPppm8JnLeqpvhk+71H/c234DE91+kvh8yrV
8q+Fz3vUd30xfB6mev+Z8Hmn6t/nw2dRqtn/D40VL8E=
              "]], 
             Polygon3DBox[CompressedData["
1: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
fC98Lby/vRm+AD4F3gU+sRNt9xv4Ivh3LdpWTao23Ynx++Dr4APgQzrxKnoO
vcee8NPwXfAR8F7wM/Dd8JHwHvCj8K3w4fChnXgVNbpafRf4AfgG+CB4d/gR
+Bb4MPhw+K3eaHi1/Dj4A/iP8BXwePhD+E/wlfDvW7SmmlBt+FaLNlSzq91/
26K11dRq65P4+7fh38IXw79p0do/oWevgk9l/D3494xfBp8MvwP/Dr4EPg1+
H/4DfDl8Cvwu/BZ8Kfx2i1ZQY6g1Nmb8fPhkeGd4c/hieBy8G/xdS++xZ9g7
vmzRwmomtdNnLdpRDagW/LxFO6op1ZZftGgrNaXa8qsW76mmVlsvSH8dDx8F
f2S/aulF9jx73yT90VZqULXoNy3aUM+l9/q6xXvpafW2q/Sn/z7eF324cn/6
rZ5MfTgY/jv8Wl/686D+6DM1sf14IfhM+Fj4U97vW95/jd5oUrVpH+Onw0fD
H8MFnwEfA38CTwZv3huNqdactD9aU42oVpy4P1pajaxW/qil99vD7eV/b9ES
egS9wl9avI0eQa/w1xavoefR+/ytxUvoQfQi/4Dn640mUZv8t0XLqmHVsv9p
0bJ6bL32v1u8thpILfSvFi2kxlXr/rNF66rR1eo/tvR+NYJaYaL+aH01vlr/
hxbtoKZQW6zK+BvwE33R7z+1aH81hFri0xbvoOZUe/b0xyvoEfQKH7doITWS
WumTFm2qRlIr6Wdca6459Z8a+8/Opd5ob9eMa2cm+N/0ikHM7wM53pNrNmGs
wQfDe/dFrw6GD4L3gjeF/9DitfWMesc/tXgzPZfea1WuPwDeA97YftwfvX45
/J39G74Lvgr+Ee7n+kPgfeDN4dXgQ+Hh8Bbw6vBh8L7wgPMZ3hPeAd4IXgM+
Fj4YHgJvBl8EnwYPUx/0xx9cAX8Pr8z4HvD28IbwivBu8Lbw+vBK8O7wdvAG
8PLwrvDW8HrwCvAweBu4A28KXwifCu8KL9sfv3Ml/IPv3x+/ZmahP3HNufbM
b/RqrknXpmtSL7cE11/J8Vmc+5q/XxK+Cj4b/mYgc8a545rWC15W0Upqpiut
RVz/cW/u+YR73+Kl9dB66cUZvwI+E/4KXgy+HD4D/hJeFL4MPh3+wu/bH395
e1/81vL98Ze39SXPMN+xt9vjzaNWYvyp3mQG+r2l+pN/XAZ/O5CaYm3Rn6j9
rTnWHmuOXmERrr+U4/Gc+5zrF4bPgo+DPxtITbe2W8Nf4/od+f3v8bfg3CjG
BrV42/6K/7JmW7sv4dxYxsZXPoufyWzGNTAxxx/0ZW3YI+2V9sjrWnqkvVLN
e0OLhlfLv1LpZ2pitbGa+ZYWTaw2VhPfCI+pfBe/01Etc9K5aU8Z0zJnnDvO
2dEtmc00HH/VrWdmfvbHnkp90nPbPyeq1C81tlpbjX5zS2bSy/GX3fpoJjUJ
/GG3n5qhTA1/0Z0Pagy1hnP4yBYNrBZWAx/WounV9mr6m1oysEk5/qgv+sP5
51x4vDuf1YBqQTXDxS2aRm2jRrmwxcOrlyep9FszocnhT7p6QM2kdlJzXsb1
b/D6geOXKv1bD+98nqzi7Wfq5mezV/rRjN38bLZKPzSzsF5NXPFbEzIu+NNu
/dID6AX0AIe2aFy1rhrn8haNo9ZRI13RopHUSo9115uZ45Qcf9YX/T+4xfut
VvHvZlBTwZ9366MaUa3onD2vZc46d9WAF7RklpNx/HFf9JAeXL33U7cfmbGo
j37s9iMzIvXQD91+pKfQW+g59rb3tNTXDSr1rNNS39ev1DszTrNOM9DNGFuh
pb6tXPEXG7TU4w0r9XKdln6xXqUeblypzdboDVteHm9Uqc9mdGZ1Zqqbt2Sm
Zqdmshu3ZK5mr2aym7ascde6mmNYSwajf52zko/oqfRWepiTWjJcs1wz2U1a
NIpaRQ2ya4tH1ivrkU5p8XB6OT3aCS2eWm+tBzitxUPppfTcp7bsCZhFzVrR
U2aWZpdmjgMtHkGvoMYf35J5TM/xt129YZ6kllHTmC/4Hcw/zCf8bmYyZjN6
PLMlNafaUw9wREuGZX+dtJJtmZFOB3/T1UN6VL2qmvXwlsx1Wo6/7uofPYfe
Qw9zeouH0cvcas1v8fh6fT34rS2ZgdmBGcTtLZmq2aqZ6xYtHkmvpEca17oZ
Vl88q9mWHl4vbwZxm9qkpZ+uWvHnq7T030GVvGHVln4+uOLnV2rpx6tU/LsZ
nXpv8kp2p+fUe+qxLm3xJHoTPekl8Cu8vub4uYpfehX+Bv5FxT/YM76Fn6/0
EjPzr+BnK35OzaR2erTiV82U9A8PV/ymmZn+5pGK33SPRr95VyXPcI9H/3tP
xX+5B6T/vLOSf7iH8SX8TMUfu4fyOfxUxa+656GfvaWSB/kdvTcXVr67NdHf
9qJKrXSP6gv46Yo/fh3+Dn6h4m/c4/kMfrLif90T+hR+ouJ/1VxqL9f4di0a
T61njdimpQY6Fy6u1EZrgtmDGYu1wj0c/fC9Fb+oZhverQfbt2hItaQ1yCx0
RGWvwD2D/VoyCbOJU+ERLRrPenI4vEOLplPbmVHsbr+v7OVYP3ZsyUzMTsxU
9mrJMMwyzFT2bNmzMz+4u5IfmcGYxZjh7NOScZh1mJHs25Lhqi0erOQTj7T4
7/sqft2MU7/5UCWfMAMyCzIzGd6yR6b/fKCSZ7gGzDturKwN97j0s/dX/LLv
aRagh/bfsqa4X7dlpdboofRSeqxdWua4WuOCyty3x9r7z6/0XvcszBdnqvhN
9yz0tzNX/KY9QG3rGrQ3WNPVwq5Ba70ZuH5rqko2bgavv5qiks2b0euvpqxk
92as+qFpK37NPQ/91YwV/2tmrr+aoeJn7Alq9726/cI9BrP5WSr+2YzOrM6M
7uCWTMNsw4zpopY9J7P7n1X8sv3HrN3MfSO/K3pwTesH5/oHkpmZ97qfYpZm
/qx38zP72fUoehV72pYtmZvZrhmaWZw933z2kooWMIPWH05f8Vtvwj/CL1fy
DjWBWvzSilbQI+gVrGnrtfRcvYY10V5szTX/uqFSi/2Oaq3zKt9djaAWPbui
HdQIatFzKtpBTaXWPLeitezJehV7uL3aDF3/Ol3FL1rTzdduqtR6Natz7/qK
llXzms9eVdHCekK9oR5wa8Z+yet7jl+s5C13tORxN1fyajWyee3VFe2sBjaP
uqaijfUIeoVbK/mumtU87LqKllVjmj9dW9GeZgpmC2YiO7f8hn6WTuW3tR6M
7q5f64WeYXxX71tfJmTAfcmI7S32ILNiM2970wEtWuGAit86sEV7HFjxW9ar
cV29bn3yGr2ZHsq/1SOd3tX3I1s0vsdjK35nVMtnH1XxV3pQvaie+JiWPTfz
m4Ur+Yhz1rlrpt/X4pkv7/qVo1ve87Ju//bf0l9c2u3v+hs/s15RD+l3UdO5
v7NFReupkdw/2qyiney5ZunuD9qL/Tf0f0dV/m09ol5Rj7g/Y0NbtNZOlf1j
NYH7T0MqWmGnFi23cyW/8p6pLXep3EtrmFpw10pt8x5N6AWVezfBU3b1tf5M
z3l711+492fNt/YPrew3qyndzx2oaE3vgfvbIyv3Rg+uFzcDONZezvH3C8bz
6f28J3pfv7P3yj0R90bUnAu3ZBRmFXr641rew3t/TOW9vYf+NkdX7q3f2ezO
z+Bv4d94L46tvJd7ruZ5S1X2YpdsyX+WrTx/sURLnrRMZX/Nz+vevXv4/xmc
/SS9vR7/1y01z9q3SeX5BjW1+4ebVrS2HtU8yPxH77pGy/Mna1f2C9dsed5j
ncrzIXoss1I1jt5r9ZbnS9aq7Jev1vK8yJqV/UJrnlmvmsla2N+yP7hGZb9w
mZZ8b4XK8yStZT9+9cr+pd/RvUTP+d3VaGa99lC1mxrGrNaeq7ZR05mF20PV
etYgs181mrVpuZZ8caXK8zh6ALXrsIo3WKvleZt1K8+r+MyMz874nZZq2SNz
r8z9QPfz3d836zXzdf/cPXzz3r5KXukzAOa3Vclj3fM2f12okm+6J+fenHtu
C7XsCZoHLl3ZK/Q9fe8lK3v1egS9wtyVfNk9TvO+eSr5r3uS5n3zVvJEPZP7
s5tXvNTSLfnj8pXni5ZtyYtXrDxf5BzzWR/vkXPPPUvz6vkr+aPPIJhXL1DJ
G93zNI+cr5Jv+syC+fWClXzT38x8crnKb6ln0xvtVvFy1gy1y/6VWmJP13sd
VOn1fiaffXIO+lmdYz6bYc1y7pnh7NjVCxOynRatt01Fq6ox1V7bV7Snc9q9
cGuCc90557NMznnnop5Kb3dYxWuZeej9Dq9kIXooveKhFW/lHHWv3TXl3DUj
0HseXMkOzEjcjz2kkp3YI9WeW1d6p57QLOPUildUY6hlt6poDzW3WnS7ihbX
o6p1Tqx4V9eQe+/WbNeWntes4PiKFz65JVs5obKfp6c1Wziu4nX1sGYxJ1W8
rXPCZ89c084V14DPbqk5XRvWAJ8Vs6ZbG/SMZiGnVbykntEsZFzFS9pzJ/Te
ina3JvgsgXPSWqFH1KudUvGOemy92skV723mpZc8opKFmZkM7eo5sxR7mr1t
dCXLc0/zh25+7V6nnkCtuHvFK6jp9c57V7S+HsBsZ4+KN1Cjm3XtU9Hu1gif
3bMmWDvUMO69q/nUNuaF5j1+Z7+7zw+Yn5u5mL3oOczK9qx4ETMXvfhelSzG
e+Jeq3PEe6XHMOsbXvEe1uwRXb9jLbfmuL+9eKUWtcrzO9t057+aQO+1SEUr
OL5DV7/bv9UoapV9K97KHqbWWazS28wczSqOrGSR1iS10aKVWqUn91kAP4Ne
3R4/tuvX7P323DFdv2Yv/j9hVQpR
              "]], 
             Polygon3DBox[CompressedData["
1:eJwV1mWcVdUeBuADiMTQIQLSDA1D99AwgOTQKDU0CEN3dyoNonTrBZQGL91w
7QJsUEqxKAWF+6wP74f/83v3OfusvffaJ19CYvzApJFI5BNJLjGxkciE6Ejk
1YKRyKqoSGRS9UikDJvEFrA1bAorzgaxSexVNph9LffN6SSK/VotEsmmV0+v
NevC6uh8J3+Zs4Qu+0PvZ/asXmaWi0XM38gDcwZJw37T+4Wl0MvKcrMk5m/l
oTmTpGW/633F7oXjJDW7w+6wlI7NxvKwpOaMzq8Ga8Y6sOosA4tlTVl7Vo2V
ZZPZQraWTWVF2AA2ns1lA8NvYCVZLItjxVgF9hpbw3ayRSwpK8jKs1iWl30m
d8xPCkQiydh155xLr6VeNz6AtdB5gbVgXdkrrDnLzpqyTqwva8J+kEfm58Ma
srs+r5LeKr3t7Ahbp/O5/GqOyDPshl5evdZ6Pdgg1kqnMlvNdrCjbD3LzeJZ
AhvIWrIcrBnrzPqxpqwKW8N2smNsA8vJmrMurD9rxkqyIWwKW8CGsuuShKUK
v4U9dn4V9RawtewdtljnRlhXFsWys3/0fmIRloJlY4/YVfavOUm4B9lDdo09
MSeTrOwv9iN7ak4uz7G/2U2WzOelZTnYv+wWe4alZznZE1bC+Q1mk9lrbIjO
Fbkb7kdJxX7Ry6PXSq87S2TxOuXYfLaKbWcLwuezQqwiq8nys+dZfdaGdWV1
2XOsLmvFOrPa4XxZNKvAarB87LYkZxnZC+ypc0muV5hVYrVYAZ3L8qc5ZQj7
We8L9ps5aVgbdpP9ylI5NjvLy5KF59TnlWI1WENWnJVnr7LVbAdbGJ5JFsNq
skasBEvNyrDa7EVWipVmE9lrbDWbzC7JH+ZnJQW77Vy+Z3+Haybp2Z8si2Nr
O7Yle5nV1PlSfg/3fDie3dLLrFdLrwV7idXQycrqsHjWidVimVhN1px1ZLGs
FBvP5rM32cSwJqw0q8Uas5KsGEtkE9l8NohNi4tETrKr7AE7z/LpdWID2BjW
iVXSa8z6suGsIXuZLWLvshNsSTgXVom1Zd1YhbCHsWqsI+vJKoc1ZVVYe9ad
VWQvsYXsHXacLQ3XjcWxXmwIqxf2NdaQ9WZDWQNWl/VmM9gS1pvVYb3YdLaY
9WK1WU82jS1iPcJ9zxqwnmwwq88qskasDxvG4sL7iFVlHVgPVonFsMqsHUtg
5cN+xV5k/dgI1ojVYj3YVLaQ9Qx7geRhMawyy2n+J+xtrBSrxHKYH0suVpJV
ZNnDeyw8c6wQK8Uymjv5jsVsFzvJloX7UbKxwiyGZTK305vFtrD9bE7Yr8Nz
zYqw0iyzuapeWzacTWGtWU32EhvDZrKOrAbryEazGawDi2Ud2Cg2nbVn1Vl7
NpJNY+1YNdaOjWBTWduwZ7M2bBibzNqwzmwJ281OseWsA5vDtrGDbB5rz2az
rewAm8uKspysKqvLnmMt2Fi2km1j41hhlp1VZrVZVtaYDWdL2AY2Irx/WQ5W
hdVhWVhzNoa9zraysawZG81WsC1sDHuRjWBL2UY2khVkj8O+LvnYfftBVc/g
dr3D7EO2K6wfO8zeZ9+zk6ypY0ex5WwzG82asJFsGdvERrFGbBhbzNazYSyO
9Wdz2ArWnzVg/dhstpz1Y/VZXzaLLWN9WTybytazXWwaK8SiWDFWlj3D2rAZ
bBPby2axeqwPm8mWsj6sLZvJNrN9bDZrxaaxDWw3m8E6srnsLXaIzWet2XS2
ke1hM1lLNoWtY++y6eEdz4qzxqw1K8xKsGKsEWvFCrHirChryOJZwbB3siIs
jrVk0awhG8oWsXVsOItmqVlRVoYlD/ef6zaQTWDzWCLroreU7WGn2Qr2MOz5
LJqVZBnMA/S2sDPsEnubvcI2s9PsS/YWG8i2srPsMvtPeD9JepaHFWapzeP0
DrJL7Gd2hCWybewcu8K2s/5sEzvFvmDb2CD2FjvPvmI72GD2NrvAvmY72X3J
zAqw4iydeYjeTvYB+4HtDe9ySctysWiWMrwXJR3LzQqxVOZ74b3H8rNiLG34
PyMZWT5WlKUJ/xckA8vLirAo8wPJwgqyEix9uEauRzc2mE1g3cK9yxLYEDaR
JYT9gHVnQ9kk1j08q6wrG8TGs64sP+vMBrKxrDMrwLqwRDaOdWH9rMFGdpJ9
zraG66NXkTVgLVg5FsXKsjqsCYthT8N7mZVhVVkuc0QvPyvLqrHcLAkrwMqx
6ixPWGNWntVjzVgZloaVY3VZU1Y6rDurwOqz5qwseyJ5WWlWhb1g7ut3bGAn
2GdsC+vOXmcH2Hn2JpvEjrJv2Z/sFBvN9rHP2U32HpvMjrHv2F12hs1m59gN
9ph9wKaw4+x7do+dZaPYXvYZu8EOsZFsD/uUXWcH2Ri2n33BbrH/sgnsPXaF
3WHH2HC2i33MfmT72UR2hH3D/mCn2Xh2iF1mv7CjbCw7wL5kt9lhNpddYLfY
v+wjNo9dZLfZE/Yxm8POs5vsH/Yhm8XOsuvsEXuf9Wbr2DH2CdvIerI32CF2
ka1mPdhKdpBdYKtYN7ac7WNn2UqWwFaw/ewce4MNZe+wD9lVtof1YevZcfYp
28x6sbXsKPuYbWLD2LvsI3aN7WNT2Qn2A7vPzrGZ7Az7if3N/sems1PsGnvI
LrAZ7DT7kf3FLrIRbDf7hP3EDrCubBnby86w18N/C/fzDnaEfcR2s/8DCN2L
wg==
              "]]}]}, {
           EdgeForm[], 
           Directive[
            Specularity[
             GrayLevel[1], 3], 
            RGBColor[0.560181, 0.691569, 0.194885], Lighting -> {{"Ambient", 
               RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
              "Directional", 
               RGBColor[
               0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[
               0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[
               0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
               ImageScaled[{2, 0, 2}]}}], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1: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
nbQe93Kq21bgjk511TLc3qmuWorb4ZZ4Le7hlFPq4Ux81rV1FLdyylCv4iSn
7NMSO6f9rwN+zilbdcTPO2WxFjiv055i++aBJN13uy9rbQ+IKZ+/hfPGtb79
WFm5rBN+wdYN9tkeUeW3bIlr+LJTRuuCCztlnK64iNPa3weXdMqAnXEhp3zU
HRd1ynH2ncWc1u/++CWn9b4fLu20xvfFpZz2fatBbidp/+mFizvtG1a/3GL8
V7tn+FE+b9h9xX8wft3uN/4dX8YF8H38Iy6O/8N3cTH8b5Ly1FY8lLE7iefq
H8Z7Mr4dD0vMI5tTQ/AVfgriBxxzzZ4z/Bu+ip/Fv+J7uDROzufv9tzgx/m8
b2slfpjP32xu4McSc8fW0sVOe3UR/Cff8xMugSN8/sxPSfwQn7/wUwon4/MB
Py/jR+w5sn0St3bKXN3wi06ZrhnO7bS3t8cFnXJrO1zAKWtUwE84ZbHyOCWf
qRLP27NOubIxzpGYXzZfajhljXG4ulMeGYurOeW7cjhF4tpWxNHEd9oekc0p
d7fF+Z3ydRucD9fBi/FrThm8NY7ZecVUrwVcGy/CLZ1ydG2cEdeKqcZ5NbHm
2P7VwinjjMFVnbJ5c5zHKXc3wtmdMs4oXNkpI1fFaZ3ybGWcxilH18RPO+Wg
EbiiU0augp90ys7V8FNOubg6TueUuXrjEk65uynO5ZTdZuD6TnuoXatUfP5r
awdO7ZTla+EMThm8Cc7plOlG4ypOebwGTu/UG5iDGzv1XebiJk6ZayZu4NQr
mo0bOdV5s3BDp/w1ElfCJ4Pmg9Xv9YL24xOsG18ErblWh+aLK8/cY7yb1zNs
eb6HVy/FcmxPr/llz8Ixr8xgvayBXtezmfUHvJ49q9FOJOpWu4f3vfYj63cN
8XqurNYbistGVev19bpfjfiefl7XvzEe4HVNmloN4rUOW80+zOuZtxpwkNe1
bc4xo72urdU7sbiy2S8c05XxMvbsWS3mlZGsf/Wj1z5ovYXmuJA9PxzT2WuO
18UzvJ55e/ane+Uiy9jTvHKR1Y/Dve673f/JXvuC1ZtHve6d9QCn4LpR1aRT
vfKJ1a1jvea41Wsurgz5M+N1GU+yNZyxI17Pg/UV+3s9k00Yv+q1F1vv4orX
Xmw9kMtee7H1MSp71VnFOL6KV41WHF/z2tMtd6zzWsOtjljvtbZbbdLOa72q
wfFn8Ed4Iv7eq+czHp/26gVNsNrWK8OPxZnjyofWWzvrtS9bH/Icfjeq/uQG
rz3F6p2NiTrR1qeRXvO6Jd8xymvtspr0ote+bz2cwV7rRgvGx3jNR6uL38B1
bA3BIxL3zu7LBa893fpCh7zmi/VOD3rNKeud7veay9bzPOw1v6zXegBPj6pH
eskrJ1hPaU+iV2MZpKpX3VqCf7eaV61aEtfBefFLNge96miPM8WVma3fmDau
esR6vE/FlfmtT/iLV2az3vI/XlnRepg/e2VL6xPe88p41pvq47WONeQ7enmt
P/VxurjqIOvTNvTaW8syNt9rr7FeR2OvfbA8num1d9gz39tr/WzA+Divtdd6
BRO9so31KP7zytLWy80dV4a/g08F9Q2tl5gnrvrrLuNPxlW/WN97vFf+sV5E
rrjy/G3Gc8aV/62XkiOu/G+9oyyJnqftvanx4aj6q5P4ntei6sn8i3dG1eNN
FVetYb3obHHVDtZ3yo4vRNUvShNXbWL99vRx1YPWr27klRnKMTbPKztZj+Wx
uPK89XvneuUr68M8Gle2t97143FlYOsD/+qV1a2//XBcNYWtw4/EVWtYT7tg
ohdque+BV563/nPtRF/XstVur/3a+va/edUC1t+e45XfrLcz2ysTWh+pBs6J
S+NZXpnT+lTfeOXVUThjXPWX9befjqtes/52M69sVomxSFy1j/Xtm3rltIqM
1ffqf76Cm3hlqgq4gVcvtAwOXv3SOP7dK49ZLns9sWbanpIirnrHatPkcdVi
1s/PEFdNZz32ZHHVXNbzfyiumsveC/zkVXNZn7a6V2+8lPW7vPKt9UxOeeX2
cYy38cpm1fDIoH6HnduooN6E/S6jg3o3dv7zgnKq7R3zgzKozameQbX6fb5/
gVdmtp5qr6B+ynO4R1DvwPbWTkH9BZsXvYP6Ss9zzNyg7FsPdwzqEdjz3y2o
B2F7QfegfsH/97KgPoi9e5oVlGtr83fnBOVa27MWBOVmm7MTgnpqdr/GBfXd
bI6PD+rZ2f2aEdS/rmnzOqjXZvd9UtD7BtsTxwb142wudAnqv1gNMiao/2Xr
yeygPF0HLwzKwbYWLQrKwba/zwzK97Xw4qBMbHv920E52/b6t4KyuO1x7wRl
ZcsYnYN6PbaG9Anqx73AeN+g3l8hfDCoHrP9aHdQ78PeEewJ6k1Yj31vUH04
0uZCUF9jtM3poJw6xuZlUK1oc+RAUK61/e6roHpyBD4UlN1tTzzntM7fJf+f
d9q7f7S+YlAtbX37s4n66A7jR4Lqycm2hgX1vybZ8x5U79n7kclB31vF5kdQ
brZneGlQvrT9cXhQb9Fywoignp3tL+8G1VqWi4YF9VhtD3ozqA9ra0K/oF5q
YTw0qB9qc2dfUBa3fXxIUP/U9rL+Qf3WInhJUI1k++x7QXWR7cWDg3qsljEG
BvVhi+IBQX3VF22PDnonYXvloKDeq+WTtl61UnU8Jeg6VsXTgt672Hh7rxrN
ntVWXvWgXZ8liT3Lat/3vGol6ze+61UrWX+yg1cdZ89ea6+60r7/Nt4RVR/+
emKNslxUyav/bOdfxqt/a3N2etC7H8tFN716lXYfb3jVpHYfO3rVdzY37+J1
Ub3je8erbrK+aBevGtPm/j78TlTP3k6vusDeD+7yqn3s3esXXjWavZ89mchv
lrF3eNU+9u54u1f+t/c+2/DwqHrLW73qHevZvoVbRdUfXuxVo1k/uaJXH9vu
0dteNZ31h9d61fLW1/3Qqw6yfvIH+PWo+smvePXwbd3zXn0M62eU8+on29x8
zauOsHlw3qvXZO+jK3j1ye25et+rf2jvaPLH1fO0NfaOV6/G3i+v9Op52run
FV79JXuHNTXoXYWt7a8H9VUfcPwyrz6Svc8qEFc/0MaXe/WU7N3WGjwsqvdW
q7z6UfY+aK9XrWrzfYJXb8fexZT36mPb3PnWq363NeRrr/rX1pZbXr0I62+v
9urB2vuUsl59dVu7Onn1Q2zN/B8Q8n2C
              "]], 
             Polygon3DBox[CompressedData["
1:eJwtmmWgJNXVRR8eoHF37Vu4O/TFKVxmcGdwd3fXgVHcXUMgHtzdBncnBHcN
4Vvr2/0jyaxUv/eqq+49Z+997hxD9h20z9gDAwOj+K9x+d9L2oGBIZ2BgXnK
wMAMgwcGLoV3hOeFZ4TPhVeDO/CU8NXwgfAy8OzwFfAu8ALwLPAjvYGBM+EV
G/4NX871neH5uT4zfDG8A9zA08OP8/mz4VX4/OPwlVzfH16K67PCj3L9LHgl
rj8KPwGfA68KPwE/Bg+FV4Yfg6/i5w+Al+bnZ4Nf5/pl8CCuPwu/Al8MbwA/
Bb8KXwJvCD8NvwZfCm8EPwO/DF8Erw8/CR8Jrwj/xO+/Cr6Iv7cJPDM8HXwe
17eCp+Tzt8M3cv0EeA2uF3g017eAJ+f6n+C/w0fCi8D3wX+FD4cXgu+B/wEf
BS8K3w//DT4CXhi+Fz4UXh7+jt9/GXwIvBz8LXwpfDjcg3+Ar4APhJeGv4Iv
gg+Cl4G/hi+GD4aXhb+BL4Ev4/53gueDZ4JHcX1zeDL+/q3wDVw/Hl6d6134
MK6vAH8PXw4fAVf4R/hK+CY+fyLcwg38T64fDS/G73sAvgM+Fl4Cfgi+Ht4L
nhO+A74W3gOeHf4nfAu/72R4LX7fvPAf4VPgteH54Ov4/J7wHHz+X65neEt4
Cvg2+Bp4d3g2+B+ub3g3eFb47/Ce8MLwf/h953v/8L5wl+t3+/3hveG54Dvh
f8HHwIvDD7o+4O3gaeG/wRfC28LTwH+Fz4e3hqeC/wxfAG8DTw3/xfUD7wPP
Dd8F38z3Owlek/uZB/4TfBq8LrwAvAefXwj+GD4PPgBeCv4SvhDeH14S/gK+
wPXGz4+GN4cXhW+HR8CbwAvBf4ZHwpvCC8N/gUfBm8GLwL/y++6B9+P+XnY9
c/08eEuuLw7fDV8D7wovB//C5++G9+XzL8H3cP1aeDeuL+/6hs+Ft4AXc/3D
58NbwUv4/OCN4Zngad1v8Ebw9PBUPk94EDwDPLXPEx4MzwhP4/uGD4KXhedw
/cEXwFvDS7pe4EPg5eG5XG/wwfBy8JzwTHVg4G34bO7/NfhOrl8F78z1ZeCf
+X53wftw/UX4ZHgteCz4OvgMeH14fPhm+ES4hX/n56+BT4LXhAe4fi18ArwG
/D+uXw2fAq8Nj8316+GR8GbwpPAf4TPhDeAJ4Fvgu7i/q+Fd+Pll4VO5vg48
DtdvgE+H14PHg29y//H5K+Gd+PzSrmf4CnhHeCn4Nng4vDG8IDwRz+Np+Bh+
/hV4YvgZ+Fj4Vfg0fv+68LjwjfDD8BlwhR92f/P7DoVX4PfNDd8LXwfvDq8A
PwvfD58ArwvfD98A7wlXeCV+37jwvfBB8IrwOPA98IFwDx4bvhs+AF4ZHg++
Dz4Y3gCeCn4aPg7eEJ4afgY+Ht4B7sJvw2fD28Nzw2/BQ+GN4GngZ+ET4FXg
8eH74UPgIXCB34HPgefn+fwOX8z33x9ejet/gB/k+mFwC08MPwIfCf8EPwnv
xefXhj+Gb4a3hZ+D14Angh/m80fAa8GTwI/BR8Nrwh34UfgoeHV4Qvgh+HB4
HXgy+An4WHhteFL4cfgYeFV4AvgB+FD3fy/1ZoEm72tHuIHf5foweGd4Xvh9
eAQ8Pt/3NfhwPj8Y/gP8BnwkvAk8IfwmfBS8KTwJ/B58HLwZPBn8Pnw8vDk8
Afw6fAS8Mfwbf28MvD+8DjwF1z+ET4S3hMeDX4UPgwfB88D/hS+A94F34ufn
gd/jfofD83L9N/hCru8Lb8H1WeBXuH4GvDE8Pfw8fDI8CJ4Wfg4+Ed4Kng1+
DT4LHgxPB4+BT4K3hGeFX4XPhDeBZ4BfgE+BN4dnhl+GT4c3g2eCX4JPgzeF
Z4RfhE+F5+N+/wdfxP3u537vpX4v2aQf39tLvV66Sb99qJd6t0KTfvEj/IT7
CV4L/gp+0P0PrwJ/3sv+GwKvBP8APw7vAa8Jfw8/5n6FW/g7+FHrObwG/DX8
kPURXhX+En7AegKvDH8LP2J/gFeHP4D/Yf1vsv+/gR+2fsGrwR/B/7IfNNn/
/4bvsH7DK8JX9FKvZ2yiV67spZ7P1ER/XtVLvZm5iV69vJd+MEMTvXtZL/p2
+iZ6+JZe9Ftpokd3geeDP+D5j7T/9tKP52mih2/tRd80TfTnh/A/7YdwD34f
/rv9tkm/ew/+m/20SX98F/6r/bZJvb69Fz0zX5P+c1svemfeJv1rd3hB+N/c
z7n2a/hUeP4m/ev+Xvrpsk300X299PtlmuiHB3vpr8vD88MP9NK/l2uin+7p
pf8v1US/7gYvAH/E3xsN7wrPD38Ij4Lfgf8Cb9KkH74N/9l+0aSfPNeLHmib
6IcxvfT/NZvoj+d7qf9rNen/z/bSv9Zooj/GZb2/Ah8KbwQ/00v/Xb2JXnmq
l/61WpP+9CZ8Ozy4Sf96Cb4RXrdJv3+xl36yThN98QJ8Pbx2E/3yO/w8fECT
/jPA338BPhBeDx4LfhE+CF4fXr6mP3zeTT9ZqmY/v9dNPV+yZj+/0029XqGm
v3zRTb/p1fSLL7vpJ6vX6Lkfu6k/q9W87x+6qQ+r1ryP77upD2vU6NWfuqkv
S9TUi7e6qfer1Lyv77qpH0vX1LcPuukPy9bUr4+7qf9PtNmPh5fs78fbrN/D
Svb3023231El/enJNuv9iJL68FSb/XpkSX35sE39vhDeAV6Ovzc7/Ek3/ecT
nvcf4e15ns+7v9v0h4v5/I7wMjX186Nu+lut6T9fdVN/V6yp5193U29XqulH
33RTrxeu6dcvdKMXFqrp92O60QuL1NTzl7rRBwvW6INnu9EP33A/n8I3lPSP
b+HP4BtL+sUDbdbXXiX16Hv4C/jmkn7/Hfw5fFNJvf4a/gS+Ht7b+gh/DF8L
7wn/p00/vBze2f4PvwtfBu8EL1bTj17rpj8vXtNP3uhGT6xcU6++7aa/LFrT
j17pRp88w++7z/5a0j8/hz+Cr4Z3hz+FP4CvhHe1P8D/ga+D9/J9tenPV8C7
wJ+16b9XwbvBX8D/hq+B97D+tNlfe5TUw8fa1L9DS+r/o23q3yEl9X6qmp8/
mfWwtc+D9XELvB08Bp6N69/Cw5o8n2lq7u9UeFt46prneQq8DTxtzfM+Dd4O
nqHmfZwJD4Gnr3mfZzRZn9PVvO/T4e3hAv8Cn9fk+89Y837ParI+u/DP8LlN
3t9c8I/wqCbPc/Ka53kCvAU8Dvyy3xfeEB4bfgk+GN4AnrLmfZwEbwU38K/w
+U3Wyxzw9/CIJu9nTvgHeGST5z8L/A18TpP1Mjv8HTy8yfuaG/4JHt3k/ZzN
858D/pT1MZH9to1eu6jk+bzaRi+cWaLf3mpTD0eW6K0329TLESXf7402+mx4
iX57u029HFXyfca00RsnldTP59rogxNL6uuD8G3W3xL98XCbfnJQiT55qE19
P7BET7zT5vmNLlkv77XpF+eVrId32zzvc0vWwwdt9OkFJe/3lTb65owSffkp
6+1WeAeezwvwa230+FklevXlNvrn9BJ9+0ib/ndwid55qY0eOq1Ef77QRs+c
UvK+32+jT88vWY+vw8+5nkv074tt9NGpJf3u+TZ66uSS9XFrm36/Tkn/VvOZ
xahZ1IJn1fjRo0v8gvfkvbnH1GZmGKuVZC5mG2YYq5RkMmYbPmOftd9JbWhG
UksyKrMTM4lVSzIPswozmRVLMiqzGjOUnt6mk2zFPe3eds+r7dzz7n17ilrQ
HmIvubMT72NNt7bbE9Xa1jBrmTVd7WwPs5dZ49TGZkQrl2RmZkf2AHuBPUIt
bk+yN9mT1LL2BHuDPUNtb4+yV9nT1Ma/lWR7ZnzH99Jj7bX2ULW5mdJKJRme
WZNr1LXqmlQ768FLSQakN9djz12S8ei9zQC6JZmQ2YAeea6STEjv7BpzrT3V
iVcyA5jFtddJNmBmMGtJBmCWYGYwW0lGZ5bQ8jOL8O+fu/EjszTx2mpgtbCZ
4wYlma1ZpJnb4JKM1SxuwSbZkp5P7+cec6+5B9XyezdZW64xsw8zr0Elma5Z
mJnlhiUZrlmmGd9GJZmt2Z8Z5volmYDZppnnenqfTrJQNY5aR42jN1ITqY3U
THpvv5PfTc2j97Lm2XusmdZCM69JSzIUszD3nHvPPWXtNROdpiQDMSs1s5y6
JLMwyzSznLYkszHLNFOdsiSDMWs1c52qJFMxizUTnq4kgzErNmObxN7WSfb2
eUmWbqa+Xy8Zwm/c/xKdZAtq6HFLMl21tZp+/JIMV61vZjtZSWZklqvnHijJ
dPXietixSjJdva2Zw+/dZIBmEXrysUsyXr36vvxnVes9/98kg5MBT16SQZkN
mwFPUZJhmQ2bgfyvmwzRbESNodZQg5hlqDHVmmoQswY1idpEzWGWoKZSW6nB
zGKe4nd/Bs8Jr9eLBlYLq6HNYtTQaum5Oslq1MBqYTWw3lyNq9ZVI+utzdhm
L8nYzd7UOGodNZ3ZjJpb7a0mNjtR46p11ZRmH/ZEtYw92l75Jv/+L9cXh7fr
RQOrhdW4el81qFpUDW32osZX66vxzXL+X9N2o6nNWtTYam09gdmMGlotrcbW
O5vJzVkyQzCrM+OboySzNvs7mv02tCRzM3ubjOsT2gut8VyfAp64v76OgyeH
Jyp5x8f24jHNYvVc7/XX42/99+n6dMbT6a9X652ezGxYD6lXUxN82n9f2/Ti
0c3q1HR6dz2tWa4e7v1+/Zykv/+sV3o+s2M9qF5QzaK2VDOqZYby/S4pyVjN
WvVgZsl6VL2ZntBsWI+qV9Rjmr3qEfWeekyzSz2h3lMPbfap59Rb6wHNMvWI
ekM9n9mymYhe0Pf9eX/9uR8nHpz1OVf//Q/tZV72hyZ587Be5iMTNcmXh/cy
75q4ST49opf5WKfJfOicXuZrEzbJp32Gi8Gvlzxb94DP9kl4QnjvXt7tJ9aN
wbkH1+IbJfemJlOb6ZHUsne5NrjfKeDayxowL/+1ZG24x3/tr2f3/qSDs76X
6NcjPbFZ+IWdeGXXlHn6zyVrzXv4pZt79t5Gtbk/15hrbT11dsnMzNmZa878
/Zf+ddeUvfS/JWvNDGG8kpmR2YIaWq/3VifaWs2q19EDqWWHtvlufkefzzlt
npfvyOehp9Pb6enMhvVsercpO8mCrTfyVP164gxokZKZkrOhbdTVJRmrWat/
4+n+z/tunNktXDIzcpbnDGyhkpmRszFnfouWzJycBTrzWbJkZuQsaJIms1LX
hGtDDa2WVlOajao51Z5qbLNONaBaUA1tNurMaImSmZCzJDP/BeFdO5kFOENa
rGRm5mzJGdLiJTMqZ0tqULWomtVsVM+n9zPjM0s14zBrV4Obfajp1fZqdrNV
NbxaXo1vNqvGV+vrAfQ2anq1vRpc72Jm4+zIDNIsx/X5VDeZvO9Dzav2VYPr
zfRwel09pd5OD2ZWoAfRm6nR1epmCHozNb3aXg2t91PTq+3V/Ho/NbJaWc2t
t9JT6C30HGY5ana1u5rfrFrPoHfQI+g91dxqbzW82ZOeXm9/UyfZo55F76Im
NwvS0+ptzZTM/swonVWYCZhdOpOboGQm6qzODHGckpmt2aKe9pi+ntLr7l6z
tnzHvuvDarS6mlvtfRw8rBPNpnY7tka7qcHUYvvVrD3XjGtnn5q14BpxrewP
79fJGnWt7l2zdlzDruV9a9aaa8i1tEfN2nfNu/aPqdF6ajq13dE12k7Np/bb
uKb22wPUQpvVaAk1hlpj0xqtoaZR2xwOH9eJJ9GbbFKjddRwarkjarSiGlGt
OBheyb1TMp89skbLqinVlkfVaE81rlp38xrtpqZR2+xZs/fd0+7tQ2u8jB5I
L2QGdWzJzNJsSg+l3r2zXx/M0NXH6tWH+vVD/3JHf314T96bZwacJZu5Ors1
wzWL7TX5Ln4nZ2P2BGeX1kx7hZ5Ob6f+Nqvdq6a2WLOsXWa6zr7NiM16zfid
rZtJm/0fWOPF9Gx6t0NqvJ0eSa90cI1X0sPoZfS4x5XMdPW+B9V4Gz2d3u6S
Xs5XTNfk/MYBNV5Qj6fXMzN29q4nNUs2M/bsg5m4WbIZmVmZmYuzlkE1z8Y9
4d5Yu0bLqlnVrsNr5olnl8yLh9VoHzWQ89VTa2q1NdvzGafX5If7lpznGA1/
Bd9SMq8dBb8DX1oynxwBP+uzLplfH1/Tu+xhzidH1mgRNYnzze1qvJYeTC92
Wk0etU/JeZIzavKC/UrOj5wD39vJM/XZnl3zbF1Trq2hNWvLPe/ePxP+E7x/
yXmVU+DL4SEl511OqDm/sm3J+ZqTa8637FByfuakmvMr25echzmx5nzLdiXn
Zzas8RL2XHvv1jXeRg+kF9oW3rATD6OXWbfGK+gp9BYb1PRqPYpeZf0ar2IN
s5ZtUeOF9Eh6pfVqapueQ++xUU3t09Pobdap8Sp6GL3MWjVeRY+h11izRpuq
UfVK29R4Kz2Z3mzLGq+mB9OL7VLjpfXYeu0hNdpZT6A32KHGG+iR9crb13hl
PbReeqsaL6gH1AvuZs/pxMPr5Xes0eZqcrX5rjXeXg+vl9+5xtvr4fXyO9V4
eTW92t7M2OzYjNFZpJpLrf5ZiRYzEzYbNlN0tucaci25pj2b5JpwbbjGPNvk
GnetuwY9y+Qe2Lvfn9Rf6rG9+v1HPeead+27pp3Vu6Zd2+ot/YQzLM92ORNz
tqVmNf8wb1CvOFPybIT5gbMmZyyeBXDm6OzFGZVnJZy5ObtyRuVZC2dyzq7c
I+4V9+wrfT+j3lO/mm84M/PsljM4Z2kj0Xcrd+Jx1J/O9DyLpMZ21qcG9+yH
GlVtrgb3rIead1hfb7lX3bPqIzW5Z0fUoGr1EW20sBrY5++ece+4ZzxbNryN
1lUzq50v4ffdWTLDd5bvjNCzc2p6Z4fWRM+26RGslc4UPUunR3DW6MxR/ade
M38Z3cab6dnU58PgRTvR2Gpt97h73Zrk2Tr3sHvZGuDZOGuUterCfv8wkzab
N+M2q7ZGWivNj8xn9Fc399eX+tqZmWd9nPE90+9H6v8L+v3Mmmnt/LITP2be
Yx6lXjWfsyZbm63Jnu1xhjKmr689i2GmbPZvBm/WbGbtrMNM3SzbmmvttcZ7
lsjM3NmHGb5ZunmV2kcNZH7oDOXm/v34/H0f3p81foGavMpeZE8yP7ImWhut
iZ41dAbsWUT1t7NhM3lnHc4YzOqtsdZaa6pnDZ35ehbRnucs2DMP5mfmmeZh
/wfSEvAg
              "]], 
             Polygon3DBox[CompressedData["
1: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

              "]]}]}, {
           EdgeForm[], 
           Directive[
            Specularity[
             GrayLevel[1], 6], 
            RGBColor[0.922526, 0.385626, 0.209179], Lighting -> {{"Ambient", 
               RGBColor[0.30756835, 0.18676585, 0.147065275]}, {"Directional", 
               RGBColor[0.2306315, 0.0964065, 0.05229475], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               GrayLevel[0.3], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[0.2306315, 0.0964065, 0.05229475], 
               ImageScaled[{2, 0, 2}]}}], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1: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
cJpZKyuP6pZZT8tLDs3sme/js4Zk9tX3woMz++d74HxmjS6/2SmzzsvgHpn1
tLxDz8z6W36hN3wv772F9/aB74Nvhdtn9pDDmdMLvofxmxnvC98P3wb3y+zV
b4f7Z84F7lCfyqzX5SmKwTVzzoUGZPb/dzJnUGYPfzc8MLO3v0taAK6Rc0a0
mnvbK9hT78FPlc5ZLym7Un3enTivUt/ZkTgzU4/YlTgDU53fmTgDU8/amjgn
Uy/7J3G+pf61PXE2pn63LXHeppr/d+LcS9qvenReKD1TOToXlJ45MtrbSSOV
is72pF2rROeC0rpVo/M/6dhq0fmEdOAR0TmidE6l6DUlPVwyOouVHi4R7ZWV
p+Wi/bSyr+Zw2ZyztRidHSpL7BKdXyq/7RSdWSr/7BxdD5R/do3ODqVLi0f7
b2VrLaL1inRLq+isUfqwIDr3lfYuFu2/lcu1jM4OpQkPJ+5z2iPTEq+X4toX
iXuheuKhxD1SvbJi9H7Wvv4rcX6s3OmjxPmxNMBPibNq9fffEufH0hIbEufB
6um/Js591cd/Tpwfqy9vSpwfS4dsTJxhq7//kjiTlkdYnzg/ls7/LrGflt47
OTrHlb+oH50lS+evTqxTpf2uj85B5RfWJc6zpf9XJa5fqmM/Js6q5UG+TZzZ
S7t+kzjLlx/5OnFmLy30VeIsX5r2i8S5uPThh4nze2mkLxPn7tJRKxPXKdWr
zxLn/dJ1nyfOLFvCyxP37WbSS4n7QFNpm8SZZXP4/cT5aAv4g8S9PcLvJtYC
Ofi9xL09gZclzmOUtbaL7tVNpM0SZ66t4BWJ97GyzeOja4Cyx/bRGY9y4w7w
w0V1VWvn0bxzSNWZx/POMFWL1D+XwoOi15LWT+B1S7QvqBCtp6WrB0f3Bt2T
T5U95p1zqr6pxy6BB0ZndeoLmxNneOo1f8JP5J27qr4pq1OP+yNxH1bmc0J0
b38V7h+dG6lX/p44N1IP+iRxFqXe8XHinEmeq3TRmtdeOJg4i1LfOZA4o1Jv
3V/0m2r9/FCU36rfvZE4P1O/ez1xLqXa+H3ifE79d0/iPEz9dG/irE49fV/i
PEz9d03iXEp9eW3i3E7+sWx0biefWIbXfYWuL/KDnxXt0y2JMz/5ynK8bo72
m+WjdbZ804RobfIaPCBam7wM94ne+/J9R0d7LXmubvDBaL9Zl9dZ3P8GwVpx
Zt7PAqQPn8o7T1a/ezrvzF99cF7ea0968kC096zD695oP1srOkfUs4Ykuofo
OUUzeH+01z6K1yNyfjbRFN4T7cdr6j5E++7avO6O9uw1eJ2Wd96unjU97wxc
vWxG3hm4evFzee8d6fypeWf46n0L8t5f8gJT8s7w1UOl+16B+0VrPWWJvaN1
5WK4Lzw/7z0o3f5s3vtauv35vPeyfMTcIo2ktfNM3vtd+vzJvJ8dqEcvynuf
Sttr78mnTE2sH5Vz9mJsYd41RBr+hbzrg/yIckH53InRWbieZXRUnU69v6SH
lSPKXx/L+NjUWZyerQxOvXeke5WNydu2ic4p5dNbR2d48svHReeOyp0awSel
ztb0XEaZnzxvW8bPTp2nyQuMS53d6flOvaJedgxzzkqdg8kLTEyd3enZzcmp
Mz09o5mUeg1rLcvbyz+ez3snpM5p9UxnNPxOsL9QhiqfPjQ6o5VXvQA+M3X+
pgwtX1SXhjB+UeqcX97twtQ5sPyFnhMqK2sQnfMpT0iLapr2SB6+OvUzC2lI
5YXKOrqrFqZ+ZiHdeEmR5/1/LpFz1tEjOkdUHtJT9VJePVjXXZX6mYj0ofJX
ZXoNozWA9mm9aG1YAn4qcX6sHK9JdKarrK+xalvqZxnyp5PhL4KzxGtSP1uR
1h2fOkfVs7NrUz+PkDaW3iwJz0ysK0vBs+EzUmeV8lznpM5m5bkuT/1cRh55
eOp7q3t8fupMWFnlBanzXvk4ZerKTIZx7jGpn6frOdHWQu9nZWhDUtcr+cq/
C91X5AUGpd6P8p7bCl1TlKENTL0f5aN3FrruKHPbUeiaosxtd6FrirK77YWu
I8ro/il0ffl//lboGio/NSB1nZSXPyV1nqxnhbsKXR+VfSnXV4YznP+fmzpP
locdldrjy/8OS90r5XPPS50Vy9uemDrr1rPO/wENMHGd
              "]], 
             Polygon3DBox[CompressedData["
1:eJwtmmWgHFW6RS8hOJ2Q4BpB7mk8CQ7pigApJEDIJbgO7q6DvTFmgAEGd4K7
u/vg7u6ewOAa3lrs+tFJrz5VLVXnfN/e+9xB2+yx/u69urq6TuKf3vy/SNXV
dX6rq2v2dlfX7+O7uk7o6epaoHR1/ZPX+jB2EjwIPgbuB58ID4SPhmeB7+Sx
Kc+/7u7qOpixXXi8xfPVeO2xTlfXcoxfz/OFeP/pGbubc99kfFVee5Txuxjf
jOff8NohjE9hfH4eR/Fai7EVeNzA84U5fwbG14EfhVeC54bXgh+Gl4fngP/D
YwDn/4vX+jK2No//8nwFxudk7P94dDG+E69N5vOPhH/ns3eEJ8GnwUsyfgY8
gHPX4PEgz5fl/NkYuwPeBP4f5xwErwk/BC/H+Oz+ds79jbHtee1z3u82xjfi
+Ze8dgDjNfwAvAzHzwrfDm8Mf8X4gfDq8P3wMMb7w2PhR+AV4bnghXhsXHIN
tmDsZHgwfCzcHz4W7g//GZ4KPhqeBT4Y/p3v83e4N7yb9wyezPMWjwPgX+G7
OWdznn/L9/kzxx7Dox/jh/BaF2NHwdPCe3gMxx8HzwYfBk/N+F/gqeCd/c2M
Hw/PDh8O92b8b/DU8K5eQ8b/CveCd/EawP+GZ4UPhXtx/ILwRiXXYHN4EXhT
+HF4K3hlHjfzvHB9ZmbsXzz6Mn4Qr03h/frw+hLw6fACHLsKj1t43ub1Fseu
CN8ILwLPCK8E3wR3wzPBC/PYhPMf47UtGTsFXhD+NzwrPJzHrTxflOP7MPYP
HtMwvrtzms/vMH4bzxdjvC9jI+A74CXgfvAH47MeXC+vcfx78OvwaPgV+FTv
Oe93HDwb565X5bevwvnzMlbBt8OLw7PA3Tw24/gneG1rxv4J94EPhH/j/ebn
tdN4PjPH/8ZnteEL4TnhqTh2R/h9eH14UfiRKr/FOePc+W+VueM99F56TV6D
12znWnlPXofXaudebQ+/B4+D265f/t+Cc5/itT9V+Y5v8Hztdr77NvCb8Fi4
wDvBH8Dj4cX8bfDL8Bh4sHMDfh4eDS/g2oBfgFeFB8AT4OfgUfD8PZlDr8B1
O3PrPngr+Aeu+eE9WVOvwmu0s9YerTLXvafe28fgPVtZA64F55Rzq8XxU7ie
88GnwjPBv8J/hX+Hd4NHc/yJ8ED4Dj5vnPUKHgDfBq8HnwQvBN8Nrw+f4pyH
74V74JPhheF74PHwVfDqrdRca++t3ONh8FXWWT7/ZngofCX8Bnx/lVo3heOP
4PgHqtRCa6C18KEqa9E17Fp2Do6HHy+Zmy/B61vb4XfhT+A/OXfhj+BNOf8l
eHV+7yDOf5XxHvgJxt9n/OEqa98179q/F94S/p7PPwx+sErtsEZbq10TG8BP
lqyVW1wD8Cccv59rE34RXo3PG2j/gT+CN3Dd92QObc65T7YytxbncQnP52G8
N2NLwJfC88LTWPvhy+D54Gnhdaus/ZXheeDF4IvhueGp4V15vN2de/A433Vc
lbU3nPH5GLsJXgf+iGP2gZeCL4fnZ3w6+AZ7FPwB43vB18Frwu/Be8DX2oPg
d+Hd4WvgGn4H3s3fB18Az8H7dcGLwhfBc8G94JvhdeGPOX5f+EZ4LPwhvDd8
PbwW/D68J7wPPNlay/nLwlfDY1r5jf7We+At4O/gQ+Ej4F/gnTi+gg+Df4J3
gIfDB8PfudbhFeFD4O/hbeGV4D/DP8DbwSvDh8M/wzvCHa8v/DE8AV4SPhT+
Ed4eXsV+Dv8G7wKPhI+Ef4V3hkfAB8Hfeu/hFeA94c/hTeCh8F7wF/Cm8DB4
b3gSvBm8DLwz/CHcAy8O7wZ/Am8ILwXvAX8GbwwPgXeHP4U3gpeGD4S/sRbD
y8P7w1/bu+DlenJPvbfe0yc76QnDma9XtNIrvCfeG+fE053U+FVK5pC1X73U
p+l36jXn1BKNfnGuLdCOnjkTXrrKnF686YfOdWuOtWcB+IJOapK1yZp0YSdr
YrGSnuFaGeucZXxe+DzGvx8f/WB/Ua99C88E728NdO5x/C0cPz98fic1zFpm
DbvctW0N7k6Nu6KTNbloSQ11ra7jGmJ8PnhiJzXms+7UJGvPh/Cn3alJH8Gf
wF90p2Z8Bn8Mf96dGvRpJz2um/c/qZXe5xop8MmtrB3XdBs+pZW1bo9du6Rn
23td02PhO1tZ62raZUo0tFpXzbB8yRpUS6hZly1Zo2pZ1+gi8ImtrF01x3Il
PVgtogZfGP5PK9rcmrNWSY+3Fk2A7+f3dFvT1Rfc33UYv8ueXTWapqTGqXXs
IfaSBeFLO+kZ9g57zGWdaJaVSmqgWsY1vxv8Viu14Bzfm+MHwxd3orFWKKmB
ai81zcolNVOts6TrFr4SHlllju9ZogGc+5/y+ybxfhNa0cdb2FPhpeAbO9HP
k+EN4S/gMYxfAs8OnwHX8GXwHPCZ8Be838/wtvBP8CT4F3g7+Gd4DY6/Ap4T
PquTGnVQSQ2wdlkzDilZ89aSzzj/R47fxp7E8Z/DP3Wnx/3YSQ3bp6QmWNvU
z1Ma/6C+Wp3xi+DZ4NM76fmHcsyXrWiB3bk+h8FfwX+Dr7Y3dadn27tX4/gL
4Fnh0+BR1siSmvwXjl8Vnsh4f/gUxr/j+83c6PeZGf9yfPzHDq3o+cnwr40f
+aUTjTS+xIOonb5mfAZ4X3iGKjVqrxINaO3aVM3H+YvD13H+hmoGuMBXwRvZ
s+E2fDW8sRoCXhS+Bt5cDQUvCd8A/4/Pm5733weenvf/Cp4O3hueFt6M4x/h
+CXg6zn+qRJtY399vZMavneJJrS2bwI/zPhi8LWMr2WPhOeGz+mkR+xfUrPt
HfacfUs0gr3IHnFwSQ+wd6xtD+b8eeBzOf8bvt+MjO8Hz1ilJx1YUvPtVfas
/Up6lL1sTTUZ588Fn91JDzygpCfYG9Wg65d4PLXpD7z/HGode7i9E55LbQTP
XcUzftmshzd4v/17sj4mNNdDDTelud+ul63gp+Fl4ds78ZR6Sz3om51oJrWT
muCF5vpOauqlWksPr5fX477dicfV6+pR3+rEo+vV9fzvwKeraZr+MpDve4U9
EX7bHq9WaGf+T27qyZU9mf+uh33hM+Cl4bPgQfCZ8BD4bHgwvGDVeC3e56ye
rJ9jSzS16+nWKtfGa+K1udxjmvqlv9BvWM/0FOq/SxnfsvEf46t4XL2uGcS7
nXiMP5V4CL3H1vAzjC8H38H4zvCrcAU/CG8LPw+vCN8Nbw+/CK8M3wtvAz8L
Lw/fCe8EvwJ34AfUzvBz8ArwXZ1oPrWfmu+pTjSh2lCN9kwnmkvtpUd/rxNP
tXWJx9Fr7Qi/zPhw+P5OPI3eRo39QSeebpsSz6TXU3OrvdV07zO+HfwCvBJ8
TyeaUe2ohn2+Ew2rllVDPqdf573OhfvBp8I7MP4SvAp8XycaU62pxn22E82q
dlVTPgGfB4/gPa6Ch9pvetI/1D/qFTOV1Us8uVmLGc+YEs9v9mOGsmpJRmS2
oqedr8mP9Lp6gg1KMhq9gp5kQklmpFc5rUots6faW9V0O5R4RLWeHnPDkgxJ
76kG3b7Eg6pN9Xjz6g1b8X5mRKuVZApmR+YP5mnmUeZJP3P83HpneB61LDyn
XgueSy0Nz6PXhuet4mF7SjIova0ZVl2SYZhtmYGtWZIxmI2ZGY0uydzMksyM
1ijJKMySzoWrpj8PqeKRtivxbHonNeuOJR5YLeuaGwqf08pavKQn/l0/pd5Q
f2ze5A3jmv4/ttFL6lc19S4lHl+tfT48Cr4GXgY+Gx7mHIIXavTq8Ebfql8n
Mj4SvhoeVkWDb1vi+dTmF/RE/6jH1Btq9l2b9a6W13O+0eSNetEtGX8KXga+
rRPPbt5o3qmXv5DxdRs9NaqKR9i5JNPQO1wErwffDY+GL4O3gp+Ge6p4gJ1K
MhG9wcXwOPgeeFX41CraTc2r9rXmq/WmbacXnFBFi6uZ1c6fwPe28h6+1+NV
o/VLsp3XqtReNb7Z5etVaqk12dq8RZ3aaw1Wi8xQRxupCdQGM9bRBmoGtcN0
dbSOmkptNX0dbaWmUltNA2/dikZSK71RpVZbw63lb1W5l84Z585TVbJIM0Sz
xKerZHtmlGaVr8LHt5JxmXW9WWWu2QPsBU9WyR7NMM0yn4OPaCVTNFt8pkr2
aGZodvg2fF4rc8q59WyV7NGM0qzy5aafmJmanU5bR+up8dR6/eEjW+nJ3o+f
xyQ/eYLxt9WWY6LV1GzvwFPX8RZ6Dr1H7zq91J6q1v2J44fAj8Nvjc+c9/os
2M5acM7/ke21832Xbu7ngHZq4bDmegxuZy3MxPvv1YpmUjvNUsdrqQHVgn3r
aBU9mF5strqpLSXaYva60RYltWjWOtrDGmQt6ldHS+rp9HZz1k0tKql1fepo
RTWR2miOuqllJbVr5jpaTo2n1mvV0XpqTLXmK83vNUM1S32xyt6CewruLbxU
Jct2z8G9BzNktch7JXmUmb1a5N2SfMieppZ5paTXmeGrdd4pybPMlNUq75fk
TWbe9s4PS/JMM2h7/wcleaaZtr3y45J8zwzX3vhRSf5nj7QXvlzSO9Vc6o+3
S7TYe1VqlT3N3qan1aucX7Le9bx6mYklXlgPpze5oKT/uGeidrunJM/Ts+kF
zi3xcnroFnxGSX3Qw+k1zivxdnr2vvBZJV5eT98HPrPE66sZ7N0vlWgJNY+9
+cUSLWSPtnc/XNK71W/qKfWcek3NqRZ/ukRvqSnNLp4t0ZpqVHv7MyXaVc+o
dzzbGsr9f6dK77HHO7/frdL77Un2pheq7C25h+NezvNVeqc91L0pNalZyPMl
WlVNqlZ6rkSrqknVSi+UaFU1k1rsoRItZYaitnmwJFtRw6iV/luibdRcarkH
SrSYGlmt92iJdjbjUwveW5KHqYnUco+UaCUzHLXc/SXZzulVvJGeSe80pKnP
A9v5vWYaM8Onl2QdQ5t6Oqid+dPF+hnXSsZh1rFInazAjOGP/Yk62YIZglnC
QnWyCDMHs4d56yZLKMkehtTRUmootdRSdbSTmkXtsnQd7aLmUnsNraO11Bxq
jyXraAs1l9prmTraQg2iFpmvTrZhxmLWskCdbMVMxWxlUJ0syQzKLGpwnSzK
zMrsavk62kENYdYyD3xCK5mI2cjAOtmQmZTZ1IA6WY2ZkdnRgvDEVjIZs5kf
qL+D4Du7k3/PXyf7MfMx+xkHv9tKRmFWMayOtlIzqZ2WraOtzGDMYr6oshZc
E3qNSfA7rXgevY+eQm0woh2vMbmK19fz6H3UTGqLqh0tpUdSO6zXzvlqCLXC
yHa0hZpBrTS0nf6/b/P5W7bzfsvVyYbMqMyq9Dx6m3Xb+X6L1clmzAzNDtt1
siEzH7Ofzzn+mVY0jJ+3BOPXtaIh1ZKL19FiajKzyU+b91cD+v2762RdZkJm
Q6VONmQGZRb1WfP79Fxej0XrZE1mRmZH69XRano0s6d162hFNZxabnydLELP
r/ev62g/NavadfU6XkbPpncbU8e7qRHViqvCz7bikfRKI+vk+e4huj81uqnX
Q9rRdlWdvUb3WN3/GdnUq6Xa0Zor1vHuZihmKaOa+rV0O9pxtTpeTI+l1xpd
Rxurkd2L+JX5OBJ+rTv7J1PVyS7NNM02e9XJNs0szS5H1dnvc0/P/bHfOH9U
K3uE7sf8Piba1j1E90emjMneoZpX7Tt33XihEq07V914lRKvtAJ8XyuZhNnE
iDp7y+55up+3Up2sSA+iF1mzjvfRI+mVNquTnZihmaVtXidLM7Myu9qkTlZi
5mb21lMnuzFDM0tbp4621iPoFdavkxWaQZlFrV3Hi6ip1dZj62hrNbnafNM6
WZ4ZjlnOxnWyFjMas5oN6mR1Zj5mP506Xs49Zff/Vq7jrfSIesVV6nhFPaJe
cXgdr6gH1AuuUccr6QH1gmvV8Yp6Jr3ThDrZkpmQ2dCGdbIhMyizqI3qZFFm
QmZD34+Jd9ZD2x/NnGaETy3JovTIZgf3lXjnH8ekn5rJur9nRma2fllJdmZG
Z1Z+aUl2ZwZk1n5tSTbknHPuOYfcyzPTMHu/riTrMGOc4vpr5/4NbPrxLO34
iUGNXuvXjt7/sKlnejDXhxmcewOXlGRzHzX1UE/l+vh7FT1jhmmW+USVv01w
z969+8GN/uvfjv43w1XPfl7iP8xg1ZOfluj1c6tkx2aMZo3nVMkazRC9HmbM
+ps3S/T4hVX6s5mM2cwFVa6vGY+/3wxZfftZif85u0oWaQbq9Ty/Sv83Y/N6
mhGrdz8p8UPn6aFbybTNts1c1edflCaL7URfTyrxWxOr6D09qd7UjFT/d3nJ
7zFfOYexXq3kvR83/UEPar0yP767yfP1s86Ju5q83zzZnndnk9+7F9yn8Y+/
l+gpM2uz6y9L/KR/M+F+8FfN/dCz6F30QA934nmebPyzf7/j3/M81eSNalc9
0hNNnv1IJxl4b56fUJKNu58wscm31bZ/zPkmz1Yr9m3mQ1c7+u8D+NpWMgP9
0vtNPzQT0A/5Ny3uF/+vxB/6NyruX39d4jf9GxL/XuHbEn/o36j49wzflfhB
/ybF/f3vS/ykfzPj/vQ3Jf7UPQn3wq4ouZ+zNX5ymnb8qtfca39Nyf3r1/jd
Xu34l1ka/zpVO/5m1sav9m7H//Rv/PDU7fjRi6roTzNBs8ErquhPM0OzwwGN
Hu7bjt+/vIr+NPMz+zNzM6u/pSSLO6qK33BPwuvvPXTt31Fyb71H9os7S+7d
lRw/opWM06zzH1X8hXsS7k0cX6XeuCenXv1XFf/inox7M2aarr/bSr6ve3Dm
DW+U+GMzLfXajO34RffkzBdeL+l37uHpx18t0bv/rOKf3ANyL8hM0/V4a8nv
NTM1v7uh5HqZWbr3cFNJlume0TTwf0rOdw9oOvikkr0h9zBngk8r2dt0z2Vq
+PiS3+uac+0dV1KvjqtSX90D9Xj3oKaFTyz5/e45zOBaLdmLMAN2b+LmkmzY
PRH3Fi4u2Stxz8S9iotK9lLcU3Hv4MISv+AewvTwySV7C2bM+okbS7JnM2jr
3+0l98s1qR64q2StmjmbN11fUu/OqHJ93LPx89xjUA9P304+cGyV7+ceit/f
PRnzgR9K8oZ/V6nv7pHYn8ww1fcztJMnmGGq/6drJ084s8rvd0/I33txFf9l
Zu73v6SKPzNz9n65Z2ze8EtJfnFZFX9mpux8PqvK/HbPx/5ydJXr5R6f9/OY
KtfTPRiv16VV/KyZvNffPSfzkB9L8gn3zNRDv5bkJ+5hq5d+K8k/3BMzL/mp
JL9wD8i84+eS/OP/Acfd+tk=
              "]], 
             Polygon3DBox[CompressedData["
1:eJwV1mXYFFUYBuClW7pB+eiU7u7u7pBuUGwFQUEFFcUApbu7BKQ7pBukG5SQ
BvE+P94fz309Z3Z35szMRnXq16hv9EgkcsjEMuvKRyKHc0Yil3JEIrUTRSLn
y0Uit1jFXJFIQ76RNZXXmkPyRb1a7JzeDVZerz5fzxrLf5gj8mW9OuyC3hp2
kF1gNdlf7CB7yGKZfiymvN4cla/o1WUX9XayK+wha8cesO3sEnvA2rB7bAe7
zP5lbdl9tpEdZ9dYfXaZzWO/s10sP9vKDrB/WUzTl8WQZ5kV8ja9PGyj3mZ2
jv3DWrA7bDZbybazvGwTW8A2sP2sGNvD5rBVbAfLxzazuWw128neZFvYVnaB
3WOt2D9sCzvP7rKW7G+2mu1n51h1dob9zg6w86wGO8s2sGPsKqvHLrFN7AS7
zhqwK2wbu8jus9bsLvubtXd9+4VjskHhM80DOYbpw6KHfWEeybFNfxZLXmg2
ygccrzjb63h3WAPH6xCcdZFHmh/luXpx2QS9b9jPbCGLzyaxq6yAtRWCs8ry
KPOTPF8vHpuod40V1KvIF7Eq8uPqOvIevYJsld4Vnl+vPF/AKslfmzHybL04
bLzeCDaaTWUx2Tj2PfuVrWSvsWnsS/Y9m85isV/ZV+wHNpPFZr+x66yQz63E
F7Oq8ndmrLxULyGbojeajWPLWSI2le1j91g004tF5L3mrhwxPdkrvdusvs9o
H/Yg6yzPN2vk3Y5XgG3Tu8kq6DXgG1gTeY/5R36l14P9pzeGjWdrWBI2gz1y
TiewdSyKzWI/6P3GVrPEbDr7lv0SfitLwCazXewqe8Tas3/ZbnaNPWYd2EM2
PJwbNpnFYGPZn+w+i256s2jh/jM75RN65dkRvV/YVDaHpWbz2XK2nR1jZdkh
1raG4zgHI/lLNlQnBYvLcrAxLA1rx/qwUew/NoylZPFYTvYjS8sSsadyGjOM
xWUtWXe9Eewp+5S1YN3YcPaEfcJasR7sS/aMDWZtWC/2NXvBPgvPZlab9WSn
WPtwHVkt1oOdZO1YHdaSvc9usL6sLmvFPmA3WT9Wj7VmH7JbrD9rzXqyr9hz
NoQ1Z13ZF+E6sY9ZM9aFfR6uJ/uIJWRP5NRmKIvNSrBKeh3ZQdacxWY35Lhm
IHvkesRlt+T45h32lGVhWa2tzJaw4tZmY9lZVbaMlWCx2HU5jhnAHltbklXW
68QOsWZ6jVkn9ll4h7D3WRP2Fhsa3iHsg/CsYm3Zx+wOGxjuK9aGfcRuswGs
HKvBurHjrA1LwB7LqcxnLA5rxDrqDQnPWfYua8o6s2HsIfuQNWQd2ODwHmDv
sawsG6sSnhOsWHj3spqse9j7rC2rzOqy3uwM68heulf3hOtt3zdix5yXF2x3
2BesITvOElv7nKUzX7D41v6ntzfsC73G7ITeK7Yv/H7WhJ1kr1n7jKU1n7N4
1iZhL+T0ZjhLwJKyl3IGM4IlZDHZ2bC/Ha8Lu+l4z3zGOnaaVWLb2XP2R/hd
rDLbySLWngz3EOvIrrHo7HS4h9hb7DqLxk6F+491YldZDHYm7G/Wmd1gaVki
5y8vH8sy+n6pWQKWm/3M0rM0LCHLw35hGVhyFodlZz+wVKwSq8N6hd/COrAy
rBrrwo6yVqw0q8o6syOsJSvFqrC32GHWgtVmLdh77Drrw2qyZmwQu8p6sVqs
OXuXXWO9WXXWhL3NLrMerCprxAawi6wrq8Iasv7sAuvGyrLqrCs7xlqzVCw+
y8V+YulYNdaYDWSXWHdWgzVl77ArrCdLxmKzbOx7ljr8PzK7wvPL9ajAjroe
2fVy6FXjy1lJnUwsPSvFZrG84X+eicGSs09Z8vCONjPkRY6Xji1yvJPhOaGX
kg9hKcN/uvDMZ1nZaJYt/Ccxk+Rp1qZgc6w9EfaqXgo+mKUI7zszMzyX9NKz
xXrHWHS9ZPwTlkw+bF7Jic2HLLH8V9gzelnYdyyrPMUskjc4Xja2xvGmsSVs
E8vB1rGjLJq1SfnHLKl8xERYEvYRSxLe22ZWeEZam4EtsfYnNpnNYCnZXHaZ
ZbG2MJ/Miob/YOH7hHOsl4rN01vMNodnKSvJ/mSL2CZ2kJVg+9h59obj5efj
WUF5mdkW9rxeGXZQbwXbEZ6brBw7zJawLWHPs1JsP1vKtoZ7g5VmB9hMtpxt
ZbnZBjYjfA7bwnKx9Wwcm84WsLRsIRvLprF5LA1bwM6E55PvHMW/YZnDOrNU
3qyXk/2hd5FF6RXkE1lh+ULYl6wAm8AKyZdMZlaITWJFQrZ3M7IybA57k50N
9wPLzL5lWeTT4fnJMrFRLErOaW0uVoOtZKVZLpab1WSrWBlWhJViLdlOVpcV
ZiVZC7aD1WGFWAnWnG1ntVkOlpNVZytYKVaQFWfN2DZWi73O0rISYR+x3CwD
S82KhfuG5WTpWEpWhE1hOVgcdlOOZ95mT5zTKJZBrzSbzfLppWepWFE2lWVn
GVkaVpxNZ7nCPmPpWEk2k+VhRVlp1ortYvVYcVaWtWF7WANWjJVhrdluVj/c
92au/Ltr/gZb7vtNZHPCOWavs2XsiffRAraXFWIr2QS92eHcsYxsKZvKFrON
LDtby+L73DssoXmXPWeT9ebJa/UysRUsn15h369RuP9ZdZ3cLA+rxVazsiwe
uy0nMIPYM2sLsGJ6TcM9wmrqnTKJ2RtsJMsk59crypqE+4bVYHlZPlaHrWHl
WR6Wl9UO54aVY2+yIqxxuEdYNfbUeVkrn/I7KrIdvsv/YkXAyQ==
              "]]}]}, {
           EdgeForm[], 
           Directive[
            Specularity[
             GrayLevel[1], 6], 
            RGBColor[0.528488, 0.470624, 0.701351], Lighting -> {{"Ambient", 
               RGBColor[0.41139519999999996`, 0.3882496, 0.4805404]}, {
              "Directional", 
               RGBColor[0.264244, 0.235312, 0.3506755], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               Hue[0.7, 1, 1], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[0.264244, 0.235312, 0.3506755], 
               ImageScaled[{2, 0, 2}]}}], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1: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
4vlPetOZlWcaH0SduaXFnaLOlDy7GBd1PuZZx4Sovs73zZlR+bpnXKVM64mv
IQejzrg863g/qkb2/nFN1JmYZyPjo/IJzy33R52HeF/8RdSZj/fLX0WdiXnW
MTaqzvLMPIPp3MxzodFR5x6epXwUdUbnOcyHUTWF5+pZTHWl5+eZTHWH5+eZ
Tec53l9/GXVG55nPmKjazXP4jKbzAc/3SibXOt9r3ovKEjyfv8V0zubZ0aio
swvPBkuY8hXPafdF1Saepf8a1U94n74kqm/wfnxxVBbiZwTHozIPz/OPReUi
fqZwIiq38Mz5VHLd9n3tn6gsxPP8v5O1gc+BjlH1nefJHyfXAV8bHzH1dp6f
j4haM33/bWg6V/F8ONWUFfl5wV9ReYxn4yejaiF/roubzuI8u5gTdcbl2ci8
qH7UzxT2RvVMnjOsiuqBPK9YHVVH+xnBnqhexzONhVF7hK8DK6P6J88lFkWd
rXmusiDqrM/zkNlR52+ew8yPWkN8fs6KOjP03OabqHNCz2e+jjpz8+xlbtSZ
m+cDU6NyMs/PD0Sd73lWMC0qQ/LM/1JUxua5/YWonMnPX64nnwvfBz+LOs/0
vG5iVC7lmf/FqHM8z/omR+VtfkZwOSoP8/Oja1H5lp+PXI06c/Pe/4+oc1HP
E45GnSt6rrI+qo/0HGZd1Hmg5yGfR50TegYyJSp783OWK1Hnip4xTkrWRV63
3IjqOz3bWRt1rutZ64Co8zQ/I6hqqtO8Bq5iOivzbP82/H9bnIiV
              "]], 
             Polygon3DBox[CompressedData["
1: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
yVnmrhvh8+H34KlLctp58JvwZPCl8MnwJNS3ZeF34Kfh09q813N67mPb/Ba/
o991A47/osv/m7h34ffgveF/wevC78J7wf80t8FfwofDm8LrwO/Ae8L/gDeC
v4KPgDeDN4G/gY+Ct6ijr5fq9NDtXTx81uV/7/f6Y1OPDu3iY2P4a/hIeHN4
j7HRE6/3os//Dr/A+tbwavCm8Lfw0fCW3X7tdffX+7XN2MTb5d3+3Raeoou/
w+C14Gd5/xbwyvDf4OfhreBV4X+MTfzu0u23f8FvwrvBf+324+tdvLmf1mb9
bXgP+O/wv+G34N3hv8H/hN/o9sNa1hp4COe4Ej4c3hOuO/10J7zX2Ogz9Zp6
alH4Yt6/BDw9PBReRW0CvwwPgVdW28AvwVPCq6pN4FfgKeCV1Bbwi/AweDXv
CfwqPDm8grUTfq6Ohmrgt3rRVpPBy8Pvwc/CE47N/fX+PAYPhltrB/xCHT24
end+13usr2hsws/Df4Gf4fdsDq/U5YeZu37E/bMz68OtlfAZ8C7wCGsbfKa1
E56108+n19FoajU12SXWwrHR13d0+WbXsen37K/V23+Fn+Pzt4RXgXeD5yvp
B6+Ad4fnN+fCV9bR62oxNZn9k5rb3HyV35nP3p7jh/L3Vbx2RB299VuXL9Rf
H9XpjeyZ7J0+rNM72WPYa3xQp9ewp7C3eL9Ob2HPY+9zbZve1p7a3vrjOr2Z
PZe91zt1eh17BHuFt+v0Cmp6tf1bdbS9Pbu9+5t1enc1vFr+vTq9lZpabf1u
HW1tD2UvdXUb78Ee2l76KjVYf/yNwRx7cptcao4z150EX9tLjjXXHt8mF5rD
zGWntMmF5jhz3eFtrpXXzNx7XJvcag41l57YZm+7x821+ivbdf2D/fCVa6Z/
sF/4vesntoYH9NI/nNAmd1oDrAU78JumVEPw2pF1foO1d8+S3/ZGnd7GHsVe
ZWnvAX+vyGuz1dFIaiU1+4Xe7zrfxe9k72KPYa9hD3Gx9b2N96BHoVexOcf0
leiLXVnfCh4In+U9hDcbG/1h/VGvbwGPx/oZ3lN4a3iQmsnvDG8JD4DPhHev
o9nUKnuVaDmvifdqq5Jr9UUdr0JPQ2/j2zpej56H3sendbT7/2l4+BN41l48
Ab2B7+p4aXpEekVf1fEy9Dj0Or6v4yXpuem9fV3HW9Hz0Pv4vI6Xooeil/JZ
HS9FD0Mv48s6Xomeit7KN3W8GD0avZqF+Xc+fy9iDNXph+/q+kv73dGsXwAv
Ck9Tp8dQu7xY0nuoedSqL5RooZ/reFF6RnpHv9Y593lqTrjXxGuxB7YXHtTE
m9KD0otSExhfn5ZoBTWT8f5JiZZSgxjPH5dok5/qaF01r16lOc/c91sX32oe
e6/HSrSQNdPa+USJdlJjq13fK9HeajK17fslWm2/Otr3gxKtZs+mFnq1pJez
p1PrvVLS69kzqt1eLuklf4HH9OLR6dX9Vudaes299vaMar+XSnpJNZe94eMl
WkxNZT85qMr+n6SJV6PHodcxaROvSQ9HL0cNbv74tuvHJmii7dX4eocTNfFO
3YPuRTW8+eO7Em2vBnMv/tTpHTWXvc7PXf6wJ1Af/VDSK9gTqK2+L+kV1Hxq
sR+7/m18Pq/uxYPUi1RzuZd/6fKXGsN89FlJvlJTWnt+7fLLeXX8gAmq5Dc1
n/7C+FXy42RNvDQ9N703NZ9+wYRVtKAa2l7mwxJtbQ6xP5y0Sm6xh7M/nKRK
bzdxE+9Ij1mv2ZxkvzhxlVylxtRvmKiKPrRG2m9PVqV2DuzqwXYl+9EeQP34
UUlvoEdoPzl5Fb9Dj2gCeIOS+qInNSG8YUn90XObCN6opH7okU0Kb1pS3/QM
J4c3L6mHathv4AWraNvxuny6TUn+GdDl421L8oMeYw/eoqT+6QFNDG9cUr+m
53qs04vnrfetZzgJvElJPdUT+hpeoIpXpMeodz9tFT9GD1Hvepoq/o2eofV3
6ir+jh64XveMVfwKPXq9zpmq9Nt6ts4SZqjSz0/bxGvXk9ebv7nObGH6Kv39
TXVmC9NV6e/1HCeDNyvRB3qwg+EtS/Kvnvv48Pol9VwPbhC8Xkk9n7yJV6dn
q3c7uIl3pmesd6yGUcv0qvhffawvbi1jfYzXv4nWvMgcOzYaxvr8eom39Du8
WC851lw7oIk3r0ZVq+5Up3d8rcT7mbmJ1tOT1ptWc/4GL1lFi6pRf4WXqKJd
9Sh/h5eq4l2qKX+EF6miNa3p1vZ1SuqtHuJAeN2Seq3G/AEeU0V7DmwyK3CG
4CxBjfs9PLqK9tXT/RZeqIrXq6b+BV68itZWU/8ML1ZFa1sTrA3myKnqaOLv
rO9VtPJMTbx3ZzTOagZ1+mv7knprT2Vv8HRJrzVRp792LqlvE3f6b5eSejxJ
pw93Lam3E3b6bKeSejpZpy93L5nlTN7pwz1KZgvDunq7X0k+n7Krt/uW1Ls5
m/R29jD2MpPW0ae7ldTvoZ0e2KekXk3V6Yf9S67FNF39P7AkHuZo0gvZA9kL
rVon/m8u6bVmb/L77ansrebo6ssJJfVh9q7+Hl+Sz2br6tFxJfl/2k5PHFQS
ryO7enpMSb0Y1dXzY0tmg1N3euKAkvo1Zxe/J5bUH2cexv9JJfnYGYfxf3LJ
/qn4vvv00jPbO89VJ55OLdlPetLqgdNKvGo9KevXOSXevzMA698FJbMBPX3r
34UlXv/oOvXtvBLvXY9crXluiXc+pk5+P7/EWy9Nend7dnt3Z37Wk4tKZoFV
nf14SolecQZoPri4JP+okdRK15TMCvqb9P72+Pb6zgTVO5eUzAqdUToLuLZk
djldp8cOLskP9tDOHm8s6a3t6Zxd3FDS6zlzNP9cWpKP2zqzketL8oEzTGcF
15XsF3syZ5c3lfRqztTsZ3Yo0YP2wOrVQ0ryjTNA9eZhJXpsrTqz0XtKem97
eL2zu0t6+3mbeA16GHoZ9vTu13El8agHohfwQMn11SPRe3iw5P7b4+sd3Fey
X+zxzW/3lsS7Hom95f0l13MBPu+YXjwLvYuFmmh5ewB7gfmbeBl6KHopW9S5
H8+V8CxNPs+e2es5YZP4cOZtfOuh6C08WeKtzNrk8/U4vB/Dm/wee16v5yZ1
vIynSrwhPRTj6fmS76cHYz54tsSb0eNxPz9Tcr3ma+L16Nm4fkSd3uXrkl5Y
T8Ne5KsSr0PPxd/7ZYkXY8/i7323pJex5/F875T0QvYw3p+3S3qb2Zp8Xz0U
7+eIJvdDz8Z8MhLephePSK/ImbGz1MNL9JszV/vjHUv6Ez0kZ+G3lBw/qsn1
0/MxPuy59MreKOnF7NH0wt7s7pc9mN7XWyW92YJNejl7No+3p7Q3+6ak19SD
cv2LEm9qEY4/p5cezt/vTNt+6tCS+rRwk+s3Xnf+MU3ON7C7PnM1+X56aN7v
uZt8Pz0+7+c8Tb6fHp71ZXST+zOgu57OXPXzp6wyP9IT+gletIpXtGsb71VP
VT1/XxtvSc/JenhHm9maHqR6bakmXoyei97LNE32r88kmI+WbuLl6Nno3TxW
xxuap4qXdG8bb0oPy/r6nzazVj0n6+m4Nt6SHpbf7542XpKek3rg7jbelR6T
9f6uNl6Vnpb1vW7iHekp6S09Wscbm7vK7LZh/e5ePCa9pgfbfD89LPXHCqy/
0YtHp1e3fBOvTo9Sr3KZJt6RHpNe03Lwk714SHpJyzbxkvSY9JqWaOI9DO32
y6JNvMnBXXws1sQbnKLbL87Q9frmqjJb9xkL70dV5dmLB9r8Hj099dSSvP+a
XjwO42/xJt7UkP/fj230mZ62/erabWaveij6A3pazpOdV+t1rdhkVqwnqTfp
MzBe/zmrPBvjMx5e79mr+FNTcPwfepnZWg+HNKk39ujWQ5+p8X72V3nWZos2
sxJnJM5KNmszG3Gm4mxlU/iPvcxMnJ34DIzxN7LKPMpnePQqR1SZr/oMjvEw
B+yzOeu28T+caemHbN5mVuOMxlmN8/B/l2hOteeP/Juvl2cy1E9TN6lvzuSt
11u2meV4jbxWeorG/xRV7r+eofE2tMr9P6RNv+1Mwv7/0Db9uDMW/YF14OG9
eGr6Txu3mY05M3N2tiHc9DKjclY1ZZN66YxevbBJm9maMzNnZxu1mWU5Y3PW
9lCd/VWqPOs0VZP67DMK6pFhTeqxM3v1xdAm9d6ZvfpjXJ1Zw6gq/t8PXX71
mSH15o5tZjHOcJzl6GEb78Or7Jf16syaHymZ5ejpu19mrbJ/bm0zK9BTNh/s
18bvcGZgv3FgG//GmZN+hs9s6KdNVWVevwPr2/YyE3I2tDu8by8zLv2d2+A3
e/G09bYPauNfOLOyv76lTf/mMxzmgz3azMacUesX7dvG33CGbT+zZ5vZtTN0
/Q9nUB7/UMnn791mFu8MXX9FjWpvpeZUu+7V5no4s9dvUUPZa6lB1VYzNtEv
PiOm3tLzNl8MrJKf9MTdzwOq5LN92vhFzuj1dzZo4/85M3V2un4bf9MZprNM
PXPzy3hV8rEeufmnr0r+PriNH+RM0P7fGY73Z+YqzyM40/X3PVoy652uST31
mTL1os/46BcPq/I8wQFt/DZniPpTu7WZnThD0c/auc1sz5mx57uhTT/sM3jm
h5va9NM+Y2a+u79NPnTGYb84QxN954xUPbtTm1miM0Pj7fY2+cFnQuz372wT
zz7TY7+3S5tZtTNH/TafIbP+zFbFr92K9XV7mbk6e72xTf/uM4Pup+va+AU+
A2i+ubmNP+AzUObr9eD5e5nxOuvdHz62l5m5/t3WbWa5zpSdLV/fxo/wmUPz
6zZtZs3OeJ31OhOy/sxXJR9v32Ye4YzXWe+2bWbBzoCdBV9Rp/4OqVJ/tmsz
G3bG7Kz5fwEiqSp8
              "]], 
             Polygon3DBox[CompressedData["
1:eJwV1mXcVkUaB+CH7u7ueF9CuhsFFFBqVwURKVdaJJTu7kbp7m6kOwy63QUJ
CXXpht1rPsyH//W758zzzDnnnpOjRacGHWNGIpFTRhyjdNVI5EZ0JPI4KhIZ
lzQS6VMlEinBrrEHbDTryUqy39lDNob1Yl/WikRmsh9ZA/YOK6XuOnvExrLe
rCg7y26yfqwDq8piFYhEUvG1bDZ7h52Wr6vrw9qxNGwh28hqs7IsF9vKjrAv
2IcsJ9vCDrNmrC7LwTazQ+xzVodlZ5vYQdaU1WZx2Cg2gxVhWVkqNp+tZ++z
0iwmG86ms0IsE4vNRrIf2DssC4tiB9lZ1pF9xl4bA9lElo+lkVvYv9FsBavK
srOIuUPZVFaAZWAx2DA2jRVkGVksNoJ9zwqzzCwlm8fWsVqsFHtjDGKTWH6W
Vs6rbh87xdqxT1lqtoBtYB+wMiwr28D2sybsfZaOLWabWV1WnmVia9ke9gmr
wTKzdWwv+5TVZFnYeraPNWa1WFq2iG1idVg5loEtZVvZR6wiS8+WsC3sQ1aB
/Wl0YKNYcva2ciSSR91edpK1ZZ+oyc32sBOsDfuY5WP72WnWnjVmLd2PMWwl
q8aysVZsLFvFqrMcLKO5y9g2Vo9VYtnYRnaAfcY+YEXYGXaD9WXt2VtjMJvM
olg6Oa668WwuK8Vys3bWXcmOs5asKmvLVrBjrAWrzNqw5ewoa86qsAKud5id
Z1+zz1lZdp9FjJlsJGtv7ir5J3WtWDX20ujPxrM8LJVcxdyY3tWUfA2bFfbd
3NXyz+pas+qssLpT7HfWm7VlhdhJdo31Ym1YefaQxTRms9GsIDshX1XXk33F
KrGIdZOH/WczWGUWg6Vgq9lMVoydk2+Z2591ZP8zhrApLJqll7/wm/uE/8+K
suSsgrmPWCxjDhvDkrMf5OXqqrDCLAWbG3oVq8lKsgRsElvAyrJ8LD6byOaz
Miwvi8cmsHmsNMvDkrHv2TJWmRViidgUtoiVZ1EsIZvMFrJyLD9LzKayxawC
i2bl2AMWw5jFRrFodkg+p64Ta8oqsscsdnje2FjW3L70DfPUFWPJWBJ109gS
VpEVYEnZdLaUVWIFWX52gJ1hHVgTVobdZE/YeNaX9bTGL+wvNoy1Zl+x2Wwn
a8SKhR7J/s3esOmse7iP7DaLF/aaDWAD2G/ya3XTWDfWj11mL9kU1iU8y+wK
e8Wmsq6sL7vEXrDJ7Bs2lN1h8cNes4FsOLsnJwx7zQazseyZnDb0SjaBDWN3
5QTh3rFBbAx7KqcJZwgbx1azXJ7dauEdYbvZaPZETh36NhvPxrHncrpw7rGJ
bCsrZG4d9ic7xraxwqxu2Fd2nO1hpdk/2TN2lu1lZdjH7Dk7x3azUuwf7Ck7
w7azoqxeOPvZCfYjK8bqh7Of/cp6swvh+vZvIuvEDrGK6j4L945dZgdYedY4
7D+7GHof+0OOG94R1o8dZBXUNQn3k10KZxa7JccJ7w3rz/azcuo+DfeYXWD7
WFn2Sbif7DzbwYqzBuE7hJ1kq1hOVjX0IraHjWB/yonCc86GsK/Zj/Il/60L
q88msJcsQzj32GTWiW2XL6r7hn3EJrJXLGM4p9gU1pFtky+o68zqsXUsr9/y
Hr/J9rPx7IWcPpyFbBLryo7If5g7gH3BurNj7A4bxJqz79hP7B4bwlqybuwo
u80GsmasB/s5PD9sKGvFvmXH2V02mLVgI9lfLHF419lQ1pntkC+r68oasG/Y
TnaFdWMNWS92PjxTbAL7mk1ir1mmcKazqawPuxieR3WTWGc2iv3NkoS+yIax
NSy3varOrrO9bAPLz2qGvWEHWRe2S/7N9bqzRmw9y6euRjgb2AG2kUWxWmFv
2CG2luVh74azmu1jm1g0ez/sNTvMtrCCrHbYa3aUbWYF2AdhD9kRVlz/uyrf
91tGsR5sl7qS6hqFvshOs5UsK6sY9pBtZ3NZUlYonP1sGftPOLvkzq4Xiz3w
nfN7+F5h37K47DG7yb5kfVgC9oxdD98wrAeLx56wu+H7gg1jSdlrdjWcA6wL
i80esnvhG4GNYMnYG/Ys9HI2nGVlieVrRgvWjcVhj9Q9Dc8bG8qysETyPP8t
lf9WjJ9ka9lf4Z2Tu6pLzWLKz8NzxEaybCyJfMdoy4awJOyVNf4IZwgbwBKx
F6yZNTqyMSwHi6ip4X7ksG5RfoLtYq/CGSJPUJeXpZb/Ze4stoM1ZEVZazaD
bWf1WRF222jDBrHE7KV137NGdmsU4b+ynWqqseQsO9vFVrJbYR25n7kJ2XNz
q6tLoS4H381WqbkR1pZ7qYvPnqp7V11KdTn5HrZaTU1WhFVhV9kvbKffXII1
ZI/ZKfYi9G15tOtlZ0nlJ6F3sMEsM0soTzU3trm5+F42l81gCVh+dogtZFPY
WzlL2Bs2nc1kCdVFscNsEZvM3siZjW1sGpvNEqsrwI6yJewHFp/lYwfZAjad
xWV52H42j61gWViF0IvYNvY9i8fysgNsPlvOMrPyoZezrWwai8Nys31sDpvF
ErFodoQtZvNZalacnWJr2DKWiZULPZ9tYQtZWlaSnWHr2d+hV8rd7WkaFku+
H/oT68nSsTjyf0P/ZN+xtCy2/Dj0YzaQZWIJ5Eeh57P+LCOLL8+xbhLrFuTH
2FL2MPR8ua+6DCyevEBdGnUl+Gm2ji1i6VgpdpZtYA/CWSP3Njc9iysvVpde
XWl+jm1kS1lGVjacZ2wzW8IysDLsPNvEDrNKrCl7y66w/wODmMbh
              "]]}]}, {
           EdgeForm[], 
           Directive[
            Specularity[
             GrayLevel[1], 6], 
            RGBColor[0.772079, 0.431554, 0.102387], Lighting -> {{"Ambient", 
               RGBColor[0.35441579999999995`, 0.2863108, 0.2204774]}, {
              "Directional", 
               RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               GrayLevel[0.3], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
               ImageScaled[{2, 0, 2}]}}], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1: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
zOs/D67bS/CnwXX7Z/xx8Hq0AE8MXo8W4k+C15FFuAzX4T/Vbc59SZ3vibsw
3p/nz63xGF7THd+CX8CX6v7hJvhi3TPcCEdcCV+Ja+CD8NX4Et17fBO+CVfF
LXAjXILvxo/ga3BX3BE3wv3wo7gO7lbc62rvejm+UGMCX6+5qXGJ6+DLcWVc
C/9P4wPXxxdpPOGMz9X4wLXx2bgsvgqfozGNa+ILNJ5wQ3wWLoOvwA/j2ro+
+CFcC3fGD+KauBO+A1+AH8a34//hh/Bt+Hz8IG6Cq+FWuAW+FD+B78GX4Mdx
S3wZfhLfjS/Gj+E78YX4kWK+UKa4DzfH5+EHcDN8Lr4fP4br4u74fnwV7oAf
wFfjjvhxXA/3wE/ga3FP3AHfgPvixvh03LKYd7TXbV/cw2vP2UeZQvMf1ytx
PyDge/AV+GB8Db4KH4qvxd8GZ+e5+Kfg/P4LnhXcK/i1uC5ovizHXwf3Cmbj
D4L7A98Va6Bq9Rf4/eAewrf4q+AMPgvPDu45/IbnBOf93/E3wT2KOXgAbolH
4q64CR6Eu+Gb8fN4EL4Xj8YDcSs8CvfHLfCruC++G7+C++F78IgS77O13x6O
JwT3Mb7BPXBTPBiPD+51fI3HBs/HL/EN+DR8F074FHxHiXOlMuCt+GpcBTfA
GZ+K78QN8Am4Gb4en4xvxw3xibg5vg6fhG/DNfFh+DpcCx+OE66Nj8A34C64
MR5YrGlag2biL4N7HT/hzvgmPAB3wjfi/rgOPgo3xtfgI/GN+Ep8CK6L6+Kj
8c14XHCf5yv9rOJ+XuvzfDxc45N6VT8796pv8GpyTVeOWIHP1DzkfLXs+/Q0
rpp9n9ppD5i8Pmm/90ry/kZZY3jyWqt8MSx5fVW+GJG8HiubhOz715b3Kcmu
lU/i07Pv/VP4leix8QgeET3GHsXDo8fGw/gufIZqDj4ne93qjO+Innf18RnZ
Y7Q9PiK77rTCZ2aPxQ745eS1R9nnpeS1RxnnxeR9p7LYkOS1SjnuheT+iPLa
6OR1QtnqjeR1RRnh+eRejLLeoOTeinJil+R9rbJk5+S+hno73ZJ7Jcq/XZNz
grLn68nrljLs2dlrTCc+82vJ65Yy7FvJa63yyODkno5y5cjkNVKZcWjyuqsc
Nyp5nVN+HJO8tikXv5O8fis3vZ28riu/vJe8fiuXvZu8r1VeezN5PVY+6pTc
91E/6qzsOd+Rzzkqek18At8fXYcb4fuia/4NuGWxr6h52Sq6Dl/H+Qei9/k3
4keia/vN+FFcHd+CH45eC5rgB6Nr/k343ujafj1uE72mZNw6ek1J+NnoWt0C
d8P1VXtx1+h6fjfuEz0HNWaei15nW+Jnin0D1fV+0fO6NefbFnsaWmeeil4v
buX8Q9HrlPq9faPn+L24f3TNbIPvjF7jGmgvgW/V2ofH4Psqer6cml1nH8eD
omvgA3hg9H7jfo3nYo9C68zo6L2c5tfI6Dqs7x0WXW8fwqdk16bHVAei67M8
ILqG34ePyd5byO9F5wjVgXHR+UL1YWx0dtD8fbfYu1D9Hh+dHTQHJ0RnCs27
D3H7ip6zH0TnCI3t96PzhcbPydk1UXP/6eg9QzPcMblvqF5W++SeoPrPU5Jz
nbLz5OS8p1z8ZXLuUr/3i+Rcp37Xj8nZTzm6YXTdrq7cnJwhlZ3HJ+cT9Q1u
il47tLealJwJ1Sv7PDmrqDf7YXLOUf/5uuj6H9VvS8426l1fH13Da3D+s+Rs
o/7zxORso572x8nZST3tD5LzknrX7yfnPfUrPkrOP+qNN45es67iPZtEr1NX
qx+QnIHVE/g2OWcq79eLXjsu5jXXRO8/L8DNo/eZdfGt0WviNfjm6PWuJm4a
vZ7Wxg2i177L8LXRe5VL8C3R62YtXDd6P3OReo3JOU09+TrR+88LOV87ej+s
deeb5Ays/s/XyRlYvaOvkvO2ekffJedw9THOreHMdUYtr12ldW21LkfvgZVx
m0XvB+roc2b3T9Wrvy1631VPYyy5L6znHVOT+wvqt0xPzhjqPfZJ7ner//ls
cq9WPdJnknvN6lX2Tu5Bqxf6V3J+02ebkJzP1S8al9xrUL9ofnL2U79lXnJm
Uy/rueS+tvqufZN77uptjk3uNaiv1SO5R6yeavfkPrv6rh2S++N6FtMzudes
Hmyv5F6z+pz9k58NqNfaL/mZgXq5A5N7/epnDkh+BqB+5oLk3Kv+zNzkHKt+
0ZzkbKw+1ezkzKwe4PLkfKveTv3ovdal6tslZ1H1gpYkZ2P1vpYmZ1H1lHL0
fuYK9aKSc5f6fsuSc7V6UCl6X3S5+oLJmVY9pWnJvRX1hP9IzsnqR93A64/h
9Vfy+tujs9W16h8n53/1Kmcm50b1Nmcl9wLU21yYnO3Vr5uRnDPVf/4tOW+r
x7U4OTOrV7koOTOrP/l7cj5XD619dA5qzs89LXuvrPXx8uz9t573HZedMVTb
j83OJKrtB2ZnJH3vftm5SOtgmew9q9bN47MzidaODcl5UtfwqOw8pnXqgOx8
pVq6f3YW0jr1X3JG1fU8L7sfpGeFF2fvrfU87sjsLKf1a2tyVtEcPze7x6Qs
vD05t6huHJ6dnbRunpidV7V/OyE7L2kN2pKcRVVbNifnYdWuUtl7X62Jm5Iz
s+rb2uQcqzrzd3KO0rj6Jznrqt6uSc6uqm+HZWc5rfWrknOsas7G5Hyu8bA6
OdOqRh2UnRtvx+uT863Whd3Je3qNmW3J+2/VwKOzM7nW8XXJWVr1cFdyHlBt
2ZGcN1R/diZnBtXY0tl7d+1j/5fda9Oz2kL2Xl/72MrZfc878EnZ2UB740Oz
87D2KrWzc5qeXXaIzt23qbZnP3/Ss8gLsvt6el68V3ZG0v5q7+z+gvZOB2fn
5zu1zkb3GXQdLsnOFXo+e2F2H1DPmi/K7gPq+XWd7OdeejZ6RXb+1DPrCtm9
DO3T9s3OxtrLXZWdafXcuW72szc9S62X/exKz0zLZ2cz7Rv3zM5j2sutTO41
aM3qFN330PW5NDsT6vn4v8m9DK2zVbJ7BNrjdYnO73fhstm5TnvFztHZX7/7
Idn9Bb2mYnaPoCmulN2z0LW9MjsP6zn41dmZXM9wa2XnZz07LpedP7XXrZ6d
t/XsO2ZncmWxdtF9Br1/jexMqOfyl2XnXv17gPOz+7l6pl8zO/Pr2fEe2VlU
e9r/A6N/rX8=
              "]], 
             Polygon3DBox[CompressedData["
1:eJwtmmWAHUUaRQcLzsAutrgvy9Tg7tVYHm4vuLu7QwTXJEAS3N3d3V2CayC4
BHffc3Lfj0Cfru4387qrvnvvVzP7tnutv+e4XV1dw/jP+Pz/xb5dXSt1d3X1
7+nqOq7d1XVewzl43NLVtVa/rq5T4HPhkYwvB7/A9Q18BHws1z8JTwVXeAB8
Lte/AI/D/Wty/WnwtfD7jDfwy1y/PnwyfCLXn8z4OfCL8LKMv8T4evBJ8AmM
n8j4EPgxeGnGT4AHw4/CS8EjuX5leAB8PNcfz/gp8CPwkowfB58MPwwvAQ+B
z4dfhleAX+H+DeBT4JO4fzDj58EvwcszPgy+Hv4AXhl+les3hAfDJ3P9CMZv
hD+CV2X8dPg6eDS8EjwcvgH+EF4Ffo372/AQ+BTuH8r4BfAr8IqMnwQPhR+H
l4F3gNeEj4WngZ/l/oXhPeGjuH8Q40fAt8ILMX4k3B++DV4YPgoeAN8OLwIv
yHtZkeNxOde3dnUdzfhAju/g3KKMHwEfAt8I98L94UPhm+D54YHw4fAt8ILw
APgw+GZ4AXhTeFn4IHgSeHN4efgQeDJ4H3hL+Ax4dngzeDn4YHhSeC94c3g4
PCu8N7wFPAKeDd4T3gweBs8CbwGvAB8KTw7vB28NnwXPCe8P7wxfCM8FT9/i
3cMT8Bxe4Pn9B34F7gO/CE8NPwP/zfXPwNPBL8HjM/48PC08Eh4Pfg5el8+f
H96V67v4/PXgBeDd4HHg9eEF4d195vBB8G7wJfB/4UPhPeHL4fngw+G94Svh
Au8LbwWfCc8BHwbvBV8B98AHwrvCF8PzwAfDu8OXwvPCh8B7wJfB/4O3hFeE
D4OngDeBl4EPhCeGN4aXhg+AJ4K3h9eAj4GnhreDV4ePhv8Nbwu34KPgf8Hb
wH3hI+Gp4J3hdeAT4OnhXeB14RPh/8A7wWvDx8PTwTvCa8HHwdPC3/Kcu/n3
LuemZuwZ5v9CHO/B+JE8/1M5dyH8Kly5fm3+Tcn1ozg3DWPPc33l+HDGj+H6
cXh/t8CfwnfC48G3wZ/Dd8PrcP9U3P8e56bl/vEZv53jLxi/h/HdObcJfBo8
E9fuAW8Knw7PDF8IfwvPxmesC7fhJeB9GZ8A3gpeFR4Id8P94CXh/eA+8Abw
YvDe8HjwRvBS8P7whPCG8OLwPvD48HN8v0XgveCj+f22Znw1eBA8Zb/UcGu5
NbkPY129rCv4a3hu5yL/Nub4VK6fsV9+Z3/3bzg3j3OLfxtxPJTxGRhbg39d
zn3XRJMab61/3jUFv8/xP1z7rGukSY211lpTX6HenMm5+zn+jnN9GTu/ybP2
nfnurHnWPmv+4zVz0rnpnNynpuZb+63xj8K/8Z23c+7DW9TUfGu/Nf+Rmppv
7T9JDYB/4fptrAXwZvDijD+kFsEP1WiMWqPGPAavW/Jsfca71rwD34XvbK+a
d+a78x3vWfPOfHeLWgNq3rnv3ne2B/w7P3971z68ZU1NtjaPrdk179R36xzY
HV4MflAthB+Ev+L+tVwr8Nrwhfx+D6h98APwd4y3fZfw+vDPzglrIbwp/C28
ge8SXg/+gPlzIMfXc+4sxkbDB8DXwWfCP/FvC2sx5/px/Yr8vK2sRfDG8Idc
fxDHN3DubK6dgfXyKjwh142Ev+Hfeq51zq3L9cc2eRc+c5/9GMbXcK1zbi3G
v3YNWivgdeAv4ZbaB68Jfw6vYu2BV6+pUdYq18je8BeMr2atgteAP4NXsjZ1
9O5HeDO1A27X1GRrszV7R/gPxnewdsJb1dRoa7U19qKaGmut3UVNqdF4tV6P
82GNxqv1eoaPa+a4c/0++Ee4BX/fkzXwE7yaNQ6+F/4Bnhu+qCeadQH8omvR
2gN/X+NB9CJ6jI9qPIPeQU/zao3H0mtdA38AP2gtg6+GR9d4Gr2Nnu5l+EZr
g+8efrHG4+n19GQv1XgyvdnZ8Eh4dfgH+AH45xrPo/fR43xSozlqjxp3Mfw3
z3NntQreFv4T3lEtgreu0Ui1Ug3doUbT1DY18bIaTVQb1bBLazRRbVQDL6/R
NLVNzbsE/ofP30XthLer8UB6obEeqcYj6ZXGepgaj6PXOdg5DA8tmcvO6etr
PJHeaKyHqvFAeqGxHqnG8+h9xnok+C9+/k5qObxNjSfQG/TC29d4Jr3TWM8E
X2DN7I7mqD2/cv+2jM/Nuc0Zf4/1tR/H13BuBGN/98279J3e1o6GqqVq7LH+
fMav4ngU525lvIv1eLPvBr6jHQ1Wi9XcY2o0V+1Vc4/2+XH/Tc5dzt3ejgar
xXrQo3x/jF/J8bucu4Xxn+GL4dedk/Dv8OXw2/BN8B/wFfA78M3WE/gi+DXX
TDseQi+hhxjI5//K+KUcv+mcYvwX+BL4DdcU/Bt8GfwWfGM7nkPvoecYUONR
9Cp6lEE1nlnvrIc5Ej6jyVp0zbn2zmoyl12Trs2z4Qe7M8ed63oKvYUe/TXu
f7pvap81cBA//5wm2qcmqo1PMT67tZ3xgYx/B4+An4WvhL+Hz4Cfg6+Cv4WH
w8/AV8DHNNEia761fwzjp8JPwJcw/hV8GvwkfCn8NXw6/BR8mfUWHgY/DV8O
f9m3ow3wxfAP8Jnw89YE+Me+WfvWgGvg9+H94WvhM+Av4OPg++GL2vF0ejs9
Rv8aT64317OfXuOB9EJ6pKHWX+4/huN7fYbc/wl8FHy3ngD+CB4E32nNaceD
6EX0HIO5/2PGj+T4LmtWOx5EL9KPc6fUZACzgB7s1JqMYdYwU+wPf889G8Ez
wRvAP8CbwDPDG9ZkDLOGmeK0msxidtET76s+sH5u5fgzzt3FvZ/y+xwN32PN
bSezmF3MPPtx/SjG9+X4as4NZ/xdeB/4KnhYO55R76jnGsL1e5dkQTPhyTWe
UG+4Cnw4/A7376gWcO50tbwk65p5D6vJPGYfM9YBNZ5eb28mOrDGA+oF9ZxH
wG/zeTtwfD7nTuPz3oK3h8+DT4UHlvwsf+Z5XP8G49tyfA7nhjD+JrwdfC48
tJ0MZ5Yzow3j+tcZ34bjszk3uJ3MYnYx8w1Xvxk/luP7OHdhO5nMbLaTv1NN
ZjO7mXlGwDPy/F/jeCJ+r5e4/oAm2qtGqpWzM/4OPAXjb5j/a/oLu5f4fWu6
WnpqSa0/sSbv71HSv7Bm+qx2K6ml1kSf5a4ltdI55rPbp2Tu+R2tlQeXfHff
obVnv5J365x1bexbMpfVKL/LCSXa5XeyVh9a8l195777vUr6F2qez+r4Ei2c
ie/3Ojwx/HI779x3v1WJ39eT6k3XKalHaq5z+ZgSLdajuBaPKvEuegrn3pEl
z09N9d0dV6K1aqhr+dgSbfWduBYHlbyrk2r6H3uW9It8p2rJISXv2hqgVhxU
UhusAdb2/Utqg5qitqhJv9Zopt7q9BIt1XPrhS8v8eJ6fLX7shLvrwar/WeW
aLOeWa9wRomXVlP1HsNKR2trvMHw0tH+Gi8xosQbmEnMEreWZBU9lN7/thJv
pUcyS9xS4p3UALPJ7SXaoAdwPp5W4g2sQWrPASW1yZqi9hxYUmvMNHqJK0qy
zs41/Zy1S/TCGmOtMZP+WePB9Ms3l3gzNVwtN8P+XpNZza5m1L9qMq3Z1pr1
R41nU09uKvFy03b6c993/MY0Hf36rpO/Dq3pB25Z0l/6hH+zdPLiYk08gLVu
5xJvoMaazXYs0V7noNpo3nBu+p3UQjXT76pn1Cu+UqKvfTr6+2Gn36gHsXbv
UuJN9Mh66ZdL9Nnv9Cj8esl39Rk9Br9R8ux8Jo+o1SXPymfyOPxmybPSQ+ul
XyjxT+Pw85+G34Xvb6eHaS/TvGC++c5nrF6W+KkJOvn1g05/81vG71LPS/yQ
c/ph+NWSuf4P/CT8Nnyvfoz7n4Lfge/TzzH+BPxWSX/hG98h/GyJX/KcvYc7
unPt+B3/MrrjN8wMZo+RJX7mvpr6el5Jfru3Rn/PLdHzu2v09+wSfbqnRs/O
KfGX19bkv1NK9OC6mnw4uEQvDq7p/25R0n+5usafnlSiD3pmvfOQEr2ap5Pv
x+lNb+HOGj0/q0QPr6nxGyeX6MmVNfp5Yol+mKnMKg+XZC0zlVnn0ZKsZQay
t/BI6WSjmuzyUEkWMnOZlV4qyWJmFL3cYyXZ5cwafTuspN98To0eHlHSDz63
Ri/7l/R7z67Rv8NL+tdqpFo5oKSf+3XNu3qmxP/6zr/syTt1LthjMCtcXJJ/
X2N8Mo7f5twcPit4OvhTeH6zgZ4d/gxeAB6t54c/hxeEP9ATwV/AC8Ef6qHg
L+GF4VF6ePgTuBf+GJ4Z/gpeFP5ITwKPgReBH9HT92SNTQq/C0/D+MdwgV/V
88BvwbO7dlxjPemZ/gt+tp3+j/0h+3X277o6/SFrjRqulqtps8BPuGZ7ska6
4cdcQz1Zs5PDj+v5e7JGpnDtuOZ7smanatKjtVdrv+nf8JNmjp6ssSmbaKba
+QY8K/wOPDX8EdwDv9lOf9F+of2w1+HJSzzFnE0yilnFjPNZTcYx65hJvqip
CaM6+dpaYd5+sZOfnYt67Oc7+fr9Go/9QidPm8cfcM70pCaNy897SE/ekxoy
UZMaZdYzz1u7rDFmLzOetccaYbYyk1k7nHNmLzOXc9GMZFYyk32l/zNz8Tt+
CM/X6Qfae3ONulb1UHop+61zwW+ZseAP4Hmb9HTs7ejJZoYfNaP1pAZP1iTT
mG3MGO/V9C/sR1ijrFVmOLOcGe/Lmoxn1jPTjbF2wj/1pIZP0qQnb2/entJM
TXr29u7t2c/YpCdvb96e/gxNMpJZyYz0Rk2mMFtYc56sqTl6cWuMtcgMZZYy
Q71Vk6HMUmaot2v6I2YxNVQtNbOYXayZz9RkErOJNfXpmkxgNrDmPltTY80C
1khr7/01eer8kn6bNddsbw20Fluz7b1Zc63l9vzsNVxUkgftYdo7uKSkt2mP
017GpSW9T/uvZls1Qq0wc5m91ITn/Lx2+kn2m+zP2rOz32H/w/6h/UT7If5M
f7aaYRZUE9QSf2d7hdZ4v4v3mC8vKPksNW1MTzRRrTNzmj3tX9pfMkOaJb3n
hZqaOriTf6y15o+hnfyn91Rzzu/kEbXIGjukk/+svWZcs64Z+p2aDG2WNnO/
C78CT8JnvgnP1mTPxr0b93Smb5LJzeZm8lE1mmcWsuarhWqSWUdNUKvUOLOQ
GqD2qVFmHTVE7TLPDezkLbODmuJepplErbG/ZN4xk5hNzCjuTaipZhczkdnI
OfJ8TSYY0MmDZgU9d/9O/tOLq1HuXerJ1S4194JOnlKLx+6x9iTzqF1mHvdu
9XhmIWuOtXtUSS2yx2mWPrqk92mNtdaPKam99pwnhBcv6UXbo50IXqKkd2t/
2H6r/Vn7zfZ0+3C8WEmvV4363bXdG+1Sw36DJ+6Ntqlxv1r7eqN9vjO17veS
d2kPeWJ4yZLeshr5Czxhb7RTTVIL/yjRKjVVLfyzRGvVALX0txJtsAc+CbxU
6fTG4cngZUp6B4tz/T9qE5//aTs95/HU1pJetOfcT3G/xGv1yH+rVb3xzmrs
X2pZb7RXjf3TWtkb7VWj/1Bre6Pd9uwnhZcu6eXb855ArS7phdvDsjexU0lv
y562e7kLlfS67XmPr5aX9MLVWL3EryXaa83WC/xSUsutqWr7zyW11j0Ne9/t
kr0Oe+r2avuV9Nrdg7G3uVHp7M3U9M43L+k92BNyL2S7kl6RPT178zuU9Prs
0bl3sn1J7849E/dCNizZS7HnYq9445JejB7c7LBCiTe3h+FeyrYlvQ17JO6V
bFPSO7EHY+93k5LejHsu7g1tULIXY4/EXvNmJb0TPcCP1sreeAM90s9wn954
Jz2B2eefEq+gJ9Ar/VXiFdRIvdTfJdo5ZW/2z9wDXKKJZ/qJ4wl646XU0O/V
+t5oqz0qe8OblvSu1OQfrM290Wr3XLrh5Uv2YuxZTQ4vW9LLcg9jCni5kr0N
94zsHa9fspfkfr95xr/RaPnsm6xN16jzZcpWvJUeTC82VSteTA+ll+puxYvp
wfRiU7Si9Xo0vdqkrXgVNVvtnrwV76gn0BtM1oqW6yn1lss32Qtyj8d6MQnj
D3XH8+h9VmF8tu7sOfl952rFe+hZfB7rNHle9vjt9a/cZG/KPR2//wSt+G89
t957wla06Kue5LuZW/GCk3TqyWyteO/JO+9zjla8T3fnfc/aSv2brFM/ZmlF
Sybt1JdpWvGeY/c89VateFM9sd54olbyox7P+tqnlSygRqqVE7fi/dRktXlO
eHR3PNdY79WKl9XzWn9XarJ3ZQ/T99806WXa47Re1Sa9TvcArR/ztrLezRTW
x/+1Ug/MFNbX+Vqph2YK6+9/W6kHZgbn/zyteGUzgPO3t5V6amawfs3fynow
U1jflm6yV+cenPVn2SZ7le7xWf+XabLX556e9WyBVtaPPQbr5VJN9u7c47O+
llbquZnG+tjTih6YedSPuVvxsnp61++aTeqTe0zuNa3dpB64B+Ve1GpN1od7
wO4Fr9hkr9Q9Uev/qk32ht0zde90wVbWvzXeWr9Wk/rkHo97PX2b1Bf3bNy7
Wa7J3qV7tOrjGk3qp3uK7i2u0HT2XnuiX6s3qbfuCbs33GpSD93Tdm/bPWKf
3yol485h57Jzyt6FHtj381OJNzZDOb+/KFnPemKfz48lXlnP43r6ocQL6cHt
FT1Z4s31HHqh60q8iBnO9fBN6czvJtno65Lspcc2G91R4r3NaGa7z0vqhZ5T
L3ZtiRd1D8z5ukbJ3pge0KxwfYk3NPOZLT4rqS96VNfXeyXrQ49mtrm3xLuZ
aex9PV2SdcxMeruPSuqJmc1e4+MlWU6Pb3a7s8T7m8nMUveXZDU9qlnthhLv
asaz1/ZESfYzE5hd7irJCmYcs9d9JdnHvxdw7jiH3P83w5hNPi6pj3pUs87d
Jd5Vj2o2u6fEu5qhzDqfltRPM6z15suSeuweqet/zZK9U/+GwfXSlMxnPZf1
vZbO3n9NvV2tZD24p+j6XKlkvpq57DU+VZLF7On4tzX2JO31+DcVrteVS+aj
GcpsdWVJtlLvFijxSPofv7Pffb2Sv4Vwv8K/h1Cj1Wp7BNbbr0rqo3ukroe+
JevJnoPZ7pMSvXDP2PXZKlm/9rz9ewz/vsJeuHv21v+1Svby3fO1/q1eog/2
MP1bOXvk9jbd03d9rlqyHs3gZvcHSrK5Gc4seFVJtjPjmQWvLsl+YzMdfE1J
1vs/03tz9g==
              "]], 
             Polygon3DBox[CompressedData["
1:eJwV12W4FuUWBuCP7lKkQ0o6LcBAQbq7a9O1aaS7uzukG6UbD90g3d2pdMO5
58f6se7rWfPOfDPzzt5pwlpXCI8YCoWOqygqafFQ6GW2UOgLdTNeKJS8YCiU
hn3Up1QPWTqWmD3Xf66usyTsV5VfXylrKBSbVfzVceT+ZXHVRfa5TAGVV19O
LiYrL5dI7hn7TF1jSWXSsk/6VOoRS89+Vt/ry5iNwcqZTSL3giVUN1gymeTs
tT6xus1Ssl9UPn0Fs7FYBbPJ5F6xROoWSyHzsFgotF5/Wm42OyeXj+dhv7HI
rCSbyZ6wCOooS6T/Tf2kryEXj1WRm8WesojqH5ZYX1lV1DeQy8jC5eqy+qwt
+471YPucSwFWh6Vh1VknuX5sHKvBZrN6LIy1Y9+zniw/+5oVYVFYKdaANWId
WX7Wh5VhxVllloI1YHlZblaQRWIlWCVWgYWxr1grVoGVZrXZl6wJK89KsZos
NWvMyrGSrDpLxRqxsqwEq8pSsobsS/fjA0uhHrC0we+kyuvry2VgLeVSy71n
ydV9lkYmPruvj6HOsLgsIXusj6MusM9YVhYzeyiUmb1huVgWFoNlYq9ZTpaZ
RWcZ2SuWg41TO/THncsMdtO5ZJKLJvcVf8myy0xQu/Qn5Wax23JFgneEFWYJ
WU1WlBVkRdkXrBabyHazU+wPdoeVZEVYWZaU1WNj2XZ2jE1nN1gJVpiVZklY
XZbR+UV1fhn4C5ZNJgOLzNKxZyxLcB7qB30Vs3FYJbM55OLIZePv2dcyuVg8
loN9ZN+ySepY8O6aXc6em80mF0suC3/Lcsv8qL7Vl5CLxsrI5ZSLK5edf2Df
yHzForD07DnLyiKys8G9MLuLvTObncWWy8rfsTxy49VO/Qm5meyWXClWlJVn
yVh9VpoVYxVZchbGirFCrDhLxGqzaNa4FFw/289CMlHYheC62F72US4yOx88
U2wP+8Cis8vBdbEDLILZqOxicL5sH/skF4NdCX5PdpBFlPucPWKx1XmWgKVg
b/RJ1B2WiqVkb/VJ1V2WOtiD1Hf6Uo4XnZW1RgK5ByymOsviBfdbfaMvJheV
lZbryPqysaw6+4PFM3uPRQ/2RRZHJj2L5LdPy56yTGyyOh58E8yuYC/MFg/2
RVaSJWZ1WDqzEc2m4U9YZpk/VASWgF1lGfWx5G7pIwfvHIvOYrKb+kjBs89i
sLjsrj5a8N6w2CwVe6dPpu6xL1kcdkcfNXg3WSz2GXuoj6XOsfgsNrutjxI8
Rywm+1311493HTXZHNdx3f48k21lA9lWVl+uAWvP8rJebACbzVayrmw7G8jm
sFWsG9vBBrG5bDXrznayi9YYxVawTmw5Gyw3j61hPdguVoNVY01ZNtaeTWfX
g/vD/mZR9Q8c7092hE1mR+XuseXsEJvIDrMZsjeC/YH9j0XTT1PXgnvGtrEo
+gtmR7LlrCNbZvY8G8GWsQ5sKesdvJtsHmvJVrOjcq3YcFaBDWZ95SayBSyc
rWX9gj2GLWSt2Tr2j9lwNoJVZEPZMdaajWSV2DB2gnVn01gYm8yOs25sKqvP
prBewf7O5rIWbBV7I3cgeH7YWvaQnWa92EzWiE1nJ1kPNp01YFPZKdaTzWAN
2TT2mu0P3lO2hj1gb9nB4DvG1rFH7BXbF7zjbDW7zxo6v8asE/uB9WWNWBP2
O/uR9WONWVPWmf3E+rP/HG9zsI+w+ewi+5dtCp55No9dYE/YluBbyRawS+wp
28ousoXsMnvENgTfWTaHnWX32Qp2mE1iR9hjtjHYb9hcdp49Y9vYJbaIXWHP
2d/sMlvMrrLDrC7ryQqxrqxQ8A1h1VhcVpkdkCvLwlke1pS9Y4eCvyHYevaY
vWR72W22it1lL9gedoutZPfYe3aYPWQb2L9sinVPsBvsT/aSfZA7wh6xjew/
9omdCr5ZbDt7wz6yo+wx28SesP2sDGvFcrNmrHDw9y2rxeKzqmwqO8lusr/Y
K1aTVWfNWHbWgXVgfdgYVo3NYoesUYf1YAVZZ9Y/2KPZItaGrWfNWAvWjf3C
BrEmrBnrwn5mA1hT1px1ZQXYQFY1+FuWNWKZWRtWhVViDVkm1po1Z21ZH1aU
jWTtWBc2hJVlE1lr1okNZKXYONYm2HvZIFaajWdtWWc2mJVhE1gL1o71ZcXY
KFaNVWGNWRbWll3zu8xgW9gAtoVdYdPYJtaPbWJdzA5kE1ltNo91ZgPYBFaL
zWVhrCHrwPKx3qwrG8QmsTpsPqvDarGWLBf7nd2w7iy2jQ1i21htuZqsBcvJ
OrH2rCsbysqxSSycdWQDWEk2ll11vOlsM+vPNrNucoPZZFaXLWDd2RA2hdVj
C9kds0vZATaeHWQt5dqzfqw4G81asQ6sPyvBxrDRbC3bzUax02wMW8f2sNHs
DDtjjaFsMWvLFrNzbDhbytqzJWyk2dVsJxvBTrJRbA3bxUayU+yI2ZZsGCvP
hrAhcvPZWtaT7WZn5YaxJawdW8RCvvGn2Qu2g71mw8wuZOtZb7aXDWUL2DrW
i+1hBx2vNuvOfmVdWC25Gqw5y8E6skjWOMdes93sPespN5bNYc3ZStaDjWGz
WTP2F7ttjSVsPxvHDrBbbDHbx8ayfewmW8T2sjFsP7vMprKNrC/bwKpboypr
wrKydmwEW8V2sOHsBIvgnM+wl2wne8uGy61k29kwdpzdtcYydpBNYIfYJTaF
bWB92EbWJ/h/iM1nrdga9n/b2N7n
              
              "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}, {{
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwt0csxgwEQAOA/gghCwhhjjJnEnQkVhAoiFUQKINzcUEGoIFQQKggVoIJ4
v1/xfvsyHHa/3dPuzqYKs7mZUBAECyIUF+wZCYIEh5niOMc4yQnmOMUCpznP
OS5ziatc4TrXuMkNbnOLe9zlAfdZ532jN7/OQz7wiI885hNP+MxTvvCMrzzn
Gy/4zkt+8IqfvOYXb/jNW/7wLh78HTyqbvT2qLHGHe6wyiorrLDMMksscZGL
LLLIPPPMMssMM0wzzSSTbIwekro5yC4OMMZ+drKPHexlOxOMspttjDHCDrYy
yhZG2MwWhhlm0/9/fwEKWkQa
            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0TssHXAUB+D/9SjXVVybWBhFgo6NhVEs2GxYJR6jWGoUC6N0qVEsxPvN
KBZExCtyiYhH09SzvW5Vv5sOJ1/OdH7nnPKO7pauSAihT+3FQ4hoOqtCiLOf
5RziJ35lPSfYzGW2c5u9POEA7zjCFMcYqw5hiqXcZCV3WctzNvKe08UhPHCG
j5zlE+f4zHm+cIG/uMjfXGIynYevXGGKq/zDNb5xnX+5wXduMmSE0Gr+T30D
E/zMHVZwgyWcZJTfmLTXMG/4hUfs4Rbb0rnYxHHWcZQ1HGQZ+1jEH+5dyO8s
4C0/8pr5vGKMl8zjBaNMMJdnzOEpP/CY2TxkFg+YyX1mRP7/9x9zAk9p
            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0VkqBmAUBuDPb57HBSD3hiwAWQCyAOTalBt3yDz+ZAHGJMmUJAllAcgC
kAWY5+mRi9PTeW9OvaegqbWuJSaE0GUWckOIiYRwUhxCNi9YwBuW8pGVjCsJ
oZZ5bGQR21nOHlZzivWcYzM32clj9vGMM7ziIu/+8rwQ7tnPBw7wkYN84hCf
OcwXjvCVo3zjGN85zg9O8JOT/GKU35ziD6cZYkPYcv/WPs/Lv5yn7OURO7jB
Js6yjlFWsZtlbGMhG5jDGkZYwXu9lfCa+TxnFg/1nckDZnCf6dxjGneZyh2m
cJvJ3GQS15nINSZwlfFcYRyXGcslRiL///0FKudIyg==
            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0UkoLXAUwOH/dXnmhwU75a6lsNWrZy2FMs8sZSrpeYYuSTLFWoq1FGsp
1lKspVhLmWfv+WRx+jq7X+fEuvpr+iIhhBEzlBtCJBpCfkkIOSxijL9YwkqW
s5XV7GUnxznIRU5yjSvc4gb3uMMjHvCMJ7ziBT94w9q8EG5ZxzvW854NfGAj
H9nEJzbzmS18+eriK9v4xna+s4Mf7OQ/dvE/uxkSQ0gvDeHa/qbjnJc85in3
echt7nKdm1zmKuOc5wBH2cEeVn318TcrWMwyFrCQ2Vx27ywu8ScXmMk5ZnCW
6ZxhGqeZyimmMM5kTvAHx5jEv0zkH0Y5zITo938/AQbkRic=
            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0TkoB3AUB/Af/u67hJGS+yYz5UiSmyQ5MjsWZaNkpmSmZKZkpmSmZKZk
dt/XR4bXp9d3eL338idneqejQggLqiUnhKhICPO1IWRyhfncYA132MQD9vCE
E7zgHG+4xGeuMa4uhC1mc4+FPGIDz9jKKw7y7i/PDeGeRXxgMR9ZwieW8pll
fGE5X1nBN1bynVX8YDU/WcMv1vKbdfxhPUNsCFPm3+r7eclmnv7lPGQBd5nF
TUa4ykd7LvKaszznOI/ZzX02cpvVXGcel5nBCfdO5xjTOMpUjjCFw0zmEJM4
wET2MYE9jGcX49jJWHYwwnbGsI3Rkf///gK+uj+I
            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0UkuA3AUB+B/Vc1VNkJjaEVExFDDVnAAMezFsKcsLQQHEBxAcADBASSc
AAcQHEDM81BfY/Hy5SUveb+8l57NTsxHQghLqqYuhEgshLO+EKp5xTTv2MMc
h5noD2GcTZxhNxc5yDWOcotT3GOWR1zhKTd4wR3e8IAPfLP/ke984gef+ckX
fvGV33zjD9/5y498Pn4yJM0ywm8W8IdR/rKQOcYYikI4tv9ev89rbvOc6zzh
Mg85x11OcpMjXOUAF9jJaTZwjHEO5XO6W4a3TPGSVeyVN8EMK9nFODtYwXaW
s41lbGUpW1jCZhYzxSI2MsZ6FjLJKGtZEPv/7x8dyEPe
            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0SssBXAUB+D/dbneryJQaCLBnUgxEcFEBJM8itEoJlJMpJhIMZFi3lyv
iRSPmXm7rvd3J5x9O9tvO2fnVHX3t/VFQggj6qo8hEgshOq6EEpZzyo2s5Yd
bGQvWznMLk5wkDMc4wKnuMI5bnCJZ1zjNRN85wVz4iE8pnMVITxxk8/c4gu3
+codvnGXSe7xnftM8YAfTPCTh/ziEb95zB+e8JenDNkhlJn/oI/xnG/2OuAl
V9M5LnKds1zmJOc5ymkOcJydHGILe9jAdtawiZWMs4RR84sZYRF/3b+Q3yzg
J/OZYh6TzOUrc/jMbD4yxntm8Y6ZvGWUN8yI/f/3D1nnUyk=
            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0UkuA2AUAOC/ptZY3RN6AmxY4gSGC1AHUJZ2nABL88wSOxGhFRERoRV7
nMA8j59YvHx5i5c3JfvS3f2REMKQ2KoJIRINYaQ5hATHmeQCm7jJdmbZxTxT
vOYg7zjCSItaJrjAJDfZxCzbmWcXr5niHSdqQ7jnJB84xUdO84kzfOYsXzjH
V87z7W9OvnORH1ziJ5f5xRV+c5U/XGOIhZDW/1bewyt2MMdWZtjADdZxnnGO
8ce+w7zhAC/ZyzN2co9tXGfj37ys5yireeHecZ6zijlW8pQVPGE5j1nGI5by
kDEeMMp9ljDDYu6yiDss5DYLov///QWkSk+H
            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0TkoBnAYB+C/+3OzyeDYZGIiE5tMmGTCJPd9TWyOxJfkSkhKJjaZ2Iys
JjaZ3Pf1yPD29Nav3vq9hS3d9V0xIYRRM5UXQkwkhIuyELJ5w0K+s5Qp5SFU
MZd1LGYzK9jLGk6wkVG2cYtjPOA0T7jKc+7xike8+8vnh3DPdj6wg4/s5BO7
+MxuvrCHr+zlG/v4zn5+cICfHOQXh/jNYf5whCE5hFP3b+2HvOQuz7jMY05y
/y/PTbZyng0cZzV7WM4mFrGWOaxkhCV81WMBr5nFHX1ncpsZ3GI6N5jGdaZy
jSlcYTKXGOEik7jAREaZwDnGc5ZxnGFs5P+/v/ajSec=
            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0VkuA3AQB+B/1dZaGxfQGxBP9n17s7yJSJWIiJQiEm8aF9C4gMYFNC5A
XIC4AHEB+759jYfJl3ma38wk02tTmUgIYUfNNIcQiYXQ1h5CgoNMcpqtXGA/
NznJPc7zgFkeMccT5nnOAq9Y5C3P+MhLRjtCuGET79mZDOGBXXxkN5/Yw2f2
8oV9fGU/3zjA91JefnCInxzmF0f4zVH+cIy/HGeI29H8O32C14zwgvdynvKG
x7zkIc+4zyJ3WeA680wxxwlm2cd5tnCSzaXcbOS2ezdwi/XcYB3XWcsMa7jK
OFcY4zKrucQqLrKSaVYwxXLOMcpZlsX+//sHhNBFRg==
            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0TkoB3AUB/Cfmz/+f/eVwbE5QpJcIUnJgFEGjJJjZGI3sMrAKgOrDKwy
sMrAKoP7vj7/DK9Pb/j2eu9VTs2NziaEEBZVbVUICZEQVttDyOUmK7nLJh6y
l6cc4SUnecsFfnGFWR0hrLOc26zjPjt5zCGec5zXnOF9PFcdwgOz+cgonxjj
M3P4wly+Mo9vzOc7C/jBQn6yiF8s5jdL+MNS/rKMITOEJfPv9NO84hjPOMgj
tnOPNdyK57jGCJf5Ye953nCCFxzmCXt4wEbusIIbzOGAe8fYzyj7mM1eZrGb
mexihB3MYBvT2co0tjCVzUxhE5PZwCTWMzHy/98/ioVApQ==
            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0TssJAAQBuDxWJZd7yNKgp6IioKI/rjocdEeIgodET256InoieiJ6Ima
W+64h4Zb6zyX76KYfJnqn8zfPDYx9KUgImbNc0tEQSriojuihjk2M9ET0cF6
9rGNg+ziKAc4xWHOc5zLnOEaF7nFFe5xg0fc4RkPeMOT1oi/PGWW33jLDHM8
4x3P+Y/fec8ffPh/Nx95ySf+5DN/8YW/mecfvvKKkY44ln9t32eG2zzkOnf5
lZtc4CqnucTPnOMnTrKfI+zkR7awl3VsZxGbmPXXajbKr2IDK/mBFaxlmtVM
sZLlTLOM5UwyyVKWsITFTLCQxQwWMa/XwtR7v2+4EUv0
            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0bkrB3AYB+Cv+/q5domBycAfQOwSZgmzHKOS2CV2iV3um8TuTJLcSVKS
+74eGd6e3uHT+/a+uQ3N1U1RIYQ2tZ4XQlQkhJLiEDJZwVzWsohNLGMHq9jD
eg6wlSPs4jL7uMEhHnOcN1zlN7eZVhLCGbN595fPD+Geo3zgGB85zidO8JmT
fOEUXznNN87wnbP84Bw/Oc8vLvCbi/zhEkNqCAXm3+qzeMoIt/hpzxVec4yH
HOQae//y7OQwW9jPOnazku0sZSMLWcMcljODV+6dzkum8YKpPGeEZ0zhCZN5
xCQeMJH7TOAe47nLOO4wltuM4SajI////QUE41ZE
            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0TssHXAUB+D/Vdx6XHQQqzvI7cggNmoQKxKxIhGbxyCNyfV+lKSdbHKJ
IiJyiVdM7SBWhqYrg1hpvd9fYjj5cpbfSX4n3t7d1BUJIfSbuUQIkVgIs9Uh
fOIy49xlBQ9Zy79s5DnbeMteRmtCGGQJfzDBeVZxg/X8zRYes5On/MpLDnwO
4R+T/M9BXnGI1xzmDUd4y1HecYz3HOcDJ/jIST5xis/8xhdO85UzDAVy3L+w
9/GEHTxiM3+xjmlWMsUyfmcxk8xiD6/10MozNvAPv/CA5dxmKX+yiPv6LuQe
C7jDGLeYz03mMc1crjOHa/zIVUa5wmwuMYuLzOQCPzDFjNj7f98AvLlPpQ==

            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0VkqxQEUB+Bjnv+uDYhHHsQGuDYg80xYgEuSbjIlSUrXBsQGxAbEBsQG
xA7M8/TJw+nrvPxO/U79VKZ7Oi8isibTEJGXRNy2RdQw0hH1TLGFdWxnM7uY
5iQ7OcsJrnGGu1zlAXM85j7PeMRLnvKGF7z7y2mMuGcXH9jNR/bwib18Zh9f
2M9XDvCNg3znED84zE+O8Iuj/OYYfzjOqI64cv/Wfs5rnvCChzzlHo+4w30u
M8dprv7lcIYdnGArO9nENGvZzIR1/NZvitv6ruYWE26yihus5DoruMZyrrCM
SyzlIkuYZTEXWMR5FnKOBZxlfvL/31/wI0oF
            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0SksBnAYB+C/83N/JNN87vtI6sfMMDPMXBNQTHEk00imkUwjmUYyjWQa
yTSSae77ekx497Tf7937xiZm+qYTQggLJl4dQkI0hI7mEPI4zBin2MgFNnOF
vdzgOHc4xwMu8YRrvOAWb7jHNx4xvSWEMxbwipW8Y6wmhHsW8YHFfGQJn1jK
Z5bxheV8ZQXf/nL4zip+sJqfrOEXa/nNOv6wniE3hCb9t395vGQ+TxnhIV/s
vctrbvKcqzzmIvc5y22OcZ09XGac82zgJAs5yFyOuneUI8zhELM5wCz2M5N9
zGAP09nNNHYxwk6msp0pbGMyW5nEFiZG///7C1CbRmM=
            "]]}, {
           GrayLevel[0.2], 
           
           Line3DBox[{11538, 4337, 11537, 18842, 11777, 11539, 18843, 11778, 
            11540, 18844, 11779, 11541, 18845, 11780, 11542, 18846, 11781, 
            11543, 18847, 11782, 11544, 18848, 11783, 11545, 18849, 11784, 
            11546, 18850, 11785, 11547, 18851, 11786, 11548, 18852, 11787, 
            11549, 18853, 11788, 11550, 18854, 11789, 11551, 18855, 11790, 
            11552}], 
           
           Line3DBox[{11554, 17057, 18737, 11553, 4353, 11555, 18856, 11791, 
            11556, 18857, 11792, 11557, 18858, 11793, 11558, 18859, 11794, 
            11559, 18860, 11795, 11560, 18861, 11796, 11561, 18862, 11797, 
            11562, 18863, 11798, 11563, 18864, 11799, 11564, 18865, 11800, 
            11565, 18866, 11801, 11566, 18867, 11802, 11567, 18868, 11803, 
            11568}], 
           
           Line3DBox[{11570, 17058, 18738, 11569, 17059, 18739, 11571, 4369, 
            11572, 18869, 11804, 11573, 18870, 11805, 11574, 18871, 11806, 
            11575, 18872, 11807, 11576, 18873, 11808, 11577, 18874, 11809, 
            11578, 18875, 11810, 11579, 18876, 11811, 11580, 18877, 11812, 
            11581, 18878, 11813, 11582, 18879, 11814, 11583, 18880, 11815, 
            11584}], 
           
           Line3DBox[{11586, 17060, 18740, 11585, 17061, 18741, 11587, 17062, 
            18742, 11588, 4385, 11589, 18881, 11816, 11590, 18882, 11817, 
            11591, 18883, 11818, 11592, 18884, 11819, 11593, 18885, 11820, 
            11594, 18886, 11821, 11595, 18887, 11822, 11596, 18888, 11823, 
            11597, 18889, 11824, 11598, 18890, 11825, 11599, 18891, 11826, 
            11600}], 
           
           Line3DBox[{11602, 17063, 18743, 11601, 17064, 18744, 11603, 17065, 
            18745, 11604, 17066, 18746, 11605, 4401, 11606, 18892, 11827, 
            11607, 18893, 11828, 11608, 18894, 11829, 11609, 18895, 11830, 
            11610, 18896, 11831, 11611, 18897, 11832, 11612, 18898, 11833, 
            11613, 18899, 11834, 11614, 18900, 11835, 11615, 18901, 11836, 
            11616}], 
           
           Line3DBox[{11618, 17067, 18747, 11617, 17068, 18748, 11619, 17069, 
            18749, 11620, 17070, 18750, 11621, 17071, 18751, 11622, 4417, 
            11623, 18902, 11837, 11624, 18903, 11838, 11625, 18904, 11839, 
            11626, 18905, 11840, 11627, 18906, 11841, 11628, 18907, 11842, 
            11629, 18908, 11843, 11630, 18909, 11844, 11631, 18910, 11845, 
            11632}], 
           
           Line3DBox[{11634, 17072, 18752, 11633, 17073, 18753, 11635, 17074, 
            18754, 11636, 17075, 18755, 11637, 17076, 18756, 11638, 17077, 
            18757, 11639, 4433, 11640, 18911, 11846, 11641, 18912, 11847, 
            11642, 18913, 11848, 11643, 18914, 11849, 11644, 18915, 11850, 
            11645, 18916, 11851, 11646, 18917, 11852, 11647, 18918, 11853, 
            11648}], 
           
           Line3DBox[{11650, 17078, 18758, 11649, 17079, 18759, 11651, 17080, 
            18760, 11652, 17081, 18761, 11653, 17082, 18762, 11654, 17083, 
            18763, 11655, 17084, 18764, 11656, 4449, 11657, 18919, 11854, 
            11658, 18920, 11855, 11659, 18921, 11856, 11660, 18922, 11857, 
            11661, 18923, 11858, 11662, 18924, 11859, 11663, 18925, 11860, 
            11664}], 
           
           Line3DBox[{11666, 17085, 18765, 11665, 17086, 18766, 11667, 17087, 
            18767, 11668, 17088, 18768, 11669, 17089, 18769, 11670, 17090, 
            18770, 11671, 17091, 18771, 11672, 17092, 18772, 11673, 4465, 
            11674, 18926, 11861, 11675, 18927, 11862, 11676, 18928, 11863, 
            11677, 18929, 11864, 11678, 18930, 11865, 11679, 18931, 11866, 
            11680}], 
           
           Line3DBox[{11682, 17093, 18773, 11681, 17094, 18774, 11683, 17095, 
            18775, 11684, 17096, 18776, 11685, 17097, 18777, 11686, 17098, 
            18778, 11687, 17099, 18779, 11688, 17100, 18780, 11689, 17101, 
            18781, 11690, 4481, 11691, 18932, 11867, 11692, 18933, 11868, 
            11693, 18934, 11869, 11694, 18935, 11870, 11695, 18936, 11871, 
            11696}], 
           
           Line3DBox[{11698, 17102, 18782, 11697, 17103, 18783, 11699, 17104, 
            18784, 11700, 17105, 18785, 11701, 17106, 18786, 11702, 17107, 
            18787, 11703, 17108, 18788, 11704, 17109, 18789, 11705, 17110, 
            18790, 11706, 17111, 18791, 11707, 4497, 11708, 18937, 11872, 
            11709, 18938, 11873, 11710, 18939, 11874, 11711, 18940, 11875, 
            11712}], 
           
           Line3DBox[{11714, 17112, 18792, 11713, 17113, 18793, 11715, 17114, 
            18794, 11716, 17115, 18795, 11717, 17116, 18796, 11718, 17117, 
            18797, 11719, 17118, 18798, 11720, 17119, 18799, 11721, 17120, 
            18800, 11722, 17121, 18801, 11723, 17122, 18802, 11724, 4513, 
            11725, 18941, 11876, 11726, 18942, 11877, 11727, 18943, 11878, 
            11728}], 
           
           Line3DBox[{11730, 17123, 18803, 11729, 17124, 18804, 11731, 17125, 
            18805, 11732, 17126, 18806, 11733, 17127, 18807, 11734, 17128, 
            18808, 11735, 17129, 18809, 11736, 17130, 18810, 11737, 17131, 
            18811, 11738, 17132, 18812, 11739, 17133, 18813, 11740, 17134, 
            18814, 11741, 4529, 11742, 18944, 11879, 11743, 18945, 11880, 
            11744}], 
           
           Line3DBox[{11746, 17135, 18815, 11745, 17136, 18816, 11747, 17137, 
            18817, 11748, 17138, 18818, 11749, 17139, 18819, 11750, 17140, 
            18820, 11751, 17141, 18821, 11752, 17142, 18822, 11753, 17143, 
            18823, 11754, 17144, 18824, 11755, 17145, 18825, 11756, 17146, 
            18826, 11757, 17147, 18827, 11758, 4545, 11759, 18946, 11881, 
            11760}], 
           
           Line3DBox[{11762, 17148, 18828, 11761, 17149, 18829, 11763, 17150, 
            18830, 11764, 17151, 18831, 11765, 17152, 18832, 11766, 17153, 
            18833, 11767, 17154, 18834, 11768, 17155, 18835, 11769, 17156, 
            18836, 11770, 17157, 18837, 11771, 17158, 18838, 11772, 17159, 
            18839, 11773, 17160, 18840, 11774, 17161, 18841, 11775, 4561, 
            11776}], 
           
           Line3DBox[{11883, 4802, 11882, 19052, 12122, 11884, 19053, 12123, 
            11885, 19054, 12124, 11886, 19055, 12125, 11887, 19056, 12126, 
            11888, 19057, 12127, 11889, 19058, 12128, 11890, 19059, 12129, 
            11891, 19060, 12130, 11892, 19061, 12131, 11893, 19062, 12132, 
            11894, 19063, 12133, 11895, 19064, 12134, 11896, 19065, 12135, 
            11897}], 
           
           Line3DBox[{11899, 17162, 18947, 11898, 4818, 11900, 19066, 12136, 
            11901, 19067, 12137, 11902, 19068, 12138, 11903, 19069, 12139, 
            11904, 19070, 12140, 11905, 19071, 12141, 11906, 19072, 12142, 
            11907, 19073, 12143, 11908, 19074, 12144, 11909, 19075, 12145, 
            11910, 19076, 12146, 11911, 19077, 12147, 11912, 19078, 12148, 
            11913}], 
           
           Line3DBox[{11915, 17163, 18948, 11914, 17164, 18949, 11916, 4834, 
            11917, 19079, 12149, 11918, 19080, 12150, 11919, 19081, 12151, 
            11920, 19082, 12152, 11921, 19083, 12153, 11922, 19084, 12154, 
            11923, 19085, 12155, 11924, 19086, 12156, 11925, 19087, 12157, 
            11926, 19088, 12158, 11927, 19089, 12159, 11928, 19090, 12160, 
            11929}], 
           
           Line3DBox[{11931, 17165, 18950, 11930, 17166, 18951, 11932, 17167, 
            18952, 11933, 4850, 11934, 19091, 12161, 11935, 19092, 12162, 
            11936, 19093, 12163, 11937, 19094, 12164, 11938, 19095, 12165, 
            11939, 19096, 12166, 11940, 19097, 12167, 11941, 19098, 12168, 
            11942, 19099, 12169, 11943, 19100, 12170, 11944, 19101, 12171, 
            11945}], 
           
           Line3DBox[{11947, 17168, 18953, 11946, 17169, 18954, 11948, 17170, 
            18955, 11949, 17171, 18956, 11950, 4866, 11951, 19102, 12172, 
            11952, 19103, 12173, 11953, 19104, 12174, 11954, 19105, 12175, 
            11955, 19106, 12176, 11956, 19107, 12177, 11957, 19108, 12178, 
            11958, 19109, 12179, 11959, 19110, 12180, 11960, 19111, 12181, 
            11961}], 
           
           Line3DBox[{11963, 17172, 18957, 11962, 17173, 18958, 11964, 17174, 
            18959, 11965, 17175, 18960, 11966, 17176, 18961, 11967, 4882, 
            11968, 19112, 12182, 11969, 19113, 12183, 11970, 19114, 12184, 
            11971, 19115, 12185, 11972, 19116, 12186, 11973, 19117, 12187, 
            11974, 19118, 12188, 11975, 19119, 12189, 11976, 19120, 12190, 
            11977}], 
           
           Line3DBox[{11979, 17177, 18962, 11978, 17178, 18963, 11980, 17179, 
            18964, 11981, 17180, 18965, 11982, 17181, 18966, 11983, 17182, 
            18967, 11984, 4898, 11985, 19121, 12191, 11986, 19122, 12192, 
            11987, 19123, 12193, 11988, 19124, 12194, 11989, 19125, 12195, 
            11990, 19126, 12196, 11991, 19127, 12197, 11992, 19128, 12198, 
            11993}], 
           
           Line3DBox[{11995, 17183, 18968, 11994, 17184, 18969, 11996, 17185, 
            18970, 11997, 17186, 18971, 11998, 17187, 18972, 11999, 17188, 
            18973, 12000, 17189, 18974, 12001, 4914, 12002, 19129, 12199, 
            12003, 19130, 12200, 12004, 19131, 12201, 12005, 19132, 12202, 
            12006, 19133, 12203, 12007, 19134, 12204, 12008, 19135, 12205, 
            12009}], 
           
           Line3DBox[{12011, 17190, 18975, 12010, 17191, 18976, 12012, 17192, 
            18977, 12013, 17193, 18978, 12014, 17194, 18979, 12015, 17195, 
            18980, 12016, 17196, 18981, 12017, 17197, 18982, 12018, 4930, 
            12019, 19136, 12206, 12020, 19137, 12207, 12021, 19138, 12208, 
            12022, 19139, 12209, 12023, 19140, 12210, 12024, 19141, 12211, 
            12025}], 
           
           Line3DBox[{12027, 17198, 18983, 12026, 17199, 18984, 12028, 17200, 
            18985, 12029, 17201, 18986, 12030, 17202, 18987, 12031, 17203, 
            18988, 12032, 17204, 18989, 12033, 17205, 18990, 12034, 17206, 
            18991, 12035, 4946, 12036, 19142, 12212, 12037, 19143, 12213, 
            12038, 19144, 12214, 12039, 19145, 12215, 12040, 19146, 12216, 
            12041}], 
           
           Line3DBox[{12043, 17207, 18992, 12042, 17208, 18993, 12044, 17209, 
            18994, 12045, 17210, 18995, 12046, 17211, 18996, 12047, 17212, 
            18997, 12048, 17213, 18998, 12049, 17214, 18999, 12050, 17215, 
            19000, 12051, 17216, 19001, 12052, 4962, 12053, 19147, 12217, 
            12054, 19148, 12218, 12055, 19149, 12219, 12056, 19150, 12220, 
            12057}], 
           
           Line3DBox[{12059, 17217, 19002, 12058, 17218, 19003, 12060, 17219, 
            19004, 12061, 17220, 19005, 12062, 17221, 19006, 12063, 17222, 
            19007, 12064, 17223, 19008, 12065, 17224, 19009, 12066, 17225, 
            19010, 12067, 17226, 19011, 12068, 17227, 19012, 12069, 4978, 
            12070, 19151, 12221, 12071, 19152, 12222, 12072, 19153, 12223, 
            12073}], 
           
           Line3DBox[{12075, 17228, 19013, 12074, 17229, 19014, 12076, 17230, 
            19015, 12077, 17231, 19016, 12078, 17232, 19017, 12079, 17233, 
            19018, 12080, 17234, 19019, 12081, 17235, 19020, 12082, 17236, 
            19021, 12083, 17237, 19022, 12084, 17238, 19023, 12085, 17239, 
            19024, 12086, 4994, 12087, 19154, 12224, 12088, 19155, 12225, 
            12089}], 
           
           Line3DBox[{12091, 17240, 19025, 12090, 17241, 19026, 12092, 17242, 
            19027, 12093, 17243, 19028, 12094, 17244, 19029, 12095, 17245, 
            19030, 12096, 17246, 19031, 12097, 17247, 19032, 12098, 17248, 
            19033, 12099, 17249, 19034, 12100, 17250, 19035, 12101, 17251, 
            19036, 12102, 17252, 19037, 12103, 5010, 12104, 19156, 12226, 
            12105}], 
           
           Line3DBox[{12107, 17253, 19038, 12106, 17254, 19039, 12108, 17255, 
            19040, 12109, 17256, 19041, 12110, 17257, 19042, 12111, 17258, 
            19043, 12112, 17259, 19044, 12113, 17260, 19045, 12114, 17261, 
            19046, 12115, 17262, 19047, 12116, 17263, 19048, 12117, 17264, 
            19049, 12118, 17265, 19050, 12119, 17266, 19051, 12120, 5026, 
            12121}], 
           
           Line3DBox[{12228, 5267, 12227, 19262, 12467, 12229, 19263, 12468, 
            12230, 19264, 12469, 12231, 19265, 12470, 12232, 19266, 12471, 
            12233, 19267, 12472, 12234, 19268, 12473, 12235, 19269, 12474, 
            12236, 19270, 12475, 12237, 19271, 12476, 12238, 19272, 12477, 
            12239, 19273, 12478, 12240, 19274, 12479, 12241, 19275, 12480, 
            12242}], 
           
           Line3DBox[{12244, 17267, 19157, 12243, 5283, 12245, 19276, 12481, 
            12246, 19277, 12482, 12247, 19278, 12483, 12248, 19279, 12484, 
            12249, 19280, 12485, 12250, 19281, 12486, 12251, 19282, 12487, 
            12252, 19283, 12488, 12253, 19284, 12489, 12254, 19285, 12490, 
            12255, 19286, 12491, 12256, 19287, 12492, 12257, 19288, 12493, 
            12258}], 
           
           Line3DBox[{12260, 17268, 19158, 12259, 17269, 19159, 12261, 5299, 
            12262, 19289, 12494, 12263, 19290, 12495, 12264, 19291, 12496, 
            12265, 19292, 12497, 12266, 19293, 12498, 12267, 19294, 12499, 
            12268, 19295, 12500, 12269, 19296, 12501, 12270, 19297, 12502, 
            12271, 19298, 12503, 12272, 19299, 12504, 12273, 19300, 12505, 
            12274}], 
           
           Line3DBox[{12276, 17270, 19160, 12275, 17271, 19161, 12277, 17272, 
            19162, 12278, 5315, 12279, 19301, 12506, 12280, 19302, 12507, 
            12281, 19303, 12508, 12282, 19304, 12509, 12283, 19305, 12510, 
            12284, 19306, 12511, 12285, 19307, 12512, 12286, 19308, 12513, 
            12287, 19309, 12514, 12288, 19310, 12515, 12289, 19311, 12516, 
            12290}], 
           
           Line3DBox[{12292, 17273, 19163, 12291, 17274, 19164, 12293, 17275, 
            19165, 12294, 17276, 19166, 12295, 5331, 12296, 19312, 12517, 
            12297, 19313, 12518, 12298, 19314, 12519, 12299, 19315, 12520, 
            12300, 19316, 12521, 12301, 19317, 12522, 12302, 19318, 12523, 
            12303, 19319, 12524, 12304, 19320, 12525, 12305, 19321, 12526, 
            12306}], 
           
           Line3DBox[{12308, 17277, 19167, 12307, 17278, 19168, 12309, 17279, 
            19169, 12310, 17280, 19170, 12311, 17281, 19171, 12312, 5347, 
            12313, 19322, 12527, 12314, 19323, 12528, 12315, 19324, 12529, 
            12316, 19325, 12530, 12317, 19326, 12531, 12318, 19327, 12532, 
            12319, 19328, 12533, 12320, 19329, 12534, 12321, 19330, 12535, 
            12322}], 
           
           Line3DBox[{12324, 17282, 19172, 12323, 17283, 19173, 12325, 17284, 
            19174, 12326, 17285, 19175, 12327, 17286, 19176, 12328, 17287, 
            19177, 12329, 5363, 12330, 19331, 12536, 12331, 19332, 12537, 
            12332, 19333, 12538, 12333, 19334, 12539, 12334, 19335, 12540, 
            12335, 19336, 12541, 12336, 19337, 12542, 12337, 19338, 12543, 
            12338}], 
           
           Line3DBox[{12340, 17288, 19178, 12339, 17289, 19179, 12341, 17290, 
            19180, 12342, 17291, 19181, 12343, 17292, 19182, 12344, 17293, 
            19183, 12345, 17294, 19184, 12346, 5379, 12347, 19339, 12544, 
            12348, 19340, 12545, 12349, 19341, 12546, 12350, 19342, 12547, 
            12351, 19343, 12548, 12352, 19344, 12549, 12353, 19345, 12550, 
            12354}], 
           
           Line3DBox[{12356, 17295, 19185, 12355, 17296, 19186, 12357, 17297, 
            19187, 12358, 17298, 19188, 12359, 17299, 19189, 12360, 17300, 
            19190, 12361, 17301, 19191, 12362, 17302, 19192, 12363, 5395, 
            12364, 19346, 12551, 12365, 19347, 12552, 12366, 19348, 12553, 
            12367, 19349, 12554, 12368, 19350, 12555, 12369, 19351, 12556, 
            12370}], 
           
           Line3DBox[{12372, 17303, 19193, 12371, 17304, 19194, 12373, 17305, 
            19195, 12374, 17306, 19196, 12375, 17307, 19197, 12376, 17308, 
            19198, 12377, 17309, 19199, 12378, 17310, 19200, 12379, 17311, 
            19201, 12380, 5411, 12381, 19352, 12557, 12382, 19353, 12558, 
            12383, 19354, 12559, 12384, 19355, 12560, 12385, 19356, 12561, 
            12386}], 
           
           Line3DBox[{12388, 17312, 19202, 12387, 17313, 19203, 12389, 17314, 
            19204, 12390, 17315, 19205, 12391, 17316, 19206, 12392, 17317, 
            19207, 12393, 17318, 19208, 12394, 17319, 19209, 12395, 17320, 
            19210, 12396, 17321, 19211, 12397, 5427, 12398, 19357, 12562, 
            12399, 19358, 12563, 12400, 19359, 12564, 12401, 19360, 12565, 
            12402}], 
           
           Line3DBox[{12404, 17322, 19212, 12403, 17323, 19213, 12405, 17324, 
            19214, 12406, 17325, 19215, 12407, 17326, 19216, 12408, 17327, 
            19217, 12409, 17328, 19218, 12410, 17329, 19219, 12411, 17330, 
            19220, 12412, 17331, 19221, 12413, 17332, 19222, 12414, 5443, 
            12415, 19361, 12566, 12416, 19362, 12567, 12417, 19363, 12568, 
            12418}], 
           
           Line3DBox[{12420, 17333, 19223, 12419, 17334, 19224, 12421, 17335, 
            19225, 12422, 17336, 19226, 12423, 17337, 19227, 12424, 17338, 
            19228, 12425, 17339, 19229, 12426, 17340, 19230, 12427, 17341, 
            19231, 12428, 17342, 19232, 12429, 17343, 19233, 12430, 17344, 
            19234, 12431, 5459, 12432, 19364, 12569, 12433, 19365, 12570, 
            12434}], 
           
           Line3DBox[{12436, 17345, 19235, 12435, 17346, 19236, 12437, 17347, 
            19237, 12438, 17348, 19238, 12439, 17349, 19239, 12440, 17350, 
            19240, 12441, 17351, 19241, 12442, 17352, 19242, 12443, 17353, 
            19243, 12444, 17354, 19244, 12445, 17355, 19245, 12446, 17356, 
            19246, 12447, 17357, 19247, 12448, 5475, 12449, 19366, 12571, 
            12450}], 
           
           Line3DBox[{12452, 17358, 19248, 12451, 17359, 19249, 12453, 17360, 
            19250, 12454, 17361, 19251, 12455, 17362, 19252, 12456, 17363, 
            19253, 12457, 17364, 19254, 12458, 17365, 19255, 12459, 17366, 
            19256, 12460, 17367, 19257, 12461, 17368, 19258, 12462, 17369, 
            19259, 12463, 17370, 19260, 12464, 17371, 19261, 12465, 5491, 
            12466}], 
           
           Line3DBox[{12573, 5732, 12572, 19472, 12812, 12574, 19473, 12813, 
            12575, 19474, 12814, 12576, 19475, 12815, 12577, 19476, 12816, 
            12578, 19477, 12817, 12579, 19478, 12818, 12580, 19479, 12819, 
            12581, 19480, 12820, 12582, 19481, 12821, 12583, 19482, 12822, 
            12584, 19483, 12823, 12585, 19484, 12824, 12586, 19485, 12825, 
            12587}], 
           
           Line3DBox[{12589, 17372, 19367, 12588, 5748, 12590, 19486, 12826, 
            12591, 19487, 12827, 12592, 19488, 12828, 12593, 19489, 12829, 
            12594, 19490, 12830, 12595, 19491, 12831, 12596, 19492, 12832, 
            12597, 19493, 12833, 12598, 19494, 12834, 12599, 19495, 12835, 
            12600, 19496, 12836, 12601, 19497, 12837, 12602, 19498, 12838, 
            12603}], 
           
           Line3DBox[{12605, 17373, 19368, 12604, 17374, 19369, 12606, 5764, 
            12607, 19499, 12839, 12608, 19500, 12840, 12609, 19501, 12841, 
            12610, 19502, 12842, 12611, 19503, 12843, 12612, 19504, 12844, 
            12613, 19505, 12845, 12614, 19506, 12846, 12615, 19507, 12847, 
            12616, 19508, 12848, 12617, 19509, 12849, 12618, 19510, 12850, 
            12619}], 
           
           Line3DBox[{12621, 17375, 19370, 12620, 17376, 19371, 12622, 17377, 
            19372, 12623, 5780, 12624, 19511, 12851, 12625, 19512, 12852, 
            12626, 19513, 12853, 12627, 19514, 12854, 12628, 19515, 12855, 
            12629, 19516, 12856, 12630, 19517, 12857, 12631, 19518, 12858, 
            12632, 19519, 12859, 12633, 19520, 12860, 12634, 19521, 12861, 
            12635}], 
           
           Line3DBox[{12637, 17378, 19373, 12636, 17379, 19374, 12638, 17380, 
            19375, 12639, 17381, 19376, 12640, 5796, 12641, 19522, 12862, 
            12642, 19523, 12863, 12643, 19524, 12864, 12644, 19525, 12865, 
            12645, 19526, 12866, 12646, 19527, 12867, 12647, 19528, 12868, 
            12648, 19529, 12869, 12649, 19530, 12870, 12650, 19531, 12871, 
            12651}], 
           
           Line3DBox[{12653, 17382, 19377, 12652, 17383, 19378, 12654, 17384, 
            19379, 12655, 17385, 19380, 12656, 17386, 19381, 12657, 5812, 
            12658, 19532, 12872, 12659, 19533, 12873, 12660, 19534, 12874, 
            12661, 19535, 12875, 12662, 19536, 12876, 12663, 19537, 12877, 
            12664, 19538, 12878, 12665, 19539, 12879, 12666, 19540, 12880, 
            12667}], 
           
           Line3DBox[{12669, 17387, 19382, 12668, 17388, 19383, 12670, 17389, 
            19384, 12671, 17390, 19385, 12672, 17391, 19386, 12673, 17392, 
            19387, 12674, 5828, 12675, 19541, 12881, 12676, 19542, 12882, 
            12677, 19543, 12883, 12678, 19544, 12884, 12679, 19545, 12885, 
            12680, 19546, 12886, 12681, 19547, 12887, 12682, 19548, 12888, 
            12683}], 
           
           Line3DBox[{12685, 17393, 19388, 12684, 17394, 19389, 12686, 17395, 
            19390, 12687, 17396, 19391, 12688, 17397, 19392, 12689, 17398, 
            19393, 12690, 17399, 19394, 12691, 5844, 12692, 19549, 12889, 
            12693, 19550, 12890, 12694, 19551, 12891, 12695, 19552, 12892, 
            12696, 19553, 12893, 12697, 19554, 12894, 12698, 19555, 12895, 
            12699}], 
           
           Line3DBox[{12701, 17400, 19395, 12700, 17401, 19396, 12702, 17402, 
            19397, 12703, 17403, 19398, 12704, 17404, 19399, 12705, 17405, 
            19400, 12706, 17406, 19401, 12707, 17407, 19402, 12708, 5860, 
            12709, 19556, 12896, 12710, 19557, 12897, 12711, 19558, 12898, 
            12712, 19559, 12899, 12713, 19560, 12900, 12714, 19561, 12901, 
            12715}], 
           
           Line3DBox[{12717, 17408, 19403, 12716, 17409, 19404, 12718, 17410, 
            19405, 12719, 17411, 19406, 12720, 17412, 19407, 12721, 17413, 
            19408, 12722, 17414, 19409, 12723, 17415, 19410, 12724, 17416, 
            19411, 12725, 5876, 12726, 19562, 12902, 12727, 19563, 12903, 
            12728, 19564, 12904, 12729, 19565, 12905, 12730, 19566, 12906, 
            12731}], 
           
           Line3DBox[{12733, 17417, 19412, 12732, 17418, 19413, 12734, 17419, 
            19414, 12735, 17420, 19415, 12736, 17421, 19416, 12737, 17422, 
            19417, 12738, 17423, 19418, 12739, 17424, 19419, 12740, 17425, 
            19420, 12741, 17426, 19421, 12742, 5892, 12743, 19567, 12907, 
            12744, 19568, 12908, 12745, 19569, 12909, 12746, 19570, 12910, 
            12747}], 
           
           Line3DBox[{12749, 17427, 19422, 12748, 17428, 19423, 12750, 17429, 
            19424, 12751, 17430, 19425, 12752, 17431, 19426, 12753, 17432, 
            19427, 12754, 17433, 19428, 12755, 17434, 19429, 12756, 17435, 
            19430, 12757, 17436, 19431, 12758, 17437, 19432, 12759, 5908, 
            12760, 19571, 12911, 12761, 19572, 12912, 12762, 19573, 12913, 
            12763}], 
           
           Line3DBox[{12765, 17438, 19433, 12764, 17439, 19434, 12766, 17440, 
            19435, 12767, 17441, 19436, 12768, 17442, 19437, 12769, 17443, 
            19438, 12770, 17444, 19439, 12771, 17445, 19440, 12772, 17446, 
            19441, 12773, 17447, 19442, 12774, 17448, 19443, 12775, 17449, 
            19444, 12776, 5924, 12777, 19574, 12914, 12778, 19575, 12915, 
            12779}], 
           
           Line3DBox[{12781, 17450, 19445, 12780, 17451, 19446, 12782, 17452, 
            19447, 12783, 17453, 19448, 12784, 17454, 19449, 12785, 17455, 
            19450, 12786, 17456, 19451, 12787, 17457, 19452, 12788, 17458, 
            19453, 12789, 17459, 19454, 12790, 17460, 19455, 12791, 17461, 
            19456, 12792, 17462, 19457, 12793, 5940, 12794, 19576, 12916, 
            12795}], 
           
           Line3DBox[{12797, 17463, 19458, 12796, 17464, 19459, 12798, 17465, 
            19460, 12799, 17466, 19461, 12800, 17467, 19462, 12801, 17468, 
            19463, 12802, 17469, 19464, 12803, 17470, 19465, 12804, 17471, 
            19466, 12805, 17472, 19467, 12806, 17473, 19468, 12807, 17474, 
            19469, 12808, 17475, 19470, 12809, 17476, 19471, 12810, 5956, 
            12811}], 
           
           Line3DBox[{12918, 6197, 12917, 19682, 13157, 12919, 19683, 13158, 
            12920, 19684, 13159, 12921, 19685, 13160, 12922, 19686, 13161, 
            12923, 19687, 13162, 12924, 19688, 13163, 12925, 19689, 13164, 
            12926, 19690, 13165, 12927, 19691, 13166, 12928, 19692, 13167, 
            12929, 19693, 13168, 12930, 19694, 13169, 12931, 19695, 13170, 
            12932}], 
           
           Line3DBox[{12934, 17477, 19577, 12933, 6213, 12935, 19696, 13171, 
            12936, 19697, 13172, 12937, 19698, 13173, 12938, 19699, 13174, 
            12939, 19700, 13175, 12940, 19701, 13176, 12941, 19702, 13177, 
            12942, 19703, 13178, 12943, 19704, 13179, 12944, 19705, 13180, 
            12945, 19706, 13181, 12946, 19707, 13182, 12947, 19708, 13183, 
            12948}], 
           
           Line3DBox[{12950, 17478, 19578, 12949, 17479, 19579, 12951, 6229, 
            12952, 19709, 13184, 12953, 19710, 13185, 12954, 19711, 13186, 
            12955, 19712, 13187, 12956, 19713, 13188, 12957, 19714, 13189, 
            12958, 19715, 13190, 12959, 19716, 13191, 12960, 19717, 13192, 
            12961, 19718, 13193, 12962, 19719, 13194, 12963, 19720, 13195, 
            12964}], 
           
           Line3DBox[{12966, 17480, 19580, 12965, 17481, 19581, 12967, 17482, 
            19582, 12968, 6245, 12969, 19721, 13196, 12970, 19722, 13197, 
            12971, 19723, 13198, 12972, 19724, 13199, 12973, 19725, 13200, 
            12974, 19726, 13201, 12975, 19727, 13202, 12976, 19728, 13203, 
            12977, 19729, 13204, 12978, 19730, 13205, 12979, 19731, 13206, 
            12980}], 
           
           Line3DBox[{12982, 17483, 19583, 12981, 17484, 19584, 12983, 17485, 
            19585, 12984, 17486, 19586, 12985, 6261, 12986, 19732, 13207, 
            12987, 19733, 13208, 12988, 19734, 13209, 12989, 19735, 13210, 
            12990, 19736, 13211, 12991, 19737, 13212, 12992, 19738, 13213, 
            12993, 19739, 13214, 12994, 19740, 13215, 12995, 19741, 13216, 
            12996}], 
           
           Line3DBox[{12998, 17487, 19587, 12997, 17488, 19588, 12999, 17489, 
            19589, 13000, 17490, 19590, 13001, 17491, 19591, 13002, 6277, 
            13003, 19742, 13217, 13004, 19743, 13218, 13005, 19744, 13219, 
            13006, 19745, 13220, 13007, 19746, 13221, 13008, 19747, 13222, 
            13009, 19748, 13223, 13010, 19749, 13224, 13011, 19750, 13225, 
            13012}], 
           
           Line3DBox[{13014, 17492, 19592, 13013, 17493, 19593, 13015, 17494, 
            19594, 13016, 17495, 19595, 13017, 17496, 19596, 13018, 17497, 
            19597, 13019, 6293, 13020, 19751, 13226, 13021, 19752, 13227, 
            13022, 19753, 13228, 13023, 19754, 13229, 13024, 19755, 13230, 
            13025, 19756, 13231, 13026, 19757, 13232, 13027, 19758, 13233, 
            13028}], 
           
           Line3DBox[{13030, 17498, 19598, 13029, 17499, 19599, 13031, 17500, 
            19600, 13032, 17501, 19601, 13033, 17502, 19602, 13034, 17503, 
            19603, 13035, 17504, 19604, 13036, 6309, 13037, 19759, 13234, 
            13038, 19760, 13235, 13039, 19761, 13236, 13040, 19762, 13237, 
            13041, 19763, 13238, 13042, 19764, 13239, 13043, 19765, 13240, 
            13044}], 
           
           Line3DBox[{13046, 17505, 19605, 13045, 17506, 19606, 13047, 17507, 
            19607, 13048, 17508, 19608, 13049, 17509, 19609, 13050, 17510, 
            19610, 13051, 17511, 19611, 13052, 17512, 19612, 13053, 6325, 
            13054, 19766, 13241, 13055, 19767, 13242, 13056, 19768, 13243, 
            13057, 19769, 13244, 13058, 19770, 13245, 13059, 19771, 13246, 
            13060}], 
           
           Line3DBox[{13062, 17513, 19613, 13061, 17514, 19614, 13063, 17515, 
            19615, 13064, 17516, 19616, 13065, 17517, 19617, 13066, 17518, 
            19618, 13067, 17519, 19619, 13068, 17520, 19620, 13069, 17521, 
            19621, 13070, 6341, 13071, 19772, 13247, 13072, 19773, 13248, 
            13073, 19774, 13249, 13074, 19775, 13250, 13075, 19776, 13251, 
            13076}], 
           
           Line3DBox[{13078, 17522, 19622, 13077, 17523, 19623, 13079, 17524, 
            19624, 13080, 17525, 19625, 13081, 17526, 19626, 13082, 17527, 
            19627, 13083, 17528, 19628, 13084, 17529, 19629, 13085, 17530, 
            19630, 13086, 17531, 19631, 13087, 6357, 13088, 19777, 13252, 
            13089, 19778, 13253, 13090, 19779, 13254, 13091, 19780, 13255, 
            13092}], 
           
           Line3DBox[{13094, 17532, 19632, 13093, 17533, 19633, 13095, 17534, 
            19634, 13096, 17535, 19635, 13097, 17536, 19636, 13098, 17537, 
            19637, 13099, 17538, 19638, 13100, 17539, 19639, 13101, 17540, 
            19640, 13102, 17541, 19641, 13103, 17542, 19642, 13104, 6373, 
            13105, 19781, 13256, 13106, 19782, 13257, 13107, 19783, 13258, 
            13108}], 
           
           Line3DBox[{13110, 17543, 19643, 13109, 17544, 19644, 13111, 17545, 
            19645, 13112, 17546, 19646, 13113, 17547, 19647, 13114, 17548, 
            19648, 13115, 17549, 19649, 13116, 17550, 19650, 13117, 17551, 
            19651, 13118, 17552, 19652, 13119, 17553, 19653, 13120, 17554, 
            19654, 13121, 6389, 13122, 19784, 13259, 13123, 19785, 13260, 
            13124}], 
           
           Line3DBox[{13126, 17555, 19655, 13125, 17556, 19656, 13127, 17557, 
            19657, 13128, 17558, 19658, 13129, 17559, 19659, 13130, 17560, 
            19660, 13131, 17561, 19661, 13132, 17562, 19662, 13133, 17563, 
            19663, 13134, 17564, 19664, 13135, 17565, 19665, 13136, 17566, 
            19666, 13137, 17567, 19667, 13138, 6405, 13139, 19786, 13261, 
            13140}], 
           
           Line3DBox[{13142, 17568, 19668, 13141, 17569, 19669, 13143, 17570, 
            19670, 13144, 17571, 19671, 13145, 17572, 19672, 13146, 17573, 
            19673, 13147, 17574, 19674, 13148, 17575, 19675, 13149, 17576, 
            19676, 13150, 17577, 19677, 13151, 17578, 19678, 13152, 17579, 
            19679, 13153, 17580, 19680, 13154, 17581, 19681, 13155, 6421, 
            13156}], 
           
           Line3DBox[{13263, 6662, 13262, 19892, 13502, 13264, 19893, 13503, 
            13265, 19894, 13504, 13266, 19895, 13505, 13267, 19896, 13506, 
            13268, 19897, 13507, 13269, 19898, 13508, 13270, 19899, 13509, 
            13271, 19900, 13510, 13272, 19901, 13511, 13273, 19902, 13512, 
            13274, 19903, 13513, 13275, 19904, 13514, 13276, 19905, 13515, 
            13277}], 
           
           Line3DBox[{13279, 17582, 19787, 13278, 6678, 13280, 19906, 13516, 
            13281, 19907, 13517, 13282, 19908, 13518, 13283, 19909, 13519, 
            13284, 19910, 13520, 13285, 19911, 13521, 13286, 19912, 13522, 
            13287, 19913, 13523, 13288, 19914, 13524, 13289, 19915, 13525, 
            13290, 19916, 13526, 13291, 19917, 13527, 13292, 19918, 13528, 
            13293}], 
           
           Line3DBox[{13295, 17583, 19788, 13294, 17584, 19789, 13296, 6694, 
            13297, 19919, 13529, 13298, 19920, 13530, 13299, 19921, 13531, 
            13300, 19922, 13532, 13301, 19923, 13533, 13302, 19924, 13534, 
            13303, 19925, 13535, 13304, 19926, 13536, 13305, 19927, 13537, 
            13306, 19928, 13538, 13307, 19929, 13539, 13308, 19930, 13540, 
            13309}], 
           
           Line3DBox[{13311, 17585, 19790, 13310, 17586, 19791, 13312, 17587, 
            19792, 13313, 6710, 13314, 19931, 13541, 13315, 19932, 13542, 
            13316, 19933, 13543, 13317, 19934, 13544, 13318, 19935, 13545, 
            13319, 19936, 13546, 13320, 19937, 13547, 13321, 19938, 13548, 
            13322, 19939, 13549, 13323, 19940, 13550, 13324, 19941, 13551, 
            13325}], 
           
           Line3DBox[{13327, 17588, 19793, 13326, 17589, 19794, 13328, 17590, 
            19795, 13329, 17591, 19796, 13330, 6726, 13331, 19942, 13552, 
            13332, 19943, 13553, 13333, 19944, 13554, 13334, 19945, 13555, 
            13335, 19946, 13556, 13336, 19947, 13557, 13337, 19948, 13558, 
            13338, 19949, 13559, 13339, 19950, 13560, 13340, 19951, 13561, 
            13341}], 
           
           Line3DBox[{13343, 17592, 19797, 13342, 17593, 19798, 13344, 17594, 
            19799, 13345, 17595, 19800, 13346, 17596, 19801, 13347, 6742, 
            13348, 19952, 13562, 13349, 19953, 13563, 13350, 19954, 13564, 
            13351, 19955, 13565, 13352, 19956, 13566, 13353, 19957, 13567, 
            13354, 19958, 13568, 13355, 19959, 13569, 13356, 19960, 13570, 
            13357}], 
           
           Line3DBox[{13359, 17597, 19802, 13358, 17598, 19803, 13360, 17599, 
            19804, 13361, 17600, 19805, 13362, 17601, 19806, 13363, 17602, 
            19807, 13364, 6758, 13365, 19961, 13571, 13366, 19962, 13572, 
            13367, 19963, 13573, 13368, 19964, 13574, 13369, 19965, 13575, 
            13370, 19966, 13576, 13371, 19967, 13577, 13372, 19968, 13578, 
            13373}], 
           
           Line3DBox[{13375, 17603, 19808, 13374, 17604, 19809, 13376, 17605, 
            19810, 13377, 17606, 19811, 13378, 17607, 19812, 13379, 17608, 
            19813, 13380, 17609, 19814, 13381, 6774, 13382, 19969, 13579, 
            13383, 19970, 13580, 13384, 19971, 13581, 13385, 19972, 13582, 
            13386, 19973, 13583, 13387, 19974, 13584, 13388, 19975, 13585, 
            13389}], 
           
           Line3DBox[{13391, 17610, 19815, 13390, 17611, 19816, 13392, 17612, 
            19817, 13393, 17613, 19818, 13394, 17614, 19819, 13395, 17615, 
            19820, 13396, 17616, 19821, 13397, 17617, 19822, 13398, 6790, 
            13399, 19976, 13586, 13400, 19977, 13587, 13401, 19978, 13588, 
            13402, 19979, 13589, 13403, 19980, 13590, 13404, 19981, 13591, 
            13405}], 
           
           Line3DBox[{13407, 17618, 19823, 13406, 17619, 19824, 13408, 17620, 
            19825, 13409, 17621, 19826, 13410, 17622, 19827, 13411, 17623, 
            19828, 13412, 17624, 19829, 13413, 17625, 19830, 13414, 17626, 
            19831, 13415, 6806, 13416, 19982, 13592, 13417, 19983, 13593, 
            13418, 19984, 13594, 13419, 19985, 13595, 13420, 19986, 13596, 
            13421}], 
           
           Line3DBox[{13423, 17627, 19832, 13422, 17628, 19833, 13424, 17629, 
            19834, 13425, 17630, 19835, 13426, 17631, 19836, 13427, 17632, 
            19837, 13428, 17633, 19838, 13429, 17634, 19839, 13430, 17635, 
            19840, 13431, 17636, 19841, 13432, 6822, 13433, 19987, 13597, 
            13434, 19988, 13598, 13435, 19989, 13599, 13436, 19990, 13600, 
            13437}], 
           
           Line3DBox[{13439, 17637, 19842, 13438, 17638, 19843, 13440, 17639, 
            19844, 13441, 17640, 19845, 13442, 17641, 19846, 13443, 17642, 
            19847, 13444, 17643, 19848, 13445, 17644, 19849, 13446, 17645, 
            19850, 13447, 17646, 19851, 13448, 17647, 19852, 13449, 6838, 
            13450, 19991, 13601, 13451, 19992, 13602, 13452, 19993, 13603, 
            13453}], 
           
           Line3DBox[{13455, 17648, 19853, 13454, 17649, 19854, 13456, 17650, 
            19855, 13457, 17651, 19856, 13458, 17652, 19857, 13459, 17653, 
            19858, 13460, 17654, 19859, 13461, 17655, 19860, 13462, 17656, 
            19861, 13463, 17657, 19862, 13464, 17658, 19863, 13465, 17659, 
            19864, 13466, 6854, 13467, 19994, 13604, 13468, 19995, 13605, 
            13469}], 
           
           Line3DBox[{13471, 17660, 19865, 13470, 17661, 19866, 13472, 17662, 
            19867, 13473, 17663, 19868, 13474, 17664, 19869, 13475, 17665, 
            19870, 13476, 17666, 19871, 13477, 17667, 19872, 13478, 17668, 
            19873, 13479, 17669, 19874, 13480, 17670, 19875, 13481, 17671, 
            19876, 13482, 17672, 19877, 13483, 6870, 13484, 19996, 13606, 
            13485}], 
           
           Line3DBox[{13487, 17673, 19878, 13486, 17674, 19879, 13488, 17675, 
            19880, 13489, 17676, 19881, 13490, 17677, 19882, 13491, 17678, 
            19883, 13492, 17679, 19884, 13493, 17680, 19885, 13494, 17681, 
            19886, 13495, 17682, 19887, 13496, 17683, 19888, 13497, 17684, 
            19889, 13498, 17685, 19890, 13499, 17686, 19891, 13500, 6886, 
            13501}], 
           
           Line3DBox[{13608, 7127, 13607, 20102, 13847, 13609, 20103, 13848, 
            13610, 20104, 13849, 13611, 20105, 13850, 13612, 20106, 13851, 
            13613, 20107, 13852, 13614, 20108, 13853, 13615, 20109, 13854, 
            13616, 20110, 13855, 13617, 20111, 13856, 13618, 20112, 13857, 
            13619, 20113, 13858, 13620, 20114, 13859, 13621, 20115, 13860, 
            13622}], 
           
           Line3DBox[{13624, 17687, 19997, 13623, 7143, 13625, 20116, 13861, 
            13626, 20117, 13862, 13627, 20118, 13863, 13628, 20119, 13864, 
            13629, 20120, 13865, 13630, 20121, 13866, 13631, 20122, 13867, 
            13632, 20123, 13868, 13633, 20124, 13869, 13634, 20125, 13870, 
            13635, 20126, 13871, 13636, 20127, 13872, 13637, 20128, 13873, 
            13638}], 
           
           Line3DBox[{13640, 17688, 19998, 13639, 17689, 19999, 13641, 7159, 
            13642, 20129, 13874, 13643, 20130, 13875, 13644, 20131, 13876, 
            13645, 20132, 13877, 13646, 20133, 13878, 13647, 20134, 13879, 
            13648, 20135, 13880, 13649, 20136, 13881, 13650, 20137, 13882, 
            13651, 20138, 13883, 13652, 20139, 13884, 13653, 20140, 13885, 
            13654}], 
           
           Line3DBox[{13656, 17690, 20000, 13655, 17691, 20001, 13657, 17692, 
            20002, 13658, 7175, 13659, 20141, 13886, 13660, 20142, 13887, 
            13661, 20143, 13888, 13662, 20144, 13889, 13663, 20145, 13890, 
            13664, 20146, 13891, 13665, 20147, 13892, 13666, 20148, 13893, 
            13667, 20149, 13894, 13668, 20150, 13895, 13669, 20151, 13896, 
            13670}], 
           
           Line3DBox[{13672, 17693, 20003, 13671, 17694, 20004, 13673, 17695, 
            20005, 13674, 17696, 20006, 13675, 7191, 13676, 20152, 13897, 
            13677, 20153, 13898, 13678, 20154, 13899, 13679, 20155, 13900, 
            13680, 20156, 13901, 13681, 20157, 13902, 13682, 20158, 13903, 
            13683, 20159, 13904, 13684, 20160, 13905, 13685, 20161, 13906, 
            13686}], 
           
           Line3DBox[{13688, 17697, 20007, 13687, 17698, 20008, 13689, 17699, 
            20009, 13690, 17700, 20010, 13691, 17701, 20011, 13692, 7207, 
            13693, 20162, 13907, 13694, 20163, 13908, 13695, 20164, 13909, 
            13696, 20165, 13910, 13697, 20166, 13911, 13698, 20167, 13912, 
            13699, 20168, 13913, 13700, 20169, 13914, 13701, 20170, 13915, 
            13702}], 
           
           Line3DBox[{13704, 17702, 20012, 13703, 17703, 20013, 13705, 17704, 
            20014, 13706, 17705, 20015, 13707, 17706, 20016, 13708, 17707, 
            20017, 13709, 7223, 13710, 20171, 13916, 13711, 20172, 13917, 
            13712, 20173, 13918, 13713, 20174, 13919, 13714, 20175, 13920, 
            13715, 20176, 13921, 13716, 20177, 13922, 13717, 20178, 13923, 
            13718}], 
           
           Line3DBox[{13720, 17708, 20018, 13719, 17709, 20019, 13721, 17710, 
            20020, 13722, 17711, 20021, 13723, 17712, 20022, 13724, 17713, 
            20023, 13725, 17714, 20024, 13726, 7239, 13727, 20179, 13924, 
            13728, 20180, 13925, 13729, 20181, 13926, 13730, 20182, 13927, 
            13731, 20183, 13928, 13732, 20184, 13929, 13733, 20185, 13930, 
            13734}], 
           
           Line3DBox[{13736, 17715, 20025, 13735, 17716, 20026, 13737, 17717, 
            20027, 13738, 17718, 20028, 13739, 17719, 20029, 13740, 17720, 
            20030, 13741, 17721, 20031, 13742, 17722, 20032, 13743, 7255, 
            13744, 20186, 13931, 13745, 20187, 13932, 13746, 20188, 13933, 
            13747, 20189, 13934, 13748, 20190, 13935, 13749, 20191, 13936, 
            13750}], 
           
           Line3DBox[{13752, 17723, 20033, 13751, 17724, 20034, 13753, 17725, 
            20035, 13754, 17726, 20036, 13755, 17727, 20037, 13756, 17728, 
            20038, 13757, 17729, 20039, 13758, 17730, 20040, 13759, 17731, 
            20041, 13760, 7271, 13761, 20192, 13937, 13762, 20193, 13938, 
            13763, 20194, 13939, 13764, 20195, 13940, 13765, 20196, 13941, 
            13766}], 
           
           Line3DBox[{13768, 17732, 20042, 13767, 17733, 20043, 13769, 17734, 
            20044, 13770, 17735, 20045, 13771, 17736, 20046, 13772, 17737, 
            20047, 13773, 17738, 20048, 13774, 17739, 20049, 13775, 17740, 
            20050, 13776, 17741, 20051, 13777, 7287, 13778, 20197, 13942, 
            13779, 20198, 13943, 13780, 20199, 13944, 13781, 20200, 13945, 
            13782}], 
           
           Line3DBox[{13784, 17742, 20052, 13783, 17743, 20053, 13785, 17744, 
            20054, 13786, 17745, 20055, 13787, 17746, 20056, 13788, 17747, 
            20057, 13789, 17748, 20058, 13790, 17749, 20059, 13791, 17750, 
            20060, 13792, 17751, 20061, 13793, 17752, 20062, 13794, 7303, 
            13795, 20201, 13946, 13796, 20202, 13947, 13797, 20203, 13948, 
            13798}], 
           
           Line3DBox[{13800, 17753, 20063, 13799, 17754, 20064, 13801, 17755, 
            20065, 13802, 17756, 20066, 13803, 17757, 20067, 13804, 17758, 
            20068, 13805, 17759, 20069, 13806, 17760, 20070, 13807, 17761, 
            20071, 13808, 17762, 20072, 13809, 17763, 20073, 13810, 17764, 
            20074, 13811, 7319, 13812, 20204, 13949, 13813, 20205, 13950, 
            13814}], 
           
           Line3DBox[{13816, 17765, 20075, 13815, 17766, 20076, 13817, 17767, 
            20077, 13818, 17768, 20078, 13819, 17769, 20079, 13820, 17770, 
            20080, 13821, 17771, 20081, 13822, 17772, 20082, 13823, 17773, 
            20083, 13824, 17774, 20084, 13825, 17775, 20085, 13826, 17776, 
            20086, 13827, 17777, 20087, 13828, 7335, 13829, 20206, 13951, 
            13830}], 
           
           Line3DBox[{13832, 17778, 20088, 13831, 17779, 20089, 13833, 17780, 
            20090, 13834, 17781, 20091, 13835, 17782, 20092, 13836, 17783, 
            20093, 13837, 17784, 20094, 13838, 17785, 20095, 13839, 17786, 
            20096, 13840, 17787, 20097, 13841, 17788, 20098, 13842, 17789, 
            20099, 13843, 17790, 20100, 13844, 17791, 20101, 13845, 7351, 
            13846}], 
           
           Line3DBox[{13953, 7592, 13952, 20312, 14192, 13954, 20313, 14193, 
            13955, 20314, 14194, 13956, 20315, 14195, 13957, 20316, 14196, 
            13958, 20317, 14197, 13959, 20318, 14198, 13960, 20319, 14199, 
            13961, 20320, 14200, 13962, 20321, 14201, 13963, 20322, 14202, 
            13964, 20323, 14203, 13965, 20324, 14204, 13966, 20325, 14205, 
            13967}], 
           
           Line3DBox[{13969, 17792, 20207, 13968, 7608, 13970, 20326, 14206, 
            13971, 20327, 14207, 13972, 20328, 14208, 13973, 20329, 14209, 
            13974, 20330, 14210, 13975, 20331, 14211, 13976, 20332, 14212, 
            13977, 20333, 14213, 13978, 20334, 14214, 13979, 20335, 14215, 
            13980, 20336, 14216, 13981, 20337, 14217, 13982, 20338, 14218, 
            13983}], 
           
           Line3DBox[{13985, 17793, 20208, 13984, 17794, 20209, 13986, 7624, 
            13987, 20339, 14219, 13988, 20340, 14220, 13989, 20341, 14221, 
            13990, 20342, 14222, 13991, 20343, 14223, 13992, 20344, 14224, 
            13993, 20345, 14225, 13994, 20346, 14226, 13995, 20347, 14227, 
            13996, 20348, 14228, 13997, 20349, 14229, 13998, 20350, 14230, 
            13999}], 
           
           Line3DBox[{14001, 17795, 20210, 14000, 17796, 20211, 14002, 17797, 
            20212, 14003, 7640, 14004, 20351, 14231, 14005, 20352, 14232, 
            14006, 20353, 14233, 14007, 20354, 14234, 14008, 20355, 14235, 
            14009, 20356, 14236, 14010, 20357, 14237, 14011, 20358, 14238, 
            14012, 20359, 14239, 14013, 20360, 14240, 14014, 20361, 14241, 
            14015}], 
           
           Line3DBox[{14017, 17798, 20213, 14016, 17799, 20214, 14018, 17800, 
            20215, 14019, 17801, 20216, 14020, 7656, 14021, 20362, 14242, 
            14022, 20363, 14243, 14023, 20364, 14244, 14024, 20365, 14245, 
            14025, 20366, 14246, 14026, 20367, 14247, 14027, 20368, 14248, 
            14028, 20369, 14249, 14029, 20370, 14250, 14030, 20371, 14251, 
            14031}], 
           
           Line3DBox[{14033, 17802, 20217, 14032, 17803, 20218, 14034, 17804, 
            20219, 14035, 17805, 20220, 14036, 17806, 20221, 14037, 7672, 
            14038, 20372, 14252, 14039, 20373, 14253, 14040, 20374, 14254, 
            14041, 20375, 14255, 14042, 20376, 14256, 14043, 20377, 14257, 
            14044, 20378, 14258, 14045, 20379, 14259, 14046, 20380, 14260, 
            14047}], 
           
           Line3DBox[{14049, 17807, 20222, 14048, 17808, 20223, 14050, 17809, 
            20224, 14051, 17810, 20225, 14052, 17811, 20226, 14053, 17812, 
            20227, 14054, 7688, 14055, 20381, 14261, 14056, 20382, 14262, 
            14057, 20383, 14263, 14058, 20384, 14264, 14059, 20385, 14265, 
            14060, 20386, 14266, 14061, 20387, 14267, 14062, 20388, 14268, 
            14063}], 
           
           Line3DBox[{14065, 17813, 20228, 14064, 17814, 20229, 14066, 17815, 
            20230, 14067, 17816, 20231, 14068, 17817, 20232, 14069, 17818, 
            20233, 14070, 17819, 20234, 14071, 7704, 14072, 20389, 14269, 
            14073, 20390, 14270, 14074, 20391, 14271, 14075, 20392, 14272, 
            14076, 20393, 14273, 14077, 20394, 14274, 14078, 20395, 14275, 
            14079}], 
           
           Line3DBox[{14081, 17820, 20235, 14080, 17821, 20236, 14082, 17822, 
            20237, 14083, 17823, 20238, 14084, 17824, 20239, 14085, 17825, 
            20240, 14086, 17826, 20241, 14087, 17827, 20242, 14088, 7720, 
            14089, 20396, 14276, 14090, 20397, 14277, 14091, 20398, 14278, 
            14092, 20399, 14279, 14093, 20400, 14280, 14094, 20401, 14281, 
            14095}], 
           
           Line3DBox[{14097, 17828, 20243, 14096, 17829, 20244, 14098, 17830, 
            20245, 14099, 17831, 20246, 14100, 17832, 20247, 14101, 17833, 
            20248, 14102, 17834, 20249, 14103, 17835, 20250, 14104, 17836, 
            20251, 14105, 7736, 14106, 20402, 14282, 14107, 20403, 14283, 
            14108, 20404, 14284, 14109, 20405, 14285, 14110, 20406, 14286, 
            14111}], 
           
           Line3DBox[{14113, 17837, 20252, 14112, 17838, 20253, 14114, 17839, 
            20254, 14115, 17840, 20255, 14116, 17841, 20256, 14117, 17842, 
            20257, 14118, 17843, 20258, 14119, 17844, 20259, 14120, 17845, 
            20260, 14121, 17846, 20261, 14122, 7752, 14123, 20407, 14287, 
            14124, 20408, 14288, 14125, 20409, 14289, 14126, 20410, 14290, 
            14127}], 
           
           Line3DBox[{14129, 17847, 20262, 14128, 17848, 20263, 14130, 17849, 
            20264, 14131, 17850, 20265, 14132, 17851, 20266, 14133, 17852, 
            20267, 14134, 17853, 20268, 14135, 17854, 20269, 14136, 17855, 
            20270, 14137, 17856, 20271, 14138, 17857, 20272, 14139, 7768, 
            14140, 20411, 14291, 14141, 20412, 14292, 14142, 20413, 14293, 
            14143}], 
           
           Line3DBox[{14145, 17858, 20273, 14144, 17859, 20274, 14146, 17860, 
            20275, 14147, 17861, 20276, 14148, 17862, 20277, 14149, 17863, 
            20278, 14150, 17864, 20279, 14151, 17865, 20280, 14152, 17866, 
            20281, 14153, 17867, 20282, 14154, 17868, 20283, 14155, 17869, 
            20284, 14156, 7784, 14157, 20414, 14294, 14158, 20415, 14295, 
            14159}], 
           
           Line3DBox[{14161, 17870, 20285, 14160, 17871, 20286, 14162, 17872, 
            20287, 14163, 17873, 20288, 14164, 17874, 20289, 14165, 17875, 
            20290, 14166, 17876, 20291, 14167, 17877, 20292, 14168, 17878, 
            20293, 14169, 17879, 20294, 14170, 17880, 20295, 14171, 17881, 
            20296, 14172, 17882, 20297, 14173, 7800, 14174, 20416, 14296, 
            14175}], 
           
           Line3DBox[{14177, 17883, 20298, 14176, 17884, 20299, 14178, 17885, 
            20300, 14179, 17886, 20301, 14180, 17887, 20302, 14181, 17888, 
            20303, 14182, 17889, 20304, 14183, 17890, 20305, 14184, 17891, 
            20306, 14185, 17892, 20307, 14186, 17893, 20308, 14187, 17894, 
            20309, 14188, 17895, 20310, 14189, 17896, 20311, 14190, 7816, 
            14191}], 
           
           Line3DBox[{14298, 8057, 14297, 20522, 14537, 14299, 20523, 14538, 
            14300, 20524, 14539, 14301, 20525, 14540, 14302, 20526, 14541, 
            14303, 20527, 14542, 14304, 20528, 14543, 14305, 20529, 14544, 
            14306, 20530, 14545, 14307, 20531, 14546, 14308, 20532, 14547, 
            14309, 20533, 14548, 14310, 20534, 14549, 14311, 20535, 14550, 
            14312}], 
           
           Line3DBox[{14314, 17897, 20417, 14313, 8073, 14315, 20536, 14551, 
            14316, 20537, 14552, 14317, 20538, 14553, 14318, 20539, 14554, 
            14319, 20540, 14555, 14320, 20541, 14556, 14321, 20542, 14557, 
            14322, 20543, 14558, 14323, 20544, 14559, 14324, 20545, 14560, 
            14325, 20546, 14561, 14326, 20547, 14562, 14327, 20548, 14563, 
            14328}], 
           
           Line3DBox[{14330, 17898, 20418, 14329, 17899, 20419, 14331, 8089, 
            14332, 20549, 14564, 14333, 20550, 14565, 14334, 20551, 14566, 
            14335, 20552, 14567, 14336, 20553, 14568, 14337, 20554, 14569, 
            14338, 20555, 14570, 14339, 20556, 14571, 14340, 20557, 14572, 
            14341, 20558, 14573, 14342, 20559, 14574, 14343, 20560, 14575, 
            14344}], 
           
           Line3DBox[{14346, 17900, 20420, 14345, 17901, 20421, 14347, 17902, 
            20422, 14348, 8105, 14349, 20561, 14576, 14350, 20562, 14577, 
            14351, 20563, 14578, 14352, 20564, 14579, 14353, 20565, 14580, 
            14354, 20566, 14581, 14355, 20567, 14582, 14356, 20568, 14583, 
            14357, 20569, 14584, 14358, 20570, 14585, 14359, 20571, 14586, 
            14360}], 
           
           Line3DBox[{14362, 17903, 20423, 14361, 17904, 20424, 14363, 17905, 
            20425, 14364, 17906, 20426, 14365, 8121, 14366, 20572, 14587, 
            14367, 20573, 14588, 14368, 20574, 14589, 14369, 20575, 14590, 
            14370, 20576, 14591, 14371, 20577, 14592, 14372, 20578, 14593, 
            14373, 20579, 14594, 14374, 20580, 14595, 14375, 20581, 14596, 
            14376}], 
           
           Line3DBox[{14378, 17907, 20427, 14377, 17908, 20428, 14379, 17909, 
            20429, 14380, 17910, 20430, 14381, 17911, 20431, 14382, 8137, 
            14383, 20582, 14597, 14384, 20583, 14598, 14385, 20584, 14599, 
            14386, 20585, 14600, 14387, 20586, 14601, 14388, 20587, 14602, 
            14389, 20588, 14603, 14390, 20589, 14604, 14391, 20590, 14605, 
            14392}], 
           
           Line3DBox[{14394, 17912, 20432, 14393, 17913, 20433, 14395, 17914, 
            20434, 14396, 17915, 20435, 14397, 17916, 20436, 14398, 17917, 
            20437, 14399, 8153, 14400, 20591, 14606, 14401, 20592, 14607, 
            14402, 20593, 14608, 14403, 20594, 14609, 14404, 20595, 14610, 
            14405, 20596, 14611, 14406, 20597, 14612, 14407, 20598, 14613, 
            14408}], 
           
           Line3DBox[{14410, 17918, 20438, 14409, 17919, 20439, 14411, 17920, 
            20440, 14412, 17921, 20441, 14413, 17922, 20442, 14414, 17923, 
            20443, 14415, 17924, 20444, 14416, 8169, 14417, 20599, 14614, 
            14418, 20600, 14615, 14419, 20601, 14616, 14420, 20602, 14617, 
            14421, 20603, 14618, 14422, 20604, 14619, 14423, 20605, 14620, 
            14424}], 
           
           Line3DBox[{14426, 17925, 20445, 14425, 17926, 20446, 14427, 17927, 
            20447, 14428, 17928, 20448, 14429, 17929, 20449, 14430, 17930, 
            20450, 14431, 17931, 20451, 14432, 17932, 20452, 14433, 8185, 
            14434, 20606, 14621, 14435, 20607, 14622, 14436, 20608, 14623, 
            14437, 20609, 14624, 14438, 20610, 14625, 14439, 20611, 14626, 
            14440}], 
           
           Line3DBox[{14442, 17933, 20453, 14441, 17934, 20454, 14443, 17935, 
            20455, 14444, 17936, 20456, 14445, 17937, 20457, 14446, 17938, 
            20458, 14447, 17939, 20459, 14448, 17940, 20460, 14449, 17941, 
            20461, 14450, 8201, 14451, 20612, 14627, 14452, 20613, 14628, 
            14453, 20614, 14629, 14454, 20615, 14630, 14455, 20616, 14631, 
            14456}], 
           
           Line3DBox[{14458, 17942, 20462, 14457, 17943, 20463, 14459, 17944, 
            20464, 14460, 17945, 20465, 14461, 17946, 20466, 14462, 17947, 
            20467, 14463, 17948, 20468, 14464, 17949, 20469, 14465, 17950, 
            20470, 14466, 17951, 20471, 14467, 8217, 14468, 20617, 14632, 
            14469, 20618, 14633, 14470, 20619, 14634, 14471, 20620, 14635, 
            14472}], 
           
           Line3DBox[{14474, 17952, 20472, 14473, 17953, 20473, 14475, 17954, 
            20474, 14476, 17955, 20475, 14477, 17956, 20476, 14478, 17957, 
            20477, 14479, 17958, 20478, 14480, 17959, 20479, 14481, 17960, 
            20480, 14482, 17961, 20481, 14483, 17962, 20482, 14484, 8233, 
            14485, 20621, 14636, 14486, 20622, 14637, 14487, 20623, 14638, 
            14488}], 
           
           Line3DBox[{14490, 17963, 20483, 14489, 17964, 20484, 14491, 17965, 
            20485, 14492, 17966, 20486, 14493, 17967, 20487, 14494, 17968, 
            20488, 14495, 17969, 20489, 14496, 17970, 20490, 14497, 17971, 
            20491, 14498, 17972, 20492, 14499, 17973, 20493, 14500, 17974, 
            20494, 14501, 8249, 14502, 20624, 14639, 14503, 20625, 14640, 
            14504}], 
           
           Line3DBox[{14506, 17975, 20495, 14505, 17976, 20496, 14507, 17977, 
            20497, 14508, 17978, 20498, 14509, 17979, 20499, 14510, 17980, 
            20500, 14511, 17981, 20501, 14512, 17982, 20502, 14513, 17983, 
            20503, 14514, 17984, 20504, 14515, 17985, 20505, 14516, 17986, 
            20506, 14517, 17987, 20507, 14518, 8265, 14519, 20626, 14641, 
            14520}], 
           
           Line3DBox[{14522, 17988, 20508, 14521, 17989, 20509, 14523, 17990, 
            20510, 14524, 17991, 20511, 14525, 17992, 20512, 14526, 17993, 
            20513, 14527, 17994, 20514, 14528, 17995, 20515, 14529, 17996, 
            20516, 14530, 17997, 20517, 14531, 17998, 20518, 14532, 17999, 
            20519, 14533, 18000, 20520, 14534, 18001, 20521, 14535, 8281, 
            14536}], 
           
           Line3DBox[{14643, 8522, 14642, 20732, 14882, 14644, 20733, 14883, 
            14645, 20734, 14884, 14646, 20735, 14885, 14647, 20736, 14886, 
            14648, 20737, 14887, 14649, 20738, 14888, 14650, 20739, 14889, 
            14651, 20740, 14890, 14652, 20741, 14891, 14653, 20742, 14892, 
            14654, 20743, 14893, 14655, 20744, 14894, 14656, 20745, 14895, 
            14657}], 
           
           Line3DBox[{14659, 18002, 20627, 14658, 8538, 14660, 20746, 14896, 
            14661, 20747, 14897, 14662, 20748, 14898, 14663, 20749, 14899, 
            14664, 20750, 14900, 14665, 20751, 14901, 14666, 20752, 14902, 
            14667, 20753, 14903, 14668, 20754, 14904, 14669, 20755, 14905, 
            14670, 20756, 14906, 14671, 20757, 14907, 14672, 20758, 14908, 
            14673}], 
           
           Line3DBox[{14675, 18003, 20628, 14674, 18004, 20629, 14676, 8554, 
            14677, 20759, 14909, 14678, 20760, 14910, 14679, 20761, 14911, 
            14680, 20762, 14912, 14681, 20763, 14913, 14682, 20764, 14914, 
            14683, 20765, 14915, 14684, 20766, 14916, 14685, 20767, 14917, 
            14686, 20768, 14918, 14687, 20769, 14919, 14688, 20770, 14920, 
            14689}], 
           
           Line3DBox[{14691, 18005, 20630, 14690, 18006, 20631, 14692, 18007, 
            20632, 14693, 8570, 14694, 20771, 14921, 14695, 20772, 14922, 
            14696, 20773, 14923, 14697, 20774, 14924, 14698, 20775, 14925, 
            14699, 20776, 14926, 14700, 20777, 14927, 14701, 20778, 14928, 
            14702, 20779, 14929, 14703, 20780, 14930, 14704, 20781, 14931, 
            14705}], 
           
           Line3DBox[{14707, 18008, 20633, 14706, 18009, 20634, 14708, 18010, 
            20635, 14709, 18011, 20636, 14710, 8586, 14711, 20782, 14932, 
            14712, 20783, 14933, 14713, 20784, 14934, 14714, 20785, 14935, 
            14715, 20786, 14936, 14716, 20787, 14937, 14717, 20788, 14938, 
            14718, 20789, 14939, 14719, 20790, 14940, 14720, 20791, 14941, 
            14721}], 
           
           Line3DBox[{14723, 18012, 20637, 14722, 18013, 20638, 14724, 18014, 
            20639, 14725, 18015, 20640, 14726, 18016, 20641, 14727, 8602, 
            14728, 20792, 14942, 14729, 20793, 14943, 14730, 20794, 14944, 
            14731, 20795, 14945, 14732, 20796, 14946, 14733, 20797, 14947, 
            14734, 20798, 14948, 14735, 20799, 14949, 14736, 20800, 14950, 
            14737}], 
           
           Line3DBox[{14739, 18017, 20642, 14738, 18018, 20643, 14740, 18019, 
            20644, 14741, 18020, 20645, 14742, 18021, 20646, 14743, 18022, 
            20647, 14744, 8618, 14745, 20801, 14951, 14746, 20802, 14952, 
            14747, 20803, 14953, 14748, 20804, 14954, 14749, 20805, 14955, 
            14750, 20806, 14956, 14751, 20807, 14957, 14752, 20808, 14958, 
            14753}], 
           
           Line3DBox[{14755, 18023, 20648, 14754, 18024, 20649, 14756, 18025, 
            20650, 14757, 18026, 20651, 14758, 18027, 20652, 14759, 18028, 
            20653, 14760, 18029, 20654, 14761, 8634, 14762, 20809, 14959, 
            14763, 20810, 14960, 14764, 20811, 14961, 14765, 20812, 14962, 
            14766, 20813, 14963, 14767, 20814, 14964, 14768, 20815, 14965, 
            14769}], 
           
           Line3DBox[{14771, 18030, 20655, 14770, 18031, 20656, 14772, 18032, 
            20657, 14773, 18033, 20658, 14774, 18034, 20659, 14775, 18035, 
            20660, 14776, 18036, 20661, 14777, 18037, 20662, 14778, 8650, 
            14779, 20816, 14966, 14780, 20817, 14967, 14781, 20818, 14968, 
            14782, 20819, 14969, 14783, 20820, 14970, 14784, 20821, 14971, 
            14785}], 
           
           Line3DBox[{14787, 18038, 20663, 14786, 18039, 20664, 14788, 18040, 
            20665, 14789, 18041, 20666, 14790, 18042, 20667, 14791, 18043, 
            20668, 14792, 18044, 20669, 14793, 18045, 20670, 14794, 18046, 
            20671, 14795, 8666, 14796, 20822, 14972, 14797, 20823, 14973, 
            14798, 20824, 14974, 14799, 20825, 14975, 14800, 20826, 14976, 
            14801}], 
           
           Line3DBox[{14803, 18047, 20672, 14802, 18048, 20673, 14804, 18049, 
            20674, 14805, 18050, 20675, 14806, 18051, 20676, 14807, 18052, 
            20677, 14808, 18053, 20678, 14809, 18054, 20679, 14810, 18055, 
            20680, 14811, 18056, 20681, 14812, 8682, 14813, 20827, 14977, 
            14814, 20828, 14978, 14815, 20829, 14979, 14816, 20830, 14980, 
            14817}], 
           
           Line3DBox[{14819, 18057, 20682, 14818, 18058, 20683, 14820, 18059, 
            20684, 14821, 18060, 20685, 14822, 18061, 20686, 14823, 18062, 
            20687, 14824, 18063, 20688, 14825, 18064, 20689, 14826, 18065, 
            20690, 14827, 18066, 20691, 14828, 18067, 20692, 14829, 8698, 
            14830, 20831, 14981, 14831, 20832, 14982, 14832, 20833, 14983, 
            14833}], 
           
           Line3DBox[{14835, 18068, 20693, 14834, 18069, 20694, 14836, 18070, 
            20695, 14837, 18071, 20696, 14838, 18072, 20697, 14839, 18073, 
            20698, 14840, 18074, 20699, 14841, 18075, 20700, 14842, 18076, 
            20701, 14843, 18077, 20702, 14844, 18078, 20703, 14845, 18079, 
            20704, 14846, 8714, 14847, 20834, 14984, 14848, 20835, 14985, 
            14849}], 
           
           Line3DBox[{14851, 18080, 20705, 14850, 18081, 20706, 14852, 18082, 
            20707, 14853, 18083, 20708, 14854, 18084, 20709, 14855, 18085, 
            20710, 14856, 18086, 20711, 14857, 18087, 20712, 14858, 18088, 
            20713, 14859, 18089, 20714, 14860, 18090, 20715, 14861, 18091, 
            20716, 14862, 18092, 20717, 14863, 8730, 14864, 20836, 14986, 
            14865}], 
           
           Line3DBox[{14867, 18093, 20718, 14866, 18094, 20719, 14868, 18095, 
            20720, 14869, 18096, 20721, 14870, 18097, 20722, 14871, 18098, 
            20723, 14872, 18099, 20724, 14873, 18100, 20725, 14874, 18101, 
            20726, 14875, 18102, 20727, 14876, 18103, 20728, 14877, 18104, 
            20729, 14878, 18105, 20730, 14879, 18106, 20731, 14880, 8746, 
            14881}], 
           
           Line3DBox[{14988, 8987, 14987, 20942, 15227, 14989, 20943, 15228, 
            14990, 20944, 15229, 14991, 20945, 15230, 14992, 20946, 15231, 
            14993, 20947, 15232, 14994, 20948, 15233, 14995, 20949, 15234, 
            14996, 20950, 15235, 14997, 20951, 15236, 14998, 20952, 15237, 
            14999, 20953, 15238, 15000, 20954, 15239, 15001, 20955, 15240, 
            15002}], 
           
           Line3DBox[{15004, 18107, 20837, 15003, 9003, 15005, 20956, 15241, 
            15006, 20957, 15242, 15007, 20958, 15243, 15008, 20959, 15244, 
            15009, 20960, 15245, 15010, 20961, 15246, 15011, 20962, 15247, 
            15012, 20963, 15248, 15013, 20964, 15249, 15014, 20965, 15250, 
            15015, 20966, 15251, 15016, 20967, 15252, 15017, 20968, 15253, 
            15018}], 
           
           Line3DBox[{15020, 18108, 20838, 15019, 18109, 20839, 15021, 9019, 
            15022, 20969, 15254, 15023, 20970, 15255, 15024, 20971, 15256, 
            15025, 20972, 15257, 15026, 20973, 15258, 15027, 20974, 15259, 
            15028, 20975, 15260, 15029, 20976, 15261, 15030, 20977, 15262, 
            15031, 20978, 15263, 15032, 20979, 15264, 15033, 20980, 15265, 
            15034}], 
           
           Line3DBox[{15036, 18110, 20840, 15035, 18111, 20841, 15037, 18112, 
            20842, 15038, 9035, 15039, 20981, 15266, 15040, 20982, 15267, 
            15041, 20983, 15268, 15042, 20984, 15269, 15043, 20985, 15270, 
            15044, 20986, 15271, 15045, 20987, 15272, 15046, 20988, 15273, 
            15047, 20989, 15274, 15048, 20990, 15275, 15049, 20991, 15276, 
            15050}], 
           
           Line3DBox[{15052, 18113, 20843, 15051, 18114, 20844, 15053, 18115, 
            20845, 15054, 18116, 20846, 15055, 9051, 15056, 20992, 15277, 
            15057, 20993, 15278, 15058, 20994, 15279, 15059, 20995, 15280, 
            15060, 20996, 15281, 15061, 20997, 15282, 15062, 20998, 15283, 
            15063, 20999, 15284, 15064, 21000, 15285, 15065, 21001, 15286, 
            15066}], 
           
           Line3DBox[{15068, 18117, 20847, 15067, 18118, 20848, 15069, 18119, 
            20849, 15070, 18120, 20850, 15071, 18121, 20851, 15072, 9067, 
            15073, 21002, 15287, 15074, 21003, 15288, 15075, 21004, 15289, 
            15076, 21005, 15290, 15077, 21006, 15291, 15078, 21007, 15292, 
            15079, 21008, 15293, 15080, 21009, 15294, 15081, 21010, 15295, 
            15082}], 
           
           Line3DBox[{15084, 18122, 20852, 15083, 18123, 20853, 15085, 18124, 
            20854, 15086, 18125, 20855, 15087, 18126, 20856, 15088, 18127, 
            20857, 15089, 9083, 15090, 21011, 15296, 15091, 21012, 15297, 
            15092, 21013, 15298, 15093, 21014, 15299, 15094, 21015, 15300, 
            15095, 21016, 15301, 15096, 21017, 15302, 15097, 21018, 15303, 
            15098}], 
           
           Line3DBox[{15100, 18128, 20858, 15099, 18129, 20859, 15101, 18130, 
            20860, 15102, 18131, 20861, 15103, 18132, 20862, 15104, 18133, 
            20863, 15105, 18134, 20864, 15106, 9099, 15107, 21019, 15304, 
            15108, 21020, 15305, 15109, 21021, 15306, 15110, 21022, 15307, 
            15111, 21023, 15308, 15112, 21024, 15309, 15113, 21025, 15310, 
            15114}], 
           
           Line3DBox[{15116, 18135, 20865, 15115, 18136, 20866, 15117, 18137, 
            20867, 15118, 18138, 20868, 15119, 18139, 20869, 15120, 18140, 
            20870, 15121, 18141, 20871, 15122, 18142, 20872, 15123, 9115, 
            15124, 21026, 15311, 15125, 21027, 15312, 15126, 21028, 15313, 
            15127, 21029, 15314, 15128, 21030, 15315, 15129, 21031, 15316, 
            15130}], 
           
           Line3DBox[{15132, 18143, 20873, 15131, 18144, 20874, 15133, 18145, 
            20875, 15134, 18146, 20876, 15135, 18147, 20877, 15136, 18148, 
            20878, 15137, 18149, 20879, 15138, 18150, 20880, 15139, 18151, 
            20881, 15140, 9131, 15141, 21032, 15317, 15142, 21033, 15318, 
            15143, 21034, 15319, 15144, 21035, 15320, 15145, 21036, 15321, 
            15146}], 
           
           Line3DBox[{15148, 18152, 20882, 15147, 18153, 20883, 15149, 18154, 
            20884, 15150, 18155, 20885, 15151, 18156, 20886, 15152, 18157, 
            20887, 15153, 18158, 20888, 15154, 18159, 20889, 15155, 18160, 
            20890, 15156, 18161, 20891, 15157, 9147, 15158, 21037, 15322, 
            15159, 21038, 15323, 15160, 21039, 15324, 15161, 21040, 15325, 
            15162}], 
           
           Line3DBox[{15164, 18162, 20892, 15163, 18163, 20893, 15165, 18164, 
            20894, 15166, 18165, 20895, 15167, 18166, 20896, 15168, 18167, 
            20897, 15169, 18168, 20898, 15170, 18169, 20899, 15171, 18170, 
            20900, 15172, 18171, 20901, 15173, 18172, 20902, 15174, 9163, 
            15175, 21041, 15326, 15176, 21042, 15327, 15177, 21043, 15328, 
            15178}], 
           
           Line3DBox[{15180, 18173, 20903, 15179, 18174, 20904, 15181, 18175, 
            20905, 15182, 18176, 20906, 15183, 18177, 20907, 15184, 18178, 
            20908, 15185, 18179, 20909, 15186, 18180, 20910, 15187, 18181, 
            20911, 15188, 18182, 20912, 15189, 18183, 20913, 15190, 18184, 
            20914, 15191, 9179, 15192, 21044, 15329, 15193, 21045, 15330, 
            15194}], 
           
           Line3DBox[{15196, 18185, 20915, 15195, 18186, 20916, 15197, 18187, 
            20917, 15198, 18188, 20918, 15199, 18189, 20919, 15200, 18190, 
            20920, 15201, 18191, 20921, 15202, 18192, 20922, 15203, 18193, 
            20923, 15204, 18194, 20924, 15205, 18195, 20925, 15206, 18196, 
            20926, 15207, 18197, 20927, 15208, 9195, 15209, 21046, 15331, 
            15210}], 
           
           Line3DBox[{15212, 18198, 20928, 15211, 18199, 20929, 15213, 18200, 
            20930, 15214, 18201, 20931, 15215, 18202, 20932, 15216, 18203, 
            20933, 15217, 18204, 20934, 15218, 18205, 20935, 15219, 18206, 
            20936, 15220, 18207, 20937, 15221, 18208, 20938, 15222, 18209, 
            20939, 15223, 18210, 20940, 15224, 18211, 20941, 15225, 9211, 
            15226}], 
           
           Line3DBox[{15333, 9452, 15332, 21152, 15572, 15334, 21153, 15573, 
            15335, 21154, 15574, 15336, 21155, 15575, 15337, 21156, 15576, 
            15338, 21157, 15577, 15339, 21158, 15578, 15340, 21159, 15579, 
            15341, 21160, 15580, 15342, 21161, 15581, 15343, 21162, 15582, 
            15344, 21163, 15583, 15345, 21164, 15584, 15346, 21165, 15585, 
            15347}], 
           
           Line3DBox[{15349, 18212, 21047, 15348, 9468, 15350, 21166, 15586, 
            15351, 21167, 15587, 15352, 21168, 15588, 15353, 21169, 15589, 
            15354, 21170, 15590, 15355, 21171, 15591, 15356, 21172, 15592, 
            15357, 21173, 15593, 15358, 21174, 15594, 15359, 21175, 15595, 
            15360, 21176, 15596, 15361, 21177, 15597, 15362, 21178, 15598, 
            15363}], 
           
           Line3DBox[{15365, 18213, 21048, 15364, 18214, 21049, 15366, 9484, 
            15367, 21179, 15599, 15368, 21180, 15600, 15369, 21181, 15601, 
            15370, 21182, 15602, 15371, 21183, 15603, 15372, 21184, 15604, 
            15373, 21185, 15605, 15374, 21186, 15606, 15375, 21187, 15607, 
            15376, 21188, 15608, 15377, 21189, 15609, 15378, 21190, 15610, 
            15379}], 
           
           Line3DBox[{15381, 18215, 21050, 15380, 18216, 21051, 15382, 18217, 
            21052, 15383, 9500, 15384, 21191, 15611, 15385, 21192, 15612, 
            15386, 21193, 15613, 15387, 21194, 15614, 15388, 21195, 15615, 
            15389, 21196, 15616, 15390, 21197, 15617, 15391, 21198, 15618, 
            15392, 21199, 15619, 15393, 21200, 15620, 15394, 21201, 15621, 
            15395}], 
           
           Line3DBox[{15397, 18218, 21053, 15396, 18219, 21054, 15398, 18220, 
            21055, 15399, 18221, 21056, 15400, 9516, 15401, 21202, 15622, 
            15402, 21203, 15623, 15403, 21204, 15624, 15404, 21205, 15625, 
            15405, 21206, 15626, 15406, 21207, 15627, 15407, 21208, 15628, 
            15408, 21209, 15629, 15409, 21210, 15630, 15410, 21211, 15631, 
            15411}], 
           
           Line3DBox[{15413, 18222, 21057, 15412, 18223, 21058, 15414, 18224, 
            21059, 15415, 18225, 21060, 15416, 18226, 21061, 15417, 9532, 
            15418, 21212, 15632, 15419, 21213, 15633, 15420, 21214, 15634, 
            15421, 21215, 15635, 15422, 21216, 15636, 15423, 21217, 15637, 
            15424, 21218, 15638, 15425, 21219, 15639, 15426, 21220, 15640, 
            15427}], 
           
           Line3DBox[{15429, 18227, 21062, 15428, 18228, 21063, 15430, 18229, 
            21064, 15431, 18230, 21065, 15432, 18231, 21066, 15433, 18232, 
            21067, 15434, 9548, 15435, 21221, 15641, 15436, 21222, 15642, 
            15437, 21223, 15643, 15438, 21224, 15644, 15439, 21225, 15645, 
            15440, 21226, 15646, 15441, 21227, 15647, 15442, 21228, 15648, 
            15443}], 
           
           Line3DBox[{15445, 18233, 21068, 15444, 18234, 21069, 15446, 18235, 
            21070, 15447, 18236, 21071, 15448, 18237, 21072, 15449, 18238, 
            21073, 15450, 18239, 21074, 15451, 9564, 15452, 21229, 15649, 
            15453, 21230, 15650, 15454, 21231, 15651, 15455, 21232, 15652, 
            15456, 21233, 15653, 15457, 21234, 15654, 15458, 21235, 15655, 
            15459}], 
           
           Line3DBox[{15461, 18240, 21075, 15460, 18241, 21076, 15462, 18242, 
            21077, 15463, 18243, 21078, 15464, 18244, 21079, 15465, 18245, 
            21080, 15466, 18246, 21081, 15467, 18247, 21082, 15468, 9580, 
            15469, 21236, 15656, 15470, 21237, 15657, 15471, 21238, 15658, 
            15472, 21239, 15659, 15473, 21240, 15660, 15474, 21241, 15661, 
            15475}], 
           
           Line3DBox[{15477, 18248, 21083, 15476, 18249, 21084, 15478, 18250, 
            21085, 15479, 18251, 21086, 15480, 18252, 21087, 15481, 18253, 
            21088, 15482, 18254, 21089, 15483, 18255, 21090, 15484, 18256, 
            21091, 15485, 9596, 15486, 21242, 15662, 15487, 21243, 15663, 
            15488, 21244, 15664, 15489, 21245, 15665, 15490, 21246, 15666, 
            15491}], 
           
           Line3DBox[{15493, 18257, 21092, 15492, 18258, 21093, 15494, 18259, 
            21094, 15495, 18260, 21095, 15496, 18261, 21096, 15497, 18262, 
            21097, 15498, 18263, 21098, 15499, 18264, 21099, 15500, 18265, 
            21100, 15501, 18266, 21101, 15502, 9612, 15503, 21247, 15667, 
            15504, 21248, 15668, 15505, 21249, 15669, 15506, 21250, 15670, 
            15507}], 
           
           Line3DBox[{15509, 18267, 21102, 15508, 18268, 21103, 15510, 18269, 
            21104, 15511, 18270, 21105, 15512, 18271, 21106, 15513, 18272, 
            21107, 15514, 18273, 21108, 15515, 18274, 21109, 15516, 18275, 
            21110, 15517, 18276, 21111, 15518, 18277, 21112, 15519, 9628, 
            15520, 21251, 15671, 15521, 21252, 15672, 15522, 21253, 15673, 
            15523}], 
           
           Line3DBox[{15525, 18278, 21113, 15524, 18279, 21114, 15526, 18280, 
            21115, 15527, 18281, 21116, 15528, 18282, 21117, 15529, 18283, 
            21118, 15530, 18284, 21119, 15531, 18285, 21120, 15532, 18286, 
            21121, 15533, 18287, 21122, 15534, 18288, 21123, 15535, 18289, 
            21124, 15536, 9644, 15537, 21254, 15674, 15538, 21255, 15675, 
            15539}], 
           
           Line3DBox[{15541, 18290, 21125, 15540, 18291, 21126, 15542, 18292, 
            21127, 15543, 18293, 21128, 15544, 18294, 21129, 15545, 18295, 
            21130, 15546, 18296, 21131, 15547, 18297, 21132, 15548, 18298, 
            21133, 15549, 18299, 21134, 15550, 18300, 21135, 15551, 18301, 
            21136, 15552, 18302, 21137, 15553, 9660, 15554, 21256, 15676, 
            15555}], 
           
           Line3DBox[{15557, 18303, 21138, 15556, 18304, 21139, 15558, 18305, 
            21140, 15559, 18306, 21141, 15560, 18307, 21142, 15561, 18308, 
            21143, 15562, 18309, 21144, 15563, 18310, 21145, 15564, 18311, 
            21146, 15565, 18312, 21147, 15566, 18313, 21148, 15567, 18314, 
            21149, 15568, 18315, 21150, 15569, 18316, 21151, 15570, 9676, 
            15571}], 
           
           Line3DBox[{15678, 9917, 15677, 21362, 15917, 15679, 21363, 15918, 
            15680, 21364, 15919, 15681, 21365, 15920, 15682, 21366, 15921, 
            15683, 21367, 15922, 15684, 21368, 15923, 15685, 21369, 15924, 
            15686, 21370, 15925, 15687, 21371, 15926, 15688, 21372, 15927, 
            15689, 21373, 15928, 15690, 21374, 15929, 15691, 21375, 15930, 
            15692}], 
           
           Line3DBox[{15694, 18317, 21257, 15693, 9933, 15695, 21376, 15931, 
            15696, 21377, 15932, 15697, 21378, 15933, 15698, 21379, 15934, 
            15699, 21380, 15935, 15700, 21381, 15936, 15701, 21382, 15937, 
            15702, 21383, 15938, 15703, 21384, 15939, 15704, 21385, 15940, 
            15705, 21386, 15941, 15706, 21387, 15942, 15707, 21388, 15943, 
            15708}], 
           
           Line3DBox[{15710, 18318, 21258, 15709, 18319, 21259, 15711, 9949, 
            15712, 21389, 15944, 15713, 21390, 15945, 15714, 21391, 15946, 
            15715, 21392, 15947, 15716, 21393, 15948, 15717, 21394, 15949, 
            15718, 21395, 15950, 15719, 21396, 15951, 15720, 21397, 15952, 
            15721, 21398, 15953, 15722, 21399, 15954, 15723, 21400, 15955, 
            15724}], 
           
           Line3DBox[{15726, 18320, 21260, 15725, 18321, 21261, 15727, 18322, 
            21262, 15728, 9965, 15729, 21401, 15956, 15730, 21402, 15957, 
            15731, 21403, 15958, 15732, 21404, 15959, 15733, 21405, 15960, 
            15734, 21406, 15961, 15735, 21407, 15962, 15736, 21408, 15963, 
            15737, 21409, 15964, 15738, 21410, 15965, 15739, 21411, 15966, 
            15740}], 
           
           Line3DBox[{15742, 18323, 21263, 15741, 18324, 21264, 15743, 18325, 
            21265, 15744, 18326, 21266, 15745, 9981, 15746, 21412, 15967, 
            15747, 21413, 15968, 15748, 21414, 15969, 15749, 21415, 15970, 
            15750, 21416, 15971, 15751, 21417, 15972, 15752, 21418, 15973, 
            15753, 21419, 15974, 15754, 21420, 15975, 15755, 21421, 15976, 
            15756}], 
           
           Line3DBox[{15758, 18327, 21267, 15757, 18328, 21268, 15759, 18329, 
            21269, 15760, 18330, 21270, 15761, 18331, 21271, 15762, 9997, 
            15763, 21422, 15977, 15764, 21423, 15978, 15765, 21424, 15979, 
            15766, 21425, 15980, 15767, 21426, 15981, 15768, 21427, 15982, 
            15769, 21428, 15983, 15770, 21429, 15984, 15771, 21430, 15985, 
            15772}], 
           
           Line3DBox[{15774, 18332, 21272, 15773, 18333, 21273, 15775, 18334, 
            21274, 15776, 18335, 21275, 15777, 18336, 21276, 15778, 18337, 
            21277, 15779, 10013, 15780, 21431, 15986, 15781, 21432, 15987, 
            15782, 21433, 15988, 15783, 21434, 15989, 15784, 21435, 15990, 
            15785, 21436, 15991, 15786, 21437, 15992, 15787, 21438, 15993, 
            15788}], 
           
           Line3DBox[{15790, 18338, 21278, 15789, 18339, 21279, 15791, 18340, 
            21280, 15792, 18341, 21281, 15793, 18342, 21282, 15794, 18343, 
            21283, 15795, 18344, 21284, 15796, 10029, 15797, 21439, 15994, 
            15798, 21440, 15995, 15799, 21441, 15996, 15800, 21442, 15997, 
            15801, 21443, 15998, 15802, 21444, 15999, 15803, 21445, 16000, 
            15804}], 
           
           Line3DBox[{15806, 18345, 21285, 15805, 18346, 21286, 15807, 18347, 
            21287, 15808, 18348, 21288, 15809, 18349, 21289, 15810, 18350, 
            21290, 15811, 18351, 21291, 15812, 18352, 21292, 15813, 10045, 
            15814, 21446, 16001, 15815, 21447, 16002, 15816, 21448, 16003, 
            15817, 21449, 16004, 15818, 21450, 16005, 15819, 21451, 16006, 
            15820}], 
           
           Line3DBox[{15822, 18353, 21293, 15821, 18354, 21294, 15823, 18355, 
            21295, 15824, 18356, 21296, 15825, 18357, 21297, 15826, 18358, 
            21298, 15827, 18359, 21299, 15828, 18360, 21300, 15829, 18361, 
            21301, 15830, 10061, 15831, 21452, 16007, 15832, 21453, 16008, 
            15833, 21454, 16009, 15834, 21455, 16010, 15835, 21456, 16011, 
            15836}], 
           
           Line3DBox[{15838, 18362, 21302, 15837, 18363, 21303, 15839, 18364, 
            21304, 15840, 18365, 21305, 15841, 18366, 21306, 15842, 18367, 
            21307, 15843, 18368, 21308, 15844, 18369, 21309, 15845, 18370, 
            21310, 15846, 18371, 21311, 15847, 10077, 15848, 21457, 16012, 
            15849, 21458, 16013, 15850, 21459, 16014, 15851, 21460, 16015, 
            15852}], 
           
           Line3DBox[{15854, 18372, 21312, 15853, 18373, 21313, 15855, 18374, 
            21314, 15856, 18375, 21315, 15857, 18376, 21316, 15858, 18377, 
            21317, 15859, 18378, 21318, 15860, 18379, 21319, 15861, 18380, 
            21320, 15862, 18381, 21321, 15863, 18382, 21322, 15864, 10093, 
            15865, 21461, 16016, 15866, 21462, 16017, 15867, 21463, 16018, 
            15868}], 
           
           Line3DBox[{15870, 18383, 21323, 15869, 18384, 21324, 15871, 18385, 
            21325, 15872, 18386, 21326, 15873, 18387, 21327, 15874, 18388, 
            21328, 15875, 18389, 21329, 15876, 18390, 21330, 15877, 18391, 
            21331, 15878, 18392, 21332, 15879, 18393, 21333, 15880, 18394, 
            21334, 15881, 10109, 15882, 21464, 16019, 15883, 21465, 16020, 
            15884}], 
           
           Line3DBox[{15886, 18395, 21335, 15885, 18396, 21336, 15887, 18397, 
            21337, 15888, 18398, 21338, 15889, 18399, 21339, 15890, 18400, 
            21340, 15891, 18401, 21341, 15892, 18402, 21342, 15893, 18403, 
            21343, 15894, 18404, 21344, 15895, 18405, 21345, 15896, 18406, 
            21346, 15897, 18407, 21347, 15898, 10125, 15899, 21466, 16021, 
            15900}], 
           
           Line3DBox[{15902, 18408, 21348, 15901, 18409, 21349, 15903, 18410, 
            21350, 15904, 18411, 21351, 15905, 18412, 21352, 15906, 18413, 
            21353, 15907, 18414, 21354, 15908, 18415, 21355, 15909, 18416, 
            21356, 15910, 18417, 21357, 15911, 18418, 21358, 15912, 18419, 
            21359, 15913, 18420, 21360, 15914, 18421, 21361, 15915, 10141, 
            15916}], 
           
           Line3DBox[{16023, 10382, 16022, 21572, 16262, 16024, 21573, 16263, 
            16025, 21574, 16264, 16026, 21575, 16265, 16027, 21576, 16266, 
            16028, 21577, 16267, 16029, 21578, 16268, 16030, 21579, 16269, 
            16031, 21580, 16270, 16032, 21581, 16271, 16033, 21582, 16272, 
            16034, 21583, 16273, 16035, 21584, 16274, 16036, 21585, 16275, 
            16037}], 
           
           Line3DBox[{16039, 18422, 21467, 16038, 10398, 16040, 21586, 16276, 
            16041, 21587, 16277, 16042, 21588, 16278, 16043, 21589, 16279, 
            16044, 21590, 16280, 16045, 21591, 16281, 16046, 21592, 16282, 
            16047, 21593, 16283, 16048, 21594, 16284, 16049, 21595, 16285, 
            16050, 21596, 16286, 16051, 21597, 16287, 16052, 21598, 16288, 
            16053}], 
           
           Line3DBox[{16055, 18423, 21468, 16054, 18424, 21469, 16056, 10414, 
            16057, 21599, 16289, 16058, 21600, 16290, 16059, 21601, 16291, 
            16060, 21602, 16292, 16061, 21603, 16293, 16062, 21604, 16294, 
            16063, 21605, 16295, 16064, 21606, 16296, 16065, 21607, 16297, 
            16066, 21608, 16298, 16067, 21609, 16299, 16068, 21610, 16300, 
            16069}], 
           
           Line3DBox[{16071, 18425, 21470, 16070, 18426, 21471, 16072, 18427, 
            21472, 16073, 10430, 16074, 21611, 16301, 16075, 21612, 16302, 
            16076, 21613, 16303, 16077, 21614, 16304, 16078, 21615, 16305, 
            16079, 21616, 16306, 16080, 21617, 16307, 16081, 21618, 16308, 
            16082, 21619, 16309, 16083, 21620, 16310, 16084, 21621, 16311, 
            16085}], 
           
           Line3DBox[{16087, 18428, 21473, 16086, 18429, 21474, 16088, 18430, 
            21475, 16089, 18431, 21476, 16090, 10446, 16091, 21622, 16312, 
            16092, 21623, 16313, 16093, 21624, 16314, 16094, 21625, 16315, 
            16095, 21626, 16316, 16096, 21627, 16317, 16097, 21628, 16318, 
            16098, 21629, 16319, 16099, 21630, 16320, 16100, 21631, 16321, 
            16101}], 
           
           Line3DBox[{16103, 18432, 21477, 16102, 18433, 21478, 16104, 18434, 
            21479, 16105, 18435, 21480, 16106, 18436, 21481, 16107, 10462, 
            16108, 21632, 16322, 16109, 21633, 16323, 16110, 21634, 16324, 
            16111, 21635, 16325, 16112, 21636, 16326, 16113, 21637, 16327, 
            16114, 21638, 16328, 16115, 21639, 16329, 16116, 21640, 16330, 
            16117}], 
           
           Line3DBox[{16119, 18437, 21482, 16118, 18438, 21483, 16120, 18439, 
            21484, 16121, 18440, 21485, 16122, 18441, 21486, 16123, 18442, 
            21487, 16124, 10478, 16125, 21641, 16331, 16126, 21642, 16332, 
            16127, 21643, 16333, 16128, 21644, 16334, 16129, 21645, 16335, 
            16130, 21646, 16336, 16131, 21647, 16337, 16132, 21648, 16338, 
            16133}], 
           
           Line3DBox[{16135, 18443, 21488, 16134, 18444, 21489, 16136, 18445, 
            21490, 16137, 18446, 21491, 16138, 18447, 21492, 16139, 18448, 
            21493, 16140, 18449, 21494, 16141, 10494, 16142, 21649, 16339, 
            16143, 21650, 16340, 16144, 21651, 16341, 16145, 21652, 16342, 
            16146, 21653, 16343, 16147, 21654, 16344, 16148, 21655, 16345, 
            16149}], 
           
           Line3DBox[{16151, 18450, 21495, 16150, 18451, 21496, 16152, 18452, 
            21497, 16153, 18453, 21498, 16154, 18454, 21499, 16155, 18455, 
            21500, 16156, 18456, 21501, 16157, 18457, 21502, 16158, 10510, 
            16159, 21656, 16346, 16160, 21657, 16347, 16161, 21658, 16348, 
            16162, 21659, 16349, 16163, 21660, 16350, 16164, 21661, 16351, 
            16165}], 
           
           Line3DBox[{16167, 18458, 21503, 16166, 18459, 21504, 16168, 18460, 
            21505, 16169, 18461, 21506, 16170, 18462, 21507, 16171, 18463, 
            21508, 16172, 18464, 21509, 16173, 18465, 21510, 16174, 18466, 
            21511, 16175, 10526, 16176, 21662, 16352, 16177, 21663, 16353, 
            16178, 21664, 16354, 16179, 21665, 16355, 16180, 21666, 16356, 
            16181}], 
           
           Line3DBox[{16183, 18467, 21512, 16182, 18468, 21513, 16184, 18469, 
            21514, 16185, 18470, 21515, 16186, 18471, 21516, 16187, 18472, 
            21517, 16188, 18473, 21518, 16189, 18474, 21519, 16190, 18475, 
            21520, 16191, 18476, 21521, 16192, 10542, 16193, 21667, 16357, 
            16194, 21668, 16358, 16195, 21669, 16359, 16196, 21670, 16360, 
            16197}], 
           
           Line3DBox[{16199, 18477, 21522, 16198, 18478, 21523, 16200, 18479, 
            21524, 16201, 18480, 21525, 16202, 18481, 21526, 16203, 18482, 
            21527, 16204, 18483, 21528, 16205, 18484, 21529, 16206, 18485, 
            21530, 16207, 18486, 21531, 16208, 18487, 21532, 16209, 10558, 
            16210, 21671, 16361, 16211, 21672, 16362, 16212, 21673, 16363, 
            16213}], 
           
           Line3DBox[{16215, 18488, 21533, 16214, 18489, 21534, 16216, 18490, 
            21535, 16217, 18491, 21536, 16218, 18492, 21537, 16219, 18493, 
            21538, 16220, 18494, 21539, 16221, 18495, 21540, 16222, 18496, 
            21541, 16223, 18497, 21542, 16224, 18498, 21543, 16225, 18499, 
            21544, 16226, 10574, 16227, 21674, 16364, 16228, 21675, 16365, 
            16229}], 
           
           Line3DBox[{16231, 18500, 21545, 16230, 18501, 21546, 16232, 18502, 
            21547, 16233, 18503, 21548, 16234, 18504, 21549, 16235, 18505, 
            21550, 16236, 18506, 21551, 16237, 18507, 21552, 16238, 18508, 
            21553, 16239, 18509, 21554, 16240, 18510, 21555, 16241, 18511, 
            21556, 16242, 18512, 21557, 16243, 10590, 16244, 21676, 16366, 
            16245}], 
           
           Line3DBox[{16247, 18513, 21558, 16246, 18514, 21559, 16248, 18515, 
            21560, 16249, 18516, 21561, 16250, 18517, 21562, 16251, 18518, 
            21563, 16252, 18519, 21564, 16253, 18520, 21565, 16254, 18521, 
            21566, 16255, 18522, 21567, 16256, 18523, 21568, 16257, 18524, 
            21569, 16258, 18525, 21570, 16259, 18526, 21571, 16260, 10606, 
            16261}], 
           
           Line3DBox[{16368, 10847, 16367, 21782, 16607, 16369, 21783, 16608, 
            16370, 21784, 16609, 16371, 21785, 16610, 16372, 21786, 16611, 
            16373, 21787, 16612, 16374, 21788, 16613, 16375, 21789, 16614, 
            16376, 21790, 16615, 16377, 21791, 16616, 16378, 21792, 16617, 
            16379, 21793, 16618, 16380, 21794, 16619, 16381, 21795, 16620, 
            16382}], 
           
           Line3DBox[{16384, 18527, 21677, 16383, 10863, 16385, 21796, 16621, 
            16386, 21797, 16622, 16387, 21798, 16623, 16388, 21799, 16624, 
            16389, 21800, 16625, 16390, 21801, 16626, 16391, 21802, 16627, 
            16392, 21803, 16628, 16393, 21804, 16629, 16394, 21805, 16630, 
            16395, 21806, 16631, 16396, 21807, 16632, 16397, 21808, 16633, 
            16398}], 
           
           Line3DBox[{16400, 18528, 21678, 16399, 18529, 21679, 16401, 10879, 
            16402, 21809, 16634, 16403, 21810, 16635, 16404, 21811, 16636, 
            16405, 21812, 16637, 16406, 21813, 16638, 16407, 21814, 16639, 
            16408, 21815, 16640, 16409, 21816, 16641, 16410, 21817, 16642, 
            16411, 21818, 16643, 16412, 21819, 16644, 16413, 21820, 16645, 
            16414}], 
           
           Line3DBox[{16416, 18530, 21680, 16415, 18531, 21681, 16417, 18532, 
            21682, 16418, 10895, 16419, 21821, 16646, 16420, 21822, 16647, 
            16421, 21823, 16648, 16422, 21824, 16649, 16423, 21825, 16650, 
            16424, 21826, 16651, 16425, 21827, 16652, 16426, 21828, 16653, 
            16427, 21829, 16654, 16428, 21830, 16655, 16429, 21831, 16656, 
            16430}], 
           
           Line3DBox[{16432, 18533, 21683, 16431, 18534, 21684, 16433, 18535, 
            21685, 16434, 18536, 21686, 16435, 10911, 16436, 21832, 16657, 
            16437, 21833, 16658, 16438, 21834, 16659, 16439, 21835, 16660, 
            16440, 21836, 16661, 16441, 21837, 16662, 16442, 21838, 16663, 
            16443, 21839, 16664, 16444, 21840, 16665, 16445, 21841, 16666, 
            16446}], 
           
           Line3DBox[{16448, 18537, 21687, 16447, 18538, 21688, 16449, 18539, 
            21689, 16450, 18540, 21690, 16451, 18541, 21691, 16452, 10927, 
            16453, 21842, 16667, 16454, 21843, 16668, 16455, 21844, 16669, 
            16456, 21845, 16670, 16457, 21846, 16671, 16458, 21847, 16672, 
            16459, 21848, 16673, 16460, 21849, 16674, 16461, 21850, 16675, 
            16462}], 
           
           Line3DBox[{16464, 18542, 21692, 16463, 18543, 21693, 16465, 18544, 
            21694, 16466, 18545, 21695, 16467, 18546, 21696, 16468, 18547, 
            21697, 16469, 10943, 16470, 21851, 16676, 16471, 21852, 16677, 
            16472, 21853, 16678, 16473, 21854, 16679, 16474, 21855, 16680, 
            16475, 21856, 16681, 16476, 21857, 16682, 16477, 21858, 16683, 
            16478}], 
           
           Line3DBox[{16480, 18548, 21698, 16479, 18549, 21699, 16481, 18550, 
            21700, 16482, 18551, 21701, 16483, 18552, 21702, 16484, 18553, 
            21703, 16485, 18554, 21704, 16486, 10959, 16487, 21859, 16684, 
            16488, 21860, 16685, 16489, 21861, 16686, 16490, 21862, 16687, 
            16491, 21863, 16688, 16492, 21864, 16689, 16493, 21865, 16690, 
            16494}], 
           
           Line3DBox[{16496, 18555, 21705, 16495, 18556, 21706, 16497, 18557, 
            21707, 16498, 18558, 21708, 16499, 18559, 21709, 16500, 18560, 
            21710, 16501, 18561, 21711, 16502, 18562, 21712, 16503, 10975, 
            16504, 21866, 16691, 16505, 21867, 16692, 16506, 21868, 16693, 
            16507, 21869, 16694, 16508, 21870, 16695, 16509, 21871, 16696, 
            16510}], 
           
           Line3DBox[{16512, 18563, 21713, 16511, 18564, 21714, 16513, 18565, 
            21715, 16514, 18566, 21716, 16515, 18567, 21717, 16516, 18568, 
            21718, 16517, 18569, 21719, 16518, 18570, 21720, 16519, 18571, 
            21721, 16520, 10991, 16521, 21872, 16697, 16522, 21873, 16698, 
            16523, 21874, 16699, 16524, 21875, 16700, 16525, 21876, 16701, 
            16526}], 
           
           Line3DBox[{16528, 18572, 21722, 16527, 18573, 21723, 16529, 18574, 
            21724, 16530, 18575, 21725, 16531, 18576, 21726, 16532, 18577, 
            21727, 16533, 18578, 21728, 16534, 18579, 21729, 16535, 18580, 
            21730, 16536, 18581, 21731, 16537, 11007, 16538, 21877, 16702, 
            16539, 21878, 16703, 16540, 21879, 16704, 16541, 21880, 16705, 
            16542}], 
           
           Line3DBox[{16544, 18582, 21732, 16543, 18583, 21733, 16545, 18584, 
            21734, 16546, 18585, 21735, 16547, 18586, 21736, 16548, 18587, 
            21737, 16549, 18588, 21738, 16550, 18589, 21739, 16551, 18590, 
            21740, 16552, 18591, 21741, 16553, 18592, 21742, 16554, 11023, 
            16555, 21881, 16706, 16556, 21882, 16707, 16557, 21883, 16708, 
            16558}], 
           
           Line3DBox[{16560, 18593, 21743, 16559, 18594, 21744, 16561, 18595, 
            21745, 16562, 18596, 21746, 16563, 18597, 21747, 16564, 18598, 
            21748, 16565, 18599, 21749, 16566, 18600, 21750, 16567, 18601, 
            21751, 16568, 18602, 21752, 16569, 18603, 21753, 16570, 18604, 
            21754, 16571, 11039, 16572, 21884, 16709, 16573, 21885, 16710, 
            16574}], 
           
           Line3DBox[{16576, 18605, 21755, 16575, 18606, 21756, 16577, 18607, 
            21757, 16578, 18608, 21758, 16579, 18609, 21759, 16580, 18610, 
            21760, 16581, 18611, 21761, 16582, 18612, 21762, 16583, 18613, 
            21763, 16584, 18614, 21764, 16585, 18615, 21765, 16586, 18616, 
            21766, 16587, 18617, 21767, 16588, 11055, 16589, 21886, 16711, 
            16590}], 
           
           Line3DBox[{16592, 18618, 21768, 16591, 18619, 21769, 16593, 18620, 
            21770, 16594, 18621, 21771, 16595, 18622, 21772, 16596, 18623, 
            21773, 16597, 18624, 21774, 16598, 18625, 21775, 16599, 18626, 
            21776, 16600, 18627, 21777, 16601, 18628, 21778, 16602, 18629, 
            21779, 16603, 18630, 21780, 16604, 18631, 21781, 16605, 11071, 
            16606}], 
           
           Line3DBox[{16713, 11312, 16712, 21992, 16952, 16714, 21993, 16953, 
            16715, 21994, 16954, 16716, 21995, 16955, 16717, 21996, 16956, 
            16718, 21997, 16957, 16719, 21998, 16958, 16720, 21999, 16959, 
            16721, 22000, 16960, 16722, 22001, 16961, 16723, 22002, 16962, 
            16724, 22003, 16963, 16725, 22004, 16964, 16726, 22005, 16965, 
            16727}], 
           
           Line3DBox[{16729, 18632, 21887, 16728, 11328, 16730, 22006, 16966, 
            16731, 22007, 16967, 16732, 22008, 16968, 16733, 22009, 16969, 
            16734, 22010, 16970, 16735, 22011, 16971, 16736, 22012, 16972, 
            16737, 22013, 16973, 16738, 22014, 16974, 16739, 22015, 16975, 
            16740, 22016, 16976, 16741, 22017, 16977, 16742, 22018, 16978, 
            16743}], 
           
           Line3DBox[{16745, 18633, 21888, 16744, 18634, 21889, 16746, 11344, 
            16747, 22019, 16979, 16748, 22020, 16980, 16749, 22021, 16981, 
            16750, 22022, 16982, 16751, 22023, 16983, 16752, 22024, 16984, 
            16753, 22025, 16985, 16754, 22026, 16986, 16755, 22027, 16987, 
            16756, 22028, 16988, 16757, 22029, 16989, 16758, 22030, 16990, 
            16759}], 
           
           Line3DBox[{16761, 18635, 21890, 16760, 18636, 21891, 16762, 18637, 
            21892, 16763, 11360, 16764, 22031, 16991, 16765, 22032, 16992, 
            16766, 22033, 16993, 16767, 22034, 16994, 16768, 22035, 16995, 
            16769, 22036, 16996, 16770, 22037, 16997, 16771, 22038, 16998, 
            16772, 22039, 16999, 16773, 22040, 17000, 16774, 22041, 17001, 
            16775}], 
           
           Line3DBox[{16777, 18638, 21893, 16776, 18639, 21894, 16778, 18640, 
            21895, 16779, 18641, 21896, 16780, 11376, 16781, 22042, 17002, 
            16782, 22043, 17003, 16783, 22044, 17004, 16784, 22045, 17005, 
            16785, 22046, 17006, 16786, 22047, 17007, 16787, 22048, 17008, 
            16788, 22049, 17009, 16789, 22050, 17010, 16790, 22051, 17011, 
            16791}], 
           
           Line3DBox[{16793, 18642, 21897, 16792, 18643, 21898, 16794, 18644, 
            21899, 16795, 18645, 21900, 16796, 18646, 21901, 16797, 11392, 
            16798, 22052, 17012, 16799, 22053, 17013, 16800, 22054, 17014, 
            16801, 22055, 17015, 16802, 22056, 17016, 16803, 22057, 17017, 
            16804, 22058, 17018, 16805, 22059, 17019, 16806, 22060, 17020, 
            16807}], 
           
           Line3DBox[{16809, 18647, 21902, 16808, 18648, 21903, 16810, 18649, 
            21904, 16811, 18650, 21905, 16812, 18651, 21906, 16813, 18652, 
            21907, 16814, 11408, 16815, 22061, 17021, 16816, 22062, 17022, 
            16817, 22063, 17023, 16818, 22064, 17024, 16819, 22065, 17025, 
            16820, 22066, 17026, 16821, 22067, 17027, 16822, 22068, 17028, 
            16823}], 
           
           Line3DBox[{16825, 18653, 21908, 16824, 18654, 21909, 16826, 18655, 
            21910, 16827, 18656, 21911, 16828, 18657, 21912, 16829, 18658, 
            21913, 16830, 18659, 21914, 16831, 11424, 16832, 22069, 17029, 
            16833, 22070, 17030, 16834, 22071, 17031, 16835, 22072, 17032, 
            16836, 22073, 17033, 16837, 22074, 17034, 16838, 22075, 17035, 
            16839}], 
           
           Line3DBox[{16841, 18660, 21915, 16840, 18661, 21916, 16842, 18662, 
            21917, 16843, 18663, 21918, 16844, 18664, 21919, 16845, 18665, 
            21920, 16846, 18666, 21921, 16847, 18667, 21922, 16848, 11440, 
            16849, 22076, 17036, 16850, 22077, 17037, 16851, 22078, 17038, 
            16852, 22079, 17039, 16853, 22080, 17040, 16854, 22081, 17041, 
            16855}], 
           
           Line3DBox[{16857, 18668, 21923, 16856, 18669, 21924, 16858, 18670, 
            21925, 16859, 18671, 21926, 16860, 18672, 21927, 16861, 18673, 
            21928, 16862, 18674, 21929, 16863, 18675, 21930, 16864, 18676, 
            21931, 16865, 11456, 16866, 22082, 17042, 16867, 22083, 17043, 
            16868, 22084, 17044, 16869, 22085, 17045, 16870, 22086, 17046, 
            16871}], 
           
           Line3DBox[{16873, 18677, 21932, 16872, 18678, 21933, 16874, 18679, 
            21934, 16875, 18680, 21935, 16876, 18681, 21936, 16877, 18682, 
            21937, 16878, 18683, 21938, 16879, 18684, 21939, 16880, 18685, 
            21940, 16881, 18686, 21941, 16882, 11472, 16883, 22087, 17047, 
            16884, 22088, 17048, 16885, 22089, 17049, 16886, 22090, 17050, 
            16887}], 
           
           Line3DBox[{16889, 18687, 21942, 16888, 18688, 21943, 16890, 18689, 
            21944, 16891, 18690, 21945, 16892, 18691, 21946, 16893, 18692, 
            21947, 16894, 18693, 21948, 16895, 18694, 21949, 16896, 18695, 
            21950, 16897, 18696, 21951, 16898, 18697, 21952, 16899, 11488, 
            16900, 22091, 17051, 16901, 22092, 17052, 16902, 22093, 17053, 
            16903}], 
           
           Line3DBox[{16905, 18698, 21953, 16904, 18699, 21954, 16906, 18700, 
            21955, 16907, 18701, 21956, 16908, 18702, 21957, 16909, 18703, 
            21958, 16910, 18704, 21959, 16911, 18705, 21960, 16912, 18706, 
            21961, 16913, 18707, 21962, 16914, 18708, 21963, 16915, 18709, 
            21964, 16916, 11504, 16917, 22094, 17054, 16918, 22095, 17055, 
            16919}], 
           
           Line3DBox[{16921, 18710, 21965, 16920, 18711, 21966, 16922, 18712, 
            21967, 16923, 18713, 21968, 16924, 18714, 21969, 16925, 18715, 
            21970, 16926, 18716, 21971, 16927, 18717, 21972, 16928, 18718, 
            21973, 16929, 18719, 21974, 16930, 18720, 21975, 16931, 18721, 
            21976, 16932, 18722, 21977, 16933, 11520, 16934, 22096, 17056, 
            16935}], 
           
           Line3DBox[{16937, 18723, 21978, 16936, 18724, 21979, 16938, 18725, 
            21980, 16939, 18726, 21981, 16940, 18727, 21982, 16941, 18728, 
            21983, 16942, 18729, 21984, 16943, 18730, 21985, 16944, 18731, 
            21986, 16945, 18732, 21987, 16946, 18733, 21988, 16947, 18734, 
            21989, 16948, 18735, 21990, 16949, 18736, 21991, 16950, 11536, 
            16951}]}, {
           GrayLevel[0.2], 
           
           Line3DBox[{4097, 4337, 4098, 18737, 4352, 4127, 18738, 4367, 4142, 
            18740, 4382, 4157, 18743, 4397, 4172, 18747, 4412, 4187, 18752, 
            4427, 4202, 18758, 4442, 4217, 18765, 4457, 4232, 18773, 4472, 
            4247, 18782, 4487, 4262, 18792, 4502, 4277, 18803, 4517, 4292, 
            18815, 4532, 4307, 18828, 4547, 4322}], 
           
           Line3DBox[{4099, 4338, 18842, 4100, 4353, 4128, 18739, 4368, 4143, 
            18741, 4383, 4158, 18744, 4398, 4173, 18748, 4413, 4188, 18753, 
            4428, 4203, 18759, 4443, 4218, 18766, 4458, 4233, 18774, 4473, 
            4248, 18783, 4488, 4263, 18793, 4503, 4278, 18804, 4518, 4293, 
            18816, 4533, 4308, 18829, 4548, 4323}], 
           
           Line3DBox[{4101, 4339, 18843, 4102, 4354, 18856, 4129, 4369, 4144, 
            18742, 4384, 4159, 18745, 4399, 4174, 18749, 4414, 4189, 18754, 
            4429, 4204, 18760, 4444, 4219, 18767, 4459, 4234, 18775, 4474, 
            4249, 18784, 4489, 4264, 18794, 4504, 4279, 18805, 4519, 4294, 
            18817, 4534, 4309, 18830, 4549, 4324}], 
           
           Line3DBox[{4103, 4340, 18844, 4104, 4355, 18857, 4130, 4370, 18869,
             4145, 4385, 4160, 18746, 4400, 4175, 18750, 4415, 4190, 18755, 
            4430, 4205, 18761, 4445, 4220, 18768, 4460, 4235, 18776, 4475, 
            4250, 18785, 4490, 4265, 18795, 4505, 4280, 18806, 4520, 4295, 
            18818, 4535, 4310, 18831, 4550, 4325}], 
           
           Line3DBox[{4105, 4341, 18845, 4106, 4356, 18858, 4131, 4371, 18870,
             4146, 4386, 18881, 4161, 4401, 4176, 18751, 4416, 4191, 18756, 
            4431, 4206, 18762, 4446, 4221, 18769, 4461, 4236, 18777, 4476, 
            4251, 18786, 4491, 4266, 18796, 4506, 4281, 18807, 4521, 4296, 
            18819, 4536, 4311, 18832, 4551, 4326}], 
           
           Line3DBox[{4107, 4342, 18846, 4108, 4357, 18859, 4132, 4372, 18871,
             4147, 4387, 18882, 4162, 4402, 18892, 4177, 4417, 4192, 18757, 
            4432, 4207, 18763, 4447, 4222, 18770, 4462, 4237, 18778, 4477, 
            4252, 18787, 4492, 4267, 18797, 4507, 4282, 18808, 4522, 4297, 
            18820, 4537, 4312, 18833, 4552, 4327}], 
           
           Line3DBox[{4109, 4343, 18847, 4110, 4358, 18860, 4133, 4373, 18872,
             4148, 4388, 18883, 4163, 4403, 18893, 4178, 4418, 18902, 4193, 
            4433, 4208, 18764, 4448, 4223, 18771, 4463, 4238, 18779, 4478, 
            4253, 18788, 4493, 4268, 18798, 4508, 4283, 18809, 4523, 4298, 
            18821, 4538, 4313, 18834, 4553, 4328}], 
           
           Line3DBox[{4111, 4344, 18848, 4112, 4359, 18861, 4134, 4374, 18873,
             4149, 4389, 18884, 4164, 4404, 18894, 4179, 4419, 18903, 4194, 
            4434, 18911, 4209, 4449, 4224, 18772, 4464, 4239, 18780, 4479, 
            4254, 18789, 4494, 4269, 18799, 4509, 4284, 18810, 4524, 4299, 
            18822, 4539, 4314, 18835, 4554, 4329}], 
           
           Line3DBox[{4113, 4345, 18849, 4114, 4360, 18862, 4135, 4375, 18874,
             4150, 4390, 18885, 4165, 4405, 18895, 4180, 4420, 18904, 4195, 
            4435, 18912, 4210, 4450, 18919, 4225, 4465, 4240, 18781, 4480, 
            4255, 18790, 4495, 4270, 18800, 4510, 4285, 18811, 4525, 4300, 
            18823, 4540, 4315, 18836, 4555, 4330}], 
           
           Line3DBox[{4115, 4346, 18850, 4116, 4361, 18863, 4136, 4376, 18875,
             4151, 4391, 18886, 4166, 4406, 18896, 4181, 4421, 18905, 4196, 
            4436, 18913, 4211, 4451, 18920, 4226, 4466, 18926, 4241, 4481, 
            4256, 18791, 4496, 4271, 18801, 4511, 4286, 18812, 4526, 4301, 
            18824, 4541, 4316, 18837, 4556, 4331}], 
           
           Line3DBox[{4117, 4347, 18851, 4118, 4362, 18864, 4137, 4377, 18876,
             4152, 4392, 18887, 4167, 4407, 18897, 4182, 4422, 18906, 4197, 
            4437, 18914, 4212, 4452, 18921, 4227, 4467, 18927, 4242, 4482, 
            18932, 4257, 4497, 4272, 18802, 4512, 4287, 18813, 4527, 4302, 
            18825, 4542, 4317, 18838, 4557, 4332}], 
           
           Line3DBox[{4119, 4348, 18852, 4120, 4363, 18865, 4138, 4378, 18877,
             4153, 4393, 18888, 4168, 4408, 18898, 4183, 4423, 18907, 4198, 
            4438, 18915, 4213, 4453, 18922, 4228, 4468, 18928, 4243, 4483, 
            18933, 4258, 4498, 18937, 4273, 4513, 4288, 18814, 4528, 4303, 
            18826, 4543, 4318, 18839, 4558, 4333}], 
           
           Line3DBox[{4121, 4349, 18853, 4122, 4364, 18866, 4139, 4379, 18878,
             4154, 4394, 18889, 4169, 4409, 18899, 4184, 4424, 18908, 4199, 
            4439, 18916, 4214, 4454, 18923, 4229, 4469, 18929, 4244, 4484, 
            18934, 4259, 4499, 18938, 4274, 4514, 18941, 4289, 4529, 4304, 
            18827, 4544, 4319, 18840, 4559, 4334}], 
           
           Line3DBox[{4123, 4350, 18854, 4124, 4365, 18867, 4140, 4380, 18879,
             4155, 4395, 18890, 4170, 4410, 18900, 4185, 4425, 18909, 4200, 
            4440, 18917, 4215, 4455, 18924, 4230, 4470, 18930, 4245, 4485, 
            18935, 4260, 4500, 18939, 4275, 4515, 18942, 4290, 4530, 18944, 
            4305, 4545, 4320, 18841, 4560, 4335}], 
           
           Line3DBox[{4125, 4351, 18855, 4126, 4366, 18868, 4141, 4381, 18880,
             4156, 4396, 18891, 4171, 4411, 18901, 4186, 4426, 18910, 4201, 
            4441, 18918, 4216, 4456, 18925, 4231, 4471, 18931, 4246, 4486, 
            18936, 4261, 4501, 18940, 4276, 4516, 18943, 4291, 4531, 18945, 
            4306, 4546, 18946, 4321, 4561, 4336}], 
           
           Line3DBox[{4562, 4802, 4563, 18947, 4817, 4592, 18948, 4832, 4607, 
            18950, 4847, 4622, 18953, 4862, 4637, 18957, 4877, 4652, 18962, 
            4892, 4667, 18968, 4907, 4682, 18975, 4922, 4697, 18983, 4937, 
            4712, 18992, 4952, 4727, 19002, 4967, 4742, 19013, 4982, 4757, 
            19025, 4997, 4772, 19038, 5012, 4787}], 
           
           Line3DBox[{4564, 4803, 19052, 4565, 4818, 4593, 18949, 4833, 4608, 
            18951, 4848, 4623, 18954, 4863, 4638, 18958, 4878, 4653, 18963, 
            4893, 4668, 18969, 4908, 4683, 18976, 4923, 4698, 18984, 4938, 
            4713, 18993, 4953, 4728, 19003, 4968, 4743, 19014, 4983, 4758, 
            19026, 4998, 4773, 19039, 5013, 4788}], 
           
           Line3DBox[{4566, 4804, 19053, 4567, 4819, 19066, 4594, 4834, 4609, 
            18952, 4849, 4624, 18955, 4864, 4639, 18959, 4879, 4654, 18964, 
            4894, 4669, 18970, 4909, 4684, 18977, 4924, 4699, 18985, 4939, 
            4714, 18994, 4954, 4729, 19004, 4969, 4744, 19015, 4984, 4759, 
            19027, 4999, 4774, 19040, 5014, 4789}], 
           
           Line3DBox[{4568, 4805, 19054, 4569, 4820, 19067, 4595, 4835, 19079,
             4610, 4850, 4625, 18956, 4865, 4640, 18960, 4880, 4655, 18965, 
            4895, 4670, 18971, 4910, 4685, 18978, 4925, 4700, 18986, 4940, 
            4715, 18995, 4955, 4730, 19005, 4970, 4745, 19016, 4985, 4760, 
            19028, 5000, 4775, 19041, 5015, 4790}], 
           
           Line3DBox[{4570, 4806, 19055, 4571, 4821, 19068, 4596, 4836, 19080,
             4611, 4851, 19091, 4626, 4866, 4641, 18961, 4881, 4656, 18966, 
            4896, 4671, 18972, 4911, 4686, 18979, 4926, 4701, 18987, 4941, 
            4716, 18996, 4956, 4731, 19006, 4971, 4746, 19017, 4986, 4761, 
            19029, 5001, 4776, 19042, 5016, 4791}], 
           
           Line3DBox[{4572, 4807, 19056, 4573, 4822, 19069, 4597, 4837, 19081,
             4612, 4852, 19092, 4627, 4867, 19102, 4642, 4882, 4657, 18967, 
            4897, 4672, 18973, 4912, 4687, 18980, 4927, 4702, 18988, 4942, 
            4717, 18997, 4957, 4732, 19007, 4972, 4747, 19018, 4987, 4762, 
            19030, 5002, 4777, 19043, 5017, 4792}], 
           
           Line3DBox[{4574, 4808, 19057, 4575, 4823, 19070, 4598, 4838, 19082,
             4613, 4853, 19093, 4628, 4868, 19103, 4643, 4883, 19112, 4658, 
            4898, 4673, 18974, 4913, 4688, 18981, 4928, 4703, 18989, 4943, 
            4718, 18998, 4958, 4733, 19008, 4973, 4748, 19019, 4988, 4763, 
            19031, 5003, 4778, 19044, 5018, 4793}], 
           
           Line3DBox[{4576, 4809, 19058, 4577, 4824, 19071, 4599, 4839, 19083,
             4614, 4854, 19094, 4629, 4869, 19104, 4644, 4884, 19113, 4659, 
            4899, 19121, 4674, 4914, 4689, 18982, 4929, 4704, 18990, 4944, 
            4719, 18999, 4959, 4734, 19009, 4974, 4749, 19020, 4989, 4764, 
            19032, 5004, 4779, 19045, 5019, 4794}], 
           
           Line3DBox[{4578, 4810, 19059, 4579, 4825, 19072, 4600, 4840, 19084,
             4615, 4855, 19095, 4630, 4870, 19105, 4645, 4885, 19114, 4660, 
            4900, 19122, 4675, 4915, 19129, 4690, 4930, 4705, 18991, 4945, 
            4720, 19000, 4960, 4735, 19010, 4975, 4750, 19021, 4990, 4765, 
            19033, 5005, 4780, 19046, 5020, 4795}], 
           
           Line3DBox[{4580, 4811, 19060, 4581, 4826, 19073, 4601, 4841, 19085,
             4616, 4856, 19096, 4631, 4871, 19106, 4646, 4886, 19115, 4661, 
            4901, 19123, 4676, 4916, 19130, 4691, 4931, 19136, 4706, 4946, 
            4721, 19001, 4961, 4736, 19011, 4976, 4751, 19022, 4991, 4766, 
            19034, 5006, 4781, 19047, 5021, 4796}], 
           
           Line3DBox[{4582, 4812, 19061, 4583, 4827, 19074, 4602, 4842, 19086,
             4617, 4857, 19097, 4632, 4872, 19107, 4647, 4887, 19116, 4662, 
            4902, 19124, 4677, 4917, 19131, 4692, 4932, 19137, 4707, 4947, 
            19142, 4722, 4962, 4737, 19012, 4977, 4752, 19023, 4992, 4767, 
            19035, 5007, 4782, 19048, 5022, 4797}], 
           
           Line3DBox[{4584, 4813, 19062, 4585, 4828, 19075, 4603, 4843, 19087,
             4618, 4858, 19098, 4633, 4873, 19108, 4648, 4888, 19117, 4663, 
            4903, 19125, 4678, 4918, 19132, 4693, 4933, 19138, 4708, 4948, 
            19143, 4723, 4963, 19147, 4738, 4978, 4753, 19024, 4993, 4768, 
            19036, 5008, 4783, 19049, 5023, 4798}], 
           
           Line3DBox[{4586, 4814, 19063, 4587, 4829, 19076, 4604, 4844, 19088,
             4619, 4859, 19099, 4634, 4874, 19109, 4649, 4889, 19118, 4664, 
            4904, 19126, 4679, 4919, 19133, 4694, 4934, 19139, 4709, 4949, 
            19144, 4724, 4964, 19148, 4739, 4979, 19151, 4754, 4994, 4769, 
            19037, 5009, 4784, 19050, 5024, 4799}], 
           
           Line3DBox[{4588, 4815, 19064, 4589, 4830, 19077, 4605, 4845, 19089,
             4620, 4860, 19100, 4635, 4875, 19110, 4650, 4890, 19119, 4665, 
            4905, 19127, 4680, 4920, 19134, 4695, 4935, 19140, 4710, 4950, 
            19145, 4725, 4965, 19149, 4740, 4980, 19152, 4755, 4995, 19154, 
            4770, 5010, 4785, 19051, 5025, 4800}], 
           
           Line3DBox[{4590, 4816, 19065, 4591, 4831, 19078, 4606, 4846, 19090,
             4621, 4861, 19101, 4636, 4876, 19111, 4651, 4891, 19120, 4666, 
            4906, 19128, 4681, 4921, 19135, 4696, 4936, 19141, 4711, 4951, 
            19146, 4726, 4966, 19150, 4741, 4981, 19153, 4756, 4996, 19155, 
            4771, 5011, 19156, 4786, 5026, 4801}], 
           
           Line3DBox[{5027, 5267, 5028, 19157, 5282, 5057, 19158, 5297, 5072, 
            19160, 5312, 5087, 19163, 5327, 5102, 19167, 5342, 5117, 19172, 
            5357, 5132, 19178, 5372, 5147, 19185, 5387, 5162, 19193, 5402, 
            5177, 19202, 5417, 5192, 19212, 5432, 5207, 19223, 5447, 5222, 
            19235, 5462, 5237, 19248, 5477, 5252}], 
           
           Line3DBox[{5029, 5268, 19262, 5030, 5283, 5058, 19159, 5298, 5073, 
            19161, 5313, 5088, 19164, 5328, 5103, 19168, 5343, 5118, 19173, 
            5358, 5133, 19179, 5373, 5148, 19186, 5388, 5163, 19194, 5403, 
            5178, 19203, 5418, 5193, 19213, 5433, 5208, 19224, 5448, 5223, 
            19236, 5463, 5238, 19249, 5478, 5253}], 
           
           Line3DBox[{5031, 5269, 19263, 5032, 5284, 19276, 5059, 5299, 5074, 
            19162, 5314, 5089, 19165, 5329, 5104, 19169, 5344, 5119, 19174, 
            5359, 5134, 19180, 5374, 5149, 19187, 5389, 5164, 19195, 5404, 
            5179, 19204, 5419, 5194, 19214, 5434, 5209, 19225, 5449, 5224, 
            19237, 5464, 5239, 19250, 5479, 5254}], 
           
           Line3DBox[{5033, 5270, 19264, 5034, 5285, 19277, 5060, 5300, 19289,
             5075, 5315, 5090, 19166, 5330, 5105, 19170, 5345, 5120, 19175, 
            5360, 5135, 19181, 5375, 5150, 19188, 5390, 5165, 19196, 5405, 
            5180, 19205, 5420, 5195, 19215, 5435, 5210, 19226, 5450, 5225, 
            19238, 5465, 5240, 19251, 5480, 5255}], 
           
           Line3DBox[{5035, 5271, 19265, 5036, 5286, 19278, 5061, 5301, 19290,
             5076, 5316, 19301, 5091, 5331, 5106, 19171, 5346, 5121, 19176, 
            5361, 5136, 19182, 5376, 5151, 19189, 5391, 5166, 19197, 5406, 
            5181, 19206, 5421, 5196, 19216, 5436, 5211, 19227, 5451, 5226, 
            19239, 5466, 5241, 19252, 5481, 5256}], 
           
           Line3DBox[{5037, 5272, 19266, 5038, 5287, 19279, 5062, 5302, 19291,
             5077, 5317, 19302, 5092, 5332, 19312, 5107, 5347, 5122, 19177, 
            5362, 5137, 19183, 5377, 5152, 19190, 5392, 5167, 19198, 5407, 
            5182, 19207, 5422, 5197, 19217, 5437, 5212, 19228, 5452, 5227, 
            19240, 5467, 5242, 19253, 5482, 5257}], 
           Line3DBox[{5039, 5273, 19267, 5040, 5288, 19280, 5063, 5303, 19292,
             5078, 5318, 19303, 5093, 5333, 19313, 5108, 5348, 19322, 5123, 
            5363, 5138, 19184, 5378, 5153, 19191, 5393, 5168, 19199, 5408, 
            5183, 19208, 5423, 5198, 19218, 5438, 5213, 19229, 5453, 5228, 
            19241, 5468, 5243, 19254, 5483, 5258}], 
           
           Line3DBox[{5041, 5274, 19268, 5042, 5289, 19281, 5064, 5304, 19293,
             5079, 5319, 19304, 5094, 5334, 19314, 5109, 5349, 19323, 5124, 
            5364, 19331, 5139, 5379, 5154, 19192, 5394, 5169, 19200, 5409, 
            5184, 19209, 5424, 5199, 19219, 5439, 5214, 19230, 5454, 5229, 
            19242, 5469, 5244, 19255, 5484, 5259}], 
           
           Line3DBox[{5043, 5275, 19269, 5044, 5290, 19282, 5065, 5305, 19294,
             5080, 5320, 19305, 5095, 5335, 19315, 5110, 5350, 19324, 5125, 
            5365, 19332, 5140, 5380, 19339, 5155, 5395, 5170, 19201, 5410, 
            5185, 19210, 5425, 5200, 19220, 5440, 5215, 19231, 5455, 5230, 
            19243, 5470, 5245, 19256, 5485, 5260}], 
           
           Line3DBox[{5045, 5276, 19270, 5046, 5291, 19283, 5066, 5306, 19295,
             5081, 5321, 19306, 5096, 5336, 19316, 5111, 5351, 19325, 5126, 
            5366, 19333, 5141, 5381, 19340, 5156, 5396, 19346, 5171, 5411, 
            5186, 19211, 5426, 5201, 19221, 5441, 5216, 19232, 5456, 5231, 
            19244, 5471, 5246, 19257, 5486, 5261}], 
           
           Line3DBox[{5047, 5277, 19271, 5048, 5292, 19284, 5067, 5307, 19296,
             5082, 5322, 19307, 5097, 5337, 19317, 5112, 5352, 19326, 5127, 
            5367, 19334, 5142, 5382, 19341, 5157, 5397, 19347, 5172, 5412, 
            19352, 5187, 5427, 5202, 19222, 5442, 5217, 19233, 5457, 5232, 
            19245, 5472, 5247, 19258, 5487, 5262}], 
           
           Line3DBox[{5049, 5278, 19272, 5050, 5293, 19285, 5068, 5308, 19297,
             5083, 5323, 19308, 5098, 5338, 19318, 5113, 5353, 19327, 5128, 
            5368, 19335, 5143, 5383, 19342, 5158, 5398, 19348, 5173, 5413, 
            19353, 5188, 5428, 19357, 5203, 5443, 5218, 19234, 5458, 5233, 
            19246, 5473, 5248, 19259, 5488, 5263}], 
           
           Line3DBox[{5051, 5279, 19273, 5052, 5294, 19286, 5069, 5309, 19298,
             5084, 5324, 19309, 5099, 5339, 19319, 5114, 5354, 19328, 5129, 
            5369, 19336, 5144, 5384, 19343, 5159, 5399, 19349, 5174, 5414, 
            19354, 5189, 5429, 19358, 5204, 5444, 19361, 5219, 5459, 5234, 
            19247, 5474, 5249, 19260, 5489, 5264}], 
           
           Line3DBox[{5053, 5280, 19274, 5054, 5295, 19287, 5070, 5310, 19299,
             5085, 5325, 19310, 5100, 5340, 19320, 5115, 5355, 19329, 5130, 
            5370, 19337, 5145, 5385, 19344, 5160, 5400, 19350, 5175, 5415, 
            19355, 5190, 5430, 19359, 5205, 5445, 19362, 5220, 5460, 19364, 
            5235, 5475, 5250, 19261, 5490, 5265}], 
           
           Line3DBox[{5055, 5281, 19275, 5056, 5296, 19288, 5071, 5311, 19300,
             5086, 5326, 19311, 5101, 5341, 19321, 5116, 5356, 19330, 5131, 
            5371, 19338, 5146, 5386, 19345, 5161, 5401, 19351, 5176, 5416, 
            19356, 5191, 5431, 19360, 5206, 5446, 19363, 5221, 5461, 19365, 
            5236, 5476, 19366, 5251, 5491, 5266}], 
           
           Line3DBox[{5492, 5732, 5493, 19367, 5747, 5522, 19368, 5762, 5537, 
            19370, 5777, 5552, 19373, 5792, 5567, 19377, 5807, 5582, 19382, 
            5822, 5597, 19388, 5837, 5612, 19395, 5852, 5627, 19403, 5867, 
            5642, 19412, 5882, 5657, 19422, 5897, 5672, 19433, 5912, 5687, 
            19445, 5927, 5702, 19458, 5942, 5717}], 
           
           Line3DBox[{5494, 5733, 19472, 5495, 5748, 5523, 19369, 5763, 5538, 
            19371, 5778, 5553, 19374, 5793, 5568, 19378, 5808, 5583, 19383, 
            5823, 5598, 19389, 5838, 5613, 19396, 5853, 5628, 19404, 5868, 
            5643, 19413, 5883, 5658, 19423, 5898, 5673, 19434, 5913, 5688, 
            19446, 5928, 5703, 19459, 5943, 5718}], 
           
           Line3DBox[{5496, 5734, 19473, 5497, 5749, 19486, 5524, 5764, 5539, 
            19372, 5779, 5554, 19375, 5794, 5569, 19379, 5809, 5584, 19384, 
            5824, 5599, 19390, 5839, 5614, 19397, 5854, 5629, 19405, 5869, 
            5644, 19414, 5884, 5659, 19424, 5899, 5674, 19435, 5914, 5689, 
            19447, 5929, 5704, 19460, 5944, 5719}], 
           
           Line3DBox[{5498, 5735, 19474, 5499, 5750, 19487, 5525, 5765, 19499,
             5540, 5780, 5555, 19376, 5795, 5570, 19380, 5810, 5585, 19385, 
            5825, 5600, 19391, 5840, 5615, 19398, 5855, 5630, 19406, 5870, 
            5645, 19415, 5885, 5660, 19425, 5900, 5675, 19436, 5915, 5690, 
            19448, 5930, 5705, 19461, 5945, 5720}], 
           
           Line3DBox[{5500, 5736, 19475, 5501, 5751, 19488, 5526, 5766, 19500,
             5541, 5781, 19511, 5556, 5796, 5571, 19381, 5811, 5586, 19386, 
            5826, 5601, 19392, 5841, 5616, 19399, 5856, 5631, 19407, 5871, 
            5646, 19416, 5886, 5661, 19426, 5901, 5676, 19437, 5916, 5691, 
            19449, 5931, 5706, 19462, 5946, 5721}], 
           
           Line3DBox[{5502, 5737, 19476, 5503, 5752, 19489, 5527, 5767, 19501,
             5542, 5782, 19512, 5557, 5797, 19522, 5572, 5812, 5587, 19387, 
            5827, 5602, 19393, 5842, 5617, 19400, 5857, 5632, 19408, 5872, 
            5647, 19417, 5887, 5662, 19427, 5902, 5677, 19438, 5917, 5692, 
            19450, 5932, 5707, 19463, 5947, 5722}], 
           
           Line3DBox[{5504, 5738, 19477, 5505, 5753, 19490, 5528, 5768, 19502,
             5543, 5783, 19513, 5558, 5798, 19523, 5573, 5813, 19532, 5588, 
            5828, 5603, 19394, 5843, 5618, 19401, 5858, 5633, 19409, 5873, 
            5648, 19418, 5888, 5663, 19428, 5903, 5678, 19439, 5918, 5693, 
            19451, 5933, 5708, 19464, 5948, 5723}], 
           
           Line3DBox[{5506, 5739, 19478, 5507, 5754, 19491, 5529, 5769, 19503,
             5544, 5784, 19514, 5559, 5799, 19524, 5574, 5814, 19533, 5589, 
            5829, 19541, 5604, 5844, 5619, 19402, 5859, 5634, 19410, 5874, 
            5649, 19419, 5889, 5664, 19429, 5904, 5679, 19440, 5919, 5694, 
            19452, 5934, 5709, 19465, 5949, 5724}], 
           
           Line3DBox[{5508, 5740, 19479, 5509, 5755, 19492, 5530, 5770, 19504,
             5545, 5785, 19515, 5560, 5800, 19525, 5575, 5815, 19534, 5590, 
            5830, 19542, 5605, 5845, 19549, 5620, 5860, 5635, 19411, 5875, 
            5650, 19420, 5890, 5665, 19430, 5905, 5680, 19441, 5920, 5695, 
            19453, 5935, 5710, 19466, 5950, 5725}], 
           
           Line3DBox[{5510, 5741, 19480, 5511, 5756, 19493, 5531, 5771, 19505,
             5546, 5786, 19516, 5561, 5801, 19526, 5576, 5816, 19535, 5591, 
            5831, 19543, 5606, 5846, 19550, 5621, 5861, 19556, 5636, 5876, 
            5651, 19421, 5891, 5666, 19431, 5906, 5681, 19442, 5921, 5696, 
            19454, 5936, 5711, 19467, 5951, 5726}], 
           
           Line3DBox[{5512, 5742, 19481, 5513, 5757, 19494, 5532, 5772, 19506,
             5547, 5787, 19517, 5562, 5802, 19527, 5577, 5817, 19536, 5592, 
            5832, 19544, 5607, 5847, 19551, 5622, 5862, 19557, 5637, 5877, 
            19562, 5652, 5892, 5667, 19432, 5907, 5682, 19443, 5922, 5697, 
            19455, 5937, 5712, 19468, 5952, 5727}], 
           
           Line3DBox[{5514, 5743, 19482, 5515, 5758, 19495, 5533, 5773, 19507,
             5548, 5788, 19518, 5563, 5803, 19528, 5578, 5818, 19537, 5593, 
            5833, 19545, 5608, 5848, 19552, 5623, 5863, 19558, 5638, 5878, 
            19563, 5653, 5893, 19567, 5668, 5908, 5683, 19444, 5923, 5698, 
            19456, 5938, 5713, 19469, 5953, 5728}], 
           
           Line3DBox[{5516, 5744, 19483, 5517, 5759, 19496, 5534, 5774, 19508,
             5549, 5789, 19519, 5564, 5804, 19529, 5579, 5819, 19538, 5594, 
            5834, 19546, 5609, 5849, 19553, 5624, 5864, 19559, 5639, 5879, 
            19564, 5654, 5894, 19568, 5669, 5909, 19571, 5684, 5924, 5699, 
            19457, 5939, 5714, 19470, 5954, 5729}], 
           
           Line3DBox[{5518, 5745, 19484, 5519, 5760, 19497, 5535, 5775, 19509,
             5550, 5790, 19520, 5565, 5805, 19530, 5580, 5820, 19539, 5595, 
            5835, 19547, 5610, 5850, 19554, 5625, 5865, 19560, 5640, 5880, 
            19565, 5655, 5895, 19569, 5670, 5910, 19572, 5685, 5925, 19574, 
            5700, 5940, 5715, 19471, 5955, 5730}], 
           
           Line3DBox[{5520, 5746, 19485, 5521, 5761, 19498, 5536, 5776, 19510,
             5551, 5791, 19521, 5566, 5806, 19531, 5581, 5821, 19540, 5596, 
            5836, 19548, 5611, 5851, 19555, 5626, 5866, 19561, 5641, 5881, 
            19566, 5656, 5896, 19570, 5671, 5911, 19573, 5686, 5926, 19575, 
            5701, 5941, 19576, 5716, 5956, 5731}], 
           
           Line3DBox[{5957, 6197, 5958, 19577, 6212, 5987, 19578, 6227, 6002, 
            19580, 6242, 6017, 19583, 6257, 6032, 19587, 6272, 6047, 19592, 
            6287, 6062, 19598, 6302, 6077, 19605, 6317, 6092, 19613, 6332, 
            6107, 19622, 6347, 6122, 19632, 6362, 6137, 19643, 6377, 6152, 
            19655, 6392, 6167, 19668, 6407, 6182}], 
           
           Line3DBox[{5959, 6198, 19682, 5960, 6213, 5988, 19579, 6228, 6003, 
            19581, 6243, 6018, 19584, 6258, 6033, 19588, 6273, 6048, 19593, 
            6288, 6063, 19599, 6303, 6078, 19606, 6318, 6093, 19614, 6333, 
            6108, 19623, 6348, 6123, 19633, 6363, 6138, 19644, 6378, 6153, 
            19656, 6393, 6168, 19669, 6408, 6183}], 
           
           Line3DBox[{5961, 6199, 19683, 5962, 6214, 19696, 5989, 6229, 6004, 
            19582, 6244, 6019, 19585, 6259, 6034, 19589, 6274, 6049, 19594, 
            6289, 6064, 19600, 6304, 6079, 19607, 6319, 6094, 19615, 6334, 
            6109, 19624, 6349, 6124, 19634, 6364, 6139, 19645, 6379, 6154, 
            19657, 6394, 6169, 19670, 6409, 6184}], 
           
           Line3DBox[{5963, 6200, 19684, 5964, 6215, 19697, 5990, 6230, 19709,
             6005, 6245, 6020, 19586, 6260, 6035, 19590, 6275, 6050, 19595, 
            6290, 6065, 19601, 6305, 6080, 19608, 6320, 6095, 19616, 6335, 
            6110, 19625, 6350, 6125, 19635, 6365, 6140, 19646, 6380, 6155, 
            19658, 6395, 6170, 19671, 6410, 6185}], 
           
           Line3DBox[{5965, 6201, 19685, 5966, 6216, 19698, 5991, 6231, 19710,
             6006, 6246, 19721, 6021, 6261, 6036, 19591, 6276, 6051, 19596, 
            6291, 6066, 19602, 6306, 6081, 19609, 6321, 6096, 19617, 6336, 
            6111, 19626, 6351, 6126, 19636, 6366, 6141, 19647, 6381, 6156, 
            19659, 6396, 6171, 19672, 6411, 6186}], 
           
           Line3DBox[{5967, 6202, 19686, 5968, 6217, 19699, 5992, 6232, 19711,
             6007, 6247, 19722, 6022, 6262, 19732, 6037, 6277, 6052, 19597, 
            6292, 6067, 19603, 6307, 6082, 19610, 6322, 6097, 19618, 6337, 
            6112, 19627, 6352, 6127, 19637, 6367, 6142, 19648, 6382, 6157, 
            19660, 6397, 6172, 19673, 6412, 6187}], 
           
           Line3DBox[{5969, 6203, 19687, 5970, 6218, 19700, 5993, 6233, 19712,
             6008, 6248, 19723, 6023, 6263, 19733, 6038, 6278, 19742, 6053, 
            6293, 6068, 19604, 6308, 6083, 19611, 6323, 6098, 19619, 6338, 
            6113, 19628, 6353, 6128, 19638, 6368, 6143, 19649, 6383, 6158, 
            19661, 6398, 6173, 19674, 6413, 6188}], 
           
           Line3DBox[{5971, 6204, 19688, 5972, 6219, 19701, 5994, 6234, 19713,
             6009, 6249, 19724, 6024, 6264, 19734, 6039, 6279, 19743, 6054, 
            6294, 19751, 6069, 6309, 6084, 19612, 6324, 6099, 19620, 6339, 
            6114, 19629, 6354, 6129, 19639, 6369, 6144, 19650, 6384, 6159, 
            19662, 6399, 6174, 19675, 6414, 6189}], 
           
           Line3DBox[{5973, 6205, 19689, 5974, 6220, 19702, 5995, 6235, 19714,
             6010, 6250, 19725, 6025, 6265, 19735, 6040, 6280, 19744, 6055, 
            6295, 19752, 6070, 6310, 19759, 6085, 6325, 6100, 19621, 6340, 
            6115, 19630, 6355, 6130, 19640, 6370, 6145, 19651, 6385, 6160, 
            19663, 6400, 6175, 19676, 6415, 6190}], 
           
           Line3DBox[{5975, 6206, 19690, 5976, 6221, 19703, 5996, 6236, 19715,
             6011, 6251, 19726, 6026, 6266, 19736, 6041, 6281, 19745, 6056, 
            6296, 19753, 6071, 6311, 19760, 6086, 6326, 19766, 6101, 6341, 
            6116, 19631, 6356, 6131, 19641, 6371, 6146, 19652, 6386, 6161, 
            19664, 6401, 6176, 19677, 6416, 6191}], 
           
           Line3DBox[{5977, 6207, 19691, 5978, 6222, 19704, 5997, 6237, 19716,
             6012, 6252, 19727, 6027, 6267, 19737, 6042, 6282, 19746, 6057, 
            6297, 19754, 6072, 6312, 19761, 6087, 6327, 19767, 6102, 6342, 
            19772, 6117, 6357, 6132, 19642, 6372, 6147, 19653, 6387, 6162, 
            19665, 6402, 6177, 19678, 6417, 6192}], 
           
           Line3DBox[{5979, 6208, 19692, 5980, 6223, 19705, 5998, 6238, 19717,
             6013, 6253, 19728, 6028, 6268, 19738, 6043, 6283, 19747, 6058, 
            6298, 19755, 6073, 6313, 19762, 6088, 6328, 19768, 6103, 6343, 
            19773, 6118, 6358, 19777, 6133, 6373, 6148, 19654, 6388, 6163, 
            19666, 6403, 6178, 19679, 6418, 6193}], 
           
           Line3DBox[{5981, 6209, 19693, 5982, 6224, 19706, 5999, 6239, 19718,
             6014, 6254, 19729, 6029, 6269, 19739, 6044, 6284, 19748, 6059, 
            6299, 19756, 6074, 6314, 19763, 6089, 6329, 19769, 6104, 6344, 
            19774, 6119, 6359, 19778, 6134, 6374, 19781, 6149, 6389, 6164, 
            19667, 6404, 6179, 19680, 6419, 6194}], 
           
           Line3DBox[{5983, 6210, 19694, 5984, 6225, 19707, 6000, 6240, 19719,
             6015, 6255, 19730, 6030, 6270, 19740, 6045, 6285, 19749, 6060, 
            6300, 19757, 6075, 6315, 19764, 6090, 6330, 19770, 6105, 6345, 
            19775, 6120, 6360, 19779, 6135, 6375, 19782, 6150, 6390, 19784, 
            6165, 6405, 6180, 19681, 6420, 6195}], 
           
           Line3DBox[{5985, 6211, 19695, 5986, 6226, 19708, 6001, 6241, 19720,
             6016, 6256, 19731, 6031, 6271, 19741, 6046, 6286, 19750, 6061, 
            6301, 19758, 6076, 6316, 19765, 6091, 6331, 19771, 6106, 6346, 
            19776, 6121, 6361, 19780, 6136, 6376, 19783, 6151, 6391, 19785, 
            6166, 6406, 19786, 6181, 6421, 6196}], 
           
           Line3DBox[{6422, 6662, 6423, 19787, 6677, 6452, 19788, 6692, 6467, 
            19790, 6707, 6482, 19793, 6722, 6497, 19797, 6737, 6512, 19802, 
            6752, 6527, 19808, 6767, 6542, 19815, 6782, 6557, 19823, 6797, 
            6572, 19832, 6812, 6587, 19842, 6827, 6602, 19853, 6842, 6617, 
            19865, 6857, 6632, 19878, 6872, 6647}], 
           
           Line3DBox[{6424, 6663, 19892, 6425, 6678, 6453, 19789, 6693, 6468, 
            19791, 6708, 6483, 19794, 6723, 6498, 19798, 6738, 6513, 19803, 
            6753, 6528, 19809, 6768, 6543, 19816, 6783, 6558, 19824, 6798, 
            6573, 19833, 6813, 6588, 19843, 6828, 6603, 19854, 6843, 6618, 
            19866, 6858, 6633, 19879, 6873, 6648}], 
           
           Line3DBox[{6426, 6664, 19893, 6427, 6679, 19906, 6454, 6694, 6469, 
            19792, 6709, 6484, 19795, 6724, 6499, 19799, 6739, 6514, 19804, 
            6754, 6529, 19810, 6769, 6544, 19817, 6784, 6559, 19825, 6799, 
            6574, 19834, 6814, 6589, 19844, 6829, 6604, 19855, 6844, 6619, 
            19867, 6859, 6634, 19880, 6874, 6649}], 
           
           Line3DBox[{6428, 6665, 19894, 6429, 6680, 19907, 6455, 6695, 19919,
             6470, 6710, 6485, 19796, 6725, 6500, 19800, 6740, 6515, 19805, 
            6755, 6530, 19811, 6770, 6545, 19818, 6785, 6560, 19826, 6800, 
            6575, 19835, 6815, 6590, 19845, 6830, 6605, 19856, 6845, 6620, 
            19868, 6860, 6635, 19881, 6875, 6650}], 
           
           Line3DBox[{6430, 6666, 19895, 6431, 6681, 19908, 6456, 6696, 19920,
             6471, 6711, 19931, 6486, 6726, 6501, 19801, 6741, 6516, 19806, 
            6756, 6531, 19812, 6771, 6546, 19819, 6786, 6561, 19827, 6801, 
            6576, 19836, 6816, 6591, 19846, 6831, 6606, 19857, 6846, 6621, 
            19869, 6861, 6636, 19882, 6876, 6651}], 
           
           Line3DBox[{6432, 6667, 19896, 6433, 6682, 19909, 6457, 6697, 19921,
             6472, 6712, 19932, 6487, 6727, 19942, 6502, 6742, 6517, 19807, 
            6757, 6532, 19813, 6772, 6547, 19820, 6787, 6562, 19828, 6802, 
            6577, 19837, 6817, 6592, 19847, 6832, 6607, 19858, 6847, 6622, 
            19870, 6862, 6637, 19883, 6877, 6652}], 
           
           Line3DBox[{6434, 6668, 19897, 6435, 6683, 19910, 6458, 6698, 19922,
             6473, 6713, 19933, 6488, 6728, 19943, 6503, 6743, 19952, 6518, 
            6758, 6533, 19814, 6773, 6548, 19821, 6788, 6563, 19829, 6803, 
            6578, 19838, 6818, 6593, 19848, 6833, 6608, 19859, 6848, 6623, 
            19871, 6863, 6638, 19884, 6878, 6653}], 
           
           Line3DBox[{6436, 6669, 19898, 6437, 6684, 19911, 6459, 6699, 19923,
             6474, 6714, 19934, 6489, 6729, 19944, 6504, 6744, 19953, 6519, 
            6759, 19961, 6534, 6774, 6549, 19822, 6789, 6564, 19830, 6804, 
            6579, 19839, 6819, 6594, 19849, 6834, 6609, 19860, 6849, 6624, 
            19872, 6864, 6639, 19885, 6879, 6654}], 
           
           Line3DBox[{6438, 6670, 19899, 6439, 6685, 19912, 6460, 6700, 19924,
             6475, 6715, 19935, 6490, 6730, 19945, 6505, 6745, 19954, 6520, 
            6760, 19962, 6535, 6775, 19969, 6550, 6790, 6565, 19831, 6805, 
            6580, 19840, 6820, 6595, 19850, 6835, 6610, 19861, 6850, 6625, 
            19873, 6865, 6640, 19886, 6880, 6655}], 
           
           Line3DBox[{6440, 6671, 19900, 6441, 6686, 19913, 6461, 6701, 19925,
             6476, 6716, 19936, 6491, 6731, 19946, 6506, 6746, 19955, 6521, 
            6761, 19963, 6536, 6776, 19970, 6551, 6791, 19976, 6566, 6806, 
            6581, 19841, 6821, 6596, 19851, 6836, 6611, 19862, 6851, 6626, 
            19874, 6866, 6641, 19887, 6881, 6656}], 
           
           Line3DBox[{6442, 6672, 19901, 6443, 6687, 19914, 6462, 6702, 19926,
             6477, 6717, 19937, 6492, 6732, 19947, 6507, 6747, 19956, 6522, 
            6762, 19964, 6537, 6777, 19971, 6552, 6792, 19977, 6567, 6807, 
            19982, 6582, 6822, 6597, 19852, 6837, 6612, 19863, 6852, 6627, 
            19875, 6867, 6642, 19888, 6882, 6657}], 
           
           Line3DBox[{6444, 6673, 19902, 6445, 6688, 19915, 6463, 6703, 19927,
             6478, 6718, 19938, 6493, 6733, 19948, 6508, 6748, 19957, 6523, 
            6763, 19965, 6538, 6778, 19972, 6553, 6793, 19978, 6568, 6808, 
            19983, 6583, 6823, 19987, 6598, 6838, 6613, 19864, 6853, 6628, 
            19876, 6868, 6643, 19889, 6883, 6658}], 
           
           Line3DBox[{6446, 6674, 19903, 6447, 6689, 19916, 6464, 6704, 19928,
             6479, 6719, 19939, 6494, 6734, 19949, 6509, 6749, 19958, 6524, 
            6764, 19966, 6539, 6779, 19973, 6554, 6794, 19979, 6569, 6809, 
            19984, 6584, 6824, 19988, 6599, 6839, 19991, 6614, 6854, 6629, 
            19877, 6869, 6644, 19890, 6884, 6659}], 
           
           Line3DBox[{6448, 6675, 19904, 6449, 6690, 19917, 6465, 6705, 19929,
             6480, 6720, 19940, 6495, 6735, 19950, 6510, 6750, 19959, 6525, 
            6765, 19967, 6540, 6780, 19974, 6555, 6795, 19980, 6570, 6810, 
            19985, 6585, 6825, 19989, 6600, 6840, 19992, 6615, 6855, 19994, 
            6630, 6870, 6645, 19891, 6885, 6660}], 
           
           Line3DBox[{6450, 6676, 19905, 6451, 6691, 19918, 6466, 6706, 19930,
             6481, 6721, 19941, 6496, 6736, 19951, 6511, 6751, 19960, 6526, 
            6766, 19968, 6541, 6781, 19975, 6556, 6796, 19981, 6571, 6811, 
            19986, 6586, 6826, 19990, 6601, 6841, 19993, 6616, 6856, 19995, 
            6631, 6871, 19996, 6646, 6886, 6661}], 
           
           Line3DBox[{6887, 7127, 6888, 19997, 7142, 6917, 19998, 7157, 6932, 
            20000, 7172, 6947, 20003, 7187, 6962, 20007, 7202, 6977, 20012, 
            7217, 6992, 20018, 7232, 7007, 20025, 7247, 7022, 20033, 7262, 
            7037, 20042, 7277, 7052, 20052, 7292, 7067, 20063, 7307, 7082, 
            20075, 7322, 7097, 20088, 7337, 7112}], 
           
           Line3DBox[{6889, 7128, 20102, 6890, 7143, 6918, 19999, 7158, 6933, 
            20001, 7173, 6948, 20004, 7188, 6963, 20008, 7203, 6978, 20013, 
            7218, 6993, 20019, 7233, 7008, 20026, 7248, 7023, 20034, 7263, 
            7038, 20043, 7278, 7053, 20053, 7293, 7068, 20064, 7308, 7083, 
            20076, 7323, 7098, 20089, 7338, 7113}], 
           
           Line3DBox[{6891, 7129, 20103, 6892, 7144, 20116, 6919, 7159, 6934, 
            20002, 7174, 6949, 20005, 7189, 6964, 20009, 7204, 6979, 20014, 
            7219, 6994, 20020, 7234, 7009, 20027, 7249, 7024, 20035, 7264, 
            7039, 20044, 7279, 7054, 20054, 7294, 7069, 20065, 7309, 7084, 
            20077, 7324, 7099, 20090, 7339, 7114}], 
           
           Line3DBox[{6893, 7130, 20104, 6894, 7145, 20117, 6920, 7160, 20129,
             6935, 7175, 6950, 20006, 7190, 6965, 20010, 7205, 6980, 20015, 
            7220, 6995, 20021, 7235, 7010, 20028, 7250, 7025, 20036, 7265, 
            7040, 20045, 7280, 7055, 20055, 7295, 7070, 20066, 7310, 7085, 
            20078, 7325, 7100, 20091, 7340, 7115}], 
           
           Line3DBox[{6895, 7131, 20105, 6896, 7146, 20118, 6921, 7161, 20130,
             6936, 7176, 20141, 6951, 7191, 6966, 20011, 7206, 6981, 20016, 
            7221, 6996, 20022, 7236, 7011, 20029, 7251, 7026, 20037, 7266, 
            7041, 20046, 7281, 7056, 20056, 7296, 7071, 20067, 7311, 7086, 
            20079, 7326, 7101, 20092, 7341, 7116}], 
           
           Line3DBox[{6897, 7132, 20106, 6898, 7147, 20119, 6922, 7162, 20131,
             6937, 7177, 20142, 6952, 7192, 20152, 6967, 7207, 6982, 20017, 
            7222, 6997, 20023, 7237, 7012, 20030, 7252, 7027, 20038, 7267, 
            7042, 20047, 7282, 7057, 20057, 7297, 7072, 20068, 7312, 7087, 
            20080, 7327, 7102, 20093, 7342, 7117}], 
           
           Line3DBox[{6899, 7133, 20107, 6900, 7148, 20120, 6923, 7163, 20132,
             6938, 7178, 20143, 6953, 7193, 20153, 6968, 7208, 20162, 6983, 
            7223, 6998, 20024, 7238, 7013, 20031, 7253, 7028, 20039, 7268, 
            7043, 20048, 7283, 7058, 20058, 7298, 7073, 20069, 7313, 7088, 
            20081, 7328, 7103, 20094, 7343, 7118}], 
           
           Line3DBox[{6901, 7134, 20108, 6902, 7149, 20121, 6924, 7164, 20133,
             6939, 7179, 20144, 6954, 7194, 20154, 6969, 7209, 20163, 6984, 
            7224, 20171, 6999, 7239, 7014, 20032, 7254, 7029, 20040, 7269, 
            7044, 20049, 7284, 7059, 20059, 7299, 7074, 20070, 7314, 7089, 
            20082, 7329, 7104, 20095, 7344, 7119}], 
           Line3DBox[{6903, 7135, 20109, 6904, 7150, 20122, 6925, 7165, 20134,
             6940, 7180, 20145, 6955, 7195, 20155, 6970, 7210, 20164, 6985, 
            7225, 20172, 7000, 7240, 20179, 7015, 7255, 7030, 20041, 7270, 
            7045, 20050, 7285, 7060, 20060, 7300, 7075, 20071, 7315, 7090, 
            20083, 7330, 7105, 20096, 7345, 7120}], 
           
           Line3DBox[{6905, 7136, 20110, 6906, 7151, 20123, 6926, 7166, 20135,
             6941, 7181, 20146, 6956, 7196, 20156, 6971, 7211, 20165, 6986, 
            7226, 20173, 7001, 7241, 20180, 7016, 7256, 20186, 7031, 7271, 
            7046, 20051, 7286, 7061, 20061, 7301, 7076, 20072, 7316, 7091, 
            20084, 7331, 7106, 20097, 7346, 7121}], 
           
           Line3DBox[{6907, 7137, 20111, 6908, 7152, 20124, 6927, 7167, 20136,
             6942, 7182, 20147, 6957, 7197, 20157, 6972, 7212, 20166, 6987, 
            7227, 20174, 7002, 7242, 20181, 7017, 7257, 20187, 7032, 7272, 
            20192, 7047, 7287, 7062, 20062, 7302, 7077, 20073, 7317, 7092, 
            20085, 7332, 7107, 20098, 7347, 7122}], 
           
           Line3DBox[{6909, 7138, 20112, 6910, 7153, 20125, 6928, 7168, 20137,
             6943, 7183, 20148, 6958, 7198, 20158, 6973, 7213, 20167, 6988, 
            7228, 20175, 7003, 7243, 20182, 7018, 7258, 20188, 7033, 7273, 
            20193, 7048, 7288, 20197, 7063, 7303, 7078, 20074, 7318, 7093, 
            20086, 7333, 7108, 20099, 7348, 7123}], 
           
           Line3DBox[{6911, 7139, 20113, 6912, 7154, 20126, 6929, 7169, 20138,
             6944, 7184, 20149, 6959, 7199, 20159, 6974, 7214, 20168, 6989, 
            7229, 20176, 7004, 7244, 20183, 7019, 7259, 20189, 7034, 7274, 
            20194, 7049, 7289, 20198, 7064, 7304, 20201, 7079, 7319, 7094, 
            20087, 7334, 7109, 20100, 7349, 7124}], 
           
           Line3DBox[{6913, 7140, 20114, 6914, 7155, 20127, 6930, 7170, 20139,
             6945, 7185, 20150, 6960, 7200, 20160, 6975, 7215, 20169, 6990, 
            7230, 20177, 7005, 7245, 20184, 7020, 7260, 20190, 7035, 7275, 
            20195, 7050, 7290, 20199, 7065, 7305, 20202, 7080, 7320, 20204, 
            7095, 7335, 7110, 20101, 7350, 7125}], 
           
           Line3DBox[{6915, 7141, 20115, 6916, 7156, 20128, 6931, 7171, 20140,
             6946, 7186, 20151, 6961, 7201, 20161, 6976, 7216, 20170, 6991, 
            7231, 20178, 7006, 7246, 20185, 7021, 7261, 20191, 7036, 7276, 
            20196, 7051, 7291, 20200, 7066, 7306, 20203, 7081, 7321, 20205, 
            7096, 7336, 20206, 7111, 7351, 7126}], 
           
           Line3DBox[{7352, 7592, 7353, 20207, 7607, 7382, 20208, 7622, 7397, 
            20210, 7637, 7412, 20213, 7652, 7427, 20217, 7667, 7442, 20222, 
            7682, 7457, 20228, 7697, 7472, 20235, 7712, 7487, 20243, 7727, 
            7502, 20252, 7742, 7517, 20262, 7757, 7532, 20273, 7772, 7547, 
            20285, 7787, 7562, 20298, 7802, 7577}], 
           
           Line3DBox[{7354, 7593, 20312, 7355, 7608, 7383, 20209, 7623, 7398, 
            20211, 7638, 7413, 20214, 7653, 7428, 20218, 7668, 7443, 20223, 
            7683, 7458, 20229, 7698, 7473, 20236, 7713, 7488, 20244, 7728, 
            7503, 20253, 7743, 7518, 20263, 7758, 7533, 20274, 7773, 7548, 
            20286, 7788, 7563, 20299, 7803, 7578}], 
           
           Line3DBox[{7356, 7594, 20313, 7357, 7609, 20326, 7384, 7624, 7399, 
            20212, 7639, 7414, 20215, 7654, 7429, 20219, 7669, 7444, 20224, 
            7684, 7459, 20230, 7699, 7474, 20237, 7714, 7489, 20245, 7729, 
            7504, 20254, 7744, 7519, 20264, 7759, 7534, 20275, 7774, 7549, 
            20287, 7789, 7564, 20300, 7804, 7579}], 
           
           Line3DBox[{7358, 7595, 20314, 7359, 7610, 20327, 7385, 7625, 20339,
             7400, 7640, 7415, 20216, 7655, 7430, 20220, 7670, 7445, 20225, 
            7685, 7460, 20231, 7700, 7475, 20238, 7715, 7490, 20246, 7730, 
            7505, 20255, 7745, 7520, 20265, 7760, 7535, 20276, 7775, 7550, 
            20288, 7790, 7565, 20301, 7805, 7580}], 
           
           Line3DBox[{7360, 7596, 20315, 7361, 7611, 20328, 7386, 7626, 20340,
             7401, 7641, 20351, 7416, 7656, 7431, 20221, 7671, 7446, 20226, 
            7686, 7461, 20232, 7701, 7476, 20239, 7716, 7491, 20247, 7731, 
            7506, 20256, 7746, 7521, 20266, 7761, 7536, 20277, 7776, 7551, 
            20289, 7791, 7566, 20302, 7806, 7581}], 
           
           Line3DBox[{7362, 7597, 20316, 7363, 7612, 20329, 7387, 7627, 20341,
             7402, 7642, 20352, 7417, 7657, 20362, 7432, 7672, 7447, 20227, 
            7687, 7462, 20233, 7702, 7477, 20240, 7717, 7492, 20248, 7732, 
            7507, 20257, 7747, 7522, 20267, 7762, 7537, 20278, 7777, 7552, 
            20290, 7792, 7567, 20303, 7807, 7582}], 
           
           Line3DBox[{7364, 7598, 20317, 7365, 7613, 20330, 7388, 7628, 20342,
             7403, 7643, 20353, 7418, 7658, 20363, 7433, 7673, 20372, 7448, 
            7688, 7463, 20234, 7703, 7478, 20241, 7718, 7493, 20249, 7733, 
            7508, 20258, 7748, 7523, 20268, 7763, 7538, 20279, 7778, 7553, 
            20291, 7793, 7568, 20304, 7808, 7583}], 
           
           Line3DBox[{7366, 7599, 20318, 7367, 7614, 20331, 7389, 7629, 20343,
             7404, 7644, 20354, 7419, 7659, 20364, 7434, 7674, 20373, 7449, 
            7689, 20381, 7464, 7704, 7479, 20242, 7719, 7494, 20250, 7734, 
            7509, 20259, 7749, 7524, 20269, 7764, 7539, 20280, 7779, 7554, 
            20292, 7794, 7569, 20305, 7809, 7584}], 
           
           Line3DBox[{7368, 7600, 20319, 7369, 7615, 20332, 7390, 7630, 20344,
             7405, 7645, 20355, 7420, 7660, 20365, 7435, 7675, 20374, 7450, 
            7690, 20382, 7465, 7705, 20389, 7480, 7720, 7495, 20251, 7735, 
            7510, 20260, 7750, 7525, 20270, 7765, 7540, 20281, 7780, 7555, 
            20293, 7795, 7570, 20306, 7810, 7585}], 
           
           Line3DBox[{7370, 7601, 20320, 7371, 7616, 20333, 7391, 7631, 20345,
             7406, 7646, 20356, 7421, 7661, 20366, 7436, 7676, 20375, 7451, 
            7691, 20383, 7466, 7706, 20390, 7481, 7721, 20396, 7496, 7736, 
            7511, 20261, 7751, 7526, 20271, 7766, 7541, 20282, 7781, 7556, 
            20294, 7796, 7571, 20307, 7811, 7586}], 
           
           Line3DBox[{7372, 7602, 20321, 7373, 7617, 20334, 7392, 7632, 20346,
             7407, 7647, 20357, 7422, 7662, 20367, 7437, 7677, 20376, 7452, 
            7692, 20384, 7467, 7707, 20391, 7482, 7722, 20397, 7497, 7737, 
            20402, 7512, 7752, 7527, 20272, 7767, 7542, 20283, 7782, 7557, 
            20295, 7797, 7572, 20308, 7812, 7587}], 
           
           Line3DBox[{7374, 7603, 20322, 7375, 7618, 20335, 7393, 7633, 20347,
             7408, 7648, 20358, 7423, 7663, 20368, 7438, 7678, 20377, 7453, 
            7693, 20385, 7468, 7708, 20392, 7483, 7723, 20398, 7498, 7738, 
            20403, 7513, 7753, 20407, 7528, 7768, 7543, 20284, 7783, 7558, 
            20296, 7798, 7573, 20309, 7813, 7588}], 
           
           Line3DBox[{7376, 7604, 20323, 7377, 7619, 20336, 7394, 7634, 20348,
             7409, 7649, 20359, 7424, 7664, 20369, 7439, 7679, 20378, 7454, 
            7694, 20386, 7469, 7709, 20393, 7484, 7724, 20399, 7499, 7739, 
            20404, 7514, 7754, 20408, 7529, 7769, 20411, 7544, 7784, 7559, 
            20297, 7799, 7574, 20310, 7814, 7589}], 
           
           Line3DBox[{7378, 7605, 20324, 7379, 7620, 20337, 7395, 7635, 20349,
             7410, 7650, 20360, 7425, 7665, 20370, 7440, 7680, 20379, 7455, 
            7695, 20387, 7470, 7710, 20394, 7485, 7725, 20400, 7500, 7740, 
            20405, 7515, 7755, 20409, 7530, 7770, 20412, 7545, 7785, 20414, 
            7560, 7800, 7575, 20311, 7815, 7590}], 
           
           Line3DBox[{7380, 7606, 20325, 7381, 7621, 20338, 7396, 7636, 20350,
             7411, 7651, 20361, 7426, 7666, 20371, 7441, 7681, 20380, 7456, 
            7696, 20388, 7471, 7711, 20395, 7486, 7726, 20401, 7501, 7741, 
            20406, 7516, 7756, 20410, 7531, 7771, 20413, 7546, 7786, 20415, 
            7561, 7801, 20416, 7576, 7816, 7591}], 
           
           Line3DBox[{7817, 8057, 7818, 20417, 8072, 7847, 20418, 8087, 7862, 
            20420, 8102, 7877, 20423, 8117, 7892, 20427, 8132, 7907, 20432, 
            8147, 7922, 20438, 8162, 7937, 20445, 8177, 7952, 20453, 8192, 
            7967, 20462, 8207, 7982, 20472, 8222, 7997, 20483, 8237, 8012, 
            20495, 8252, 8027, 20508, 8267, 8042}], 
           
           Line3DBox[{7819, 8058, 20522, 7820, 8073, 7848, 20419, 8088, 7863, 
            20421, 8103, 7878, 20424, 8118, 7893, 20428, 8133, 7908, 20433, 
            8148, 7923, 20439, 8163, 7938, 20446, 8178, 7953, 20454, 8193, 
            7968, 20463, 8208, 7983, 20473, 8223, 7998, 20484, 8238, 8013, 
            20496, 8253, 8028, 20509, 8268, 8043}], 
           
           Line3DBox[{7821, 8059, 20523, 7822, 8074, 20536, 7849, 8089, 7864, 
            20422, 8104, 7879, 20425, 8119, 7894, 20429, 8134, 7909, 20434, 
            8149, 7924, 20440, 8164, 7939, 20447, 8179, 7954, 20455, 8194, 
            7969, 20464, 8209, 7984, 20474, 8224, 7999, 20485, 8239, 8014, 
            20497, 8254, 8029, 20510, 8269, 8044}], 
           
           Line3DBox[{7823, 8060, 20524, 7824, 8075, 20537, 7850, 8090, 20549,
             7865, 8105, 7880, 20426, 8120, 7895, 20430, 8135, 7910, 20435, 
            8150, 7925, 20441, 8165, 7940, 20448, 8180, 7955, 20456, 8195, 
            7970, 20465, 8210, 7985, 20475, 8225, 8000, 20486, 8240, 8015, 
            20498, 8255, 8030, 20511, 8270, 8045}], 
           
           Line3DBox[{7825, 8061, 20525, 7826, 8076, 20538, 7851, 8091, 20550,
             7866, 8106, 20561, 7881, 8121, 7896, 20431, 8136, 7911, 20436, 
            8151, 7926, 20442, 8166, 7941, 20449, 8181, 7956, 20457, 8196, 
            7971, 20466, 8211, 7986, 20476, 8226, 8001, 20487, 8241, 8016, 
            20499, 8256, 8031, 20512, 8271, 8046}], 
           
           Line3DBox[{7827, 8062, 20526, 7828, 8077, 20539, 7852, 8092, 20551,
             7867, 8107, 20562, 7882, 8122, 20572, 7897, 8137, 7912, 20437, 
            8152, 7927, 20443, 8167, 7942, 20450, 8182, 7957, 20458, 8197, 
            7972, 20467, 8212, 7987, 20477, 8227, 8002, 20488, 8242, 8017, 
            20500, 8257, 8032, 20513, 8272, 8047}], 
           
           Line3DBox[{7829, 8063, 20527, 7830, 8078, 20540, 7853, 8093, 20552,
             7868, 8108, 20563, 7883, 8123, 20573, 7898, 8138, 20582, 7913, 
            8153, 7928, 20444, 8168, 7943, 20451, 8183, 7958, 20459, 8198, 
            7973, 20468, 8213, 7988, 20478, 8228, 8003, 20489, 8243, 8018, 
            20501, 8258, 8033, 20514, 8273, 8048}], 
           
           Line3DBox[{7831, 8064, 20528, 7832, 8079, 20541, 7854, 8094, 20553,
             7869, 8109, 20564, 7884, 8124, 20574, 7899, 8139, 20583, 7914, 
            8154, 20591, 7929, 8169, 7944, 20452, 8184, 7959, 20460, 8199, 
            7974, 20469, 8214, 7989, 20479, 8229, 8004, 20490, 8244, 8019, 
            20502, 8259, 8034, 20515, 8274, 8049}], 
           
           Line3DBox[{7833, 8065, 20529, 7834, 8080, 20542, 7855, 8095, 20554,
             7870, 8110, 20565, 7885, 8125, 20575, 7900, 8140, 20584, 7915, 
            8155, 20592, 7930, 8170, 20599, 7945, 8185, 7960, 20461, 8200, 
            7975, 20470, 8215, 7990, 20480, 8230, 8005, 20491, 8245, 8020, 
            20503, 8260, 8035, 20516, 8275, 8050}], 
           
           Line3DBox[{7835, 8066, 20530, 7836, 8081, 20543, 7856, 8096, 20555,
             7871, 8111, 20566, 7886, 8126, 20576, 7901, 8141, 20585, 7916, 
            8156, 20593, 7931, 8171, 20600, 7946, 8186, 20606, 7961, 8201, 
            7976, 20471, 8216, 7991, 20481, 8231, 8006, 20492, 8246, 8021, 
            20504, 8261, 8036, 20517, 8276, 8051}], 
           
           Line3DBox[{7837, 8067, 20531, 7838, 8082, 20544, 7857, 8097, 20556,
             7872, 8112, 20567, 7887, 8127, 20577, 7902, 8142, 20586, 7917, 
            8157, 20594, 7932, 8172, 20601, 7947, 8187, 20607, 7962, 8202, 
            20612, 7977, 8217, 7992, 20482, 8232, 8007, 20493, 8247, 8022, 
            20505, 8262, 8037, 20518, 8277, 8052}], 
           
           Line3DBox[{7839, 8068, 20532, 7840, 8083, 20545, 7858, 8098, 20557,
             7873, 8113, 20568, 7888, 8128, 20578, 7903, 8143, 20587, 7918, 
            8158, 20595, 7933, 8173, 20602, 7948, 8188, 20608, 7963, 8203, 
            20613, 7978, 8218, 20617, 7993, 8233, 8008, 20494, 8248, 8023, 
            20506, 8263, 8038, 20519, 8278, 8053}], 
           
           Line3DBox[{7841, 8069, 20533, 7842, 8084, 20546, 7859, 8099, 20558,
             7874, 8114, 20569, 7889, 8129, 20579, 7904, 8144, 20588, 7919, 
            8159, 20596, 7934, 8174, 20603, 7949, 8189, 20609, 7964, 8204, 
            20614, 7979, 8219, 20618, 7994, 8234, 20621, 8009, 8249, 8024, 
            20507, 8264, 8039, 20520, 8279, 8054}], 
           
           Line3DBox[{7843, 8070, 20534, 7844, 8085, 20547, 7860, 8100, 20559,
             7875, 8115, 20570, 7890, 8130, 20580, 7905, 8145, 20589, 7920, 
            8160, 20597, 7935, 8175, 20604, 7950, 8190, 20610, 7965, 8205, 
            20615, 7980, 8220, 20619, 7995, 8235, 20622, 8010, 8250, 20624, 
            8025, 8265, 8040, 20521, 8280, 8055}], 
           
           Line3DBox[{7845, 8071, 20535, 7846, 8086, 20548, 7861, 8101, 20560,
             7876, 8116, 20571, 7891, 8131, 20581, 7906, 8146, 20590, 7921, 
            8161, 20598, 7936, 8176, 20605, 7951, 8191, 20611, 7966, 8206, 
            20616, 7981, 8221, 20620, 7996, 8236, 20623, 8011, 8251, 20625, 
            8026, 8266, 20626, 8041, 8281, 8056}], 
           
           Line3DBox[{8282, 8522, 8283, 20627, 8537, 8312, 20628, 8552, 8327, 
            20630, 8567, 8342, 20633, 8582, 8357, 20637, 8597, 8372, 20642, 
            8612, 8387, 20648, 8627, 8402, 20655, 8642, 8417, 20663, 8657, 
            8432, 20672, 8672, 8447, 20682, 8687, 8462, 20693, 8702, 8477, 
            20705, 8717, 8492, 20718, 8732, 8507}], 
           
           Line3DBox[{8284, 8523, 20732, 8285, 8538, 8313, 20629, 8553, 8328, 
            20631, 8568, 8343, 20634, 8583, 8358, 20638, 8598, 8373, 20643, 
            8613, 8388, 20649, 8628, 8403, 20656, 8643, 8418, 20664, 8658, 
            8433, 20673, 8673, 8448, 20683, 8688, 8463, 20694, 8703, 8478, 
            20706, 8718, 8493, 20719, 8733, 8508}], 
           
           Line3DBox[{8286, 8524, 20733, 8287, 8539, 20746, 8314, 8554, 8329, 
            20632, 8569, 8344, 20635, 8584, 8359, 20639, 8599, 8374, 20644, 
            8614, 8389, 20650, 8629, 8404, 20657, 8644, 8419, 20665, 8659, 
            8434, 20674, 8674, 8449, 20684, 8689, 8464, 20695, 8704, 8479, 
            20707, 8719, 8494, 20720, 8734, 8509}], 
           
           Line3DBox[{8288, 8525, 20734, 8289, 8540, 20747, 8315, 8555, 20759,
             8330, 8570, 8345, 20636, 8585, 8360, 20640, 8600, 8375, 20645, 
            8615, 8390, 20651, 8630, 8405, 20658, 8645, 8420, 20666, 8660, 
            8435, 20675, 8675, 8450, 20685, 8690, 8465, 20696, 8705, 8480, 
            20708, 8720, 8495, 20721, 8735, 8510}], 
           
           Line3DBox[{8290, 8526, 20735, 8291, 8541, 20748, 8316, 8556, 20760,
             8331, 8571, 20771, 8346, 8586, 8361, 20641, 8601, 8376, 20646, 
            8616, 8391, 20652, 8631, 8406, 20659, 8646, 8421, 20667, 8661, 
            8436, 20676, 8676, 8451, 20686, 8691, 8466, 20697, 8706, 8481, 
            20709, 8721, 8496, 20722, 8736, 8511}], 
           
           Line3DBox[{8292, 8527, 20736, 8293, 8542, 20749, 8317, 8557, 20761,
             8332, 8572, 20772, 8347, 8587, 20782, 8362, 8602, 8377, 20647, 
            8617, 8392, 20653, 8632, 8407, 20660, 8647, 8422, 20668, 8662, 
            8437, 20677, 8677, 8452, 20687, 8692, 8467, 20698, 8707, 8482, 
            20710, 8722, 8497, 20723, 8737, 8512}], 
           
           Line3DBox[{8294, 8528, 20737, 8295, 8543, 20750, 8318, 8558, 20762,
             8333, 8573, 20773, 8348, 8588, 20783, 8363, 8603, 20792, 8378, 
            8618, 8393, 20654, 8633, 8408, 20661, 8648, 8423, 20669, 8663, 
            8438, 20678, 8678, 8453, 20688, 8693, 8468, 20699, 8708, 8483, 
            20711, 8723, 8498, 20724, 8738, 8513}], 
           
           Line3DBox[{8296, 8529, 20738, 8297, 8544, 20751, 8319, 8559, 20763,
             8334, 8574, 20774, 8349, 8589, 20784, 8364, 8604, 20793, 8379, 
            8619, 20801, 8394, 8634, 8409, 20662, 8649, 8424, 20670, 8664, 
            8439, 20679, 8679, 8454, 20689, 8694, 8469, 20700, 8709, 8484, 
            20712, 8724, 8499, 20725, 8739, 8514}], 
           
           Line3DBox[{8298, 8530, 20739, 8299, 8545, 20752, 8320, 8560, 20764,
             8335, 8575, 20775, 8350, 8590, 20785, 8365, 8605, 20794, 8380, 
            8620, 20802, 8395, 8635, 20809, 8410, 8650, 8425, 20671, 8665, 
            8440, 20680, 8680, 8455, 20690, 8695, 8470, 20701, 8710, 8485, 
            20713, 8725, 8500, 20726, 8740, 8515}], 
           
           Line3DBox[{8300, 8531, 20740, 8301, 8546, 20753, 8321, 8561, 20765,
             8336, 8576, 20776, 8351, 8591, 20786, 8366, 8606, 20795, 8381, 
            8621, 20803, 8396, 8636, 20810, 8411, 8651, 20816, 8426, 8666, 
            8441, 20681, 8681, 8456, 20691, 8696, 8471, 20702, 8711, 8486, 
            20714, 8726, 8501, 20727, 8741, 8516}], 
           
           Line3DBox[{8302, 8532, 20741, 8303, 8547, 20754, 8322, 8562, 20766,
             8337, 8577, 20777, 8352, 8592, 20787, 8367, 8607, 20796, 8382, 
            8622, 20804, 8397, 8637, 20811, 8412, 8652, 20817, 8427, 8667, 
            20822, 8442, 8682, 8457, 20692, 8697, 8472, 20703, 8712, 8487, 
            20715, 8727, 8502, 20728, 8742, 8517}], 
           
           Line3DBox[{8304, 8533, 20742, 8305, 8548, 20755, 8323, 8563, 20767,
             8338, 8578, 20778, 8353, 8593, 20788, 8368, 8608, 20797, 8383, 
            8623, 20805, 8398, 8638, 20812, 8413, 8653, 20818, 8428, 8668, 
            20823, 8443, 8683, 20827, 8458, 8698, 8473, 20704, 8713, 8488, 
            20716, 8728, 8503, 20729, 8743, 8518}], 
           
           Line3DBox[{8306, 8534, 20743, 8307, 8549, 20756, 8324, 8564, 20768,
             8339, 8579, 20779, 8354, 8594, 20789, 8369, 8609, 20798, 8384, 
            8624, 20806, 8399, 8639, 20813, 8414, 8654, 20819, 8429, 8669, 
            20824, 8444, 8684, 20828, 8459, 8699, 20831, 8474, 8714, 8489, 
            20717, 8729, 8504, 20730, 8744, 8519}], 
           
           Line3DBox[{8308, 8535, 20744, 8309, 8550, 20757, 8325, 8565, 20769,
             8340, 8580, 20780, 8355, 8595, 20790, 8370, 8610, 20799, 8385, 
            8625, 20807, 8400, 8640, 20814, 8415, 8655, 20820, 8430, 8670, 
            20825, 8445, 8685, 20829, 8460, 8700, 20832, 8475, 8715, 20834, 
            8490, 8730, 8505, 20731, 8745, 8520}], 
           
           Line3DBox[{8310, 8536, 20745, 8311, 8551, 20758, 8326, 8566, 20770,
             8341, 8581, 20781, 8356, 8596, 20791, 8371, 8611, 20800, 8386, 
            8626, 20808, 8401, 8641, 20815, 8416, 8656, 20821, 8431, 8671, 
            20826, 8446, 8686, 20830, 8461, 8701, 20833, 8476, 8716, 20835, 
            8491, 8731, 20836, 8506, 8746, 8521}], 
           
           Line3DBox[{8747, 8987, 8748, 20837, 9002, 8777, 20838, 9017, 8792, 
            20840, 9032, 8807, 20843, 9047, 8822, 20847, 9062, 8837, 20852, 
            9077, 8852, 20858, 9092, 8867, 20865, 9107, 8882, 20873, 9122, 
            8897, 20882, 9137, 8912, 20892, 9152, 8927, 20903, 9167, 8942, 
            20915, 9182, 8957, 20928, 9197, 8972}], 
           
           Line3DBox[{8749, 8988, 20942, 8750, 9003, 8778, 20839, 9018, 8793, 
            20841, 9033, 8808, 20844, 9048, 8823, 20848, 9063, 8838, 20853, 
            9078, 8853, 20859, 9093, 8868, 20866, 9108, 8883, 20874, 9123, 
            8898, 20883, 9138, 8913, 20893, 9153, 8928, 20904, 9168, 8943, 
            20916, 9183, 8958, 20929, 9198, 8973}], 
           
           Line3DBox[{8751, 8989, 20943, 8752, 9004, 20956, 8779, 9019, 8794, 
            20842, 9034, 8809, 20845, 9049, 8824, 20849, 9064, 8839, 20854, 
            9079, 8854, 20860, 9094, 8869, 20867, 9109, 8884, 20875, 9124, 
            8899, 20884, 9139, 8914, 20894, 9154, 8929, 20905, 9169, 8944, 
            20917, 9184, 8959, 20930, 9199, 8974}], 
           
           Line3DBox[{8753, 8990, 20944, 8754, 9005, 20957, 8780, 9020, 20969,
             8795, 9035, 8810, 20846, 9050, 8825, 20850, 9065, 8840, 20855, 
            9080, 8855, 20861, 9095, 8870, 20868, 9110, 8885, 20876, 9125, 
            8900, 20885, 9140, 8915, 20895, 9155, 8930, 20906, 9170, 8945, 
            20918, 9185, 8960, 20931, 9200, 8975}], 
           
           Line3DBox[{8755, 8991, 20945, 8756, 9006, 20958, 8781, 9021, 20970,
             8796, 9036, 20981, 8811, 9051, 8826, 20851, 9066, 8841, 20856, 
            9081, 8856, 20862, 9096, 8871, 20869, 9111, 8886, 20877, 9126, 
            8901, 20886, 9141, 8916, 20896, 9156, 8931, 20907, 9171, 8946, 
            20919, 9186, 8961, 20932, 9201, 8976}], 
           
           Line3DBox[{8757, 8992, 20946, 8758, 9007, 20959, 8782, 9022, 20971,
             8797, 9037, 20982, 8812, 9052, 20992, 8827, 9067, 8842, 20857, 
            9082, 8857, 20863, 9097, 8872, 20870, 9112, 8887, 20878, 9127, 
            8902, 20887, 9142, 8917, 20897, 9157, 8932, 20908, 9172, 8947, 
            20920, 9187, 8962, 20933, 9202, 8977}], 
           
           Line3DBox[{8759, 8993, 20947, 8760, 9008, 20960, 8783, 9023, 20972,
             8798, 9038, 20983, 8813, 9053, 20993, 8828, 9068, 21002, 8843, 
            9083, 8858, 20864, 9098, 8873, 20871, 9113, 8888, 20879, 9128, 
            8903, 20888, 9143, 8918, 20898, 9158, 8933, 20909, 9173, 8948, 
            20921, 9188, 8963, 20934, 9203, 8978}], 
           
           Line3DBox[{8761, 8994, 20948, 8762, 9009, 20961, 8784, 9024, 20973,
             8799, 9039, 20984, 8814, 9054, 20994, 8829, 9069, 21003, 8844, 
            9084, 21011, 8859, 9099, 8874, 20872, 9114, 8889, 20880, 9129, 
            8904, 20889, 9144, 8919, 20899, 9159, 8934, 20910, 9174, 8949, 
            20922, 9189, 8964, 20935, 9204, 8979}], 
           
           Line3DBox[{8763, 8995, 20949, 8764, 9010, 20962, 8785, 9025, 20974,
             8800, 9040, 20985, 8815, 9055, 20995, 8830, 9070, 21004, 8845, 
            9085, 21012, 8860, 9100, 21019, 8875, 9115, 8890, 20881, 9130, 
            8905, 20890, 9145, 8920, 20900, 9160, 8935, 20911, 9175, 8950, 
            20923, 9190, 8965, 20936, 9205, 8980}], 
           
           Line3DBox[{8765, 8996, 20950, 8766, 9011, 20963, 8786, 9026, 20975,
             8801, 9041, 20986, 8816, 9056, 20996, 8831, 9071, 21005, 8846, 
            9086, 21013, 8861, 9101, 21020, 8876, 9116, 21026, 8891, 9131, 
            8906, 20891, 9146, 8921, 20901, 9161, 8936, 20912, 9176, 8951, 
            20924, 9191, 8966, 20937, 9206, 8981}], 
           Line3DBox[{8767, 8997, 20951, 8768, 9012, 20964, 8787, 9027, 20976,
             8802, 9042, 20987, 8817, 9057, 20997, 8832, 9072, 21006, 8847, 
            9087, 21014, 8862, 9102, 21021, 8877, 9117, 21027, 8892, 9132, 
            21032, 8907, 9147, 8922, 20902, 9162, 8937, 20913, 9177, 8952, 
            20925, 9192, 8967, 20938, 9207, 8982}], 
           
           Line3DBox[{8769, 8998, 20952, 8770, 9013, 20965, 8788, 9028, 20977,
             8803, 9043, 20988, 8818, 9058, 20998, 8833, 9073, 21007, 8848, 
            9088, 21015, 8863, 9103, 21022, 8878, 9118, 21028, 8893, 9133, 
            21033, 8908, 9148, 21037, 8923, 9163, 8938, 20914, 9178, 8953, 
            20926, 9193, 8968, 20939, 9208, 8983}], 
           
           Line3DBox[{8771, 8999, 20953, 8772, 9014, 20966, 8789, 9029, 20978,
             8804, 9044, 20989, 8819, 9059, 20999, 8834, 9074, 21008, 8849, 
            9089, 21016, 8864, 9104, 21023, 8879, 9119, 21029, 8894, 9134, 
            21034, 8909, 9149, 21038, 8924, 9164, 21041, 8939, 9179, 8954, 
            20927, 9194, 8969, 20940, 9209, 8984}], 
           
           Line3DBox[{8773, 9000, 20954, 8774, 9015, 20967, 8790, 9030, 20979,
             8805, 9045, 20990, 8820, 9060, 21000, 8835, 9075, 21009, 8850, 
            9090, 21017, 8865, 9105, 21024, 8880, 9120, 21030, 8895, 9135, 
            21035, 8910, 9150, 21039, 8925, 9165, 21042, 8940, 9180, 21044, 
            8955, 9195, 8970, 20941, 9210, 8985}], 
           
           Line3DBox[{8775, 9001, 20955, 8776, 9016, 20968, 8791, 9031, 20980,
             8806, 9046, 20991, 8821, 9061, 21001, 8836, 9076, 21010, 8851, 
            9091, 21018, 8866, 9106, 21025, 8881, 9121, 21031, 8896, 9136, 
            21036, 8911, 9151, 21040, 8926, 9166, 21043, 8941, 9181, 21045, 
            8956, 9196, 21046, 8971, 9211, 8986}], 
           
           Line3DBox[{9212, 9452, 9213, 21047, 9467, 9242, 21048, 9482, 9257, 
            21050, 9497, 9272, 21053, 9512, 9287, 21057, 9527, 9302, 21062, 
            9542, 9317, 21068, 9557, 9332, 21075, 9572, 9347, 21083, 9587, 
            9362, 21092, 9602, 9377, 21102, 9617, 9392, 21113, 9632, 9407, 
            21125, 9647, 9422, 21138, 9662, 9437}], 
           
           Line3DBox[{9214, 9453, 21152, 9215, 9468, 9243, 21049, 9483, 9258, 
            21051, 9498, 9273, 21054, 9513, 9288, 21058, 9528, 9303, 21063, 
            9543, 9318, 21069, 9558, 9333, 21076, 9573, 9348, 21084, 9588, 
            9363, 21093, 9603, 9378, 21103, 9618, 9393, 21114, 9633, 9408, 
            21126, 9648, 9423, 21139, 9663, 9438}], 
           
           Line3DBox[{9216, 9454, 21153, 9217, 9469, 21166, 9244, 9484, 9259, 
            21052, 9499, 9274, 21055, 9514, 9289, 21059, 9529, 9304, 21064, 
            9544, 9319, 21070, 9559, 9334, 21077, 9574, 9349, 21085, 9589, 
            9364, 21094, 9604, 9379, 21104, 9619, 9394, 21115, 9634, 9409, 
            21127, 9649, 9424, 21140, 9664, 9439}], 
           
           Line3DBox[{9218, 9455, 21154, 9219, 9470, 21167, 9245, 9485, 21179,
             9260, 9500, 9275, 21056, 9515, 9290, 21060, 9530, 9305, 21065, 
            9545, 9320, 21071, 9560, 9335, 21078, 9575, 9350, 21086, 9590, 
            9365, 21095, 9605, 9380, 21105, 9620, 9395, 21116, 9635, 9410, 
            21128, 9650, 9425, 21141, 9665, 9440}], 
           
           Line3DBox[{9220, 9456, 21155, 9221, 9471, 21168, 9246, 9486, 21180,
             9261, 9501, 21191, 9276, 9516, 9291, 21061, 9531, 9306, 21066, 
            9546, 9321, 21072, 9561, 9336, 21079, 9576, 9351, 21087, 9591, 
            9366, 21096, 9606, 9381, 21106, 9621, 9396, 21117, 9636, 9411, 
            21129, 9651, 9426, 21142, 9666, 9441}], 
           
           Line3DBox[{9222, 9457, 21156, 9223, 9472, 21169, 9247, 9487, 21181,
             9262, 9502, 21192, 9277, 9517, 21202, 9292, 9532, 9307, 21067, 
            9547, 9322, 21073, 9562, 9337, 21080, 9577, 9352, 21088, 9592, 
            9367, 21097, 9607, 9382, 21107, 9622, 9397, 21118, 9637, 9412, 
            21130, 9652, 9427, 21143, 9667, 9442}], 
           
           Line3DBox[{9224, 9458, 21157, 9225, 9473, 21170, 9248, 9488, 21182,
             9263, 9503, 21193, 9278, 9518, 21203, 9293, 9533, 21212, 9308, 
            9548, 9323, 21074, 9563, 9338, 21081, 9578, 9353, 21089, 9593, 
            9368, 21098, 9608, 9383, 21108, 9623, 9398, 21119, 9638, 9413, 
            21131, 9653, 9428, 21144, 9668, 9443}], 
           
           Line3DBox[{9226, 9459, 21158, 9227, 9474, 21171, 9249, 9489, 21183,
             9264, 9504, 21194, 9279, 9519, 21204, 9294, 9534, 21213, 9309, 
            9549, 21221, 9324, 9564, 9339, 21082, 9579, 9354, 21090, 9594, 
            9369, 21099, 9609, 9384, 21109, 9624, 9399, 21120, 9639, 9414, 
            21132, 9654, 9429, 21145, 9669, 9444}], 
           
           Line3DBox[{9228, 9460, 21159, 9229, 9475, 21172, 9250, 9490, 21184,
             9265, 9505, 21195, 9280, 9520, 21205, 9295, 9535, 21214, 9310, 
            9550, 21222, 9325, 9565, 21229, 9340, 9580, 9355, 21091, 9595, 
            9370, 21100, 9610, 9385, 21110, 9625, 9400, 21121, 9640, 9415, 
            21133, 9655, 9430, 21146, 9670, 9445}], 
           
           Line3DBox[{9230, 9461, 21160, 9231, 9476, 21173, 9251, 9491, 21185,
             9266, 9506, 21196, 9281, 9521, 21206, 9296, 9536, 21215, 9311, 
            9551, 21223, 9326, 9566, 21230, 9341, 9581, 21236, 9356, 9596, 
            9371, 21101, 9611, 9386, 21111, 9626, 9401, 21122, 9641, 9416, 
            21134, 9656, 9431, 21147, 9671, 9446}], 
           
           Line3DBox[{9232, 9462, 21161, 9233, 9477, 21174, 9252, 9492, 21186,
             9267, 9507, 21197, 9282, 9522, 21207, 9297, 9537, 21216, 9312, 
            9552, 21224, 9327, 9567, 21231, 9342, 9582, 21237, 9357, 9597, 
            21242, 9372, 9612, 9387, 21112, 9627, 9402, 21123, 9642, 9417, 
            21135, 9657, 9432, 21148, 9672, 9447}], 
           
           Line3DBox[{9234, 9463, 21162, 9235, 9478, 21175, 9253, 9493, 21187,
             9268, 9508, 21198, 9283, 9523, 21208, 9298, 9538, 21217, 9313, 
            9553, 21225, 9328, 9568, 21232, 9343, 9583, 21238, 9358, 9598, 
            21243, 9373, 9613, 21247, 9388, 9628, 9403, 21124, 9643, 9418, 
            21136, 9658, 9433, 21149, 9673, 9448}], 
           
           Line3DBox[{9236, 9464, 21163, 9237, 9479, 21176, 9254, 9494, 21188,
             9269, 9509, 21199, 9284, 9524, 21209, 9299, 9539, 21218, 9314, 
            9554, 21226, 9329, 9569, 21233, 9344, 9584, 21239, 9359, 9599, 
            21244, 9374, 9614, 21248, 9389, 9629, 21251, 9404, 9644, 9419, 
            21137, 9659, 9434, 21150, 9674, 9449}], 
           
           Line3DBox[{9238, 9465, 21164, 9239, 9480, 21177, 9255, 9495, 21189,
             9270, 9510, 21200, 9285, 9525, 21210, 9300, 9540, 21219, 9315, 
            9555, 21227, 9330, 9570, 21234, 9345, 9585, 21240, 9360, 9600, 
            21245, 9375, 9615, 21249, 9390, 9630, 21252, 9405, 9645, 21254, 
            9420, 9660, 9435, 21151, 9675, 9450}], 
           
           Line3DBox[{9240, 9466, 21165, 9241, 9481, 21178, 9256, 9496, 21190,
             9271, 9511, 21201, 9286, 9526, 21211, 9301, 9541, 21220, 9316, 
            9556, 21228, 9331, 9571, 21235, 9346, 9586, 21241, 9361, 9601, 
            21246, 9376, 9616, 21250, 9391, 9631, 21253, 9406, 9646, 21255, 
            9421, 9661, 21256, 9436, 9676, 9451}], 
           
           Line3DBox[{9677, 9917, 9678, 21257, 9932, 9707, 21258, 9947, 9722, 
            21260, 9962, 9737, 21263, 9977, 9752, 21267, 9992, 9767, 21272, 
            10007, 9782, 21278, 10022, 9797, 21285, 10037, 9812, 21293, 10052,
             9827, 21302, 10067, 9842, 21312, 10082, 9857, 21323, 10097, 9872,
             21335, 10112, 9887, 21348, 10127, 9902}], 
           
           Line3DBox[{9679, 9918, 21362, 9680, 9933, 9708, 21259, 9948, 9723, 
            21261, 9963, 9738, 21264, 9978, 9753, 21268, 9993, 9768, 21273, 
            10008, 9783, 21279, 10023, 9798, 21286, 10038, 9813, 21294, 10053,
             9828, 21303, 10068, 9843, 21313, 10083, 9858, 21324, 10098, 9873,
             21336, 10113, 9888, 21349, 10128, 9903}], 
           
           Line3DBox[{9681, 9919, 21363, 9682, 9934, 21376, 9709, 9949, 9724, 
            21262, 9964, 9739, 21265, 9979, 9754, 21269, 9994, 9769, 21274, 
            10009, 9784, 21280, 10024, 9799, 21287, 10039, 9814, 21295, 10054,
             9829, 21304, 10069, 9844, 21314, 10084, 9859, 21325, 10099, 9874,
             21337, 10114, 9889, 21350, 10129, 9904}], 
           
           Line3DBox[{9683, 9920, 21364, 9684, 9935, 21377, 9710, 9950, 21389,
             9725, 9965, 9740, 21266, 9980, 9755, 21270, 9995, 9770, 21275, 
            10010, 9785, 21281, 10025, 9800, 21288, 10040, 9815, 21296, 10055,
             9830, 21305, 10070, 9845, 21315, 10085, 9860, 21326, 10100, 9875,
             21338, 10115, 9890, 21351, 10130, 9905}], 
           
           Line3DBox[{9685, 9921, 21365, 9686, 9936, 21378, 9711, 9951, 21390,
             9726, 9966, 21401, 9741, 9981, 9756, 21271, 9996, 9771, 21276, 
            10011, 9786, 21282, 10026, 9801, 21289, 10041, 9816, 21297, 10056,
             9831, 21306, 10071, 9846, 21316, 10086, 9861, 21327, 10101, 9876,
             21339, 10116, 9891, 21352, 10131, 9906}], 
           
           Line3DBox[{9687, 9922, 21366, 9688, 9937, 21379, 9712, 9952, 21391,
             9727, 9967, 21402, 9742, 9982, 21412, 9757, 9997, 9772, 21277, 
            10012, 9787, 21283, 10027, 9802, 21290, 10042, 9817, 21298, 10057,
             9832, 21307, 10072, 9847, 21317, 10087, 9862, 21328, 10102, 9877,
             21340, 10117, 9892, 21353, 10132, 9907}], 
           
           Line3DBox[{9689, 9923, 21367, 9690, 9938, 21380, 9713, 9953, 21392,
             9728, 9968, 21403, 9743, 9983, 21413, 9758, 9998, 21422, 9773, 
            10013, 9788, 21284, 10028, 9803, 21291, 10043, 9818, 21299, 10058,
             9833, 21308, 10073, 9848, 21318, 10088, 9863, 21329, 10103, 9878,
             21341, 10118, 9893, 21354, 10133, 9908}], 
           
           Line3DBox[{9691, 9924, 21368, 9692, 9939, 21381, 9714, 9954, 21393,
             9729, 9969, 21404, 9744, 9984, 21414, 9759, 9999, 21423, 9774, 
            10014, 21431, 9789, 10029, 9804, 21292, 10044, 9819, 21300, 10059,
             9834, 21309, 10074, 9849, 21319, 10089, 9864, 21330, 10104, 9879,
             21342, 10119, 9894, 21355, 10134, 9909}], 
           
           Line3DBox[{9693, 9925, 21369, 9694, 9940, 21382, 9715, 9955, 21394,
             9730, 9970, 21405, 9745, 9985, 21415, 9760, 10000, 21424, 9775, 
            10015, 21432, 9790, 10030, 21439, 9805, 10045, 9820, 21301, 10060,
             9835, 21310, 10075, 9850, 21320, 10090, 9865, 21331, 10105, 9880,
             21343, 10120, 9895, 21356, 10135, 9910}], 
           
           Line3DBox[{9695, 9926, 21370, 9696, 9941, 21383, 9716, 9956, 21395,
             9731, 9971, 21406, 9746, 9986, 21416, 9761, 10001, 21425, 9776, 
            10016, 21433, 9791, 10031, 21440, 9806, 10046, 21446, 9821, 10061,
             9836, 21311, 10076, 9851, 21321, 10091, 9866, 21332, 10106, 9881,
             21344, 10121, 9896, 21357, 10136, 9911}], 
           
           Line3DBox[{9697, 9927, 21371, 9698, 9942, 21384, 9717, 9957, 21396,
             9732, 9972, 21407, 9747, 9987, 21417, 9762, 10002, 21426, 9777, 
            10017, 21434, 9792, 10032, 21441, 9807, 10047, 21447, 9822, 10062,
             21452, 9837, 10077, 9852, 21322, 10092, 9867, 21333, 10107, 9882,
             21345, 10122, 9897, 21358, 10137, 9912}], 
           
           Line3DBox[{9699, 9928, 21372, 9700, 9943, 21385, 9718, 9958, 21397,
             9733, 9973, 21408, 9748, 9988, 21418, 9763, 10003, 21427, 9778, 
            10018, 21435, 9793, 10033, 21442, 9808, 10048, 21448, 9823, 10063,
             21453, 9838, 10078, 21457, 9853, 10093, 9868, 21334, 10108, 9883,
             21346, 10123, 9898, 21359, 10138, 9913}], 
           
           Line3DBox[{9701, 9929, 21373, 9702, 9944, 21386, 9719, 9959, 21398,
             9734, 9974, 21409, 9749, 9989, 21419, 9764, 10004, 21428, 9779, 
            10019, 21436, 9794, 10034, 21443, 9809, 10049, 21449, 9824, 10064,
             21454, 9839, 10079, 21458, 9854, 10094, 21461, 9869, 10109, 9884,
             21347, 10124, 9899, 21360, 10139, 9914}], 
           
           Line3DBox[{9703, 9930, 21374, 9704, 9945, 21387, 9720, 9960, 21399,
             9735, 9975, 21410, 9750, 9990, 21420, 9765, 10005, 21429, 9780, 
            10020, 21437, 9795, 10035, 21444, 9810, 10050, 21450, 9825, 10065,
             21455, 9840, 10080, 21459, 9855, 10095, 21462, 9870, 10110, 
            21464, 9885, 10125, 9900, 21361, 10140, 9915}], 
           
           Line3DBox[{9705, 9931, 21375, 9706, 9946, 21388, 9721, 9961, 21400,
             9736, 9976, 21411, 9751, 9991, 21421, 9766, 10006, 21430, 9781, 
            10021, 21438, 9796, 10036, 21445, 9811, 10051, 21451, 9826, 10066,
             21456, 9841, 10081, 21460, 9856, 10096, 21463, 9871, 10111, 
            21465, 9886, 10126, 21466, 9901, 10141, 9916}], 
           
           Line3DBox[{10142, 10382, 10143, 21467, 10397, 10172, 21468, 10412, 
            10187, 21470, 10427, 10202, 21473, 10442, 10217, 21477, 10457, 
            10232, 21482, 10472, 10247, 21488, 10487, 10262, 21495, 10502, 
            10277, 21503, 10517, 10292, 21512, 10532, 10307, 21522, 10547, 
            10322, 21533, 10562, 10337, 21545, 10577, 10352, 21558, 10592, 
            10367}], 
           
           Line3DBox[{10144, 10383, 21572, 10145, 10398, 10173, 21469, 10413, 
            10188, 21471, 10428, 10203, 21474, 10443, 10218, 21478, 10458, 
            10233, 21483, 10473, 10248, 21489, 10488, 10263, 21496, 10503, 
            10278, 21504, 10518, 10293, 21513, 10533, 10308, 21523, 10548, 
            10323, 21534, 10563, 10338, 21546, 10578, 10353, 21559, 10593, 
            10368}], 
           
           Line3DBox[{10146, 10384, 21573, 10147, 10399, 21586, 10174, 10414, 
            10189, 21472, 10429, 10204, 21475, 10444, 10219, 21479, 10459, 
            10234, 21484, 10474, 10249, 21490, 10489, 10264, 21497, 10504, 
            10279, 21505, 10519, 10294, 21514, 10534, 10309, 21524, 10549, 
            10324, 21535, 10564, 10339, 21547, 10579, 10354, 21560, 10594, 
            10369}], 
           
           Line3DBox[{10148, 10385, 21574, 10149, 10400, 21587, 10175, 10415, 
            21599, 10190, 10430, 10205, 21476, 10445, 10220, 21480, 10460, 
            10235, 21485, 10475, 10250, 21491, 10490, 10265, 21498, 10505, 
            10280, 21506, 10520, 10295, 21515, 10535, 10310, 21525, 10550, 
            10325, 21536, 10565, 10340, 21548, 10580, 10355, 21561, 10595, 
            10370}], 
           
           Line3DBox[{10150, 10386, 21575, 10151, 10401, 21588, 10176, 10416, 
            21600, 10191, 10431, 21611, 10206, 10446, 10221, 21481, 10461, 
            10236, 21486, 10476, 10251, 21492, 10491, 10266, 21499, 10506, 
            10281, 21507, 10521, 10296, 21516, 10536, 10311, 21526, 10551, 
            10326, 21537, 10566, 10341, 21549, 10581, 10356, 21562, 10596, 
            10371}], 
           
           Line3DBox[{10152, 10387, 21576, 10153, 10402, 21589, 10177, 10417, 
            21601, 10192, 10432, 21612, 10207, 10447, 21622, 10222, 10462, 
            10237, 21487, 10477, 10252, 21493, 10492, 10267, 21500, 10507, 
            10282, 21508, 10522, 10297, 21517, 10537, 10312, 21527, 10552, 
            10327, 21538, 10567, 10342, 21550, 10582, 10357, 21563, 10597, 
            10372}], 
           
           Line3DBox[{10154, 10388, 21577, 10155, 10403, 21590, 10178, 10418, 
            21602, 10193, 10433, 21613, 10208, 10448, 21623, 10223, 10463, 
            21632, 10238, 10478, 10253, 21494, 10493, 10268, 21501, 10508, 
            10283, 21509, 10523, 10298, 21518, 10538, 10313, 21528, 10553, 
            10328, 21539, 10568, 10343, 21551, 10583, 10358, 21564, 10598, 
            10373}], 
           
           Line3DBox[{10156, 10389, 21578, 10157, 10404, 21591, 10179, 10419, 
            21603, 10194, 10434, 21614, 10209, 10449, 21624, 10224, 10464, 
            21633, 10239, 10479, 21641, 10254, 10494, 10269, 21502, 10509, 
            10284, 21510, 10524, 10299, 21519, 10539, 10314, 21529, 10554, 
            10329, 21540, 10569, 10344, 21552, 10584, 10359, 21565, 10599, 
            10374}], 
           
           Line3DBox[{10158, 10390, 21579, 10159, 10405, 21592, 10180, 10420, 
            21604, 10195, 10435, 21615, 10210, 10450, 21625, 10225, 10465, 
            21634, 10240, 10480, 21642, 10255, 10495, 21649, 10270, 10510, 
            10285, 21511, 10525, 10300, 21520, 10540, 10315, 21530, 10555, 
            10330, 21541, 10570, 10345, 21553, 10585, 10360, 21566, 10600, 
            10375}], 
           
           Line3DBox[{10160, 10391, 21580, 10161, 10406, 21593, 10181, 10421, 
            21605, 10196, 10436, 21616, 10211, 10451, 21626, 10226, 10466, 
            21635, 10241, 10481, 21643, 10256, 10496, 21650, 10271, 10511, 
            21656, 10286, 10526, 10301, 21521, 10541, 10316, 21531, 10556, 
            10331, 21542, 10571, 10346, 21554, 10586, 10361, 21567, 10601, 
            10376}], 
           
           Line3DBox[{10162, 10392, 21581, 10163, 10407, 21594, 10182, 10422, 
            21606, 10197, 10437, 21617, 10212, 10452, 21627, 10227, 10467, 
            21636, 10242, 10482, 21644, 10257, 10497, 21651, 10272, 10512, 
            21657, 10287, 10527, 21662, 10302, 10542, 10317, 21532, 10557, 
            10332, 21543, 10572, 10347, 21555, 10587, 10362, 21568, 10602, 
            10377}], 
           
           Line3DBox[{10164, 10393, 21582, 10165, 10408, 21595, 10183, 10423, 
            21607, 10198, 10438, 21618, 10213, 10453, 21628, 10228, 10468, 
            21637, 10243, 10483, 21645, 10258, 10498, 21652, 10273, 10513, 
            21658, 10288, 10528, 21663, 10303, 10543, 21667, 10318, 10558, 
            10333, 21544, 10573, 10348, 21556, 10588, 10363, 21569, 10603, 
            10378}], 
           
           Line3DBox[{10166, 10394, 21583, 10167, 10409, 21596, 10184, 10424, 
            21608, 10199, 10439, 21619, 10214, 10454, 21629, 10229, 10469, 
            21638, 10244, 10484, 21646, 10259, 10499, 21653, 10274, 10514, 
            21659, 10289, 10529, 21664, 10304, 10544, 21668, 10319, 10559, 
            21671, 10334, 10574, 10349, 21557, 10589, 10364, 21570, 10604, 
            10379}], 
           Line3DBox[{10168, 10395, 21584, 10169, 10410, 21597, 10185, 10425, 
            21609, 10200, 10440, 21620, 10215, 10455, 21630, 10230, 10470, 
            21639, 10245, 10485, 21647, 10260, 10500, 21654, 10275, 10515, 
            21660, 10290, 10530, 21665, 10305, 10545, 21669, 10320, 10560, 
            21672, 10335, 10575, 21674, 10350, 10590, 10365, 21571, 10605, 
            10380}], 
           
           Line3DBox[{10170, 10396, 21585, 10171, 10411, 21598, 10186, 10426, 
            21610, 10201, 10441, 21621, 10216, 10456, 21631, 10231, 10471, 
            21640, 10246, 10486, 21648, 10261, 10501, 21655, 10276, 10516, 
            21661, 10291, 10531, 21666, 10306, 10546, 21670, 10321, 10561, 
            21673, 10336, 10576, 21675, 10351, 10591, 21676, 10366, 10606, 
            10381}], 
           
           Line3DBox[{10607, 10847, 10608, 21677, 10862, 10637, 21678, 10877, 
            10652, 21680, 10892, 10667, 21683, 10907, 10682, 21687, 10922, 
            10697, 21692, 10937, 10712, 21698, 10952, 10727, 21705, 10967, 
            10742, 21713, 10982, 10757, 21722, 10997, 10772, 21732, 11012, 
            10787, 21743, 11027, 10802, 21755, 11042, 10817, 21768, 11057, 
            10832}], 
           
           Line3DBox[{10609, 10848, 21782, 10610, 10863, 10638, 21679, 10878, 
            10653, 21681, 10893, 10668, 21684, 10908, 10683, 21688, 10923, 
            10698, 21693, 10938, 10713, 21699, 10953, 10728, 21706, 10968, 
            10743, 21714, 10983, 10758, 21723, 10998, 10773, 21733, 11013, 
            10788, 21744, 11028, 10803, 21756, 11043, 10818, 21769, 11058, 
            10833}], 
           
           Line3DBox[{10611, 10849, 21783, 10612, 10864, 21796, 10639, 10879, 
            10654, 21682, 10894, 10669, 21685, 10909, 10684, 21689, 10924, 
            10699, 21694, 10939, 10714, 21700, 10954, 10729, 21707, 10969, 
            10744, 21715, 10984, 10759, 21724, 10999, 10774, 21734, 11014, 
            10789, 21745, 11029, 10804, 21757, 11044, 10819, 21770, 11059, 
            10834}], 
           
           Line3DBox[{10613, 10850, 21784, 10614, 10865, 21797, 10640, 10880, 
            21809, 10655, 10895, 10670, 21686, 10910, 10685, 21690, 10925, 
            10700, 21695, 10940, 10715, 21701, 10955, 10730, 21708, 10970, 
            10745, 21716, 10985, 10760, 21725, 11000, 10775, 21735, 11015, 
            10790, 21746, 11030, 10805, 21758, 11045, 10820, 21771, 11060, 
            10835}], 
           
           Line3DBox[{10615, 10851, 21785, 10616, 10866, 21798, 10641, 10881, 
            21810, 10656, 10896, 21821, 10671, 10911, 10686, 21691, 10926, 
            10701, 21696, 10941, 10716, 21702, 10956, 10731, 21709, 10971, 
            10746, 21717, 10986, 10761, 21726, 11001, 10776, 21736, 11016, 
            10791, 21747, 11031, 10806, 21759, 11046, 10821, 21772, 11061, 
            10836}], 
           
           Line3DBox[{10617, 10852, 21786, 10618, 10867, 21799, 10642, 10882, 
            21811, 10657, 10897, 21822, 10672, 10912, 21832, 10687, 10927, 
            10702, 21697, 10942, 10717, 21703, 10957, 10732, 21710, 10972, 
            10747, 21718, 10987, 10762, 21727, 11002, 10777, 21737, 11017, 
            10792, 21748, 11032, 10807, 21760, 11047, 10822, 21773, 11062, 
            10837}], 
           
           Line3DBox[{10619, 10853, 21787, 10620, 10868, 21800, 10643, 10883, 
            21812, 10658, 10898, 21823, 10673, 10913, 21833, 10688, 10928, 
            21842, 10703, 10943, 10718, 21704, 10958, 10733, 21711, 10973, 
            10748, 21719, 10988, 10763, 21728, 11003, 10778, 21738, 11018, 
            10793, 21749, 11033, 10808, 21761, 11048, 10823, 21774, 11063, 
            10838}], 
           
           Line3DBox[{10621, 10854, 21788, 10622, 10869, 21801, 10644, 10884, 
            21813, 10659, 10899, 21824, 10674, 10914, 21834, 10689, 10929, 
            21843, 10704, 10944, 21851, 10719, 10959, 10734, 21712, 10974, 
            10749, 21720, 10989, 10764, 21729, 11004, 10779, 21739, 11019, 
            10794, 21750, 11034, 10809, 21762, 11049, 10824, 21775, 11064, 
            10839}], 
           
           Line3DBox[{10623, 10855, 21789, 10624, 10870, 21802, 10645, 10885, 
            21814, 10660, 10900, 21825, 10675, 10915, 21835, 10690, 10930, 
            21844, 10705, 10945, 21852, 10720, 10960, 21859, 10735, 10975, 
            10750, 21721, 10990, 10765, 21730, 11005, 10780, 21740, 11020, 
            10795, 21751, 11035, 10810, 21763, 11050, 10825, 21776, 11065, 
            10840}], 
           
           Line3DBox[{10625, 10856, 21790, 10626, 10871, 21803, 10646, 10886, 
            21815, 10661, 10901, 21826, 10676, 10916, 21836, 10691, 10931, 
            21845, 10706, 10946, 21853, 10721, 10961, 21860, 10736, 10976, 
            21866, 10751, 10991, 10766, 21731, 11006, 10781, 21741, 11021, 
            10796, 21752, 11036, 10811, 21764, 11051, 10826, 21777, 11066, 
            10841}], 
           
           Line3DBox[{10627, 10857, 21791, 10628, 10872, 21804, 10647, 10887, 
            21816, 10662, 10902, 21827, 10677, 10917, 21837, 10692, 10932, 
            21846, 10707, 10947, 21854, 10722, 10962, 21861, 10737, 10977, 
            21867, 10752, 10992, 21872, 10767, 11007, 10782, 21742, 11022, 
            10797, 21753, 11037, 10812, 21765, 11052, 10827, 21778, 11067, 
            10842}], 
           
           Line3DBox[{10629, 10858, 21792, 10630, 10873, 21805, 10648, 10888, 
            21817, 10663, 10903, 21828, 10678, 10918, 21838, 10693, 10933, 
            21847, 10708, 10948, 21855, 10723, 10963, 21862, 10738, 10978, 
            21868, 10753, 10993, 21873, 10768, 11008, 21877, 10783, 11023, 
            10798, 21754, 11038, 10813, 21766, 11053, 10828, 21779, 11068, 
            10843}], 
           
           Line3DBox[{10631, 10859, 21793, 10632, 10874, 21806, 10649, 10889, 
            21818, 10664, 10904, 21829, 10679, 10919, 21839, 10694, 10934, 
            21848, 10709, 10949, 21856, 10724, 10964, 21863, 10739, 10979, 
            21869, 10754, 10994, 21874, 10769, 11009, 21878, 10784, 11024, 
            21881, 10799, 11039, 10814, 21767, 11054, 10829, 21780, 11069, 
            10844}], 
           
           Line3DBox[{10633, 10860, 21794, 10634, 10875, 21807, 10650, 10890, 
            21819, 10665, 10905, 21830, 10680, 10920, 21840, 10695, 10935, 
            21849, 10710, 10950, 21857, 10725, 10965, 21864, 10740, 10980, 
            21870, 10755, 10995, 21875, 10770, 11010, 21879, 10785, 11025, 
            21882, 10800, 11040, 21884, 10815, 11055, 10830, 21781, 11070, 
            10845}], 
           
           Line3DBox[{10635, 10861, 21795, 10636, 10876, 21808, 10651, 10891, 
            21820, 10666, 10906, 21831, 10681, 10921, 21841, 10696, 10936, 
            21850, 10711, 10951, 21858, 10726, 10966, 21865, 10741, 10981, 
            21871, 10756, 10996, 21876, 10771, 11011, 21880, 10786, 11026, 
            21883, 10801, 11041, 21885, 10816, 11056, 21886, 10831, 11071, 
            10846}], 
           
           Line3DBox[{11072, 11312, 11073, 21887, 11327, 11102, 21888, 11342, 
            11117, 21890, 11357, 11132, 21893, 11372, 11147, 21897, 11387, 
            11162, 21902, 11402, 11177, 21908, 11417, 11192, 21915, 11432, 
            11207, 21923, 11447, 11222, 21932, 11462, 11237, 21942, 11477, 
            11252, 21953, 11492, 11267, 21965, 11507, 11282, 21978, 11522, 
            11297}], 
           
           Line3DBox[{11074, 11313, 21992, 11075, 11328, 11103, 21889, 11343, 
            11118, 21891, 11358, 11133, 21894, 11373, 11148, 21898, 11388, 
            11163, 21903, 11403, 11178, 21909, 11418, 11193, 21916, 11433, 
            11208, 21924, 11448, 11223, 21933, 11463, 11238, 21943, 11478, 
            11253, 21954, 11493, 11268, 21966, 11508, 11283, 21979, 11523, 
            11298}], 
           
           Line3DBox[{11076, 11314, 21993, 11077, 11329, 22006, 11104, 11344, 
            11119, 21892, 11359, 11134, 21895, 11374, 11149, 21899, 11389, 
            11164, 21904, 11404, 11179, 21910, 11419, 11194, 21917, 11434, 
            11209, 21925, 11449, 11224, 21934, 11464, 11239, 21944, 11479, 
            11254, 21955, 11494, 11269, 21967, 11509, 11284, 21980, 11524, 
            11299}], 
           
           Line3DBox[{11078, 11315, 21994, 11079, 11330, 22007, 11105, 11345, 
            22019, 11120, 11360, 11135, 21896, 11375, 11150, 21900, 11390, 
            11165, 21905, 11405, 11180, 21911, 11420, 11195, 21918, 11435, 
            11210, 21926, 11450, 11225, 21935, 11465, 11240, 21945, 11480, 
            11255, 21956, 11495, 11270, 21968, 11510, 11285, 21981, 11525, 
            11300}], 
           
           Line3DBox[{11080, 11316, 21995, 11081, 11331, 22008, 11106, 11346, 
            22020, 11121, 11361, 22031, 11136, 11376, 11151, 21901, 11391, 
            11166, 21906, 11406, 11181, 21912, 11421, 11196, 21919, 11436, 
            11211, 21927, 11451, 11226, 21936, 11466, 11241, 21946, 11481, 
            11256, 21957, 11496, 11271, 21969, 11511, 11286, 21982, 11526, 
            11301}], 
           
           Line3DBox[{11082, 11317, 21996, 11083, 11332, 22009, 11107, 11347, 
            22021, 11122, 11362, 22032, 11137, 11377, 22042, 11152, 11392, 
            11167, 21907, 11407, 11182, 21913, 11422, 11197, 21920, 11437, 
            11212, 21928, 11452, 11227, 21937, 11467, 11242, 21947, 11482, 
            11257, 21958, 11497, 11272, 21970, 11512, 11287, 21983, 11527, 
            11302}], 
           
           Line3DBox[{11084, 11318, 21997, 11085, 11333, 22010, 11108, 11348, 
            22022, 11123, 11363, 22033, 11138, 11378, 22043, 11153, 11393, 
            22052, 11168, 11408, 11183, 21914, 11423, 11198, 21921, 11438, 
            11213, 21929, 11453, 11228, 21938, 11468, 11243, 21948, 11483, 
            11258, 21959, 11498, 11273, 21971, 11513, 11288, 21984, 11528, 
            11303}], 
           
           Line3DBox[{11086, 11319, 21998, 11087, 11334, 22011, 11109, 11349, 
            22023, 11124, 11364, 22034, 11139, 11379, 22044, 11154, 11394, 
            22053, 11169, 11409, 22061, 11184, 11424, 11199, 21922, 11439, 
            11214, 21930, 11454, 11229, 21939, 11469, 11244, 21949, 11484, 
            11259, 21960, 11499, 11274, 21972, 11514, 11289, 21985, 11529, 
            11304}], 
           
           Line3DBox[{11088, 11320, 21999, 11089, 11335, 22012, 11110, 11350, 
            22024, 11125, 11365, 22035, 11140, 11380, 22045, 11155, 11395, 
            22054, 11170, 11410, 22062, 11185, 11425, 22069, 11200, 11440, 
            11215, 21931, 11455, 11230, 21940, 11470, 11245, 21950, 11485, 
            11260, 21961, 11500, 11275, 21973, 11515, 11290, 21986, 11530, 
            11305}], 
           
           Line3DBox[{11090, 11321, 22000, 11091, 11336, 22013, 11111, 11351, 
            22025, 11126, 11366, 22036, 11141, 11381, 22046, 11156, 11396, 
            22055, 11171, 11411, 22063, 11186, 11426, 22070, 11201, 11441, 
            22076, 11216, 11456, 11231, 21941, 11471, 11246, 21951, 11486, 
            11261, 21962, 11501, 11276, 21974, 11516, 11291, 21987, 11531, 
            11306}], 
           
           Line3DBox[{11092, 11322, 22001, 11093, 11337, 22014, 11112, 11352, 
            22026, 11127, 11367, 22037, 11142, 11382, 22047, 11157, 11397, 
            22056, 11172, 11412, 22064, 11187, 11427, 22071, 11202, 11442, 
            22077, 11217, 11457, 22082, 11232, 11472, 11247, 21952, 11487, 
            11262, 21963, 11502, 11277, 21975, 11517, 11292, 21988, 11532, 
            11307}], 
           
           Line3DBox[{11094, 11323, 22002, 11095, 11338, 22015, 11113, 11353, 
            22027, 11128, 11368, 22038, 11143, 11383, 22048, 11158, 11398, 
            22057, 11173, 11413, 22065, 11188, 11428, 22072, 11203, 11443, 
            22078, 11218, 11458, 22083, 11233, 11473, 22087, 11248, 11488, 
            11263, 21964, 11503, 11278, 21976, 11518, 11293, 21989, 11533, 
            11308}], 
           
           Line3DBox[{11096, 11324, 22003, 11097, 11339, 22016, 11114, 11354, 
            22028, 11129, 11369, 22039, 11144, 11384, 22049, 11159, 11399, 
            22058, 11174, 11414, 22066, 11189, 11429, 22073, 11204, 11444, 
            22079, 11219, 11459, 22084, 11234, 11474, 22088, 11249, 11489, 
            22091, 11264, 11504, 11279, 21977, 11519, 11294, 21990, 11534, 
            11309}], 
           
           Line3DBox[{11098, 11325, 22004, 11099, 11340, 22017, 11115, 11355, 
            22029, 11130, 11370, 22040, 11145, 11385, 22050, 11160, 11400, 
            22059, 11175, 11415, 22067, 11190, 11430, 22074, 11205, 11445, 
            22080, 11220, 11460, 22085, 11235, 11475, 22089, 11250, 11490, 
            22092, 11265, 11505, 22094, 11280, 11520, 11295, 21991, 11535, 
            11310}], 
           
           Line3DBox[{11100, 11326, 22005, 11101, 11341, 22018, 11116, 11356, 
            22030, 11131, 11371, 22041, 11146, 11386, 22051, 11161, 11401, 
            22060, 11176, 11416, 22068, 11191, 11431, 22075, 11206, 11446, 
            22081, 11221, 11461, 22086, 11236, 11476, 22090, 11251, 11491, 
            22093, 11266, 11506, 22095, 11281, 11521, 22096, 11296, 11536, 
            11311}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}}, VertexNormals -> CompressedData["
1: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
v+jrrn/VL5ea5XhVawvRPX5XSp/Z1fAqrdldVaWVj3UbIppss3C8XMrl2WUs
iKjDirEZAhjNDm18uugVaPRvOKEgUw1nCg2hJqEG9PuZCZ4tf4chnNW8gGVM
UKpMe7cgWwgFOfJ7840iYY+VIETvTCmYL+VE3dOvkzr+J/EvmYqHclQc3E7x
sjbF0/EUPxO+IPwxieINdwrHBNduFJ7J+JLxjqfGOSCBsX6ykz+colrD2OD6
zT8awEQjs9MoLzZuiclL9PZlgbFXvbDFhAmfDiUlPT9Whd2qNDwXO1RB9TcL
j0cRfAgTnoydiWx88nnLuchNTCgt81Cw0WWBZuTPc2s9q3GRlUnCJfUy6P5R
3cI8SCB1/P+n82eCY4JrgudN1PiS8SbjLG3+d/T8fxTFF4Q/CG8QHDdSuCZ4
ljb/O3r+T3iZ8DThZ8IXhD9KKN6QNv87ev5P4h+JhyQOEl4eR/E04Wdp87+j
5/8dvf+Onv939P7/7pwlsj9K9kUlzZek9zXT1//36yXt81N/i7Vt+/+En0Bs
f7utFdsPp6+XcL14vYXY/n9bf2L839aK8RtQ/AZi+TPJO0AsfwaSN4vlz/+Y
/iWdiyVpvih+a+tPjN/aWrH8meR3KJY/k7wDxPLnf0z/kt5XLgn/BAcEF2L5
MxJ/xfLntlYsfwYqf0ax/JnkHSghf55F4iC1r0T2mUBs/5/sf4DY/r/U+N9e
/JN8mcqfQSx/Bip/BrH8Gan8GcTyZ6DyZxDLn0l+h2L5M8k7UGz/n+znodj+
P1D7/yC2/y81/rcX/+3lN4IDggux/LnNP7H8+X/dP7VPSvZNQWz/n+zngdj+
v9T4/6f5/2/yZyS4EMuf/9f9U/vRZH8axfb/gdr/B7H9f6nx/0/zP+FlwtNi
+/9I+ENs/78N12L7/0jGW2z/v60V2/8n+9Motv9P9k1RbP8fqf1/FNv/J/tM
KLb/j9T+B4rt/0sN/5P4R+3/g9j+P1D7/yC2/9/GH2L7/224Ftv/RzLeYvv/
SO3/o9j+P1D7/yi2/0/2TVFs/5/s56HY/j/ZZ0Kx/X+p4f8/nT8THBNci+3/
Ixlvsf1/qfG/o+f/1P4/Ev4Q2/9Hav8fxPb/pcb/jp7/E14mPC22/4+EP8T2
/6XG/46e/5P4R+Kh2P4/Uvv/ILb/LzX+d/T8v6P339Hz/47evyT8k28SO6em
w5yr31Gul7TPL2neO0pdQ0e5XlKdi6S6GEl1NKTuJlas7kZSnQ6p63ETq+v5
p/Uvqc5L0nyRuqZosToySXVn4nVqYvWz/1bX9k/rX1KdoyT8i9dRitXPIvFX
rH62rRWrnwVbsbpOSXWgkupGJdWZitelip3/IzX+txf/kuqIJdUdk7pZG7E6
5Wixumax+lmg6mdRrH62rW5a7Pyff6uzJudlkPMzxM7/kRr/24v/9vKbpDp9
8bp+sfrZ/3X/ks4ZGCV2LoHY+T9S4/+f5n+x9YZi9bP/dq5Fe/unzv9pO9dE
7PyftvNmxM7/kRr//zT/SzynRcK5LuLnwIid/9N2bozY+T/QT+ycGXIuDTkH
SOz8n7ZzbMTO/0FybpbY+T9t5+SInf/Tdq6O2Pk/UsP/4ucUiZ3/08bTYuf/
tJ1rInb+Txuuxc7/Qer8HxA7/wcHiJ3LJH6Ok9j5P23nPomd//Nv50RJPFdK
yvj/T+fPBMfkfCax83+QOv8HxM7/kRr/O3r+P1LsnD2x83/+7Vw+afO/o+f/
1Pk/SJ3/g2Ln//zbuZTS5n9Hz//Fz1kVO//n385llTb/O3r+39H77+j5f0fv
XxL+JZ2L3lHOde8o10va55ekS6fttJ2203baTttpO22n7bSdttN22k7baTtt
p+20nbbTdtpO22l7x7Uv/JWxJD6rgLTo9HBc7uBttfBDxmhL5SY+NEbIeGQ1
FmLozIma/6p3llTHQV//36+XpP+XVMfBGRBq7TW7BKxrPm89rxCNPDeV69V7
Wu3bPKz1DBikxcEursbGJjyQVbrgrdyDA05ddHW/dy1FjRHKzVsDuGD5dsdB
fhwbFk+aELFu0kO4uz8wijNU+I/rX9K5WH9Xl+RxLuyFTV/PtjpK6vvI97d9
r8YYY49DX3kQOt28Xrk7A9XmWrs0NlRBwr4mlWhjAXib/Ipar5mE95befuau
yfnH9U+tE7Ju2taLJPw7Pcnw/W6WC4sqFE7PTk+Ho09P4n2lepiZbVwx+vFT
dKk1c/14rAo2Df6quKN7LTyXu8uceZQBfQIbcyf0uQuC/McQYF8DZkcWrHQN
ZZMW2ZnHOp98Xk3uh9xf231ROEMKd0jwVtB5lU4C8kDpuEDxzoUiTPAY0RCz
lw3zDLRrAh7yYapPn3MB3WKgp+nhbyIzrtT53178w1xD3YarXDinnXGg84mH
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
VH+z8HgUwYdR/RtOKMhU42h2aOPTRa/wTKEh1CRIn/9/mv97UeutnFpvpCU4
ILggeGhv/1ti8hK9fVloopHZaZQXG4y96oUtJkwYL5dyeXYZC8foNkQ02WZB
RB1WjM0QSJ3/f5r/CS8vpHia8HMoxRdPKf4gvPGJwnEXCtcEz2R8N1PjTcb5
SgJj/WQnfwygWsPY4PrNPxrAPX5XSp/Z1VhmluNVrS2E+LRmd1WVEjgw0CCv
IT0fWlb1mhphJwK3WvmlQWuqYPz8/vuvhDDAeW1K9bMfPNCezdDq7FsJ2630
dvt1LwTthLyeKy639lPt0uDYhwH7JhvbnVrEhOQ5vRc13uaCnKWOfYAMQ+r4
n8Q/Eg9JHNSneJnwtBLFz4QvCH8Q3iA4JrgmeC6lxpeMNxnnz5PnBjWYsNra
/UVfd/3r987lswcrn098jtpu06tP1otAO3ZExQcFJgyJGWfY3yMFXtrN7LE3
SgA7RV+dRXvZwJ68M8jWKhKbNSaqBLmJIEAo+9I3jwkzPLysTn5KhZqglvX+
ea34MIyeYOQkhfz/h/NngmOCa4JnHWp8r1LjrUONs7T539Hzf8IXWhR/TKJ4
g+CY4NqJwrO0+d/R8/+JFC8Tnib8TPiC8AfhDWnzv6Pn/yT+kXhI4iDhZcLT
hJ+lzf+Onv939P47ev7f0fuXhH9J+nRJ80U+T/oj/dDX//frJe3zS8qvaDtt
p+20nbbTdtpO22k7bafttJ2203baTttpO22n7bSdttN22k7baTttp+20nbbT
dtpO22k7bafttJ2203baTttpO22n7bSdttN22k7baTttp+20nbbTdtpO22k7
bafttJ2203baTttpO23/J9vVmlC3OicZHGfdmDPxWRXillVDzhysgVi7a5Ym
sgWo4iffzWdKLjoUDHZU0KiDTqXPNnw0y8CRwfoTG0zz8eemllk7X9XB7DGm
1SNko7HOWD9b1ZGFb6MMOw9qEUIfzTGTl85KgA9ZQ1YOTKzAQmvFmLgFtfBj
qeZ28/LXoODff7y1BhOvjzuu5R4igtO2Oga3b7zF+aoxnjumFeJ+35bm8rQ6
iPbpq+rtEQbstP0BG7q9xqtdWjolPGiAkcnfNO3jHkOPCFmzLMty3NK3oPZ1
RS1sslnkOiQ/HUk7KndX9Kdz9aDHUb3W5PQCX3QN2ztYuRjjMp1vaEbWgWvW
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
cWAIt2Oaq7jF+Dyjn8G1T8JkOPR8bu7oLE9YrOV6pdWyOrho7TryTXPenRS8
7ctczzR8H3WhKDFMAF2yJ814Wtb8fnx0RViKIQff/nD8taWM89fj82+Lte1O
xRVCR9cHNQuT+LhZaz63yzARRIy1KG1VxIXIXYX23xfz0UJLmJlqwoM6y9zu
3aSl0Pn9jrgJrwXos9+77NpvPghC2ux+e6QSluRPiumkJcKjIUb9un3jgJP+
8ccWo6LA9mzGPItRJeg32cRK91c1jMhs9WzeBwF+vfd9gIddCewsfLml0ywB
FJs0eisXNcelI0ffdnS5BbO/Lo9eObMOjgZVK489LoD2bo7JiRWxuKD09CFh
c/yv+3zi11TfEohwzAqbv+QN3NHVWP9dXA2Fv/Qa05rP//aQtsPGXowBq8IA
7ZHN7y3DJ5bYP9YXQGbQ4e8HorJw5hn14dwd4r8en2e8kR1CXw9Y/n1CQp+5
EiwS9RvaOV8Axqtc91x4ngw80w+tDy2QYrclw4xVnXjgNePGr/7NcerK74xI
2SspljVtyQriNb/Hualuv+WYCnt2urXrGylF911+VWVJXPiV6NLLbT8Pivo0
KM0pEeHp968uJ28shnX9Xr0YbZ3DVuzfYPw+D2rgcZcD+mePlKGVa4T7qt8C
uLX02840Zz7cyKtPed26AD694uhpR3BhrvrPQbfNJHC1tUvsVlkprORpF6be
48JEhzOLM6NEMAnNV6/OKYJep/ur3zDjQKaVdmGyrwTGnavNnnGBC4OWmNRu
9S4FTX//ZUdrRX89Pu8KDG0VfiQGp5lHLx/ZqQi1ty+7u3deDXzKGjXp7csn
+HyUjazaQIT365YHuf0SQeXCcXsDjryFIcVHf0tVuKh7I60hObcK3LcO2KZ0
IAzt1bV75TjkofuolGldzWohZaP5kN6b+FDe5F2rN5GD1tnLJsoC+HD1Q9+b
zjpicD8p1s/V4OGY2SNX/DpfzK57OEHugz/X//io1P4+NS/xov85Tp87zc9n
TyuPIoMaKEviDNj04hVsHXcvcW5gNqhnPVM65VcLax60Xxu0ORrff5vPNRXm
wojZap7d9Gub35P1V3XpnQ6yrZ+c667mwLsdntvfvq356/H5b+fPa/qk22FZ
BcQbrFAbsjcC9O+0HWf2QQYTdB+9CFkpBaOO5g9igjLQ3Mxtpts3LkRNqj3f
+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
vnHxcdUdvdDVVf91+bO6igZEb8hCram92p6akoubv+C9mVtqwLLmODdUIw5K
XT9/Fe4qRxmn9bW+32Sg+ak/1+Z4ItoaxioNM83D/Zt5oZLm68HqaXaNT+hL
+F5pu/1T1zL0X3kpoK9fNWxctNTq+EbEJ8vWa0QNLUBOXeubyrE1cHdDzaYN
R2+C3ZKHm3udL8G+0f5WY7VqoOb5rk3jCh/i8Htzd3k1FaKem76lybUa6Pl9
u90Zh0D0CqtYOodThGUxmX7DD9WAY3+vCf2WbIFnq8ZfWvOqGGflm27UsaiB
8YLegfV2L/BF27BDWpqFGJVmHzQ0sgb0En4MtYl6DB3uK5unLyrF7d3yqt+X
VcN5K6Opt4JicW7vV067J+Tj0SuN30qTa6Dr0MFjlkyOho/p2tY948owf6Xa
q6h51dBY9GzzJ/NUHBA8ZWSdWS7+3to4ec/bGuhTj8aVWQlgOzlo+shnFYjb
V2tfcJSBqWyFv6FRBbLVc8xmZ+sCMbyMmN1l7jgBWvZa4GSV8xR9rqVe+XVf
AoMOWUwotREgP6x6uqtVNhbVe7i5aIlho6jdLfX9fBzgNbvixiQOxnqtUS52
48NO9f1b3jpUIFvb6a7N/HhXDLZ7NpZ5egmxjFOqqvnhLSZ4262xXyqGGSkL
382o4aFRxCFhsmc++o4rFa/aIwbZ1Pm+EfuEODJWKWP6lBLMeqUmc03hQ36s
UDXtcAWydVtVm5Lvoc35reqVwZeKRfj10Ysi7uFYtOigO7xNhRAmaTsteLeq
OZ6oTTlt+6AY77ppbB51QwxHTrg4Xh0ixpillb817uYiPBgjM47nQ8F64/0l
xyqQrUd0+0Uo3RHD7VjRyBOtJNj9aVhqfnki6l+/4zmkOY91eGU5tDqhHNn6
YPDbLzmaElje1bqCfz4CH8R1lO4o5eOHiFWpZ39JQNPqp0PmzTxk6zzXu980
j1ZDsHuH3oa2EtSJ1GunZ3ADnNtvCWoVKoBRT5R0jAeL8XMlb8k4p3y8+/DN
qWjz5jzfNrptfkMqTlipVGhQx8euGhtCZnWUQNrmmju+gYXI1tu3r34ymN98
3jM9pC4dxBiyZ3i6f+J6yJV58VPGicDQap3nuRsinFK9f+E57VysnlTezvyU
AJ4efW9bUZWPTu+v2W+S8LFT4KweV11FsP3igJjaIyXIVp2pJhNHfpbCF4c9
XXxOC3G9TTcvzY/+aLoiYvXSe2LYdfKV75t2IjTYbDTh/O0sLAwuM1h3Xwjd
xw7vzt1Sjiqby2ymnuNjvHpu1JDbApho8mCViWE5srX39rjWug4S6OK0JDbR
nI8vbsvUnR+F4kbnsAElx6TQVZDA5e7JQKPcX+LETkK8bpX1ayZHBDtKJ8vK
K4NBq82d4kCU4Isflwy3gQDeHFI1mZJTiWzVnXj2Z2q0CDq1PsgLC5Dgo75V
5rtysqG+u9P7jdt48M7iRbTsWRleu++Rs7QhDrZ6fLDe3acaTHfWHZkWcRUT
9AZ1dErLwPYj9g+7p1IHe4w/WeiY8PBmiPJW5Gaiu1/nsSu6SWFv9vmMs5ES
lL30eYNbsnDfrcln6wN5UP9l7IQlRlxszJHs8i3kYNJnh7y8nkLw14zJ/L7D
Czf33etZJxHi7wWVI3daiuHLkbWHJs8vQrbWbTPz7dX8fu2s/vn0meb3Uuf+
KzI/OERDmPsA2cfm96IHsjk3e84T4d2puj0HZWdi4Ze7miVnhVDwepOmaEA4
Sua26z32IBcPnRFvXh79//OKUyc2t8pFtu7dcdVV2KkGJsbejElbz8Mk2cks
x2wuao5a9uFX8+fPfeRy4dz9Anw2rsuY0k1iTFZ1nm96lwcj0zQTZv/OgU6/
w9csc5RguHH141VzeHCvYncvQ6MMDKfrK8Nz/MShtVDcYf+AEGchTjHPfRDy
pgTMRgdMeHSRD29kRrdF9SV4/4v7R7XcLDiz/7bgQEJz/NfdEqJWwEE9T7+i
mf5hsOOuG9gMa36POFPV0LlAgh5T5tr1KMjCd70g/d5yHhTGnr/8202Aebd7
9KtexMU2vxfvu2vDhTiLgcHe3Gz83J67P2uZCDuNnLfxkpYQri7c5SngxcC9
03f8C8ZL0f/d4biqfnzIefBItIxThrl0/bL2prFXsATGfcvpaLNNjCri+IhZ
NwohOmV471kreTC+9OJLnbE56LdKaduNLoWw4uRO/ZJd1fA8P3Ofqvg6xmqM
eVOZ6AYTnVwTTv2sA1vJB8eH+yqQrdl6fa9I74tBLck6vuw1H/dO+JB/8ws2
n7c5Zp05EnjSK/uMTXAWvHLo0rDNtRCDGzZyL1+phkEL80W+OqXw6emXsV1n
CPGQtm+S6lM+1Gj+FkWMKcJauvpG7lMO6yiDpsOdZ6QcFmB2z0Ht38uiYZX1
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
XOJcLslyuX+sPnMuF5zLhSyXC87lQpbLBedyIcvlgnO5kOVyiXO5kOVyiXO5
kOVywblckuVywblckuVywblckuVywblckuVywblckuVy/1h91ne+0HeO0Hde
0FefOZdLnMuFLJdLnMuFLJdLnMuFLJf7t/qsrz/X14fr67f/dH3+0/0z53KJ
c7mQ5XKJc7mQ5XKJc7mQ5XIN/bOe/plzucS5XMhyucS5XMhyucS5XMhyuYb+
WU//zLlccC6XZLlc4lwuZLlccC4XslyuoX/WU585lwvO5UKWyyXO5UKWyyXO
5UKWyzX0z3rqM+dxC1dZLpc4lwtZLpc4lwtZLve/pn/mXC44lwtZLpc4lwtZ
Lhecy4Usl0ucy4UslwvO5UKWyyXO5UKWywXnciHL5YJzuZDlcolzuZDlcsG5
XMhyucS5XMhyueBcLmS5XOJcLmS5XHAuF7JcLnEuF7JcbuEqy+WCc7mQ5XLB
uVzIcrngXC5kudzCVZbLBedyIcvlgnO5kOVywblcyHK5hasslwvO5UKWywXn
ciHL5YJzuZDlcgtXWS4XnMuFLJdbuMpyueC/t4Ls760KV1muAJwrIFmuAJwr
gCxXAM4VQJYrKFxluVxwLpdkuVxwLheyXC44lwtZLrdwleUKwLkCyHIF4FwB
ZLkCcK4AslxB4Sr7eyvw31tBlisA5wogyxUQ5wogyxUUrrJcAThXQLJcAThX
QLJcAThXAFkuF5zLhSyXC87lQpbLBedyIcvlgnMFkOUKCldZrgCcKyBZrgCc
K4AsVwDOFUCWKyhcZbkCcK4AslwBOFcAWa6AOFcAWa4AnCuALFcAzhWQLFcA
zhWQLJcLzuWSLJcLzuVClssF53Ihy+WCcwWQ5QqIcwWQ5QrAuQLIcgXgXAHJ
cgXgXAHJcgXgXAHJcgWFqyxXAM4VQJYrIM4VQJYrIM4VQJYrAOcKIMsVgHMF
JMvlgnO5kOVywblcyHK54FwuZLlccK4AslwBOFcAWa6AOFcAWa4AnCuALFcA
zhWQLFcAzhWQLFfw/1yfOVcAzhVAlisgzhVAlisgzhVAliv4W33mXC44l0uy
XC44lwtZLhecy4Usl/u3+sy5AnCuALJcAXGuALJcAXGuALJcwR+rz5zLBedy
IcvlEudyIcvlgnO5kOVyiXO5kOVyC1dZLhecyyVZLhecyyVZLpc4lwtZLhec
y4Usl0ucyyVZLpc4lwtZLveP1WfO5YJzuZDlcsG5XMhyueBcLmS5XHAuF7Jc
LnEuF7JcLjiXC1kuF5zLJVkuF5zLJVkuF5zLJVkuF5zLJVkuF5zLJVku94/V
Z87lgnO5kOVywblcyHK54FwuZLlccC4XslwucS4XslwucS4XslwuOJcLWS4X
nMslWS4XnMslWS4XnMslWS4XnMslWS73j9XnP90/cy6XOJdLslwucS4Xslwu
cS4XslyuoX/W0z9zLpc4lwtZLpc4lwtZLpc4lwtZLtfQP+vpnzmXS5zLJVku
lziXC1kulziXC1ku19A/6+mfOZcLzuVClsslzuVClsslzuVClss19M966jPn
csG5XMhyucS5XMhyucS5XMhyuf81/TPncQtXWS6XOJcLWS63cJXlcolzuZDl
csG5XMhyucS5XMhyuYWrLJdLnMuFLJcLzuVClsslzuVClsstXGW5XOJcLmS5
XOJcLmS5XHAuF7JcbuEqcrn6/GIzZH434SUUnrLN7ClbzZ4y4YmbKfPECd9Z
rMx3Jnxzv2W+OX3eNOGtS5Z564R/rbzq/+tfa6HHf6fP4yY8eikyj57wwTnI
fHDCx/dZ5uMTXrnRcq8ce/1cZF4/4acLk/nphB/wpMwPKDx3r2WeO+EZZN9i
oWdQ+PKcZb489uSCPbkkPLn6vHvCe5gv8x6O0uPvY68uMmT+ROEBXCXzAAoP
YzuZh1GfT5A9j2DPI8k8j8SeR8g8j9RB5ovU55cUPkpjmY+SPbw0QuavFL5L
9jwW+i4byfyYCvZj6vNplmH/Zn2Zf1P4OpNkvs4Vevye+nyg7OEFe3gh8/DS
NJlvdLrMTyrz8BJ7eCHz8P7Nfxqlx5eqz6+qz8eqz9+qz/cq/LD2Mj+sPp+s
Pv9sd5mvVubhLfTbyjy8hT5cmYf3b/5cfb5dfX5efT7fWjL/r8zDW+gLlnl4
C/3CMg/v33zE+vzFwnfcnn3HIew7bq7Hj6zPp6zPv6zP1xytx+9cVI8Pmj28
YA8vyTy8f3ve6XuusYeX2MNLMg/v3/zXtnp82fqeO8LHXUfm4xb+7jUyf7fw
fTuy77sv+771PRfYw4vRMp+48I+XlfnH9fnK9dXt/636zB5eypT52YXPPUfm
c2cPL7GHFzIP79/qc5oev7zw0XdmH306++hPsb/eROav11ef2cNL3IeQzMNL
7OElmYeX2MMLmYf3j9XnrzW/XJ7eLpzmXP61etyRdPQ4Mue4X5K6oG/zL3Yw
MJEmuG8sY26jQ7Ulnd+EHE/BlA4f9/4eE0nqO5to0QEdnO/O+rGmngpNV30P
yBodT17qjSsnawr6+582DruQijJuubMOJN/B074fKtdtnY6kpE1mwZ/TUN1q
pllqVjpMN84JPVSNyPfkjRuH0zSo7Fq1xIjiMQhbWW/flfeZtGJ8aIijUwLO
7c9eE7c0ina2G7W2h1kmVXU6s2nBoxSUnrxnRJBnEr2xrP26aCsdnSuV9vzm
/hTEXWjy4vntcNIE7pnZukEmnSme4v6qpwKZSfZveporKLHlIzo9SEvvKpjl
1h6g+OP1OUv6c8F/LsSfGy+9Tqil1wnxOstI7wsh0vvCBX5fZ6XPAfbS5wDx
ORhLnxuFSp8bVvLnVkP6nKmh9DnjJX/O/L0Qfy+UyN8Lf4/g75Eq8fc4Wfre
wd87neTvna8T8HVC4jrh6wp8XZG4rv50fdZ3vtB3jtB3XtBXn09LdYAaS3WA
RB3gukFdpboBHdcNjVRniOsMRJ3RV5/19ef6+nB9/fafrs9/un/m5xodlJ5r
1I+fa/wcpNXSc5DEc5Cfm1Rbem5CPDcN/fM/989/SX0acZ9Gok/jvo46SH0d
griv4z6QuA+E6AMN/fM/98987iA+d5A4d/A5hXZJ5xQS5xQ+1xCfayDONYb+
+Z/751LSOZoaSOdoEudoPncTn7shzt2m0jmd+JwOJZ/TDf3zP/fPPKeiU9Kc
isSciudddFmad5GYd/HcjD5KczOIudl/W//McyfiuROJuRPPr2iFNL+CmF+N
luZgxHMwEnMwnqcRz9Mg5mk8l6MT0lyOxFyO53sULM33SMz3eE5IodKckMSc
kOeNNFaaN1LhvFGaW9IBaW5JYm7J80/i+SeJ+SfPUemD8j9zVBJzVJ7HEs9j
Scxjea5L8dJcF2Kuy/Nh2iLNh2kVz4d5zkw8Z4aYM+vzuAnv21mZ902fJ054
5S7KvHL6PHTN2Vs3jL11g9lbJzx3S2WeO31ePH0ePeHda8rePV/27l3T4+nT
stdvMnv9hrHXT58HUHgDM2TeQLlnUMmeQeElZM8jZJ5HqizzGB7R4z0UnkQj
mSeRPbzUUeZVZL8j3Zd5GIW38YDM26jP8/hKjxeS/Y6Fq8zDiwMy76TwVBrL
PJXs4QV7eCHz8BauMs8j2PNIMg/v3zybci+nzMNbuMo8vH/zfjbQ4wnV5xXV
5yEV3tJ1Mm+pB3tOF7HndBR7TtnDSx1kXlT275KDzKMqvKvs4SWZhxcZMk/r
YT1eV30eWH3eWH2eWX1eWvbwEnt4SebhLfTeyjy86CLz5Mbq8eoKD28f9vD2
Yg+vPm+v8Px2lXl+5V5gmYcX7OGFzMP7N++wPk+xPq+xPg/yIT3eZOFZjpF5
loWXmT28kHl4C1eZhxcdZd5nfZ5ouVf6F3ulb7OHuoHMQ63PW22ix3Otz4s9
VubRlnl4C73bMg/v3zzd/9P6zB5eYg8vyTy8VE3mGRde8n0yL7m++iy851Nk
3vMo9qTXknnS7dmr7ijzquurz+zhRWeZt1143ovIPO9H9Xjh/3R93uj34/63
42/I+uTye23zVTC66tX66gkdzpS/63Tjq5puriiyKPiZAqXnOZqkHVVhj/ad
aVSpWGp7+6H3AIUaJqUaWU4arMXklNO9L1ZPpQc/zeyDOqTh4JTZ90r0UeH8
wd+3vp0JwGle65T16zc4KBfv33f32D06HftjvMvPzVVRx9SaXzOqxqDWPucp
naoVfA+1be+/nppACRs1tq/Ka+F/pEuD7UNV9KWo5a05I/6CS6kj1aP6ZiJ0
RW7r83VDaZVr/vj2eckUfuulzZn2WTh5/FWcv2XBea9OVlOf5hry6lL18UFv
Fawf/oixSVDT7R4P7sfaX8KwGo2v5FXJ+OP1ucLgNk8rvY3HCfczmYOj0xHQ
uFQR1WcFJryqbTtd6QGbOcPc+1/KxHT7cvnNDinhfss+dlJeGEx/RTcrOajg
HL7v8WZqq4BP/0efsixO4pVTw+M5UZm42ksTZLVYiWsLjCKrDlFTenp9xeOG
6Ujd0u/83uvRKML/7crf/Duh2nFP6VdvcVX6/dBKv5/E7+efT/zzSfz869Lr
oSbS66Hu/Hr49RO/fprGr7+c9H6J3y+J9/un6zN/v7gkfb8kvl++HuAlXQ/w
5uuBrx/w9QNx/QRI1xvmV//P9UbieuPrk/j6RDxfn3w9E1/P6MzX81npuiex
iuvfWrpf8FC6X8iR7xe+v8D3FzXi++u0dD/ilnQ/Uim+H/n+Bd+/JO7fP12f
/3T/vF2qt3RQqrck6m20VJ+pkVSfIeoz13OaKtVziHpu6J//uX++I/UPVF/q
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
Yuf1JPSk6EbVl+io2lCronfeJGNr1GSP51Wv4ot7/3HWLTNpQkW/pyZTVMha
7zKz268L1CP7V2qwVQb1irFpXnabGrXP1Wzw0O4h6tYr77jLOYNKKYb0P/tb
harpozYsy3Gj/cWvHemVnU6nq28v3rZD2h+vzx/bBXvW/EuDWSoPr8qV49HF
JVrjviYND6yW77I8lIqOx+sGLqqgQNHRrX/3e6FF8a5NB4y6osLwVZ4jHGop
4Njjyb5pSzSY+nl1zgBjBRxObzD9fUuJrsN1Y69bpMEqTjek+6ogCphxSX1p
VjouZNIqz4J+ccfwe8syYhRkqnF8fOPbCSRXrNF7YscsNJnxyTxtzkuUn3XX
5Oi4dLJ2r+f9anIa7lw7sXdSegL61vfof9dVRy+3z6o550EK5rTtGXhtcRzK
heWXjyunoz5PTjfeYq7Ew2W9Qp77JOGwddykvyrpaHCLQMsHihTEL7h55dOi
OJQKvzp2TqKW3jToeHXuK9Ufr8/6zhf6zhH6zgv66nNLjxZvzSd7UakbVQ55
9lHSkFG61VtcMpE5LmlEP7Wa9hyxinJa5U1fLU3Gxt/Wodhej/NmTV7TTuPZ
H3dmuKH8t4y1S4fk6a3P+vpzfX24vn77T9fnP90/X/r4ve0Aj1CyH/fRdGpt
FW2qEbP+S8sMlDA/9uNXOQUN9ytpNS08iYba0NFirum4edzvbX3LCDrV7YL1
gUbetIVy075PyTX0z//SP3dIKruh7vZoWlvduO+I7woas+xafbVWh/Irs+b1
slGRe7vApnfP+pK/bb0foa4Z2LL6zfIracHk+btShn3gK7gMmvqm4ZVcQ//8
L/3z+OUpWzufvUnPyvuOOLdMSx12zNhj7qVFtYNz+udUT6Qq547UcvNPpgG9
LjZ1Vugwouvi3MtT7qI4vXr5xMKbjvkUWZF3Mc/QP/9L/7x3Tv7qLe5HsGZu
vx0rTyrpa2iXLqaPMxFzfYqHuVkSTWlX1m/03iBS3L1ln6rNQi3tja0RdZ/T
V+fli9a0rEBB5bzjUl7rr8+G/lmqz59//Oj21XkrdJs84tQBSgrpUcTy98lM
bFU49d/5xJua1V208upfqaR9NrpGkHMWqPKnyxudX1DxkupjcfSS5jWfPmTd
rLz/uv7ZPtKOZpZ7jclxR86c+ZpEyxp3W6X2z0KR+Adz3w8NoiYuvdrmWUTS
r/n5PZc/z0GlFs07je3phXchdSbX8E2iaKvKTzyHZWO/dfvel86/pCH1ntgt
6xZNG4/kf00MzEGTV99bTPe8g9I3jIaGjE6khVWisr2TstFVU+/sZ5tH9KiE
27ratWLJM3jl+RYeOaBGTt0ajp2HB5O6Hpr6JJ4GRvebXdcyBw2+LbTZZXuW
nNxSxg1WxFGST6hzq3U5yHi4dE6X2FvU6vqQpU6/Y6nxftNR5qdycG1WzpxZ
Gy/CZuytuTX3JVADr9PWnWvnYObocdZbZhPdHT+zmmeLGFLkFbto9DIHVvfD
c45ffYxvqUsWvq+URKetDp1p4Px/78dGyulb/GlJ65dFW/aLotVzVVd1/jkY
kbNFebWaLxJ2f/iUtjSZshTFTjX4moWuf42fEtjuDT1r/Pib+ZNwyu8Skhzw
Jgfvq/m396gah4Of/ewrhTyj4uO2FVGuyEHYEpvQqG5KVP799sC+ManUvljL
uDqf0vDDtpTDhIFqOBTPTTxUKZYO7rz+KDtIC5sHvcc4VEuDZfHYM10eXKZu
9wf5bi6jwyyFbbu+4xJQbNi7SZ45XrSkw87nronZOLz2cGCuiRqNExLn/owp
qAed7P9y7JqGmLjIOibNVWgQl1x6ysgo6txwhf+xUQV1eERk+MWWWvh//mF6
+I4P5W9u4JnlrMXA64Pi2r5LxPf9P7PfRvpSSnSXUytHZWPB1ot+rQv6hLDE
RsfM2yTQAf/56lHWGqzUtFVOe6eA6ljeDMcV4RRlVMmr5oMM1Pli/tTjgxZo
ucjJ/G4o2QzpfCk8VgPllpO9ttslo9Kc8j+m3A6gqTXTvb89ykLNPfWH+J/T
olONp9UezI6laY2HONadqcb+Y86vv99LxroMhzuWviF0qtKMssWts3CgY/2A
WXMP4yyvq3vXvHHpVx5+FEmxf+LphQnX9rXf0zKGPqSN9335pOB6Du/R/35S
GkpsnOj2urWCnn/f/HNekgIHJ+9u+2xaOgJcFnwccjSYvD0PxPm7aTCgodmp
92mBsH84JLJj2FGMqb37SJHxeRjS/nVEaufXcO41P7eEdzittz9kfblMLmxC
D70r3VeDnDVL4tdZKmjKENMip6+qcLx7lld5ay02eO+rNeRzOE1rWMbIvfL/
/V6eJ7pujEXTyq5o9eUi7M2CO3ekHPFzxZ9T+PM32i/pempXwblwlOvXJeMV
VO1WG/NkKw22VbxXJqhHGureufJyumM0mTv3frl2Rho+nN73qNgJBczcQ4+M
mHUNNxusODxhdJb4XMTnVPj55I0OiO6dkYrF308s/fBMQQE16uf2bahF/9iX
d9r3iYCnbdja0o7+MO7gEe5XUOdDd6xr2tjpDvXu0/xUXtVELNxt3/xWVjZq
mJgt8PBNwtaYz4cDf1yibhstey05mI0OOYMO3dmtgVPOHqdar1W0Vzd3Utbx
VHw75tk5ZGocru5ua9IqQ03z78QeOKZOw9zdVmfi0l0oIfesRULxgvvavXWG
e+ccfP/s73etfAom33MrVyEsjnYcTqg8YFYGWt91eWB8SIfXM1fZlGsRRBGv
Ro9bZa2Gk/HtOqMcVXCd0yjIp8MkGpq/2MrYOBPtwiMddqjO0KG+L3s8Oe6P
9XM/xE5fnoeOoSG1Yuq8QVyL+tMsbMMoc9e3JmMK+r2zD24NdGuvhd/D1WMU
XxU0bd7YgQs7puLqNZt1H7PTEB881quLZwQVO3QoxGdiGnb1f/vhc94WmjIj
polZt/t0zSX4bCttHrIC9tU8VfwpzlzYn1H6Zhx9aTp5RpRVDkaVDDn/10cN
Sve56dvk1T34VY8PH2xc0P+09xh4b30yvEp3eO7TLwbNHvt7fWyUiRvr93p/
bpJAHXxirc5VSsWw9JUXb3nqsKfYk1aPrZ9if6DDy7uX4sn924k+To1zUJOe
DlrbSYlKe7+cR34a9ZzoXdS2XyrOH309/qZfJGhL3mZlSBrNTD20/mrB9TSb
RjwK9k9CyzI/zY8OVVMDu+BAXY00nLm2ys5zjw6zw92+JxScg/Z4v/zLSa3C
TEfjWfPfFFznR0NK1gu4D/+DIZWShmmhsl52qOG9GJTeXX6V/fhwLG6tTOvk
kg2vwSV6j6j9mmp7TL8zqm0qTtzp+upryyzxurFLeh+Fr18xf36rzkZqBL7K
HdZ/lIbWOmUs/nw+FYf7mB1ukxqAX0ueV7aNSaeykxcMG7pEgz4t4ub0WnGR
yif524TU1NBG+4NVXZQ6nJU+d/E9FH7+FdYqehIK6vPaIf2m2CXRJHUp3zsK
LdT1N1y0V4ZQsPnKT2VOxZKFheMxx9fZKHn8rN36WqnUtUi3gd+fvMLa3W/n
+c/KQqx03YjrqPD66fBhZID7eAWuZ9Xqd/eLinZ3vFJ2Xp4aPXRjju6brMbU
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
2nGckbyF8HuvmuepNiwXtMzjjUICuPCosfCE/5W/f37+u9fPfhIOFl4v62BQ
xiG1X5psOCn5PLGxhAP9d8sNux7SCAfbj3f2RBVA1wrus88HmbCxzr5KW04g
fJ66X/uU30FXZ52c20O4ovXz/2X9HBYa7PzpBheOnH8u+yuxCmQcZZvHC/+d
c+kcnuz3Rrj1Yuj+i+w8CFl74fI7BSZULVnE1crnQqX3WeeIA3eh2+Jh9yvh
ulO0fv5/Xz9Xprrd/uXOgdLgsfIt25jQ/9d22zATJghcm75Klgvg5jId67Hl
hfBOBvLCDVggq2DxRKqcAUpevpVr7ofi4TB3MJndLFo//1/Wz11fFmnozWfC
72LB0bsVDMj6fLq0dBwXThS55V99KYDGNz5v0aIQbB8vvdoVwAIbtU+b5TRZ
8OhJP0tkFsANX8lFO6UbRevn/8v6+fW5FKv6pjK4mHLvxH4BG4YGrB3rJ/zu
qBjt87oWyINlLSe3XptQAi1L6gZtuMSB1QUejS5D+NBpMyfvfqYpljR7s3PU
ef+/Wz+fjtdVbsmo6x0jZiZ9KZYVQHAqb95FMQGMehX6oawuE6Y+eOo1awsH
yk3VTlafr+8d7RXkY8Sf8sH+oouD3yw+vNdv+DUmrAQgYmGzWjoblkxw3PJu
FxOOSi27bBVRBWHuYw6oBvIhf7jnzFtVPOh6/rqSeTYVNg9RmDOgngtlqdzh
uWfre8eDTQOqv4XwoWX5prsxtlyYmyqev3JZNRTESzVfyWHD6pyt71a3smB+
jB0326sM7qrX8HfZ8OGIjXmtlzcXqhg1w2U7kiDjjvXeE/rC+KiTFkmn63vH
QQrGBR/D+LCfN+jxqJNsmOa9rj5wCQPee+/tV+XOhhl2mzVqTDjADm1ZecWo
CCq7PNxdxvPhTcy6ETrqHNgis8XRqPgV+Nz74PnzmQBWNe+8rzK/vnf0WnjA
eXc5v9dH93/+1yGKi+KiuCguioviorgoLoqL4qK4KC6Ki+KiuCguioviorgo
LoqL4qK4KC6Ki+KiuCguioviorgoLoqL4qK4KC6Ki+KiuCguioviorgoLoqL
4qK4KC6Ki+KiuCguioviorgoLoqL4qK4KC6Ki+KiuCguioviorgoLoqL4qK4
KC6Ki+Ki+P8HccJNQcJRQZqfQri8SDi9vXxewv9AwgNBmgNCeEI0X6iXK0T4
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
5RR6e3L7b1PvYdETj2NbfZWo53LjwsChatqd8mJR9sckkl7vbL/fVIxqvklv
yp5Jydrq9eq948S0cqXHjmdTJLAM7Tmq6a4UMp501yu4g5Ly5zUtzhsnxV3l
+EVhrxMR8W3jiLWXVbRg8dkx/VdKYNg9wXuaexyZsDMoMM8irGUxmq44InPQ
9D/sQcGUipr+e1Y1KEzW9F/4fULXgZr+y2Yven5K07/fD6uVfTX9JzzILZno
lkYI9KjQqv9L3O1m3+2rRRHM2vfKeThPRs+Cd58QHX+KSsMGuz/ZosKHitMm
nSUFrfSZd+Pb/Qd09PQa6wtLFYhdrOeg31ZNh2VLpO4NUmnm27nPjmk+L1a8
vuRymUhChuEfRkyqkU0ZdltrTn0kx54Nn47KSqSkCN+5+p3m30GHfQ1KblRS
oc8v8x2GemFoeyF4WezWHFqZPDEirYLm97HDoxt5zzKx4dXGfe32ymnFnc7D
lhyXImh+kL1bi3QSzpa31myd2FjzPc7q4tol82UkcgrRaxjyFMnN36yz2qyC
X9L0sp/FqaSfW5IaHBtMA+SHF/86VYTTjXI+93JR0fAWT1bVdrgKfZsz42s4
yuB6/tm9n5lqQvCE1nXSEyhgRYs9O3JFuKT5xQk5l0K2Tf0uN3kipbOzh5vd
faXAqD0TvVZdTyPhvPPh1Tr9sQUIsTUMF22Jp+oXB49qMPwCDTEbui2wYgks
e9/cFJiRgCltx6WNLM4k2nYw7XBEAa6vWzRooFkI1DuqT3TdLqM27ud3XOur
wsZzZ3dFu6eRcD6e/6VHuKb+xKMnqqU01nx+fX/VeNfFQMwde+WcNDEfG+Lf
Llt7Op8mmbfZTQ7JMH47PGVOjxwsv6Of/AJS6r3kx/brudHo0yWiy0rN9/pH
69a/tDDxhHTD1TEvXp2hLk50Ne5zCRotnxQ+5kESlT4a2Cr31yuMD2g9YUy9
YjTqMvXm+2o3Ebi30fZRA2Lxc3T8q1JDzefwJdbu/g98yXhG33H3H16mgTu9
picUlUBq1ERaY/UVehzq6+xllkRhu3cOU3gVo2Z60ZL9BkkknDklnU7cnFaE
yosTHlc9rKA5InlQ4WAxktsNWvryVA7enzvVflVsKq3c2tdjWk8x7Iwm9euo
+e/bMqbHnFF6ieTaazJGKMQgkwPbzxiq4awoNf56PI3aFVQrvh6Yi/bTlsmi
t6qR62k8rXlOEi0s8FrwdEgO7mxrUbl6Vj4OKvdVexKXThNOiVy6b0zC/T6X
RBuqaP5ePee9ZLJ/PEVYqHeOdwrE/HoGCxvGFOPCzv3vbodoft4WiVZk7kgG
bMR7jzdTwL+O67zOnaT0YEudjMbqCEg9Did3KlRhTeVf+naeCpo8sleN/OhH
GD7+W/RqzefqHXrPa262EFPhBOuA6aHXcKbJ1N5GBfkYFJS8K8VLRgebfQi4
nRWLYT8mrPliocTU0EkLvZpl0e5P4waUGB0lpzs3W/p/L4T3y/71O6jkNDnV
rd3EbacJHQMHtZ2iRJDL3ey9Vgqa2arOujmiRBp8KyjWpIUctk3dfT1K0sjD
u3RRZJqUsoMexpysr8Ds5lvHb96ZScIpNvcxl71To55ZWNftbSVkLup0/Vib
GzhWcZfFvWn52JfaoPj9ADXd+uC06ENOKAaOMN3S0EiKF0vX7hvwU0aHh9g4
zRgWTpZ579OtLytxsOjhgTrHb9EL6+mPPc2zKeTeXZL7FKLOycYjhx5LIuGc
6vlthH+PIlSr821v7+5K8vg++m6OXjpmr3/Q9ZujBN9bn7Q+siaZjr4aW/PJ
yRQU127lFmddiKtmlUviZhH53dxxtaTHXUS4rqgY51+CnDp15XHHZFRhwNiE
Ht9T0cep0fHX3nJ0kh07++Wx5vOPXbuAC4OeIT6saHGouABe7zx8DBtJ6e5U
l7mDL14mq4+H/fff/c0VgM3HwXEFYFwBOK4AbG4Obi4PNpcHN5cHm8uDm8v/
8dx/a33GFYBxBeC4ArD5ODiuAIwrAMcVgM3Nwc3lwebyxM3lweby4Obyfzz3
31qfcQVgXAFxXAHY/B0cVwDGFYDjCsDm8uDm8mBzeXBzebC5PHFzebC5PHFz
+d8nxxWAcQXguAIwrgAcV/DHe/2t/hlXAMYVgOMKwObv4LgCMK4AHFcANpcH
N5cnNpcHN5cHm8uDm8uDzeWJm8uDzeWJ4wrAuALiuAIwrgAcV/DHe/2t/hlX
AMYVEMcVgM3fwXEFYFwBOK4AbC4Pbi5PbC4Pbi5PbC4Pbi4PNpcHN5cHm8sT
xxWAcQXguAIwrgAcV/DHe/2t/hlXAMYVgOMKwObj4LgCMK4AHFcANjcHN5cn
NpcHN5cnNpcHN5f/47m66jOuAIwrAMcVgHEF4LiC/3P9f7p/xhWAcQXEcQVg
XAE4rgCMKwDHFYBxBeC4AjCuABxXQIwrAMcVgHEF4LgCMK4AHFcAxhWA4wrA
uALiuAIwroA4rgCMKyCOKwDjCojjCohxBeC4AjCuABxX8PvkuAIwrgAcVwDG
FYDjCsC4AnBcARhXAI4rAOMKwHEFYFwBOK4AjCsAxxWAcQXguAIwrgAcVwDG
FRDHFYBxBcRxBWBcAXFcARhXQBxXAMYVEMcVgHEFxHEFYFwBcVwBGFcAjisA
4wrAcQVgXAE4rgCMKwDHFYBxBeC4AjCuABxXAMYVgOMKwLgCcFwBMa4AHFdA
jCsAxxWAcQXEcQVgXAFxXAEYV0AcVwDGFYDjCsC4AuK4AjCugDiuAIwrII4r
AJuPg+MKwLgCcFwB2Nwc3FwebC4Pbi4PNpcHN5f/47m66jOugBhXAI4rIMYV
gOMK/s/1/+n+GVcAxhWA4wrA5u/guAIwrgAcVwA2lwc3lweby4Oby4PN5cHN
5cHm8uDm8r9PjisgxhUQxxUQ4wrAcQV/vNff6p9xBWBcAXFcAdj8HRxXAMYV
gOMKwOby4ObyYHN5cHN5sLk8cXN5sLk8cXN5sLk8cVwBMa4AHFdAjCsAxxX8
8V5/q3/GFYBxBeC4ArD5OziuAIwrAMcVgM3lwc3lic3lwc3lweby4ObyYHN5
4ubyYHN54rgCYlwBcVwBMa4AHFfwx3v9rf4ZVwDGFRDHFYDNx8FxBWBcATiu
AGxuDm4uT2wuD24uT2wuD24u/8dz/631GVcAxhWA4wrA5uPguAIwrgAcVwA2
Nwc3l/99cnN5YnN5cHP5P577b63PuAIwroA4rgCMKwDHFYBxBeC4AjCuABxX
8PvkuAIwrgAcVwDGFYDjCsC4AnBcwe+T4wrAuAJwXAEYVwCOKwDjCsBxBb9P
jisA4wrAcQW/T44rAOMKiOMKwLgCcFwBGFcAjiv4fXJcARhXQBxXAMYVgOMK
wLgCcFzB75PjCsC4AuK4AjCuABxXAMYVgOMKfp8cVwDGFRDHFYBxBcRxBWBc
AXFcARhXAI4rAOMKwHEFYFwBOK4AjCsAxxUQ4wrAcQW/T44rAOMKiOMKwLgC
4rgCMK4AHFfw++S4AjCugDiuAIwrII4rAOMKiOMKwLgCcFwBGFcAjisA4wrA
cQXEuAJwXAEYVwCOKwDjCojjCsC4AuK4AjCugDiuAIwrII4rAOMKwHEFYFwB
OK4AjCsAxxWAcQXguAJiXAE4roAYVwCOK/h9clwBGFdAHFcAxhWA4wrAuALi
uAIwrgAcVwDGFYDjCn6fHFcAxhWA4wqIcQXguAJiXAE4ruD3yXEFYFwBcVwB
GFdAHFcAxhUQxxUQ4wrAcQVgXAFxXAExroA4rgCMKwDHFYBxBeC4gt8nxxWA
cQXEcQVgXAFxXAEYV0AcVwDGFRDHFYBxBcRxBWBcAXFcARhXQBxXAMYVEMcV
gHEFxHEFYFwBcVwBGFdAHFcAxhUQxxWAcQXguAIwrgAcVwDGFYDjCsC4AnBc
we+T4wrAuALiuAIwroA4rgCMKwDHFYBxBeC4gt8nxxWAcQXEcQVgXAFxXAEY
V0AcVwDGFRDHFYBxBcRxBWBcAQSuQPBWMZ8/Wv4v3irm+Qfz/BOXI/CHL0vw
a6k5v5au5/5b6+vyqjGfPyVz3radnLeNy0EgI87/JvjiKnK+OF1+OV3P/bfW
X6/DKyh4C0s5b2GaDm+h4D/cxfkPh+jwJdpzfkUuR4BYjgBxOQJ/+Bt1+R4F
P2QB54fU9V5/q3/BqzmF82r+t97OBjr8nzGcL5TLEfjtF+VyBP7wkbIcAWzl
/KW6fKcsBwEZnB9V13v9rf51eWUFb21nzlvLchD+8NYK/tuGnP9W8OVW4Hy5
gl+X5QiAyxEAyxEgLkfgD3+vLt8vy0FAdc4PrOu9/lb/53R4lZnPn5jPH3P+
F2+z4H/24fzPgi/6AOeL1uWX1vVcXfVZDgJYDgJxOQhgOQjgchD+z/X/6f5j
dHjFdXnLXXR4y3X5z3X50nX51XX52FkOAik4f7vge2c5COByEH774bkcBGI5
CMTlIPz2z3M5CL999VwOwh9+e8GHX43z4evy6sfr8Orr8vZP0eHt1+X/d9aR
F9CLyxfgchD+yCPoryO/oC2Xd8DlIPzOR+ByEP7IU7DXkb/Qm8tr4HIQ/sh3
0JUHoStXYpqOXAlduRUJOnIrhPyLGlz+ha68DD5fg8tB+J3HweUggOUggMtB
+J33weUgEMtBIC4HAXIuT0RX/oiuvBJd+Sa68lB05aoc1ZGrIuS23OVyW17r
yG1hnn8wzz9xOQJ/5MUI+TL7uXwZXc/VVZ/lIBDLQSAuB4FYDgK4HIT/c/1/
un9duUJVdOQWuenILWI5AsRyBMDlCIDlCBCXIwA9Ll9JyGOqweUxCflNXbj8
JpaDQDW4vCdd+VC63utv9c9yEP7I1WJ5AbTt/5jblaEj/0vN5YVxOQK/88W4
HIE/8sh05ZexHARK5/LOdOWj6Xqvv9W/rly5/y23bjKXW8dyBMByBMDlCPzO
y+NyBP7I1xPy+HZyeXxCft8nLr9PyPvL5/L+dOUD6nqvv9V/ho5cRebzhyGX
2+igI7eRef6RyuU/6sqLFPIlK3D5krqe+2+tv4vLFeVyEIj5/FHpf8ktFfJP
meefuBwByufyUnXlq+p67r+1vq5cXZaDAJaDQFwOAlgOAnE5CGA5COByEH6f
XA4CWA4CcTkIYDkIxOUggOUggMtB+H1yOQhgOQjE5SCA5SAQl4MAloMALgfh
98nlIIDlIBCXg0DCyeUggOUgEJeDAJaDAC4HgVgOArgcBBJOLgcBLAeBuBwE
sBwEcDkIxHIQwOUgkHByOQhgOQjE5SCA5SCAy0EgloMALgeBhJPLQQDLQSAu
BwEsB4G4HASwHATichCI5SAQl4MAloNAXA4CWA4CuBwEYjkI4HIQiOUggMtB
+H1yOQhgOQjE5SCA5SAQl4NALAeBuBwEEk4uBwEsB4G4HASwHATichDAchCI
y0EAy0EAl4MAloMALgcBLAcBXA4CsRwEcDkIxHIQiMtBAMtBIC4HASwHgbgc
BGI5CMTlIIDlIBCXgwCWg0BcDgJYDgK4HASwHARwOQhgOQjE5SAQy0EAl4NA
LAcBXA4CWA4CuBwEsBwE4nIQiOUgEJeDAJaDQFwOAlgOArgcBLAcBHA5CCSc
XA4CsRwE4nIQiOUggMtBIJaDAC4HgYSTy0EAy0EgLgcBLAeBuBwEsBwE4nIQ
iOUgEJeDQCwHgbgcBGI5CMTlIBDLQSAuB4FYDgJxOQgknFwOAlgOAnE5CGA5
CMTlIBDLQSAuBwEsB4G4HARiOQjE5SCA5SAQl4NALAeBuBwEsBwE4nIQwHIQ
iMtBAMtBIC4HASwHgbgcBLAcBOJyEIjlIBCXgwCWg0BcDgJYDgJxOQhgOQjg
chB+n1wOAlgOAnE5CGA5CMTlIIDlIBCXg0AsBwFcDgIJJ5eDAJaDQFwOArEc
BOJyEIjlIBCXgwCWg0BcDgJYDgJxOQhgOQgk5CDEDtq97Iq7AhXY/4T/X35f
fl9+X35ffl9+X35ffl9+X35ffl9+X35ffl9+X35ffl9+X35ffl9+X35ffl9+
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
WQXwH5rle2mwAsqNTd9MMxbRJovgVXWWi1D5Sr2hDVOVmHAq4/oMSSRt3NLM
wFHz+SHt1wv950mP4B7oVXln9m70lSo7XpSVIGzatRfrYoLh0PPIjo1tU2n/
bsepB54VodrAG5OdzRWoauS+bLOm/jaLwTuXrRBBUaP+wXspSsw59zh/nzyS
nHumL3ysqT+w0mz9ojb+WFzJq1JKZ0e8q6USRUpLMK9s/Y9r8cHQW9fppJ5J
Kg1Zeua9r6b+uq7P3P5Tf47Djrn/qV/44VDb/9SPOp33M0FT3/HxSOsNskiK
swzu4qmpX9t+cJZb4iNsC6n1JThzN/auutvuiqb/bwWOa+u+CoZtlaFtrDqk
UkxA57IBmvon1cYdDyxJg83XyQMnX1GQiadFm+X/8bVGXGoze7IMRx+IhrSq
JCWzrzL/91fzcHRv71pdKr3BhS9mlwtS5OS236BUOV+OR0MzOteHNw3JcHlc
tltERtsuOC2bX4AdiakvZ9yWYkDleXFN49LI5+3Tny1GKLB8LwVmj1ehx3fP
mNAOpyhwy5QaongZ1DtOt2k0LR2xl5t1WdcyFMcjYho3GFoEozDXWmsTfamR
sbmDvHMGQqwDjmXMLsKNPtn51a9nYxk+5GWZedL+OodujDxXiJyoruLDmv6H
Xq46qaiilGadGDaqQNP/xfPxg48YvEH7LcO6OcfK6WJZFfWbRXJU7t2zb7Ux
3nTvVcDEXftF9OXuwht2swsQ3XF7xSzfSNS1Kh0z0TGH2p05mVA3oAD7DNtc
+fVFhPMLrjm69FKQ7ZFr1uv75KFtx7yM7CMp2Gy0e+YVczlFx2VIRy/Q/Ls8
fW4jo5pS2Lbcd3LYBzHtVR38uW61BLvXLH+YOkENP9Un/7GBUVRj4ZSGqxwl
8H3Y6KNeBwVsqjvd6fn0AUad72hg/12B/e9sHR++yUKdbJdhrvopGFGndaOg
pHw8W/sk8MLudBrlXHvGsk55+Gb1+Oo1QzV2hk87tKJiIJwqOtdsYplB4emX
3/Xuqfm5dXLr3O2rCBt3VD+8TNP/DI/7TXZq+q8bO98yV9O/y4U64sua/t8v
7/DrP/0XhPwwHHQ9Hvc7msR9ea+g+tb9I2plan5fgr372lmJEDAv4t2FAxKS
pv68/s5ahmbrvhw/5ydD3e73PR+VZtEU6+1V6lWQwejrvVtWgWpcdvz+uNsz
Pyrr9d12fZYE53dU7zPARIx7eQM/zT75gl6N/+zW4WU+oiaetJl8T4KvK3pI
bgalkGn7/Ed6bkpsxXXLV7ce07eUFwOjP8dS3OyDdkPLipE7pkL69J55NMP7
zNvrI19jWdXkVZU6FWDhzo/2DyYnoGRR59iltnFUJD4vm/SzCDbSJZ/XafoP
jhh9Y/lBCQWc3xLUT9N/u4jGhxs7JOJ2mPR9tfciMus8/O3SR2oUudmbxzdR
YOfNYwFnt+fRmpQ9I09rvs+3bdfHP0DzvWr+aZNPQ52iKSVhYWTjKDEujfnZ
dEr3FGS02VJ74mRvfPa3WB7UoRjBCy6sfjvlNX6dndlzi18inQn3vtFS8+91
zMLV7QI/h8PqflmzqDUyyp7R4nKpvgqGOR9WJsxMpNbpPadVDUilSfUfJy+6
VgivDfLgPqkRtLfH2VNDel6G7clL9yetKcHLprkn1lm+xtSPwz7UDUikmpdC
T32sUYzOCx+3yumRiWsp/fTblMjI2OPr7NxZMtzZPb3nrUwFvDr2/PDLQUJy
s0XxlZdkIMDqU9KY4yJs2Nf0Q9WmUurSaMa9OdeksDNytOxW6yF18lj3sFHv
XFpcbeyZKMNCWNU4YuR+KRi7JHlxc+/KKP1OX0lxfRVWh9Wd7B3xiOKy5/af
FKcgp+zTGz6NU+Dgi4GliYNt6PzOZhcG2EnI0uGQd7OO+bAKL6sQHnONUs7E
OfW3SCO5k++07q+LcKGlskLbN+G4tu1aley3WZRi1vzRicmFmD8u7N78xhL0
j3Po09ZASe4LltcKP5yBIc5JizpfisO8cyH+9WaqqYNlp1kzvohxtZ3o4OUK
kVhjk+F5KU1N4Ycj2z6UiXHaqXWjqu0TIH7b99K6Qyoy63W190ipBGVF5pad
7r/Gqo33trV3VdHXl+sm310sxZ5fm3b1+pCIl/rFi0tnKWjkLnHyPH05Ol+J
bRdwKRS5rWauGtBZQX39S02tLiowf3+ba5LbeajeyEa97KSc9oUbtll8VIxv
U29smDU7F5sm2ckPLJKS9YLaSW/XyeB6O/OBjakUa5cF6Pna5pCD+cnO+4pl
WOoyvORcdDq+N82Nyp2cS8FNFLXqTFJjTKfFt5ZMEEFvXuSoZ8Nl1P1Yv4qp
NyS4Pv7uvY+Tk1EQf9o+qqOEdk6I+xAySYWx1cn80ScJtlVdLPK10nyfy7ud
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
zN/Hk+zPNIXDMxGMjpku+q5bAP/ynjZPN2RTE6+sJReNHsLPrs07l5QiHHB8
Pud593TNv88yra95z2ntkT5z8ryLETd/yog1p2XweF372LiENLqyO8Qp77Ec
CmmqrH+NN5Wzo9aoWWbhJdhXwzNKoXn+lXnXbtfWPP+pTx8yD2mef/6yMUUD
o+Nwb/+vN98HKjBE9/vpVyFy3I24ZLxe8/w7r5Ya17TMRdQ+l+8PfDVf7/ig
rVm78yrn+Zn6j2reVkJvRc/jsl1htKxj41obNO8DTh/3FL0zkCLk5EC/17cT
4BW36kST+gpY5DbWSfST44Su3/0TBxJpXY8PjdZ2UcBWvDbmk60cu4+W6WUt
E1H4u6CIVeuT4TMnsW5skBqNc6Z195v8nIzmttZ+kHSOJr9uLe2RXIoO16Um
jxxTcHXrt/XrjqXSn8dRAwdbFqH1yE8vrvZXomv9Z66SehlkavF6sa2zBE9b
HQmNe5RTOTfMmX2nY6gKncNSanc4EEbHws/enqZ5/hl2TgkXNc+vfHSj7z/P
P2JTfbt/nr9b50lT/3n+18/T6jwISEakqPb0tJ5KLH47daLNKylyy2envRFf
xdYPA3VtXeT4dWrzVHdfJVZnnx3WbUgi3c8bZC43laB5F/HbIckq3KzfuMv2
+WL6MMJGf96zMNgu07sVdqoAaTcG6c3zugqVZNDJd5rvQxAKLcbvLIGDnve4
5YN8oIi4YzcwNhtvzI13Zr0pQl9xo2eTbskg83O7+WtfOFa0GzRGoaXCz93L
03YZqbGyXY1nDz5F0I43Z/as7iRF6zk7y5pZZlTOFJvamYblBeh09nfeudSr
+NMNqXUOy/HjWI+0pprn3+hVyz7TNxM2uc4n3y4QY9AP5bKOHkqoDxb+ChGl
0VWDQEQ8kmFJ2+b+4SflgKXh1uE3xbQ63aTR3cQUbLZqWGPgJRWWxoheaj19
izzfGpPVi53po/UIyeSppfCd1GmelUNW5ZwY06mzi+b9yNNTz8YcfpiO2z43
23TMkuJ6lEN9Q30FVjs+2btgngJY7TbmrTRRs/+1vOCiK0deyMAl6gI55jeb
GDDV9DystZZ0cZuhRGBSzeHS7VmV0//MjuSQz5q9YmbT6JPbI3E4JnJ4SYYC
W2dH7IzLk2NQZPzEvU3FZNgzYJufVAHzWqOfnSrKQZvrhm62LqG0b8/bSTma
Pe9O9BTj9GOav/9RRtqHxkmxZ0hSr86an/dBuw//HVAqw7ALrQa2f5WJmy6r
C3ceksNp/WkDnzwpFsaN3VY4S/O618ctKOG4DIZJjr3zNa+D697ExVkqRZjS
rfSsSxsxLrXfd3RwJzn8W7kkNVFLcWvm8XvTElOR4JFbYuSqQG+VROudY17l
DAqvl/XDRwkzzxp360qSSMdDL2/KowLYjjPQnR+fi06HHO6+CohHT/PI8uc+
augVLZDvXC1GWMDVJ2WWcZB0X9Tjn++LlvaIRB09MdBky/4t6QmAsU7inDQV
9j2Jj/w2V4J+T3rUk3hofq635BS8vqfCrdGPaga6SeAycsKrX+2TkT/jSBuR
hwK9Up1ant8vQ/S66GC3iVnYXzb11u+NcjyTtX6/6K0UYWaLb3r/ukD1Retn
6HRQYYVDzqpd9eRQ1stKWeXshos7ernpp8jx2Tb4VpGtEr8uLqd4fV/6g+6y
DYPFCOq8xNv+YwHW/yrYn50cjyHPg3Y0mSTBy/cfnSY3UGPpnUnlh7xtSaLe
Y5zZUIndxVNHrBmmQA0xomWnU3Hgsk+tWSUSWHT+9q3PRs37579O4WHvwuiJ
ToJJS0cZ/J/3PnlM8/7h44ucfTbxCTTN+latez+zEBkyeUTOq0JcO1ZL2X1V
HPofGVkYsOgy6nQL7/BDpxQn7F/NLL6SXjlvjPpSa8b0Qgz7tVgZVPgS+w9t
O/3hnBz6P1rKOs1Vom2b4P2SF1kU2ij4yK79chiYbqbXp6TY9Swl1SryFf3u
86Tf7eU56LjuZNmiXkVYXGq4KKlEikU7m25wSIlF89k3l+k1UWF+8qaVLx3y
KuegszbxHzU/v7kly5vapiSS/ca1Gx2uqTDLS/2t/2oJnh112F2wLxUjXPq8
sOylhH3g3e5LNXtE23pDTVeNEUFsv6lW+81SvH5a8HXvcSnE1ybVa9HHg47e
KFjkYqd5fempKj93W4bf/r3s2s9PxI6GT9zNl8jQQt1x5lLN+5i/6fnTOyUG
4uTXVbN0DWUIWZjv08tfVdlj8L/+70P1efV59Xn1efV59Xn1efV59Xn1efV5
9Xn1efV59Xn1efV59Xn1efV59Xn1efV59Xn1efV59Xn1efV59Xn1efV59Xn1
efV59Xn1efV59Xn1efX5f5PzOx+97nVqKaUrFq6LRl+9TnM/Hwty8Vejj+zk
xe9P8uj8hu7BV0Y9R3xk8bIIcSFytZrK407KqIbRlISBv9Jg4Nzy1FtfOW6M
rF0at4Do6e3d7qUD/RFzZnXNuKBS/Ox41vL4+hQ68XpKo6dnU1HSpINbnGUR
6muVHzAYoCSvX5P8c+tmwHrTw37l+yRocrbVhLEnk0iYFt7l44MGFuNw8aPD
Wqd86JnlnCfexjkU/sCf5PeK8HKF/SGjPzI6McbKeZ5JFJnlf8qwvK7EoTSd
kk9GavIpc7Yty43AiPHDd7TQl6LZyMh+u7pJaIKo982TnW/hZM09pg9mF8C6
reO07U5ZJEyx8T1j2Uc17Nt43PcqTaebvl9sY9KllBP66N3Z5gqEuvrnHJir
IKsOWhsXihJptE/o+67t5PB9Zdi8p0pOk9Lcus/YeZ7G9goZ1W2WEhYRM5fe
0c0m+69TjUr1T5Dz3dt6Qb+KMCo0ZU/qHRkd1S0L9st+j7G/p6//bqrE7rov
Gm03FVPadMvgORGeuNDawkC/sAD2tf9qb/BWkMWEwQ0LYgNhMq08dp2DAkFa
Zxb36S2lgB1ama3U0ZB6HUvpXaTCFSeXj37hMsq3Fa3O2p0CWIkPnNJVIPCS
73LzoHiKMVU7TXMOweJm7Ze2eFeCI8pD9Z/GZdC0cyLXAduSEDDkmmhrnSLk
eXeZ3TY3iZYW3lnybEwu7u5sV7tBdgEOKr50+XEqnboV1i+5GZKHHrNXymId
1Wj/buDCiXUT6cxgc4xXiEFdD++60EmNj5fO9Vj7Po1WOw71mj1IjA36M4f1
2q5C7WUJT+odU9BCkTy0aLQYqd1HrXh1LheNMoqXu7RPImHmlvY+fXt2MST6
raUN192gwIj7B++MTKLIvU4mijslmLDc0iPo4X1qPm/o1IBH12mE0505CcWl
aNnX4van+rfx4kDLXRON3uPPpPjXXzppzlfNjJr8MIk+B47okPf3NaYFd5w+
uVkJHm3c9Mq0qzfCtrpPfvn6AvV1Jve4b6VYdVc75SWkNGj5710382IxpG90
3zVuKmyN/7DS/nwBzTDuvJe2pKDLh3GpCwfmYsaJ0/VTW4lpxSf3LnuuhmDR
lBuXpIkF2Hbp4p5Yj3QS5lOb7wOjphTCa6PtqBEjw6He3WDGmV0y6uJxebfn
UBXMDG47hGQmYFa3qekTSrKIdh5JPxZdiFC7TlGiHfFU8+roiTrjrtCYkWN3
htQsxcT9M+6svZlOwrxb9nqjtub+q4+9jMMvpZJdm8fXWz+V0kXrcSP9Xytw
5vLzB3+y1ISw6R21MhIoeHW7/bvzRDjfMvfbYFcVzWj3dG2TLe7QtrowreE+
GR4nzfn5pySNmuWVpoW9DyMj+bFlf88VY/Pcq/bLbWQkdw6v2yL8GVLaJm+c
q/n7DbUJ3ezWLoOEqeez3nFGq0KM6Rl4K/95Fra+3nao+wE5rb7bx2T5KSmG
/DXe3aluJLpfCVv53jGX1qTMiE6vUYQDW7+ekJVKSR7ltO7j5He0+ZBO6a1a
KtS4ufz6T5GEOkaVjZ/ZMIeyNjg2sgiU4/2yulu0u6nJVbZc6qGTRvM/LHp+
coMIZTVnz7xIClp7b/Gt8oCHdOL8essrKxQY2WNw7qPFMqKwvadFp56hlslo
j6c7VEh4mFc6wy2dxoZ41ehg+Ar+/Tf3/2FajKJf0/uNqJdLP61tX5xbEYfH
v+euGepUiDarj8u2jJeTycPCWTXbZ2NQvfZFKY+l6DQgwXe2RxwJMzQk3zRS
rwT+ymm2kW8TEV2+bbz9dRUtWXZxsuEaCSZHDJrYZk8qdZnpfyesp5IKFrcp
yZ8qRYP7Sck/n0vJcu7bdQemimnNGq/dz2dJ0Mz11pURY9W0L/Wlbc7nJJLd
7LPZZbgYY27LUp7ayynSz7xHucUD2D71Oul4X4lj1+qph2qe/2ia5ZUrmuff
Ujul2TDN83cJaG84XPP8M8fpX1igef4xUU08v2qePySoe99xdxJJmBv26ek/
cShGx9oNz895fJTWmm358vZ9KNW+HW2cElmKt1t2nEj8lU6ymrcHN++UgDNT
tjt3ci1CqNfvi9+dVCSZFnxj3bckWK+72L6OmQRdrOOlnd/kkzA3txqzrle0
At1NWrbK0fHAXOfgwzvWqmiKiXlkC18ZQu3HWrUelEqNtfqd2tZZRi103nuf
dFZAt457yvEmShroaFqnk14O1a0Z47dlgBixLYbrG52R0+56cQ7t9d6Rp9ut
aWZnFTg1eUMvH+lR8rhu+COoPtGBLjKzDxGl6FDY4pRHbjo9+asdYDkuAX2t
3XrfOVkE94KDp45rnt/h2/bxc38mQfNjZXp2kgRBY4+sNsrKJ5dVFmbLB0fD
zDbG8Xy3QjQ9r5Q7eKWQMJuven1m784i7D7dwE7SIYw2zn6TFfJCSguS25kX
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
eSt756N87hN3T837IJePdvseJWdDK8fV5Ix2Kky1OrYMTSrA/UctP9ftqcC8
Bs53Bz17iImXe7Xf/EuBvetXPUqbrsZj1degKSFvqOHSWS3Wat4vu85Z1FK/
keZ1Q+/QWZMyMR1QHfmzcZ0E3XrlZ+Zont9Bf+/8G5rnj43LlP7z/Ic6db7x
97sIl5d47nPVPL/dcU/LTZrnf8s8g2bMNxBcg7oGg4bWn+xLD14Hz9jjIqIf
/ktvbbAuxLXL8aOPt09Gtx0m/Q++l9PVn3XUybZy5LzpJz5mLoPJ9Xozi2tK
af5pk4mF7vnwYR6DDfMZBJdBP/JMY/vE+9Syi/EWeZ9MhFsGn8y0Lta8/znf
ueXsDCRc1+27US8Cp6PftdIZW4xVBygkZ5oKXX95v4voeY5CdsxqKIqXYXdi
2qt5flIY1V4c1yYune5/ePan3XjN+9yxmX2aw5fGZLo++blXRPo7rzivtCnE
yQMGjfvWSsaV7yOvF6bKyc2l/ReljRyIvtbZWvP8rg9FYzrUktLIH7KgT5rn
P6vu0uvw8nRY/TAfYX5DQV29TTuvWirFd+ZnCJ6G4Gg03Tw62y0xEGPDG38P
y9qLA2v9u9+QleLN+fw/CalK7HsywXKrLIbizcL6etvJsKHfc7eDxgos3LJ7
0fYuIiouO9pt5WoRBP9D8EAEB2RkLWvt4s5BmFTrTq3UPvvwsbFKFCMthaJh
8yMPNPcvvPSk4JA8hg4Oylj6RHN//RG3zP+5v66+x8p/7t9pOtrpn/sjmF8i
eCaCY5L296X2i6RArAy5U9spZy+GSpW9rmqev/aNZmNbpCkx/VzmzXmSGNq2
Q7f9Ps39QWOz718brYBqW5vk2Zr7HUzD1mqtEkHwVwSPRXBYOijHhB8MEaFv
MxPds6p82hA9xEynkwKC7yJ4L4LzMtnZ4f7utjK0+WrbZewQT/Tfd1m2SaRC
SGxm2ekYKWjg3cn5Nhm0cmfNTXtrKHD9yOdLXV+K8EFlYJqqzKczBtsG5XVU
QPBpTjCvRnBqVjvVbvBNc//+Gx+H+3T2xLCRN/u119y/5Npn2SHN/WX7Jp6N
0Ny/f5f9vDOa+9u/8cltorl/+c8dkz9o7m/ikest19wv+DqCtyM4O6OCSlv3
19xfK61360djPDFiaZeJfpr7L92rvTdJc79OK/Xeo0syKKn7eutWmvsTet0/
aKL5/tzquLWORPP96duu+Zxenf7l1FMVfn31efV59Xn1efV59Xn1efV59fn/
4+eCE6TNOUGCK/SAc4UEh+gm5xAJbtFpzi2qyjlaVIWLtLMKR2lQFe7SG+Y0
xTOnSYc5TXbMdTrFuU7E/KdwzoGqyo2qypkCc6nMOJcqnjlWYznHSnCv6nHu
leBkneWcrDTmat3kXC3B4bLnHK5xzO3awbldhlU4X1W5YHOYI2bIOWKrqnDH
BKfMn3PKBNcsgXPNrlXhoCVU4aZV5axV5bIdZo7bWua4rWGOWyPmvjXm3Dd3
5sRFMCdujeDEMVdOxly5OObKtWcOnTPn0IUyt06XuXWzmVsnOHcyzrkTPqeL
4lw83tEzY45eVe7eO+b09WdOXzZz+qpy/VpX4QBW5QYeYs6gK+cMCi5hPucS
Co7hTc4xFD6nW8K5h4KT+JE5iSnMSRRcxRucqyg4jH9F/6vDWJXbWJXzuIS5
kCacCyk4kqs5R1JwJ39x7iTvVK5nTmVVrqXwOZ0D52Amc27mVeZmVuVsfqnC
5azK8fzA3M9FnPspOKFWnBNqVYUr2qwKh1RwSxWcWypjzmlnzjnlXdTpzEVd
wT6nu805qlW5q8nMac3mnFYZc12nca7r1yocWMGNBefGVuXMCi6tHe/SMr+2
mHNshc/pfnDubT3m5H5nTm4qc3IFV3c/c3U9mavLO7y7mcMrfE5nw7m9gvMb
y5zfGOb88i7wU+YCuzBHeC3nCFflDrdmTrGSOcUOzCnuxFxje841HlWFg1yV
m3yT+cpXOGf5ZxUu84AqHOezVbjP/ZgP3YNzoqtypROqcKircqtNmW89mnOu
G1ThYq+twtF+VIW7rWA+dz7ndAt7Hrf3VZ9Xn1efV59Xn1efV59Xn1ef/392
Lu31aszcmxmI+/pthPXoPGrhk5T6YbEa5wpeyrsGhqHgj/XQpk2k5GdgM3K5
jRr7U/Pmhr3Kx4ct3cceqqGgiaf/3iz/LIJh3YIdZkG5dMi7d9eTNlJq2ehk
pyUBMqg6iVILCp9R+k7fqbopKsIed9IulsK8y9WIog1SSC/cXHB0spy+N2y3
LOFNNmb1P3dmimEiCfPMiGs1rd2KcdyyW9q9zyJ60FSrgbYsEm/HLvHJuFeA
QQYj6q1oLUetGd2sBjQPJdWnljdav1bi5y3H7IOeCjwOTxh466iY3i5O2uV/
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
8Y0C7Rv9SvlMkfhMgfaZEl8qjqF8qUD7UomPFTUpHys8Iz5WOcr3itcp3yvQ
vlcavxuA5w3WB+uD9cH6YH2wPlgfrA/WB+uD9cH6YH2wPlgfrA/WB+uD9f8P
6nVd3Yf36NSAthXr9ML5jdjc0j1LelMrhDpVl0WM+QSjBc75zzTZOFN9uMT4
VwJILHf+NnIEA1Tz/MwddbhYaGC/wymHCXOXXNkt4dWIaZ6TTz86y8Lvc15+
Gc7lQmTQji3vuqMwpb3JaccLITYnFqxkjWPD74SURxtVWdAxZ0+axkUu3jOo
0Oe5N4PqhA1bF3CrUd9O10YpuxLPTp814rhkOzws7Uzvt2rGNAOB5pWARLhs
PdJF+KsN3p9njlE34cMHx5etZ84louZJpbuPY7jwQnGp58qvPHjwBQNj77ag
tnLNujtXW+Dt0+kqM2zzYdT8CXEXXevx1J3b6d7W7fD8hqS8+CMvmG/bv+xi
XAlEX9seLvmnE2QWWH0ylmmArc6vX47JZoKia7GZTjsPXkw/bZrL5oGEnD3D
cWkOZnAr2uI/cuHUyMd9ts4tEH1dJlt1dBNKHA0Od8nlw9vVeeIZumXw9PCI
xtbLTHz5V2lv9z4hGKX+XRZY1AxPIwzh3OVGHHo2c/vtuQL4o/y10Gl9DVRc
Mz8vmF2OwxbF5vyybAfPEWfvVadywPVl5/NbMvWosCj/3V5PDlxVM5XpS6wF
+0KLLQ1OLAwx31Y1Zigf5qYXL5n3vRmsE7/VjnzJxj8/ZadI/hG9f5na70c3
FWHr3bKv9mYc7K9a8NbWmw8V/foNKd/ToXO85F31NCHqyxw+ffoVCyovZ56f
XJaNgoPuDn9UhRhTeiDWfA4bTg7VlXN5kAhll/+WbUtsxep2/VlhO5igMs49
wlc1DWcLX6xb+K4VdSyBtUqPCcu14/nx9ZGwuefdFa2aVnzyKTH4lzETlJXX
HjY6xgSvIJR7VcxHn139Y9Nra8FoyBJImt6Ex04uvZpRVYvbSj7e+ftaCNkV
TYf2qTcia9EXt/uPylCyf8JNvT1tcFpWfuGaPDY6y9WozZeoQt25Ed3TG3jQ
9wuN7sbWo2ef/N5XAh7qjMxbpt/KhIk2v7Nr/lbiLbt4vcc8FvpvX6m8woMP
9g8vTPC5ysTvy+S9cw3K8L6JpRV7txA2RCfqrytgwvcCdun2BAYKNLXfRUZx
wD/FdNriEj5sN/2xwHY3E69M17Kx/lELK5zcfOaMeAYmQQfPbuytwaUHHPWj
QzvAOXCcwuSv2TjmeXLV8/xyUD4w12b+gk6IcslIHlrMwblBUx70DKsFR/3p
7edmcKG0/XIPo5OL79Te+6X6lGHKFalXax5z4XNhx8Ix2rH4fkeG7yPfZqz6
Vdrc96cNVm6PMJv8JxUz+tPnDZNNg9dYeq7/WRfMzTHxn5pXAc/8kjZ/nila
t2nGrfNVhbBlVEfHlPpW8C6fnN3i+g5t7tsP1zVgQpPC7UaJa2w4IFO/J+Bv
Myasupl1dQIHbB4GGuy2rAQbsQ8LcUcL/i6Z1PT2uxCsPuwIeLe2HmLbt841
MszBPvFfo0pS2yGmJdT4Qx4Tr5d8HrImsBA4+9fV7YoWwoJCpQSxSNG+UKkY
attbAh+b0iY7mDMhdHm2mmZ7CM5M7ZW384mGIY+CttWwuuDsmBvrA6ObYZLy
ohMjVsfD8L+XT0/uaYNZvJJL+mJsSMlTa8xQroLFOfvnmDvyQT75myAppRXe
vx21atyjRCjU29ezfRsT5u8MWtdlzYKsm3dMI2pq0Zbb/3nmSD6k7Vl8uX5k
E1iF+IrXvm3BRznzf1cm8OHaj7uhkrL2EKg4PttfiYtVelp3bUYK4OXxodr8
NxVQZi1jIdEjwNwU5zDDi0zw+2a2oeP+Bfj7elfHdBUO+mx51anZIoAHklmb
V/jW44zeZVEhSfXwPenTjLw6ITyreRx15V0J2j6c2/sjUvReUlRHtO8TrYff
3wsD95bBlBmfN+VK8GBVxRdz87tcWGd8yyiQx4PYxW1Oe2PqQUZszSjdDiZE
bNDaPza1FbIa3U7+kkpCRfFR/n+2MMG2b2zt2qAaaMleZlcyhIuh001LE8Zw
4TUz6ZG0ZA5M+z5dUpfBwxZ9w+2zSriwtHDJhROuLZBTnWRo9oOHjrUpCeVn
WsBE7qvPJ0smlrMWy8880YgKQ7cdX1zIg6WzJ60dNbwa31/7etbsJBsPienE
zhTtk2XV4ra+8mxQcPF2XnOChRu+qlhJcpjgq7XhQJgUB+Iv6+yuCzqDag9K
Asq7BKARpZVuVluATLmFl3mlTJB0fqN/IVEIK7bzO5P/1mB/3C1zsQIOmMvs
3Go3lws5Tg4jHMyrQVhu4zfTmw0n9pg8tozmgavrB/+ny4Vw5orfG4V7mcDX
DxmVupQN4XVWVnovS2HyukxVMYVaPGDHeP3Hvh0sNK6kh39jorhZuG7E/Hrc
837c/O8SfBg/8calppxUqLrcKntpKB8FV6csndTDhUyHWdcTz3Eh7nD0udgZ
LFz/cpyahW8zJPUsvc+LzUZ1M9bai68qcc7z4WYLOB1gKlVzrnVoFU4H5+7t
klWQoeN+nbmjHZzn1EyaHClaX/XZTr1hVTBJge0RnM+DA2KBPMvPAnAcdzb/
SHoFbvL/dfzXGSbo+nSt/GabDcNMKs/PXFyP2/pC4Ft+O3w6/KHBJbccJ1SY
fer8mQ3TVb/5WIn2k8f7YoYXvSmHE5HVBupxDSC2Trg7zaANQqvK3HUyhVC4
d7zG9xOI+7pdR398yoLJF1qKDWc0gvPd+M97S5qx7MlVJ/91Atg3a5binagS
9O6fmRdw3AtP6jlo7Redj/Hey2Kt5OMx5noNToZmuPNIyyFubDu8mDu3aJ+P
EKx5GolLUqKgsEkz2FWGDf61bf4bl3Nh0hSZI7NHMTBRQ8dmfiET5t3dIBcr
UQv3nnMfrRKrxWWCiwqFSm0gvfV272TvShj+7Uf/ujfZkHRl7GI9bgc8WDzp
1rkTjdAz8esnoyOifSz2a9v7Ah7s9T3JMVPigtPRpQWzplzFbudXyy6L1mnT
PSnrqbtaIMGY7fJ8cyXC0RDFP7+EkBTk7RjfVgMSNX0TpRueYZWflOGG8A64
fn9XjlV1LeiZMK7dm9EEyZZ/AkxE547Ph5D+nzs58C3IxPrHx0/Qrq6wZp0f
H6yHTleVvsqE2K+rf3XOKEPpdrHdIw8JYVf4lMiKm/WwzIbzQO9uPl6IKTlh
erwdTil1H4vIrgSvqX/f+fGqQXHC9LESoj7nTG7OXrnzLNC183o+zKERspev
Ts1r40KKGzNh2DI2qIltrTnWU4hG44+rhfsI4N3LEV8K5jbCO6+NE/TX1GCb
QqHDGFH/RuoYQ9WBrpP74HzqPkDfh/y7qEP9u0j/u+Q5kTwn0s+5k/q7cAX1
dwH9d5H3gHHUewD6PZD3hn3Ue0P6vZH3jJuo94z0eya/C46jfhegfxfyO2Ii
9TuCDvkdye+OrtTvDvTv7kp9J9hNfSdIfyfku0JJ6rvCZPJdzaW+Q7xPfYeg
Sb5DP+q7RXnquwX6uyXfOR6nvnOkv/MYal1AJLUu8C5ZF2QdQSi1joBeR/LU
ukOy7oBed2SdIlmnQK/Tp9S6RmtqXSO9rsk+AHLUPoD0PqBN7RtI9g2g9w2y
zyDZZ4DeZy5R+xJaUPsS0vsS2cdAidrHkN7HyL4HZN8Det8j+ySSfRLofXIc
ta8i2VeB3lfJPgxkHwZ6H46g9m0k+zbQ+zbZ5/Estc8jvc+TcwHJuYDHybmw
kjpH4Dt1jiB9jpBzB8i5g8PJuUPOKaylzimYT86pUupcQ3KuAX2ukXMQ4qhz
EOhzcBt1bgI5N+G/c5M6Z5Gcs0Cfs4HUuYxTqXMZ6HP5DHWOIznHgT7HybmP
mdS5D1PIub+W6hOQ9AlI9wmeVF+BpK9Auq/woPoQIH0I0n0I6VuA9C3YT/oW
X6rPQdLngC/pc0hfhKQvArov+tb/f30UBlB9FFSTPiqV6rvwONV3Ad13kT4N
SZ8GdJ82merrMIHq67CA9HWkD0TSByLdB5K+ESdQfSPSfeNbqs8EJarPRLrP
JH0pNFJ9KdJ9Kelj4RbVxyLdx5K+F6Opvhfovpf0yWhL9clA98nNVF+NFlRf
DXRfbUj14fiM6sPhDOnD51F9Oz6l+nak+/blVJ8PaVSfj3Sf30XNBRBPzQVQ
SeYCMkdAFDVHAD1HRFNzB8yh5g6k5w4nak6B0dScgvScok/NNWhKzTWwhMw1
ZA5CMgfBZTIHkbkJydwEQjI32VFzFvyg5iyg5ywylwGZy4Cey3qpOQ68qDkO
VpM5zoaa+4DMfUDPfWROBDInggSZE8lcCWSuBHquVKLmUCRzKLwic+hKam5F
PWpuBXpunULNuUDmXFhN5lxrai5GMhcDPReXUnM0kDka6Dm6hJq7kczdQM/d
f6k5HYTUnA4/yJw+i5rr0Yqa6+E3mesJDoAEB4C3BAfwoHADfEzhBkDjBgRn
QIIzAI0zEFwCCS4BNC4RQuEY+IzCMYDGMQjugQT3ABr3IDgJEpwEaJxElsJV
cAuFqyCNq/hQOAyqUTgM0jhMBIXb4BgKt4GTBLfxpnAedKVwHtAiOA/BhZDg
QkDjQgRHghQKR0IaRyK4E+hRuBPQuBPBqZDgVHCf4FQJFK4FBNcCGtciOBik
UzgY9BMcLInCzZDgZlBAcLO3FM6GBGcDGmcjuBwChctBE8Hlhg7IoVAgORRX
/5Fb8eQfOReOJBfj6IBcjAn/yNEAkruxaUDuBpCcDvUBOR10rkfwgFyPf+WA
DMwNCSO5IfdJzsiRATkjdC7JnAG5JOr/yDGx+0fuyWeSk2I6ICelneSqtA/I
VflXDsu3Abktx0lui+c/cl78SC5MyYBcGN4/cmQmD8ideULnzvwjp2ZIBJVr
kzsg1yb8Hzk420luzlmSm5NBcnMyBuTsyJKcnYG5PK4kl4fO8QkYkOPTOSD3
ZxvJ/flXTpDagFyhTJIr9K8coo8kt8htQG6R4B85R3QuUjbJRWoiuUi7SY7S
xwE5Sm0kd0l2QO4SndO0c0BO079ynegcqF8DcqD+lRs1juRMOQzImfpXLlXo
P3Ks7pLcqw8k96qH5F7ROVlTB+Rk/StXi87hWjogh4vO7Zo3ILeLzvlKGJDz
ReeC6Q7IBaNzxAIG5Ij9K3dMnOSU6ZCcsjaSU7bqH7lm6f/IQUv+R24anbPG
GJCz9q9ctpkkx61/QI4bk+S+aQzIfdtLcuKSB+TE/SC5cmYkV24qyZU7+48c
Om+SW+c4ILeOzrnTHJBzR+fiFQzIxZMlOXpskqPXQ3L08v6Ru9dIcvqUB+T0
0bl+vwbk+jn9IwcwmOQGzhmQG7j2HzmDdC6h9YBcwvskx7B0QI6hwT9yD5P+
kZOoRnIVZQbkKtI5jOsH5DD+K7fxXzmPdC5k9oBcyFqSI3lrQI7kv3In2f/I
qaRzLQUk19KW5FrSOZjjB+Rg/is3czrJ2XxDcjbrSM5mLMnlTCO5nNNJLqc8
yfH8f9o7y6gq1/VfK3Y3YCGi2CjWUjF+WFgoiIENNnZ3F3ZgYSwDFBtFEIPw
FkQRUUrpnky6xFz2mev/3s8a4zye+fWc84H9xTHeMdYee7uA+XI9v+u5Pkod
z4Hc+xwodT+1dUJPaumKVtbSIdXWLdXWOa2jpYu6gzuqIdxRNeKOqrbuatkb
Sqe1o9Rp1dZ1NdXSgRXd2AC5G8udWX+pM6vPXdqJ3KWtw11abR1b0b3dK3Vv
RSfXmju5J7mTO4i7ul+krq62Dq/o9m7nbu9s7vaKzm+S1PkVXeDbUhd4CHeE
t3JHOJg7wtq6w6JTfJA7xb24Uyy6xl+lrrG2DrLcTXbjbnI3LZ3lh9xlzpa6
zKLjvEDqON/h7vN2qfssOtGtpE70K+5Kr+OutJq70qJDHSd1qLV1q5tKneth
3LkWXWwzqYutraOtrbu9hDvdLaROt+h6F0tdb9EBXyR1wPto6YZr64y3lLrk
A7lLLjrmhtwxH8Ud82lS93wud89FJz1e6qR34Z56N6mr7sUddl/usFfmDvsr
Ld32bO68J0udd9GFt+cu/C3uwttzR15P6shr685X4E69K3fqG3Gnfg537V9J
XXvnk3oeawYkUODRs7eTXvhiaSMb9THN53iPDrvO1dR8bkWrJvqFNEiAnXOL
Vka3s+Ef7dpxyth46nSpe8/VxwJh8qj9sGPlC6F/Peyg0Ug1bf22LH5Tgidm
9t81eL/m+72d8YOdGXWzKHy+dbUC/5t09Eb2xrGNNL+HZk1vU3FWLiUvo9VB
/0SSU5eH55YMSceBdicuGaaq6feRkvGOsUk0TqdKaJ1tGbAeuS54hZOKHje7
9MhrQwzFFsZPG7gjG/dr3VDN+B5Bh8m4ZtXkOM3X4+KnoX0KUHndtpiclHic
s0xvo38zjdoO6re5Za0cvC8zzf5MQ3+8Ug8Jbthe8/PjSJ39UXb5KLPa9Un7
Vhlkcf/lqg4Nn9KPd68O7tF8Lpef1t3ItJmKjO2rtk0ZPwE/7cplh9jloaLh
/gX6d7NpgXXmX+VbrMHSXxOtN2zPROzlq0sT9fLofdqguZErQkl382vD+900
/7+Kftjc2J5KzcbedHeop6I+Y8dYPDfNhLdPrZp+ld9S1A2q/btCMtVu3u1A
zXt5CHjjFOdwJZqM98ZQp0ZEBlY7b+1K0rwnN87oHlk5BIGzuvkuXPyaHk1/
E5ewTfPe2OLAp/nNwxFjHlqtZ4GKvGvMauN2JgcGgw7O/mEWQa1aLug8VS+d
Rofcv/44LBdTjK+VnC1OpMUTfw72XxJMM0pK8luYFiDkfmHJhfA80tsTvdD0
rwhcGfbVrOyHFIxPaTdXvSyTdh+6caiy70t4O5mnXXuZhWJHx2umCefpVUOn
1rPvzsKIeb69+v8oRv9r+yoYBIXQfvv1rfccfAZ8OaubnFYE92Ht02YvdKcG
7epeNyiJxIfilimzrxfBp/3jnu6PPbFx99zGFn7HKePLqRljcopxPTFHf1nx
U6rcP9jj6k1/skj4aNVyVjE6ut87embEU+rEf85pb9fntubz3e6m0X2PpExK
9Ni198PpNCS01PnyZVkaLPfcSe9YIY50fWfFN7mfjjOrR+sGv8xGyaXmTWYM
CCOfSWPXT9H8fqv5sfk6LykXndo/jYlKiKcnX6eGDrqQht7nDIfO189BVMbl
1cv6hJP/8leOF1SJOJ96+/KkR/noPH5l1v6aSXTuzu6DfQzj4RvyjUal5sLS
+Px8C83Xp+7XoWEmrR7BeePL+gPuFuHjV9sduRFqqmA6oNb5qm+wzrX11jNT
snD6wI+e31+o6Lhd9xL7AS9h4uW1ZXWtXHyeYZpivCWLjBv22fW4/lM0Ckw8
v9Y8CzW6jb8+v7eKnuDA3O9NZmLtpS8NhlvmoVlZdLN1UlPPkni7oGq+uJfU
6VDIkBysaFwmeOeMdKqWbLr7w0EPtN8zNLZzSB7sHy7t36piJnn1MRxRUuEK
xc9/Mj1M83uHhUHmfjv3LOo9pvmhd+VeU1poq11zpmei970z1r8M0uij27f5
rSeq6JxdvXIvbqnhRtYzzbM175cZaSu+xKfSbnVB7Iqhudg+spvNhTWa3//b
udeZNpmoZ3B5m/Jt8mHT+pvu2qa5tDsjdGaowQP0P57lPvx8Bowvbfg5KyiL
RrQ+d7x+9yDqV21d6prcTNhtGfx1wPRH1Hjm+S4n98eRbdqU7UnTC2Gvmzlv
Zf4rEn++GOp62EnzPjbKclZJD5csqhZYoWRV+xgUtpxfrY/mPX/dcqugFzuj
6YTzw0vXI2PRd/n9Hbp38vH8Q9Ios/NPqNip/p3XY66j7Qt114MexUic9/1W
S837bmyjFXt+X4mGZ5jT7MSiTKja29oGOKWR22e/w60tnyC8zoft/evmo2TO
VufBgf9yjOtVni66Q3WGfD39QPNex7wOzOsg8Towr4PE64h5HSReB+Z1kHgd
mNdB4nXEvA4SrwPzOki8DszrIPE6Yl4HidcR8zpIvA7M6yDxOjCvg8TrwLwO
Eq8j5nWQeB0xr4PE68C8DhKvA/M6SLwOzOsg8TpiXgeJ14F5HSReR8zrIPE6
MK+DxOvAvA4SrwPzOki8DszrIPE6MK+DxOvAvA4SryPmdZB4HZjXQeJ1YF4H
ideBeR0kXgfmdZB4HZjXQeJ1YF4HidcR8zpIvI6Y10HidWBeB4nXgXkdJF4H
5nWQeB2Y10HidWBeB4nXgXkdJF5HzOsg8TpiXgeJ1xHzOki8DszrIPE6MK+D
xOvAvA4SrwPzOki8DszrIPE6MK+DxOuIeR0kXkfM6yDxOmJeB4nXgXkdJF4H
5nWQeB2Y10HidWBeB4nXgXkdSbwOzOtI4nVgXkcSryPmdZB4HTGvg8TriHkd
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
CBa7nre86hCNkiHHpzd9qKKCls1e3b2cjfvWV6/UGZuM4e4PJ7w7q6ZR7TZ+
q3AmAwXD3vU+tvc6LT9W443XmEwaaOfQ1fd1NuovXPa4m10SuUT1r1A4LoEc
dtoMdtqg+bn0xersl91L0c7Cr32GaxAV525cE3S8GEf2/tjhZavGP41dqltU
3o6vLV/Ym3vl4KiOVedRQ8PRc+TSIY8mRqC3R1FyYVEhKlT1r23XNoUu/j4x
87rm59z5TVQzKy4XZjdrJ3apHo3RPzbP2xxxm3Qf9Qk41aYIJw90uFYQl4TE
6rO/BcYkUcczHu8OaL7vdlnfePt97XNq4z+sVfHadGockl7TXfP3FjTuZPrj
84nke7rTqS5RfvQ6YTDVv1yAVxeKjBrt9ETn1i8XPKntQo1/xpX7nlmMGlPv
PupdJRE3xr/3t7aMIYqI8vPQ/DxpEx1wr9wbdzTynNSwc18VHe9kPqiVWR4u
Nh+XUSkjnta8PaRntTOCbNyzuqyvVwCzT21UI08E0bwN1/WHv9wDqyWNCoM1
fz9GJpVHHH8Wh6U7W9747hNGqRX1Qoo2FiDL7+jdFnejEOhY7/3ysioKHuBw
ZR7lYKm92bLex2Kpd8rYE1Omx9P6Q95bR+fkodjs7Jsm1eOowP7qBveetzB3
7mTrEWcKke00fsC1/Vfwd+Mj7Stvv0IR7XIXGb4rxhhrhzIvI2/jfPK+evbV
o6laDad9hzV/n2e6TO1T8dIBmndxlM5T7wzqa/p2+GnN1+HAoccPn/z1nIob
6If9ZRVHnXK+OD2vUggXtGgWUucmed2LdDul+T44E1ti2Ubz8yp6xu4J1hGu
OPX75+wC3TDStehVkzQ/nyfMsvWbfPI0Wn38dHLV7HRafmBcxC3N587vtp9W
7eoTSLEDctae6pBKdbZZGF08mo/vtUJttvzlS5taGW0Kiwym7Xun7rjevxhP
RpXkj6q1D0ef9jt30D2AKsUMvf5G875Rv86zrb6TPPA1bdHaxm+Tycpi8oQi
zXvOtK1mdr0cfGjmqs6NJ4SoKGDa+Hrn7ubi/sBjuk1GBVHPfetux5lGEPWr
9LO/5n3s+JHaOyu9diSHI3aujv9cpn+8ZtX/9/2tbP1HWbEn09DL5c2EaqtT
qJZ5Ye1k3yx4ZVUr29Y2A0e/2um8nhhP9do8+XHJIAuzzjpE7l6qRswI6+i5
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
3rP07clccg1oUv/d1HTUmlcyJH5iEHxqV7Wr4ZhLA25P8557XoUEB++5I0ZF
IW3n5N/Ferm0xbrOt0EX0mEy4uetV5ZB6HryvrFeyxxyqWhw+ud0NSb0a92h
ZvBbxN1y7j7UTfP+7+dv4qFWYZDhgloT7Z9hSqp5mtd1NfWpVavVy9hsrHaf
avzXsVT473R7vv2XmkJ1hg88bKHC42+LpzqPSMYc60qPOwZnUJkm/zhdXaEG
Yr74ndb8/oWufbcHfE2jGPWOZh3cMnD5cl7GC9tkdKpfePjRoCSydy6aNNc9
B5XMfo/+eCEVUXd73tiUm0a9isvvLdLNwsabKa+DLRLR9FS7zKQFKuoSNsrl
3Ngs7IvJ2IO36fgUmq7fwyyN4mLPeBRWzYSjbdfmm90zEe05ybzrrhgK7z0l
lm6q0cDCrdNIr3S0aubZsmTXKqT0H3Zv77U8mBlt6TFiQITm53OiY6VAXzp1
OnLgcM3n49fE6Sf0usdhR8ZRfx3PVNp+aN3DPM37RknJGD+fxlmwtY7s61U3
jWaMtvgeeEnzc21ZVFedFZmo86HWp8F7Y6jcp88TrLPVuHHw0lvzzacR8nf0
m9jU11Shylpd48bFmJzd5YeT5n3Mp9ty/0mURDudWvW01bznTPk6UP/y+3QM
P162W9oKNXUIO/ZRFZOG2k6vV3ZZEYYZ+Q6u5m+yyffop53hms/9z2s7tU/p
egOOYyZ37LlUTW49Pzdcovm6fVe9/4oTxmmoblV1s71NJg2ben3pWad0PO6b
aPFqUjy6e6zIamibQSdselR30LyP1duocypiZQq2zwy1GOWcRmcc1zZ+5/v/
DzcsfV76vPR56fPS56XPS5+XPi99Xvq89Hnp89Lnpc9Ln5c+L31e+rz0eRbq
KhyPtikcD4LjMfejbgr3w0nmfswJqYbCCSE44XuFKxJzRQiuWEfhkMQcEoJD
TlW4JTG3RHvmlhMVzknMOSE4522Fi1KowkUhuChzVKqtcFQIjsrclZi7QnBX
5rS0XeG0EJyWuS6lKlwXgusyBybmwCQ48C6FG1OMwo0Rwdx4r8KZ6aPCmRHP
nJm5NDVRuDS6MpeuqHBsYo4NwbGZe1NHhXtDcG/m5MScHLHMyf0Urk7M1SG4
+iqFwxNzeAgOP1jh9sTcHn2Z209UOD8x54fg/HwuQHwuAHEuwOcIxOcIEOcI
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
3D1Xc/f8HXfPRSc9ROqki656V6mrfpY77OukDvtyLd32X9x5H8OddwPuvE/l
LvwjqQuv4o58J6kjb8zd+W9Sd15bp1507cOlrv3DasPvla/4GuvK1vRvbZmF
cwuPLd73PBN+NexnUuB9rKg7cdydvBysMTwVOyItA30DuhqOWfoWPh+6tbFK
V2NoeuLzEz8zUW74ktYB4W7oG+E+o1OVTBQETCs/sV4O6g3zvGT0KoQMLM6X
jIhUIfjZVLus2rm4VL9z116D0unSmubHd9QNx8iN2x6YvcpF7i+7h+WCnlP/
wmpXj1YLQfrOhe0WJRWho0/2xc8/H+P+jFFZPVdFw6By5fD4zEKc2risyzTD
eLQ5FPdkpH0EXF+9/vlyUAGKR79u9k3zHtbHpMbl0F5XcO/SWcNJlhmIyTw8
76lxJtyuRBsfXvwS/n62lKKbjS5tzFesXv8MTZqlbty0Jw0pW8qWqJLzsGdH
/4s90gIQ1CogN0zz+fM+zdvoseZz5+bj39T9aRTZj4tNSo9Swzlzafm4eVno
aeDt6fMgnRbFOZZdXiUOW3Z3mLTlRTaa9TPxam93kZacLI/B511x2yAtaebn
YmydfzPmcPVkTG7Rx7hqtbfwHL00PuZuHlZfpS5tp8bge6PGZ2xOqGB2WW25
cbfmfWjQ937jymbCoMv69frmiVhyucV618IM6DpldqocngXb97WOub6/D7uT
43bfH5CFvN29eo/qm4rak9otf/L3S3SNX+H6tVk+JuhV6vDzyxsE3x/8Szc2
HUXDfQ6anM9Bpkltr1H70yiwwZZDLimZSIpf/NxwcxqyvC9b9+7/ik6NP7b3
fq9MuDbVqR6Srvm9ycZquE4nzed+lllL/2qpiCquaaIzOBP3WvUJXBSXhIND
s6/6xKvx+WWnM9scM9DhWd/utudS8COiTzsHzfvvk3f+wTcc02G11fZVi5h/
e5ojwz53SUPAZ5WdaXs1ik/vT6lkkY49p34Yue1Ngk306XI14rNwc+21Dv9+
rl+snkj/fs4/HOpUaaXm833BCLOysbMjqMWkGVetwvJw4PbIhotSUhBgpxt6
ZF0o9v0dt+e1bh5qj/U55dc9HeOTWhkPbhGF5XH3Rx+xywXVcqikGpAO98ix
7TZ0D8HOB9EtvgfnoqT1klGeaen4fSs9YtuEaAS/KN/+cEA2hr/of7ruKRW+
jEu98dEqBDn168c679J8v9xfMv/i4Qw0Ngms+vxOAsoatWk68X0Gjt+dtKCC
5r3484qHF842XE+HWq40K/HOxpoliG2wKRMXzlx1sGxxC2GZ20wKdbOgO6jP
9p8NsuHc0S/861hvOtXl9qEC7wzUT49JHFrn3/uslpfpkPkch8O7DguZl4Z5
B2YW/tR83bZO+1Ldpb8XCqzXTzx5XY1lwV+HZVtrfg/9FBJr/OE58m/Vfhiq
ed+Z973vor7vs/HhRZW0wX09yeb9dWfzEWr02GZZ9r1rDlZm2OZdWhRJnbzX
5xl1TUHhjCUX1kVr/vub1KhxYJsboqcd+NFnrQcaWTx6+ULzvr1v1AsvvcoJ
aL1/9YcI3UisPN4ouuBjPvZcP7Rg7KSXmPW+xzhjtQrt5vvVX/I1By0aRth+
6RNPvgsnvI7SvLfe2HIrash7Nerc+rvpimMR9PZb1OsyDZNwy65LtSTNe7vx
X3cPj/+q0nz/Znfu7heBK/rqR03scmBepWrtf9/D2vsuOvfve9nRTJ9n/76P
9Q8ccc1kZjhZ1Kps8kXzfXuiR88Zf2eroOsw9dHTRW9g7hLYPSE6G627l2Q7
lMvAhqXNzRKt0jB7WkVTdagK8+d0rrm8qRqnH79fsayvE129tSLEsloOCjt/
Nc5qnInNsbNGNvoSim6b++5ppXm/e1dmhdlZzXtd+eOPPfWsHuHj1LMmnTwz
0CTGJX+e5r2uzP/xP+9Kn5c+L31e+rz0eenz0uelz0uflz4vfV76vPR56fPS
56XPS5+XPi99/v/g+f8C9BAn+w==
         "]], {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRange -> {Full, Full, All}, 
       DisplayFunction -> Identity, Axes -> True, 
       AxesLabel -> {None, None, None}, BoxRatios -> {1, 1, 0.4}, 
       DisplayFunction :> Identity, FaceGridsStyle -> Automatic, 
       Method -> {"DefaultBoundaryStyle" -> Directive[
           GrayLevel[0.3]], 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "RotationControl" -> "Globe"}, 
       PlotRange -> {{1., 16.}, {1., 16.}, {0., 16.}}, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", 
         "14", "15", "16"}, "SwatchLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[0.30100577, 0.22414668499999998`, 
                    0.090484535]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 6], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Lighting -> {{"Ambient", 
                    RGBColor[0.30756835, 0.18676585, 0.147065275]}, {
                    "Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[0.30756835, 0.18676585, 0.147065275]}, {
                    "Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 6], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    Lighting -> {{"Ambient", 
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404]}, {
                    "Directional", 
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    Hue[0.7, 1, 1], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404]}, {
                    "Directional", 
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    Hue[0.7, 1, 1], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #5}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 6], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    Lighting -> {{"Ambient", 
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774]}, {
                    "Directional", 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774]}, {
                    "Directional", 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #6}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 6], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    Lighting -> {{"Ambient", 
                    RGBColor[0.28733552, 0.34844024, 0.38776376]}, {
                    "Directional", 
                    RGBColor[0.10916940000000003`, 0.1855503, 0.2347047], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[0.10916940000000003`, 0.1855503, 0.2347047], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.10916940000000003`, 0.1855503, 0.2347047], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[0.28733552, 0.34844024, 0.38776376]}, {
                    "Directional", 
                    RGBColor[0.10916940000000003`, 0.1855503, 0.2347047], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[0.10916940000000003`, 0.1855503, 0.2347047], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.10916940000000003`, 0.1855503, 0.2347047], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #7}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[1, 0.75, 0], Lighting -> {{"Ambient", 
                    RGBColor[0.334, 0.2755000000000001, 0.1]}, {"Directional", 
                    RGBColor[0.26, 0.19500000000000006`, 0.], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.1], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.26, 0.19500000000000006`, 0.], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[0.334, 0.2755000000000001, 0.1]}, {"Directional", 
                    RGBColor[0.26, 0.19500000000000006`, 0.], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.1], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.26, 0.19500000000000006`, 0.], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #8}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"], 
                 TagBox[
                  GridBox[{{
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 6], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    Lighting -> {{"Ambient", 
                    RGBColor[0.40723968, 0.3210112, 0.39649184000000004`]}, {
                    "Directional", 
                    RGBColor[0.2590496, 0.151264, 0.24561480000000002`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.2590496, 0.151264, 0.24561480000000002`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[0.40723968, 0.3210112, 0.39649184000000004`]}, {
                    "Directional", 
                    RGBColor[0.2590496, 0.151264, 0.24561480000000002`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.2590496, 0.151264, 0.24561480000000002`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #9}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 6], 
                    RGBColor[0.571589, 0.586483, 0.], Lighting -> {{"Ambient", 
                    RGBColor[0.36004492, 0.36421523999999994`, 0.2]}, {
                    "Directional", 
                    RGBColor[0.20005615, 0.20526904999999995`, 0.], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[0.20005615, 0.20526904999999995`, 0.], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.20005615, 0.20526904999999995`, 0.], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[0.36004492, 0.36421523999999994`, 0.2]}, {
                    "Directional", 
                    RGBColor[0.20005615, 0.20526904999999995`, 0.], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[0.20005615, 0.20526904999999995`, 0.], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.20005615, 0.20526904999999995`, 0.], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #10}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #11}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #12}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #13}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 6], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Lighting -> {{"Ambient", 
                    RGBColor[0.30756835, 0.18676585, 0.147065275]}, {
                    "Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[0.30756835, 0.18676585, 0.147065275]}, {
                    "Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #14}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 6], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    Lighting -> {{"Ambient", 
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404]}, {
                    "Directional", 
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    Hue[0.7, 1, 1], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404]}, {
                    "Directional", 
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    Hue[0.7, 1, 1], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #15}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 6], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    Lighting -> {{"Ambient", 
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774]}, {
                    "Directional", 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774]}, {
                    "Directional", 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #16}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30100577`", ",", "0.22414668499999998`", ",", 
                    "0.090484535`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19699838300000003`", ",", "0.252204821`", ",", 
                    "0.33320940200000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.12202865833333335`, 0.14283175833333334`, 0.064190125], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.1830429875`", ",", "0.21424763749999998`", ",",
                     "0.0962851875`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1830429875, 0.21424763749999998`, 
                    0.0962851875]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "6"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30756835, 0.18676585, 0.147065275], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20504556666666668`, 0.12451056666666668`, 
                    0.09804351666666666], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30756835`", ",", "0.18676585`", ",", 
                    "0.147065275`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30756835, 0.18676585, 0.147065275]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30756835, 0.18676585, 0.147065275], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.15375433333333333`, 0.06427100000000001, 
                    0.03486316666666667], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2306315`", ",", "0.0964065`", ",", 
                    "0.05229475`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2306315, 0.0964065, 0.05229475]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.3`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.15375433333333333`, 0.06427100000000001, 
                    0.03486316666666667], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2306315`", ",", "0.0964065`", ",", 
                    "0.05229475`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2306315, 0.0964065, 0.05229475]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "6"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.2742634666666667, 0.25883306666666667`, 
                    0.32036026666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.41139519999999996`", ",", "0.3882496`", ",", 
                    "0.4805404`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17616266666666666`, 0.15687466666666666`, 
                    0.23378366666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.264244`", ",", "0.235312`", ",", 
                    "0.3506755`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.264244, 0.235312, 0.3506755]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.264244, 0.235312, 0.3506755], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.7, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> Hue[
                    0.6999999999999998, 1., 0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.7`", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.7, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.7, 1, 1], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17616266666666666`, 0.15687466666666666`, 
                    0.23378366666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.264244`", ",", "0.235312`", ",", 
                    "0.3506755`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.264244, 0.235312, 0.3506755]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.264244, 0.235312, 0.3506755], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "6"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.23627719999999997`, 0.19087386666666667`, 
                    0.14698493333333335`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.35441579999999995`", ",", "0.2863108`", ",", 
                    "0.2204774`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.1286798333333333, 0.07192566666666667, 
                    0.017064500000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19301974999999993`", ",", "0.1078885`", ",", 
                    "0.02559675`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.3`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.1286798333333333, 0.07192566666666667, 
                    0.017064500000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19301974999999993`", ",", "0.1078885`", ",", 
                    "0.02559675`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "6"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28733552, 0.34844024, 0.38776376], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.19155701333333336`, 0.23229349333333335`, 
                    0.25850917333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.28733552`", ",", "0.34844024`", ",", 
                    "0.38776376`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28733552, 0.34844024, 0.38776376]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28733552, 0.34844024, 0.38776376], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.10916940000000003`, 0.1855503, 0.2347047], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.07277960000000003, 0.12370020000000001`, 0.1564698], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.10916940000000003`", ",", "0.1855503`", ",", 
                    "0.2347047`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.10916940000000003`, 0.1855503, 0.2347047]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.10916940000000003`, 0.1855503, 0.2347047], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.10916940000000003`, 0.1855503, 0.2347047], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.07277960000000003, 0.12370020000000001`, 0.1564698], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.10916940000000003`", ",", "0.1855503`", ",", 
                    "0.2347047`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.10916940000000003`, 0.1855503, 0.2347047]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.10916940000000003`, 0.1855503, 0.2347047], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.10916940000000003`, 0.1855503, 0.2347047], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.07277960000000003, 0.12370020000000001`, 0.1564698], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.10916940000000003`", ",", "0.1855503`", ",", 
                    "0.2347047`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.10916940000000003`, 0.1855503, 0.2347047]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.10916940000000003`, 0.1855503, 0.2347047], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.334, 0.2755000000000001, 0.1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.22266666666666668`, 0.18366666666666673`, 
                    0.06666666666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.334`", ",", "0.2755000000000001`", ",", 
                    "0.1`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.334, 0.2755000000000001, 0.1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.334, 0.2755000000000001, 0.1], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.26, 0.19500000000000006`, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17333333333333334`, 0.13000000000000006`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.26`", ",", "0.19500000000000006`", ",", 
                    "0.`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.26, 0.19500000000000006`, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.26, 0.19500000000000006`, 0.], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.06666666666666668], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.1`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.1], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.26, 0.19500000000000006`, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17333333333333334`, 0.13000000000000006`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.26`", ",", "0.19500000000000006`", ",", 
                    "0.`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.26, 0.19500000000000006`, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.26, 0.19500000000000006`, 0.], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "6"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40723968, 0.3210112, 0.39649184000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.27149312000000003`, 0.21400746666666667`, 
                    0.2643278933333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.40723968`", ",", "0.3210112`", ",", 
                    "0.39649184000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40723968, 0.3210112, 0.39649184000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40723968, 0.3210112, 0.39649184000000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2590496, 0.151264, 0.24561480000000002`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17269973333333333`, 0.10084266666666668`, 
                    0.16374320000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2590496`", ",", "0.151264`", ",", 
                    "0.24561480000000002`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2590496, 0.151264, 0.24561480000000002`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2590496, 0.151264, 0.24561480000000002`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.3`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2590496, 0.151264, 0.24561480000000002`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17269973333333333`, 0.10084266666666668`, 
                    0.16374320000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2590496`", ",", "0.151264`", ",", 
                    "0.24561480000000002`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2590496, 0.151264, 0.24561480000000002`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2590496, 0.151264, 0.24561480000000002`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "6"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.36004492, 0.36421523999999994`, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24002994666666666`, 0.24281015999999997`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.36004492`", ",", "0.36421523999999994`", ",", 
                    "0.2`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.36004492, 0.36421523999999994`, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.36004492, 0.36421523999999994`, 0.2], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.20005615, 0.20526904999999995`, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.13337076666666667`, 0.1368460333333333, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.20005615`", ",", "0.20526904999999995`", ",", 
                    "0.`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.20005615, 0.20526904999999995`, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.20005615, 0.20526904999999995`, 0.], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.20005615, 0.20526904999999995`, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.13337076666666667`, 0.1368460333333333, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.20005615`", ",", "0.20526904999999995`", ",", 
                    "0.`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.20005615, 0.20526904999999995`, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.20005615, 0.20526904999999995`, 0.], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.20005615, 0.20526904999999995`, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.13337076666666667`, 0.1368460333333333, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.20005615`", ",", "0.20526904999999995`", ",", 
                    "0.`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.20005615, 0.20526904999999995`, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.20005615, 0.20526904999999995`, 0.], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30100577`", ",", "0.22414668499999998`", ",", 
                    "0.090484535`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19699838300000003`", ",", "0.252204821`", ",", 
                    "0.33320940200000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.12202865833333335`, 0.14283175833333334`, 0.064190125], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.1830429875`", ",", "0.21424763749999998`", ",",
                     "0.0962851875`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1830429875, 0.21424763749999998`, 
                    0.0962851875]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "6"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30756835, 0.18676585, 0.147065275], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20504556666666668`, 0.12451056666666668`, 
                    0.09804351666666666], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30756835`", ",", "0.18676585`", ",", 
                    "0.147065275`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30756835, 0.18676585, 0.147065275]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30756835, 0.18676585, 0.147065275], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.15375433333333333`, 0.06427100000000001, 
                    0.03486316666666667], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2306315`", ",", "0.0964065`", ",", 
                    "0.05229475`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2306315, 0.0964065, 0.05229475]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.3`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.15375433333333333`, 0.06427100000000001, 
                    0.03486316666666667], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2306315`", ",", "0.0964065`", ",", 
                    "0.05229475`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2306315, 0.0964065, 0.05229475]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "6"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.2742634666666667, 0.25883306666666667`, 
                    0.32036026666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.41139519999999996`", ",", "0.3882496`", ",", 
                    "0.4805404`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17616266666666666`, 0.15687466666666666`, 
                    0.23378366666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.264244`", ",", "0.235312`", ",", 
                    "0.3506755`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.264244, 0.235312, 0.3506755]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.264244, 0.235312, 0.3506755], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.7, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> Hue[
                    0.6999999999999998, 1., 0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.7`", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.7, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.7, 1, 1], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17616266666666666`, 0.15687466666666666`, 
                    0.23378366666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.264244`", ",", "0.235312`", ",", 
                    "0.3506755`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.264244, 0.235312, 0.3506755]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.264244, 0.235312, 0.3506755], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "6"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.23627719999999997`, 0.19087386666666667`, 
                    0.14698493333333335`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.35441579999999995`", ",", "0.2863108`", ",", 
                    "0.2204774`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.1286798333333333, 0.07192566666666667, 
                    0.017064500000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19301974999999993`", ",", "0.1078885`", ",", 
                    "0.02559675`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.3`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.1286798333333333, 0.07192566666666667, 
                    0.017064500000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19301974999999993`", ",", "0.1078885`", ",", 
                    "0.02559675`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                 ",", #7, ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, 
                 ",", #13, ",", #14, ",", #15, ",", #16}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               Graphics3DBox[
                SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                  DirectedInfinity[1]}, 
                PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
                0]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     Graphics3DBox[{
       GraphicsComplex3DBox[CompressedData["
1:eJzs3VuyJddx5nlUqqoE1YWVJEAKpEDpIASBSRAEcwa9x9AjSGuzfu4pnKHk
UM5QMATeJV7VDxmfm+3fl25xrFXVpQfiJSw8HevE9r22h69v/cPjs//r//k/
/+8XH3zwwauffPDBX32Q/37+f7z/+MHt/fYPF/vLxf7xYv9ksX+62B8W+7HY
P1/sXyz2V4v9y8X+1WL/erG/XuxbvHPu8UPOjb/+Hy/+nyz+ny7+D4v/sfh/
jj3HLxb/V4v/l4v/V4v/14v/68V/m9fGWz+PLxf7x5wbf+2fYs/xYbEfyzif
L/YvsOf4arF/ybnx1/419hxfL/YtfyT+zust3i+X48ecG3/H/xS78Xf8Yxn/
c+zOf8d/hT3HLzk3/o7/NXbj7/hbnjZ/OP+1G2/H9fjJYv90sT8s9mP5u58v
9i8W+6vF/iX2HL9a7F8v9teLfbsfJv7m6Q9v7/d/ufhv8f5kOX66+D8s/sdy
PZ9jd/7r/2rx/xK78fd6vl78Xy/+W91hPnD+m6dfLvZtXhtv/Tw+LPZjuc7P
F/sX2M0/2r/Ebvy1f409x9eLfavvEn/rju1++BK7+cj88Ql2vw/j/bAcD86N
v9f/BXbj7/V/id34e/1fYzf+Xv9WR1vfOf+1ez80/2s3f/g71G68vW6Pny/2
Lxb7q8X+5WL/arF/vdhfL/ZtvZL4W0d/eHu//8vF/+PF/5PF/9PF/2HxP7B7
7vGLxf/V4v/l4v/V4v/14v968d/Whf5enf/W0S8X+8fYjb/2T7Gb77Qf2HNu
vPXz+Gqxf8l5xvlqsX+NPcfXi31bfyf+rgu39cpL7OZ/x/8Eu/Pf8R+wm+/M
H59j9/sw3q+W45ecZ/yvsDv/Hf81duOhzmH95fzX7v3K/G8d/cli/3SxPyz2
A3vOzR+xO69jN96O6/Grxf71Yn+92Dc9KfFX5/jw9n7/l4v/tl75BLv1j/4P
i/+BPeefY3f+6/9q8d/i/dVy/Hrxf734b7qd62nnvzrHy8W+rQut15z/1tEP
i/3AnnPzQexfYDf/aN/mtfHWz+Prxb7po4m/ut2mJ73Ebv53/f0Jdue/65UH
7Naj1nefY3f+ez98hd18ZP74Crvfh/F+vRz/ov+/O/570f+3o/H339UBjb/+
6izGX3/XscZff9cJxl9/6zDjr7/3OeOvv3lkm9fGd9P7N/1au/q/+p129Rfn
v/ZjGUf9f1u3OP+1q/9bf2j3/uf8v8ofzuNtX2Xz23Rt/1393/g7vrqM8Xd8
9X/j7/iuK4y/46v/G3/H97645WnzhXbrGuO76f2b3q1dPdH5r/1Y/o76v+tw
7er/27rF/K/des75f3U/NC8bJ/OH83jbV9nG3XRw/dUZjb/jqf8bf/3V/42/
1+M6xPjrb5231R3e/7SbJ5z/2/6V/7/1puNu+rj2Y/n/1P/VlbxO9X/j73Wq
/5t/vE7r6a2+s87wc6vHOP+3fULzt/q/8d+uY9PN/Xf1f+Pv9av/G3+vX/3f
+Hv9rlu2OjpH9d0c1R1zVA/LUZ0mR/WDHF3X5uh6azta/2tXr7T+0a4eZP7X
7nrb+a/d67Vu9nNY31ln6O/90Lysv/nDebztq2zXvens+qtjGn/91YmMv/6u
w7d1oesT7dZxx3lU/4/d+573P+3miYyj/n9w9PrUG7zuTX/Xrv5v/teufuT8
v1p/uw70utT/nf/+jr2/WWc4vvq/83/bJ7R+V/83/tvn3HR5x1f/N/6Or660
6Ryut7Wr/7s+0e597DiP6v+xq//Hrv5/cPTvqR/7O9Su3uZ1b3q9dvVQ5/+V
nqSu4d/x9+c6UH/1f/O/9zH1f+f/tu9tPa7+b/z1V/83/ltcNh1ff3XSTbdT
P9Lu78z5r1393/yvXf3/OI/q/wdH6271f+8rrlPV/42/n1+92bhs+v6VPqpO
5/+n/u/893em/m/+976k/u/83zgO62v1f+PvelT93/ir36j/G/8tjlc69Kb/
q4eqm6orXfGgrsNdD7sud91yxQNZ51kPWfd5X/R+4H3SPOLvwbxi3Lf9rm0/
YNP/Nz1UnU49b+NEN/3D9aTrtI0H0r7V19Yr3qetR8zv5inzt7+HbV93m+/b
fsCm/xtXvw/1/00PUr/Q/8Cec/X/bT0Qf+tI6yfrPvX/7X5g/tLf+Bl/7Vf5
5kr/N/7a1f83/UhdQ/3DdUns6v+xW9/HvtXX3vec/9q9f2ycjvE3fzgv/T6u
9gM2/d+84vjqYsbJ70P93/lvPar+v60HMr51qvWW43tf935zxf87/80f6ppb
vtn2Gzb9f9NbzR/mI9cZsW/6h3WZ+X/jjbSr/2/11sZdGn/vh+rE5h/9zStb
vbPtN2z6v/dV78fq/85//dX/zf/6q/9v6434WwdvfLHx1+58NP7azd/GX/tV
vXml/+fcdUPs6v+xq//Hrv4fu/p/7Or/sW/ckp/D+Mfu/D84Nx9v90nz0cH5
9lyL173tB2z6v3Vl7OqJsXufjF09JXbX87G7nozdeXTF/zv/re/UHc3/3g/V
acxT5g/XtVu+2fYzNv1/03OtH71O9Sl1Fq/T9fz2XJTxd72ijmv+0X/jDrwP
Of/1V//f7qvbenfbz9j0f9dVXo/6/6Znqb9cPf9n/LU7X4y/9o3vUHdx/mtX
/zev+XfV/5+rN1zp/8Zfu/r/pn9Zj1/x/85/14XmS/O/46v/W/84vvr/tk4y
/o5vXel8utrP2PR/dQXHV5d0nXrF/zv/XX+rC5r/HUf93/rHcdT/rQMcR/3f
+e846v+b3rDtl2z6/6YXq99c8f/Of/3V/83/+psvnf/6q/9bn+lvPe7811/9
f9PVNr1z2y/Z9H91zU0P1e73afy1m/+Mv3brBeOv/Vjs6v/Of+3q/+Zl7er/
z9Wb/6L/39v/ven/V0f1ZXVP7eprV5yp+oLrXu0H9iuOyfrSuke799erfXLz
y9W+ovP4an9Fv+3fjb+60aavbTyo+r/xd12yra82Hkj93/h739vur9t+sPr/
lr+3ebzF9+qoXqyOqV393/mv/cDuOla7+r/zX7v14tW+t/q/8//qPnm1X2hd
ebVfsj0HsPWj2fqhOJ7xd52x6QWuS6/WSxsPpP5v/nF89f+tHrni9NX/nZfa
je/V0fzk/Nd+YL/ijFz/uy7Vrv5v/teu/u/8v6r7rva/zcvO/22+6n/Vb8aj
/278XTds+tfGGan/G3/91f/NP/qr/2/19VZnbPe/LS9v+WKbx1t8r44H5+qM
2tX/nf/a1f/N/9rV/53/V+uYHF1fWk/EfrWfrU52tZ+3Pde+7Wd43V6v51s/
FPV/778H5+r/5p+Dc693Wy9ecfTq/9YN2tX/rzhN9X/njfZjuc7taH1q/aPd
+7n5X7v5z/l/tS6/4pOsm53/G0+g7rLtT2+cpvq/8fd6rvrNePTfjb/X4/3c
/KO/+W/TP7Z14LY+2epm46++snGX6v/Of+3H8ne3+X3V78ej+r/5X7v3c+f/
lc50xdupy17xRhtHr/5v/nF89X/j7/hb/5itr4nx9v7rcetHs/VDcbxNz7vi
3NX/Xddpd32y1c3G33HU/43/VV42/o6j/m+8HGc7mp+c/1e66RU/qq7h/N/W
e/qr/5t/9Ff/N/76q/+bf/VX/zf++l/1m/Hov1/p05t+p3606RrbentbB27r
k61u3uq5rc7Y7n9bXt7yxTaPt/heHdX9jb+/D/V/dSjvJ+r/rvOtv9T/XUdt
6xXXker/1lXqLur/2761eVb9eNtH3OJ9td+oXX1afVC7ep76i/aNL3RdfnBU
L3EdY/zVF637jL96vPdJ47/tL2rf9tUd96oPzsvFX/1fXcz1tPq/81//A7vr
OvVa9X/nv/5+buuSbR9df/O38bd+VP9/Lm+ifePF1f9jV8+LXZ3p4Bi7623t
rhed/9qveBHt1iPOf+0bJ+Xv0Hlz9TkPzh1/6wuj/u/8d3z/jjqIvz/1f9eZ
Gxfl+Or/5h/Htx4x/uoB6v/b7/bgurRf8Yba1aczjrrpwdF8tuW5K/5Pu+tF
865262vn/1X/n+2+dfB39H+5+G9c7RXvrL/69MHR+/YV56q/+r/x19/1ovlH
f+tr47/xBNs+97b/uu0LbvtV2z7Kpu9r99+v6lb1f+e/dvV/879214vOf+3W
01udZ10S+3YfNe8f+G3PL27PlRr3bR1g/R/71lfF+id277+xm/9jN//E7vyP
3fj7e91+x+bXq/ue99GrOvHq+RztB/atf5Dx9zrVTbf9fPO/dvUP5/9V/59t
XbTVEc5//a1vtvv6tk51/ut/LNdz9byj/urTxt/rUc8z/+iv/mH8rb+2ukz9
3/mv/ep5S+3q/85/7cfyd7d9uKvnTbWr/5v/tavnOf+1e5/ZdATXvVfrtE1H
Mf87vvq/89/xj2X87fn1ra+A+v+2L2L+3/g4x1fPM/6up7d1tvnvSpdS/zf/
a1f/d/5rP5Zx1P+Nv+Oo/2+8rZ9fu/q081+7v5tNd9t0Pue//ur/5n/91f+d
//ofi7/6v/c5/dX/jb/+V7zzxuHqf8VDa1f/d/5r/wv/f39+pUP/Rf+/v+7/
v/V/47/pp/4OvW+rT/k7t851/W8ecV24PV9t/Lf61Tyo7rg9H2j8t/y7xU/7
lle2fQXvw+qqmw5o3brpYq7z1AX0P7Abf+/r6ojWtVsdpu6+1SXGybys/5a/
/V79/7Wr/6u3uj5w3eb8167+r16g/qQu6PzXrv5vvevn83fv/N/ioX27T6r/
+71aV277Fq7D1GEdX/1fnWvTZdT5tr4G23P427rRz2Ed7Pj+7q0zHH+rR8yD
zn/rd9dVXp/jqP+rzzqO+r/6l3qqOrfz37/v79L87zjq/9bH2+fTvtV96v/O
f/3V/50H+qv/O//1V/9XZ7zq0+H819/8Z/7XX/1/+xzWzfpv9bV1g/Nfu3nT
35t2543Xp139Xz3Xf7ducv5r9z5j/tfu79L5v12v9m0do/7v/I/d/BP71jfN
33nsW1+qrY/SdlTnjV1dMnZ1tNjVfQ78zH+uq2PfePkct/WidbbzX31F3cv8
rx6pTuzvX/3eeb09X2H8tav/G3/t6v/GX7v6/9V1bety9X/nv/7q/+Z/dV/1
f+e//uaP7TkWP6fX4/+vLqy/+r/xdzz/jrrGVf8h46/ddZHx177p69Ydzn/t
5mnzhX/Xeenn1+646sX+u78b5/82nvZNZ1L/d/6ry6r/b8/Nev91fOsO73Nb
XnZ89X/npeOr/29HdeSNj3Z8v8+tn5Dx177p364Lt+eTjb929X/jr/1YxjGP
O/8dx3m9PV9h/LWr/1/9f5tuqv5/1dfA9ffVc+Dq/1fPzVrfXT1nqP5/9VyW
+ePqORb1/yvu3+9HnVQ/dTvnv3Z1DvO/9r/w/++Oz9X/jf8VV2r8rzg843/F
LRn/K87D+F/tixv/q31E43+17+K5+ea5+r96n/7q/+oj+qv/u57U/1j81f+N
v/7q/8Zff/V/46//llfU/zf+f9O7nf/a1f83blU9xXHU/42/42y8lPq/81+7
+v/V84jeJ6/yt/r/1X6P+v+V3q3+r57o+Or/zn/HP5bx1f+Nv+Or/xt/x9/q
PuOx1SnG/4r/d35cPbew6enmf+3q/85/7cfydze+UP3f9ZB21zHmf+3WfVf1
iPr/1f6o+r/zadvPsN58rv7v/Nf/WK5H/d/467+ty/29mv+9Hj/fVncb/yv+
f9tPdf5rV//3urU/V/83/lfcrXrQpnNoV/83/2t3HXNVXz+X/zf+z91PVf+/
2k9S/7/S0w/sOd90U/X/Tecz/l7/ti73erd1pPH3c6j/W39of7nY1f/NI9rV
/4279oOj9b92dVPrH+3qTOZ/7a7Lr9aLz+X/jb/+Lxd/9X/z+/Z8kf7bvtaB
/Up/9/5g/aO/9ZT5X3///qaLGP8r/n/jdZz/2tX/t+fuvB9s+4TaD+zGRftz
9X/jv+l22tWZrvSP5/L/xv+5vM5Wj27cgfe/bZ/c+Juvt/0q8/2VXq/+v+nW
xt/xN53pufy/69ur565dD3gfU/83/2z73toP7OYR7er/xn2L95X+b/7ZdLsr
nld9Z+svsK2HNx7L+mbje7Z6dOMODuxX+7tbPtr2tbb+Ss/V/zfd2vhf8f/q
QZvuoF393/yvXf3/iu84sHvf1a7+f7V/qP5v3Ld4X+n/z9VD1e3Uj5z/6hyu
t694ONcnVzzQgT3nG3fg/e9qP9h8cbUfZnyv9gP+ov+/O/570f+Nv3nI+4Px
13/rQ2Gd67pdf9eFrnP0V0exLtRf3dH7qP7q9Oadbf9Q/+fy/85/78Pb/Vn9
3/hrV//3fqv9WMZRL3H+O476ovWN41h/OP8dx/j5+zF/q/9vzxVsHPzWt8X4
O77rCePv+Mcyvvq/89/x1RG3506Nv+Nbfxh/x38u/+/3p/3qfnvV/8f1lvZt
PXcsf1f93/mv3fWh+d+/6+/b+km78fB+c8X/O//1f7n4X613r/r/GH/9j+V6
1P+d//p7XeZ/r0cd3bpWf3/3W98F469d/d/foXb1/+fqDVf9f7b+JsZfu9+z
+Ue7+r/x124etQ6+6i9i/F33qP8bf3UC9X/jr652pXduurPX7//n/Pf6/Z2Z
/71+70vOf69/W7c8l/93/mt/udjV//0dalf/f+5668DP34dx0u79xO9Bu/WX
37N2r9f1zBX/7/zX/+Xir/5v/PXffrfG1c959ZzA1v/H+Ouvnmr89Vfv2H6X
rjOv+H/nvzrWy8Wu/r/dh5z/juP8df6ZV672G6/6/6jPbnlL+9V9Xvtz+X/n
v3nwJfatbjP+231ry7OOf2A3/t5Xr3gH61D16O2+4fx3/K3OfS7/7/zX7rrC
/O/ncH75ObbPrf3Abvy1q/9v3+t2H3Zdpd261XWb9ufy/1fraq/L/O98Uf+/
qgu33/2B3fhbJ255basrr3g3dQj16G3drI55xf87/7e/o139f1vnbL/jrY7c
nm/c7tNbnbjlwe35nG2ebTqEOpz25/L/G1e6fc8bt7flRef/VsdvdedWJ233
9e0+tOXN7Xe+zcstjjkm7v+69KP5V3TpnP/17f3+scf/l+/sj996v//Y4/+n
898/Wsb/CP9fv7M/fe/9/mOP/x/Ov/uD5Xp+gP9v39lvf/9+/7HH/3fnv3+2
XP9n+P/LO/s3x/v9xx7/fz4/l+vmn2OP/+/f2d+qc/wce/x/c8ZBXern2OP/
x3f2N0s/u7HH/1dn3NR9f449/n9+Z39Qp/859vj/gnlrfs/8jP0/vzvOPFTX
/4jzf2FeMf7Mn9hfvDvOPHH8zzg/P8d874w/32/sf+R7ZPz5vmL/j++O870w
/s374q+Js9efOL/kPHGO/TyfOL/k/CP8/0icY/f3G/t/enecOGf8/3aef4b/
GYeJc+z+vmL/q3fHiXPG/y/nUd3+tL+xznP+x/4f3h0fuI8+Gmfr9cQZ+8RV
/4+wn39n4oxOP3HGPnFW1/+M8/P6J85cz8QZ+8TZz+W65fy9vPE+n+u0/jqP
D9bFOSbOn3CeOMfufS1271+xf/vdceL8yf35xPm0P373vP6/v7ff8v9/dm//
4JznE+fYnc+xe1+I3fwf+5knJ865fuOc6//bd8cH6sibcVZ/SZxjNz+7L/oR
9u+c1/U97M7n2L9/XtffY8/xM87P38vEmet/UlcyP3P9E+fYz+9x4sz131wX
nfNk4uz1J84PnCfOsZufHzj/CP/zfOL8cH8+cX64P584P3D+2b093+PEOXbn
c+zm5/xd83P8z9/jG9b5NZ8zzjl/H1hH3Yxzrtf5jH3iqv9H77dPnB3nB++3
T1wd/zPs5+edOHN8cn15Ht+67j+PE2fsE2fsE2fsE2evK3H+nPPEOXbzc+zm
59hdR8RuvRG764LYrf9jP8edOH9+fz5xPo+3f3x3nDif9ren/8T5tD+e/hPn
0/7m9J84n/an03/ifNofcn2Jq+uGxDl287N16EfYrZ8Zf+Ic+4vz+v8eu/Uz
97GJM/N04nzaH40zx4lz7P/07jhxZvwbutjjaZ84+3cS51ecJ86xm59fcf4R
/tbPsTufY7d+zvjWz/E///+J86v784nzq/vzifOr+/OJc/7uaX+Dzlvz+bTf
Mn/R0R6Ms+vUxBn7xFX/j7BbP1OHTpyxT5ytWz/Dft5fJs7k0Ykz9okz9omz
eWLpczNxxj5x9v9LnL/iPHGO3fwcu/k5duvnr+7PJ86nvern0171c8Y//SbO
X92fT5wzjnnjtFd+zvWYN766P58453P95N1x4nzaH4yzukjiHLv52XX8R9it
n1knTZxjt362Dv0M+1k3TZy5z0+cT3vlZ/LoxDn2H707TpyZpxPnjO989pg4
v+Y8cY7d/Pya84/wt35+fX8+cX59fz5xfs35Z/f2nE+cX9+fT5xf359PnF/f
n0+cX9+fT5xf359PnF/fn0+cX3OeuHpMnP+86MbJF+aNPy468Hn/q/vg7xdd
N/Wcdd2/LDrtuT6pdcpvF931XG/XuvvXi4566kelI/1y0UWjh6KLPqrf55xj
4vx45pHUCRPn2KmfH+NnXfef7o+J8+Opx0UHmzjHjk7++Ff340+c/+r+OPP3
xWn/PXGOHR37MdehLvof7o+J8yP7HRPn/3G7O5/4xk5+9jhxzjn18+N/P+3O
59jPzzdx/m/3x4lzztGfH//raXc+x46+Mett193nufrz49+cdudz7OjP0UPV
RZ/cL8r8jZ164xZ7fpc555g4P533xXwPifNj7Of3mTjfTvtj9N3EOf7oz0/f
vr/+xPkxdvS6W+znPJ84f/v+mDg/oasnzo/o24nzLfZ8D4nz396fT5xjJz/f
Yjc/x0797HHijD49cf7e/XHizP7MxPmsC53PqRfNz7fYzc+xoz9HP1JHelz0
5+ih6qJPf3d/PRPn2MnPt9jNz7FTPz+h60+cOU6cY48enDhnHPTnp+/fX//E
OXby8y1283Ps6M9PPDcwcf7k/jhxjt04/8P9+cQ1dvLz7R/uzyfO8ad+fvr7
+/OJb+oL6mePE2f2tSbOPzztzufYyc+30175Of7oz09nHV/zedGfo4eqi37j
fvgZ56fYyc9vYyc/P8aOvvEm9henX+Zv7OffS1wfYs998rP3HxPnb9ClE+en
6MOnPXF+G3uuO7pGxjnjlji/if3Mi4nzLeOc8yRxfojdOP/j/fnEOXby89vY
yc+P+E+cY6feuOE/cY7d+jl29GePE+fzXH0j623X3Y/4T5yP++PEGf+J83F/
nDif6/maz7GTn9/GTn6OLmD9/IbxJ86MM3GO3fo5dvTnb9D1J84cJ87o0hPn
RX9+w/gT58/vjxPn2E//ifOP7s8nzrGTn9/+6P584hx/6uc3sTufY39xnifO
Gd/6Of7oz998cX8+8V30Z4+P6KHqz2+ik57jT5wX/Tl6qLroNz8+z53PsZuf
Yzc/x079/CZ26udb7NTPD6e96uf4oz9/w77TxDn6sHFGl544c5w4x36OM3Fm
nIlz/q5x/sn9+cQ5dvNz7Obn2Kmf3/zk/nziHH/q54fTXvVz/NGfv/ny/nzi
vOjPb0975edFf/Y4cV705+ih6qLf/PQ8dz7Hbn6O3fwcO/Xzm9ipn28/5Txx
jt36OeOgP3/DvujE+av784kzuvTEedGf36DrT5w5Tpz9HhLnn92fT5xjNz//
7P584hx/6uc3P7s/n7jGn/r54Wf35xPn+KM/f/P1/fnEedGf3359fz5xXvTn
N1/fn098F/3Z47O53F/cx/+Sy/0zOuoVl/ur+/xzyeW6/3jF5f7m/v57yeX+
Hp32isuNLvu/isv9HfrYFZf7W3TgKy439clzudxfoxtfcbl/Qn+74nJ/ic58
xeWq68uRyuX+mnkoxyuXe+ppxeVGL5TL/SPzxPGfy+Wex+JyX7w7Fpfr9wVX
XFzueSwu98yrxeWaH+RI5XLP9YJcbv3e4VrlckdPkMs9dR653Po9XnC5qbeL
yz3v13K59XtB/5TLHX1HLveMl1xuzWc5Urnc1AlyuTnK5Z7zrbhc8yH24nKd
z1dcbvRLudzzWFxuPpdc7hmn4nLNJ9iLy3U+y5HC5UaHlst9Ms5wrXK5dT+C
m5XLrfl8weWm3pbLjQ4tlzv1j1yuHCMcslxu5W05Z7ncHOVyz+ssLtc4w7UW
l2t+hpstLtf5fMXlRr+Uyz3rxuJync9wxcXlmp/hlovLdT7LkcLljp4Nl1vz
Ga5VLrfyM9ysXG7N5wsuN/+/XG7+nlxuzWe4Yrncys9wy3K5NZ9zvTnK5R73
f6f85XKP+89R48jlnsficnN8LpdrPYm9uFzrDezF5ZqfsReX63yWI4XLjQ4t
lxv9Si436y+53NET4HKz/pXLnTg+k8uteh6OQy636g24Yrncys9wy3K5NZ/l
SOFyo/sVl3vai8s99YHicjMeXO6jcXb853K51s9wv8XlOp/hiovLNT/DLReX
63yWI4XLjY4tl1vzGR1XLvetcUZXlMut+XzB5Vb9DPcrl1vzGa5YLrfyM9yy
XG7NZzlSudzwInK5OcrlJt/I5R7nOHK5p7243NP+bC7X+hl7cbnWG6xLiss1
P2MvLtf5LEcKlxsdWi73jXFGV5TLrfyMPimXW/P5gsut+hnuVy636g24Yrnc
ys9wdnK5NZ/lSOFyH53Pfm9yuT+6/xzFwcLlVn72vv1cLtf6Ge63uFznM1xx
cbnmZ7jl4nKdz3KkcLnDK8Dl1nyGa5XLrfwMNyuXW/P5gsut+hnuVy635jNc
sVxu5We4ZbnclcdVTw6Xq578J/zlctWH/3DvX1yu6+7fMb5crvrtP9/7F5dr
Xfcbrkcu17ruV/f+xeWaN37B9cPlDp/rEX3+Mfytel3s6KLhcucol4uONFyu
68HY5UX/6v5YXC7rlMcXp916I3bqunC5ORaXy33wcdGfh8tVF40dXbT2SeRy
0UWHy1XfiJ119/AEzufY0UWHy7V+jp26Luv/ms+xyz+H+zQ/x07eGH2Z+Rwu
d/hcudzs/8HlDg8rl8v+0XC5+V7lctGRwuXWfI5dXvTbHOVys68Jlzu/Y7lc
1t3hcvN9FpfLffC26M/D5aKLjh6KLnrTXy4XXdR9vOJyyc839/3kcuVFw9NS
P6ees6674V9crvzzoj8PD0p+vi36c7jcJzncnKPzh8stvS7+6KLhcs3P7ovK
5dZ8Zh9GLneOcrmsU8LlVr0Rf+q6cLnm5+EeyM+3RX8eLhddNFyuumi43JrP
scs/s+9XXC75ufaZ5XLRRYfLpX4Ol2tdFy635nPs1HVPi/78SLzkcp3P4XKH
z4XLDW8rl/sNeu0jOrFc7hOfe7jc83cglzv5TC6X/fdcx9xn4HJzfXK5yefF
5bLuDpdrfg6Xa35+WPTn4XLP65bLVRd9qz9crrroG/zlcl13Pzi+XK68aPyo
n59ip35+i39xudTPb/AvLpf8/IC/XO43cLjD5Z7/n1yuet1wuegb4XJzLC73
HEcut9aD8ZcXTZ6gfpYrkcu1fg6Xa/0cLtf8fGN8udyaz+Fd0UXD5aqLhsut
+RyeFl30DePL5brufnB8uVx50UV/Dpdr/SynU1wu9fMbxpfLNT8/ML5c7vC5
cLnhbeVyh4eVyz3O/x8uN/lJLlcdKVxuzeeMLy8aPYX6OVyu9XO4XOtnuafi
cs3P8Tc/L/rzcLnootFD1UXf6g+Xqy4aLrfyc/hb44x/cbnyoov+HC7X+vkt
/sXlUj/LkRWXa35e9Odwud/A4Q6Xiy4aLle9brhcdNFwuZWf43+c53C5NZ/j
Ly8aPZn6OVyu9fPbRX8Ol2v9HC638jNcnlxuzefwruii4XLVRcPl1nwOr4su
Gi638nN4XfNz/I/zKJfr81aL/jxcLvVzuNyaz7FTP4fLrfxMvIrHVX/2XC5X
vXR73j7+9utQ75PLtY+H+pRcrv091FPkcu374fpfLtd+IK5X5XLtE+L6Si7X
fQrXAwf+57n1U9VVp3/1G7Heksu1P4b1gVyu/Um8n8nl2k/D/AuXW/1MzBdy
uXLmPFdfXK59e2L3+e7Y5ZE+vD+Xy62+Pfl9+nxKxnd/UP0OLrf69pz22a+E
y62+PR/en8vlVt+e0159e+z7L5crh6+/XK59qGL394u9uFz7UMXufnfs53lx
uae9uNzTXlyufahiN87Yi8s1zvYblcu1b4+crlyu+1ax238jdvuqZXyfH4y/
/AYcmFxu9e2h/pDLrb5qpz3rX7nc6quW/gX2VfM9LvbL9b7mey/lcu0TyPjF
5b44r1cuN+PL5coj8R6q4nLNG7y3p7hc8wbjV7/c015crnG236hcrvk5dvNz
7Pa9jN35HLt9L2P3+e7Y5evII3K5lZ9Pe+Xn0159L097zefUkae/XO7oSfbL
dT5jl8ut/IxdLrfmM/bicq2PYpcXjf08r365p10ut/Izdrncms/Yi8vN9cnl
Op9jNz8fnMvl2lftuD+Xy62+agfncrnyzznaHyn2U8eTy63+G/GXR8r125c4
49iXONdvnvC5NPvlmp99nsl+ua4juC9Vv1zXBfL4crny/Ev9Pnb7bHP9xeXS
58TrLy7XPttev1yu8zl283Ps5ufYrZ/RSYvLtX7O/pL1c8b3+ZTYnc+x2zce
Xqa43HNeyeXWfM712zc+128d53OQ9ss1P+tvv1zrZ+sm++VaP/v8k1yuz1tx
PcXlyvMv68ux+x4Er1Mu1/cgeP1yuc5ndFK53MrP8bd+jt16I3br54xv/Rx/
nx+M3fkcu/k545uf43/ai8u1f13svtcj47vO9rlb++Wan30e1H651s+ML5f7
wYt3R7ncqp/RG+Ryaz7Hbn5m/OJy6RPo+MXl+p4ar18u1/kcu/k5dvNz7NbP
sTufY7d+jt36OXY5xtidz7Gbn2M3P8cuzx+78zl238ckz2i/XOczdrncys/Y
5XJrPmOXy636Gbtcbs1n7HK5lZ+xy+XWfMZeXO6mN29crvk589i88cf7uBeX
633w9/dxLy7Xuu5f7uNeXO55Lpdb+ka4XNfdv76Pe3G56ki/vI97cbnkieFx
zRsXXO70kZXLpX4O71V1Xbhc6o3HcL3hsORy0cnDE9S6O1zuaZfLnX00uVx0
7HzO0kXz+dHrwuXOPqBcrvM5dvLzJZdL/TxcrvP5tFs/T51hXRc7+vNwuee5
XK76xnC5+f/hctWfh8s1zqdd/XnqDOq44XHte8k8lcudz/dMLnf28eVyMy5c
7nC/crnqRt/mHC5XvS5c7nAOcrnnOHK54RfkcsNTyOUOpyGXy3yefrn2cY3d
/Bw79fMll0v9fGMfprhc9OfhcnMOl2t+Hi7X/ByOF/15uNhzfLlc9edZB7LO
Hh7X+UwfXbncys/xp36efrnUdVdcbvJucbnoz8njNZ+T30+7XG7l5/iTN8Ll
qos+okvL5Q5HJ5frfI7dPtv6y+VSPz+xb1xcLvXzJZeL/jxcbs7hcs3PN/zl
ctWfh8s9/eVy1Z9v+Fe/XPuqxU5+Dpdrfn5kH6+43ORLudzz/y8uN9/fc7nc
M28Vl3v+zorLTVzlcs+jXG7+TvXLPa9LLte4DpfLfJ5+ufYJjJ38PP1y7XsZ
u30C5e3kcq2fY0d/loMoLhd9I/sorruz/1TcV+zoSLfTrv48+yj2JSaPFJdL
fg6Xa34eLtc+gfB2xeXa9zL+1s/xR3+efrmsu6+43HmOQy4X/TlcrrroDV1a
Ltf73nC5zufY7eOqv/1y7XsZu/M5HC/18wP+xeWiPw+X63xe9OdLLhf9ebhc
47zozw/4V79c53Ps5ufwtOZn+u7K5Vo/3+ijK5db9XP80Z+HD3Y+0+dBLnfW
ac/kcnM9xeWen18u13XJN/TFlcut/By7+Tl2+8bbd9d+ufbZdny5XPTn4XKd
z4v+PFyu+XnRny+5XPTnB8avfrnOZ/royuVWfo6/fbZjt88241e/XOvn+KM/
T79c5zO6sVxu5edFf55+ueiiV1yuutFwuc7n2M3P+tsv177x+Fe/XOrnB8eX
y0V/Hi7X+bzoz2/xLy7X5ybwLy4X/fn/M5eb43O53EVvWrnc8GjP5XKX9fzK
5YYbei6Xm/XNc7nc1N3P5XKPd8dnc7lL/bRyuWdd9mwud7k/rVzueZ98Npe7
/P5XLled+YrLtQ9H7gfRQeVyT/1PLrf2YePPc73Dr0b3lMt1/nzIuVzuuV4p
Ljf7/3K5Zz1YXK46Uq7H7ytcbtbVcrlnPisu1/1AeNricukXW/5yuVn3y+XS
H1F7cbn+HuFmi8tNPSWXe9qLy/V3AU9bXC79dbQXl+t8Dr+KDjrriuhzcLmj
J8nlRmeAy639FNctcLk1nzO+z3GGt4vuI5ebPlhyudHl5UtOe3G56vysW4rL
dT7DuxaX6/usYuf56bGfcSsu1/tR7OYNx5fLPeNVXG6eo5LLPevB4nLp5zT2
Mw8Ul2vezvjGmfHlckcfhcuN/ieXW/M5uskZN7ncys8Z1zh/yrlc7plvi8s9
P2dxuWfcist1Pud6jHO4XPNzPpf5+VPO5XLp/6q9uFznM/bics3P2IvLdT7n
/IxLcbn0D9NeXK7zGXtxueZn7MXlOp/P6x19FC43up1c7uhJcLm5X8vlZv0t
l5t1oVzuA88Ljm7uc8nH/blcbnEFx/25XG5xBcf9uVxu5eeDc7ncHOFy5/l4
uVx0lLHz/p+xZz0Kl5v7TnG59Ksb+/l5i8u1bs/41u1cf3G51nVcv1xu5Wev
Hy539FG43NH/4HJrPseP53pjz/pbLvfJOJ/2ms+J0/k9yuVW/Zzrt35mXSSX
W/Vzrt/8nL9nfv6Cc7ncHOVy873L5Tqf4dSKy6U/ovbicp3P8IbF5Vo/Yy8u
1/kMN1pcrvkZe3G5zuf8DtFBY49uJ5c7ehJc7qN5I9dtfk6+Mz+H73E+53P7
nH2u3/o559bPuX7rjVy/9TNxl8ut/OzzhHK5OcLlzvPxcrn04xz7GYfics3P
OTdvOL5c7ulfXK71c8a3fmb84nKt6xhfLrfys9cPlzv6KFxu9D+53JrP8TNv
ZH6Yn+NnnKPLOJ/zOU67XG7VzxnX+jnX73zOuXHO9Zuf8/fMz+pKcrn0f9Ve
XK7zGXtxueZn7MXlOp+xF5dr/Yy9uFznM/bics3P2IvLveqbK5erbvynez25
uFx14D/c68PVL9f14O/u9d7ico9353K5VT+f+wdV1/3mXo+tfrnWG7+611fl
citv/OJeLy0uV12UY/XLVa+L3X6H2R8KlwKXq470CH9bXC66aPa3sp6Sy3Wd
8vji/HfrjdNuXZf9uSfzM/1l5HKdz9GdS3/OObpo7YvI5aKLhsstfSO8Luvu
cLk1n8Plootm373q5+zHU9eFy635HF6X+iJcbuXn8LrkjXC5zufsfxcfGnv2
d+By7RPpsbhc9onC5aojTb9c53Ps6KLT5yvrfbjc7EvL5WZ/Wy7XdXe43NxP
5XK9D06/XObzcGnGOefoouFyS6+LP7qox+JyjfP37s+Ly0UXDZdr/Tz9cqnr
wuVWvRFel3rjadGfw+Wan2+L/hw+6RFddPR9dP5wuaXXxY4uOv1yyc8eq1+u
8zl2dNHp85W6HS7XdUq43Ko3Trt1Xbhc83O4OvPzbdGfozurP0/cfY/WP9wf
i8tFF01eNj8/ooO6n1zzeXmPTbhP6+d8r9Z14XJrPuMvl2t+nn655Ofboj+H
H5UPDZd7QxcdLjd1Elxu9D253HBScrnhs+Ryh/Nyf96+avleyRvhcm/M53C5
ySdyua67w+Wan8Plmp8fFv05urP68/TJRRcNl6teN1wu+ka4XPWN4XJZD4bL
rfVgxkcX9SiXa/0cLtd6Y7hc6rpwuebn4XLJG+Fyaz6n7kQXnXrU+Rw+Fr0u
n0dddLjc/E7hctWRwuXWejB2dNFwudbPHuVyrZ/D5Vo/D5dLfg6Xa35+WPTn
6M7qzxN3dNHM45rPOUffCJervhFd2HV3uNyaz/FHF03dbP38hA4qj1PzGT1P
Ltf8fGMdL5db8zl1J7po6tEbuuhwuRkHLtd9qzeOA5erjhQut+Zz7Oii4XKt
nyfvUz+Hy7V+9iiXW/k5f9f8vOjP0Z3Vn6dPLrpouFz1uuFy0UWTlys/59w4
57lH53PGRxdN3Wz9nPui9XO4XOuN4XKp6zzK5VZ+XvTncLlP6KJTjzqfw8ei
183927yRcczPP+UIl1vzOXZ00XC51s/Jp9bP4XKtnxMv6+c3jCN/V/l50Z+j
O6s/T9zRRTOPaz7jL5db+Rl/udyaz/jL5Vo/D5dL/Zx5XPMZf7ncys/4yzOW
/mxfA7nc2OFyR0+By5289617/zfa6acql/tIPTP+1Odyp8Xl5n4HlzvrGbjc
ek8f3Gxxuaf939ovN+MWl+v7/uCK5XLrPYBwy8Xl+n4TuXa5XN8bCHddXG54
UrjczBu53A9O3XfjyIvLlSuPjpfrgMut92mGU3Uehmv1fZrhYI/z3+Fy632a
POfz3H659T7NXI/v08zn8n1AGd/+dbH7Ps3YfS8ez6UUl2ucsReXa5zhZovL
Pc5x5HJPe3G5p/3Z/XJ9Pyz24nL9vcAbF5drvsReXK7z2f6ucLlZ98jlznOi
cLmP5kn708LlJi5yuTWfL/rl1vuO6ccrl1vvH6Tfr1xuvU+TfsJyuTWf7e8K
l5t1f3G5p724XPOG/Wnhcuu+4/jP7ZebfACX+8GLd8ficr3f0u+3uFzzOf2E
i8t1PtvfFS633kdP/1i53Hofvf1p4XIrP5sXntkvt95HTz9eudyaz/T7lcut
/Ew/Ybncms/2d5XLPe3F5cZfLve0F5ebcdTxT3txuRn/uf1y7feFvbhc5zP2
4nLNz9iLy3U+n9c7fSPgcn0v3sTR9+Kd9uovmnHSfwguN/vScrn1/sHYl365
9b7j/F3fd5zrt97IeL7vOOOYn+Nvfo7d+ezvzH652Wf7FnbjzPP+xeWmzrJf
Lu8trf69z+2Xaz2fo3U7119crnW4z2/B5VZ+9vrhcm/cP+0HK5db85nn/eVy
p/8hXG69Vzp253Ps9CuY67d+zvVbP1MPyeVW/Ry7+Tl283PszmfrGrlc33ug
v1zuB/efY+z2Y8ReXK7zmfVEcbnWz9iLy3U+U0cXl2t+xl5crvM565CsY+yX
e3I3crn1/m6e95fLrfxMPwG53JrPsdOvYMa3fo6/9XPs1huxWz+zTpPLrfwc
u/PZdaT9ctMP8lvYfQ6b5/2LyzU/x25+dvzn9su1fo79xbtjcbnWG7FbPzO+
XG7lZ6/ffrnpi2m/3D8T59idz7Hb/zl283Ps5ufYnc+xb/1yrZ9jt36O3fkc
u/Vz7Obn2M3P6p5/6Zf77nrcZ/pf3C93/OByS0/+E9chl6s+/If7z1n9cl0P
/o44yuWq3/7z/fckl1t13W/u50FxudZ1v7qfZ3K5lTfs+wyXeyOvq8MWl2uc
00fJ/l7py5P1O1yuOtJj+NvjPMrl2sf1vI9mPSWX6zrl8cX579YbsVPXTd+c
fA64XO+Dj4v+HB639Odwuczn0s3lctFFw+WWvhEu97TL5dZ8DpeL/jHvbbV+
DperXkg9VFwudd30yzU/x07eqL78cLnDI8Dlzv4OXK59Ad3nkMt1nyhcrjrS
cLnHeZTLtY9reNpwsnC5mS9yufOcAlxuvY8+evJv7+Ocv+d98Lboz+Fx1Z9n
HXh+Hrnc0uvC5ZI33JeSyzU/39Tj5HLt4xpdgPo568APXtz//emXa70RO3Xd
06I/h8s1P9d7U+Byw4vJ5arzD5cbf7hcddFwueZn9xGLy834crn2cQ1nm+cb
4HJdpwyXa70RO3VduFzz8/TLJT/fFv05PK7683C5p10ut+Yz/nK55udH9Dl5
3JrPy37L9Mulfh4ul7pu+uU6n/GXyzU/D5dLfq73WsHlPqLXhcvNvJDLnTxh
v9z0t4bL9TmMcLmTp+Vyk4+fyeXmvlr9cs/PI5f7wYvz78PlVl+12MnP4XLr
/d2L/hweV/15eGh00XC56nVzX0QXDZervpE84rp7+uW6HowdXVSuovrlUj/n
d1Xv746/7+8+7ebnybPk58kLzufwtOh1w+Oi8w+Xa5xjRxcNl1vv8YgdHWm4
XNeDsVP3hcu1fra+KS7X93fHbl/i2MnP0y+X/DxcrvP5XL+pPw+Xy/02PG7N
5/iji06/XPSN4XLtexm78zl2dNHwuNbPw+X6PvpFfx4ul/o5XK75eepg+9gt
+vP0y03dbb/crKvgcn0vzfTLtS+x49gvFx1puFznc+zoouFyrZ/D5Vo/h8u1
fpYzk8ut/By7+XnRn8Pjqj8PD40uOv1y0ese6Wcrl1v5mf661S/X+Ry7fVwX
/Tlc7gcvzuuGy7XeGC6X+lkuUC638vOiP0+/3Ogi9stF5x8uV94tdvsSx25+
jt387PhyufZxRW+ofrnUz28X/TlcrvXzG8aRx638vOjPw+OiPw+Xa1/i2J3P
+Fe/XPMz/tUv1/mMv1yu9fNwufYxXfTnR/zlcis/47/yuM/lcu0XccXlou9d
crkZ57lcrv3Errhcnqe75HLzfNJzudzUF//Gfrkrl5vn557L5Z7rrWdzuakn
n8vl5vfzXC43z20/l8s9x3k2l5ujXK46f/bb7NsTLjf+crnOt3C56vzZb0td
KZebuD+zX27p/Lkev998ruiwcrl5XxBcbun88T/rNLnc6f8gl2t+wF5crv1k
4HWLy/X3i7243Hz+5/bL9feFvbjcPP8qlxt+UC7X+Y+9uNwc5XKdz/SDLS5X
nZ9+s8XlRgeXy819RZ0o4z+zX27NZ/rxyuWWzk+/X7ncea4dLje6plzu9H+Q
y3U+0w+2uFzvX/SbLS7X/kj0sy0uN+M/t1+u85l+vMXlmv/p91tcLs+L20+4
uNwc5XKdz/SDLS7X/Ey/2eJync/0sy0uN+M/s19uzWf68crlVn6m369cbs1n
+gnL5U7/B7lc57N9ZeVyzc/2rZXLdT7bh1Yu1+cHr/rlOp+xF5drfsZeXK7z
GXtxuTnC5dZ8Pu7Hlcut/HzcX7dcbtUbp72emzjtpfPnfOmXm/WNXO6N52Hn
+qMHwOVWf9Fcf+oiuNzomnK50/9BLtf5TD/Y4nLNz/SbLS7XeoN+tsXlWv/D
zRWXa/+6jH9+/uJy87nkcvOctFxu6iK43OiUxeXmCJdb8znrK/Mzz+9Xv1zj
bH8AuNyqn+k/8Nx+uTWfc/3GOdefzwWXm3kll1vzOddv/HL90XHlcp3P2IvL
NT/DXRaX63zGXlyu9TO8YXG5zmfsxeXaHwnOrrhc5zP24nJzhMut+Wx/K7jc
ys/RL6yf7Q8Al1v1M/0Hntsvt+Zzrt/8nOs3P+f6zRu5fvpCzPWf48vlTv8H
uVznc+JrnOVS5XKt6+wPYL9c62fHf26/XOdzxjdvMH5xuef1FJdrf1H6GxSX
myNcbs3nzEvzc35X5ufMV+Ocz+l8zj689XPiaP2c86Vfbs3nXL9xzvWbn3N9
5o38/87nXL/xy/VHx/1Lv9x31+P9hr4Q/9P75RrnP8OFwOVW3vjjvW4sl1v3
wd/f68ByuVXXhcuF35j9ANcp6ZervvGbe72huFyfa/vVvd5WXK7PTWS/BF30
UT/75TKfH8/9sNm/sl8udd0j+0ZyudYb4XKHL5DLPd4d5XJr3X3aXQ8+vjj9
w//I5aJjP7JvV1wuet3jB/dHudyaz6fd/Fz5Ay7X+jlcbs3n0279nP3Uquti
R3+e99Q6n0+7+kb2g2vdHTv683C5zue/uT8Wl4suGi7X+TycFnkjXO7sS9sv
l/wcLjf7k9UvN/UXXO7wBXJg6M/zflzm83C5xDlcbvir4nLRN6Zfbvg0udzz
/5PLvRnn6KTM53C55udwuZWfw/FSP3s/lMu1fr5ZD8rl2pc4PC3zefrlkp+H
yzU/x47+PDwQOtLjoj8Pb4Qu+qRODZdrfg6XW/k5/tR14XKt66w75HKHL5DL
RX8Ol1vzOZwt+Tl5ufJz/NGfw+Wqiz6iS8vl3oxzdFLnc/rokp9v+sPlWj8/
Ua/J5Vo/V30nl2tf4vC0zucf3h+LyzU///D+WFyu83nRn2/4y+U6n4fLJW+E
yzU/P7I+lstNvi0ul3ojXO6D90HqaLnccG1yueET5XLDpRaXe44rl5vrkst9
ZD6Hy30wztFJmc/hcs3P4XLNz49ct1yu9Ua4XOvn4XKtn2NHf3a9IpervhEu
13X3PB+y9MtVRwqXq/48XC666Dfq1HC51ScwfX7Jz8Pl2l+UvsDF5Tqf/+n+
WFwu+nO4XNfdrgvlct8a50V/DperLnpDF5TLfTDO9K2VyzU/v9UfLrf6uNp3
Fy7X+vkB/+Jy7UvMelouV33D9bdcrvrzG/RUuVz15wf1V7jcms/Jp+aN+Juf
6XMrl2v9HC7X+jl5vOrnnKM/h8ut+Qw3J5c76wq5XPSNcLm5HrncR+fzq/uj
XG7N55/cj1tcrvmZ/rdyudYb4XKtnx8cXy7XvsToPXK5lZ/RO+Vy1Z/Vk+Ry
1Z8f1FPhcms+07dWLrfyM/1s5XKtn2+ML5db9XPO0Z/D5dZ8RleTy638vOjP
4XLVRdXt5HIfjDN9aOVyKz/rD5dr/fwGf7lc6+cHx5fLtS8xeqRcbuVn/OVy
1Z/f4C+Xq/5c+ihcbtnDzfu+PP3hcvN35XJLxz796/16jg+XW/ti+Mvl1vv4
vB643Hwvcrmlk5/+1T/Z65fLdZ8Cf7nczCO53NLbE3/fA4i/XO5b7lMVH7jc
em8g/nK5mafF5arnJ/7uT+Evl1s8eXQ8ufHwpQuXW/Mtdt+nyfhyuY/OH8eX
y3V/kPGLy3UflvGLy/X7Yny53OR1udzKD6d+V++HPe31ftjTXr/3017vhz3t
9X7Y6Ifuw0Y39/cYndH97lx/7v9wubkfyuXW7yXX7/7gy/tzudybcUb3l8ud
uhoud9YX33q/XS73A/Nn7OZD7HK5NZ9jl9/geqpf7mmvfrnWzbFbz3mdX73f
Lpdb8zl9Fnh/SuxZ78jl1vu74Xjlcut+lOdXzRunveZzdEZ5pFw/OtJcf973
Apc7OgBcbvF1uX7zea7fvP0J53C5o3vA5db76OPvfI7dvBG7+TnjG2fez1Vc
rnwd119cru8t5fqLyzXOXH9xueYNrx8u1/dbjZ7Le5dGN3c+RyeUr8s+kPk5
eq75Obqi8zk6o7wofankcp/QRWtfFi4353K5lZ/Ro+Vyaz5zvXK5vhev/O2X
m8/3vffbq19urtd+uRlfLlf+OUfrSexyuVVvYJfLrfyMXS635nN+b7x/cLjT
/D6+dW+v9w/m8537EXK59X5Y9j3kcuv9gxlfnj/7stbzGce6PfPbeiPXY113
2is/53OZnz/nHC537jNwub639AN+f9Uvl/eWOn71yzXOji+X6/MpcHNyuVU/
L7ro2I0z48vlVn6We4LL9f2wc5/gvaWjwzqfc7153yxcbr2/Wz0aLrfmc8b3
eavkEevn/F3r59R5zmd0Drncys/o0XK5NZ99Ts5+uanfv/V+e/XL5b3SH3A/
qX655mefC5HL9flB4iGXW/Uzdrncqp8XXVS7XG7N59Rbvr8b7kYut97fHX/e
kz6/Z/NzxjFvyEPL5fo8bNYt1s8Zx/qZ+S2XW/Vz9lfMz/lcC5db8xn9Qy53
eK5vYXc+xy4fQ/1e/XKNM/VRcbnHu6NcbtXPyQvWz/y+5XKrfiZ+crmVnzdd
1HO53PAccHU1n9GV5JAqP6tHw23UfGbd4j531c/Uee4L1nzmvug+SuVn8oi6
c83nKy5XPflP+Mvlqm/8AT1TLtf14O8YXy5X/faf7/3lcquu+w3XA5dbdd2v
7v3lcitv/OL983e4XHXRKy5XvS5cLrrocLmuu8PlMn+Hy3U9GC4XXfTx5G+z
z1VcrvP3xXluvXHarevC5Wafrrhc5u/joj/P/c84h8tFF73kctE3hss1zuFy
WXcPl+t8jh1ddLhc6+fTbl03XK7zOf2bqOuGyzU//839eXG5zOfhctFFh8tF
Fx0uN/v8z+Vy2YcdLpe8MVyu8zlcLrpouNxcj1xu9rHlcodzkMslH4fLfXD/
P/UucQ6P63ye9YlxDpeLLnrTXy4XXfSSyzXOPtcil4suOlwu9XO4XOu6G/5y
udZ1T4v+HC7X/Hxb9OfhctFFh8t1PofLVa+LP3ljuFw58ysu1/nM+kYuN5xY
cbmsU270wSwu1zhHryY/D5dLfr4t+vPoR8Y5XC666Ky3nc/RQdBFn1h/FJdL
fr7kctFFh8ulfs76x7puuFzn8w/vz4vLJT9HXzM/3xb9ebhcdNHhctFFh8vN
55fLPc7/Xy43PKlcrrxo/H2++4rLJW88oScXl/vj+38fLpd193C55Ofhconz
w6I/j75vnBMXdNG3+tsvF130Df5yua67HxxfLhdd9JLLpX5+i39xub6/G//i
cn0fPf5yuTd00eFync/xR68bLhddNFzuPKcgl4uO9GCfCLlcdNHhcn1P+hWX
S/08XK5xjj/5+cb4xeU6n3M/M87ZF0QXnfuf8zl2dNE3jC+X67r7wfHlctFF
v0EfKi6X+vmSy5X7WvTn4XLNG4v+HC53nsOyX27q0MQ5/qln5XLZtwqXO8+R
2S/XvPHj+/PictFFh8ulfh4ul/p5uFw5xisu1/wM/1hcrvM5fIxxjh1d9K3+
9stFFx0u1/ycfVnjjH9xueii3yz683C51M9vF/15uFyfm7jics3Pi/4cLvcR
XXS4XHT+t/JJcrmsT8LlVn6Ov/nZ/W+53OPdsbhc6ufhcq03Fv15uFzjHH/z
8xWX63zOesA4w4kWl+t8RlcqLtf8DDdTXK7zmXVLcbnc/4bL9XmrRX9+5L5Y
XK75Gd3/38rlyp9fcbnVr+OCy53P8Vwu1/4eF1yufPsVl1v9QC643Pme/xdx
udVX5ILLlfe+4nKrD8kVl+v+6QWXW31LLrhcefIrLrf6nKjjyeW6HyjHK5fr
fJODlcs1Hzv+c7lcv1+43+Jy1evgiovLNf5wy8Xl8txEcaRwuT4HVO+plct1
P0UOFi7X54DkbJ/L5dbvC+5XLrf6UOX67UOV63f+5/p9vifXbx8qdTy5XPOq
/nK59lWTg5XLldeQ+30ul+t8xl5crvkHrri4XHgN7cXlZly43JrPcKdyuXX/
gmuVy61+MnCzcrnVJ/CCy635DPcrl1v5H65YLrf6BMIty+VWn0B1PLlc8wY6
YXG5xlkOVi5XPUNO+LlcrvMZ7re4XPMzXHFxuc5nuOXicu17qY4Hl1v52X6y
crlwXsXBwuVWHyo42+dyuTWf4X7lcis/wxXL5dZ8hluWy60+rrle5zP24nLN
z9iLy7XewF5crvVn7BuXa38k7MXl2n8De3G5zDvtxeXSF6I4Urjcys9wqnK5
tY5Qh4TLrXUBnO1zudzq98W+ilxu9dmGK5bLrT7bcMtyudVnWx0PLrfys/0j
5XKNszokXG7Vz47/XC7X+Qz3W1yu/ZHgiovLdT7DLReXa9946xK43MrPclFw
uVU/y8HC5Vb9DGf7XC635jP3Xbnceg8CXLFcbs1nuGW53HoPgjqeXK75WX+5
XOtndUi5XOtn7M/mcp3P3sfkcs3P1BfF5bJu015cbtZVcLk1n+FO5XIrP8O1
yuVWvQE3K5db9fMFl1vzGe5XLrfyM1yxXG71Y4RLksut99So48HlVn5mvOJy
jbM6JFxu1c/cT57N5TqfYzfOrCeKy/X9Tayn5XLrfUzoSXKiNZ/lb+DqKj+z
jpVDqvnMukJuo+rnCy635jP3XfcFKz+TB91HqfnMvFx1Z44V5z8vuvHJ5Vbe
+CO6KFxu3Qd/v+i6J5dbdd2/3PvL5dY65beL7npyubXu/vW9v1xu6Ui/XObp
L9g/gcutvPHX9+PK5T6ZN0679fMj/K1crvVGuNzZN5PLRSd/hL+Vy3U9+Pji
9GP/5IPTXrwo/K1crnpd9v+ejPP/uPeTyzU/13vm4HKtn8Pl1nw+7dbP4XKr
rguXi/4cLrfmc/rlom+Ey611d3hd9OdwuTWfsz+N/hwuV130ifwql1t9L0/7
vA8TLtf8/ERfXLnc7BvL5Q7XIJeL/vwETyuXq143/XKznwyXW7wourpc7o35
HD7jyTj/7b2fXG7dB1LHm5/jT/3sexzlcq2fw+VWXUedKJfrfA6Xa34Ol1v5
Of7kjXC56kiPi/4cLldd9Im+uHK55udwuZWfwy3Jiy7PZfreTbncJ/sxZhz5
5/C0zuf0xSU/h2+o/BzuAf05XG6tj6Nvo9eFn3syzq7P4XLNz1l/Vn6ObrJw
uTWfk4+pn+s9qXK58s9nfVzzOZyteSM6kfk5vC76c7jcms+L/hzuSl30G+tT
uNzqq5a+seTncLnqG+Fyc7+Ty71Rb4TLffI+yFEu9wO5r6xbFi53uC243MRN
Ljf8nVzujfkcLvfJOP/jvZ9crvk5XK75+RF/uVzrjRv+crlVP8cf/TlH1ynh
ctU3wuW67n7EXy5XHemGv1yuumi43JrP+T2TN8Llmp/z+68+gfbdhcu1fh5+
y/o548g/L31NJn+wHnxrXpHLRX9+w/hyuep14XIfjbP7W3K5xpnfVXG5xjkc
ofM541M/h8ut+jnjyz/n9+x8XvTnHF13Jy+oP4fLrfm86M/hctVFw+XWfE6+
Mz+HmzU/8xyCXK71c7hc6+fha7d+ufLP7O8Vl2ucrXvkctE33nCfLC43zy0l
zrEb55/c+xWXa37O/dj8HH/q59zXrTfC5Vo/h8ut+jn+8s98T3K5lZ9zfebn
RX+edSE6UuaH+nO4XHXRcLk1n32OK3HO8wnm59QT9tnO+Hz/qWutn+f5B+vn
jCP/7P4zXG7lZ3Tp4nLRn8PlqovO+hu9LlzuB8ZZPgwut/Kzz5nL5RpnnsMp
Lpf6+QGdqLjc4/7fU5fUfF7057fUnXK56s/53dZ8XvRnuefSoeV0Pf/w9n67
+zPyZPq7Pymvo7/78/IQ+sunuN+sv3yW+3n6yye6X3LFOxv/6Ha/5P+Tg/4Q
//Qt4DmM4vYcxz5YvyT+jm8fOLkTx7cP4i+Jv+O/wu6+qeOTR2Z8ddCMv+jQ
iX/14Tj/TnHlH+Kf74PnMOQja5xPsP/pPv41Ps/hyffU+J9j/9N9/Gv8V/d2
96drfPej/nQf/60PcY2f+R+d49fMfzn9D/HPPgnPYcz+zMfY4/cJ9uijn2KP
nmofODkqr/Nz7L9m/nv91IVz/Qu/XPuruX510Fy/fAHPOVRfmfNz1HMPH97e
b3+J/Q/38S/+95N7uzxl+T8s/sdyPZ9j/8N9/Mvf/dI/3Me/ruere7v72Vsf
4vJP/onO+Vvyj8+RfIj/i/P4Env2xz7GTvxnfRK9mecaP+D9Y9Vf4eDc/OPn
cv851+/+f66f9Zzxr+t3nwqduK4/z4HYJ+n8HPVczof4k/+rP83H+BP/6v/x
Kf6+T8z+CgfnxL8+F3qB+b+un/WY8a/rp96VX67rT/533zufw+ecPsQ///9L
7NnX/Rh7/v9PsOfzfoo94/ocXvLqgT1/Tz5FHlG+Xj5LrktOXD5RPkbeWT6X
+FXfrzPe9dzYh7f3219i/+f7/F/+nyz+ny7+8tzxP7DnqK4Qu/xmjotOXDx+
jl8t/l8v/q8X/9x/M19+z/3X5/A+xP+P3H/tH/YxduJff/dT7H+8j3+Nf2DP
50LvHf2ePpSzD/Dq3i53WOPTh2DG//reXvsMjp/nBu1jd8apnmv8EH/yf/UP
+xh/4l9/91Ps1P81/oH/eT58uf1F7M8AL1v9G+g3YPxrfPYD5a9r/NQ/yX9/
vI9/PSf6If7J8y+xE3+fKy2+L+tE3w+c+4J8a+rtA/t5PvVP6hrm//jzfsLS
47/EX040/hnH/e3sG8AFGo/qy3jGu567/fD2frvPW/7qPv/X83Of3Nun35i8
MPV/+R/4n+fzPIb9cr5Y/F8t/vZzgK+tfg9fL/6vF//Un7mf//k+/vUc84f4
//o+/nJkU3/6nOIn9/bZR6Af1ge8/1kOYupPn7P5/N7+xPyfceIPZ3Ej/xcn
jp48+xvyR1sfDp4Dl2dMvOu58A/xJ//LkSXe9Twoz3/emP/1vB37xtOf7MD/
PPf5pewzJ/71vAjc0AP5p3h8+PsH5n/xznCjE6focOilxaHL4eFfz2HIOenv
c0hyJPjXc3ju0+vvc6jug+rvc9juM+lvH4Ic7VMefvYj7Kde+mif/sT/77DD
LTl+OBvHn989488+FeMPP+X4P8ae8X1PV8b/Kfaln0vGD685umT6HP8t9lPn
vPkeg1OvuPEeCXkjxw8f4/jhORw//EGN/2P8M/5PsGd8+wRlfPbh598zT9Qh
/w576iLf5xC+lT6I09/6H7FnHv4T9vSTtj/oqRtM3y55W967O/Ui7y8dvlVu
N7yt7/3I+urv7+1yY+P/4rT/I/ZTbwyXoz4ZjqT8fZ4mfLd9UtlX9vrf/Oz9
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
R/S9nN/Q9ya+6Hs5v6HvTXzR9+YcfS/xfTju7XOOvpf4PqDvzTn6XuL7gL43
5+h7iW/VdTla12Wfhrouv+eq63jP4Zznfmddl/xmXZd5S103dbJ1XX7v1HWj
S1LXWcdVPUZdl/to1XWJh3Vd6kPrutTz1HWpJ6zrRvenrku9Yl03+wrWdakf
rOusy3Ie/dm6jvcNjj37AtZ1P+AYe+pM67r8/9Z1x/3niD3HquvOo3VdjlXX
xf79xd+6Lv9OXTf6NXWddVbVS9R1o79Q1839l7pu/t267hzfum7e+2mfgfSV
PbBn/ljXpQ54cbuzR/+yrpv7BXVddPmq63L/oK7L+NZ1s49OXZfvz7puOADq
uuQd67qpd15wHl2Gum50T+u68zqs61JXVV2XcajrZj4sz8tXXZfrcF879aF1
XfK4dV3qGuq6qXes61J/UddFJ7Kum9+j/fBjd3/5tFvX5fdpXTf72dR1cx3u
L8dOXZf8Yl1nHVf1DHVd9j+s60bHpq5LfWVdN7936rrs31RdF/30wJ5xqevm
fmRdd+Y967rc56uuS/1gXZe6yf3c6MLu22Zc922j27pvm+t23zb5xH3b4zx3
3/aMm3Xd7Pu6b3vmVeu62Vd23/aMm3Xd7Fu7b5s6x7ou59Z1WX+p1+V92dZ1
ObeuS91gXXfmwarr8nep63JedV04OfW67KOq1/1+0euyzlKvy7rJui66inVd
xreuy+dSr4seZV0XLuQ77/evui7+P3i/f9V1Obeui25gXRc/67roctZ1+f+t
66LLWddlXOu6xI26LudV12U+UNflvOq6rAuo63JedV24Veu6zGv1ut8uel3m
m3pd5qV6XdYR1HWz7rCuy/qIum72L6zr0qf9wJ7rt67L9/Lidm+P3m5dl/lJ
XZe8VHVd7iPUddN/3bou/KV1Xf7e8f7rsa7L9Zdel32H8/OOPb8j9brkQ+u6
fO/qdakTrOvyu1Cvyz62dV34yAN7Po91Xd6jbV2X67euy/dOXZfzquvye6Su
y++26rro5NR1Gb/qunCK1HUZv+q68I7UdfN5rOsyvnrdOX7pdb9c9Lp87+p1
4VPU63LfVa+LfmVdl+9FvS6/L/sFneOXXpfPY12X369cX8a3rsv41nWJj3Vd
rl+9LvyYdV2uR70u74exrou/fX7ib10XLtA+P+GwjsXfPj/xt66L/6vF37ou
/l+937/qOvddc//I0bou92XrutzXrevCIVvXReehrrOOm/PkNeq64WzU66iz
6n211HXz79Z1yZvUdXM9/r2MT103+pl1XcanrpujdV1+n+7D5mhdF/3Nuu44
j9Z12V+wrst93roueoJ1Xe6T1nXRN6zrcj+hrrOOmzoquhB13Tfcz8c/XBR1
XTiSquvCRVHXDUdiXZf7AHXd6DbUdVM3WddFj6GuS36sui7rWeq68Ci1Dxse
0ud3sr4/7u1z/dR1U5e9uD+f66eum31O67rkfeq6cC21Dxt+7Ifv96992PRH
Ot5/PVXXWQflPFzU+XnruQ/ruswH6rraL815eCnquuEOrevCQ/ocStbxB/7R
f9yHjd26jn3U0uWo62a+UdeFE7KuC4dnXTfjUdcNX0VdNxwSdV3Gr33YHNXr
wjm5D5vxfR4k3wt13SO6VOl41nX5Hn1eI5yifSDV1Ri/6rr8XnxeIxzh8f7x
ax+W50JqfPdhMz513cSHum70J+u6xIe6bvYhretyPR8v/tZ18f/0/f5V1+W5
hWPxt66Lv/uwOVrXxd992Byt6/IcCnVd8qp13fx+revgI6ZOy/2aum7uC9Z1
uc9Q17kfMuvz7DtQ1yVfW9cVl5R6LHULdd34W9ed41vXzfVQ18341HVTn1jX
xU5dN/ypdV3s31v8retOe9V1qfes6/L/WdelDreuS5ys6z7h391vta7LPjh1
nfvJE8fwJNR1iYt1XfKmdV3iXnxd9AH1uvN7Lb7unDel12VdQ10388u6Ljqb
el14Tvm6F6ddvS7z27oueoh6XZ6PObDn+qnrZv10/n11M+u6+R3L14UHVq87
80LVdVl3q9ed/tZ1H+T6jvdfT9V1mYfWdZn353ils1nXvbz/93p+1rouv0/1
uuiE1nXRN9Trso9wYE/+Uq/L9VnX5fqp6+RxRtfKfFOvO+8rxdfld0JdN88V
ydflfqBed45ffN05vnXd3N/k687xS6/L+NR1o2Or1+X+p17He3FLZ1Oviy6n
Xpf7sXpd7ufWdfm9qNfluo/3j196XXQ567qMr16X8dXrEh/1Ot6rXDqeeh3v
bS5dTr2O90KXv3od750u3exY/K3r4q9ex3uzy1+9jvdy629dN8+Duw+bOpm6
bp67p67LOrH0ujzPQ103z8u5D5u/S12X51VqHzbrA+q6+dzUdXl+pvZhU/dS
181zX+p1WV9Q18347sPmc1HX5fmr2ofNOuI77/evfdj4/+D9/lXXxW5dl+u3
rsv3aF2X36t1Xb5f67rkReu66B7uwyZu1HV5nq32YTMfqOseFr1unq+krsvz
eFXX5Xkz+wXlfkhdN+t692Ez36jrRveQr1v0unm+0bouegx13Rx9biJxOBg/
1+8+bL6XF7c7e3Sz2ofN/KSuS56qui73Ceq60f2s6/L8G3Vdvvfah02/GOq6
XH/xdYnD+XlLZ5OvyzjWdfne5esy/63rYqeum6N1XebJgV/yjHVd7NR1c/3u
w+Z7p66b572t6/J7pK7Lc6q1Dxs92f4t0c+t66KzUddl/NqHzfPO1HXz3mTr
uoxPXZfxrevm+X/runzv1HWjY8nX5UhdNzqedV2+F+q6OcrXxX68f/yq6/L7
pa6bo/1VYqeum/hY1+X6qet8TqJ0tpfv96+6Lv6fLP7WddHNHt7vX3Vd/D9f
/K3r4v9q8beui/9X7/evui7fm3Vdvh/rutzfrevkbe37al0Xu3Vd8op1XfKO
dV3uR9Z1+VzWdeoZ9vO0rst907ou+dO6Ln/Xui751Lou+4nWdfmdWNeFC7Wu
y+/Iui7f13OfmzjOo3VddEjrusTTui46rXVd7qvWddF7rety36KuGx3Pui71
yrff7191Xfy/v/hb16Wes67L53IfFk6z+gdS183+vnpd7O7DZj5a1yVu1HVz
bl2Xeu+4t09/Reu66KUvbnf21GFV1+W+Ql2XfFp1Xe5b1HU5r7ou9Zx13Tlv
q647fy9V1+X3q16XfPbidm/PvFevi85pXZfvXb0uz91Y18F3jD3n1nXHeX7c
2x+Xfdisv6quSxys68LvyddFx7Oui07uPmzytXVd5iV1XfoZVV2Xes667swr
VdelPrOuO/NP1XXxt67L/Uu9LrqcdV30T/W687z0usyb5X18VddlHizv46u6
LufHvT18S9V1uR9Z1+Xcui7n1nXJJ9Z16b9JXZfzqusSL+q6nFddl3hR1+W8
6rrUc9Z1OT/wTz1nXZdz67rUc9Z1ObeuSz1nXZfvR74u6wj3YRNX6rqpW9yH
zTjuw6Y+dx82dvdh83ftc5J63n3Y8BvydfldytflOt2HzefyedhFr7stdd3U
h+7D5nP5PGzGdx+W/GdfptqHze+Lum761lnXJQ7WdflerOsyv6zr8ju1rks8
reuyzrWuy/dFXTd6JnXdzAfquvhXn5PoAN9d/N2Hjf8P3+9f+7DJ8+7DJs7U
dVMvWddlnlDXRQeufdjEgbpudGbruvxeqOueFr1u6hDquvRfe3xxu7PPdVLX
pb9b1XXpI0Zdl/HruYnkY+q6jG9dl/tN7cOmb5XPw4aPta7L93h+3tK1rOvy
/crXZZ5Y12Uc+br8jqzrUo/J12UdeuAfP+u6jOs+bH631HXTb9F92MxD6rr4
13MTmYfUdamvah828/PT9/vXcxOZF8e9PfVh7cPm//9i8XcfNvPEui7zhLpu
6hnqutFRqevm97v0Q7auG9546YdsXZf+hrUPGz/qutSTtQ97xqfqOvsgWt9S
16U/rHXd6JPUdek/a12X54ut69Lf1rou/Vut6/KcvnVdni+2rkt/Xuu69J+1
rkv/BOu6PF9sXZf+wrUP6/uMU9ed8Z397dRff4LDiz11279S1/2KcXk+8NG6
7nf3f9d+dMP7+Jzst27v9/8Ie+bPv1LX/YbP5XOv37q3p56YOjX+ue9S12U+
zX4+/etGJ42dutn+dfO8OH1G/t/G7jfHsuKGAnirkRIRJYQwSkQIGppG4n/I
Ft5SZilvKbOUt5RewjAhQxMGkg/cc6T6+ZVmPrXa7fatquuyXads3wtx3clx
hD+4wf+I637kfYX+K+8r/VBv1/GU/3freMqfc6hx3Z8YX+rteV+NlxjnqJN9
73Sd/8l1/oxT/oxT/tGf9Md1Ha2rrT4nLuK9l846N+5KH4An8P+wjr/0/6zj
Lz1+5Sl09KB01iX02K/8n/3lMq/SxfcTL6T+/Qn8j5zrkN9+ouTLZV5D/qfw
8z2e4nLMs3KCS8duJM7BLpWu3YjfTZ345j6jdiP8kcP3jBsHPIXf/Uk81vzR
xCPH7+PePXgmcV3uEbIOjWew86NOlvzs8j+BHhzvbys9cV7WwX4jWQf5sw7l
53tLo1+Kcd1Bf/75df6zcR37yXuvcR+GHywdPypeVzufeEw7nzhKf/Dt+v+1
s5FvXnbw6+P3UU+FnoSunnU8h/48I65LvDL6+3+/rlvp2BPvZbNu5d/kY53Q
q/IH/38KP99LE8frOZ972YtxHevmveyZuC73Vs+I6+5cx8jPevq9ie/x46H/
supb6f9e7XDpP692uPT0F30K/afVv5TuPRz04Z9+wt/w3No7xvkM/cq8xn77
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
OYX33veQuM56WOKbxsWbvIk7+OsvOL/XzlMvVn7is8bXxBniK+J1o34wcsAZ
aq/Af2r3wKlqP5Ev/6iHjXzwurvIIZ57zrx6HuW50sXrKge8rs8Vr9vUw94Q
J1l3P/A6/a51/eJ15gXSN0C87kQdsf5ZvM765Z3elJ4+Cfav4/2VvulfZ/+9
2nvqr2vHrO8Ov/Xdob+7jr/023X8pe/6171Yx186fTPG+O0zQd166cyrdp15
Nb54Z51X7equfx19k0rnvVQ+fU4cp3id/SfNcxOvu6Hev/Tow1v2rzOvzLy4
gdfxHpU/8Dry/B3/wOvQ5/od+iR4Pn7b/nX28ymd/Vg6+lz5vPfy3/72U7yu
34P2nnmXX/fzqgel03+18Rf1iW/sX/diXZ/S2RfKH/l1v656MuSbX0dfLOWP
/DrWR/kjv+7Vqjdjfd62fx3fSygdvSqd7xyUjj0pne8HlI5eSR/5denTZX4d
fZMc58ivow+46zDy61i37kPzgbLe1rMlLqCOuPzeu0X+EeeI1zXeEK/b5Ned
qJMqv98FDz91xOWnzqvjpI64/Icejvy6Tf+6sW7xA95XEqeI111ct/jPg3/g
dZv8uhEHZDz60dgh/U3kU/enHr11/zr6IoqnGa8ljh143UEf/aoO+sDrNvl1
F/oemKcnXndBr8pvP/3Qd/3rXqzrI7943R19MBr3qSfxn8c8B15n/Gqeo/ft
R1wkXhc/+Lb968b+Cv8hZ9TD0rewesF8Gw9mPuJ19CWunNRfo3c3t4c88+s2
/etGHR/yRz0s9kT54nXaSetbh/0wD+BN/euYV+nW/WX/Jb4yv+5X9Dl0+pTa
x2nk1+36173gXAH/wOteEFfAP/A69qP84nX2jek+O85H4nVn6i/K734J/+1p
GWf5WefSWbeOF//Y9cbOlx//WP364zqe8qPPpdNXtu8T+9n1s648+vvO+lzr
ZEc9LPrc94B9Lv3nVR9KRx/kH/WwP2HnQ8cPlo5f6PtnPUunj271gu9K1I8T
r9S+c2876OB1Z/137HPua8DrklcvXnfmuSO/ANwl90Sjf53zin9gnLU/3Kv2
PJTvv1gPy33ZkA/ec2Je9UvmXcSukz8gfeTXkT8wnite57186MYZobMOpeu3
QidPpnTtbOjkp9U+MM6RDwJed0IfxC0GXkd+vniVeF3iqFEPu8mv873X/rDO
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
        "], {{{
           EdgeForm[], 
           Directive[
            Specularity[
             GrayLevel[1], 3], 
            RGBColor[0.880722, 0.611041, 0.142051], Lighting -> {{"Ambient", 
               RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
              "Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{2, 0, 2}]}}], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1: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
3alWTq6fd1Uvl1wD1+UxMbn+3E39XnKNemD2tVItvX/29bxHsUp9Y3I9Wapv
TO5Vd+YxHvfjnGUVf3fVP8txk+S66GAei5Lrxp85fnVyrfgrvja59j4g+36p
Jle9qbnEYsUZ1XbJNW1FfULyzG2L7Jyr3BvqS5PncluqP0nuqbfiMTh5LleT
x5Dkudz6PO5MrrF/4TNck1zz/4avS+4d1squMXTP18a3JtfY6/K4PbkOXyc7
bqgOX081cXKtntULJc/ENJ/7BX8SrgFb4qbh+k4zmdb4DjwbT8B34jn4cXw7
noXH42vwODwEX43H4sHh3nE5nhfuBZfhueFe8Bm8INxLrcJPVPeI9s4ifBee
iyeG+9SVeGG4l12B5+Nr8aN4aLhnXYrn4OvwY3gYvgKPxgPC/eULuqf4ZjxV
sSLcg76oaxueU/6EPwrPJn/EH+L/4Wl4LL4Nz9T6wbfiGVpX+Eo8Bg/El+GR
+CF8OR6FHw6vRa3J4fgWPB2Pw1fhR/CgcI2v2rh5uI9/Gs8Or3Wt+cnh/kxr
5v5wD6d7+mC4j9Q6fCDcY2mN3Ree32jt3RueE2ttXxbu57TmLwn3Opo3nhmu
5TUnbBau/TUXbRWu5TULbRnuPzQLPSvcr2h21KL6HbX+7wnPFZ7Cs8J9sPbp
qHCvpv0+JtybKm6fFO4RFRNuDs8zFuMZ+G48D0/CD+EleGZ4vqv9clN4tq31
f0N4/q01f2O4n1ZMGFm9hrr+I8K9u/bXpeG9qj3VLzz30p7qH+7RFYtG4y9L
146jarvmV+7Yl+Nfla4dR3N8m+w6/BL1j9lrWDOWw7LXj2YsvbJ7B829z86u
VzUbf6c6j1X8fqvifkQzq7cr7lk0C3qz4v5I86tD+bdTkmc+h2Sv51twb/x+
8iz92+p8UnH6/dI16ACOv8HxM5JnU69X3NdoNnVc9nXWfOPw7PWpOdJm2f3C
RZqPVdxbaW62O8dH4Gvwudn9gmb+e2Wv5+tx/ex90R/XqcZGrZHNq3FM1/6U
7Huq2dRXFfdrmsUdmb3XNEc6Jjv+aI50RPa+05zq6OwYpRnXUdlxSTOrzyvu
BzWX+7LiXlKztQ05px8+Fx9fzSOKPdvie/DFHG+WHXOG6Hecins0zYv+rrhX
6q3fICquyc/Gf1Zck2uO1Dw7pg3FLbJjmuqC7bP7sss4vkN2P3g5Pi17j2uG
dmr2ftEM7feKazzNoxpl7wXNyvar5jWt5QbZse5mjp+Mn0yeof3Bvz0/eQ65
Y3YfegX+t+La9Ry8aXb/eCHeJLsnvUBrO7vHvBo3zo6rmvWdnh3DtX6K7Nqy
D94uu6+8VHNCXr9T8jxz4+y69HxcI7v+7IvPyI7hgzTYzq5blMtqZfe5V3J8
p+z+9yq8UXZffB5ukp1TBuKm2XlkMD4nu2/V71bfVNyzazZ7cXZfqd+DVpXO
ZzfgZ0rHca3JlaXzmdbqk6Vjse7LotIxXfdrcencpms4s3Qvre/+ROkco+8+
q3Tvre+4unS+vBEvLx3rr8N7Z+dHfYbV1d9E1Jc8XTpv6Zr3ye5P9dvoktL5
VddkRel80w8vK52TrsVLS+cz7cF9s3PiTXhG6bmA1vn00j2/7vtHpXtUXbcP
S/fGuhcflO4/dW0/Lt27av1/UrpP1npeUzr+Ks58VrrfHo4/LT0TGYanlZ5N
aF88Vzp2a33OLz2/UAx5tnSO1+ecXXo+ovs7t/S8Q+twYencqVg6p/Q8RWtp
aukZivbgvNKzEq3hBaXzrvbvPtk1ia7/U6VrBa2lttl9uubYXbL7dP122Sm7
79bcr2N2n67ZYIfs3ly/BbTP7tkV57tn1/aq8dtlzwGUF9pk1xKacV2UPbvQ
75WtsmsPXatu2TMH/QbaNXs+oN9Sz8ueM+i3487Z8wrNGy/Jnofot+N62XWF
7vul2b2JepQ9s+scrY0LsmcU+j30wuzZiH4nbY3XJN+j87NnI/pteo/s+kTr
s2/2DES/7/8fHj6MZQ==
              "]], 
             Polygon3DBox[CompressedData["
1:eJwtmgXYHMUSRQefxnUGh0CCu7u7J7hDSIK7e3B3JwGCJEHiSnB3d3d5PODh
bu8c7n4fP5mz3Ts7O9Ndt+rWdul5cI+DJq6q6nL+Nyn/Lt9W1VD+vaxUVc9u
VXVAl6o6Gj6krqoxXatqP/hI+CB4FLwvfAR8IDwS3h8+Cj4YHg2fBg+C+8NP
w6fCA+F+8FPwbfztwvFevPZlU1Wf8LcLxxvy+evy+Xsz/zB4f+YMZ+6njO8K
b8T4eoyfzvhg+DrGn2H8Y8Z3hjdgfB3Gz2T8NvgGxp9jvBfcG94dHgKvz/e9
F76J+b2ZfyW8Irws4/PAezG/F7wbfAfzV2B8mPeL+XsxviI8HL4C7gXvwfw9
4Z2ZfyvzP+J6doLXZ3xtxj+Hd4c3gTeA92R+zyr3wHtxEnwjfBX8GDwT5z8P
Ppz52zP/RMavgS9m/FHGT4Zvgq+GH4d3hbeGt4AHwmfBt8MD4Ofhnl1yr3eF
b4fPgG+Fr4efhXeDt4G3hAfBu8PbwlvBg+G+8M3wNfAT8CnwLfC18JM+S7gH
vDl8C7wz3B3eDL4Z3oDvcx98M9+nD9/ncnh5eGnG54L7MP9QeD94GPPPh8fC
t8OvwBfBd8JD4dfhC+Hx8BD4NfhieAI8DH4Dbjn/RfDRfN7OnP8CxsfBdzD+
KuOXwnfDI+C34Ib5F8JHMX8n5g9j/GP4VcZ/ZnwWxi+Aj2R8R8YvY/xBeCzj
bzN+FfwoPAF+H74cfggeB78DXwE/DI+H34Uvge+Ch8NvwlfCj8B3wu/B/eAn
4Xvhj+Gr4cfgu+AP4Gvgx+G74Q/ha+En4Hvgj+AR8Kfw6/CvcH/4Kfg++BP4
evgZ+AH4M/gG+EX4EfhzeAD8Evwo/B/4Rvhl+DH4C/gm+BX4cfi/8M3wq/AT
8JfwLfBr8JPwV/C23LOz6jyTKbiX1/DaxPCMrin2xkDmv87xU7z2NWOD4Dfg
p+H/wYPhN+Fn4G/gO+B34RfgH+Bb4bfgZ+FvjS/w2/Bz8HfwdfDT8P3wp/Dt
8Dvw8/D38FD4I/gV+Cd4Rq7xXPgwnvd2XHtXuD98GrwrPIT5H8IvM/9H5o+E
P4PfgH+Dz2X+gnBXeCbmnwcvBHeDZ4ZPheeEG3gq+BR4DnhmeEq4Lzw7PCNc
4OPgmeHJ4UmMf/Dc8OzwNPCx8EzwpPDE8Ciu53P4Tfh3rmc0/B/4LfgP4wfz
Z4Onh2vjC8x/1dTw5PBJwKzwtPAU8HLwEPhSvv+e8Ibw/fAt8N5wb87fB96D
+UM5/1j4v/A78F/w2fBIeBD8gvcHHg3fCr8EnwOPggfDL8LHc/5Z4BqelPOf
ALNMqinhyeAxzP8Cfhv+k/nj4C/hd+G/4Qnw/+AP4ImYPzPvPx8+guvdQX2A
54XnZnw6+EJ4UXghuIUvhheHF4Fng8+G+aeaD56Bg3PgBeD5XcOubZiPrbrA
08PnwwvDC8CzGH/gReAF4Qbeh+s7HD4AHuH3ha+CL4QfNt4xfzF4YXhW5p8G
zwXPCk8Nj2f+V/B78D/MvxP+Gn6/rv690CuYvwKHy8Bzw2fA88BzwtPCl8JL
wovBc7g+ef8Y+Db4Zc53GeNLwYvDczJ+CbwEvCg8O3wY88+ET4LvYv7kjJ8E
78393YbxIxg/G+7L+D1dowFqgRrxJg9yAvMP4Lh3Hb1WM9QONeztJhqmlqlJ
7zTRJLVJTXoXXlpdhTdwj8PPcr5+HF9SZ78+19mvl9bRTzVZbVZzv2D+vYwf
wvG+dfT4HvhgeB94ffgh+ETjPbwp/Ah8snoCbw7fBx8LHwpvCF/L+efheD7v
Ied/lPG+HB/Da1swfjd8kPenTv7Sj/nzcjy/msT8+xk/znjDaxsx/nDnfh4F
bwbfxPy1vDZjHPMf68SnU3htS+8fvAm8Prw4PAjeDN4QXhIe0OZeec8Whm+D
t4Q3gZfx/sBbwBvDS8MD4U3hDeAl4BvhDeF14EXgwfDm8EbwUvDjnXzlVHgr
rxfeCF4XXhS+Gl4ZXh7uAj/R2Y+nwd3hZ+CLq2iEWvF0R7/PrLOenuro8xmu
EfjJjh6f7pqCb4Y3hteDF4PvhPeHe9XJv+6CD4T71MkvH4CPhw+HN4YfhE8w
PsCbmM95D+rkeAsytj1/z3M8mnW3L2Nbd8mz9hn6LPdm/H34Icb3Y3xkiTap
Udsytg+vvai2w9vB3Xn/DFU0UC00B32Q42er5KZ+xkt1zuln31ii1Wr2enAP
3s9//6451972wNrw6vAN8Dbw0vAScH/1F14GXhK+Dt4OXhZeCr4e/s44qXbw
2jmsrx0YX4fjNXhtAOMTlWiLGtOP8R0ZX5fjNXntRsZ3gterskZdq+Z4D3H8
XJXcT414uM49VDte5HzfGrvcU/BuPsM6NUg3+JKS3Mwcbdk2OfaYOppj7m0O
PrpOTmlubs0yqk5Oby2zi2sWvsMYDe/uHqmTwy/QRsNGGpuqaJsxw9hxbRXt
N2YYO4wp5uJqxmV1YopaYk55pfe6Sq75YInWqDl92qyBD+FvqqyNfvytxvFK
vNZVvS/Jzc3R52uTU9xUR2PNNcxBr/DZVMlNDy3J/a0BZmiTg17us6ySm17L
36reG2MKY9fBa8CrwAvA/eHV4ZXhbvDrTfb/qpx3dfjVJvt5ZXhV+J02z841
6dp8scn+Wp7xFeHXmsSLVeDV4G/hfeAeJfHwlSbxZyV4Fddyk/i0ArwS/HKT
+LIivDL8HbwvvHVJ/Juaz78c3h8ez3p6uZN/+Ex9tq906lXvmffue96/H7xN
yX5+t7NfXYOuxSk68XufkvgyWSe+9ymJJ5N29n/vkngySSc+9CqJT+9z/u2N
f/AaPlv3gHsRXgt+o1NPuqZcWyewH66GL4If4foPgk+Fj4PHwQfCp8DHwmPh
Q+DT4RPgO+GD4dPg4+t8/w/ck8ZTPm9Nzv8ZvJvxukSvDmX+GfCJzJ/A/GO6
5P6dBz8AHwtfAZ8PPwgfB18JXwA/BL/N9T9QZY+5197q5HfuMffam536zT3m
XnsdHlElRhorr4FX8fmqgfBRnP9SY4l71PqI8ZXca/C8jB/N+GXwue5pxo+E
L4HPdg/Dh8NnwScbA+BX2+xdY4Sx4j34hSoxxdgyts3627PO8xkD7wHvVGd9
j2pzv3aos76HtLmfPeDl4TvaPN/u8HLwuDbrsWed+z2yjf+wfZ31PLTN898a
XgEe0ca/2K7Oeh7dpt7fsc7+MIYaS42ZT/Psrmd8Tfcfry3YLTW2tfZ2vPYe
42uXXIvX5Nq7gflrcbwary3E/NvhreBN4WW7JeYb+43ZTzaJycZmY/Iz8Pg2
+2OvOut1eBu/ZNs6+3FYG79imzr7+/k2scWYZ+z7EP62Skwztv3QRF+3LdHL
H5vkc9uV5Es/N8l3dijJl35qor/bl+QzvzTJt3YsyY8m7uQ/e5XkDxN18que
JfnNS/CAKjHX2NulxDvQQ7i3iaapbWra3fAHzP+gioaqpS+2idXGVGPrC21i
qzHUWPpaG61XI9SKGUpyeXP6IU0023g4qkTL3+/ovZouq6Fq6XK8dk8TzVV7
1dwJ8DRt9t8BJft7OOv7E/g15vwCT9cm/z+oJJ/esyR3Pruq/i3MzFHNVb1n
eknueXNV77GxwJzS3NJ7rFfmmnRtusZfaKJJatMDJfWyz9hn7Ro2trsHenTW
2/NN1rBr2TVirDYmmmuZsxkre7epN+4vqZ/3bFOP3V1Sr+/epv6cUFL/7wt/
734tqZd3a1Mv31niF/RsUy/eU1LfG5PN9czxjNW92tQ795XU83u1qffuLan3
92hT395V4h+4pl3brmm1xz3dvbO/rBeMEcaKvTv7y/1m7dqns/+8ZxsZr0ru
pTWstayfeXibGtpa2u98aJs97l43xqiNxjxjnzFujjYxzdhmTJytTQwxlhgz
1EprIGsh95Repjmruat7Vi/RPe5eV7Mf79Q/xgvrIesBc3ZzdzX80SYxzlhn
zFLbp2pzLfuV6I85sLmwe1bv1RhnrDOGqjXGCGOFMVCt25/3/8DxIyX+yAHw
j35WiT92IPwT/FjJet6sjT80uMTv2riNnzSwxC8zxzTX/L6OX7FGG3/r2hK/
b802/la/Er/OHNpcekSJX7V2G3/suhI/cPU2/ts1JfXram38tKtL/IVt2vg9
w0v8n03b+FmDSvy5Ldv4T7eX+GtbtfGf7ijx17Zo42fdVuLv9WjjNw0t8ec2
b+N/3Vri3xnjrN3MMYx9W7fxo4aV+G/d2/hZQ0r8urXa+Hf9S/zMddr4ddeX
+JnGUGtPa0Jj6xGM/+mzL/E7dm3j940v8eOMmdaG51SJpeYw1lrWaOY25tzm
3i+U+COHwb+rTSV+ylHw38YCWD/hSPgv906J33AQ/LNrscRfNGZb+1mTGssP
5u8Xjp8o8cOsWaxdBpT4reu28eNuKPE/1QBrZXM0tcGcwNzAHGZOtbaNPzem
xJ/cpU38HFfiR+7cxq8dW+JXuid/g58q2auHwL+qjSV+mJ5E3879MZ82RzJX
MkbP1cm3T+l8H+sBn7FerM/EZ+8z02t1DfosXSN6sT5D144ell6WHteqbTwv
vS89rpXbxGDrQ+tBY7NrXq9bj9q94JrVG9OTcS27pvVm9MRd69Ybao8aZH1h
TNWL9B4Za92TetfeI/eqz0gv2Jjrs/Me6A0aM703PiO9S2O2z841qlfsM3Lt
GuP1St2Dxn5jsN6qe8rYbEzQO/UZGCvcs3rt46vsZXsw9mKsd5Zp05Ow/rE+
s75zTVjvWY+5VvRQ1M7pSupb619za3Ns62M9E7V++pL6W49Ar0CPQC/KNaW3
bv3oWtNjtl6vSuptNU4/Y9kS7TMm6eXr2RurjCn2GuwpGGvc83r7xqh/Y0HX
9B7sSbh37UHZi7oVXqpN/WqtYs1ifWlMVOvdo8ZK97S9CnsA7nVjkL0CewTG
JmOmvQJjmLHUmKT3b0w0Vhlj7BUY84w9rjHfe1XJ2lMT9cKNOWqlmqyXbsxR
q80x9O7Msc09rBmsHfT0pm2To1iLWFOYu9iDsxenZ/lHkx6NvRp7dL81qWet
n62Xrbf1gPfo6Os3TTxOvU57hn/C3Uv0V72xdrSnZX1r/W09bM5/cif/mb5N
zWLtYs0yd5uaxdrFnGmeNp6p3qk117xtemj20uyRLdymR2avzB7Wom1qMmsz
6+kubXpa9rZugRdr09OytzUQXrxNz9LepT3NJdr0PO192hP9q0nP097n0fA/
TWKSvRI10FhlTLKXouYYq4xh9lrURGObmmRvwhipVpnD2AtRg8xtzKHspahR
5lb6S9bm5qTmpmqi/pD+kVppTmUvRs0y11IT7NWoUWqFPT97f7fBS7fJCaxN
rTnNFaw5rT1Pr1KLW6Naq1rDljY5mr0YNdDczZ6wvWF7wH83yV/1Ro/t6I89
ZHvJx7gH2/SE7Q3bw12yjebo5ZsDqkXncY5JOP6hTr/DGs5azppK78L8X69p
vSr5th65Xrke/s1NPHu9ez30W5rUTNZO1lzj4Qv4m0xtrtNPsGawNpunpJYw
Z7eWmrskl7cnYG9AD/+mJu+xF2GPwnN5DV7LvCW1gDWdtZ0ezLgmnqve6/pV
6hU9dL10ewwDm3iqeqt6tPc1qeH0yhcvqe30UPVSjVn3N6np9MaXLKn19Dz1
PjfitQea1Jh66UuU1J56wnrDejgPNvF09Xb1ZB5qkkOaSy5V4t/Zc7H3Ys/p
/CYekl6SHtLYJj0ie0X2ZC5s0iOyV8Sjqy5qsufdC1uVxAJ7Wva27Gld2sST
1pvWA3q4SQ6if6ZfZm5ij8Nehz2yy5v0WOy18E91XZOemr01ezDXN+kp6O2v
VtJrsMdmr80e3A1N/EZrV2vYY4yHTdbqliW/B/iqSWzavKQ/rh+qN6tHe26T
NWjvTf/TtWlPzt6cPbRLmuRE9mKsicyV7DEYGzct6T34Gwdj52Yl/X6/iL0a
azJzra+bxJItSn5vYE6s32p/1FzZHp29OntyFzfpkdjPX72kd6Knp7enxzim
Sc/G3o09nsFNzulvGXpX+Sy/o78F6FXlu+txWx+fWeLnGMPUht1LYpsP1li8
R8le1sPRy1mR14Y3uYf+tsL6yXurB6QXpOc/sonnr/evBzSiScxUW3YtiaV6
stbjZ5TU38YQtWi3ktiiBhjbDy7RBjVKLTiwRLuMSdZW+5bEKjVILTq1xC80
xzPWH1KS++kx62+cXuInqWHGtp1KtE2NMvbtUqJdap6xcecSLVQTzMXOLdEK
PV29XT3Y0U00wlzuvBLtMCcwV7igJFfQo9Wr1TMb1STHVXuOK8l91Ti15oQS
7TMnVYuOL8lVrSnVsmNLak01z9zjpBItVBONrSeWaKWaau7Vt0Rr1Txj/8kl
WmgP0F6gPb5BTfwP/QxzLHMtNdTc9awSbVUzzI0uLNESY7i53vklsV2NNfc9
u0R7rXnV4mNKamF/Y+NvbVbgtWFNepT2KvVzhjbJCc3dLi7JFc0ZzZUuKskl
/c2I/o9+i/6Mmm2ufE6Jlttjtde6MK/d2HRqdo6fKanljTk+q4VKYpGe82Ed
vdKL1iMwFi9T4h2Ys5sbXlmSy1uDqyWLldTmaoKxrZRohR6YvUM9Zb0xr8FY
UZdcmzHcvdO1JLYb870X85dogT1ae7X2+K9ssqbUttlK1pprRi2atWQt2ZO2
N+1W7d/kPdOqxXXOZf/GXpU5sLmwPW973/aEr2rSs9bvsh9pf8ffFPjbAnvO
VzTx+OyN6Ynr/emx2zvTs9N7NwYYa2cpiQ2eczr4nzqfNaBJ7JqipB/uM/Na
Zyx5lmqgnzV1iTb6mdPAf9W5FmO+WjtpiRao6WrDVCVar+b7+4kpS3IBa2J/
C6BnZK3smlI7ZipZa645tWPmkrX4WBOtXrSkH/pIk1i6cEl/U001dnUr0Vo9
FrVwkRLvRU011i1QorWew96qPRLPrca61xcs0V41cEr49zraqOdk7FyrxAs2
R3AvzFeSO6hhauvkJdqmBps7zFGizWrw5PDPdbRZDZ4C/qWONqsZHFa/1tES
NXVq+M86WuszV9smLlkLapql/291tM4cxtgwZ0luYw6ltsxVklsZ491rbUns
vwyeCv6jzu9bfOb+FmKhKmvBnGJS90adXEPNMlebvUTL7PmrTWuU/BbAntKh
nfzResFnYu/ZHpPPynrikE7+be7hZ/rbGteE1+JvBtS+NUt+S2CMc29NUxL7
1CSvrSnRKnMKc5vJSnINNdS9Mm2JtrrHzI0mKdl7/wcZRs9+
              "]], 
             Polygon3DBox[CompressedData["
1:eJwl1gWUVdUaB/C7aJB60g1KtyhdCkqHdHd3d3czdJfUzNAMQysg3d1h0uFb
oqCk73eea81/1v1+8+2z99x77j47S+setbvHCIVCFyW2zM0SCoXHD4WOxguF
LqmrpgqFvmE72BX2K2vC5rC17Ei8f8dWZvNYBDvGLrNqbBZbwfazU6w8C2NL
2bfsOPuczWTL2T52kpVj69kB9iN7xtqxGWwZ+46dYF+w2WwNO8wusCpsJdvJ
rrK7rCnbzk6zJ+w1683Wsf3sB/aUtWWr2W52nd1nzdkudo79xt6xfmwDO8R+
Yb+zzmwrO84esJesO9vMjrJ77E/WlUWxE+wh+4v1YFvYMXafvWDd2Cq2i11j
91gzFs1OscfsFevFdrKz7Bl7y/qySLaP3WFPWBsWwb5jt9lj1pqFs2/ZLfaI
tWK72Xn2X/ae9Wdr2V52kz1kLdkOdoY9ZW9YH7aG7WE32APWgm1jJ9kj9jfr
yeZKMvYxy842pQyFfmYH2UX2E+uoHi//qDNIUrZA3zj2Xp1OkrD5bCx7p04j
idk8Np3Fd73kQS9bxaaxeOxDlpatZGEsAUvJ0rPV7IfgXmDR7ACrFNx/8gFL
HayHrdE3kyVkaVlGtpbdDu5BFsX2sQrqwfKHOrbEYlP1DWF/quPG+/f7N40N
Ys/VMYOwKWwUe61OJh+w2Wwke6X+jyRgs1g77/PX5u3B+rPf2Gh9b9QpJCGb
w6ayuPqSBu8X+4aNYH8H76f4U2gmG8ZeBnMGa2RhbAx7q04liYI9g3U3b2eD
JrFZLL6eofIiuJbEYdP1DWd/BePET2gGm8xiG5swuCZbzu4E9z7bxvaziuop
EoclZqnZCn2LzbuRnWY3WC09S9gmdobdZLXZMraFnWO3WV22iG1gp9h19jXr
wbqwyWw2+4AtZZvZWXaL1WEr2HZ2mf3CGrEFbB07wa6yGmwhW89OsmusJlvO
otkl9jNrzDaxI+wu+4N1YfNZJDvOrrDqbCM7zH5lz1kn1obVYN1YX/bU+zKR
x2Txgs+dLWWTWCyWgClDy/yawGKwOCw5W8JmsUQsPcvEwll7czRmg9go9pq1
ZtVZV9aHPWHXgz2frWQbWWH1reC7ztawLayY+kawb7NVbBMror4ZPFfYaraZ
FVW3NUdN1p31Y8/MMZANYYvYapZeXx/Wg01n81kS1p8NYgvYSpaGNWYFWU1W
l512vZ38S1aXNWa/sN2sAqvPmrK77AzrzUazKSyZ+mwwNxvDprLkwfNSPmaf
sqJsv7G72FesHmvCfmU7WHlWhzViP7Nu1teJTWQzWQI956UfG8ems5TB3iJZ
2WesGDtg7DnWl41l01gK9bVg/2Tz2AqWU31VxrG5bDnLob4sY9hstpRlU38n
VVhj1pI9NEdH62vKhrAx7A3rylqyEWwC+4ftMbYia8CasXvsW1aZNWIt2AN2
Ific2HgWxlKpj0gj1on1ZH/rO8waso6sB/uLXWFj2Ry2jGVXH5IGrAPrzl7q
u8RGs1lsCcuq7mzNzdkwNo6909eJNWND2Vj2lu3VW4k1ZM3ZfbadlWO1WUP2
E1vBPmKFWBG2j61lOVkxVoodZhEsNyvByrCjbB3Ly0qxz9lxFs5yseKsNDvC
lrMMLB8ryHaxhtacn1VntdkJtlBfKpaD5WZRbB5LzrKyHGwzi2R5WElWlh1j
c9iH7COWjW1k81kKlo3lZFvYApaSZWe52FbWwlo+Zy1YO3aHNWGlWBPWit1k
jVgBVoPVYafYKtfLxgqz4ux7toilZjlZHraNNTA2H6vGarGTwTNAXxqWi+Vl
0Ww1y86KsBLsILvIBrAJbAZLHZxVJAcrykqyQ/qWsLQsN8vHtrOm5i3NmrLW
7AZrxsqwZqwNu8Was7KsOWvLbrNlrpee5WUF2E62lKVjeVh+toMNMHYwW8hW
sXR66rKMrDT7gu3RdyBw1pZ1YX8EZxp9i9kedpSV0TOZLWA72SFWkk1i89kO
dpAVZ1PZIrabHWGlg2ctW8h2scOsFJvAZrDNbA8rFOwtLIxtYrvZJ2wkm8Qi
2DaWh01k89h29j0rwWplCf3/oJGJBS8XBWcQLyaycBbFcukbziawtWwry82m
syVsLzvGyrLaLAnLzz5h61zvJ76NHWLnWUP1MH0j2XIWybIEZxU2gi1jESwz
G8KGs6UsnGVig9hQtpitYRmCcx0bxpawtSwjG8Ums0gWzfIGezgbyOazb1ja
4HnCurNpbB5LzOqwpKwAK8Qi/R8/8ih2kJ1jDYK9Xl9PFsYWsKSsF+vGprK5
LBHrybqyKWwOS8gOSn3WnnVjL4Jzor4pbB3bzvIF+yubxjawnaxAcFaRwuwr
VoVdNHYzK8IqsKrsEtvCirKKrBq7zPYFnxNrzTqx39n+4H9mbVhn9px1MG8T
NpiNZq/Yen2FWDlWkZ1j9fRlYmVYObabbdVXjFVi1dkV9j2rx9qxruxPtpF9
xr5kldkFtoF9ysqzSuw8i2YlWVX2NbvOupi3BRvOxrP3bJu+EqwKq8musROs
HevHhrHY6uPBuYb1ZUNZLPWx4BzH+rAhLGbwPDbHVLae7WD52VFpzXqzwSxG
8CzXN51tZLtYQXZS2rP+bDiLo26pryrrzHqxx9ZXn2VmZVl5tpfN1puYZWSZ
WQSLYsVZZVaDXWWnWAc2gI1gcdWnpSMbyEayeOpW5qjGurDe7JGx/wObJ0rW

              "]]}]}, {
           EdgeForm[], 
           Directive[
            Specularity[
             GrayLevel[1], 3], 
            RGBColor[0.368417, 0.506779, 0.709798], Lighting -> {{"Ambient", 
               RGBColor[
               0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
              "Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{2, 0, 2}]}}], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1: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
puQjeLYK+Dvsj0TzWHgQXF9z4IfgBvC38MPR5+697D2nOvcr+EF4O/gLeCBc
Dx4D3wvXhT+HB8DbwJ/B98Nbt/B+Ub05lLX4BPs90X7jg+z9pxrzY/ju6Dr0
I/iu6Fr4Q/jO6FpVPkA17P3BZ0v1733BZ0619r3KEaJ1sKPhnaO1kWODayHV
sMfD1ZLzW7276nBlmd+RzqXq7ruYUyM5T5Bf7Bqt1Zyu+F+V/8vn7RStxR2j
+J+cS3zJffaP1lLOC473ivvnKzZW5XWK4XtF60hnKh/Bvj/8GZ/dM1pTOkP5
RXL+oD3TItmHfw4fHq2LXsKcjtHa4HHwkdF67GXw0dFa6xXw6dG66HXwcdHa
Zg/FoGjtsSd8TLR+eyV8bLRm2x0+KlrvvTy4dlUNexV8WrQe2wc+I1qDvT74
PElfvSH4DEnXvTF4L0uPvSnYj0pnvhneL1qzOjfYR6oOvSXYZ6v2vDXYH6v2
7AsfEa1FXxqcKyhnuA3unh3n5AP3jtbZzuL/+0brYOcEn4+18IfB52YN/AH8
qGIL/H7wuVmn/QA/Jr+rfRK8N3WOnlf+IJ8Hj4Efly+U74XbRWsdRwbvX8Wv
54LzEuUng4LjhjSWAcFxTLrNwODYJU3pgWB/L93mQeWJyXF/TKXPwSz4WeVW
ybnBp5X2wdKOhgWf71Xwe8F5uPSiz5ULya9rfvBZXwa/FexXFH9fC/YH0rje
CK5llMO/GRyjpFndHewDpEe9HhwbpXfdqRwwus5tG+wbFsKvBsdGaV/3BPuJ
ufCLwX59BfxOsL9ZCb8LPwVv1lmA94nWLc8O9v3L4beDfcwC+JVgHzMffjnY
r/wDvxDsI+fBL2mds3NxreH32e+7Ef7kquzcVOduenaerRr8z+w8WPXU/Oy8
WXXQjOw8WLXYP9k5uuqgSdnaonKwedl5uWqludn5veq7X7O1ReVsE7N/p7TE
ydkapfK9P7JzbmkCC7Jza9VWC7PzddVWc7LrBNWJv2f3NpTvTcvWr6UbTM3W
8aUPTMnOq5Tj/Zatkyr3W5RdI6kenJ2du6tmvzo7L5efKQrrvNJzWhbWcNUP
2qGw5qv+Ti6s50r/aVe4lyCdqlVhLVj1SGVhnVd9ig6FNTX1R3YsrNmpP9K2
sE4nTaxNYf1OfZa/s+sNaTh/ZdczqnlnZtct0hZmZdcb0mFqFNbQVdtuUVhD
V71fs7COr3q8dWEdUD2d9oV1belvOxXW/tTH2Zjdk5D+sz5bx5em9FFyXqTY
92FyPqN493FyfqUYrdxHWkRXPvNpVd6r8/R+cs6j2P1Jci6neDomOWdTLP4g
ORdS3HwvOe9SbP1Sv7+sKkYn723F+nHJe177+Zvk86V8QPFOddABPMMXyTme
cqfvk8/O9sofks9pM8X3ZN+iXOu75DOl/GFDdj0p7atRtB7Vhv+vyK6rpcut
y67hpemVFe4DSUOrVrg/JD2heuGekHSGUuHej/S6tdm1vfSrTdn9IWmGm7N7
MNIA12TrAtLTVmfrAtKylmTX4dLulmfX3tIDV2VrBNK4VmZrDdLllmXX89IY
l2bX89IS/8uu4aVD/pLt31WP/JutKUhvWZytNUi36VJYI1BN2ia5P7UFPDA7
9qtPFwv3vaQxblm4f6M5dQr3rqTR3ZWdW0j3rl24rybd5u7sPEA6+fjsOKT3
dW92bJOuXrdwn0baYP/sXEe67qDsPEA9qQez46V6THdk5yvSex/IziHU17sz
O4eQPrxN4V6atK9U2KdLswqF+3/SkQZkx2z1m+7Pjq/qRTYu3I+RztakcJ9A
+lt54X0jXa5p4Z6KdL+Kwv0D6WYNC/ftpOM1KqyzS2erX7hXJz1w+8J9GumH
uxXWN1W/35cdJ9T3vCc7r1KvoWvhul116M/ZcVr7vF7hXqA0vUey8xj1fydk
x0j1WbYr3IOU9vhodv6kHnSDwj1FaY/Ds/Me9cT7Zeed0v8fys6l1GvrVLgH
oD7F0Oy8Sv24bQv3NaV57lK45yGt4/bsekk9hVqFe3XqYXUs3FdQD27nwrq/
+hS3Zecc6gU0K9wnk0baonAvTb31rQrr9dKfh2Tnheo/7l5Yw5U20jNbC1Mu
MTg751N/8+HsHFE9wc6FezbSW4Zl55HqM+5auE8jTWbrwj1aacXXZtf/yof/
D6DainY=
              "]], 
             Polygon3DBox[CompressedData["
1:eJwtmmWgXNXBRV8SYucmBCLMjUFmILgGd4q2uNPiUKS4u7u7O6S4Q0sNChR3
d7dgARICARKS8K317fsHWNz3Zu6bObL2Pre94z4b7929q6vrQv4xE//+sO7q
GtWtq2tC366uj0d3dW0OnwQvXHV1nQAfCt8Erw9fCB8G3wxvAF8ED4WXgX8q
XV0z4NngJeEf4F/hGl4angxPh3vDc8Pj4O/hg+Dr4XV4vfPgWeBF4O+4PhX+
AJ4D/pb7+wj+I3wKvCg/fxL8ETwXPInrn8AD4IX9eX5/Ctyzuf4pPAHuBY+G
P4MnwhU8P/wVPBneDb4UXoXXPwv+pLnfH3n9z+At4JPhRbh+Ivxf+Bv4HPhR
+EH4W/hc+DH4AXg8fDb8CFzg+eAveb8f4b7wvPAX8A/wwfAN8Lr8/PlwH3ge
+HOuT4L7wwvC4+Gf4Y+bv+cH7u9TuB+8APw113+Cd4cvg3/H650Nf9q83mR+
fhz8J/hUeDGunwzfD38NnwX/Dz4EvhFeD74AvhF+HT4Mvhv+C3wJvDJ8Jnwg
/Fd4bfhc+HT43/B28DXwGfB/4O3ha+Ez4fvhHeDr4Nvhd+Fj4H/A58OPwLvC
Y+EL4Ufhv8B/hS+CH4N3g6+HL4Yfh3eHb4A3hU+AF4SPg6+En4X3hW+DT4H/
AW8NXwmfBv8L3ha+Gr4Nfgc+Gr4PvgN+Dz4W/id8J/w+fBz8L3gs/Ap8MHwH
fCv8NnwU/Hf4P/BX8Jnww/C/4S/hM+CH4H/BX8Cnww/CN8CvwYfCd8E3wW/A
h8P3wP+EP4dPg/8LXwE/A+8D3wrfB38GnwLfD98CvwUfCf8Nvh5+FT4EvhP+
O/wpfDL8H3hmeCH4G8bTL/DN8JvwEVy/F74X/gQ+Cf43/A94HHwq/AB8Mnwf
vBV8BXw5/DS8N3wLfAn8BLwHfCPc6uT9b+T9nnJ96eT1boafcT3p5O+5CX7a
9aaT978BfhIe3snndyv8HPwKrz8Ifp3x/ho8hOsfw9dz/Qn4Va4Pht/k+uvw
SfDf4S25n8vhw+Fb4A3hi+HX4CHw2/z8G/Dx8L3wH7l+KXwi/Df4T/Bl8K7w
xfBK8BnwLvBF8Irw6fD+8Fj4D/A58LBOvs9buL9n4R25fj68HNdPgS+Dn4L3
gm+GL4WfhPeEb4J3gi+Al4dPhXeGL4RXgE+Dj4BvhTeCL4FPhf8JbwNfBY/o
ZDzexvs/7/fB9aVc/+Bp8OydrA93wC/C7U7Wu7vhV+AO/B18D/wqPKqT9fEu
+GV4ZCfj/3b4BXiOTtbHO+GXXE/brEXwb3y+e8NX8f7Pwftxf7fDa8IHwXPA
R8HvwSNdv/n5D1zf2vm8ty3Zr8a1s55vX/L9fdbOerVdyf71STvfxzYl69uH
7XzeW5asX5+3s37uUPJ5fdTO57tVyX71cTuf79Yl6/UH8Hl+/yXf5/vtrK8b
lay/E9oZT/uWrH9fwNe5npWMny/bGQ+7lYyf99rZ7zYs2Y+G8fcuC/8M/waP
b2e/2LNk/fq2nf1675L165t21u+9Sr7fie18//uVrLfftbOf71OyPn/dzn68
R8l8fQReDZ4FPgB+FF4dnhU+EJ7Uzvg/tGQ9nn0oa6PjGR41Nw7A/f4eHtzs
/9PgP8BDGl/4BV4F7t/s9w/weh34e77PveApXF8THtj4xFR4LXhQMx7v5+fb
8ER+fk/3X3gM3MX1feCn4R1c/+HD4cfgjeCR8EHwU/BmcBs+DH4Y/h08M7wf
/D94VXgAvD/8JLwpPAo+FH4C3sTxCB8CPw5vDM8OH+x6D88Kv8r97QE/BC8O
d+P6vvBX7eyXu5esN++24xcblOyn77TjY+uXrB9z8PmeDm8Mt/l8R8Pnuv7A
88ALwNfCu8ILwfPCV8E7wfPD88BXwn+G54NHwWfAm8AdeH74GngXeEF4Pvhq
eGd4AXgu+Bx4C3hueE74bHhzeDTchs+EN4XnhBeEb4f3hxeGF4Xvhg+Gx8CL
wHfBB8GLwXPDV8A7wvPCi8H/hY+HF4cXhx+CT4SXhMfAD8InwEvAHfgseDN4
LngJ+GH4JHgpeDl4InwvvAK8JPwCfD68NLwU/CJ8AbwM/Ayf/47wQvARfP7f
w/fAh5T4yIvwfvDy8LHwm/Dx8Dol6++z8J/hheEj4efhneFF4aPh5+Cd4EVK
1rO34RPh9Ur2hxfgXeDF4GPg6Yz/teHZmvn/Vjt+s27J+v4SvD+8QonvLMvf
8xH8V3h5/p5l4A/hsfBy8NLwS/CF8LLwG/z+cfDaJfvN6/Ah8O9K/PDVdtbf
lUv89zX4YHiVEh9/GT4AXhE+3v0XPhBeqSRPzOD+14FbcBfv9xu8LlzD3eAe
3M+G8Ai4JzxLJ/50VYmPztyJf1xR4ktVJ350aYlv9O/Ejy4v8ad+nfjqZSV+
NGsnPnd1iY9372T/PLPEh3p0sr+eVeJrAzrxpStLfK104kuXlPhU30587+IS
XxrUiR9eW+L/4xrf/5n5/4X7SZM3foG/hLt14j9nlPhU7072u/NKfLJnJz53
TokP9+rEX88t8c8+8MvwRSX+NVMnfnV2ia/+3M7+flSJL0xpx8ePKfHDX9rx
3aNLfOxd7m8E/AX3977rDzwcHge/5/7Z5JWf4M/hwZ3473X8/uOOX64Pgz/l
+rvOB7iGP4TfdrzCQ+GP4XccX/Bs8Lvwm/AbcAt+H37L/bHJM1Pgr+CBneSD
a0ry1ox28sCpJX48uR3fPKLEJ39tJ18cV+IPP7Xj+0eW+NI0+H/wySW+/mM7
/nd4SX7o6iRPnF7i21PbyS/HluSH39rJH6eV5KHp7eSVU0p8+n3uf3Z4PPf/
oeOX8f0XeAzXZ3F8w7vDS8AD4e8a3+pRkk9/gJeH+5Tk08nwinApyX8/wivA
fUvy3iR4Obh3Sb78tsnj3Uvy7/eNP/QqyZsTmnw+U0ke/7LJl1O536/dnxr/
/xUerx80+Xoa/I3jl/tfHx7G7/fg/rvDG8DD4ZngLng9eCjcHZ7Y9AU9S/Ls
z/DKcL+SvP4TvBJcleSNH9rx6cNK8t34ph+Yzvt/q9/Ai8Iz4O8c/7zfFnCH
n+/F+/WE/wjPCfeGZ4P3hZeDa7jA28Dzwv3gCt4Wng/uD/eFt4bngSt4VngP
eEl4ENwH3gqeGy5wb3hLeDTcF+4Pbw8vAA+A+8HbwfPDM8O94D/Bc8F94AHw
bvDi8KzwQHhPeCl4MFzDh8OrwcPg4fBR8JrwSHgwvDe8DDwbPATeB14WbsGD
4L3gpeEh8Ej4GPj38BzwMPhIeA14BDwCPhpeC54dHgofAa8OD4db8GHwqvBQ
/aHxu15V/v6FuH4HfADXF9EHmvW/T5XPc+MqLqqTmk10BF3hNucovGOVuesc
tivQAXSBB1yj6+z57v06wtmOBfjAkvc82u6A/36FsdEd/qTF99r4aM8qn7f3
5L3pKEeZZUu6JDsjuyMdVBed0znS3M/+zc/7/jr0fs39en86/b7N32PXMdYe
xb0afgnuVJn7rgF/qOMAuoB7/Fp19nj3+l39Tuo4rW6rE3ev4wi6gg5hFtLx
dD2dbd86zqa76Wz71HE23U0H3LuOA+gCOsDddZxYN9ZxVq3jKLqKTrJGHefR
fXSY1eHjq6z1rvl2H5NK1hbXGLs/nUK3+AC+q45j6VoT4IfNslWyoRnxoTqZ
w+xhJrIr0sl1cx16TB3H1rV19KXqZEKzoY4/sI5T69YD4Ul8v6+UZH0z/4+t
OLgurqMvUScTmA108MF1nF/339w5UcfJdfMl4CF1nF631/mXhAdWWVtcY5ap
46y6653uqXWcUDc0E9ldmYnMRq5hdlfuGcc249kuyj3puGY8m3V1Tt1TJ70G
3r/KeHd8X11nz3bvdg+y63FPd293D7cb8DvVX0+s8l3rdLqd/+/aOnu8e70O
YBfjnufe5541tvl+z2/e3+/PzGx2NgPbheh0up1Ot1kd59V9dc6N6zi0v/98
c7/Ob13+imY+j6myVrhmbFnHIXVJHdJuVUfUFXVMu2idU/c8tFu6Sh1T19RJ
7YLNmGZN17AN6+y57r06gd2WjqQr6VR2d2Zgs7AZ2e7DjG3WNoPZ3ZjBzeJm
cLsdM7BZ2Ixtl2WGMEuYQc6tk2HMMmaYY+tkErOJmeScOhncLG7Gtls0o5vV
zeT/3z2OjtvpdHafZkCzoBncLkoH0UV0GrtNHVVX1VHt8nQ8XU9HtKvUWXVX
HdDu0T3TvVOnsSvVkXQlncVuUafRbXRQu0UdRpfReex6dShdSmeyq9NRdVWd
+eZmfJ7XfL6OXzO92d411rOB7lWyuxl+njodjV2NjvltK06pW+qM41txPt1P
J/yiFWfUHXXCL1txRt1Rp/yqFUfVVXXUb1rplOyW7KiereOguqjO+XUrZwie
JehkE1pxMt3MDum7VhxUF7Xj+7yVTuvuZr16sU6ndU+znrme2ym+3qw/7i92
ZnZndlzP1OnI7MrsuJ6r04HZhdmZvVCn87L7siN7vk6naLdoJzmulU7yzWY9
+6yVTtNu047u6ToZyCxkRrFLNqOYVcxMds12nHaddqSP1OlU7VbtUB+v05na
ndq5PlanY7VrtYN8sk6GubZZ7x9s1u+xzf7heq7zX9es967nrhmuHSdU2Qtc
A1y7DqiyNrgfu17biXzaSodrl2vH+0Qdp9ftzVCerZjpzHZmOLtlM53Zzgxo
V26mM9uZ+ezC7UztTu2An6qT8cx6ZgbPYsxoZjUznF23mcnsZIazyzZjmjXN
iJ6FmPHMembM+5r93P3MDuHlOmuOfjV/lbVogzr+NV8Vn3JPti/5fZW92j3Y
fmLNKnvznnX6l9Wr9DF71elP1qjS17iH26+sVWVvd01xr9m5ylrjmuPev0WV
tUgH0n12quJGrlGuTbtUWbt0Ft3lz1Vcao86fdJqVfoWnUlX2KyKS9n52f3Z
+Y2u04HZhdkJzlWnI7MrsyPr1HEo+6VNq7iVHaFd4Rr8v7nrjBnHzgVV3MCM
e16zX+gT7qG6y+ZV9lb3DPeOTaq4oQ6qi+q869fZ01yLD6qy161dx5/nquLH
29Tx2aWq9EHb1vndpav0Vb6GPjxvldder45vz1PFp7evs7csW6Vf26qOfy9R
pS/bro4fL1OlD3NPc29bvEo/t3UdX16ySh+2Tp28N7qKP69bJ0/MXcW3V6iT
J1pVfH/lOnlkWBV/X6VOfhheJb/okLrknFX8e/k6+WO2Kvlk2Tr5Z3CVPLFc
nbwxpEre1GF0mUFV8uiKdfJOXSUfrFQnHw2tkifslOyW7Hg8WzNDm6XtGDyL
8DXGNP7qa9vZDmy+f/1QX5y1GU/6lZ2w3bCdrmfFfsZ2mc4ZP3s73kHN/uFZ
hBnRrGhG9KzXzGf2MxN21fG/7xtf1gc90/Zs2zPkia1kRrOjGfa3Vjpnu2cz
qGfPniFPanxffzSDmkXN3J6FmbHN2mZyz1rN0GZpM61nuXZadlt2dMPrOJF9
4AJVXMlMbjY3g3sWbIY3y5vhPds145v1zfCeTZvJzeZ2Ap6dm+G7N35qPjGv
dGt81nxiZ9Cj8XHPus3YZm0zvmfJOpv94kJVXM4Mb5Y3489oJeOb9e0AprfS
AdoF+jd4FuWYMvs6hh1rjlGzqWPYsesYM7s6Jh17jiGzpnPKseWYs+twjjoW
HfNmTeeIc8E5YbZ0jjlXnMOrNb7o3HZOmnWd085V55xdtGukc9HOwu7Czmha
K3PErO8a7dxxDJuNnfOObTs5uzk7rSmtdEx2TXZ0v7bS0dnV2eFNbeWM/Ycm
H05uZU6arV3znas+I+CzAp7J/9RKR2ZX5pn7L610IHYhdp4j63Sedp9m4hF1
Ol27XTO0Zz2e0XtW7zMIP7cyx1dtfNi5r0P147+fL3ErnWZm+MUS19EppsFX
V3ENv2Nd5/2S7945oAt9UDI3dJRf4auquItzyrnzYclc04FmwNdWcSMdyGx7
XRU30rmmwldWcTGdyOz9aIkr6URT4CuquJIONB2+poob6TS/wJdXcZ1Rdebm
9JI+eI46c39aSb+kU7o29KjS9yxU57PtW6XPWaDOXOxdpZ9ZtE4/1a9KHzN7
nbn9a0l/tUidPquq0s/MW2dtmqlKf+R35NyfUvLd+R06d6eWfLfOeefuLyVr
wcJ1+q9SpU/SMfvDL5S4p443E/x4ifvpaJPgC6u4m2uQ7vdqydrkGNRl3y4Z
m45R3fmdkrGrM/eCnyxxaeeAbvxuafo8uA/8dIlL69wFfrbExV0jB8Avlayd
OnUFP1fi2jp0X/iZErfWyXvDT5W4ug6oK59XxQ2dU7r6WyVzzTmgy79ZMjd0
zJ/cO6q4p872M3xZFZfTSX+AL6riqjriZPiSKu7onDArvFEyV3TaH+GLq7iu
Dt8TfqLE7Z2zuvVrJXPZOarrv14yd13zzCbvlayFOncP+LESF9cZPOvS4XQJ
M7pZ78Aq2d093rMvnc69387ALmVAlS7BDsPuZpYq3Yadg93PrFW6CB3K7mNG
iVvZWdi9zFyly9DB7CK6qriZTmU30q2Kay08NH5oB6a/2SGZldtVuiU7JrP2
qCrdkw5nN/JbidvZudgF9a/SxTiH7EZ1AueWnZ1dqI5il+ec9KzGOeVcdU7a
/TqHnKvOKbth54BzzTlqf2Lf4ty1g7P71FHs5nQmzzZP6xaXcg7alepAzk3n
sF2rjuPctqOyi5i9Sndl52j3quPYRTrH7V51Jue+c9BuV6dxbtpp6TIjq3Rd
dmB2GSOqdGN2bnZNH5V0cTq6Z6c6qe6uM9tvXN6tcenRObvzzNZnPXwGwWcR
fObAZ+l85sBnD3wmwWfpfGbAZwd8BsFnv3wGwWcRfIbBZ698BsFnEXzmwGer
POPzrM893Gc7fMbAZw18ZsFnSXwmwWcTfCbBZ+vMEJ796uRmC9cwu3Cdz7XN
M0rPKj1D9NkRz5w9e/aZA5/t0tF0te9LujEdQ9f4uKQb1bF0rZdLujg7ObPA
hJKuzo7NrDCxpHszE9k168xmJZ+p2KH5/Ox/fcbBZx18ZsJn8Tzz9uzbM3Gf
pbE/2qi5bh/kMxUbNePFZ91WrTJ+Tm++D53fs2AzlVlAZ9+kua7L2+fZtzoH
l25+3/u5rHk9+1r7J+eQc8k+w77QOefc+z/6ONU8
              "]], 
             Polygon3DBox[CompressedData["
1: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
              "]]}]}, {
           EdgeForm[], 
           Directive[
            Specularity[
             GrayLevel[1], 3], 
            RGBColor[0.560181, 0.691569, 0.194885], Lighting -> {{"Ambient", 
               RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
              "Directional", 
               RGBColor[
               0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[
               0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[
               0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
               ImageScaled[{2, 0, 2}]}}], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1: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
PMhPaYakfv0Xv7dxtKceGOxR5bUHBc+cpEv/JKd9tKcbS6xttO8bDbeJ9nGj
4PeDNdtX5O8I1nhfwx8Ea8Jv4AuTz4x8utZI2qwc/35x8pmX35+e/OzkVa9P
/pvl9z8Jnt39x3VmJj93eVjNz6SLjlCdjNbzx6gORev/I7Xfk8+z5gyTk2uK
5gO7g2doOT73BM8DSwSfO52XLPjc6Qzu5fceGO0jjiI2JblmaYZwQ/Jzl//a
WHxO95B/Y/L6yYttVf8g/iPxq5Kfo3z6NcnPVx58UvJ51mzkLfK7kP8T+dvg
rvDP8ITk+iW/NjG5DmreMjW5Pmq+8ab2Cvk/kH9l8jppPnBd8r7RzOR5rTc5
n5DzHNwY/hiekbzvNXO4NnkvaubzAjlNyNlNzqzkva75w9XJ+0xzBs1c5SMO
Cp71yqeUCZ5Hyu8crNpM/qHRczDNfeWzDgie+8qXHRg895U3LM3nQPKLomdi
Hwbr/++4h27JdUR+v2tyfdF8oHtyXdB8YFewPv+e/EHEj42ec+4M9h3f5q2/
pcO3ad4F14DfgnuTH6Nnen3hQ6Lndd8HzwpC8JxbnqsUnyvUD+Gteddb7e3D
+bws+XxqpnR5ck3UTGlacl3THKlMtLctkF862oceDV+S3Ds1E/soeJb7T94z
JPnuROzvYB+X5/Pj4Dnwv3n3d2mhWcSOiPbUJ8NHR3vYysFaWZp5PvlXJNcC
zZcuTa7jmomVK66lFcktRPvNU4PnefL4leCDo313EXxMtF8+Bd4bPBs/TPsi
uXdqVj8MPin6/cLBaIhPMuv5MkXWadKQBxW5Hqouvk7+s8H+7hV4XbDP2hLs
6T7i/l8jviHY370Krw/2LG8kaxH5wS3w5mDf9yb8YrDf/CN5DeSjP0vu95oP
fJqsVzQH2JPcX+Wvt8IvBXvD7fCrwZ53G/xKsLd9C3452MPuS15XzQ3ehl8L
9rzvwm8E+0fpO/no5vz8UXLdlJ/alVxPNR/4OXj2dSif04pnkqpPu5P3uvzp
e8nPRbOUncnvMDRPeAd+Pdg7S7PLUzfTnkk+D9Kx8lLywk2DNb78dRPtYX5X
I6279kbBtaKK9nPBNaSq6nPy+ZQfrFHcx8/n5ysKrhunkXMj3BE+XWc/uZ5q
dqQZvzzLy3nfo3z0h3k/J/nQnXk/Y/niD/J+xpo/7Mh7HTSjeC/vZymvuivv
9ZenfiPvfSG/vCXvvaN5yOtwochnRL5Be0HzlnfzruGqCds1g00+M/LyfyWf
Jc2a9iafPc2givjvp8weVmuuOcn7ee9Zeeo389538vLvwL8m9yfNx/5MPj+a
1WgGL0+3gZy/eFZbM2tvze81t3k179mbvNhTeb8fkB95Bf6D/C2Z9fmf8JuZ
9b88qLzqi3l7UHnVl/L2lPJ9z8G/F9z31f/lX+VzN+ftQeUH1+U9/5PHfEb5
yb1WM7EqRfYRqjd1C54Zqq7ovYfmfq/l7XflrzcV11tp3Y3wTQX3xOqq7cka
Qn7t5oL73ZnF9Uczw7OC313oXeQZwfpLc/6WquXJ+lXvuVol9/UzKvh9pt5R
nsnPrZN7vK7ZJrmO6x2fepHedVYPrvF6v1ktWDNqHj41eH+oFk1SDUqua3pv
OJr7PFN1GG6ZrFH0t7RP1tl6z9gpWXdq/qy5hdZliGpQsu7UzLlFcu2uBndI
Pud6ryffoHdzVYJ7kd7ZnRas6/X+9PRgT6Y5T5dgz6c5T9dg36Y5T7dgza53
oOcFr7E8V2f4v+SarrlcCfxdpeg52AjiFaLf7Q6Hy0e//1X/1PvWc4N7st7D
nhPsAzRXr6u6nKzd9S6yc7GevCB4NqD9OVicrPs1e1cf0Py5QfDv0fujhsH+
Q/P/esE6Xe8O6gffl94fNYJnF6yRtNYNk3WM1qJ5cr9UneldsM+qBPctnodo
DzZN1liqXWOLZ3E692MK1gCnVLAf0d6roeeWrKtUA29K1vSaq9+cPJvQO4t/
k/ufZp63FM9+pSVvSZ5l6L2JZsOaV9ckfkPBOk3r/kGyP9R8eEeyD9Rs+f1k
v6fZstZH88NaWvdkTak6rJmQZoy1Vfe5Znn4ZOKti2di8pf1kzWK4vWS/WdF
nQVyDsvMmnVpZnt28GxMM8w62kvJGlQ1fFTBOqcy3CBZM+nZNk7WiHpujZL1
pXL+D24xbaI=
              "]], 
             Polygon3DBox[CompressedData["
1:eJwtmmWgXdXVRR+PoNkHinN2BbjAC+6uAUIESUIMJ5DgGhyKO5Svglsp7pQC
xa24u7sVd3f5xui8P15yxz1Xzt1n7bXmmuvMNWGXUTv39vT0nMg//fj/sb6e
nrf79/QMgXdte3qehj+A14H3gp+C34fXhveEH4ffgYfCu8HPwR/DI+B94Sfg
d+Fh8O7wk/B78FrwHvCz8EfwcHgf+HX4R3gz+Gj4efhLeBx8MPwy/C28EXw4
/AL8Fbw+fAj8CvwdvDF8BHxgp6fnDc+19PScyrFn+PuQ4+vy3N4cfxX+Ht4E
PhJ+Df4B3hQ+Cn4J/gbeED4MfgP+CR4PHwO/CH8NbwAf6vrwPV/AY+GD4Ec5
/hY8GJ4E/xneltc8DU9Xe3r+zeMnOb4kvCnHx3K+F/J4FZ7fhdeOgy+CV4Un
wWPgC+CV4Z3h4fCp8OLwtvAI+DR4CXg7eF34FHgxeBt4I/gqeCi8B7wpfA28
Nrw3vDF8NTwM3hPeBP43vBa8F7w5fD08HP4jvBl8LbwOvA88Hr4OXhfeF14H
PhleFN4aXhs+CV4E3goeDZ8PrwTvBO8OP9WbNXKt9uhkrbaD/wLvBj8JbwP/
H7wX/Cy8A/w3eFf4CXhr+Fh4T/gZeHv4r/CW8M3wKPhAeAJ8IzwS3h8eBZ8H
rwjvCG8B3wCPgPeD14PPhVeAd4BHwufAy8Pbw2t1spcWhreE14cvhgfCu8Ib
wJfAq8G7wRvCl8Krw7vDC8JrwG8QE2vC88Id+E54VXgeeC74DniVvrzG1w7i
uQO78fffbry5XwZz/E0/qxuPfbx/cR4/znMDOTYAXgJ+Al4Nnq+TWDQmV4dv
4O8+Hg/gufV4/yleA77jVXh24ndiw3nDr8EtPDfvn4HH5/OelXntCRw7j8e9
rinvH8Rzr/fPbzwA3pvXP8fjHXndcRxbg7/X/G6e24/ja/dlP7n//9bmnDy3
peCd25zzE939sxN8F5/zFLw0vAs8P5+/Wm8+0892v93F43l4brM2a+BauAY7
tFlj13ru7n50jV1rr8HG8DD4M3gM/Bd4CPwJPAo+Fh4KfwqPhv/cZg1cixnd
Y/B5fP+F8EzuEfi/JfnN/HUcfLIxzHOvwLOxnvty/i/4W3nuBI7tD7/cm9f4
2hXg3c0l8Bh4eXg3uIFHwyvCe8DTw2PhVeC94RnhDeCV4D3h38Dj4JXhveAZ
4PXh5eBd4QKPggfDR8MdeHN4IHwo/Dt4I3iBTq6d19hrvSp8CPxbjm9ovMJH
wXPB4+FB8JHwnPBm7h/+Pu/mz7+yHuvAP8MT4DPanKPn6jleCQ+Hf+X4lvA/
4JHwZOYa+Gx4XfgXjk+Ez4TXg3vNhfA58Jc8ntzcCZ8Lj+B4j7kJPqvNGrlW
+8BXw5MT7zOZ2+B/t1kj18o1varNGrvWrum/2lwDr4XX6J9trpHXymtyRZs1
dW29ZpcZz6zHYTz+Pc9tzLHV4cPhP8CbuD/gI+A54E3hheH1ehODxuIu8EPw
Fhw/Bt4OvsfYhQ+Dd4YfhDeHj4Z3gh+Ax8NHwRPhm9zr8AHWKvhueCP4UHgb
+C54Q/gQeGv4TngD+GB4P/gleBJ8EvxH+EX3InwivA/8vHsVPh6eBD8MT4D/
BG8F3wGvDx8E7wDf516Ej4AP6GRvmIPMRdvD98KbwIfDw+AT4IXgifBCneRG
c6C5cPFOYsucYm5ZrJO9bMwZe4t0spfdw+7lRTvZy+559/4S8Ba9iUljc6lO
YssYNBaX7iQWjSFjaSh8PLwgPAEeAh8HLwBvAS/ZSWwbo8bqsp3ErjFqrC7T
SSwa08b2jvD95i74yL5oGrXNm+4x8sVp1kRrgDEEnw7vDb9lDMGfwbN7beGL
iLe34SmtXfCJ8Odwa22EL4Y/hWezNsIXwl/A1WsDXwJ/As9qbYQvMJ/B/br7
6fhufuvt7kfz9wcc76+2gU+D3+zL/nM/mv/ehae29sInw2/BU6hl4BPgd+Cp
rL3wSfDH8CxqEfh8+CN45u7+PA++CX6AtZ0fHt1Go6hV1CiftYlxY11N8HUb
jaPWURN90kYDqYXUQB+30UxqJzXSh200jlpHTfR5Gw2hlnAPfdVGM6gd1Bhf
wh/2JX/s08035p8Zu/nDfHQjx+/nfOeDR8HXw/fCffDINppL7aUm+QJ+H55W
LQifCr8HT6OWgk+BZ2qiBdWEd8E/GHPw6fDd1kv4GT5/GXMC/Ehf9IN6wfp5
D/wcvJx7FL4bfhZe1hwDPwy/qjaBt4P/Az8KL2JOgG+FH4YXgsfBt8APwQvC
Y+E7+lKvrefW4zvhp7v1ezx8O/wYvKg5B74NfgRe2BwB3ww/CC8Aj4Efgl9R
G8HbttG0als16qfwA/BLHF8J3hq+D34BXgHe0usBz23u7E1+N99b66x55v8f
3fPwGfA98M/uUfhM+D74J3MA/Hf4XvgreB5zG3wN/D08v1oUvhH+Gp5XrQpf
C98Pv8j5rAhvBT8Iv6yWgreBv4H71L7wdfC38AC1Mnw9/B08n1oZvgG+F36e
9y8PT2yjedW+t8DftMmZ5k5z7GQ1OdZca47pha+Eb+L9v4MH8/p/wTfAv4XX
hK+Cb4F/Dw+Bz4EP5P0fwvPa38C3c3wOeBjHr4Zvg/8AD4X/CV8Dt/AaXX10
Z1dvqZcu5/jV8Ozw6vAV8HVwhQfB1/RFz6nX1FPXwnd39d1w+Dr4HnheeAR8
tjWE7/gAnofzOxc+CP4I7oPPgveH34fnrukp7C3UqDPAf4f3hd+B56ypcdY6
Ndms8JnWPPhdeC74DGse/DY8B/wPayT8HtypqYnWRmvmLDUaT61nzZy5psex
17Enamo0slrZGjpjTU9kb2SPM31NTbW2qhlnqumB7IXsmfrDo4nnifCj8NQ1
PZG9kT3Ub2r085vdfkJ9rX5Xv6rpV4LP5/WH8Nwn8Hw1PY29jT3Nfzm+JJ+/
Bnw5/E6bHsdexx7nrTY9rL2sPdGbbXoee5/L4LfbaBC1iBqlX43GUGuoQX5p
ownUBmqOH9vUQGuhGmbyGo2j1lET9MBrcD6j4Vvhb9toGLWMmujXNppF7aKm
+blNz23vbc/9BnwBfCj8KTx/TY9qr2oP/lqbHtBe0J7xFfgy+ErWazZ4Nfgi
+OKu3l8ZvrAv+t9+wH7oPPhg3v8xPIDP353zPQz+DF4AvpTjV/D6WeGBvP4S
+HJ4FnhV+GL4UnhmeJU2Pau9qz31q208Ar0CPYXX22g+tZ8acYoajahWVINN
WaPB1GKPwFPV9LT2tva8L/H+jWq8Gj0UvZSDOtEeag61hxpHraMGe6RNzig8
/kdJLvE73CvrNfluv0M9N6rJd5sTpoPPLskVagi9lbdLtIWejbnw4ZLv12Oy
9jxa4j3pSZk7HyzxqvyN7q2RTX77/3pi+OkSb0nPyVrxSIkXpcdlbXioxPsy
ptxLw5vEmjHp3hzRJFbdM+aCjZrsJWu+sTuwiRYwxtybazWJPTWAsbpqE22g
ZjD3rtxES1jTzb2rNKn1ekbW5ntKvCRj2r26dpNYN0ebC9ZtkrvNAeaaDZvk
BnO6uWudJrlez0ktuEETf8Wc4PUb1yRXmGPUjus3yT1qJPfSSk20k56gtf/e
Eq9QT8/acn+J12fNN7f/q0QLWKOtDVeU1G41gLXknyXaQE1m7r+0RKvpMbh3
Li7xHtQ8xv5FJVrIHO9eOr8k91vD1Ra3lNR2NYW16fISraFmsPZcWaIlrAnu
lQtKaoU1wb10YUmtUENYWy4r0RZqMGvPJSXaTE2kNrm7RCupWe3d3yrRsnqC
ep+vlHiF1rzp4XNKaqGep1rjgRIvVM9Sr/WZEi9TD1WtdV+Jt6qnqLf6bInX
qAepl/pciTepR6mX+VKJd6ln6v58ucRL1dPUu32xxOvUM9V7fb7ES9Uj1ct9
ocQ7VWOorW4t0R5qYnPFak20sprBXLF6Ey3xnZoMXhOedkByrLl2EDwN/K41
Hl4anhL+Xo0ID4b7D4iG16t9r0Tb24Po7b5b0puo+fVe3ynpBfTU9Nb0EB9r
U2OsNUvxeVMMSE3+Bt6uSa22B/oS3rpJfrIGfw1v26Q2v6emgJeBp+L976tx
4GXhqQfE09Lb2hKebkA0ob1FvyZaUU1n7zFFE62n5rJ3mqaJFrMnslf5tqRX
sudSm39f0oupAb6Dd2iiDdSA9lJTNtGGajp7tambaL1peP1j8Fi4GRANaG82
VRNtaE23to+By4D0cPYGP5T0dvZs9l4/lvRyahq1ysZNtI6a53t4xyZayJ7y
C3irJr2mNf8XeNcmWsCaNjl8Ukmts4b9DE9qUtusmb/CuzWppdY8vcATS2qh
GkcttlkT7aNmUXtt2kTLWPP1f4c10QLWuH7wySW1z5qtNhrapJaridRWmzTR
SmoEtc+QJtrBGjolfGpJbVXD9ofPLNG2aspp4b+XaE09OGvzFk38Nj1Ptc+E
Jv6Dmk/tuHkTLajm/RHeuYkWVtOphcc30Xr24F/B2zTpzdWgP8A7NdGmaugG
PqtEW6uJp4HPKNHKatSf4F2aaFc18dTw6SVaWU0wBXxKiVZQg0wFn1aiTeyJ
7M1uK+mV7Nnsrf5T0svZc9ib3VzSiyxSk3/VHH7eojX5WU3i+i1Wkx/VPH7+
gjX5WY3j9V2oJt+qgYyPhWvyrZrF67dWTf2wx7TX3BrevDczFvPnkjX5XM3v
9diyZjbkjMZ8t3RNfbFHUV+sU1P/7ens7Zaoyef2GK7f4jX1xp7C9Vqqph7Z
03j9j+7ketkTuL7HdHJ91WjG81GdxKs9jtd3mZp6Zw/k9Tq2k/hQMxrvW9XM
ipxp/S8fdxLf9iBe78M72X/2BO7/P3USb2ps99cRncSzPYn78bBO9IY9hr3G
IZ3Uc3sM89mhndR/exTz37I19c+eSz01sWa25czLejChZvblzMz8P7xGX9kj
W0/Xgwf2psc3PkbX1CtnWuqRETX6yR7VejGyRo/ZgxtfY2rqlzNF9cL6NfXG
GaD1b8Oa+uWMUb01qkaf6UFYXzeoqV/OHNVzm8AjezNjVO9tXFNvnSGq38bW
1EdnktbPzWr0ozNC6+v2Nfl4ym592abGq5q8W793rsmPeip6K1vU1CdnjtbL
8TX1yJmf9XjzmnrljNB6vGmNHtDTV1/uAk/qjeel97VTTT7Wo9Gr2a7Ge5ui
W9/WrdGfegDuv21rvK9+Xf27Y0390CPTK9uhxiubqls/14QX641not4ZVLO/
9WTUY4Nr9Iuei97L3vDBvfH0rAf713gHegrWmwNqvAo9BevZ7jX1ZtZuPduj
pj7pEeoV7llT/2bv1rfdauqZHp1e3X41XoUehvXqQHvs3ngieiN71XiLbbde
7VpTX/X09PYm1dRfPTS9tMPhs+Hl4F/dH/BZ8LLwL+4He+7eeDR6NXpMegPX
lPx+PS+9tetKvDA9J72Ca0u8KD0hvaWbSvKJHope4o0l3so+Nd6OnpF6QI9M
7+6GknzmOXluntMDHDukxivSI9Ir0kNztnZ9ibd2RI2esYfuoX4fVOM16dnp
3R1c4y3pQelF7VvjHekxqT/+WOMN6SmpH46s0V+D4Mn4vOVrfr+eifp5OXjO
3ng06tO1a/SpnpG/b6Wa89ODVH+vULM+eizq51Vr1kePVf0+sKZ+6Mmpn1ev
0ZN6gOr9YTX6Vg/R37tajX7XE1SvD63pL/QkvR5r1NQrPT/7hyE1/ZAeoddH
D9n8+lF3f61Sc330UNXrK9ZcXz0g9f1fuvpID0R9ejz8OrxHiZ76a1dfbVmi
Z/8GPw5vVaJXj6rRi2vCvfDKNdfbGan9ynFdvehMVP11DHwlPATuB/8Zvh0e
V6Ivj67Rm4PhyeH/q9HHY0v06J9q9LQehvr22Bq9PaZET+v5Wg8/7OYrPadv
4e2b1AdjyFjSX3mmzUzTWenVJbNOZ5rOPq8qmXU6k3Xe8XjJ/M4ZmLOsz0rm
GXr4evlvlsxPnLk5y/q0ZP5hjBlrxvCzbWayznrvKN1ZbRtvZY4m9wM4c3Ve
eHvJLFYPXC/8i5L5hx6UXtSdJbNfZ3rO/j4vmYc403O29knJ/MQZobO0j0vm
M86Qnec8VjL/nbuJ36Qf9XQbj1Gv8dySWa0zOudvP5fM7m5t42WUJvPN29rM
95sm87lxNf2U97jY/zoDdp7zask8zhmx86DXS+ZHzjSd57xRMm9yRuz86LWS
edMJNd6PHpD9hjN751VPlsyvnPE7r3qiZPb/VBvvba4m938YU8aWMWQv42/0
t3aa3A/yeBsv6A9N7r8wxo1194S9nHvCvaH/Yy/njNL54y8ls0s9MWcdizTx
ypxZOv/9qWSWqcfkbGXhJt6TM1Dnlb+WzEadkTr/nazJ7FRPXW+9t8ms1Zmu
8+CeJrPe29vcPzJ9k3nnnW3ud5mhyfz4jjb3t/ymyfzYPepedQ/ba1oDrAXW
gPvbzECchczYZH79aBuv7HdN5oX6b8eX9Cz2LnpYenu/beJt2XPq/f2+SS/6
UBtvrDaZ5+lxOvtZvIn3qafpbGmJJl6nHqmzoMWaeKd6iM4mFmriLerZOXta
sImXp6fo7GmBJl6jnqmzn0WbeKl6cs6i5m/i1T3Zxluds8n9Pje3mT/2bzJ/
/0+b3nm6JvNkc5S5yvs57B39Dc4mfY+/zZxkbjLnPd9mpmF9mbVJ/XJN1Quz
N1lrZyDW99ma1FtznrnPHPdC253Jluwh194Y9F4gr7Gx6YxNL3b5JrM3/Wpn
vXqEeoXOrKy3Mzeph+ZEc6PzDL0Ac4r3GhkT5hprrvqlbVKLndnpHS/XZJZn
DjeXWyOfazPTsZ7O0qS+OlNUn33T1S/OFNVjX3f1iDNR9dd3Xf3jzE19/UFX
3znDVF+/39VrzvzUm1919YszKb3oFZvMqpwJqX+mbaKHPCf1Ql+Tc3UN1RLz
NVlbr4mxPaDJtTLnqg/mbZKLzfnqh3ma1AL9eec/xqSxaU5wPnh6Nx8689Rr
X6HJLPTgTvxAZ8j2q8aU95K5B401Y8h7E9zjxpY1ydpkzdL7Mea898McYSya
Q71XxBxrbnXPeu+HOcG97P1E9k72UPba5kBzof67Xow513sjzEnmYnOC90KY
M8wV5kDvhXOPmxut6dZ2a7LeiflfLXVGtx6aA5zvOe8zN1hzrb3WWL0h5wf6
4Xpeel/OU9V6xqCxaA7yXhZzmLnp/wF8c/3X
              "]], 
             Polygon3DBox[CompressedData["
1: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
NismU1W9qN8sl421lBvFfmcp1WD2PPsXWcs3Jg==
              "]]}]}, {
           EdgeForm[], 
           Directive[
            Specularity[
             GrayLevel[1], 6], 
            RGBColor[0.922526, 0.385626, 0.209179], Lighting -> {{"Ambient", 
               RGBColor[0.30756835, 0.18676585, 0.147065275]}, {"Directional", 
               RGBColor[0.2306315, 0.0964065, 0.05229475], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               GrayLevel[0.3], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[0.2306315, 0.0964065, 0.05229475], 
               ImageScaled[{2, 0, 2}]}}], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1: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
XD8oJ1ycnAcrRs9PzvUVl2ck1wnKA+fhZcExfVZyrq+8sUDynqLn+fXkelK5
3JvJPTXle3PwkuDcYDZeHJxnzsVLg/Oracl1guL++OQaUrnfuOS6Tv3SZck5
t+L+5uS8SrnupuS8SjnqxuRcSnn1luQ8THnykuT8XrnEmOQ6TX3a6cl1jnLF
ycm1gfKfsck1pPq3E5JrXfUZLki+Z6P1LifXGMp/pibXTsqRpiTXY8qdJiXX
HsqXtibniMrnayS/J2P5ObWSn+PxuFhyvNE7WyE5/g3G5yfHsyG4YnKcGIov
SX5Gp+FzkmOA9qu6ye/nVFw0OZ5pfyiSvKdrDymcHIe0XxVKjivaowomxxXt
XWcl7/va985Ojg3ai7LJ8U/7ycXJ7/8UXC95H5mO6yfvLzNwpeR4NgxXTX4/
R+LXkvODn3G15PdkFK6e/NyPwZWT36XhuEry+zwCX5i8T03AtZP3qYm4QfJe
PxNflhwP5uCayXvQOHxpcmyYjesk71OT8UXJe9wk3DB5n51V2s++cuDNitHJ
eb/2ou3JtaJi2YDkGlVzgcHJfRP184ck903Utx+aXPOrbz8iub+gvvfA5Dpf
s4DhyT0L9cYHJfdi1M/vkNwrUR/+/eTet/rb7yX3fNWvfje5F6yec6vk/q/6
1V8k11Hqn3dM7r+ohz8suR+h2UH/5LpaM45+yXW1Zha9kvsR6s32TO4Tqc/W
PbkXoz7bmck5hGJiXnLPTrG+d3LPQj3eHsn9GvXcuiX3htTHeyO5h656sG9y
za95Sp/kXoBmAS2T+93q23dJ7iWpp9cpuU+kXnTX5D6U+nudk3tG6jPvSK7J
lWO0SO59qz//VnK/W/Xml8l9ENWSXyX3SlTnrkmur1Qzfp3cP1INvjq576O6
e1VyX0P177rk+k215PLkfoHqnZXJvRjVy9uSa0jlHhuSazzVrUuTew2qcdYn
13uqW9cm13uqeVck9xpU74xO7jFppjMqucek+cvI5P6U5jufJ9eZmsW0Tu71
awbxQfK8RDORt5PnCqrTmyfPPFS/t0nu42tO8Ulyf1+zoU+Te/qaDX2WPAPQ
DKht8gxD86aPkmcYmq28kzx7UN/4w+R5huYmHyfPGDTbap88Y9Acql1ybqf5
l2KF6s0NGddEitfnBccN1aebOP9yfv6m3KFxdJ6svvcz0bWe5gInR+c86rE3
iq4v1A9/Lbr+0lygWXS9prlDk+h6Tb3xItG1g/acJ6JrQPW6n46uH9WPfTa6
7tM84k7Fy1z3gZviXbmeX5wTXado33spuvbRXOC56HpTc43no2tAzSzOjq4X
tO/Vic7BtF/Vjs55tL/Vi87B1J+vGJ1LaB9+K7q+0yzjwui8S/vwG9F1q/r/
90XnMOrDXxKdv6n/f3F0jqc98yztKbmONS9E162acdSNzus0I3gxunbTvKNw
dO2jff6i6BxS++cd0fmM+tUto/M6zVDujc6pNC+4Jzo307zghOg8R7OP86Jr
Iu3bMbqmU1zIRteGisVFo2tDxY7K0XmU8sGTonMkzVNOia7R1B94Pbqu19yn
QnSuqD2/fHSuqDhyIn45N39GE53LKdaU1XuV69hdLLoOVe5WLrpeUxz/Neva
UHOZ37KuGTWX+T3rWlJznAei80DNOJ6K7j9obvVQdG2lGcT90Xmy5iN3R+eZ
mqH8nHV9qhnQXdE5p+YFp0bXv8oZntSelevZwenRdajq5j+yrnM1h/ozv6+l
OvW06LpYOUal6JxT+cPD0f0NzUceie5LqFZ6MDoP13ykRXQNqJna+dG5ruLp
29H9B83O6kfn58q7a0bXCMoT3ozuaWiWdEN0HafZynvRtYByW+WP6k1t5H1/
N7rGVM5QC/fLdf5zTXR9p3nKO9G1rWZzN0fvG9o/ro2um/4/f4muDTWXuSk6
/9es5Mbo/F+znquj6yPNVq6Pris16/mF6/ZorucpzaP7KpoV7kyeJahWvZJj
XK5nQFdE1xGa7/wPvPAJJA==
              "]], 
             Polygon3DBox[CompressedData["
1:eJwtmmWgHdXVhm+5WIGzDy5nsAxycHeHUtzrXigFCi1WtHwVoEBxS3CCBYkQ
A0ISQoAQYgQJBBISSHC3AkVa2n7P03d+TDLP7Jm5M7OXvGvt0+ew4w45doGe
np6+/LMg/19X9fRs0NvTc0Orp+eSbk/PEvDp8HOlp+cx+HK2mxjbiGMjOj09
9zF+EPvjOTaQsWnwH+A34PHw1Ob61+EH4V+ybce9nuPYUYy1mvOf59gkxo5h
25P91zh2CmP3sh3I/oNcfxdjR7HtxvhLHDuesd/Be8NvwKfBv4Z3hufAv4OP
gHeB58LHwofC28PPw7+BD4N3gGfBR8OPs53B/pv8vYcYu5JtAPtbcOx+3vd0
+HR4GfgqeBTn/4D9iRwbxNhM+GL4C3gK/Cx8Efw5PBk+je1U9pfmWF+uP5y/
fTK8FNwPPpXx73DsI/gsrv0VvCM8Gz4GPhzeCX4B/i38W3gv+HX4VPhYeB/4
Tfh0+P/gP3P/5eFruf89HDuA/XEcu5Oxa+H14evhi+HpXgO/BT8MH822B/d7
lWMnMXY924bs38j4pYz9ie1s9lf0Htz/RsY37o2NaCu3w9vDg+Br4f7wJvDN
8BVwX3htvyX8N783vJbfAj7PZ2c7h/2VtEnufwXja/rtOHYuY1fD6/pu8IXd
3NN7+wwjOf9Wxrdh/06OXcXYVfA68DXwBfA18HrwdfBF8F9519vY35xjo7i+
H+Nd9q/m2PmMPwH/EX4bfgS+Dd4Wvgu+Gr6him/0hy+Dt2j39OzOPedz7ETG
nmT7E/vvMD6B8afgP8Pvwo/CT8N/gd+DJ8J3wTvBd8M3wGPgH8OT4bvhO+Ed
4SHw9fD98A/hx+DB8B3wDvBg+Dr4Fnhr+A64n98K3gq+He6rrcPbwQPha/R1
eMve+IC+cCTbrrzPixw7jrHfwN+C58En+G3gMzl3Bb8p3280x37E/iSODWHs
GfhC+B+t+PsZbH9kfznnhPM/417LsA2CN+TcZxhfFh4MbwQ/D68ID4M3g5+F
l4OHwBvDz8ErwEPhTavEIGORMehr7j8TXp7xu+FNGH8KXgS+EV4dfgJeCL4e
XhWeDi8IXwevAk9gO9p4xT1HMfYofAw8C74fnqhPwrPh0fAMtm9y/U0cqxl7
Gl4U7g/3qRJjjDXGwH/zfK8z1st2Lbyy9sL4wvAN8GrwY8Y89l/gmjHd+Ki+
asz6Tyc2pW1poz1VYvZn2m5vYvlM7vWpvgYvXmUOnIsLehOLF8Re1+CcB+Cd
qtiv8ejDZn5f5vzvNvFJe54FrwmPg3euEuOMdc5xqRIDjYXGwLbxFf6nsQNe
ukpOMDecBv+rEx/QF/SRbzA+0VwAnwr/sxOb1/a1qRc78RF9RR9aoIpP6pvG
sP8yPg3+ylwGL8X4VPjLVmL0kuYebRBeVh/n/EnGUPbncGwsY1Pg4/1b8Dj4
eLb9eKa3OXYGYyfA+8PvwP8Hj2X7CftTOH8oYyeyHcD4uxz7I2MnwQfB78N/
rpIzzB3fd075+7+HD2T8PfhPjJ8MHwx/AP8FPg7eF34L/kOVd/JbzSl5193b
mZ+POXa2/lDl3X1n331GlbnWJrSNU9gOaeb3zCpzpi3NKpnLjdg+4txzOLZi
lW+mbb1Qcr92ky9ml8z1ZJ8Rnss1D3Tj8/q+MWku7zevm3hovDiUcx9g+yn7
UzlnGGPj4J/B0+Dh8Hj4F/B0eGQ3c+Bc+Dc+4X4PM34U+zM5di9jjxiT4Ofg
+5rv8Sv+3n+bfLosvDk8HT4Qns05a8EPwrvAL8Brw+PhXc017cQ39cYvq9is
tja3xJZfYtuK/ac4dghjL8Jbwk/CB8NzzQHwE/BB8Hz4200+OAyeA3fhh+Dd
jAdsv2T/CZ7/HsYehH8OPw6P6OaYY36TV3n/EYzvx/5Yjt3ejaZSC63XjtZS
A2l7G7ejjdRA2tYm7WgjY7i2uGk7sd1n9t2Xb+dd1EhqifXb0U7GXGPZVyWx
WE3wCbxVO1pBTaatbtaOVlNTaasbtKO11Cz6ykbtaBl9eG/zZ4lvz4H3ND+V
5C9tZi/zd4ktDelEC5xRkq/1oa+du3Z8S42kb27YjnY6ooqWXAf+OTyok9x0
ekn+N6Zp+5u3k8uOrKKl1oV/AR9eRft04Z/Bv6iS+2r4J/DPqmjN1eEfwT+v
ojX7wD/uRsN+Cm/djrZVo30Gb9OOdjMHmXu+KMlNarbP4e3a0XJq2n/A27aj
dbVBbXEN+KfwT6towdXgH8I/qaIVV4V/AP+oitZdGf5eNznR3PNlSa4c2Ik2
PK1E38yD94UHlfjjD6to9cq4An/fnAuvBB8C/8CcAnfME/CPq2jpVeDvmyvM
4cYO+GD9hfvvAw8siY/GvD3g20ti4YxO9E7/Er3/QCd67fwSfTUcXsXYWaKv
hsErGytL9OhQuDLWltQvd8MdY3OJvh3XiV68oETfqBFXM/aVaMcnO9Gr15f4
kzXOqsbeEj07vhO9fFGJnprSiT7qZ46Hp3aip66CbzY/d6KXLynRb490og8v
VXPAYzrRv+eV6DFjgNpm0XZiw+Od6NdrGL/VeNCJXr2wRE9P70R/Xqtuhad1
ou+uhm+Bb4KXgI+Dz4LHdqJn/1aih61p1NPnlOi7DzrRl6NL9IwxxvpraEns
eRneHx5SEo+e7kR/3lhST8zvJB4NLonf73eSq+8v0UvPwDvDN5XUi8ZctdjC
7cTiDzvJn2NK9NPHneSDB0ry8Ued5IuxJfrnqU707Q3wHd3EWGP5cu3E3ic6
0bPXMT4AHt1JfXFuid59pZN66O6S/DK4k1rmDyX1hDlALblIO7nhvU5y2aiS
/PJuJ/XffSX5pz+8OHwsfCZ8I7wY/Dv4L93UMN+Ef1tS2/g3zW3GeJ/Fb2qs
95391n5Dc6Hv7LfVJ82VfiN9VR9Sazhn+pZzphZVozqX76g5e5OjzFX6jLWJ
Nqkv+Y3VqmpYv73fVG2phvVbq0m91+QSraqGNr9OKtHWzolaSU3qXKnhzMeP
lWi7t6vkRnOi+USN6t+aUqJdv9HorcdLtN8CjX6YXqLt1HA+y9QSbdfT6N9p
JVpXTay2fKtEK2tjanOfUdt7q0ouNgdrD0Or5Jv7W/GnwVXiz72t+O/zVbSp
mlE9NbCKvQ5txV8HwbvAw+D+xpcq+WlUK/42vEr8HNOKvQ2rEu9Gt+KfQ6rk
t/taiQ918/feLakVZsGX9UYjqy/u5fiz7B/BsXd4n/fU4L2NhujG5tQ+R/bG
FrVJtY9zoK2+W0Vr/E9zdVPjqH3fLql9+jT68J2S2mSVRh++UVL7WAOp5d8s
qY1GVvH/B1rxt/eraE01p7WBNZi1yucltZma95/wTu1oYTXzl/AO7WhpNe2/
4V3b0bpq2i/g7dvRumrgf8E7t6ON1dhfwTu2o73V7AvCR5ZoeTXsf+Dd2tG2
1pQLwUeV1Jr2QBaGf1PSG7FGXQQ+uqR2vQUu8AnwX+Gb4RZ8PHx2Nz2OReFj
Snof9nAWgH9d0tu5FW7DJ8LnwHd1UtueWtLfuLOTWuOUkv6GNZO160Lt1FJ3
dNJbOrmkv2HNay36j5Ja2J5TL3xESS9Kja3W1of+ztjs5vwFm/l7oZmPhZr5
O7Gxhy3bma85jf5YuPGfFxt9t2hjD3MbvbBIYy+HNf68djv29xJ8c29qXO13
XvM+yzbPO7+J78s19vByE0+Xb/TOK02+W6HRI4c2/rpWO/aqplYbr9BO/FLD
q+W/1U6v7FV4eG96AurR1xv9qqY3n7zW5ANrVL/vm/DDvdHc5tc3mvur+Y3v
5gR7IeZ0c8WETnpJl5X4uz0Wey3mnIfM3Vx/m7GG8S0YWxO+Vd+DN4e3hu+F
v4Z3greB74P/De8MbwuPgv8D7wJ34QHGbnhLeF94CtzmffeD94QnwovDe8H7
wJPhAu8LL6MNNv2rSTzfBVX0sj067XV9+C5thftvC68H32nshreB14XvMPbD
W8PrwLebG+CtuumP2XtTM6gdltZn4M3gifB5VfSkPR397W9V9LY9SP1tb3gS
3OJ594H3g6fCS8L7w/vD0+Cl4APgi6roufNayZ9qFnt5ahy1zKVV9NnFrfjn
JVX04YWt6J2Lq+jD81vJx/Y07G30cv9vd9NjsdfyGu+1GXxuFX+1J2A82R4e
Dfdw/m7wDvAY+BvWhfCO8Fh4Aft88FJsV3LtGr3pH15YRX/awzTfHwA/Di/N
+QfCS7JdwVhtDuqkJrU2XYbxgxjbA34UXgzeE94LfgxeAt4b3h2eoP/Be8Db
wffD/+V9doUr+Br4VXhTeAt4pPkF3gE+v4resWdn/HNOVimxSefKZ7AfZH/H
Z3u5jr63J2195TvUJd/UdxvQybv8nmPtbp5x5RKb99nn1akn7MFbTzoH9vvs
7zk3znmfkm+qLWjjVYkPafvv1Knn7HlbP71ap/6x5299ey/cz/dvxX7frFMv
WcNb371dp55zjcF67C34ld70uK1f/cYdtW5vvv0rdeope+7Wq/ajZjb5Va2j
T65WYiP6qj64askc6Jva9OolNqOtz69Tj7nmYD08q469b1pSL9rztPf5Kbw9
vAE8EP4E3g5+t0596pqH9eBJJesJ5gxzx5tsv2J/OMc75uc69bs9I/Pp64wf
Bg+DV+pmjlx/cD3CuZtbp17bpqRe3oDtA33LmF1FA6mFrNGsZazR7TWrga3d
t6ry7f7F9Tuaf+rYsz0X69U58Ax465J6enYdf9ispJ5+sU59uW1J/f1SnfrS
NSP7Ga/Vqbdd07F/8V6dfodrHtbLn9tDMzbDq8GT69ieNq1tP1bn+bQpbWs4
fLnP20q8nljHP7QBbeHBOvGvNPF5Wp25dk6d20fhEfBKJf43vk78bDf+93id
udemte2pdWxDm9F2JtWxbX1EX1m0Sq/tabjbTY/WXu2z8HrwYvB58DPwuvA3
4XPhGfA68Lg6+aPV5JcpdXxZm9Q2L6tS717air65mPE+vYlBxqLpdXxPn9a3
n6jj28YAY4E5z/XBi0ty4YQ69qoP68sbsn3ovc3ZxqI68WeBxn5HwVcbP5v8
cx98lfG1yT+j68Tj3sb+74H7mh9byT8j4SvNn63kR9fPTmpFg6nFlu1m/cb1
usnwQ3Xy25Il8fvZOvlnw5L+xDN14ukGJf2RGXXy6/ol/Y5FqrzLU/Da8NN1
4vF6Jf2OJ+FH4HVK+htP1YnH65b0Rx6uk2+XKskXj9Tx56VL8sUXPONJ8MPw
6vDCVXztSXgteGwdPbF4409vc/6v4ZHwysYv+HB4BFx1U9NY21iT2DuwJrE2
seawN6BmV7tbo1s7W1NYW9zD9at0U8O7NqjGt7a3RrFWsUayt2HN7lqvPQFr
eWsaaxtrKnsR9kzsRVoD2Uv5jO1E9sdz/1UZ+xI+2dgB94G/gk+BJ8B1Nz1+
e/2PwmvA51TRy665qnetqaytrKms7T+s0++zB2898FGd/qI9d+uNAfz/KOd/
j2OzOf+DOv1Ie/jWH50q9vgKvAn8aZ3+pT1x64e/Vomtxlj1/fN19MomJf2+
5+ros41L+m8z6+ixjUr6b33NJVy7e2OPC3K/s3x2jq/pXNTRj0s0+lCf0d7n
lfiSPXfz2fySXvxKVfzlZXhj+JM6/VvXCKyf/l6nv+sag/3Qj+v0f11TsH4a
A98CL9bkf3tsrq3bA7H39lmdfqhrPupra2Jr42/3ptdlDtD/XirJDcvCV8Av
wuubX+r0P10jtJ/8Rp1+qWv29oPt2du7frCklz+0Tjz7pBV94jfwWxjD1M53
1LGPV1uJdz6zz65PqGXurhP//t7K/A2pEz8/buX7zOLvfRe+lWtW6GYOnIsr
S2KFmkvtelZJ/FOzqZ3PLtFy13O/Q7XlVuy3fx1/m9GK/d5YJ98+3Yr/3lAn
vz7VSv65uY5/WcNrz8PqxHPX4NSbA+r4/8utxHtz9sPsf6c3udwc/RB8SG9y
tzHT2GlMVcurcdQ62oTa3W/4SbO+p/YzJ5mbzGlqxTvr+JdrauYTv5nfzjnQ
F/QRfeU2rllRe+/kWW6Bl+/mm/pt/ebaojHj0Wb9yljiO33arDeqre1fTGz0
gf0JY9QjrcyJscsYNqHxT2Ob65+uTdmDsBcxuE78dQ1K+7+9Tvx4pZV8Z84w
d+jD1jJ3MX4m+++3Yo+D6sRTc5L+NLCO/6lptF9zpLnSHG9tZs42d5sz1NLW
FNYW1hT2Am7h+hO0/1b81xxqLrUGsXdgzWHtYc1h79WaxdrFGsBeoD2By1vJ
wfYKrEmsTaxx7B3ao/a3GPZ47V3bw/a3OPac7W3b4/a3F+Zge9/2oF3bt2dt
b9qesL+1sOdpr9get2v59ojtfdsjsNc4rqR3cGud+DyvlXyjnryyqUfUg/ak
/a2APW171fbg/a2DPWl782oitZGax1rWnkXfpv5Rj9pD9bcZ9vDtrd5UJ389
00q8d73fXoU9C3sd1pC7sX95SW2pBlALuP6uNjYHmguNmWpNc7q53RxrrabG
UGuoIdTO1sDfYv+Kktr4tjr6cH4r+VwNqhZV87rWo+ZUe6o5XQu6nG313syZ
c/e/34y00kN3Lcmejr9dsadsr8eeTr+mPrbX4xqVvy1xzcG1KzW12lqN69qU
ay7+tsQ1ANdiZnbi6zdzznJN/hjQ9COMv8YIY4U+oFZUM6ud1diuTbnG4G9F
7Mm79qDmVnu7/ujakev79mbs0dh7UoOoRdRw1rJqILWQGsm1IzWx2tgYb2/D
3w+4Xu/vKfw9gTnQXGgN41qYNYy1jJretTBzornRnOlalTamrTkHah3nwLkw
Bqq1jPHGemOUWlcf1pf1WXONmkxtpmZzbUqNpdZSk7k2dV2dWGJMMjapydRm
ajLXoq6tE3uMOcYeNaBa0Jzt2pXrvfaK7UHZi7qozm+zrJGslfR5fV+fMZdf
wfiu7A9vZb7UhGpDNaRrY1cxfnBvYrix/Jo68dQYaCy8us58G/ON/faQvm4l
x9pbUkOoJdQYru0Z84x95kS1f786+UyNYbw2J5mb9DG1ljHeWO/vK6wlLqnj
2/q4+U19dG+j71yLM0eZq+wnq8VG1Jl7n8lnc/3cXpo9NddaLq+TL9Xc5tPL
6uRTe1D626Xwpr3pEenPPuM9jZ4w15hTza3mTLWiml5trwayF3ZlnXgwopX8
Yw4f2egpc7s9OXvx9ujt1Zlzzb3mZGtBawZrBzWUvSxjjrHHnKz2dM6cO/+G
vmcON5eb49XmfevED/+mf1sNr5ZXw9sL8pl8Ns8xV/4/azclgg==
              "]], 
             Polygon3DBox[CompressedData["
1:eJwV11UYVVUWAOArSEor3Tg0SjjSSDhKCChYhKBiYoCKonQJqDRId4d0d4MK
0mHRJdIhZTH/elgP6//WPuee3Td/i9YNWyVJJBJ7RTKxI2ci8X26ROLntInE
+0mBfLYYxqaxcmxbjkRiTThbzeqz42wn28Z+Ya3YPfLvxBq2g73Crqvbz35i
Z1knlkG+S2xnv7LWLIn8W7Ga/cBeZte03c1+YIfYByypfK4YwWawCuwHdQfZ
L+wc68IyRbv4Pewn9h67q24JG8/msWpsH1vBZrDlrA47zLaxrewge4f9w7aw
lWwba8ausE1sOfuONWWX2HI2nS1jtdkhtoxNY0tZLfYrW8qmsiWsJvuFzWHD
2XRWnm1n89koNotVYjvZQjaGzWZV2G62gI1m37DKbBdbzMaxuawq28vWsyVs
C2vEzrN10a9sLXuGnWQb2FK2lTVmF9hWtoptZ83ZVbaZrWDfs5fYZXaA/cx+
Z51Zxhhb8Q1bxeqxY+q2x7izH9m77F+2ls1ha9jT7ARbxWaxlawuO8pWspls
BXuKHWHz2Eg2k1VkO9gedoCdZu1Z2pjzYgs7wFqyv9XtZQfZGdaBpZPvEz+y
31hHlj5y8Ss7z7qy++UbxTL2LWvCLnreIjaWzWGPsT1sCvuKjWLF2Br2OXuD
tWVJ2TB2tEAiUSK974rfw1qqOcKKszrxLextdow9xOrGb2TvsJOsFHs61gN7
n51jFVgj9gf7lJ1hj7CG7CL7gJ1mZVgDdoG1Zr+z8uxFdp21ZcfZw6xerGv2
LjvFSrNnom9Yq1j38Uz5Dd/Wh+WJeRHvZjdZX5ZXfkLbktrWjznD3ov1LH6T
31LXj+WTX1BXSV2TaM/asfOsImsc72GfsYusMmsa7Vl7dpaVYy+wa+zjeD4r
y55nV9knMbZRK7/tvf1ZfvkkdTujn1h3di+byHZEP7FuLFnsI+wQ+4sNYpnZ
BLaJnWBt2R3jO5atZ0dZG3aTjWHr2BH2EfuDjWMb2DH2MbvFZrLD7G82mD3g
HYdinNgdNoAVkB+OcWd/soHswZin2ib1vQViLbEqsS+xvfH96nqxVLF/sX3R
T6w3Sx17FdvDrrCeLCXbwJJ4Xv5Yh6wy+4M9zlqwf1k3Npntkl/StgdLzqaw
3ewy+5ylYJdYFW1fiv5nHeI7WDFWm51ib7HL7DHWLL6ZdWR7WS5WKdY1a8R2
sxysAtvHXog1zXKzyrG/s8Yx5qwIqxnjxF5nO1k2Vo7tYc+z/SwPqxJ7FmsS
ZxnLzsqzvey5mM/ijjyVmMAeiTUjbstTivGsTKxpcUOeTIxhJeX9PK+7fKJ+
Kc2WGPP+rAebxMqwxeyC2ke994mYH6yNvK+6NvLB6vKzqerO80LqyvLd7LXY
D9XlZY/F+ciasqPipjy5GMtKxf4ibslTiHGsdJwx2q6VH/aOD9mNOH9ZPs+r
GncJ9lKsc/YgqxHnN3s59l2Wnj0ceyWrE+ucFWZPsuPsjbhXsAysZJyt7KmY
46woq8VOsjfZdVaDvcr+YV3ZNVadvRJrhHVhV1k19nKsTdY57h8sIysVZxer
G3cGlomVjnOe1WM72P2sTJx7rH7sa6wAqx53GNY87gssDSvONrOabDNLzYqy
jex/bBNLxYqwDeyJOIvYfawY28SejHOG5WfV4o7FmsV9hqVjD8W5zGrH+cnS
shJxprNacc6KofKpxqgs+94YjVe3MfqYfcJus3PqCmr7KN/FWsReJ76Qj1BX
hK1SN5l9yUayomw1m8h6s+GsMFvJprI+bDQrztayAewD1pelYxNjPrPW7CuW
lk1gA9mHrD9LzyaxoX7z5Og79hz7kU1Q14sNY4XYCjYt5n6sIVaCrWPDWDvW
jWVj37BB7CM2kGVgk6NfWE82lBVky9kM1j/mPHuYbWCz2MBYz6wU28Smx3qN
9cIeYutjf2YDYo2zkmwj+9p3TIrxZs+yg2wIm8jWs4ZsPxvMJrB1rAE7wL7w
vJasM0vBRrHe7G3WkSVnI1k/1op9wdKw8awXe4u1Z8nYiOhn7xjMFrAabHOM
ERvE5rPqbAvrqe2b7DN2LxvO+rL3WS92HxvH+rD32OcsNRvLvmLvsu4sFRvD
RnrHwthL2evsNzaKLYp9k73BzsYYsSFsIXucbWUj2ILYv9hr7AwbzubHvGUt
2KnoZ+/9lHViWdhM9iV7h3VlKdnomBvazmM72avsdIyHurasA8vMZsR4sE9Y
O/YAmx5zkn3GurCsbFb8P/K8f1lusYSVV7Oa/SPPJRazcmwtuyvPI5ayCmw5
uy7PJGayEmwOOy5PxDxn2eOuIjJbqwXZWtZAvlTdVXkGMZ0VY+tYQl1etoxV
ZOvZPSwfW84qsVXsb3lOsYiVZbPYkdhLfdsQliX2EnY0znL2NcvKZrNj7C4b
yrKxFexPlj3mFns07lEii/cWijnNGsrnqTspTxJ7DMvJlrFr8oxiBivOVrK/
5DliLrD/xh1HZPW8wrFu2LPyuepOyO+JvYjlYKdFCnVZ2TxWI84t0Vnex2/O
zebHnYt1Yf1YHrYg5iTrxL5kudi8uK+xrmwAy8sWxt2MdWODWD62KOYka896
sOxsdsxd1oH1ZDnYnFgLrCPrzXKyueyK76jqNzfnf7JOauaz8/LUcR9gBdkS
dkWeXkxjRdkpkVzbLGwuqy5frO6yPF2cA6wIW8QuydOKKawwW8guytOIyawQ
OyNSel622BPY4/KTIhnLzOawavIF2l6Q3ycmsf+wPSynuopsP3uR/R9xKI3t

              "]]}]}, {
           EdgeForm[], 
           Directive[
            Specularity[
             GrayLevel[1], 6], 
            RGBColor[0.528488, 0.470624, 0.701351], Lighting -> {{"Ambient", 
               RGBColor[0.41139519999999996`, 0.3882496, 0.4805404]}, {
              "Directional", 
               RGBColor[0.264244, 0.235312, 0.3506755], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               Hue[0.7, 1, 1], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[0.264244, 0.235312, 0.3506755], 
               ImageScaled[{2, 0, 2}]}}], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1: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
hvJ8d/U8mec5im298d3Ba70Xviu43tFnfhRcQz2Iv9Nvl5wTNTdTPbUAf5sf
exWrvwmu9Rbi7/EJ+TM93WPVR+pP39MzlpxzNcs6HjfJHMfK59chNaPnC7rn
nbj+/uTYrmfnd+LSmdH3c0Xy86NZwQL8WuacOw+/krl+m5uca9RHzE9+ZlQb
35Wc79R3vJD8u+j3eT75edbc4Jrkv1113XV4ceZ6b1Ly/VcdeG3y36t671a8
NnN9e19yvlPP9Sr+IvPM4Tb8ROZ69b3kWkU9yJzknKV+7d7k/Kt+Z1nyulBf
szh5narfWZocH9TLLEle1+pxVN/9hivwt1zA+TGZ6wH99noGyisnJ69x9c6L
8JOZ19cjyWtW842VyetUcfGBfOv+q4dQDro9uF7WTHh6yJ8HaY0oDifXGOq/
lievffXs6hU0K57JNddzfknmuvrd5HpG8xP1DZpXvMs1C5Pzi/pB9QGaOawM
7gM0c1iVH4cVl5YH9xBX4BXB/Zly+qLgel+zi0eC+yfVAA8G1+OavTyqmiS5
BtOMSL2XcuX84D5JeXkubpAcQ1QPqCdT/bAguF/RrOOx4JpLs47Hg3sL1UUL
Vf8k13uaIyn/XIefD86lN+AXVXcl13uaw6hvU16+g/NtON8z8wxT/ZnqjVuD
fxv9LruDe0Hl7juD+1HNY2fjtslxQ3PR5fk56xnNjpLXvuau6sMm45eC+5Ub
8cvBufF6/EJw/pyEn8vPBap/5gT3napP7senJ8cQzVdVb16Lnw3uI1VvPBDc
t2lGtDq471StNU85Irn21kz7U/x75tmL1rri+RCu+SK5nteM/ZPkHkqz7veT
a2/NPT5Lrs81e/8guS/QbKRncl7W/Fm9rOaus4J7OOWUD4N7O80BPgju4TRD
ez+/FlWt8k5wr6k48CM+Nzm/a07eI7k+0fxceULxf6hiY3I9rzmhelPFh384
3yu5HtAc+63k2l4zw47Jz7B6ea03xb31XN8oOcdp1t0Qt8tcm6nPU6zbE9w7
Kgbuw02S85pq1MbJeVDz8HbJM0bN3tWjrMF/c33v/Fmc1pPqR+W4scE5TDF8
fHBP/BjeEDxjeBxvDK4xlQfH4fb5tbGekauTc4TmAA8n1waa/7ye3LNovqrZ
mGbvl/LeG5JrP82jNEvW7PqK4PmcZuyDgudzmldfEDzz03z+Ij3/ybWK5lea
k2m+fUnw7FDz/Mvz/xb9LsOCfyPll7OC909K4wuD52ras7gseM8n4IuD53+a
/w8I3lfRLP3K4Fmj5vx9g2eKmv/3V42aXMNr9jUZ3515L2l6cq5Uzrw9uTfR
rOyW5N5H87TxyfWz9uyGJNeW6im2VnGMVawdmryWtaanJPdHmuk9hj/PPEO4
Ay/NPJd7Gf8v8zzhpeQcoVnBtOQeSrO+qcm9leZyzybXnJrJv5hfPyg/3pzc
r2kGeHFyva0eR3NK7Ud0CZ6Dan+kT/B+V0k8MHg+pH3DGcH7XcVxv+D6QM/Y
hOD+UnuRVwf3ndrrvDZ4r0l7kROD56baQxyDBybHK82LBiTHMc1Y+ifHLs2L
+ibHLs2XBuGbMvfF5yXHKM2C+iXHZM2azk+OyZov9cm/z1oXmvtq/6V78HxX
eyIjg2e32t8cHTzf1V7PiOA9EO3LXBU8O9Te6OTg/cZSeHDw/Fj7LOcGz6q1
79MreFatvZhuwfNg7Q2NCp4Rai/vhuDZofaGbgzuxbVHfE3wrFH7wpOCZ5Da
h70+eG9Te0PDg2d42ge8KXgeqT3f64LjheLGLaqZk/sy9a2aa2rv7zbO3508
N9AMdlxyf6d95yeSewrt14xN7vW0fz06uRfT/t0zyf2O9n0+xtszz6NGJPdW
mruOSe7ptK/0eHJfoz2jtck9pvaA1uA3Mu8rzcivD7WmJiTHasXs2cnxTbPH
i5J7SfXaTyX3WdqXmZkc0zQbnJUc0zQz/Ci/Dlfd9HRyn6X9pueS+y/tMa1O
rvk1Z3s0uV/QLO615HmR9pJGJfeP2sf8OXnGpTr3wuQeUHOAJ5P7Ne1hvZI8
U9Ke1Lrk3k17RhPz44b+rlX59ary/+DkXkx7piPxlMzz6juTZy+a2/8fvUht
wA==
              "]], 
             Polygon3DBox[CompressedData["
1:eJwtmmWgHFXWRV+SJp70fcFJFZIC3sMGd5fgGlwHd3cZBnd3d7fBfRicGWAY
3N3dCSSEkG+tb/ePTnrVre5XXXXvOfvsc2faeo8xu/ft6uo6m39a/H9Db1fX
2HZX1z+B86uurjvgWUpX1/fws/Bk3V1dM8Pfwc/AMzL+E+c/AF8LHwVfDG8O
LwrfBk/J+e/BD8BjeT8Fr3fh++EFeT+a8/vC347s6qo5/3v4Xvgqxl9l/Bf4
Qfg8uGL8O/ge+Er4SPgieDN4EfgI+EJ4U3hheH54KN/xGvwYPAs8gfEn4Nvg
2+GpGH8ffrBzfZPx+l/neq9k/E3OvxQ+GL4e/hK+FT4Jvg7+Av4HfCK8ADyM
z78OPw4vBLfhN+En4Wvhzzn/FvgE+CL4afgUeCf4Avjf8EnwDvAl8LPwafAu
8Hnwk/AJ8HbwNXz3E/Dx8Lbw+Yw/BZ8Ibw9fCP8HPhneEb4YfgY+Fd4Zngvu
x3f8F74Pvgp+i/HL4EP8fvgz+Gb4ePh4+Dp4J3g0fDR8CbwFvBh8I/wr/BB8
AfwXuMX3P9d53r3wn4z/G74TPha+Bt4BXh4+Dr4W3hFeAZ4V/gN+Er4dPobv
uhreHl7O+cP4cI69AT8BzwcPgV+FH4Vnh7vgp+G74Sd5/wmfvxE+Fu5hfCL8
FHyH3w9fCv8VXhy+Gv4Uvgk+Dr4J/g3+F3xhZ/6uCHfD3zF/52S8L8eehe9l
fDF48s58fxoeCD/P+efAR8CD4Bfgc+Ej4WXgkZz/GfwSPAD+H+Nnw4fDi/dm
/bzXWX+nwDczvju8KjwEfgk+Hz4aHgy/CJ8HHwWfCN8A7wKvBJ8G3w0fCK8H
Twl/BN8AnwOfCt8C7wGvBk8OfwBfB58FLw1Px/V8Cr8ILwtX8Ofwy/Aw+BXO
v7Bzv/vDz8FnwYfBbfgd+Cr4NLiBx8OPwbfA5/Bdd8EHwOvCv/aw1uC94c3h
pTh/Wp8p/AI8HH6b8SvhU4xX8H/hM+FD4W74Pfga+Ax4BPw+fC18Zie+TdmJ
B8a7JRifGv4Ifg4eCr/M+RfAx8AnwzfBu8GrdObXq/BFnflSGH8Xvho+HV4E
7uact+F/+/vgBxn/O7wJvEpv4qvx9u0q1+C19O9OLD6B1/WcvzPHVmRsbngg
578EPwTPAw+CX4YfhueA+8DPwPfA88KD4VfgR+CZ4d/5vsfhW33+/J0FGJ/U
+ftLMj4N/DH8PHwzPI7zH4Yvgj8tWd/Gj+vhW3oTP13vN8DTwz9w/n3w1fA/
4P6d+HojfCs8AH4evgleGC7wW/BT8KLwCPgd+D/waHhG+Gv4dfgM+F6+/2B4
A/h0+B74IHh9eAb4R/h++Br4bPgB+FB4487vNb/9AL8Dr8T4KPhb+E34N+bb
rZy/D/xX+EzG74MPgTeEz4Lvh/8GbwSvAM/A57+CX4OXh6eHv4RfhWeDJ3H+
f+C74OXgmvEv4FfgleGmk1/fgk+Cb+T8XeGV4RXhmRj/Bn4DPhf+J+OHwZvC
feBH4WPhvavkxNV5/7eSXGlMNve8XhKrjWHmrjdKYtvmvHbm870ca1V5xua6
N0uevX/DWHBJyd9WI5gbXivRDlMZc+HN4F16M6eNTReXzPWpnZOuXXjX3swR
c8VnJXPHnOvc+LVEOzgnnGtflMyVtXiN4fqm5tjPIzOHjMWfl8yt9XltwXjN
sfGMbwBvCU8P/z4yOd659ltJ7t+M106M93CsH2NbwLvAs8GTwdPwmpP3W3D+
bsYac6ZzAd5dbVPl3E3hneGNeW3P52fmWBdjo9QA5nLG9/bZmTPMzfBe8Ia8
tub8GTg2geub1Zxhrmd8f3OBaxzeCt4THs3/23L+KI5N5PxJvCY3FnB8I58P
rx0Zn5VjffnsLK4hcz3j+xlbnBPwTvC+xiLPcS7D25tbqjz7TeCdzF1V7s3G
8I690SDOtZtLtMmIKn9rI3gHc4E5H94S3sO1XOVebABv53zgtUM7f7OP8d41
z/sdGd+nNxrItXljiTZSoxgbbyrRLmoY19oNJdpmPZ8h31dxbBz3Yh14A3ha
eCw8Bt4Ins45Ba/tZ+Bp4F9G5pxBvF+y5LP+5oPauUfei23hvdp5BkOq3IMD
27lm743P/OB27rFzYV1/IzzSOcZ3/xXetZ010b/KPTkMXqqVe+UaOaSdZ+7a
cU38DV68lbWyDbxnO/d0cJU5eCi8RCtz0zlxOLx0K3PFOfl3eMlW5uqW8G7t
rLkB8Fbw7u3M6YFV5ugUvF+pZO6uwWtNxqfk2I9c/9bwHu3M+UFVNOslxuIS
LWuOM9c9VaKV1IgXm9tKtOP+VbToPfClvdGsxuZrS7SsGlqt+UyJtlbzGluv
L9HCalhj+3Ul2laNrRZ/ukR7H1BFK98LX+azq6Kl74ev6M2c3r+dNedcd44e
0M6adO6u7zqA54fb8JqMrw1PBf80MnN2P3iBVuaymlgt/mCJVrYmUEs/UFIr
HFhFa98HX96ba3ijnXvmtbnG27xfvmTtG6OGwcuWxC5j1HB4uZLYdbgxm89v
wrGFXAvwefBG8ALwfpx3Nrw+PK9rg/Fz4A3g+apo6g15f2yJ1j7MmM34xhxb
0LUGn9vOOfNX+cyKvN+/5LuMQScyvmorsckYcgK8SiuxxRhyPLxyK7HlQPjk
dnJOr/cLPg1eC57DZwmfCq8Jz25ugldvZw7+wG8/CD4FXgOerUpOV+ucX5Lr
D3DOML4ax3qq5HhrkfNKcr8a1trh3BJta45Xm11UkvtX47VqOzHze/7eNPBX
8B3mtCrX6Fras+Tavcf+tgNL7r33zN9+UMm99Jl4bw4ueVbWDP7Ww0pqCX+j
a32Pkt9uTeq1H1JSq1ozeS/+XlJLjepNvWv9rZ6aCf65nfr3uip6a2ynvjJ3
TsX4x5165twqz3Al3h9Q8myn4/UN43dx7HKvFV4ZHtFKvT11b+oh6xvr62nh
r+E74cuq1N+fduo/c/0UjH8IXw+fDY+Ev4Xvhq+oUvP77A4t8QKM6ce1c03G
euvVuzv6zFhgDDJ2r1USm4yRxuo1SmLnRPTXQ5x/JMd2qxLDjK1rlsS2SYw/
zPjRPrMqOc+1u0pJLuzi9Qjjx3BsL8b+5Px/wUf5TKrEdHPvmJJYb44+tp01
YO42Rx8Dj24ld5uzjI0rl+Qyc85QeJmSXGTMHwIvXZIL+vF6vJ36fN8qGkPt
smqJ9jCmq03WKYn1xli1y9olsXc75wWfX4FjM1bJ8dvBTSu5v9Wb+l8/YL8q
ms3ctlqJluvL6zHGj+PYPlVqBmPJCSW1xATux52d+mqbKjW3seW4klpcjWut
eEGJ9lXjqkUvLNG+egDGkuNLvIE/elKvWU/qR/wO3wHvD29dRcPq1ZxUom2t
QfVqTiypTcdx/m2cvy/HtqwSA8xlu5fEBmOKuW+3klhjDDBX7loSG9Rs5v7V
S7ScNbHexCkltbI1mt7UySW1mzWttf6pJbXueP7+7fz9/Ti2FWN3l/gt5jBz
mTnmtU59Z+5p14mdxlzjpee/0qkPfR7ec2vvO0qehXPA2vzOkrnhGrd2+qRk
7avZ9QJuL9HyfoffdVfJs7amNVY9W1Lr6oHpXbxX4o25BvVK3i1Zm9a81sL/
LKmFjXHW1m+VxD5jgl7YOyWxwjVvLfh2SSzQc7B2/VeJF2HNbq3+UEktb01v
7HmipNbXAxgLD+6ON2BNMw4e1p1axxpoPDy8O7WRNfVP8IDu1NrW8L/Ag7pT
2+sB6hW9X+IN6in8Bg/tjtdgDa5X8XhJba7nYWx6rHS8EPhXeEh3vBU9F2v/
h0u8GD0RvYxHS7wSPRi9gEdKvBk9CWPhf0u8CmtYa7cPSmpbY7Jez8clsXqj
JrWeNaC14CZNalVrNmu3teEPW/EU/L0bN6kVrWmtbddp4jVYc1t7j2lSe+tx
eD/WbFIL6ynpLX3QiXdqNrXbu1VymzHeWP9eldxqzjP3vd+JX+Zcc++HnXik
5lH7fNSJH9ZY1lp6TNaire54T+s18Xr0qLyfGzTxeqxhfb56KuaC/5V4LXoe
5p7nSrwQPRa92+dLvBc9Y72Jj0q8ZGt0vboPS2r3DZvUxtbQzhc9J73hF0q8
KD0qa/uXSryr9Zt4Z3pQzg9zlN7DiyW5a90mXpGelfPTnGdufaUkF5pD9bJf
LsmtmzaptfUE9Ab0QH6GB3bn+Vjj/w63u/O8x46KF6gn+CGx5A94OfhI+Av4
z1GJ5cb0r3qiEV9vRzOrHX8bldrOGu9jxn+FZzI2wx/1JAfqZd1SOrmxynwZ
V+IFTeT85eGjOP/Lnng8/t7fS7wfc57e2z9KcqE5U2/x1pJcOoHPLwsfwec/
h8fB88J7w5/Av4+KVlYzf9aTGG9uu7ok9ptDzDVXleSWMVVi/1nwL/DS8DZ+
P/wNvHaVWH8G/FNPPCvn+/gSL8sYbO6+oiQ2mxPM9ZeX5IrxXM985jau59Oe
5Bi9jytLco8eodrh0hLvUA/RXHe2Oqonno5a4LISr0fP2Pk9ocRL1rPWu/2l
xMu2h+D8+qOkt6BH86frsTvejZ7RRHhEd+aLHppe2hTd8fb0sJxPfbvjbalJ
9IJvK9Eqel7Gg67ueGFqNHsjC5WsZzVrP3jhkvWsB/QH3N2d+KInNgEu3Ykn
auoWvEjJerem6Q8vVrLerfEmgxctiR961Hpf/boTX/So9Na/L/Gu9BD15n4s
8RbtGRiPfi7pJehpGu/6dMfrtAdifJhY0huxB2J8nFTSG9Gzd33/WeLl69Hb
K/mhxLvX89fL/6akF6AnrNf5ZYlXbA/BXst3Jb0FPUy9z69KvE09eL3Wn0q8
eXs+ep9fl/SC9PztDX1b0gtYBt7W9Qp/y3zYrMn90JPz+a7VZD7owRsP+zWp
vazBvuf8PvC68JntfL4LHuP8bme+94XXcz3A38H9m6yHK9qZ/y14K+cj/AM8
Gby18x3+EZ6jSb5VsxuvJjH/14FPh79mfLYm+U8P33jYDR/RioY2XkzeZL6r
mV3vI5qsDzWx8WBAk99/JfwzPKhJr8Wei+vl2yp+jx6O+ncw43u14sm7vsZW
8Sr0DNSvP1fxGvQg1Ou/VPES9CDU+7M3yd/WMMbboU28VjWg63tYk/igJnP9
lybrV41pvBnSpBegR+v6bTeJN2pa489AeDvjUTvxZ3gTbacmNT70Nsn/1jTm
h54m+d8eh/ll5iZ6Rw/f/DVVk/iiplbPTdkkPum5qtembhL/1Pzqu2maxEc1
uvptWviMVnoS6rE54dtbqUHVY9M1ie/2SNRXMzbRi/Yc1Dcjm8Rve0LqsRma
6Et7Puqdukk8saekfpmpiX5Uk6rPqibx3h6U+ufXKt6WHpP1R9NEL9qTUe/M
3SR/W+OpJ+dvkk/11M3PCzbJl9ao6p9R8BWt9GDUp7M00Y/2XNQDszbRX/Zc
zP/zNNEL9nTVrws1ycfWwOrhBZrkd3vM6oO/NNFj1rTq1Sma5ANrPOPnvE30
hT1k9eJ8TfSCPQj12lxN9LM1rvp28yb6xp6L8fmnKl6Znp315/gqXpEekl7S
ak3ikz0K4/OqTeJjuxPPVmkSj4Z34tnKTeLLsE78W7FJ/BnSyS+jm8SrwZ38
vDz8Yis9HfN5P+qLZVrx+PT6VmoSD4d28s+nVephPU69zhWaxMdBnfz5cace
0vPU+1y9Sfy2B2V8XraJfu3Xid+LNtH/9siNj0s10btdnXi8dBN91qcT/5do
Un/Y0zX+rtEk3tqzMb99UqWe15PVX+1bx1/RA9ULXaaJ/uvbic+LN6lf7Mka
jxdpUq/YozKeL9mkHrCHYj5aGH60lZ6h+WC5JvVUq5OvF2tS39hDNn9MVseL
sMa31u9Tx5/RM9U7/bNTT+rJ6s3+UMXftydiPf0VPGMrnr3+3ddV/G1rcmvz
b6p42/YA9FO/q+Kf68nrR3xWxe/QI9Yf+LxKva+HrX/wZRU/wp6F/t+4Kt6l
HqRe5BdV/AJ7HP/vF1bxovU09Ta/r+Lf29PQX/ixivdsT8N6+Dd4nlY8bf2O
CVW8bj1tve3Bdbw7PTbr6f51/C89HL2cP6p43XrkeuWtOl6JHoleyaQq9bke
tl52V536Xc9a73piFa9bz1zvfFgdv0xPUH9saB0/TA/Qen9QHb9MD1Ivcji8
diueov7cwDr+m56k3uSAOv6cnqTe5JA6fpSepH7BOlXi/5kl+W36JvW2PXLr
vzWq5JPTSvJvb51+hz1a+1ezwYe30nOz/zVrnX6FPUD9kJ46/Qp7jPqNM9fx
s+1R6l/OUqd/YQ9RP2WZOv0ue6b2v5aDX2ilJ2q/a/k6/V970vbDVoA/aGXP
iv2rZev0s+yp2v9q6vjl9kD1Q0fV8dr03PRD56jjl7tHRD99yjp+iHto7A9O
UcefcQ+N/mR3HX9Hz1n/c+o6fol7PvQrp4G3bGXPhH7nVHX8FvcA6f/NXsc7
0UPR75+rjj/vnhT7N6Pr9F7twdrf/ksdP909MfZ/5qzjp7snxn7A3HX8d/ew
2A8aUcfP0tPWj7WnMxBeoiTeqbHUWmq0ZavsH9Gr0bPRG3cOqHXUCM4NNZpa
TQ1nrWINZC1kDTdXFQ2hllATWdtYY1lrWdPNU2W/gvtZ9KD1ovXnXRuuEb11
NaJaUX/e/SvWhNaG1mxzV9FYai33w1irqAnVhmoyayU1oFpQzbhWlTmqVlQj
OnfVnGpPNaZa1prN2s0aqa5SI1krWcPNUKWGs5azv6G/qN9orDHm6Hdag1qL
6jfaH7H/qLegx6D/6D313h1Vcq/VoGpRNe+SVWpWa1dr2mFVamJrY/1n+5f2
X4ydxlD7K5PX8QPteein27MbDC9Vkt8WruNF60nbb5q+jr9vj1w/cZE6/W33
LNl/8hq8N4eXXNuidfrd7sGyf+Uz9Vr3KnnWC9bpR7nny37OvHW8Pvd02L+a
r06trgeoF2gPegC8eIlfskCd/pQ9H3s/C8GXt7Knyn6Rz9i5tXfJs3fO+Kz2
KZlL9nCcq/uW+APz1+kd6RHoFThnnHtHl8wl54B6+fSSuVHq+Lf2dPT/fWY+
6/VKnqXPwLmwbsmz8Zk7d7ctmQs+E5/VCiXParE6/X/3uNlvc844V7cpmUvO
KdfG1iVzzXvkvXK/j37p0nz+kVb2jLh/wN+k96Gf7m+t6/jJ7knS/52hzn4B
99Toz46s0/9xz5n+8jzw6a3sibP/PBO8Zyt7lPRvZ6yzP8E9Ufq9S9bZH+Ce
NPc7TFenX+QeM/3txeHbWtnTZ/+xquN3u8dGf3ypOvsP3PPl/ogl6vRe7MG4
32HaOmvdNW9/7f8ArEfVhw==
              "]], 
             Polygon3DBox[CompressedData["
1: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
e+gAu8g2sdnsP/cVQVg=
              "]]}]}, {
           EdgeForm[], 
           Directive[
            Specularity[
             GrayLevel[1], 6], 
            RGBColor[0.772079, 0.431554, 0.102387], Lighting -> {{"Ambient", 
               RGBColor[0.35441579999999995`, 0.2863108, 0.2204774]}, {
              "Directional", 
               RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               GrayLevel[0.3], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
               ImageScaled[{2, 0, 2}]}}], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1: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
hfsY43DXcB9jLH4P/4H/xReE8/ne+F38O/6ncI31N95McSvcK3iqHMd0lh/H
94Vr82fwwnBd/xx+INwHeB7fH67Zny3HLsXApXh8uL86D18f7pstwWPDPdjb
8Zhwn3ZO+Vwr7t2Bx4X7jXPx6HCPdza+N9w3eBrPDfcx1uMO4R5gf3xruKe3
BrcP9wP74XbhnmHf8meu5345viPcl3gMzw73Sx/Gt4d7pI/gmeH+3io8J9zb
WYfnhfsbj+Lbwn3RtXhWuJe4Go8I93tn4ZHhPvCteFS4L30bfinc3/sBv4l/
xn/gF8N9nu/xpnDf70f8Qrjn8x1+Ltwv+ga/hX/Bf+J38G/478K1+D94c8Uq
vn7FfxW+j1RXlsL19L+sbxGuof/DWyo2hHtQPxW+p3R//YLfwD/h3/E14b7l
A3hauL+6EE8P9zwX42vDfc4H8XXhHukiPDXcR70fTwn3S+/FV4d7tvfh1/GP
+Df8SvjO+hkvDvepXsKLwn25F/GD4Z7VC/gD/Beu4PsR2TmE6pqRVZzTdsIH
Zd/xyttPyM7tVDufnJ3PqbY9MTsXVI18dnaOrprupOy8UPV1reycTHXWKdl5
oWre07JzfdXOp2fnzaqDTs3OlVUjn5ldn6jGOSs7d1ctVjM7p1d91yQ7d1fN
3jA7p1cdd152Hq+6qW52zqcas052TqC/8ajsfE512W/JcV/9tz+S4756budk
546qMetl36mqSetn1yGqVRtl1wCqGWtn5xaqMRtn1w+q187NrlVU0zXIrk9U
652RXSeon9A0u65Qn6FZdq6sPkDz7FxZvf3js3NN9RPaZOfumhG0yM711fNv
mZ37akZwfnZurf5/2+zYp9lEx+wYoRnEBdk5geYIx2XnqepjDMjlPEP1b3a8
0JyiXXbeoFlGh+yYohlH6+y6QnOKX5PvQvVaW2XXJ+pbds6uW9Rb6JGdx6sv
0TO73lCe3C0711efoXt2PaAeyIXZ9YB6FL2yaxX1PXpn10jqdfTPrpHU0+iS
XRuod9E3u+5Sb6RPdq2l/km/7FpL/ZCu2fWYehqdsuso9VGPyc7R1d94LflM
asb0SnJc1izsieR7SL30z5JjseYdG5PvJM0UFiff95ojbEi+n9TzX5p8F2rW
8HlyDNVM5Mvke0gzlw+T47jmNV8kx2jNXD5Jjr+aj3yaHKM1N/k4OXZrpvNQ
co6lvv2y5JxMM4glyXez5hfrknMC9QoeTb6P1fN/ODmfUG9tTXKOornD6uSc
RnOTVcl3v2YrjyTnHOozrE/OXTSzeDz5LtdsYkVyLqiZyPLknE/zlJXJeZ5m
N48l5zeaj3yUfJdorvRB8l2i+dFXyfff/2dMyfeu5lZPJecrmpu8lHxfahb5
ZHLeoJnI08k5k2YizyTnVZq5bEq+gzWvfDn5bta88q3kmK656uvJsVjzyjeS
47XmmG8mx3rNVd9Jjumaq76dHOs1e302OX/SbOXV5JxAM9MXk+8/zVifT74j
NVf9Ojnn0Azux+T4rjnFL8k5rmYlPyXnvpop/Jycj2qm8H1y3NfM5Yfk+0Dz
zW+TcxfNK59LzuE093k3+X7STPO95BxFs+D3k+97zea+S851ND99Ifn+1ox4
++z7WLNU9bO35R45kLtmt+wcS7ObUnYurlnMNtl3tua2W2fn4prtRvZ9rLnP
Ltl3v+Z9fyfn/Zq5/JWcr2vmsmv2va4Z05/J9YDmLNtm5wqaHe+QfWdrhvtv
cm3z/zlO9t2pOe9O2XeqZso7Z9/lmvP+k1zbaLb1X3Jto5nXdtk5iubLW2bn
+pphpez6WTnzIdm1t/qfRXYuollVRXb9oxnT4dk1tvqHR2f3DtRXPCy7nlf/
MGfX3srPD82u7dVf3T07r9WsbY/s2kYzr0rZd7xmYVtk12+aYR2c3XdQf3Kz
7FpO86mtsnMmzdw3z67rNJv7H+tdqJQ=
              "]], 
             Polygon3DBox[CompressedData["
1:eJwtmmWgHdUVhV+BR9HSt6Fo5yJDIcHd3V2CexRiJDgkxAju7u7uwd3dKe5W
HFpa6vJ9Xe/HJOc7M/e+OzNn9l577Zl/4Oh+o6bq6uo6g3+m4f89Ol1dG3V3
de3Y09W1ft+urt3hDeEd4PXg3eAN4O3hdeGd4NXhLeA14W3gFeGN4JXh/vDG
8E7wBnCxfcv4C+YWZd+v4a/hz+C+cA/8Dfw5vAi8C9uajLdibm32bQevDG8C
rwrvCK8Gbw6vAe8ArwpvBq8O7wyvAW8JrwXvBW8F94c3h/eEt4T3gDeDf8P2
A+OvmFvCc2VbiPFKzC3GvtnYvmf8JXOLe63Y+jBehbkl2Lc+/Dt4RXhReB62
vzD+gbnl2Lce24KMV2BuEfbNwfZHxt8wtxT7tmVbifHGzK3Cvu3hVeBN4dXg
2dl+ZPw1c0uybwjbFox3Z25T9v3cp6vrOcaPMTcd+wazbc54N+Y2Yf9AeFN4
F3gjeBC8GbwrvDE8AN4E3hneEN4QXhheGV4cvhD+CP4DfDh8NHwSfB68N/xX
/v7zjB9nbnr2/Q1+AX4CngH+O/wi/CQ8I/wP+CX4KXgm+J/wy/DT8Mzwv+BX
4GfgX8Fd/I3fwy/ABT9ZXV1vwC/Cs8L/5vhX4WfhWeBfcPzb8Kvw7PB/2P8a
/Bz8a/gNPv8F/CG8IDwDx38CvwvPB08LfwC/Cf8Wnhp+F34dngu+iO1Hxj8z
dwT7fsn2IeO3mGvYNx38Efw23IGnhz+G34HnhWeCP4PfhxeAp4LfgV+D54Rn
hj+HP4BbeEb4U/g9eH74v5zP6/DzcA/8K/Z/CX8CLwTPAn8Ffwr3gS/o5Fw9
58nsWxvuuJbgheGF2BZn/Fvmtm74H54LLngDeFqu1xxwD7wh/EXl3L0Gy/Nd
x7CdzPh85kbx2WPhU+AL4NHwrGzfMf4Dc4v5rMCLwvP4jDf5Df6WBu4HNz5D
8KzGFLgPvHRPfvM28Pl8x8uM32LuMPbN68b4N8YI9s8Hzw/P7jMEd+AGns1n
DN6Vz6/luTK3DvvOg1+C34QnwQuw/Y7xnMYYjl8Q7gvPbUyBW3hheC5jIHxu
J2vRNTnRv83WMp7DmMT+l7lfJ/vswE/Dc7L/T/C38NJ8dl22+Rgvy1xf1zrH
n8H4GOZe4Pg34DPhY+EX4e3ZFmD8G+7D7ey7EN7R+A3vxOcvgHcwfsM7wvvz
/cPgg3uy/yjmz2J8HHMvcexFbDsZr5nfmf37cfxQ+KCefP51/sbpjI9m7nmO
PYD9wxkf0pPjX2P/aYyPYu459r8Cn+KzAT8DvwqfCh8JPwtfzLaz8Ya/twuf
P5jv2xs+lGN2g8fAo+Hx8B7wIfAoeBy8O3wgPAIe05PPHwSPhMfCu8KX8f27
Gf8qx1/qPTfeVb7/EngX42Hl+O/5fQ/x2TuZ+yf7PoJvgC/zmYGvYNvDfMHx
/Tn+cnh342/l933H8Q9y/B3M/YN9P8APw3fB/4K/hR+Ap8B/h/8IPwrfA/8H
/hF+BL4b/jc8opPrM4y5rfn+U5vE6835e9vCpzeJ/1vC28MnNMnXG8Fbwic1
yb+bVD7vGp3eWFpZu6c1yQ9bwNvBxzfJ7xvCW8AnN8kHm8L94BOb6ION4a3g
U5rkk83gbeAzmuTTreAd4OGdrKehPTl+WCfrc6+e/L6RnVz/4T35/r9w/s8y
fpS5aTt5BnwW5oW39buZW5Lx2swt7/nAS8Brwcu5nuET4XPhkfAEeBx8LDwY
HgePhY+GB8KT4Anw8fCe8ER4PHwcPAQeDx8KHwMPgjeHF4fXhJc1NrL9xPg7
5pYxt7Itynh15pZm3ybwIvBq8FLwxp4TvCq8JLwVvBS8DrwCvBm8GLwGvAy8
Nby8sRdeEZ6b7c+MvzdGsG8a+D349/DccD+2Fbx/zK3EvnU6uXbGTGPnofAY
+Ch4gLmR630x4zOYe5vrO6qT52VkT9bX0E7ix549WQ9ncV+vYnw+cx9x/Id8
/kr4PPhDeJ9Ono9RPVmPozt5PvbuyfraF+4Pj+7J+hgL7wNP6MnztHcnz+eI
nqynd/j+Sxifydw7fP+bxjj4NGMsfCTHn8D4HOZGcPxh8ET4BHgvczXHX8r4
LObe5fi34Ivg080Z8AfwFfC58AfwZD4/ifGJzA3l8++z/3LG5zD3Pvvfgy+D
z4bfg4/g+OMZn83ccI4/vJNYakwdBnf7HYzfYG4e9p3F9iDjp5gb1zf65fPe
/K+eWbWTXGPOMHes1kluMQeZi1buJJeZ48x1K3WS68xp5rYVO8lt5kxz5yqd
5B5zoLlwhU5yqTnd3D6W7V7GNzP3GefzHOc3GT4Qvhd+ss1aU8OqZR9vk6tc
8679h9rkcjWx2viBNtpdja/Wv7+NtlfTq+3vgT/ujkZRq9zbRquoUdQqT7R5
llzjrvXH2mhjc6S58r42Wsaawdrh7jbXzmuoVrqsjfZVg6pFr2mjHdWEasMb
4Fe6ownVhje20YZqLrXXlDZaTY2mVrujjVZTE6oN72yjDdVgarHn+c7DGR/E
3H1cr9vaaEU1oFrw9jZaUA2oFnyG4ycx3p+5uzn+yjZaWA2sFr6ijVZWI6uV
n2U7jPEBzN3D8de30XpqYLXwdW20rBpQLfhom9rAmsLa4to2WljNq/a9q412
VHOqPa9uo7XV2Grty9todzW72v2qNtpcTa42f6RNbWQNYi3ycJtayJrJ2unB
NrWdGk+tdyZ8q9cG/prPnw3f3p0caC6c1EZLqHHUOhfB98KPwz8Zm+D74Cfg
P6st4Gvg2+E/wOe0yaXmXHPvhW1y6WPwn9Qa8NXwbfAXahH4KvhW+HO1DHwt
PAX+sk+eSZ/NB1xzXO9DfUbh+72m5vo22lcNrN66oE2uNoeby8dz/NM9ecZ/
4vgJ3nP4Idc0fFXlXDynH+Gz+PxtjO9n7hu1HnwdfAf8FXxrm9hhDWItcm4b
baFGUauc30ZbqBnUDke3iXXGKGPVMW1ilTHMWHY8fGl3NI3a5tg2sc0YaCw8
rk0sNKYb249qE3uNof+PpW1yszWmteYl8CPdydnm7iPb5BJjtrFbDa2WVhNP
3YkmVhtbv01lrub4yxnfxNwnHH8SfAV8M/ypWhm+Er4F/gw+r402U1OprSbD
p3YnJ5gbjmgT281p5rbD2+QKY76x/4Q2Wu5G+GP4zsqz5DP1C37PTW1qL2s8
a72b29R65lhz7S1tcq0x3di+Rie1izWBtcGandRO1jTWNgez3cX4BmMK9/sx
/ua+8CD4GvhxeD94MHwtvHontYU1xf/1mb/JWAEfAj/K8fswHsjcVRy/N79n
QHfm3DeqzT7/hn9rdJu/5d/wbz3MNthczNx5fP4heJC5Hj4XfgQeYu6Gz4dP
7yQ33MPcGOM7+wcw7meOY/9+fP+ejA9k7inPDR4CHwA/6W9tc277w0+ojdkG
mtvN2Xx+WJvvcs59Z/D3bulOTjI3WW/ObmzuTv15EvsvZnydMdF8wGe2Zbwe
c8ey/354O3h9+Di1bMWrUtOqbU/m85cwvt4cp561hvfaG5P75hw9V6/5p03O
wXPxHK+HT+D4C713zO2nXramhq+G9zWfcfw2jNdl7pgmMchYZEz7L3xmJ7HF
mGJsOQd+uDsxwlixVie1rzW4tfjZncQOY4qx5ZRO1tKd5hzrAfjG7qwx19o9
/L1+jNdh7ij+3nGdaDU12z59s4ZcS37mE/YP5fpv3Z176r0d0WYtuEZcK95T
7+1exowm99B76T2+Dt6rzbX3mnvtB8Nrd+c3+FuGtPktXhOvzZ6VWtKa8kY+
P4D9SzNel7k73d/m2nlPvbfqTWOhMVF9OaFN7WiNaa3pNfBaXN8dPfqCMcBr
YUyFJ7apRa1ZrV0Pa1NLW0NbS09hW64nNfSeHP+iMcxnzRwFPw1P9F57zeGD
KtpZDf0gPIjvW5bx+szd7dqGl4HXg++Ch7dZ6z5jPmsLVbw/PcBhTXKIuUR/
xVr+UI6f3B2PQK9gXBuvwBraWnp8m1raGtpaeix8GHwS/FKf/E3/tr/pkCbX
1GvrbzpIv6Ci5dX0egMj28QCn3mf/TFtrp3XwGvhOXluyzE3huP3Z/++3bkm
XpsVKrWJNcpY9vdvcy2XZ+4O9s9e0Zpqzh2bzLmvhYfqH7S5tmoitdHBbbSn
mkptdVAb7aMmVZse2EY7qYnURoe00V7ec+/9Q03qu0MqetycYe4w53/TJMea
a9Ugf2tSU5hfTqnkK2sEjz21ku+MUcbPfpX4ZM26V+/1s9Y2ZhrftqncX2so
89fJlfxjjWF+O6mSf/RszK9HVtafNaS1pDXfgCbPlOc/qPKsmRM8/4GV+G0N
tmdvfDaeWfNa+1qTDmziMf2S8UyV+sEYbT7YuvJ8W1NaW1qj9m8S441t21Xu
vznBZ3vbyvPvM+96GFKJBdZk1mbW7Nb+1nDWctZ81v7WSOqz0yt6w2fEZ+Xg
Sj1kTWltaY2nl2FNaG1ozakXYc1o7WjNqLdhzPX+Dq7EYj0CvQI9Eb0JPQW9
BT0FvQk9ab1pPc7ZiH1fNrnXF1byvR6IXoqehN6IHqheqP6q/rH5YkhvfjR/
WOOpH0+r6CljkLHozIo+Moe7HgdU8q01qfrixIoeMUe7vvtX8vMerNf5uxNz
jD3GLOPz2ZVYpuY0Nl9T0aL2OOx12BPYu0lPw96GPYHRTXoi9kbscezf5Df7
29evxGPjzfq98cDnzZ6CvQV7NCObaFrzydWVfKRnq3erp/9Yk+d3+d74aHzS
g9igNx4Yv/TE1K8XVPSknsOGvfFgeBMNbC69tpK/7AnZG9KjGNHEE1QvTqrE
N3s09mrsKe3XpKdkb8kez75Neior9sbPnZr0XOy92KPYtYlHOx3jmSv1sh6L
Xos9mt2aeDJ6M3oyezTxkPSS9JAGNfFo9Gr0aHZv0lOyt2RPaZ8mnu8MjGep
6D17IvZG7BHt0kQzqCfOq2gJc6x64dxK7rWHZC/JHtHOTTSh+uGcSv7Wg9aL
tud1QBNPSG9Iz2twkxpd/XN+RR/Zc7H3ouf1aBNPWf07sZI/nmyifydU8oM9
F+uJByv1pT0i9e59FT1vz0a9e3+lfrZno959oFIP2mOwfny8Um/as7HefahS
v9qzsd59uFIv2mOxXn6sUn/ak7GefrRSj+uZ/Rv+tOIn6Gn9B/6sUv/riVjf
P1Gpd+2h/Rf+vOJH2KPRH3i1Up/bI7J+f6RSz9pT0U94vVLv2pOxXn2pUp/b
k7GefblSn9uTsX5+pVL/m/PUN8tXcqE5VD2zbCW36mFbHx1Wycf2Q7orv9Hf
qgY0/69b0T9qMvXuOhV9ZI5W7yxXyd1qXLXuLyv+jB669dzkit7R49Nfeb5S
j9iT0n95sVIf2hPSn3mtev2JJvXf4RX9owdlff5CpX6xJ6b/8kzFD7HnpL/y
bMUPscelf/NcpR6yB6Uf9PuK32JPZmp4uorfZA/SXqSe8uQmmkk9M7qiF/R0
9VvurdSLeiDqm30q+V89sV2vnvfa2yP6K+P3K36CPefte/W9esMe8s+M36v4
TfZk/wZ/UPGj7JlY3x5R8RfsYe/QWw8c2kTjqQcPrOgdNaN+xAEVPaHnot7a
t6I39HjUk/tX9Ik9cnvleu7jmvS47XXrkY9v4qGpV/er6Bc9Rv2GMyr1tj3u
v8DvVvwxe3Q/wW9X/DB70vam9fgPb9Ij+hfjTyp+mD1ce7l69BOb9LSmYTx9
xQ+05zUtPGPF/7MHbC/YHsJhTXpk3YxnqPiJ9uD/DL9T8dfskdsr19M/oknP
+R+MP6r4P/YY/wS/VfHz7Jn/Hf6w4gfZ0/4n/HHFj7KnbG/ZnsSEJjnJ3PS7
ijZUg6tVF6zkR3vS9qbtMUxq0kO0l2iP8fEmPXF7474TMKrJnP7v+Mqx/mZj
6dqVc/EamivXqlxbr4G5ZY3KtXHNmnvWrKxlPRq9misrfoyek96T9/D7JmvQ
XLdiZW3+0KTWu6LiJ5ljzU2LVHKv5+xvXbVyLew/6636TPls+ZkpvfWO3+U5
m3tWr1wL77G5f7XKvXfNmctXrqxF17S5daXKWncNqh1WqaxNc665qm8lF6sh
zIWLV7SFGsNcuWhFe+hXWV+pEdQK5hBrDZ9pc4vXQL/t8sq1UWPrz1xS0d7W
e0f21mNqyW+b+FWXVvw334FYobcesD7wHpp7F6vcW3Oa/ZhDK7nu4Sb9mDEV
v9+crJZdopKr1Qhq6SUr2uGRJv2fsZV+kJpCrbxURWuYY82ty1Ryr99pL0FP
37/lPb+jt750Lah51B4LV7SQnqLeopr3uybnYK0zR+Xcbm7SHx1W6R/d1KT/
OrTSf7qlSf9yeKU/ZQ/bXrY96Gk60fT6AfNXtL6aXb9p3oqW9xrqZapRvbZq
Gv2jTkXrWGNba+9V6ffooeo/6mfqd01p0l8dVel33N6kv7p3pX+iZ6t3q8b7
Wa3XpD87stIv0z/Ty9DT0M/Ts9W79Znpgm9t0o8dUemnqansZzQVrWXNo182
X6UWUoPZ21+gos18B2BmuCrvBvhOwkxwT8UfUUPZ/5iroq18h2BG+NcV/82e
4SzwbJVeoprR/sicFS3pOwS/gmet9MfUcPZX5q5oOzWl/ZN5KlrTdzx838H3
eXxfRI2rlutT0b5qNPttbUW76WHqZVpjft2kBtF7tCa0NtHz1Pu0ZvyqyRrS
T76ssrb0jPXfrqv4Q2pY+0O/rWhb7+lRvX6F99oaQC27dKU2sAZyLT1dqY3s
9+vtWoNai+oJ6Q3Zv7P/r0dlv+D2inelp6W3ZY3ycpNz0H++uHJuemh6aWrS
15t4YnpjatpXmnhqemtq4FebXDNrszcr19KevL1815S9env49vJ9Znw3wJ68
vXyfEXv1PjNH9/ovPkv2DO0duob/35vvm3cFXMP25u3x+y6Ba9Dev2ter/eO
yrPgOwu+u+Az6bsPeop6i2r415rUQPaHx1VqI8/JfuOxlXP1mhgrjqlcK3v2
9lNurfjxXlP7gUdXrrUxyN6032Fs8p7bv7ioshb0LOwl+hm9DN8JsH91W6W/
4DsJ9oturvj/1tT2Gn0fxFrbdwzs19xS8ce9J+bKEyr3yncS7C/dVOmXeI7W
esdXzt13Euz/3Fjpz+h36ZWpkdRK3kNrjeMq99Z3SHyXxBjjuyd6sPqH61X8
O2OevXM9GWOhMc5evDHc2KcHY7/uhoo3Yw1ur+CpSm1uzLHfcH0lFhmj7M2a
441dxih7vd4jY9dUvf7qXZVew9S9/da7K70IY5C9fXOCsckYZf9sSiV2TdPr
t95TicX6ZfqfeiR6Jb4Do3+pH6p/Zgz03QFzlLHxf0bvGhU=
              "]], 
             Polygon3DBox[CompressedData["
1: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
5h/gtWRT
              "]]}]}, {
           EdgeForm[], 
           Directive[
            Specularity[
             GrayLevel[1], 6], 
            RGBColor[0.363898, 0.618501, 0.782349], Lighting -> {{"Ambient", 
               RGBColor[0.28733552, 0.34844024, 0.38776376]}, {"Directional", 
               RGBColor[0.10916940000000003`, 0.1855503, 0.2347047], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[0.10916940000000003`, 0.1855503, 0.2347047], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[0.10916940000000003`, 0.1855503, 0.2347047], 
               ImageScaled[{2, 0, 2}]}}], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1: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
5Y1jo9eDctQx0etHOero6HWoPHZU9HpTjvpW9DpUjjo4ej0rB3s1cT5/Gp/h
tcT5/On4JbwRV8dvR69n5bQjovdX5aXDovdm5aIjo9ezcuOh0Xutctrh0Xu2
ctc3o/dd5bdPJq5TTuX9p0bvN8rDn0hcy1Th/HvRcV/52+zo/UN515zoPVt5
18zoPUM526zofUU52EfR+Y1yto+j8xvlcgui8xLN/7nRe5VysK+i8xvN80+i
85ijnP8yOl/ROvowOh9SbvZBdJ6kfOz96LxKedov0XWa1sXC6NpM6+Kn6DpK
a+eH6BpPc+zn6HpMa+2L6DxJ63d69N6pPHZRdF2nuf11dO6ldbQ4usbT3P4m
Og5qzn8XHe+0rr+NjoNagwOj8xXln/Oj8xXFhM+icy/lkI8nrjErc35a9N6v
WmlG9H6snPzhxPVpea55JHF9WgE/mrhOrIi7Ja5Py+HHEteblfDa6Bpe6/f+
xHFY+ctDeCkuy/n7EsfqgJdH15x6/9+j61L9u79F16t6/6XR9YbW9bLoPFiv
XRJd92qNfx6dpx7n88+LzgsVMz+NzjWVS/8aXQ/rM6yO7k1ofv4RXevqe62K
7k1ofq6Irkv1vdZE9yMUo1ZG16W6h30S9zrq4755fQbl470T9zTqKbbkvHe8
qToj5z1oiOqAnPeRwYrBOe/14xXXc96XxynO5Zw/TFB8zXkff0exPOf8513F
PNwUz8Hzcs5bJis255wLTdSekHPuMUZxEV+AZyt24vPxLMVXfB6eqVok571s
kGqUnPevgaqHct7X+muvyDmfnIbH5PVhVON/lnM+Nkk1UM774wDtJznnpTP0
++ML8VztRTnnqNPxItwMf6A9B59b2L2phfgi/L72n5xzranaD3POo8biyTnn
ckPxMdwVL8VH8YN4iX4TfAv+Ef+Hu+Fl+Dh+CP+q3xPfin/Cu/HN+AftUbgd
/hz/ix/Ai7WP4SvxAq0PfKnmgPYufAWej//B9+GF+Ai+Hy/Cf+Wc0yq3nZZz
vjqC8zNyztNG4ek553gjVQvmnMcOV42Ycx47TPt/zjnkaOULOeeHb+P3cFX8
Fv4b34t/wbPz+nvKRw7je/DPWvd5vS/lsL/hVvhDxXLcFn+m/TOvb6Ycswh/
P41/Y2yVOLdXXL1K/0Zhr8ferJdscO/uvMQ1zg7GyDEKb2ZMOd7CWxhrc7yN
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
MUA1WhX+3hvdv1Zt+H+j4udk
              "]], 
             Polygon3DBox[CompressedData["
1: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
HtQ=
              "]], 
             Polygon3DBox[CompressedData["
1:eJwV1mXcFsUaB+CHlM4XpOGlpFORTgOkywNIhwdQGjyUNBh0KUp3dyPd3amA
gNKhiLTCuebD/8N9/e7Z2Zjd2eiWnep0jBmJRE5KHEmUPRIZFRWJLE0ZiZyO
G4m0zByJHJN8rDRrzF5kikSuZotE3met2TAWpee45GdlWBP2Ut8jfZ+yoWwh
e1fPEcnDSrJG7Jm+H9lv6tcpIpEkbAmbwq6zWJKMLWM3WWNjP2ejWX71IcnF
irMG7Im+xK5jNFvGzrBWen6Qa+p/zZGYLdZ3wfm9ra8u785ihh72AWvDvmKp
2C+sGKvPvmCx2c/sHVaP9WCx2GHJzUqwhuypOUaz8+rb5o3FZrLv2K/sKUvA
FrBJ7Cp7yRKxRey8OYo6Xh3ejcUI41gl1pINYSlYQde7jp1hr9gIdlZfYVaL
dWERdlTyslLsE/bcHAmNHcmWsFOshZ5XxvZlk9kOVoudZNlYRdaS/WHsZVaR
tWCDWXJ9J1hWVoG1YH/qu8WbsA5sDCugviGfsM/YKJZP/b1cUT93DxKyhcbm
c36r9Z0M94Z9o6cAW8tOh+fJhrMJckn9yNh4bJ6xC9nfLLZkYVvZRHZZ/Vhf
fDafjWEX2F0Wm81iY8MzZvdZHDabjQtrgf3B4rI5bDy7yB6yN9hcdsk9qOD8
mvNBLGl4N5zzGnaK/cO+ZcvkH3Uiyc32GXvF2Pf0tWJDWcpwfFaeNWMDWTK2
QB6pY0pmtsXYxey5Or7kZLtZWvNOM3YLu8666dkuKVhWVp5d1pdO33S2ld1g
3fVslWQsCyvLLurbwBKwdKw4O8vWs/gsLXuXnWHrWDyWhhVjp9lK9lqdVPKx
g2wVi+hLxvKzQ2w1i8GSswLsMNvGkrNoVo5dYkfdlyhWlNVhv7It+pKyzKwM
+4VtZAlZelaCnWMnw3vDyrFm7F92ihVi5Vlz9io8S1aFNWR9WNqwxsMaZGVZ
U/aPvjUsJkvBCrIjbDNLwjKx0uxntoklYhlYSXaeHXMdqdjbrC67yo6z1Owd
Vo9dY0dYSlaE1WZX2E+Ol5hlZKXYBbaWxWIpWSF2lKX3fGewbewm6xG+dVKD
NWUDWCb1VLmlvmc9R7FVxp4zbxF9tXlX9ppN03db/UBfKraazWF/sBcsPdvI
prM77E+Wmq1hc9mf4T1gGdgmlsD5jTDHYn6SNdOzSJ6p40kOtktfBn0z9W1n
t9gXepbIC3UCeYvt0TePPQzfQ3NkZD+x+ewvFpFMbDObwe6q/9L3JlvLZrH7
7AlLy9az/e7BYxYlhdn28K7qq+ZcGrN+LEP4PktV9gn7kqUP33Wpzpqw/iyj
erY8UD8zRzq2wfEOmOMJSyVF2DZ2iMUxNjuryI6xmcbeU/9tbBq2jk1mv7MY
4f1iS9lhY+Mam4NVYifYQRabZWMV2HGWxD0dw5azs6y1Y53Wl4O9x1qzv/Tt
4ulYHlaF3WRL2Ut1QsnF9obvvbH19HVj37HsYa2w+qw7+57lYMvlX3ViycP2
hz1eX119XdlEli2sKdaSDWRzWdGwflgrNojNY2+z1K5jMtvErrFOLCObxXaE
PZj9L+w9xtZhXdgEljWsFdaaDWbz2Tvh/4PVZp3ZeBYdvkuO159NY7tZHZaJ
zWY72R3WM6wfY5uz/mw2KxyeN2vBBrA5rEj4N5DSrBrrwBKGvUjKsOqsI0sU
3iFjP2Y92CSWMzxvVot1YuNY5rC/O5dV7ER4D9nX4d9KX03WkY1lWVhmfXPY
rrDvsV7h3dDXhg1hC1ixsD+xHmwC28g+DM+bdWfj2Qb2Qbhe+Zz1ZTNY2bBG
5TPWh01nZcK7Ju1ZbzaNlQ7XJu1YLzaVlQrrRdqynmwKKxn2cvN2YCPYSlae
PWGd2Ci2mlUI3wzWhY1ha1kl9ph1ZCPZKlYurCvpxb5hy1i1sK6kN/uWLWfV
w9qQPmw4W8FqhH3M8b5kU9hOVjPcP/maTWJbWeOwvvV9wSayTaxy+Faxbmwc
W8/eD3u5fMN+YNtYk3Cv9DVlX7KZrBBL5bn9yDayq6xz+CeRcqwm68ySqJ8a
25mNZmtYxXD/5Fv2I9vOmob/BX1d2Vi2jr0X/nukLKvBOrHE4Vnqa8b6sVms
IDsnpVhV9jlLoM7i/Oay3WEPYb3DeySNWHs2kuUNa1casnZsBMsT1qk0YG3Z
cJZbfVk+Yo1YX5ZOfVEqswasN0sT9nzzjmUr2DnWJvwvsPFsFbvA/stSsAls
NfuZtWVvsinsJ/Yb68JWyCt1EsnLDvg2pdE3Vd9m9jvrqmdfeP9ZAVad3Q17
RXi/WEFWg91ju1l6lpd9xG6xHSwNy8U+ZNfZTpaW5WaV2Y3wX+LeZ2eVWCv2
kMV3LsPZInaCNTduj2Rg+VhVdlvfGWNzsvdZG/Yo7DPhObFCrCa7z/aGbyXL
z6qxOyyZOcaxlew8+zR8w6Qn+5otZVXVByWaFWa12ANjT7PirDJrx95Qx3a8
QWwm28fqs9xsBTsW9kI2jOViy9lR9pQNZVnZQrafPWQDWDa2iB0I+zfrz/Kw
lew4e86+YtnZYnaQPWIDWQ62hB0K+ygbxHKypewwe8wGs7fYMnYk/A+wIeGZ
u6c31HEkmq1wvdH65unbw+6zPuGbI5PYAnaMdQjfK/mBLWTHWUd1TGMHsOls
D6vLYrGBbAbby+qxM1KCVWHtWTz1WSnJPmKfsfjh3ZcFbAO7wvqp4zjeYDaL
7WcfszfYUDaHHWQNWBT7jq1lF1l7lpJNZGvYL6wdi8eGsbnsEGvI4rIhbDY7
wP7DIqwfm8p2sdrs/5JId14=
              "]]}]}, {
           EdgeForm[], 
           Directive[
            Specularity[
             GrayLevel[1], 3], 
            RGBColor[1, 0.75, 0], Lighting -> {{"Ambient", 
               RGBColor[0.334, 0.2755000000000001, 0.1]}, {"Directional", 
               RGBColor[0.26, 0.19500000000000006`, 0.], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               GrayLevel[0.1], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[0.26, 0.19500000000000006`, 0.], 
               ImageScaled[{2, 0, 2}]}}], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1: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
eCJ+EDfh80/I/Hwb43GZx8npeHRpfaixPDbzODmN8+Mzj59GeAleh8/HYzKP
n1PxdZnn0Sn4Dvyixj+emfmZtsDVM9//enyeAzM/F93jPPN91hpfoXQ8HKGx
xPka+Diun555PDTl90wrrV01NmdkHg/NOX975jHcDJeP3rMO4/eUi95ba+Oy
0ftXLbwluC7azb39Jbie3IVrRtcbTTj3XXAdWza4dtF4K+K4Obi+2sn1fwX3
d8UaS8E9WnmOvwbXUf9xze/BdeAeHP8Irg/3LP2dqou2cc0e0XXdvpwr4PZ4
H/xPcJ8YOW7ipxXezvU/4Zb4X/wtboT/xL8F15kFjj8H15M7OH9I5n2zLPfn
7+BeNXD8M7hX3U9jNroGOw7vG1071S2dp1rrTsQ1omuwxjiLrtMaaU+IrsHq
4TLRdU5NvGd0nVNDe0V03XW89oroeqk+rhZdI52AVwb3C3/zmTcG11plOH4f
3COX47g1uI/eP3jc6B7+w/WfB9dsW/EXwbXcXzhG13gNStcN7fvVtCZn3kMr
cU8G4ym4IT488/2sgp9PjJnonuuW5PpJvdULeFB0LvEcHhCdabyIr4vui5/F
/aMzkJuSazv1aN2Tx6UygWuSx6Uygde03/B3V/CZuyQ/e/X73ZLvqfKErsn3
VJnAM7hfdI//JO4dnQM8hftEZxSz8ejorGMOHhOdn8zCo6Jzj9fxyOgs5TU8
IjormIfHR2cmb+Jx0bnKXDw2Oid5GveNzhxewoOje8kncK/oPOFlPDS6h30V
D4/uc3skz1VlJm/gG6IznBuT+wT1v72Tx5Zq5tHJPZtyicMy1zaVtRYl92bK
KPolP2/VqyOT+zf1Dn2Tx5xq7FHJfaDyk3HJvah63gnJfaB63rHJPaR654nJ
vZB67fHJfax64UnJda16/D7J41u1cfvktUO9w1XJY1c9xdXJ64X64k7J41h9
ROfkOan8p1fyPPx/X5A8D9WzdEyeq+o1rkge61rzL0/ee7Sudkheg9Rrt0ue
P+pZ2ibPK+0FVybPDe0RbZL3GK2xPZP3KuVRNyT3wMp5XsHDojOKx3DP6Oxo
Isf/uP+PB4+RXfjR4H1K++kTWgcy13u/qzfi/G78mNbhzPXkHxy3lXiv1J6p
MbUDP6x9vMS1+i+Zx91O/IjWk8x1428cj8i9F2o/2l7iuvRHzpfLXMf+qf05
cx2+i+P+mevz3RyL+Mm0PnAsn7nW3cpxr9K9SXu65sp2/BCulLku/Zvj3pnr
/385Vs3cd2znuE/m2n6H6ojMtf1OjsWZe4T/OMbMfcQefOZquK72Ahwy18wF
vEfmmvlXjo9zz6+NzugKmfuULRx3lLj2/kk9VnKvqGxtcnJfp3zmtuQ+UPnb
Hcl9l3Kzmck5i/K0O5NzFuVXU5L7OmV305L7RuVgj+Ju0bnu1OS+XRnd9OS+
VPnbjOS+VDne7cl9qfK9u3Db6BzvIdw5OuN9GHeJzoRf5/5W5bt8xrp3P+c7
Rueus0rrqLmc31XiPuhnvu/OEvcam1SncP1V0XnaPbh9dP52N24Xnbk9grtG
Z9QP4qujM+ebk3tm5VcP4E7RmfN9uEN0vr27xL3YZv5Wlcx95TaOI5JzH2UR
w5PzIOUV7+OXg8f8e8m5ucbqB/iV4DG/GL8Q/ByX4BeDn/Ui/HzwmF+V3Hdp
PPyRvN8rS/kpuadVRrQ6uU/T+NmU3K8q8/khuTeuin9O7mmVlb2Dnwm+b+/i
Z4Pv50L8XPB3XJHcf2o8f5rcM2s8f5Lc7/2Dlyf3pRr/y5J7P92Tz5J7aY35
lcn9nsb8F8n9nubdh/jV4Ln5ZXLPqbnwUfL+pzm4NLnP1Fz7PLmH1PzdnNxL
K8v6OHncaP7+ktzfKrP6PbkeUgb4lO4Nz2tOse93Bby42N+7HF6An9Y6hd8s
9r0pi9/C3/F7t6jeru21Sf3CrGLfp/L4nWI/z8p4abGfWxFeWOzvVwUvK/az
rahat9jjohL+CLdO7knUa2xIzguUAX6bnCOoJvk+OXfYG69J7o3L4B+Tc5B9
8G/Jfb7yxl+TcwHljd8l9+GqYb5OziyUDX6VnI8oM9yYnF9oD12fnEcok1yX
nFMoe/wmOVtR9rg2OadQDbklOY9Qntk/uYZTXvRncp2qjPGv5FpZOWHl3H11
fVwpd799PK6Yu789DlfI3d/WxW8nPxutb+Vz943HcH6v3D15Pa2TuXu/I/E/
yTW9csg9c/eBCW9LrsWVWxZy5yN18H/JuckRuEzumjvHZXPX4kfhcrlzh6PV
4yT35MoYByf388oPByTXwcobByX3D8owBybXysoer0/u+ZUNDkvOo5VbDk3O
C5QNFuXONY7lby1IHrvay+Yn77Uah28l76N6nzUkOV9Qbvl3cg+jLHdrct2v
DPbf5H6gBt6R3HvUwvvnzhpU6+6XOx9R73Zg7lxAfdZBufMC9VP75O7h9W7l
kNyZgnq6fXPnKcr3Qu58RD1jtdz5i3rG4twZh/rE6rkzGvWeMXd2o97zgNxZ
jPrT2rnzBb1HOCx3vqBs8PDcvbHywCq5s4YGeO/cOYjy/53JmVFtvDs52zoc
70rOvA7DVXNnE8onD86dlah/zHLnIHofVCt37qD3RzVzZxN6Z1Qjdwahd0mH
5s5K1OeW5M4s9P5oe3K/p3y+cuZMT2tmndz9vzIE1d3bOP9AcG31J747uAb/
G9+n/iZzZqK5oHp5K74nuL7WujQzOENQJnBHcB+gd5pTcKfM2YvGUufMeZfm
l2rwP/BdXHNx5kxJc0F7pt4hjgjOeZRFDMatuKZDkcfMUZn7LPVbqgH13uom
3CVztqb5qHpf7xlv4XzXzFmW5vhFmTMrzbULM2d3ei7HZO5ntY51zJxlaY73
y5yJ6fn2zdx7qge9NHNGp3l9cObsV+uh+jO9850eXCvpPdrNWoNKswXlDOrP
9G53WnBPpvfIU/FlmbM+zX31THqPfCvnW3O+b5HXgQ6Zcy2tA+ql/sUPcs3R
mXtw7bPq+fSueQbnu3F+VJHXuksy54dao9Sf6Z315ODeUe+jbw+uX/ROeWRw
7/UXvje4ftE72eHBGZHyoonBtYzevY4PrlP0zveG4LpJ73xHaV3j7zYu8t5x
fubsVPPigsz5m+aC6h29ox8dXN/pPeCE4LpM79zHBfd2ej9+W3DtpvePY3GL
zBmF1hbVd3qPPCy4ttL7/TH6XpnzHOU652Xuu9V/q8/7B9+P/wdk4I7M
              "]], 
             Polygon3DBox[CompressedData["
1:eJwtmmWgHdUZRR8Q8vAimYOGnIHBXnC3AEGCuztBgrsF95DiXupOW9yLu7u7
W4u7W9fqvj9ucteceVdmzvm+vfe57fZ7b7DXhH19fefwzyD+f2qgr++VIX19
8/T39U1d+/qehl+FB+Bp4E07zuX5ik1f35GMbQ6fB68MHw0/wuM5zp+dY5Nx
/pqMH8zzuRjfj7E14IPgOeF94Sd5vMz5c3PsF5y/P+N38HxPxn/D2K7wVfC2
8Bnw7vA18Gj4LHgv+Dp4R/hcx3mN4+HpCmPwnoz/G96B8XNkxsfBDeP7wPsy
fiO8M+Pnw/vAN8Bj4F/Be8PXwzvB58G7wVfD28FnwnvA18Lbw2f7eXj9E+FS
8v2WhjeE32Z8G18PHg9PX3I9HuPxAt9/Do5NwdguvN6VPN+G809nbEmObQC/
BW8NP87jRc6fk2NTMrYz51/B860ZP83Px7Hj4Gl5/T3hVRnfH569yfVYHT4Q
nqPJ99+wy+dZAj4Unpu/XxF+Gt4C3qDL91kcPmQg53juLzl2NOduU3N/+3m/
3Rlbv8v1XYxzxsLrwSfAi8IHw+t2uT+LwAfBa8PHwgvBB8DrdPn8C8MHwhvB
Z8LLw4fBm8BnwyPhI+CN4bPgFeDD4QE+z0rwM/CW8BaM/wpeBT4GXgs+Bl4Q
3h/eDD4XXgk+Cn6Ax6Nc31k4NhGvdS98Pzwj3Adfx3nPwrPBk8CPMv483MGT
w6vxegfwvOO8vRlbhmMbwe/A28K71Hzfabhee8D38XiQv5+JYxMwtiyPjXn+
H87fjrGHeTzN+DCODWbsIdcMPCs8MbwK77cvz9smrzcK3g+ercn9f9A5w/lD
OTaI8+/3NeGZ4QnhMZx/Ic835fxTGVsEXsj5OiT3f0v4fHgU48fCO/OYjuc7
cGwL/n5XuIF3greCF+f8kTz/Ykjm6xge0zK+Pcc2Y3w3uMBjnLM1c2Z6eOf+
zKWl+fv1vfYcG+314jGE5ztybEvGl+gyP78ckvW0FLwy/PWQXC+/s9/dOe9a
WKHLe/uZ/ezLw6P785n8bCO63J/Bvge8bJf1OrHfEZ6E+zQDz3exBvF6S3aZ
X18Nyf1cpsv6HOR3hPeDb4f3gH8NHwDfCe8F/xYe2nLdnCvwl3DX5rV9jx/g
leFLvbbwLMP5rvDFXjt4JnhGeD3vHfwp568CX+a1gYcyvhJ8Cbw5PDM8Jbw8
/Bmf923OnwpeAf4cfgce2eVeeo291rMzvp3zE/5+IHPKueWccu7OyviW1iqO
fcXYLPDm1nr4C3hmeDN4UvhzeCZ4U9cK/Bk8DN7K2gV/7b2Ct7XXwN/5XvA2
9gL4W7jCW8NTwd/AK3WZa84h59LKXeaSc8i5tGKXueKcdG5+0+S9/Qzr1Nxj
77VrbK2ae+y9dg6sCe8E98ObwGvD//V9uVaj4BE1c9K56T1fDX4CfonxufyM
NXPQubhKf9byonyehV3/Q1KPtoP/Bq/Pa5wIbwv/FV4PHjeQOeRccg6uwd9v
zfif/ewcO56xbeC/wOvCJ8A7wP+AN4JPgneC/wVvAp8Cj4b/Dm8Aj/f14Qvg
Da3h8I7wP+GN4ZPhreBfw6vCx8GLwYtYj/j8Ww3kO/hdPGattaZb2635R9TU
dGu7Nf/wmhpuLbfmH1ZT46311vhD4T1qzh1SUi/tmWoDe4q91BpkLfIa2puW
63LvvEfeKz+Tn21Rjg2veQ1rrz3O17bHqj3G9qf3Psfz/3L+YvC8NWvYtWwN
sVZbU6wtrnF7tzXMWmbNsRcv3KX22wM2H0gPtZeqadQWCzHe2n8Y34yxGfhe
c9s7ObYP4/dw7F7GZoB/HkatgG+Gp4O/g++C74QL/CNcWcO78vc3w3/j74fB
u8A3wX+135RoFzXMX+CO8UPgR+Br4M0YPxh+CL4KbhnfDb4F/js8B3wo/Ch8
LTw7PBZ+GL4ang3eHb4VvkB9wuudCL8M3wXPyfh4+BX4bngE6/V3PF+dYw1j
y8N/cG3B08PLwb93bsNleGqAtcCasqL9j/HfurY4NoTxkfCfXIvwjPAK8B9d
u/AM8Fw8fsnzVzl2j9qKz/cP+GfXHDw34+fDH3tPamqutdeatUJNTbY23wXf
WKMBd+5d36t612+X3vX3evzZmg4/AN8O/xU+qHd976zRpGpTNeElNRpyTO/+
XAlfDB8LPw8/Bl8CHwe/AD9eo2HVsmrOy2s0q9pVjXtZjQZVi6pRr4B/B+8N
3w3fBP8FPhB+EL6jRkOrpe1BN9SsEef6s03Wzu+dwzy/h2M3M/ZHexh8H3wr
/AfXJHwvfEtNT7O3qdGvg/8E7w/fD98Gj+V6/Qr+CH4annh45v/YXv+0n87V
W9/2e3uave0i+Cz7a4kWUZOcWXOPvdfOoRNqepq9zZ54dk2PtFfa886pmWPO
NefY8fYreKsmPfK8mh5pr7THnlszR52rzrlj4WnhEfBp8IHwNPCyaiP4gJo5
6dz8DXyM86ukVloz1cPOaee2a+C4mjnr3HXOjoN/AS9trYX3g6eCl7J2w/vC
U8JLNtHX1ovpXDPw6fBB8NTwMtZ2eP+a+qIeH9+rb/Zke7MaYyT8IzxjT7+s
C0/G388HHwHvCE8Ozw8fCe8ETwQPg/eyJ9RoALWAPXoUPAXjC8BHwWO8n/Bw
+DB4e3hSeF74cHgHeDA8T6/+bQf3wwPwofBo+G8DqU8P9+qJPd/eb89fuUYT
qA3UBKvAP6kp7O32THgQr1fhve15NRpKLaWetN+rGdQOao6V4J/VKGoHezA8
AX8/FN7Dngj3wbOoJeyZNfpBbaHGUA9MyPis8J72XPhSXu94+EX4Cfgy+AT4
JfhJ+HJ4XK9ePlWj2dRu68KLw5/AE8DrwIvBH8N98NrwovB78Pf0g9XgBdQj
8Lc9PTJfjcZSa6lvloPfh39gfHV4Qfhd+Dt4VXj+Gg2mHlLfjOjpG3upPVW9
8p+B6J1Vev3xvib91X4/E/wC42/BC8AFfgV+H14CnhX+CP4ZXgteBH4Zfg9e
HB4KvwS/2+u/s8AvDqQf279nhq+GT+E934Jf7PXrr3v92dr1AeM/wmvAC8Ef
wj/Ba8ILw8/Db8Lzww18DXwqr/E2/BL8b/h0vxP8CnwTfA78AfwmfDN8Lvwh
/BZ8LXwa/A78MnwjfDb8PvwGfB18hpoCfhW+AT4Lfg9+Hb4ePhN+F34NfhX+
gM+3JDwMvgU+r1cv34bvgG9lfAj8/bD0M/vXJ/B/GH+W8dcZnxeezusDvwHP
Bw+B74Rvhxv4B/7+1oHU4497/fCf9hbGp4G/ZfwZxl+Dh8PTur7pr8vx/FOO
vcXYbTxu5Pm0HPuG8++G74anh3+CX4M/hJeCa43H0Gv4GnPUeAK9gZ5g+ZqM
yKxIT35ajefWe5shnVrj0fXqes7TazznqF59PaMmczF7MQO6uNcvVuvVb/uH
mnXVXn22f5jJmM2YAV0K/wM+An4KfhC+AD4cfhJ+AL4IPgZ+Dn6018/G9/SF
+uGKgeifV3r9zQzMLMwM4RT4Qvho+Fn4kRq9pJ5Sj6mP/sX4UfAz8MPeD/hI
+Gn4Ifjv8GHwE/B9NRmHWYeZ28k1GYdZhxnISTWZiNmIGch4+Er4JPgN+Lka
ja/W1yP8ocYD6AX0AL+v8Qx6Bz3AH+Gr4JPhN+EX4Nfhj7ifS8Mt/Ab8MbwM
PFvNHHGujIA7+E34E3hZePYaj6nX1IPOWeN59D56kt/VeBq9jZ7m/JoMyyzL
DOyfNfp2s16/V++aAZoFmsFdVOOB9EJ6qN/UZGZmZ2aGF9Z4oE16euLPNRnH
pj29oV7Wc+m99GS/rfFAeiE91J/s121qrTXR2miGZpZmxrM749O0qc3WWGut
c873WqJkLjpnfa3FS+ayc9prvVjJXHcNeG8WLVkbrgHvzSIla8N77mdbqGQu
eM2c+yNLruXUbWq7PcHeYL1+rpdHWU+dU9a+vUrmmnPOWrZ3yVy0ZpgN3dmk
llhTzL7uaFJrrAlmRbc3qRXOIdfSSiVzyxpudvlAk9puzTWbuqtJLfYz+Fnu
b1LrXRPW3n1K1oo9xGzr7ia9ZfKa2ndDk2zNOaqWXrFk7nqPvbfLl9x7NZe1
Ya6SbNI5rFZeuWRuew/V0quU3FvngNp5VMncUNO6VkeXaN2jamrPnCV5p3NE
7b5qydxRE1sbti/RykfW1LI5SvLOsTVrsZbki3pc12pb4n1ds87VBUvWsjXD
tbBwSS1xDTj3lytZG85J5/oKJXPVmmVv3LP0allN7exKvLie21o0e4kX13Nb
O2Yr8eLWCNfaAiW1Q81vLdquxAuYQds7bmySTZtpWOtvbpJ12OO+gY8u6X32
xK/gI0t6pTXjc/iwklpiz/0SPqKkF9vTv4APL+n19sRv4WNKeqWax1ryehMt
NNg1CF/bJAu1Z38NH1XSy61xn8GHltQ+a7a9eN+SWm6NtrceXFK71WD29oNK
tNmqbbydHk9vbY1S2zzVpHbZw7+Djy3p7Wo8e/8BJdpPjad2OLBE++np7PX7
lXg9PZ1aYP8Sr2dmr7e/qUmWb0bwTC9PnqGmZ6pdnmzSS+2p7sU80qTXqrHM
mh5qor3cYzE7uL7J3ot7NmbVtzbZy3HPxmz5tiZ7OWpGtdgLTeqFey5mEbc0
2YtRo7m38GAT7aZmVNu92KS+qQnVbs83qYdqUrXMS020qj1BLfFYk15hD1Cr
PN6kN9gj1CpPNOkdaiD3fh5uoo3sMe41Pdqk96hh1RYvN9G2Zi7P9vaX1KNq
QHvTK020oRrQ3vRqE22oJ7a3blvilfX49v5tSry/ntjev3WJV9az6AWmLPEy
a7XJRsxUzFbWbNPL7elmJXoevcIUJV5odI23mLzE66zN+Y/1J2Mxa9GDqI0/
buJN9ER6mclKvNK6nP9afzINs41jarzhPCXeU4+qdxwo8a7jarzh/CVeU09h
r32zidfQM+tl5yvx0noqvcUnTbyWHllvO2+Jd3YOmrXd0/TmZo32OaQkS9HT
6j2Hl3hda5x7Ke5pWPvWa6NV1ayeb6ajNv+oSdYzqsb7fNbEW+rB9Ko/NPFm
ejqzme+beD09q9rxuyZeVk+n1/m2idfTo+oN+0q8q57NLOlHxvVyZg5630lL
sgg9ol52ghLv6B6Oa+/feqiBeDq9589NvJ6eUO/4UxOveE/NfNit5P6o6ZwP
u5ZkYSNrvMmHTby4nlVv92kTL2vmpDf7oEkWtU6b66vG9O/VyOqJ95toZz2a
+uPdJt5Nj2e/f6+J9zMT0IsPK8kKxtR44alLvLqeXi//ixKvb2ZkdrVxSZZk
xmV2tWlJ9mVGZXa0SUl2ZQZltrNRSTZlpmVWtH5J1qUGN3tar0Sbq7HNijYo
0d5mVmZJG5ZkWWoys6h1SrTaRTXZ27ol2k7NZ7a0dokWvL0mG9uxJHszYzI7
26EkezKDUitvVZJN6TnVnq818aJmYHrznUqyMTW12nj3Eq2t5lfr7lHiBcwg
9Oo7l2QTZnp6+TElWZ8eXW/zRhPv7n7gjb381lpsRmsWtUZJdmvGYzYyc0n2
YwZlFjSiJJsygzLbWrYkmzqgJpsZWpI9nVOTZS1TknXpcfQ6S5VkZ2ZgZk1L
l2RjZjpmE1OVZD1mWGY7s5ZkW3rW7+HjSrysmlptvXpJ/zNTMruZpSRruqAm
O1urJAtW47i3656w2sc1c33PH7qWzJTN1tYsyZrNoM2atyipn2bMZslbltRD
My6zoRlLsi8zMLOhmUqysatr+vPmJfVWT/4jfELpefUu/VgPr5efgPHJ4Cua
7K2O73L/zWTsz6d2ud9mDOqPX3a5v2Y06oHTuugrMwP1yjld+ree3+t1Xpd+
b0bg+7snPCl8eZO94rO79H8zAPXCSV3mk55R/XFKl/mnx1IfuaeplxhUsv/m
nqp7lxOV7FeO6zLfzYjVD5O30Ud6LPvppG36nR7Nfnky57/eHw+oHpqszXrQ
s9mP3YN1L2/Ckv3PM7r4ATMR9dSZXfS5mYb67qAu69uMWH14RJd6YWb3/+yu
Sz0wI1Y/H9Olv+pp9RvHdum/el79xtFd+q0eXP16XBf9qWfWD5zVRb+ZmagH
x3apJ2bS6u1Du9QjM3jrwYld6oMZnHrshC763Ixd/XVIl/pjRm29mKSNXjCz
UE8d3qXemeG7vo/v4gfMANSPh3Wpl2bq1o/52sxXM237yQJt1reZpv1+wTbr
x0xUPTAKvrw/GbTr3T1D96M/b7KXeGCX+meGrz5ZpE09N5O1Xps5mj1+3WS/
yz1L9z+/arKX6Z67e10Tl+x3LtZGL5ghu57maKMvZuz1z+na9CczQvVUaaMH
zOyslzO06c8T9Oqbe/TubQ0u2W+dvk0/6+vp82nb9DMzSvXfkDb93oxOPda0
0TtmdOqxxdvoFzNv1/cy8Bn9ybjtX2vW7N9+2WRvdqBN/5q114/naVPfhvb6
8fA2/c7M2v4/dxv9Nkuv/5t3Xcd7T9if/Gr+NvXFTFq9NVcb/TZzT38s1Kb+
mmH/P8uG9+lPxqxemLONvpupp0/co3X//Isme7dLt9Fj7iFYb5doo5fM/K3/
S7XRY+4pWN+XbKO/zPStt0d16WdmUvajhdvUbzN76/mi8NH9yeDt70dy/uP9
yYzsZ6d38ftmlvqxwW30uRmtfuHHnj73N136gXdr/LZ7kO5Fugc5EXxhE9YD
+9sf9xf0xgt2yQ6t+dZ+9z+ca845taqZ5SCeX9Qky/ygxj+6p+nepvfAe/Gv
JtniezV+08zT881gf3A9l9TzD2v8iZmj2eP7Nf7JjNOsc7U2/cU9UvvtZzV5
hr/h8bc8EzK+YH8ya/OFr2ryCDMS/dKXcO3Pb2z0l5/U5B3+Jsf+8X2N//I3
avqjj2r8lXu47uX+UONX/M2cfuvjGr/lb4bsB/1t/IuZr/7m85p8xN/k+Nuc
72r8j78h0F9/WpO/+Bsdf6szQRs/aqZtnvJFTV7ib4D8LdDXNfmLv0EyL/lv
jRZRk3h9v63xi/5mTL/pnvJg+JIm98PfAE0OX9nk/c7v4pfNjP+fHXfxy2bU
ZtVmvv3wpU3uR18bv2oGbX60epv+7h6z/d/fKE0FX9Pk8/qbqingq5rcn29q
/Ka/gTNvcE98EviyJtf35xq/aOZtHjVRG//pnoF50sRt/Kl7DPpVPaF7Ffc2
8Yo/1fhPM27zq3dq9oZPLPl+/iZqSvjqJvdjUBt/7B6FeZYZ+sTwxU3mmxn9
T/C4kuuxBuff1p89cvXR/wCpkxOj
              "]], 
             Polygon3DBox[CompressedData["
1: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
7H9ZlESv
              "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwt0SssBWAYBuCf43KOg8PMfTaaSTSTaCYhmYRkgkujUSWaSTSTaCbRTKKZ
5H6/3x3X55jw/c/f3vfbV9M31DmYFkIYM2lRw8mSEAo5yxousoGrbOEmO7jL
Xl5whElOMKc0hGlWcJ51XGYT19nGbXZznwO854H8Bx7ykUd84jGfecIXnvKV
Z3zjOd9TPZjkJT94xU9e84s3/OYtf3gXDX8Lj8q/8+3nHru4xVausZFLrOUc
yzjFKMf5Zu/hVB/2cIft3GAzV1jPBVZzhgWskp9gJfNZzjyWMpfFjLOIOSxk
jAmmqud5shlnFmPMZDYzmMkII0z/v+8viDJAjg==
            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0UkuA3AUB+B/1Tw3Fiw1LqBxAY0LKBdQ9oZY2REXIC5AXEBjntu4ACIi
ImKKiIioeeYTi5cvv9V7+b14d19HbySEMGR2y0KICOf1IcT4wDijDSEkWMck
m5hiC9Ns4wA7OcIejnOQUxxlhhPMcZo7nOUpt5j/y+Uh3HOOD5znIxf4xEU+
c4kvXOYrV/jGVb5zjR9c5yc3+MVNfjPLH+YYCtxi/91f5gkz3OYUsxznDEc4
yQGOMc1hptjPJLuYYDvjbGWMzYywkXm91vJW3zW8YTWvWcUrVvKSFbxgOc9Y
xhOW8pglPGIxD1nEAxZyn1HusSDy/99fowpJ3w==
            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0TksJHAUB+D/zCxrx7CUJgrTqugVqxXFUooCpYijJAoS97pGuVGsiGxc
YSIijg1aUdBuFLSicOy67fpE8fLlVb9f3ks1tdW2RkIInWY2N4RINISKohAK
Wc0U61nOFlaymzUcZSOn2cEl9nKHaR5yhifM8IL7fOYxE8kQzljMK/YlQrhm
P284wD8c5F8O8ZbDvOMI7/mND299+MgxPnGcz5zgCyf5j2n+5xRDLIRS+Zf2
JE8Z5xEf9dzjOVf5mz94wElusYcLbOd3Nrz14ld28QubWcY6lrCKBdx178/8
xXxuM4+bTHCDuVxnnGv8xAxzuMKPXGY2F5nFeX7gT8Y4x2j0/b+vfwdHPA==

            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0TkoBnAYB+A/n/uWLCwkO8lOsjty32R15AhJnyNJEoOdZCfZSXaSnWR3
39cjw9vT+1ve+r2FvYN1AzEhhEkzmh5CTCSEjbwQsrnDQh6wlCes5AVrecMe
PnGY8fkhzDKX6yzmFsu5x2oesYFn7OcVx3j3l2eEcM9GPrCJj2zmE1v4zFa+
sI2vbOcbO/jOTn6wi5/s5hd7+M1e/rCPIS6Eefdv7SO8/Mt5ynoesoq7LOMm
i7jGHEYZ4RAf9NDNa9bwnBU8Zgn3WcBtZnFN35lcZQZXmM5lpnGJqVxkCheY
zDkmMcpEzjCB04znFOM4wQjHGRv5/+8vNuxAnQ==
            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0bkrBnAYB/AfXvf1mkks7uvFKDFIcpMkt1mOUUnsErvELrFL7BK7gX9A
7vv6yPD06Zmeb9+ncGq2byYuhLBgWrJDiIuEcJMbQg6/WcisvBBizGczq9jL
Rk6yi/Mc4wpnuMEl7nCNB9ziCfd4wSNe84x3LIqGcM9iPrCEjyzlE8v4zHK+
sIKvrOTbXy6+s5ofrOEnY/xiLb9Zxx/WMySGcOn+rf2UVzzkOXd5zE3uc5Xb
XOQ6p7nMEc6xgxNsYM9fPjYxjzXMYAE/9RrlpL6zOc4sjjKTw8zgENM5yDQO
MJX9TGEvk9nNJHYyke2MsI0JbGV85P+/vzyhO/w=
            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0TsoBXAUB+D/fbneXOWREPJK0qXsTFaUrCjZPAbJxiArg6wMsjLIyiAr
g6wMsnpd93r7bobT1+mcOr86LdPzY3OREMKKqkmFEEmEMNwYQooTbOEs+7jM
IW5wlDuc4gEXecI1XnCLN9zjA4+Y5RmTTSFcsZZ37ORTfu7+M3N84Ttf+cEM
P/nGL2b5zRx/+M5ffjBU2WWEX4zymzH+MM5fJhgKQhhw/1HfzltW8zI/5ykz
ch/ynru85ibPucpjLnCfk9zmCNc5yCWmOcNmjrOS/fJWMM1y9rKMPSxlN0vY
xWJ2sIhtLGQrk2xmAZuYYAPjrGeMdYwm/v/7ByQYQFI=
            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0UkuAwAUBuBXpTUr9sUFhAsIF5ByACkHKJY2UhcQbsAFhAsIO/PMUmol
ImY11fSJxcuXt/r/vNc1Nj5cSETElLlsi0ikIhayEa1cZhfX2MsDDrDEId5z
lNERMckMZ9jJefZwkf1cYY7rzPOQE7xgkQ/caI945CafuMVnbrPMHb5wl6/c
4xv3+f7Xjx88ZIVH/OQxv3jCb57yh2eMdMSs/Hv7NEss8IAjXOMgl9nHBXZz
jlkW2cwJfrtHnrfM8Zz9fz3Zw1V2cokZJuW3MMFm/rh/E7/YyAob+M56vrKO
ZdbyiWk+MMU71vCG1bxmklesSv3/9xctW06e
            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0TsoLnAYB+C/6+dzV04yYZKNSTYmne2wyHZYZHGZZGOSjUnun8txsjG5
JH0kt04npGRjsrrfb48Mb09v/epX71vS3F7flhBC6DbL+SEkREJ4Kgohj9Hi
EEpYyAqWsYZVrONPNrGRnWxlL7s5yH5OcZiLnOcGV3jIPZ7zlFdfuR8hXHOE
NxzlLcd4x3Hec4IPnOQjY3ziFJ85zRfO8JWzfOMfvnOOH/zLkBbChf5L+wnP
uMMDLjH+leMChxhjHwfYxR62sIMN/M1a/mIlq1nKchawmBHm8ti9c3jEbB4w
i/+ZyX/M4D7Tucsot5nGLUa4yVTGmcJ1JnONSVxlYuT7v59u1Ur8
            "]]}, {
           GrayLevel[0.2], 
           
           Line3DBox[{5770, 2289, 5769, 9474, 6009, 5771, 9475, 6010, 5772, 
            9476, 6011, 5773, 9477, 6012, 5774, 9478, 6013, 5775, 9479, 6014, 
            5776, 9480, 6015, 5777, 9481, 6016, 5778, 9482, 6017, 5779, 9483, 
            6018, 5780, 9484, 6019, 5781, 9485, 6020, 5782, 9486, 6021, 5783, 
            9487, 6022, 5784}], 
           
           Line3DBox[{5786, 8529, 9369, 5785, 2305, 5787, 9488, 6023, 5788, 
            9489, 6024, 5789, 9490, 6025, 5790, 9491, 6026, 5791, 9492, 6027, 
            5792, 9493, 6028, 5793, 9494, 6029, 5794, 9495, 6030, 5795, 9496, 
            6031, 5796, 9497, 6032, 5797, 9498, 6033, 5798, 9499, 6034, 5799, 
            9500, 6035, 5800}], 
           
           Line3DBox[{5802, 8530, 9370, 5801, 8531, 9371, 5803, 2321, 5804, 
            9501, 6036, 5805, 9502, 6037, 5806, 9503, 6038, 5807, 9504, 6039, 
            5808, 9505, 6040, 5809, 9506, 6041, 5810, 9507, 6042, 5811, 9508, 
            6043, 5812, 9509, 6044, 5813, 9510, 6045, 5814, 9511, 6046, 5815, 
            9512, 6047, 5816}], 
           
           Line3DBox[{5818, 8532, 9372, 5817, 8533, 9373, 5819, 8534, 9374, 
            5820, 2337, 5821, 9513, 6048, 5822, 9514, 6049, 5823, 9515, 6050, 
            5824, 9516, 6051, 5825, 9517, 6052, 5826, 9518, 6053, 5827, 9519, 
            6054, 5828, 9520, 6055, 5829, 9521, 6056, 5830, 9522, 6057, 5831, 
            9523, 6058, 5832}], 
           
           Line3DBox[{5834, 8535, 9375, 5833, 8536, 9376, 5835, 8537, 9377, 
            5836, 8538, 9378, 5837, 2353, 5838, 9524, 6059, 5839, 9525, 6060, 
            5840, 9526, 6061, 5841, 9527, 6062, 5842, 9528, 6063, 5843, 9529, 
            6064, 5844, 9530, 6065, 5845, 9531, 6066, 5846, 9532, 6067, 5847, 
            9533, 6068, 5848}], 
           
           Line3DBox[{5850, 8539, 9379, 5849, 8540, 9380, 5851, 8541, 9381, 
            5852, 8542, 9382, 5853, 8543, 9383, 5854, 2369, 5855, 9534, 6069, 
            5856, 9535, 6070, 5857, 9536, 6071, 5858, 9537, 6072, 5859, 9538, 
            6073, 5860, 9539, 6074, 5861, 9540, 6075, 5862, 9541, 6076, 5863, 
            9542, 6077, 5864}], 
           
           Line3DBox[{5866, 8544, 9384, 5865, 8545, 9385, 5867, 8546, 9386, 
            5868, 8547, 9387, 5869, 8548, 9388, 5870, 8549, 9389, 5871, 2385, 
            5872, 9543, 6078, 5873, 9544, 6079, 5874, 9545, 6080, 5875, 9546, 
            6081, 5876, 9547, 6082, 5877, 9548, 6083, 5878, 9549, 6084, 5879, 
            9550, 6085, 5880}], 
           
           Line3DBox[{5882, 8550, 9390, 5881, 8551, 9391, 5883, 8552, 9392, 
            5884, 8553, 9393, 5885, 8554, 9394, 5886, 8555, 9395, 5887, 8556, 
            9396, 5888, 2401, 5889, 9551, 6086, 5890, 9552, 6087, 5891, 9553, 
            6088, 5892, 9554, 6089, 5893, 9555, 6090, 5894, 9556, 6091, 5895, 
            9557, 6092, 5896}], 
           
           Line3DBox[{5898, 8557, 9397, 5897, 8558, 9398, 5899, 8559, 9399, 
            5900, 8560, 9400, 5901, 8561, 9401, 5902, 8562, 9402, 5903, 8563, 
            9403, 5904, 8564, 9404, 5905, 2417, 5906, 9558, 6093, 5907, 9559, 
            6094, 5908, 9560, 6095, 5909, 9561, 6096, 5910, 9562, 6097, 5911, 
            9563, 6098, 5912}], 
           
           Line3DBox[{5914, 8565, 9405, 5913, 8566, 9406, 5915, 8567, 9407, 
            5916, 8568, 9408, 5917, 8569, 9409, 5918, 8570, 9410, 5919, 8571, 
            9411, 5920, 8572, 9412, 5921, 8573, 9413, 5922, 2433, 5923, 9564, 
            6099, 5924, 9565, 6100, 5925, 9566, 6101, 5926, 9567, 6102, 5927, 
            9568, 6103, 5928}], 
           
           Line3DBox[{5930, 8574, 9414, 5929, 8575, 9415, 5931, 8576, 9416, 
            5932, 8577, 9417, 5933, 8578, 9418, 5934, 8579, 9419, 5935, 8580, 
            9420, 5936, 8581, 9421, 5937, 8582, 9422, 5938, 8583, 9423, 5939, 
            2449, 5940, 9569, 6104, 5941, 9570, 6105, 5942, 9571, 6106, 5943, 
            9572, 6107, 5944}], 
           
           Line3DBox[{5946, 8584, 9424, 5945, 8585, 9425, 5947, 8586, 9426, 
            5948, 8587, 9427, 5949, 8588, 9428, 5950, 8589, 9429, 5951, 8590, 
            9430, 5952, 8591, 9431, 5953, 8592, 9432, 5954, 8593, 9433, 5955, 
            8594, 9434, 5956, 2465, 5957, 9573, 6108, 5958, 9574, 6109, 5959, 
            9575, 6110, 5960}], 
           
           Line3DBox[{5962, 8595, 9435, 5961, 8596, 9436, 5963, 8597, 9437, 
            5964, 8598, 9438, 5965, 8599, 9439, 5966, 8600, 9440, 5967, 8601, 
            9441, 5968, 8602, 9442, 5969, 8603, 9443, 5970, 8604, 9444, 5971, 
            8605, 9445, 5972, 8606, 9446, 5973, 2481, 5974, 9576, 6111, 5975, 
            9577, 6112, 5976}], 
           
           Line3DBox[{5978, 8607, 9447, 5977, 8608, 9448, 5979, 8609, 9449, 
            5980, 8610, 9450, 5981, 8611, 9451, 5982, 8612, 9452, 5983, 8613, 
            9453, 5984, 8614, 9454, 5985, 8615, 9455, 5986, 8616, 9456, 5987, 
            8617, 9457, 5988, 8618, 9458, 5989, 8619, 9459, 5990, 2497, 5991, 
            9578, 6113, 5992}], 
           
           Line3DBox[{5994, 8620, 9460, 5993, 8621, 9461, 5995, 8622, 9462, 
            5996, 8623, 9463, 5997, 8624, 9464, 5998, 8625, 9465, 5999, 8626, 
            9466, 6000, 8627, 9467, 6001, 8628, 9468, 6002, 8629, 9469, 6003, 
            8630, 9470, 6004, 8631, 9471, 6005, 8632, 9472, 6006, 8633, 9473, 
            6007, 2513, 6008}], 
           
           Line3DBox[{6115, 2754, 6114, 9684, 6354, 6116, 9685, 6355, 6117, 
            9686, 6356, 6118, 9687, 6357, 6119, 9688, 6358, 6120, 9689, 6359, 
            6121, 9690, 6360, 6122, 9691, 6361, 6123, 9692, 6362, 6124, 9693, 
            6363, 6125, 9694, 6364, 6126, 9695, 6365, 6127, 9696, 6366, 6128, 
            9697, 6367, 6129}], 
           
           Line3DBox[{6131, 8634, 9579, 6130, 2770, 6132, 9698, 6368, 6133, 
            9699, 6369, 6134, 9700, 6370, 6135, 9701, 6371, 6136, 9702, 6372, 
            6137, 9703, 6373, 6138, 9704, 6374, 6139, 9705, 6375, 6140, 9706, 
            6376, 6141, 9707, 6377, 6142, 9708, 6378, 6143, 9709, 6379, 6144, 
            9710, 6380, 6145}], 
           
           Line3DBox[{6147, 8635, 9580, 6146, 8636, 9581, 6148, 2786, 6149, 
            9711, 6381, 6150, 9712, 6382, 6151, 9713, 6383, 6152, 9714, 6384, 
            6153, 9715, 6385, 6154, 9716, 6386, 6155, 9717, 6387, 6156, 9718, 
            6388, 6157, 9719, 6389, 6158, 9720, 6390, 6159, 9721, 6391, 6160, 
            9722, 6392, 6161}], 
           
           Line3DBox[{6163, 8637, 9582, 6162, 8638, 9583, 6164, 8639, 9584, 
            6165, 2802, 6166, 9723, 6393, 6167, 9724, 6394, 6168, 9725, 6395, 
            6169, 9726, 6396, 6170, 9727, 6397, 6171, 9728, 6398, 6172, 9729, 
            6399, 6173, 9730, 6400, 6174, 9731, 6401, 6175, 9732, 6402, 6176, 
            9733, 6403, 6177}], 
           
           Line3DBox[{6179, 8640, 9585, 6178, 8641, 9586, 6180, 8642, 9587, 
            6181, 8643, 9588, 6182, 2818, 6183, 9734, 6404, 6184, 9735, 6405, 
            6185, 9736, 6406, 6186, 9737, 6407, 6187, 9738, 6408, 6188, 9739, 
            6409, 6189, 9740, 6410, 6190, 9741, 6411, 6191, 9742, 6412, 6192, 
            9743, 6413, 6193}], 
           
           Line3DBox[{6195, 8644, 9589, 6194, 8645, 9590, 6196, 8646, 9591, 
            6197, 8647, 9592, 6198, 8648, 9593, 6199, 2834, 6200, 9744, 6414, 
            6201, 9745, 6415, 6202, 9746, 6416, 6203, 9747, 6417, 6204, 9748, 
            6418, 6205, 9749, 6419, 6206, 9750, 6420, 6207, 9751, 6421, 6208, 
            9752, 6422, 6209}], 
           
           Line3DBox[{6211, 8649, 9594, 6210, 8650, 9595, 6212, 8651, 9596, 
            6213, 8652, 9597, 6214, 8653, 9598, 6215, 8654, 9599, 6216, 2850, 
            6217, 9753, 6423, 6218, 9754, 6424, 6219, 9755, 6425, 6220, 9756, 
            6426, 6221, 9757, 6427, 6222, 9758, 6428, 6223, 9759, 6429, 6224, 
            9760, 6430, 6225}], 
           
           Line3DBox[{6227, 8655, 9600, 6226, 8656, 9601, 6228, 8657, 9602, 
            6229, 8658, 9603, 6230, 8659, 9604, 6231, 8660, 9605, 6232, 8661, 
            9606, 6233, 2866, 6234, 9761, 6431, 6235, 9762, 6432, 6236, 9763, 
            6433, 6237, 9764, 6434, 6238, 9765, 6435, 6239, 9766, 6436, 6240, 
            9767, 6437, 6241}], 
           
           Line3DBox[{6243, 8662, 9607, 6242, 8663, 9608, 6244, 8664, 9609, 
            6245, 8665, 9610, 6246, 8666, 9611, 6247, 8667, 9612, 6248, 8668, 
            9613, 6249, 8669, 9614, 6250, 2882, 6251, 9768, 6438, 6252, 9769, 
            6439, 6253, 9770, 6440, 6254, 9771, 6441, 6255, 9772, 6442, 6256, 
            9773, 6443, 6257}], 
           
           Line3DBox[{6259, 8670, 9615, 6258, 8671, 9616, 6260, 8672, 9617, 
            6261, 8673, 9618, 6262, 8674, 9619, 6263, 8675, 9620, 6264, 8676, 
            9621, 6265, 8677, 9622, 6266, 8678, 9623, 6267, 2898, 6268, 9774, 
            6444, 6269, 9775, 6445, 6270, 9776, 6446, 6271, 9777, 6447, 6272, 
            9778, 6448, 6273}], 
           
           Line3DBox[{6275, 8679, 9624, 6274, 8680, 9625, 6276, 8681, 9626, 
            6277, 8682, 9627, 6278, 8683, 9628, 6279, 8684, 9629, 6280, 8685, 
            9630, 6281, 8686, 9631, 6282, 8687, 9632, 6283, 8688, 9633, 6284, 
            2914, 6285, 9779, 6449, 6286, 9780, 6450, 6287, 9781, 6451, 6288, 
            9782, 6452, 6289}], 
           
           Line3DBox[{6291, 8689, 9634, 6290, 8690, 9635, 6292, 8691, 9636, 
            6293, 8692, 9637, 6294, 8693, 9638, 6295, 8694, 9639, 6296, 8695, 
            9640, 6297, 8696, 9641, 6298, 8697, 9642, 6299, 8698, 9643, 6300, 
            8699, 9644, 6301, 2930, 6302, 9783, 6453, 6303, 9784, 6454, 6304, 
            9785, 6455, 6305}], 
           
           Line3DBox[{6307, 8700, 9645, 6306, 8701, 9646, 6308, 8702, 9647, 
            6309, 8703, 9648, 6310, 8704, 9649, 6311, 8705, 9650, 6312, 8706, 
            9651, 6313, 8707, 9652, 6314, 8708, 9653, 6315, 8709, 9654, 6316, 
            8710, 9655, 6317, 8711, 9656, 6318, 2946, 6319, 9786, 6456, 6320, 
            9787, 6457, 6321}], 
           
           Line3DBox[{6323, 8712, 9657, 6322, 8713, 9658, 6324, 8714, 9659, 
            6325, 8715, 9660, 6326, 8716, 9661, 6327, 8717, 9662, 6328, 8718, 
            9663, 6329, 8719, 9664, 6330, 8720, 9665, 6331, 8721, 9666, 6332, 
            8722, 9667, 6333, 8723, 9668, 6334, 8724, 9669, 6335, 2962, 6336, 
            9788, 6458, 6337}], 
           
           Line3DBox[{6339, 8725, 9670, 6338, 8726, 9671, 6340, 8727, 9672, 
            6341, 8728, 9673, 6342, 8729, 9674, 6343, 8730, 9675, 6344, 8731, 
            9676, 6345, 8732, 9677, 6346, 8733, 9678, 6347, 8734, 9679, 6348, 
            8735, 9680, 6349, 8736, 9681, 6350, 8737, 9682, 6351, 8738, 9683, 
            6352, 2978, 6353}], 
           
           Line3DBox[{6460, 3219, 6459, 9894, 6699, 6461, 9895, 6700, 6462, 
            9896, 6701, 6463, 9897, 6702, 6464, 9898, 6703, 6465, 9899, 6704, 
            6466, 9900, 6705, 6467, 9901, 6706, 6468, 9902, 6707, 6469, 9903, 
            6708, 6470, 9904, 6709, 6471, 9905, 6710, 6472, 9906, 6711, 6473, 
            9907, 6712, 6474}], 
           
           Line3DBox[{6476, 8739, 9789, 6475, 3235, 6477, 9908, 6713, 6478, 
            9909, 6714, 6479, 9910, 6715, 6480, 9911, 6716, 6481, 9912, 6717, 
            6482, 9913, 6718, 6483, 9914, 6719, 6484, 9915, 6720, 6485, 9916, 
            6721, 6486, 9917, 6722, 6487, 9918, 6723, 6488, 9919, 6724, 6489, 
            9920, 6725, 6490}], 
           
           Line3DBox[{6492, 8740, 9790, 6491, 8741, 9791, 6493, 3251, 6494, 
            9921, 6726, 6495, 9922, 6727, 6496, 9923, 6728, 6497, 9924, 6729, 
            6498, 9925, 6730, 6499, 9926, 6731, 6500, 9927, 6732, 6501, 9928, 
            6733, 6502, 9929, 6734, 6503, 9930, 6735, 6504, 9931, 6736, 6505, 
            9932, 6737, 6506}], 
           
           Line3DBox[{6508, 8742, 9792, 6507, 8743, 9793, 6509, 8744, 9794, 
            6510, 3267, 6511, 9933, 6738, 6512, 9934, 6739, 6513, 9935, 6740, 
            6514, 9936, 6741, 6515, 9937, 6742, 6516, 9938, 6743, 6517, 9939, 
            6744, 6518, 9940, 6745, 6519, 9941, 6746, 6520, 9942, 6747, 6521, 
            9943, 6748, 6522}], 
           
           Line3DBox[{6524, 8745, 9795, 6523, 8746, 9796, 6525, 8747, 9797, 
            6526, 8748, 9798, 6527, 3283, 6528, 9944, 6749, 6529, 9945, 6750, 
            6530, 9946, 6751, 6531, 9947, 6752, 6532, 9948, 6753, 6533, 9949, 
            6754, 6534, 9950, 6755, 6535, 9951, 6756, 6536, 9952, 6757, 6537, 
            9953, 6758, 6538}], 
           
           Line3DBox[{6540, 8749, 9799, 6539, 8750, 9800, 6541, 8751, 9801, 
            6542, 8752, 9802, 6543, 8753, 9803, 6544, 3299, 6545, 9954, 6759, 
            6546, 9955, 6760, 6547, 9956, 6761, 6548, 9957, 6762, 6549, 9958, 
            6763, 6550, 9959, 6764, 6551, 9960, 6765, 6552, 9961, 6766, 6553, 
            9962, 6767, 6554}], 
           
           Line3DBox[{6556, 8754, 9804, 6555, 8755, 9805, 6557, 8756, 9806, 
            6558, 8757, 9807, 6559, 8758, 9808, 6560, 8759, 9809, 6561, 3315, 
            6562, 9963, 6768, 6563, 9964, 6769, 6564, 9965, 6770, 6565, 9966, 
            6771, 6566, 9967, 6772, 6567, 9968, 6773, 6568, 9969, 6774, 6569, 
            9970, 6775, 6570}], 
           
           Line3DBox[{6572, 8760, 9810, 6571, 8761, 9811, 6573, 8762, 9812, 
            6574, 8763, 9813, 6575, 8764, 9814, 6576, 8765, 9815, 6577, 8766, 
            9816, 6578, 3331, 6579, 9971, 6776, 6580, 9972, 6777, 6581, 9973, 
            6778, 6582, 9974, 6779, 6583, 9975, 6780, 6584, 9976, 6781, 6585, 
            9977, 6782, 6586}], 
           
           Line3DBox[{6588, 8767, 9817, 6587, 8768, 9818, 6589, 8769, 9819, 
            6590, 8770, 9820, 6591, 8771, 9821, 6592, 8772, 9822, 6593, 8773, 
            9823, 6594, 8774, 9824, 6595, 3347, 6596, 9978, 6783, 6597, 9979, 
            6784, 6598, 9980, 6785, 6599, 9981, 6786, 6600, 9982, 6787, 6601, 
            9983, 6788, 6602}], 
           
           Line3DBox[{6604, 8775, 9825, 6603, 8776, 9826, 6605, 8777, 9827, 
            6606, 8778, 9828, 6607, 8779, 9829, 6608, 8780, 9830, 6609, 8781, 
            9831, 6610, 8782, 9832, 6611, 8783, 9833, 6612, 3363, 6613, 9984, 
            6789, 6614, 9985, 6790, 6615, 9986, 6791, 6616, 9987, 6792, 6617, 
            9988, 6793, 6618}], 
           
           Line3DBox[{6620, 8784, 9834, 6619, 8785, 9835, 6621, 8786, 9836, 
            6622, 8787, 9837, 6623, 8788, 9838, 6624, 8789, 9839, 6625, 8790, 
            9840, 6626, 8791, 9841, 6627, 8792, 9842, 6628, 8793, 9843, 6629, 
            3379, 6630, 9989, 6794, 6631, 9990, 6795, 6632, 9991, 6796, 6633, 
            9992, 6797, 6634}], 
           
           Line3DBox[{6636, 8794, 9844, 6635, 8795, 9845, 6637, 8796, 9846, 
            6638, 8797, 9847, 6639, 8798, 9848, 6640, 8799, 9849, 6641, 8800, 
            9850, 6642, 8801, 9851, 6643, 8802, 9852, 6644, 8803, 9853, 6645, 
            8804, 9854, 6646, 3395, 6647, 9993, 6798, 6648, 9994, 6799, 6649, 
            9995, 6800, 6650}], 
           
           Line3DBox[{6652, 8805, 9855, 6651, 8806, 9856, 6653, 8807, 9857, 
            6654, 8808, 9858, 6655, 8809, 9859, 6656, 8810, 9860, 6657, 8811, 
            9861, 6658, 8812, 9862, 6659, 8813, 9863, 6660, 8814, 9864, 6661, 
            8815, 9865, 6662, 8816, 9866, 6663, 3411, 6664, 9996, 6801, 6665, 
            9997, 6802, 6666}], 
           
           Line3DBox[{6668, 8817, 9867, 6667, 8818, 9868, 6669, 8819, 9869, 
            6670, 8820, 9870, 6671, 8821, 9871, 6672, 8822, 9872, 6673, 8823, 
            9873, 6674, 8824, 9874, 6675, 8825, 9875, 6676, 8826, 9876, 6677, 
            8827, 9877, 6678, 8828, 9878, 6679, 8829, 9879, 6680, 3427, 6681, 
            9998, 6803, 6682}], 
           
           Line3DBox[{6684, 8830, 9880, 6683, 8831, 9881, 6685, 8832, 9882, 
            6686, 8833, 9883, 6687, 8834, 9884, 6688, 8835, 9885, 6689, 8836, 
            9886, 6690, 8837, 9887, 6691, 8838, 9888, 6692, 8839, 9889, 6693, 
            8840, 9890, 6694, 8841, 9891, 6695, 8842, 9892, 6696, 8843, 9893, 
            6697, 3443, 6698}], 
           
           Line3DBox[{6805, 3684, 6804, 10104, 7044, 6806, 10105, 7045, 6807, 
            10106, 7046, 6808, 10107, 7047, 6809, 10108, 7048, 6810, 10109, 
            7049, 6811, 10110, 7050, 6812, 10111, 7051, 6813, 10112, 7052, 
            6814, 10113, 7053, 6815, 10114, 7054, 6816, 10115, 7055, 6817, 
            10116, 7056, 6818, 10117, 7057, 6819}], 
           
           Line3DBox[{6821, 8844, 9999, 6820, 3700, 6822, 10118, 7058, 6823, 
            10119, 7059, 6824, 10120, 7060, 6825, 10121, 7061, 6826, 10122, 
            7062, 6827, 10123, 7063, 6828, 10124, 7064, 6829, 10125, 7065, 
            6830, 10126, 7066, 6831, 10127, 7067, 6832, 10128, 7068, 6833, 
            10129, 7069, 6834, 10130, 7070, 6835}], 
           
           Line3DBox[{6837, 8845, 10000, 6836, 8846, 10001, 6838, 3716, 6839, 
            10131, 7071, 6840, 10132, 7072, 6841, 10133, 7073, 6842, 10134, 
            7074, 6843, 10135, 7075, 6844, 10136, 7076, 6845, 10137, 7077, 
            6846, 10138, 7078, 6847, 10139, 7079, 6848, 10140, 7080, 6849, 
            10141, 7081, 6850, 10142, 7082, 6851}], 
           
           Line3DBox[{6853, 8847, 10002, 6852, 8848, 10003, 6854, 8849, 10004,
             6855, 3732, 6856, 10143, 7083, 6857, 10144, 7084, 6858, 10145, 
            7085, 6859, 10146, 7086, 6860, 10147, 7087, 6861, 10148, 7088, 
            6862, 10149, 7089, 6863, 10150, 7090, 6864, 10151, 7091, 6865, 
            10152, 7092, 6866, 10153, 7093, 6867}], 
           
           Line3DBox[{6869, 8850, 10005, 6868, 8851, 10006, 6870, 8852, 10007,
             6871, 8853, 10008, 6872, 3748, 6873, 10154, 7094, 6874, 10155, 
            7095, 6875, 10156, 7096, 6876, 10157, 7097, 6877, 10158, 7098, 
            6878, 10159, 7099, 6879, 10160, 7100, 6880, 10161, 7101, 6881, 
            10162, 7102, 6882, 10163, 7103, 6883}], 
           
           Line3DBox[{6885, 8854, 10009, 6884, 8855, 10010, 6886, 8856, 10011,
             6887, 8857, 10012, 6888, 8858, 10013, 6889, 3764, 6890, 10164, 
            7104, 6891, 10165, 7105, 6892, 10166, 7106, 6893, 10167, 7107, 
            6894, 10168, 7108, 6895, 10169, 7109, 6896, 10170, 7110, 6897, 
            10171, 7111, 6898, 10172, 7112, 6899}], 
           Line3DBox[{6901, 8859, 10014, 6900, 8860, 10015, 6902, 8861, 10016,
             6903, 8862, 10017, 6904, 8863, 10018, 6905, 8864, 10019, 6906, 
            3780, 6907, 10173, 7113, 6908, 10174, 7114, 6909, 10175, 7115, 
            6910, 10176, 7116, 6911, 10177, 7117, 6912, 10178, 7118, 6913, 
            10179, 7119, 6914, 10180, 7120, 6915}], 
           
           Line3DBox[{6917, 8865, 10020, 6916, 8866, 10021, 6918, 8867, 10022,
             6919, 8868, 10023, 6920, 8869, 10024, 6921, 8870, 10025, 6922, 
            8871, 10026, 6923, 3796, 6924, 10181, 7121, 6925, 10182, 7122, 
            6926, 10183, 7123, 6927, 10184, 7124, 6928, 10185, 7125, 6929, 
            10186, 7126, 6930, 10187, 7127, 6931}], 
           
           Line3DBox[{6933, 8872, 10027, 6932, 8873, 10028, 6934, 8874, 10029,
             6935, 8875, 10030, 6936, 8876, 10031, 6937, 8877, 10032, 6938, 
            8878, 10033, 6939, 8879, 10034, 6940, 3812, 6941, 10188, 7128, 
            6942, 10189, 7129, 6943, 10190, 7130, 6944, 10191, 7131, 6945, 
            10192, 7132, 6946, 10193, 7133, 6947}], 
           
           Line3DBox[{6949, 8880, 10035, 6948, 8881, 10036, 6950, 8882, 10037,
             6951, 8883, 10038, 6952, 8884, 10039, 6953, 8885, 10040, 6954, 
            8886, 10041, 6955, 8887, 10042, 6956, 8888, 10043, 6957, 3828, 
            6958, 10194, 7134, 6959, 10195, 7135, 6960, 10196, 7136, 6961, 
            10197, 7137, 6962, 10198, 7138, 6963}], 
           
           Line3DBox[{6965, 8889, 10044, 6964, 8890, 10045, 6966, 8891, 10046,
             6967, 8892, 10047, 6968, 8893, 10048, 6969, 8894, 10049, 6970, 
            8895, 10050, 6971, 8896, 10051, 6972, 8897, 10052, 6973, 8898, 
            10053, 6974, 3844, 6975, 10199, 7139, 6976, 10200, 7140, 6977, 
            10201, 7141, 6978, 10202, 7142, 6979}], 
           
           Line3DBox[{6981, 8899, 10054, 6980, 8900, 10055, 6982, 8901, 10056,
             6983, 8902, 10057, 6984, 8903, 10058, 6985, 8904, 10059, 6986, 
            8905, 10060, 6987, 8906, 10061, 6988, 8907, 10062, 6989, 8908, 
            10063, 6990, 8909, 10064, 6991, 3860, 6992, 10203, 7143, 6993, 
            10204, 7144, 6994, 10205, 7145, 6995}], 
           
           Line3DBox[{6997, 8910, 10065, 6996, 8911, 10066, 6998, 8912, 10067,
             6999, 8913, 10068, 7000, 8914, 10069, 7001, 8915, 10070, 7002, 
            8916, 10071, 7003, 8917, 10072, 7004, 8918, 10073, 7005, 8919, 
            10074, 7006, 8920, 10075, 7007, 8921, 10076, 7008, 3876, 7009, 
            10206, 7146, 7010, 10207, 7147, 7011}], 
           
           Line3DBox[{7013, 8922, 10077, 7012, 8923, 10078, 7014, 8924, 10079,
             7015, 8925, 10080, 7016, 8926, 10081, 7017, 8927, 10082, 7018, 
            8928, 10083, 7019, 8929, 10084, 7020, 8930, 10085, 7021, 8931, 
            10086, 7022, 8932, 10087, 7023, 8933, 10088, 7024, 8934, 10089, 
            7025, 3892, 7026, 10208, 7148, 7027}], 
           
           Line3DBox[{7029, 8935, 10090, 7028, 8936, 10091, 7030, 8937, 10092,
             7031, 8938, 10093, 7032, 8939, 10094, 7033, 8940, 10095, 7034, 
            8941, 10096, 7035, 8942, 10097, 7036, 8943, 10098, 7037, 8944, 
            10099, 7038, 8945, 10100, 7039, 8946, 10101, 7040, 8947, 10102, 
            7041, 8948, 10103, 7042, 3908, 7043}], 
           
           Line3DBox[{7150, 4149, 7149, 10314, 7389, 7151, 10315, 7390, 7152, 
            10316, 7391, 7153, 10317, 7392, 7154, 10318, 7393, 7155, 10319, 
            7394, 7156, 10320, 7395, 7157, 10321, 7396, 7158, 10322, 7397, 
            7159, 10323, 7398, 7160, 10324, 7399, 7161, 10325, 7400, 7162, 
            10326, 7401, 7163, 10327, 7402, 7164}], 
           
           Line3DBox[{7166, 8949, 10209, 7165, 4165, 7167, 10328, 7403, 7168, 
            10329, 7404, 7169, 10330, 7405, 7170, 10331, 7406, 7171, 10332, 
            7407, 7172, 10333, 7408, 7173, 10334, 7409, 7174, 10335, 7410, 
            7175, 10336, 7411, 7176, 10337, 7412, 7177, 10338, 7413, 7178, 
            10339, 7414, 7179, 10340, 7415, 7180}], 
           
           Line3DBox[{7182, 8950, 10210, 7181, 8951, 10211, 7183, 4181, 7184, 
            10341, 7416, 7185, 10342, 7417, 7186, 10343, 7418, 7187, 10344, 
            7419, 7188, 10345, 7420, 7189, 10346, 7421, 7190, 10347, 7422, 
            7191, 10348, 7423, 7192, 10349, 7424, 7193, 10350, 7425, 7194, 
            10351, 7426, 7195, 10352, 7427, 7196}], 
           
           Line3DBox[{7198, 8952, 10212, 7197, 8953, 10213, 7199, 8954, 10214,
             7200, 4197, 7201, 10353, 7428, 7202, 10354, 7429, 7203, 10355, 
            7430, 7204, 10356, 7431, 7205, 10357, 7432, 7206, 10358, 7433, 
            7207, 10359, 7434, 7208, 10360, 7435, 7209, 10361, 7436, 7210, 
            10362, 7437, 7211, 10363, 7438, 7212}], 
           
           Line3DBox[{7214, 8955, 10215, 7213, 8956, 10216, 7215, 8957, 10217,
             7216, 8958, 10218, 7217, 4213, 7218, 10364, 7439, 7219, 10365, 
            7440, 7220, 10366, 7441, 7221, 10367, 7442, 7222, 10368, 7443, 
            7223, 10369, 7444, 7224, 10370, 7445, 7225, 10371, 7446, 7226, 
            10372, 7447, 7227, 10373, 7448, 7228}], 
           
           Line3DBox[{7230, 8959, 10219, 7229, 8960, 10220, 7231, 8961, 10221,
             7232, 8962, 10222, 7233, 8963, 10223, 7234, 4229, 7235, 10374, 
            7449, 7236, 10375, 7450, 7237, 10376, 7451, 7238, 10377, 7452, 
            7239, 10378, 7453, 7240, 10379, 7454, 7241, 10380, 7455, 7242, 
            10381, 7456, 7243, 10382, 7457, 7244}], 
           
           Line3DBox[{7246, 8964, 10224, 7245, 8965, 10225, 7247, 8966, 10226,
             7248, 8967, 10227, 7249, 8968, 10228, 7250, 8969, 10229, 7251, 
            4245, 7252, 10383, 7458, 7253, 10384, 7459, 7254, 10385, 7460, 
            7255, 10386, 7461, 7256, 10387, 7462, 7257, 10388, 7463, 7258, 
            10389, 7464, 7259, 10390, 7465, 7260}], 
           
           Line3DBox[{7262, 8970, 10230, 7261, 8971, 10231, 7263, 8972, 10232,
             7264, 8973, 10233, 7265, 8974, 10234, 7266, 8975, 10235, 7267, 
            8976, 10236, 7268, 4261, 7269, 10391, 7466, 7270, 10392, 7467, 
            7271, 10393, 7468, 7272, 10394, 7469, 7273, 10395, 7470, 7274, 
            10396, 7471, 7275, 10397, 7472, 7276}], 
           
           Line3DBox[{7278, 8977, 10237, 7277, 8978, 10238, 7279, 8979, 10239,
             7280, 8980, 10240, 7281, 8981, 10241, 7282, 8982, 10242, 7283, 
            8983, 10243, 7284, 8984, 10244, 7285, 4277, 7286, 10398, 7473, 
            7287, 10399, 7474, 7288, 10400, 7475, 7289, 10401, 7476, 7290, 
            10402, 7477, 7291, 10403, 7478, 7292}], 
           
           Line3DBox[{7294, 8985, 10245, 7293, 8986, 10246, 7295, 8987, 10247,
             7296, 8988, 10248, 7297, 8989, 10249, 7298, 8990, 10250, 7299, 
            8991, 10251, 7300, 8992, 10252, 7301, 8993, 10253, 7302, 4293, 
            7303, 10404, 7479, 7304, 10405, 7480, 7305, 10406, 7481, 7306, 
            10407, 7482, 7307, 10408, 7483, 7308}], 
           
           Line3DBox[{7310, 8994, 10254, 7309, 8995, 10255, 7311, 8996, 10256,
             7312, 8997, 10257, 7313, 8998, 10258, 7314, 8999, 10259, 7315, 
            9000, 10260, 7316, 9001, 10261, 7317, 9002, 10262, 7318, 9003, 
            10263, 7319, 4309, 7320, 10409, 7484, 7321, 10410, 7485, 7322, 
            10411, 7486, 7323, 10412, 7487, 7324}], 
           
           Line3DBox[{7326, 9004, 10264, 7325, 9005, 10265, 7327, 9006, 10266,
             7328, 9007, 10267, 7329, 9008, 10268, 7330, 9009, 10269, 7331, 
            9010, 10270, 7332, 9011, 10271, 7333, 9012, 10272, 7334, 9013, 
            10273, 7335, 9014, 10274, 7336, 4325, 7337, 10413, 7488, 7338, 
            10414, 7489, 7339, 10415, 7490, 7340}], 
           
           Line3DBox[{7342, 9015, 10275, 7341, 9016, 10276, 7343, 9017, 10277,
             7344, 9018, 10278, 7345, 9019, 10279, 7346, 9020, 10280, 7347, 
            9021, 10281, 7348, 9022, 10282, 7349, 9023, 10283, 7350, 9024, 
            10284, 7351, 9025, 10285, 7352, 9026, 10286, 7353, 4341, 7354, 
            10416, 7491, 7355, 10417, 7492, 7356}], 
           
           Line3DBox[{7358, 9027, 10287, 7357, 9028, 10288, 7359, 9029, 10289,
             7360, 9030, 10290, 7361, 9031, 10291, 7362, 9032, 10292, 7363, 
            9033, 10293, 7364, 9034, 10294, 7365, 9035, 10295, 7366, 9036, 
            10296, 7367, 9037, 10297, 7368, 9038, 10298, 7369, 9039, 10299, 
            7370, 4357, 7371, 10418, 7493, 7372}], 
           
           Line3DBox[{7374, 9040, 10300, 7373, 9041, 10301, 7375, 9042, 10302,
             7376, 9043, 10303, 7377, 9044, 10304, 7378, 9045, 10305, 7379, 
            9046, 10306, 7380, 9047, 10307, 7381, 9048, 10308, 7382, 9049, 
            10309, 7383, 9050, 10310, 7384, 9051, 10311, 7385, 9052, 10312, 
            7386, 9053, 10313, 7387, 4373, 7388}], 
           
           Line3DBox[{7495, 4614, 7494, 10524, 7734, 7496, 10525, 7735, 7497, 
            10526, 7736, 7498, 10527, 7737, 7499, 10528, 7738, 7500, 10529, 
            7739, 7501, 10530, 7740, 7502, 10531, 7741, 7503, 10532, 7742, 
            7504, 10533, 7743, 7505, 10534, 7744, 7506, 10535, 7745, 7507, 
            10536, 7746, 7508, 10537, 7747, 7509}], 
           
           Line3DBox[{7511, 9054, 10419, 7510, 4630, 7512, 10538, 7748, 7513, 
            10539, 7749, 7514, 10540, 7750, 7515, 10541, 7751, 7516, 10542, 
            7752, 7517, 10543, 7753, 7518, 10544, 7754, 7519, 10545, 7755, 
            7520, 10546, 7756, 7521, 10547, 7757, 7522, 10548, 7758, 7523, 
            10549, 7759, 7524, 10550, 7760, 7525}], 
           
           Line3DBox[{7527, 9055, 10420, 7526, 9056, 10421, 7528, 4646, 7529, 
            10551, 7761, 7530, 10552, 7762, 7531, 10553, 7763, 7532, 10554, 
            7764, 7533, 10555, 7765, 7534, 10556, 7766, 7535, 10557, 7767, 
            7536, 10558, 7768, 7537, 10559, 7769, 7538, 10560, 7770, 7539, 
            10561, 7771, 7540, 10562, 7772, 7541}], 
           
           Line3DBox[{7543, 9057, 10422, 7542, 9058, 10423, 7544, 9059, 10424,
             7545, 4662, 7546, 10563, 7773, 7547, 10564, 7774, 7548, 10565, 
            7775, 7549, 10566, 7776, 7550, 10567, 7777, 7551, 10568, 7778, 
            7552, 10569, 7779, 7553, 10570, 7780, 7554, 10571, 7781, 7555, 
            10572, 7782, 7556, 10573, 7783, 7557}], 
           
           Line3DBox[{7559, 9060, 10425, 7558, 9061, 10426, 7560, 9062, 10427,
             7561, 9063, 10428, 7562, 4678, 7563, 10574, 7784, 7564, 10575, 
            7785, 7565, 10576, 7786, 7566, 10577, 7787, 7567, 10578, 7788, 
            7568, 10579, 7789, 7569, 10580, 7790, 7570, 10581, 7791, 7571, 
            10582, 7792, 7572, 10583, 7793, 7573}], 
           
           Line3DBox[{7575, 9064, 10429, 7574, 9065, 10430, 7576, 9066, 10431,
             7577, 9067, 10432, 7578, 9068, 10433, 7579, 4694, 7580, 10584, 
            7794, 7581, 10585, 7795, 7582, 10586, 7796, 7583, 10587, 7797, 
            7584, 10588, 7798, 7585, 10589, 7799, 7586, 10590, 7800, 7587, 
            10591, 7801, 7588, 10592, 7802, 7589}], 
           
           Line3DBox[{7591, 9069, 10434, 7590, 9070, 10435, 7592, 9071, 10436,
             7593, 9072, 10437, 7594, 9073, 10438, 7595, 9074, 10439, 7596, 
            4710, 7597, 10593, 7803, 7598, 10594, 7804, 7599, 10595, 7805, 
            7600, 10596, 7806, 7601, 10597, 7807, 7602, 10598, 7808, 7603, 
            10599, 7809, 7604, 10600, 7810, 7605}], 
           
           Line3DBox[{7607, 9075, 10440, 7606, 9076, 10441, 7608, 9077, 10442,
             7609, 9078, 10443, 7610, 9079, 10444, 7611, 9080, 10445, 7612, 
            9081, 10446, 7613, 4726, 7614, 10601, 7811, 7615, 10602, 7812, 
            7616, 10603, 7813, 7617, 10604, 7814, 7618, 10605, 7815, 7619, 
            10606, 7816, 7620, 10607, 7817, 7621}], 
           
           Line3DBox[{7623, 9082, 10447, 7622, 9083, 10448, 7624, 9084, 10449,
             7625, 9085, 10450, 7626, 9086, 10451, 7627, 9087, 10452, 7628, 
            9088, 10453, 7629, 9089, 10454, 7630, 4742, 7631, 10608, 7818, 
            7632, 10609, 7819, 7633, 10610, 7820, 7634, 10611, 7821, 7635, 
            10612, 7822, 7636, 10613, 7823, 7637}], 
           
           Line3DBox[{7639, 9090, 10455, 7638, 9091, 10456, 7640, 9092, 10457,
             7641, 9093, 10458, 7642, 9094, 10459, 7643, 9095, 10460, 7644, 
            9096, 10461, 7645, 9097, 10462, 7646, 9098, 10463, 7647, 4758, 
            7648, 10614, 7824, 7649, 10615, 7825, 7650, 10616, 7826, 7651, 
            10617, 7827, 7652, 10618, 7828, 7653}], 
           
           Line3DBox[{7655, 9099, 10464, 7654, 9100, 10465, 7656, 9101, 10466,
             7657, 9102, 10467, 7658, 9103, 10468, 7659, 9104, 10469, 7660, 
            9105, 10470, 7661, 9106, 10471, 7662, 9107, 10472, 7663, 9108, 
            10473, 7664, 4774, 7665, 10619, 7829, 7666, 10620, 7830, 7667, 
            10621, 7831, 7668, 10622, 7832, 7669}], 
           
           Line3DBox[{7671, 9109, 10474, 7670, 9110, 10475, 7672, 9111, 10476,
             7673, 9112, 10477, 7674, 9113, 10478, 7675, 9114, 10479, 7676, 
            9115, 10480, 7677, 9116, 10481, 7678, 9117, 10482, 7679, 9118, 
            10483, 7680, 9119, 10484, 7681, 4790, 7682, 10623, 7833, 7683, 
            10624, 7834, 7684, 10625, 7835, 7685}], 
           
           Line3DBox[{7687, 9120, 10485, 7686, 9121, 10486, 7688, 9122, 10487,
             7689, 9123, 10488, 7690, 9124, 10489, 7691, 9125, 10490, 7692, 
            9126, 10491, 7693, 9127, 10492, 7694, 9128, 10493, 7695, 9129, 
            10494, 7696, 9130, 10495, 7697, 9131, 10496, 7698, 4806, 7699, 
            10626, 7836, 7700, 10627, 7837, 7701}], 
           
           Line3DBox[{7703, 9132, 10497, 7702, 9133, 10498, 7704, 9134, 10499,
             7705, 9135, 10500, 7706, 9136, 10501, 7707, 9137, 10502, 7708, 
            9138, 10503, 7709, 9139, 10504, 7710, 9140, 10505, 7711, 9141, 
            10506, 7712, 9142, 10507, 7713, 9143, 10508, 7714, 9144, 10509, 
            7715, 4822, 7716, 10628, 7838, 7717}], 
           
           Line3DBox[{7719, 9145, 10510, 7718, 9146, 10511, 7720, 9147, 10512,
             7721, 9148, 10513, 7722, 9149, 10514, 7723, 9150, 10515, 7724, 
            9151, 10516, 7725, 9152, 10517, 7726, 9153, 10518, 7727, 9154, 
            10519, 7728, 9155, 10520, 7729, 9156, 10521, 7730, 9157, 10522, 
            7731, 9158, 10523, 7732, 4838, 7733}], 
           
           Line3DBox[{7840, 5079, 7839, 10734, 8079, 7841, 10735, 8080, 7842, 
            10736, 8081, 7843, 10737, 8082, 7844, 10738, 8083, 7845, 10739, 
            8084, 7846, 10740, 8085, 7847, 10741, 8086, 7848, 10742, 8087, 
            7849, 10743, 8088, 7850, 10744, 8089, 7851, 10745, 8090, 7852, 
            10746, 8091, 7853, 10747, 8092, 7854}], 
           
           Line3DBox[{7856, 9159, 10629, 7855, 5095, 7857, 10748, 8093, 7858, 
            10749, 8094, 7859, 10750, 8095, 7860, 10751, 8096, 7861, 10752, 
            8097, 7862, 10753, 8098, 7863, 10754, 8099, 7864, 10755, 8100, 
            7865, 10756, 8101, 7866, 10757, 8102, 7867, 10758, 8103, 7868, 
            10759, 8104, 7869, 10760, 8105, 7870}], 
           
           Line3DBox[{7872, 9160, 10630, 7871, 9161, 10631, 7873, 5111, 7874, 
            10761, 8106, 7875, 10762, 8107, 7876, 10763, 8108, 7877, 10764, 
            8109, 7878, 10765, 8110, 7879, 10766, 8111, 7880, 10767, 8112, 
            7881, 10768, 8113, 7882, 10769, 8114, 7883, 10770, 8115, 7884, 
            10771, 8116, 7885, 10772, 8117, 7886}], 
           
           Line3DBox[{7888, 9162, 10632, 7887, 9163, 10633, 7889, 9164, 10634,
             7890, 5127, 7891, 10773, 8118, 7892, 10774, 8119, 7893, 10775, 
            8120, 7894, 10776, 8121, 7895, 10777, 8122, 7896, 10778, 8123, 
            7897, 10779, 8124, 7898, 10780, 8125, 7899, 10781, 8126, 7900, 
            10782, 8127, 7901, 10783, 8128, 7902}], 
           
           Line3DBox[{7904, 9165, 10635, 7903, 9166, 10636, 7905, 9167, 10637,
             7906, 9168, 10638, 7907, 5143, 7908, 10784, 8129, 7909, 10785, 
            8130, 7910, 10786, 8131, 7911, 10787, 8132, 7912, 10788, 8133, 
            7913, 10789, 8134, 7914, 10790, 8135, 7915, 10791, 8136, 7916, 
            10792, 8137, 7917, 10793, 8138, 7918}], 
           
           Line3DBox[{7920, 9169, 10639, 7919, 9170, 10640, 7921, 9171, 10641,
             7922, 9172, 10642, 7923, 9173, 10643, 7924, 5159, 7925, 10794, 
            8139, 7926, 10795, 8140, 7927, 10796, 8141, 7928, 10797, 8142, 
            7929, 10798, 8143, 7930, 10799, 8144, 7931, 10800, 8145, 7932, 
            10801, 8146, 7933, 10802, 8147, 7934}], 
           
           Line3DBox[{7936, 9174, 10644, 7935, 9175, 10645, 7937, 9176, 10646,
             7938, 9177, 10647, 7939, 9178, 10648, 7940, 9179, 10649, 7941, 
            5175, 7942, 10803, 8148, 7943, 10804, 8149, 7944, 10805, 8150, 
            7945, 10806, 8151, 7946, 10807, 8152, 7947, 10808, 8153, 7948, 
            10809, 8154, 7949, 10810, 8155, 7950}], 
           
           Line3DBox[{7952, 9180, 10650, 7951, 9181, 10651, 7953, 9182, 10652,
             7954, 9183, 10653, 7955, 9184, 10654, 7956, 9185, 10655, 7957, 
            9186, 10656, 7958, 5191, 7959, 10811, 8156, 7960, 10812, 8157, 
            7961, 10813, 8158, 7962, 10814, 8159, 7963, 10815, 8160, 7964, 
            10816, 8161, 7965, 10817, 8162, 7966}], 
           
           Line3DBox[{7968, 9187, 10657, 7967, 9188, 10658, 7969, 9189, 10659,
             7970, 9190, 10660, 7971, 9191, 10661, 7972, 9192, 10662, 7973, 
            9193, 10663, 7974, 9194, 10664, 7975, 5207, 7976, 10818, 8163, 
            7977, 10819, 8164, 7978, 10820, 8165, 7979, 10821, 8166, 7980, 
            10822, 8167, 7981, 10823, 8168, 7982}], 
           
           Line3DBox[{7984, 9195, 10665, 7983, 9196, 10666, 7985, 9197, 10667,
             7986, 9198, 10668, 7987, 9199, 10669, 7988, 9200, 10670, 7989, 
            9201, 10671, 7990, 9202, 10672, 7991, 9203, 10673, 7992, 5223, 
            7993, 10824, 8169, 7994, 10825, 8170, 7995, 10826, 8171, 7996, 
            10827, 8172, 7997, 10828, 8173, 7998}], 
           
           Line3DBox[{8000, 9204, 10674, 7999, 9205, 10675, 8001, 9206, 10676,
             8002, 9207, 10677, 8003, 9208, 10678, 8004, 9209, 10679, 8005, 
            9210, 10680, 8006, 9211, 10681, 8007, 9212, 10682, 8008, 9213, 
            10683, 8009, 5239, 8010, 10829, 8174, 8011, 10830, 8175, 8012, 
            10831, 8176, 8013, 10832, 8177, 8014}], 
           
           Line3DBox[{8016, 9214, 10684, 8015, 9215, 10685, 8017, 9216, 10686,
             8018, 9217, 10687, 8019, 9218, 10688, 8020, 9219, 10689, 8021, 
            9220, 10690, 8022, 9221, 10691, 8023, 9222, 10692, 8024, 9223, 
            10693, 8025, 9224, 10694, 8026, 5255, 8027, 10833, 8178, 8028, 
            10834, 8179, 8029, 10835, 8180, 8030}], 
           
           Line3DBox[{8032, 9225, 10695, 8031, 9226, 10696, 8033, 9227, 10697,
             8034, 9228, 10698, 8035, 9229, 10699, 8036, 9230, 10700, 8037, 
            9231, 10701, 8038, 9232, 10702, 8039, 9233, 10703, 8040, 9234, 
            10704, 8041, 9235, 10705, 8042, 9236, 10706, 8043, 5271, 8044, 
            10836, 8181, 8045, 10837, 8182, 8046}], 
           
           Line3DBox[{8048, 9237, 10707, 8047, 9238, 10708, 8049, 9239, 10709,
             8050, 9240, 10710, 8051, 9241, 10711, 8052, 9242, 10712, 8053, 
            9243, 10713, 8054, 9244, 10714, 8055, 9245, 10715, 8056, 9246, 
            10716, 8057, 9247, 10717, 8058, 9248, 10718, 8059, 9249, 10719, 
            8060, 5287, 8061, 10838, 8183, 8062}], 
           
           Line3DBox[{8064, 9250, 10720, 8063, 9251, 10721, 8065, 9252, 10722,
             8066, 9253, 10723, 8067, 9254, 10724, 8068, 9255, 10725, 8069, 
            9256, 10726, 8070, 9257, 10727, 8071, 9258, 10728, 8072, 9259, 
            10729, 8073, 9260, 10730, 8074, 9261, 10731, 8075, 9262, 10732, 
            8076, 9263, 10733, 8077, 5303, 8078}], 
           
           Line3DBox[{8185, 5544, 8184, 10944, 8424, 8186, 10945, 8425, 8187, 
            10946, 8426, 8188, 10947, 8427, 8189, 10948, 8428, 8190, 10949, 
            8429, 8191, 10950, 8430, 8192, 10951, 8431, 8193, 10952, 8432, 
            8194, 10953, 8433, 8195, 10954, 8434, 8196, 10955, 8435, 8197, 
            10956, 8436, 8198, 10957, 8437, 8199}], 
           
           Line3DBox[{8201, 9264, 10839, 8200, 5560, 8202, 10958, 8438, 8203, 
            10959, 8439, 8204, 10960, 8440, 8205, 10961, 8441, 8206, 10962, 
            8442, 8207, 10963, 8443, 8208, 10964, 8444, 8209, 10965, 8445, 
            8210, 10966, 8446, 8211, 10967, 8447, 8212, 10968, 8448, 8213, 
            10969, 8449, 8214, 10970, 8450, 8215}], 
           
           Line3DBox[{8217, 9265, 10840, 8216, 9266, 10841, 8218, 5576, 8219, 
            10971, 8451, 8220, 10972, 8452, 8221, 10973, 8453, 8222, 10974, 
            8454, 8223, 10975, 8455, 8224, 10976, 8456, 8225, 10977, 8457, 
            8226, 10978, 8458, 8227, 10979, 8459, 8228, 10980, 8460, 8229, 
            10981, 8461, 8230, 10982, 8462, 8231}], 
           
           Line3DBox[{8233, 9267, 10842, 8232, 9268, 10843, 8234, 9269, 10844,
             8235, 5592, 8236, 10983, 8463, 8237, 10984, 8464, 8238, 10985, 
            8465, 8239, 10986, 8466, 8240, 10987, 8467, 8241, 10988, 8468, 
            8242, 10989, 8469, 8243, 10990, 8470, 8244, 10991, 8471, 8245, 
            10992, 8472, 8246, 10993, 8473, 8247}], 
           
           Line3DBox[{8249, 9270, 10845, 8248, 9271, 10846, 8250, 9272, 10847,
             8251, 9273, 10848, 8252, 5608, 8253, 10994, 8474, 8254, 10995, 
            8475, 8255, 10996, 8476, 8256, 10997, 8477, 8257, 10998, 8478, 
            8258, 10999, 8479, 8259, 11000, 8480, 8260, 11001, 8481, 8261, 
            11002, 8482, 8262, 11003, 8483, 8263}], 
           
           Line3DBox[{8265, 9274, 10849, 8264, 9275, 10850, 8266, 9276, 10851,
             8267, 9277, 10852, 8268, 9278, 10853, 8269, 5624, 8270, 11004, 
            8484, 8271, 11005, 8485, 8272, 11006, 8486, 8273, 11007, 8487, 
            8274, 11008, 8488, 8275, 11009, 8489, 8276, 11010, 8490, 8277, 
            11011, 8491, 8278, 11012, 8492, 8279}], 
           
           Line3DBox[{8281, 9279, 10854, 8280, 9280, 10855, 8282, 9281, 10856,
             8283, 9282, 10857, 8284, 9283, 10858, 8285, 9284, 10859, 8286, 
            5640, 8287, 11013, 8493, 8288, 11014, 8494, 8289, 11015, 8495, 
            8290, 11016, 8496, 8291, 11017, 8497, 8292, 11018, 8498, 8293, 
            11019, 8499, 8294, 11020, 8500, 8295}], 
           
           Line3DBox[{8297, 9285, 10860, 8296, 9286, 10861, 8298, 9287, 10862,
             8299, 9288, 10863, 8300, 9289, 10864, 8301, 9290, 10865, 8302, 
            9291, 10866, 8303, 5656, 8304, 11021, 8501, 8305, 11022, 8502, 
            8306, 11023, 8503, 8307, 11024, 8504, 8308, 11025, 8505, 8309, 
            11026, 8506, 8310, 11027, 8507, 8311}], 
           Line3DBox[{8313, 9292, 10867, 8312, 9293, 10868, 8314, 9294, 10869,
             8315, 9295, 10870, 8316, 9296, 10871, 8317, 9297, 10872, 8318, 
            9298, 10873, 8319, 9299, 10874, 8320, 5672, 8321, 11028, 8508, 
            8322, 11029, 8509, 8323, 11030, 8510, 8324, 11031, 8511, 8325, 
            11032, 8512, 8326, 11033, 8513, 8327}], 
           
           Line3DBox[{8329, 9300, 10875, 8328, 9301, 10876, 8330, 9302, 10877,
             8331, 9303, 10878, 8332, 9304, 10879, 8333, 9305, 10880, 8334, 
            9306, 10881, 8335, 9307, 10882, 8336, 9308, 10883, 8337, 5688, 
            8338, 11034, 8514, 8339, 11035, 8515, 8340, 11036, 8516, 8341, 
            11037, 8517, 8342, 11038, 8518, 8343}], 
           
           Line3DBox[{8345, 9309, 10884, 8344, 9310, 10885, 8346, 9311, 10886,
             8347, 9312, 10887, 8348, 9313, 10888, 8349, 9314, 10889, 8350, 
            9315, 10890, 8351, 9316, 10891, 8352, 9317, 10892, 8353, 9318, 
            10893, 8354, 5704, 8355, 11039, 8519, 8356, 11040, 8520, 8357, 
            11041, 8521, 8358, 11042, 8522, 8359}], 
           
           Line3DBox[{8361, 9319, 10894, 8360, 9320, 10895, 8362, 9321, 10896,
             8363, 9322, 10897, 8364, 9323, 10898, 8365, 9324, 10899, 8366, 
            9325, 10900, 8367, 9326, 10901, 8368, 9327, 10902, 8369, 9328, 
            10903, 8370, 9329, 10904, 8371, 5720, 8372, 11043, 8523, 8373, 
            11044, 8524, 8374, 11045, 8525, 8375}], 
           
           Line3DBox[{8377, 9330, 10905, 8376, 9331, 10906, 8378, 9332, 10907,
             8379, 9333, 10908, 8380, 9334, 10909, 8381, 9335, 10910, 8382, 
            9336, 10911, 8383, 9337, 10912, 8384, 9338, 10913, 8385, 9339, 
            10914, 8386, 9340, 10915, 8387, 9341, 10916, 8388, 5736, 8389, 
            11046, 8526, 8390, 11047, 8527, 8391}], 
           
           Line3DBox[{8393, 9342, 10917, 8392, 9343, 10918, 8394, 9344, 10919,
             8395, 9345, 10920, 8396, 9346, 10921, 8397, 9347, 10922, 8398, 
            9348, 10923, 8399, 9349, 10924, 8400, 9350, 10925, 8401, 9351, 
            10926, 8402, 9352, 10927, 8403, 9353, 10928, 8404, 9354, 10929, 
            8405, 5752, 8406, 11048, 8528, 8407}], 
           
           Line3DBox[{8409, 9355, 10930, 8408, 9356, 10931, 8410, 9357, 10932,
             8411, 9358, 10933, 8412, 9359, 10934, 8413, 9360, 10935, 8414, 
            9361, 10936, 8415, 9362, 10937, 8416, 9363, 10938, 8417, 9364, 
            10939, 8418, 9365, 10940, 8419, 9366, 10941, 8420, 9367, 10942, 
            8421, 9368, 10943, 8422, 5768, 8423}]}, {
           GrayLevel[0.2], 
           
           Line3DBox[{2049, 2289, 2050, 9369, 2304, 2079, 9370, 2319, 2094, 
            9372, 2334, 2109, 9375, 2349, 2124, 9379, 2364, 2139, 9384, 2379, 
            2154, 9390, 2394, 2169, 9397, 2409, 2184, 9405, 2424, 2199, 9414, 
            2439, 2214, 9424, 2454, 2229, 9435, 2469, 2244, 9447, 2484, 2259, 
            9460, 2499, 2274}], 
           
           Line3DBox[{2051, 2290, 9474, 2052, 2305, 2080, 9371, 2320, 2095, 
            9373, 2335, 2110, 9376, 2350, 2125, 9380, 2365, 2140, 9385, 2380, 
            2155, 9391, 2395, 2170, 9398, 2410, 2185, 9406, 2425, 2200, 9415, 
            2440, 2215, 9425, 2455, 2230, 9436, 2470, 2245, 9448, 2485, 2260, 
            9461, 2500, 2275}], 
           
           Line3DBox[{2053, 2291, 9475, 2054, 2306, 9488, 2081, 2321, 2096, 
            9374, 2336, 2111, 9377, 2351, 2126, 9381, 2366, 2141, 9386, 2381, 
            2156, 9392, 2396, 2171, 9399, 2411, 2186, 9407, 2426, 2201, 9416, 
            2441, 2216, 9426, 2456, 2231, 9437, 2471, 2246, 9449, 2486, 2261, 
            9462, 2501, 2276}], 
           
           Line3DBox[{2055, 2292, 9476, 2056, 2307, 9489, 2082, 2322, 9501, 
            2097, 2337, 2112, 9378, 2352, 2127, 9382, 2367, 2142, 9387, 2382, 
            2157, 9393, 2397, 2172, 9400, 2412, 2187, 9408, 2427, 2202, 9417, 
            2442, 2217, 9427, 2457, 2232, 9438, 2472, 2247, 9450, 2487, 2262, 
            9463, 2502, 2277}], 
           
           Line3DBox[{2057, 2293, 9477, 2058, 2308, 9490, 2083, 2323, 9502, 
            2098, 2338, 9513, 2113, 2353, 2128, 9383, 2368, 2143, 9388, 2383, 
            2158, 9394, 2398, 2173, 9401, 2413, 2188, 9409, 2428, 2203, 9418, 
            2443, 2218, 9428, 2458, 2233, 9439, 2473, 2248, 9451, 2488, 2263, 
            9464, 2503, 2278}], 
           
           Line3DBox[{2059, 2294, 9478, 2060, 2309, 9491, 2084, 2324, 9503, 
            2099, 2339, 9514, 2114, 2354, 9524, 2129, 2369, 2144, 9389, 2384, 
            2159, 9395, 2399, 2174, 9402, 2414, 2189, 9410, 2429, 2204, 9419, 
            2444, 2219, 9429, 2459, 2234, 9440, 2474, 2249, 9452, 2489, 2264, 
            9465, 2504, 2279}], 
           
           Line3DBox[{2061, 2295, 9479, 2062, 2310, 9492, 2085, 2325, 9504, 
            2100, 2340, 9515, 2115, 2355, 9525, 2130, 2370, 9534, 2145, 2385, 
            2160, 9396, 2400, 2175, 9403, 2415, 2190, 9411, 2430, 2205, 9420, 
            2445, 2220, 9430, 2460, 2235, 9441, 2475, 2250, 9453, 2490, 2265, 
            9466, 2505, 2280}], 
           
           Line3DBox[{2063, 2296, 9480, 2064, 2311, 9493, 2086, 2326, 9505, 
            2101, 2341, 9516, 2116, 2356, 9526, 2131, 2371, 9535, 2146, 2386, 
            9543, 2161, 2401, 2176, 9404, 2416, 2191, 9412, 2431, 2206, 9421, 
            2446, 2221, 9431, 2461, 2236, 9442, 2476, 2251, 9454, 2491, 2266, 
            9467, 2506, 2281}], 
           
           Line3DBox[{2065, 2297, 9481, 2066, 2312, 9494, 2087, 2327, 9506, 
            2102, 2342, 9517, 2117, 2357, 9527, 2132, 2372, 9536, 2147, 2387, 
            9544, 2162, 2402, 9551, 2177, 2417, 2192, 9413, 2432, 2207, 9422, 
            2447, 2222, 9432, 2462, 2237, 9443, 2477, 2252, 9455, 2492, 2267, 
            9468, 2507, 2282}], 
           
           Line3DBox[{2067, 2298, 9482, 2068, 2313, 9495, 2088, 2328, 9507, 
            2103, 2343, 9518, 2118, 2358, 9528, 2133, 2373, 9537, 2148, 2388, 
            9545, 2163, 2403, 9552, 2178, 2418, 9558, 2193, 2433, 2208, 9423, 
            2448, 2223, 9433, 2463, 2238, 9444, 2478, 2253, 9456, 2493, 2268, 
            9469, 2508, 2283}], 
           
           Line3DBox[{2069, 2299, 9483, 2070, 2314, 9496, 2089, 2329, 9508, 
            2104, 2344, 9519, 2119, 2359, 9529, 2134, 2374, 9538, 2149, 2389, 
            9546, 2164, 2404, 9553, 2179, 2419, 9559, 2194, 2434, 9564, 2209, 
            2449, 2224, 9434, 2464, 2239, 9445, 2479, 2254, 9457, 2494, 2269, 
            9470, 2509, 2284}], 
           
           Line3DBox[{2071, 2300, 9484, 2072, 2315, 9497, 2090, 2330, 9509, 
            2105, 2345, 9520, 2120, 2360, 9530, 2135, 2375, 9539, 2150, 2390, 
            9547, 2165, 2405, 9554, 2180, 2420, 9560, 2195, 2435, 9565, 2210, 
            2450, 9569, 2225, 2465, 2240, 9446, 2480, 2255, 9458, 2495, 2270, 
            9471, 2510, 2285}], 
           
           Line3DBox[{2073, 2301, 9485, 2074, 2316, 9498, 2091, 2331, 9510, 
            2106, 2346, 9521, 2121, 2361, 9531, 2136, 2376, 9540, 2151, 2391, 
            9548, 2166, 2406, 9555, 2181, 2421, 9561, 2196, 2436, 9566, 2211, 
            2451, 9570, 2226, 2466, 9573, 2241, 2481, 2256, 9459, 2496, 2271, 
            9472, 2511, 2286}], 
           
           Line3DBox[{2075, 2302, 9486, 2076, 2317, 9499, 2092, 2332, 9511, 
            2107, 2347, 9522, 2122, 2362, 9532, 2137, 2377, 9541, 2152, 2392, 
            9549, 2167, 2407, 9556, 2182, 2422, 9562, 2197, 2437, 9567, 2212, 
            2452, 9571, 2227, 2467, 9574, 2242, 2482, 9576, 2257, 2497, 2272, 
            9473, 2512, 2287}], 
           
           Line3DBox[{2077, 2303, 9487, 2078, 2318, 9500, 2093, 2333, 9512, 
            2108, 2348, 9523, 2123, 2363, 9533, 2138, 2378, 9542, 2153, 2393, 
            9550, 2168, 2408, 9557, 2183, 2423, 9563, 2198, 2438, 9568, 2213, 
            2453, 9572, 2228, 2468, 9575, 2243, 2483, 9577, 2258, 2498, 9578, 
            2273, 2513, 2288}], 
           
           Line3DBox[{2514, 2754, 2515, 9579, 2769, 2544, 9580, 2784, 2559, 
            9582, 2799, 2574, 9585, 2814, 2589, 9589, 2829, 2604, 9594, 2844, 
            2619, 9600, 2859, 2634, 9607, 2874, 2649, 9615, 2889, 2664, 9624, 
            2904, 2679, 9634, 2919, 2694, 9645, 2934, 2709, 9657, 2949, 2724, 
            9670, 2964, 2739}], 
           
           Line3DBox[{2516, 2755, 9684, 2517, 2770, 2545, 9581, 2785, 2560, 
            9583, 2800, 2575, 9586, 2815, 2590, 9590, 2830, 2605, 9595, 2845, 
            2620, 9601, 2860, 2635, 9608, 2875, 2650, 9616, 2890, 2665, 9625, 
            2905, 2680, 9635, 2920, 2695, 9646, 2935, 2710, 9658, 2950, 2725, 
            9671, 2965, 2740}], 
           
           Line3DBox[{2518, 2756, 9685, 2519, 2771, 9698, 2546, 2786, 2561, 
            9584, 2801, 2576, 9587, 2816, 2591, 9591, 2831, 2606, 9596, 2846, 
            2621, 9602, 2861, 2636, 9609, 2876, 2651, 9617, 2891, 2666, 9626, 
            2906, 2681, 9636, 2921, 2696, 9647, 2936, 2711, 9659, 2951, 2726, 
            9672, 2966, 2741}], 
           
           Line3DBox[{2520, 2757, 9686, 2521, 2772, 9699, 2547, 2787, 9711, 
            2562, 2802, 2577, 9588, 2817, 2592, 9592, 2832, 2607, 9597, 2847, 
            2622, 9603, 2862, 2637, 9610, 2877, 2652, 9618, 2892, 2667, 9627, 
            2907, 2682, 9637, 2922, 2697, 9648, 2937, 2712, 9660, 2952, 2727, 
            9673, 2967, 2742}], 
           
           Line3DBox[{2522, 2758, 9687, 2523, 2773, 9700, 2548, 2788, 9712, 
            2563, 2803, 9723, 2578, 2818, 2593, 9593, 2833, 2608, 9598, 2848, 
            2623, 9604, 2863, 2638, 9611, 2878, 2653, 9619, 2893, 2668, 9628, 
            2908, 2683, 9638, 2923, 2698, 9649, 2938, 2713, 9661, 2953, 2728, 
            9674, 2968, 2743}], 
           
           Line3DBox[{2524, 2759, 9688, 2525, 2774, 9701, 2549, 2789, 9713, 
            2564, 2804, 9724, 2579, 2819, 9734, 2594, 2834, 2609, 9599, 2849, 
            2624, 9605, 2864, 2639, 9612, 2879, 2654, 9620, 2894, 2669, 9629, 
            2909, 2684, 9639, 2924, 2699, 9650, 2939, 2714, 9662, 2954, 2729, 
            9675, 2969, 2744}], 
           
           Line3DBox[{2526, 2760, 9689, 2527, 2775, 9702, 2550, 2790, 9714, 
            2565, 2805, 9725, 2580, 2820, 9735, 2595, 2835, 9744, 2610, 2850, 
            2625, 9606, 2865, 2640, 9613, 2880, 2655, 9621, 2895, 2670, 9630, 
            2910, 2685, 9640, 2925, 2700, 9651, 2940, 2715, 9663, 2955, 2730, 
            9676, 2970, 2745}], 
           
           Line3DBox[{2528, 2761, 9690, 2529, 2776, 9703, 2551, 2791, 9715, 
            2566, 2806, 9726, 2581, 2821, 9736, 2596, 2836, 9745, 2611, 2851, 
            9753, 2626, 2866, 2641, 9614, 2881, 2656, 9622, 2896, 2671, 9631, 
            2911, 2686, 9641, 2926, 2701, 9652, 2941, 2716, 9664, 2956, 2731, 
            9677, 2971, 2746}], 
           
           Line3DBox[{2530, 2762, 9691, 2531, 2777, 9704, 2552, 2792, 9716, 
            2567, 2807, 9727, 2582, 2822, 9737, 2597, 2837, 9746, 2612, 2852, 
            9754, 2627, 2867, 9761, 2642, 2882, 2657, 9623, 2897, 2672, 9632, 
            2912, 2687, 9642, 2927, 2702, 9653, 2942, 2717, 9665, 2957, 2732, 
            9678, 2972, 2747}], 
           
           Line3DBox[{2532, 2763, 9692, 2533, 2778, 9705, 2553, 2793, 9717, 
            2568, 2808, 9728, 2583, 2823, 9738, 2598, 2838, 9747, 2613, 2853, 
            9755, 2628, 2868, 9762, 2643, 2883, 9768, 2658, 2898, 2673, 9633, 
            2913, 2688, 9643, 2928, 2703, 9654, 2943, 2718, 9666, 2958, 2733, 
            9679, 2973, 2748}], 
           
           Line3DBox[{2534, 2764, 9693, 2535, 2779, 9706, 2554, 2794, 9718, 
            2569, 2809, 9729, 2584, 2824, 9739, 2599, 2839, 9748, 2614, 2854, 
            9756, 2629, 2869, 9763, 2644, 2884, 9769, 2659, 2899, 9774, 2674, 
            2914, 2689, 9644, 2929, 2704, 9655, 2944, 2719, 9667, 2959, 2734, 
            9680, 2974, 2749}], 
           
           Line3DBox[{2536, 2765, 9694, 2537, 2780, 9707, 2555, 2795, 9719, 
            2570, 2810, 9730, 2585, 2825, 9740, 2600, 2840, 9749, 2615, 2855, 
            9757, 2630, 2870, 9764, 2645, 2885, 9770, 2660, 2900, 9775, 2675, 
            2915, 9779, 2690, 2930, 2705, 9656, 2945, 2720, 9668, 2960, 2735, 
            9681, 2975, 2750}], 
           
           Line3DBox[{2538, 2766, 9695, 2539, 2781, 9708, 2556, 2796, 9720, 
            2571, 2811, 9731, 2586, 2826, 9741, 2601, 2841, 9750, 2616, 2856, 
            9758, 2631, 2871, 9765, 2646, 2886, 9771, 2661, 2901, 9776, 2676, 
            2916, 9780, 2691, 2931, 9783, 2706, 2946, 2721, 9669, 2961, 2736, 
            9682, 2976, 2751}], 
           
           Line3DBox[{2540, 2767, 9696, 2541, 2782, 9709, 2557, 2797, 9721, 
            2572, 2812, 9732, 2587, 2827, 9742, 2602, 2842, 9751, 2617, 2857, 
            9759, 2632, 2872, 9766, 2647, 2887, 9772, 2662, 2902, 9777, 2677, 
            2917, 9781, 2692, 2932, 9784, 2707, 2947, 9786, 2722, 2962, 2737, 
            9683, 2977, 2752}], 
           
           Line3DBox[{2542, 2768, 9697, 2543, 2783, 9710, 2558, 2798, 9722, 
            2573, 2813, 9733, 2588, 2828, 9743, 2603, 2843, 9752, 2618, 2858, 
            9760, 2633, 2873, 9767, 2648, 2888, 9773, 2663, 2903, 9778, 2678, 
            2918, 9782, 2693, 2933, 9785, 2708, 2948, 9787, 2723, 2963, 9788, 
            2738, 2978, 2753}], 
           
           Line3DBox[{2979, 3219, 2980, 9789, 3234, 3009, 9790, 3249, 3024, 
            9792, 3264, 3039, 9795, 3279, 3054, 9799, 3294, 3069, 9804, 3309, 
            3084, 9810, 3324, 3099, 9817, 3339, 3114, 9825, 3354, 3129, 9834, 
            3369, 3144, 9844, 3384, 3159, 9855, 3399, 3174, 9867, 3414, 3189, 
            9880, 3429, 3204}], 
           
           Line3DBox[{2981, 3220, 9894, 2982, 3235, 3010, 9791, 3250, 3025, 
            9793, 3265, 3040, 9796, 3280, 3055, 9800, 3295, 3070, 9805, 3310, 
            3085, 9811, 3325, 3100, 9818, 3340, 3115, 9826, 3355, 3130, 9835, 
            3370, 3145, 9845, 3385, 3160, 9856, 3400, 3175, 9868, 3415, 3190, 
            9881, 3430, 3205}], 
           
           Line3DBox[{2983, 3221, 9895, 2984, 3236, 9908, 3011, 3251, 3026, 
            9794, 3266, 3041, 9797, 3281, 3056, 9801, 3296, 3071, 9806, 3311, 
            3086, 9812, 3326, 3101, 9819, 3341, 3116, 9827, 3356, 3131, 9836, 
            3371, 3146, 9846, 3386, 3161, 9857, 3401, 3176, 9869, 3416, 3191, 
            9882, 3431, 3206}], 
           
           Line3DBox[{2985, 3222, 9896, 2986, 3237, 9909, 3012, 3252, 9921, 
            3027, 3267, 3042, 9798, 3282, 3057, 9802, 3297, 3072, 9807, 3312, 
            3087, 9813, 3327, 3102, 9820, 3342, 3117, 9828, 3357, 3132, 9837, 
            3372, 3147, 9847, 3387, 3162, 9858, 3402, 3177, 9870, 3417, 3192, 
            9883, 3432, 3207}], 
           
           Line3DBox[{2987, 3223, 9897, 2988, 3238, 9910, 3013, 3253, 9922, 
            3028, 3268, 9933, 3043, 3283, 3058, 9803, 3298, 3073, 9808, 3313, 
            3088, 9814, 3328, 3103, 9821, 3343, 3118, 9829, 3358, 3133, 9838, 
            3373, 3148, 9848, 3388, 3163, 9859, 3403, 3178, 9871, 3418, 3193, 
            9884, 3433, 3208}], 
           
           Line3DBox[{2989, 3224, 9898, 2990, 3239, 9911, 3014, 3254, 9923, 
            3029, 3269, 9934, 3044, 3284, 9944, 3059, 3299, 3074, 9809, 3314, 
            3089, 9815, 3329, 3104, 9822, 3344, 3119, 9830, 3359, 3134, 9839, 
            3374, 3149, 9849, 3389, 3164, 9860, 3404, 3179, 9872, 3419, 3194, 
            9885, 3434, 3209}], 
           
           Line3DBox[{2991, 3225, 9899, 2992, 3240, 9912, 3015, 3255, 9924, 
            3030, 3270, 9935, 3045, 3285, 9945, 3060, 3300, 9954, 3075, 3315, 
            3090, 9816, 3330, 3105, 9823, 3345, 3120, 9831, 3360, 3135, 9840, 
            3375, 3150, 9850, 3390, 3165, 9861, 3405, 3180, 9873, 3420, 3195, 
            9886, 3435, 3210}], 
           
           Line3DBox[{2993, 3226, 9900, 2994, 3241, 9913, 3016, 3256, 9925, 
            3031, 3271, 9936, 3046, 3286, 9946, 3061, 3301, 9955, 3076, 3316, 
            9963, 3091, 3331, 3106, 9824, 3346, 3121, 9832, 3361, 3136, 9841, 
            3376, 3151, 9851, 3391, 3166, 9862, 3406, 3181, 9874, 3421, 3196, 
            9887, 3436, 3211}], 
           
           Line3DBox[{2995, 3227, 9901, 2996, 3242, 9914, 3017, 3257, 9926, 
            3032, 3272, 9937, 3047, 3287, 9947, 3062, 3302, 9956, 3077, 3317, 
            9964, 3092, 3332, 9971, 3107, 3347, 3122, 9833, 3362, 3137, 9842, 
            3377, 3152, 9852, 3392, 3167, 9863, 3407, 3182, 9875, 3422, 3197, 
            9888, 3437, 3212}], 
           
           Line3DBox[{2997, 3228, 9902, 2998, 3243, 9915, 3018, 3258, 9927, 
            3033, 3273, 9938, 3048, 3288, 9948, 3063, 3303, 9957, 3078, 3318, 
            9965, 3093, 3333, 9972, 3108, 3348, 9978, 3123, 3363, 3138, 9843, 
            3378, 3153, 9853, 3393, 3168, 9864, 3408, 3183, 9876, 3423, 3198, 
            9889, 3438, 3213}], 
           
           Line3DBox[{2999, 3229, 9903, 3000, 3244, 9916, 3019, 3259, 9928, 
            3034, 3274, 9939, 3049, 3289, 9949, 3064, 3304, 9958, 3079, 3319, 
            9966, 3094, 3334, 9973, 3109, 3349, 9979, 3124, 3364, 9984, 3139, 
            3379, 3154, 9854, 3394, 3169, 9865, 3409, 3184, 9877, 3424, 3199, 
            9890, 3439, 3214}], 
           
           Line3DBox[{3001, 3230, 9904, 3002, 3245, 9917, 3020, 3260, 9929, 
            3035, 3275, 9940, 3050, 3290, 9950, 3065, 3305, 9959, 3080, 3320, 
            9967, 3095, 3335, 9974, 3110, 3350, 9980, 3125, 3365, 9985, 3140, 
            3380, 9989, 3155, 3395, 3170, 9866, 3410, 3185, 9878, 3425, 3200, 
            9891, 3440, 3215}], 
           
           Line3DBox[{3003, 3231, 9905, 3004, 3246, 9918, 3021, 3261, 9930, 
            3036, 3276, 9941, 3051, 3291, 9951, 3066, 3306, 9960, 3081, 3321, 
            9968, 3096, 3336, 9975, 3111, 3351, 9981, 3126, 3366, 9986, 3141, 
            3381, 9990, 3156, 3396, 9993, 3171, 3411, 3186, 9879, 3426, 3201, 
            9892, 3441, 3216}], 
           
           Line3DBox[{3005, 3232, 9906, 3006, 3247, 9919, 3022, 3262, 9931, 
            3037, 3277, 9942, 3052, 3292, 9952, 3067, 3307, 9961, 3082, 3322, 
            9969, 3097, 3337, 9976, 3112, 3352, 9982, 3127, 3367, 9987, 3142, 
            3382, 9991, 3157, 3397, 9994, 3172, 3412, 9996, 3187, 3427, 3202, 
            9893, 3442, 3217}], 
           
           Line3DBox[{3007, 3233, 9907, 3008, 3248, 9920, 3023, 3263, 9932, 
            3038, 3278, 9943, 3053, 3293, 9953, 3068, 3308, 9962, 3083, 3323, 
            9970, 3098, 3338, 9977, 3113, 3353, 9983, 3128, 3368, 9988, 3143, 
            3383, 9992, 3158, 3398, 9995, 3173, 3413, 9997, 3188, 3428, 9998, 
            3203, 3443, 3218}], 
           
           Line3DBox[{3444, 3684, 3445, 9999, 3699, 3474, 10000, 3714, 3489, 
            10002, 3729, 3504, 10005, 3744, 3519, 10009, 3759, 3534, 10014, 
            3774, 3549, 10020, 3789, 3564, 10027, 3804, 3579, 10035, 3819, 
            3594, 10044, 3834, 3609, 10054, 3849, 3624, 10065, 3864, 3639, 
            10077, 3879, 3654, 10090, 3894, 3669}], 
           
           Line3DBox[{3446, 3685, 10104, 3447, 3700, 3475, 10001, 3715, 3490, 
            10003, 3730, 3505, 10006, 3745, 3520, 10010, 3760, 3535, 10015, 
            3775, 3550, 10021, 3790, 3565, 10028, 3805, 3580, 10036, 3820, 
            3595, 10045, 3835, 3610, 10055, 3850, 3625, 10066, 3865, 3640, 
            10078, 3880, 3655, 10091, 3895, 3670}], 
           
           Line3DBox[{3448, 3686, 10105, 3449, 3701, 10118, 3476, 3716, 3491, 
            10004, 3731, 3506, 10007, 3746, 3521, 10011, 3761, 3536, 10016, 
            3776, 3551, 10022, 3791, 3566, 10029, 3806, 3581, 10037, 3821, 
            3596, 10046, 3836, 3611, 10056, 3851, 3626, 10067, 3866, 3641, 
            10079, 3881, 3656, 10092, 3896, 3671}], 
           
           Line3DBox[{3450, 3687, 10106, 3451, 3702, 10119, 3477, 3717, 10131,
             3492, 3732, 3507, 10008, 3747, 3522, 10012, 3762, 3537, 10017, 
            3777, 3552, 10023, 3792, 3567, 10030, 3807, 3582, 10038, 3822, 
            3597, 10047, 3837, 3612, 10057, 3852, 3627, 10068, 3867, 3642, 
            10080, 3882, 3657, 10093, 3897, 3672}], 
           
           Line3DBox[{3452, 3688, 10107, 3453, 3703, 10120, 3478, 3718, 10132,
             3493, 3733, 10143, 3508, 3748, 3523, 10013, 3763, 3538, 10018, 
            3778, 3553, 10024, 3793, 3568, 10031, 3808, 3583, 10039, 3823, 
            3598, 10048, 3838, 3613, 10058, 3853, 3628, 10069, 3868, 3643, 
            10081, 3883, 3658, 10094, 3898, 3673}], 
           
           Line3DBox[{3454, 3689, 10108, 3455, 3704, 10121, 3479, 3719, 10133,
             3494, 3734, 10144, 3509, 3749, 10154, 3524, 3764, 3539, 10019, 
            3779, 3554, 10025, 3794, 3569, 10032, 3809, 3584, 10040, 3824, 
            3599, 10049, 3839, 3614, 10059, 3854, 3629, 10070, 3869, 3644, 
            10082, 3884, 3659, 10095, 3899, 3674}], 
           
           Line3DBox[{3456, 3690, 10109, 3457, 3705, 10122, 3480, 3720, 10134,
             3495, 3735, 10145, 3510, 3750, 10155, 3525, 3765, 10164, 3540, 
            3780, 3555, 10026, 3795, 3570, 10033, 3810, 3585, 10041, 3825, 
            3600, 10050, 3840, 3615, 10060, 3855, 3630, 10071, 3870, 3645, 
            10083, 3885, 3660, 10096, 3900, 3675}], 
           
           Line3DBox[{3458, 3691, 10110, 3459, 3706, 10123, 3481, 3721, 10135,
             3496, 3736, 10146, 3511, 3751, 10156, 3526, 3766, 10165, 3541, 
            3781, 10173, 3556, 3796, 3571, 10034, 3811, 3586, 10042, 3826, 
            3601, 10051, 3841, 3616, 10061, 3856, 3631, 10072, 3871, 3646, 
            10084, 3886, 3661, 10097, 3901, 3676}], 
           
           Line3DBox[{3460, 3692, 10111, 3461, 3707, 10124, 3482, 3722, 10136,
             3497, 3737, 10147, 3512, 3752, 10157, 3527, 3767, 10166, 3542, 
            3782, 10174, 3557, 3797, 10181, 3572, 3812, 3587, 10043, 3827, 
            3602, 10052, 3842, 3617, 10062, 3857, 3632, 10073, 3872, 3647, 
            10085, 3887, 3662, 10098, 3902, 3677}], 
           
           Line3DBox[{3462, 3693, 10112, 3463, 3708, 10125, 3483, 3723, 10137,
             3498, 3738, 10148, 3513, 3753, 10158, 3528, 3768, 10167, 3543, 
            3783, 10175, 3558, 3798, 10182, 3573, 3813, 10188, 3588, 3828, 
            3603, 10053, 3843, 3618, 10063, 3858, 3633, 10074, 3873, 3648, 
            10086, 3888, 3663, 10099, 3903, 3678}], 
           
           Line3DBox[{3464, 3694, 10113, 3465, 3709, 10126, 3484, 3724, 10138,
             3499, 3739, 10149, 3514, 3754, 10159, 3529, 3769, 10168, 3544, 
            3784, 10176, 3559, 3799, 10183, 3574, 3814, 10189, 3589, 3829, 
            10194, 3604, 3844, 3619, 10064, 3859, 3634, 10075, 3874, 3649, 
            10087, 3889, 3664, 10100, 3904, 3679}], 
           
           Line3DBox[{3466, 3695, 10114, 3467, 3710, 10127, 3485, 3725, 10139,
             3500, 3740, 10150, 3515, 3755, 10160, 3530, 3770, 10169, 3545, 
            3785, 10177, 3560, 3800, 10184, 3575, 3815, 10190, 3590, 3830, 
            10195, 3605, 3845, 10199, 3620, 3860, 3635, 10076, 3875, 3650, 
            10088, 3890, 3665, 10101, 3905, 3680}], 
           
           Line3DBox[{3468, 3696, 10115, 3469, 3711, 10128, 3486, 3726, 10140,
             3501, 3741, 10151, 3516, 3756, 10161, 3531, 3771, 10170, 3546, 
            3786, 10178, 3561, 3801, 10185, 3576, 3816, 10191, 3591, 3831, 
            10196, 3606, 3846, 10200, 3621, 3861, 10203, 3636, 3876, 3651, 
            10089, 3891, 3666, 10102, 3906, 3681}], 
           
           Line3DBox[{3470, 3697, 10116, 3471, 3712, 10129, 3487, 3727, 10141,
             3502, 3742, 10152, 3517, 3757, 10162, 3532, 3772, 10171, 3547, 
            3787, 10179, 3562, 3802, 10186, 3577, 3817, 10192, 3592, 3832, 
            10197, 3607, 3847, 10201, 3622, 3862, 10204, 3637, 3877, 10206, 
            3652, 3892, 3667, 10103, 3907, 3682}], 
           
           Line3DBox[{3472, 3698, 10117, 3473, 3713, 10130, 3488, 3728, 10142,
             3503, 3743, 10153, 3518, 3758, 10163, 3533, 3773, 10172, 3548, 
            3788, 10180, 3563, 3803, 10187, 3578, 3818, 10193, 3593, 3833, 
            10198, 3608, 3848, 10202, 3623, 3863, 10205, 3638, 3878, 10207, 
            3653, 3893, 10208, 3668, 3908, 3683}], 
           
           Line3DBox[{3909, 4149, 3910, 10209, 4164, 3939, 10210, 4179, 3954, 
            10212, 4194, 3969, 10215, 4209, 3984, 10219, 4224, 3999, 10224, 
            4239, 4014, 10230, 4254, 4029, 10237, 4269, 4044, 10245, 4284, 
            4059, 10254, 4299, 4074, 10264, 4314, 4089, 10275, 4329, 4104, 
            10287, 4344, 4119, 10300, 4359, 4134}], 
           
           Line3DBox[{3911, 4150, 10314, 3912, 4165, 3940, 10211, 4180, 3955, 
            10213, 4195, 3970, 10216, 4210, 3985, 10220, 4225, 4000, 10225, 
            4240, 4015, 10231, 4255, 4030, 10238, 4270, 4045, 10246, 4285, 
            4060, 10255, 4300, 4075, 10265, 4315, 4090, 10276, 4330, 4105, 
            10288, 4345, 4120, 10301, 4360, 4135}], 
           
           Line3DBox[{3913, 4151, 10315, 3914, 4166, 10328, 3941, 4181, 3956, 
            10214, 4196, 3971, 10217, 4211, 3986, 10221, 4226, 4001, 10226, 
            4241, 4016, 10232, 4256, 4031, 10239, 4271, 4046, 10247, 4286, 
            4061, 10256, 4301, 4076, 10266, 4316, 4091, 10277, 4331, 4106, 
            10289, 4346, 4121, 10302, 4361, 4136}], 
           
           Line3DBox[{3915, 4152, 10316, 3916, 4167, 10329, 3942, 4182, 10341,
             3957, 4197, 3972, 10218, 4212, 3987, 10222, 4227, 4002, 10227, 
            4242, 4017, 10233, 4257, 4032, 10240, 4272, 4047, 10248, 4287, 
            4062, 10257, 4302, 4077, 10267, 4317, 4092, 10278, 4332, 4107, 
            10290, 4347, 4122, 10303, 4362, 4137}], 
           
           Line3DBox[{3917, 4153, 10317, 3918, 4168, 10330, 3943, 4183, 10342,
             3958, 4198, 10353, 3973, 4213, 3988, 10223, 4228, 4003, 10228, 
            4243, 4018, 10234, 4258, 4033, 10241, 4273, 4048, 10249, 4288, 
            4063, 10258, 4303, 4078, 10268, 4318, 4093, 10279, 4333, 4108, 
            10291, 4348, 4123, 10304, 4363, 4138}], 
           
           Line3DBox[{3919, 4154, 10318, 3920, 4169, 10331, 3944, 4184, 10343,
             3959, 4199, 10354, 3974, 4214, 10364, 3989, 4229, 4004, 10229, 
            4244, 4019, 10235, 4259, 4034, 10242, 4274, 4049, 10250, 4289, 
            4064, 10259, 4304, 4079, 10269, 4319, 4094, 10280, 4334, 4109, 
            10292, 4349, 4124, 10305, 4364, 4139}], 
           
           Line3DBox[{3921, 4155, 10319, 3922, 4170, 10332, 3945, 4185, 10344,
             3960, 4200, 10355, 3975, 4215, 10365, 3990, 4230, 10374, 4005, 
            4245, 4020, 10236, 4260, 4035, 10243, 4275, 4050, 10251, 4290, 
            4065, 10260, 4305, 4080, 10270, 4320, 4095, 10281, 4335, 4110, 
            10293, 4350, 4125, 10306, 4365, 4140}], 
           
           Line3DBox[{3923, 4156, 10320, 3924, 4171, 10333, 3946, 4186, 10345,
             3961, 4201, 10356, 3976, 4216, 10366, 3991, 4231, 10375, 4006, 
            4246, 10383, 4021, 4261, 4036, 10244, 4276, 4051, 10252, 4291, 
            4066, 10261, 4306, 4081, 10271, 4321, 4096, 10282, 4336, 4111, 
            10294, 4351, 4126, 10307, 4366, 4141}], 
           
           Line3DBox[{3925, 4157, 10321, 3926, 4172, 10334, 3947, 4187, 10346,
             3962, 4202, 10357, 3977, 4217, 10367, 3992, 4232, 10376, 4007, 
            4247, 10384, 4022, 4262, 10391, 4037, 4277, 4052, 10253, 4292, 
            4067, 10262, 4307, 4082, 10272, 4322, 4097, 10283, 4337, 4112, 
            10295, 4352, 4127, 10308, 4367, 4142}], 
           
           Line3DBox[{3927, 4158, 10322, 3928, 4173, 10335, 3948, 4188, 10347,
             3963, 4203, 10358, 3978, 4218, 10368, 3993, 4233, 10377, 4008, 
            4248, 10385, 4023, 4263, 10392, 4038, 4278, 10398, 4053, 4293, 
            4068, 10263, 4308, 4083, 10273, 4323, 4098, 10284, 4338, 4113, 
            10296, 4353, 4128, 10309, 4368, 4143}], 
           
           Line3DBox[{3929, 4159, 10323, 3930, 4174, 10336, 3949, 4189, 10348,
             3964, 4204, 10359, 3979, 4219, 10369, 3994, 4234, 10378, 4009, 
            4249, 10386, 4024, 4264, 10393, 4039, 4279, 10399, 4054, 4294, 
            10404, 4069, 4309, 4084, 10274, 4324, 4099, 10285, 4339, 4114, 
            10297, 4354, 4129, 10310, 4369, 4144}], 
           
           Line3DBox[{3931, 4160, 10324, 3932, 4175, 10337, 3950, 4190, 10349,
             3965, 4205, 10360, 3980, 4220, 10370, 3995, 4235, 10379, 4010, 
            4250, 10387, 4025, 4265, 10394, 4040, 4280, 10400, 4055, 4295, 
            10405, 4070, 4310, 10409, 4085, 4325, 4100, 10286, 4340, 4115, 
            10298, 4355, 4130, 10311, 4370, 4145}], 
           
           Line3DBox[{3933, 4161, 10325, 3934, 4176, 10338, 3951, 4191, 10350,
             3966, 4206, 10361, 3981, 4221, 10371, 3996, 4236, 10380, 4011, 
            4251, 10388, 4026, 4266, 10395, 4041, 4281, 10401, 4056, 4296, 
            10406, 4071, 4311, 10410, 4086, 4326, 10413, 4101, 4341, 4116, 
            10299, 4356, 4131, 10312, 4371, 4146}], 
           
           Line3DBox[{3935, 4162, 10326, 3936, 4177, 10339, 3952, 4192, 10351,
             3967, 4207, 10362, 3982, 4222, 10372, 3997, 4237, 10381, 4012, 
            4252, 10389, 4027, 4267, 10396, 4042, 4282, 10402, 4057, 4297, 
            10407, 4072, 4312, 10411, 4087, 4327, 10414, 4102, 4342, 10416, 
            4117, 4357, 4132, 10313, 4372, 4147}], 
           
           Line3DBox[{3937, 4163, 10327, 3938, 4178, 10340, 3953, 4193, 10352,
             3968, 4208, 10363, 3983, 4223, 10373, 3998, 4238, 10382, 4013, 
            4253, 10390, 4028, 4268, 10397, 4043, 4283, 10403, 4058, 4298, 
            10408, 4073, 4313, 10412, 4088, 4328, 10415, 4103, 4343, 10417, 
            4118, 4358, 10418, 4133, 4373, 4148}], 
           
           Line3DBox[{4374, 4614, 4375, 10419, 4629, 4404, 10420, 4644, 4419, 
            10422, 4659, 4434, 10425, 4674, 4449, 10429, 4689, 4464, 10434, 
            4704, 4479, 10440, 4719, 4494, 10447, 4734, 4509, 10455, 4749, 
            4524, 10464, 4764, 4539, 10474, 4779, 4554, 10485, 4794, 4569, 
            10497, 4809, 4584, 10510, 4824, 4599}], 
           
           Line3DBox[{4376, 4615, 10524, 4377, 4630, 4405, 10421, 4645, 4420, 
            10423, 4660, 4435, 10426, 4675, 4450, 10430, 4690, 4465, 10435, 
            4705, 4480, 10441, 4720, 4495, 10448, 4735, 4510, 10456, 4750, 
            4525, 10465, 4765, 4540, 10475, 4780, 4555, 10486, 4795, 4570, 
            10498, 4810, 4585, 10511, 4825, 4600}], 
           
           Line3DBox[{4378, 4616, 10525, 4379, 4631, 10538, 4406, 4646, 4421, 
            10424, 4661, 4436, 10427, 4676, 4451, 10431, 4691, 4466, 10436, 
            4706, 4481, 10442, 4721, 4496, 10449, 4736, 4511, 10457, 4751, 
            4526, 10466, 4766, 4541, 10476, 4781, 4556, 10487, 4796, 4571, 
            10499, 4811, 4586, 10512, 4826, 4601}], 
           
           Line3DBox[{4380, 4617, 10526, 4381, 4632, 10539, 4407, 4647, 10551,
             4422, 4662, 4437, 10428, 4677, 4452, 10432, 4692, 4467, 10437, 
            4707, 4482, 10443, 4722, 4497, 10450, 4737, 4512, 10458, 4752, 
            4527, 10467, 4767, 4542, 10477, 4782, 4557, 10488, 4797, 4572, 
            10500, 4812, 4587, 10513, 4827, 4602}], 
           
           Line3DBox[{4382, 4618, 10527, 4383, 4633, 10540, 4408, 4648, 10552,
             4423, 4663, 10563, 4438, 4678, 4453, 10433, 4693, 4468, 10438, 
            4708, 4483, 10444, 4723, 4498, 10451, 4738, 4513, 10459, 4753, 
            4528, 10468, 4768, 4543, 10478, 4783, 4558, 10489, 4798, 4573, 
            10501, 4813, 4588, 10514, 4828, 4603}], 
           
           Line3DBox[{4384, 4619, 10528, 4385, 4634, 10541, 4409, 4649, 10553,
             4424, 4664, 10564, 4439, 4679, 10574, 4454, 4694, 4469, 10439, 
            4709, 4484, 10445, 4724, 4499, 10452, 4739, 4514, 10460, 4754, 
            4529, 10469, 4769, 4544, 10479, 4784, 4559, 10490, 4799, 4574, 
            10502, 4814, 4589, 10515, 4829, 4604}], 
           
           Line3DBox[{4386, 4620, 10529, 4387, 4635, 10542, 4410, 4650, 10554,
             4425, 4665, 10565, 4440, 4680, 10575, 4455, 4695, 10584, 4470, 
            4710, 4485, 10446, 4725, 4500, 10453, 4740, 4515, 10461, 4755, 
            4530, 10470, 4770, 4545, 10480, 4785, 4560, 10491, 4800, 4575, 
            10503, 4815, 4590, 10516, 4830, 4605}], 
           Line3DBox[{4388, 4621, 10530, 4389, 4636, 10543, 4411, 4651, 10555,
             4426, 4666, 10566, 4441, 4681, 10576, 4456, 4696, 10585, 4471, 
            4711, 10593, 4486, 4726, 4501, 10454, 4741, 4516, 10462, 4756, 
            4531, 10471, 4771, 4546, 10481, 4786, 4561, 10492, 4801, 4576, 
            10504, 4816, 4591, 10517, 4831, 4606}], 
           
           Line3DBox[{4390, 4622, 10531, 4391, 4637, 10544, 4412, 4652, 10556,
             4427, 4667, 10567, 4442, 4682, 10577, 4457, 4697, 10586, 4472, 
            4712, 10594, 4487, 4727, 10601, 4502, 4742, 4517, 10463, 4757, 
            4532, 10472, 4772, 4547, 10482, 4787, 4562, 10493, 4802, 4577, 
            10505, 4817, 4592, 10518, 4832, 4607}], 
           
           Line3DBox[{4392, 4623, 10532, 4393, 4638, 10545, 4413, 4653, 10557,
             4428, 4668, 10568, 4443, 4683, 10578, 4458, 4698, 10587, 4473, 
            4713, 10595, 4488, 4728, 10602, 4503, 4743, 10608, 4518, 4758, 
            4533, 10473, 4773, 4548, 10483, 4788, 4563, 10494, 4803, 4578, 
            10506, 4818, 4593, 10519, 4833, 4608}], 
           
           Line3DBox[{4394, 4624, 10533, 4395, 4639, 10546, 4414, 4654, 10558,
             4429, 4669, 10569, 4444, 4684, 10579, 4459, 4699, 10588, 4474, 
            4714, 10596, 4489, 4729, 10603, 4504, 4744, 10609, 4519, 4759, 
            10614, 4534, 4774, 4549, 10484, 4789, 4564, 10495, 4804, 4579, 
            10507, 4819, 4594, 10520, 4834, 4609}], 
           
           Line3DBox[{4396, 4625, 10534, 4397, 4640, 10547, 4415, 4655, 10559,
             4430, 4670, 10570, 4445, 4685, 10580, 4460, 4700, 10589, 4475, 
            4715, 10597, 4490, 4730, 10604, 4505, 4745, 10610, 4520, 4760, 
            10615, 4535, 4775, 10619, 4550, 4790, 4565, 10496, 4805, 4580, 
            10508, 4820, 4595, 10521, 4835, 4610}], 
           
           Line3DBox[{4398, 4626, 10535, 4399, 4641, 10548, 4416, 4656, 10560,
             4431, 4671, 10571, 4446, 4686, 10581, 4461, 4701, 10590, 4476, 
            4716, 10598, 4491, 4731, 10605, 4506, 4746, 10611, 4521, 4761, 
            10616, 4536, 4776, 10620, 4551, 4791, 10623, 4566, 4806, 4581, 
            10509, 4821, 4596, 10522, 4836, 4611}], 
           
           Line3DBox[{4400, 4627, 10536, 4401, 4642, 10549, 4417, 4657, 10561,
             4432, 4672, 10572, 4447, 4687, 10582, 4462, 4702, 10591, 4477, 
            4717, 10599, 4492, 4732, 10606, 4507, 4747, 10612, 4522, 4762, 
            10617, 4537, 4777, 10621, 4552, 4792, 10624, 4567, 4807, 10626, 
            4582, 4822, 4597, 10523, 4837, 4612}], 
           
           Line3DBox[{4402, 4628, 10537, 4403, 4643, 10550, 4418, 4658, 10562,
             4433, 4673, 10573, 4448, 4688, 10583, 4463, 4703, 10592, 4478, 
            4718, 10600, 4493, 4733, 10607, 4508, 4748, 10613, 4523, 4763, 
            10618, 4538, 4778, 10622, 4553, 4793, 10625, 4568, 4808, 10627, 
            4583, 4823, 10628, 4598, 4838, 4613}], 
           
           Line3DBox[{4839, 5079, 4840, 10629, 5094, 4869, 10630, 5109, 4884, 
            10632, 5124, 4899, 10635, 5139, 4914, 10639, 5154, 4929, 10644, 
            5169, 4944, 10650, 5184, 4959, 10657, 5199, 4974, 10665, 5214, 
            4989, 10674, 5229, 5004, 10684, 5244, 5019, 10695, 5259, 5034, 
            10707, 5274, 5049, 10720, 5289, 5064}], 
           
           Line3DBox[{4841, 5080, 10734, 4842, 5095, 4870, 10631, 5110, 4885, 
            10633, 5125, 4900, 10636, 5140, 4915, 10640, 5155, 4930, 10645, 
            5170, 4945, 10651, 5185, 4960, 10658, 5200, 4975, 10666, 5215, 
            4990, 10675, 5230, 5005, 10685, 5245, 5020, 10696, 5260, 5035, 
            10708, 5275, 5050, 10721, 5290, 5065}], 
           
           Line3DBox[{4843, 5081, 10735, 4844, 5096, 10748, 4871, 5111, 4886, 
            10634, 5126, 4901, 10637, 5141, 4916, 10641, 5156, 4931, 10646, 
            5171, 4946, 10652, 5186, 4961, 10659, 5201, 4976, 10667, 5216, 
            4991, 10676, 5231, 5006, 10686, 5246, 5021, 10697, 5261, 5036, 
            10709, 5276, 5051, 10722, 5291, 5066}], 
           
           Line3DBox[{4845, 5082, 10736, 4846, 5097, 10749, 4872, 5112, 10761,
             4887, 5127, 4902, 10638, 5142, 4917, 10642, 5157, 4932, 10647, 
            5172, 4947, 10653, 5187, 4962, 10660, 5202, 4977, 10668, 5217, 
            4992, 10677, 5232, 5007, 10687, 5247, 5022, 10698, 5262, 5037, 
            10710, 5277, 5052, 10723, 5292, 5067}], 
           
           Line3DBox[{4847, 5083, 10737, 4848, 5098, 10750, 4873, 5113, 10762,
             4888, 5128, 10773, 4903, 5143, 4918, 10643, 5158, 4933, 10648, 
            5173, 4948, 10654, 5188, 4963, 10661, 5203, 4978, 10669, 5218, 
            4993, 10678, 5233, 5008, 10688, 5248, 5023, 10699, 5263, 5038, 
            10711, 5278, 5053, 10724, 5293, 5068}], 
           
           Line3DBox[{4849, 5084, 10738, 4850, 5099, 10751, 4874, 5114, 10763,
             4889, 5129, 10774, 4904, 5144, 10784, 4919, 5159, 4934, 10649, 
            5174, 4949, 10655, 5189, 4964, 10662, 5204, 4979, 10670, 5219, 
            4994, 10679, 5234, 5009, 10689, 5249, 5024, 10700, 5264, 5039, 
            10712, 5279, 5054, 10725, 5294, 5069}], 
           
           Line3DBox[{4851, 5085, 10739, 4852, 5100, 10752, 4875, 5115, 10764,
             4890, 5130, 10775, 4905, 5145, 10785, 4920, 5160, 10794, 4935, 
            5175, 4950, 10656, 5190, 4965, 10663, 5205, 4980, 10671, 5220, 
            4995, 10680, 5235, 5010, 10690, 5250, 5025, 10701, 5265, 5040, 
            10713, 5280, 5055, 10726, 5295, 5070}], 
           
           Line3DBox[{4853, 5086, 10740, 4854, 5101, 10753, 4876, 5116, 10765,
             4891, 5131, 10776, 4906, 5146, 10786, 4921, 5161, 10795, 4936, 
            5176, 10803, 4951, 5191, 4966, 10664, 5206, 4981, 10672, 5221, 
            4996, 10681, 5236, 5011, 10691, 5251, 5026, 10702, 5266, 5041, 
            10714, 5281, 5056, 10727, 5296, 5071}], 
           
           Line3DBox[{4855, 5087, 10741, 4856, 5102, 10754, 4877, 5117, 10766,
             4892, 5132, 10777, 4907, 5147, 10787, 4922, 5162, 10796, 4937, 
            5177, 10804, 4952, 5192, 10811, 4967, 5207, 4982, 10673, 5222, 
            4997, 10682, 5237, 5012, 10692, 5252, 5027, 10703, 5267, 5042, 
            10715, 5282, 5057, 10728, 5297, 5072}], 
           
           Line3DBox[{4857, 5088, 10742, 4858, 5103, 10755, 4878, 5118, 10767,
             4893, 5133, 10778, 4908, 5148, 10788, 4923, 5163, 10797, 4938, 
            5178, 10805, 4953, 5193, 10812, 4968, 5208, 10818, 4983, 5223, 
            4998, 10683, 5238, 5013, 10693, 5253, 5028, 10704, 5268, 5043, 
            10716, 5283, 5058, 10729, 5298, 5073}], 
           
           Line3DBox[{4859, 5089, 10743, 4860, 5104, 10756, 4879, 5119, 10768,
             4894, 5134, 10779, 4909, 5149, 10789, 4924, 5164, 10798, 4939, 
            5179, 10806, 4954, 5194, 10813, 4969, 5209, 10819, 4984, 5224, 
            10824, 4999, 5239, 5014, 10694, 5254, 5029, 10705, 5269, 5044, 
            10717, 5284, 5059, 10730, 5299, 5074}], 
           
           Line3DBox[{4861, 5090, 10744, 4862, 5105, 10757, 4880, 5120, 10769,
             4895, 5135, 10780, 4910, 5150, 10790, 4925, 5165, 10799, 4940, 
            5180, 10807, 4955, 5195, 10814, 4970, 5210, 10820, 4985, 5225, 
            10825, 5000, 5240, 10829, 5015, 5255, 5030, 10706, 5270, 5045, 
            10718, 5285, 5060, 10731, 5300, 5075}], 
           
           Line3DBox[{4863, 5091, 10745, 4864, 5106, 10758, 4881, 5121, 10770,
             4896, 5136, 10781, 4911, 5151, 10791, 4926, 5166, 10800, 4941, 
            5181, 10808, 4956, 5196, 10815, 4971, 5211, 10821, 4986, 5226, 
            10826, 5001, 5241, 10830, 5016, 5256, 10833, 5031, 5271, 5046, 
            10719, 5286, 5061, 10732, 5301, 5076}], 
           
           Line3DBox[{4865, 5092, 10746, 4866, 5107, 10759, 4882, 5122, 10771,
             4897, 5137, 10782, 4912, 5152, 10792, 4927, 5167, 10801, 4942, 
            5182, 10809, 4957, 5197, 10816, 4972, 5212, 10822, 4987, 5227, 
            10827, 5002, 5242, 10831, 5017, 5257, 10834, 5032, 5272, 10836, 
            5047, 5287, 5062, 10733, 5302, 5077}], 
           
           Line3DBox[{4867, 5093, 10747, 4868, 5108, 10760, 4883, 5123, 10772,
             4898, 5138, 10783, 4913, 5153, 10793, 4928, 5168, 10802, 4943, 
            5183, 10810, 4958, 5198, 10817, 4973, 5213, 10823, 4988, 5228, 
            10828, 5003, 5243, 10832, 5018, 5258, 10835, 5033, 5273, 10837, 
            5048, 5288, 10838, 5063, 5303, 5078}], 
           
           Line3DBox[{5304, 5544, 5305, 10839, 5559, 5334, 10840, 5574, 5349, 
            10842, 5589, 5364, 10845, 5604, 5379, 10849, 5619, 5394, 10854, 
            5634, 5409, 10860, 5649, 5424, 10867, 5664, 5439, 10875, 5679, 
            5454, 10884, 5694, 5469, 10894, 5709, 5484, 10905, 5724, 5499, 
            10917, 5739, 5514, 10930, 5754, 5529}], 
           
           Line3DBox[{5306, 5545, 10944, 5307, 5560, 5335, 10841, 5575, 5350, 
            10843, 5590, 5365, 10846, 5605, 5380, 10850, 5620, 5395, 10855, 
            5635, 5410, 10861, 5650, 5425, 10868, 5665, 5440, 10876, 5680, 
            5455, 10885, 5695, 5470, 10895, 5710, 5485, 10906, 5725, 5500, 
            10918, 5740, 5515, 10931, 5755, 5530}], 
           
           Line3DBox[{5308, 5546, 10945, 5309, 5561, 10958, 5336, 5576, 5351, 
            10844, 5591, 5366, 10847, 5606, 5381, 10851, 5621, 5396, 10856, 
            5636, 5411, 10862, 5651, 5426, 10869, 5666, 5441, 10877, 5681, 
            5456, 10886, 5696, 5471, 10896, 5711, 5486, 10907, 5726, 5501, 
            10919, 5741, 5516, 10932, 5756, 5531}], 
           
           Line3DBox[{5310, 5547, 10946, 5311, 5562, 10959, 5337, 5577, 10971,
             5352, 5592, 5367, 10848, 5607, 5382, 10852, 5622, 5397, 10857, 
            5637, 5412, 10863, 5652, 5427, 10870, 5667, 5442, 10878, 5682, 
            5457, 10887, 5697, 5472, 10897, 5712, 5487, 10908, 5727, 5502, 
            10920, 5742, 5517, 10933, 5757, 5532}], 
           
           Line3DBox[{5312, 5548, 10947, 5313, 5563, 10960, 5338, 5578, 10972,
             5353, 5593, 10983, 5368, 5608, 5383, 10853, 5623, 5398, 10858, 
            5638, 5413, 10864, 5653, 5428, 10871, 5668, 5443, 10879, 5683, 
            5458, 10888, 5698, 5473, 10898, 5713, 5488, 10909, 5728, 5503, 
            10921, 5743, 5518, 10934, 5758, 5533}], 
           
           Line3DBox[{5314, 5549, 10948, 5315, 5564, 10961, 5339, 5579, 10973,
             5354, 5594, 10984, 5369, 5609, 10994, 5384, 5624, 5399, 10859, 
            5639, 5414, 10865, 5654, 5429, 10872, 5669, 5444, 10880, 5684, 
            5459, 10889, 5699, 5474, 10899, 5714, 5489, 10910, 5729, 5504, 
            10922, 5744, 5519, 10935, 5759, 5534}], 
           
           Line3DBox[{5316, 5550, 10949, 5317, 5565, 10962, 5340, 5580, 10974,
             5355, 5595, 10985, 5370, 5610, 10995, 5385, 5625, 11004, 5400, 
            5640, 5415, 10866, 5655, 5430, 10873, 5670, 5445, 10881, 5685, 
            5460, 10890, 5700, 5475, 10900, 5715, 5490, 10911, 5730, 5505, 
            10923, 5745, 5520, 10936, 5760, 5535}], 
           
           Line3DBox[{5318, 5551, 10950, 5319, 5566, 10963, 5341, 5581, 10975,
             5356, 5596, 10986, 5371, 5611, 10996, 5386, 5626, 11005, 5401, 
            5641, 11013, 5416, 5656, 5431, 10874, 5671, 5446, 10882, 5686, 
            5461, 10891, 5701, 5476, 10901, 5716, 5491, 10912, 5731, 5506, 
            10924, 5746, 5521, 10937, 5761, 5536}], 
           
           Line3DBox[{5320, 5552, 10951, 5321, 5567, 10964, 5342, 5582, 10976,
             5357, 5597, 10987, 5372, 5612, 10997, 5387, 5627, 11006, 5402, 
            5642, 11014, 5417, 5657, 11021, 5432, 5672, 5447, 10883, 5687, 
            5462, 10892, 5702, 5477, 10902, 5717, 5492, 10913, 5732, 5507, 
            10925, 5747, 5522, 10938, 5762, 5537}], 
           
           Line3DBox[{5322, 5553, 10952, 5323, 5568, 10965, 5343, 5583, 10977,
             5358, 5598, 10988, 5373, 5613, 10998, 5388, 5628, 11007, 5403, 
            5643, 11015, 5418, 5658, 11022, 5433, 5673, 11028, 5448, 5688, 
            5463, 10893, 5703, 5478, 10903, 5718, 5493, 10914, 5733, 5508, 
            10926, 5748, 5523, 10939, 5763, 5538}], 
           
           Line3DBox[{5324, 5554, 10953, 5325, 5569, 10966, 5344, 5584, 10978,
             5359, 5599, 10989, 5374, 5614, 10999, 5389, 5629, 11008, 5404, 
            5644, 11016, 5419, 5659, 11023, 5434, 5674, 11029, 5449, 5689, 
            11034, 5464, 5704, 5479, 10904, 5719, 5494, 10915, 5734, 5509, 
            10927, 5749, 5524, 10940, 5764, 5539}], 
           
           Line3DBox[{5326, 5555, 10954, 5327, 5570, 10967, 5345, 5585, 10979,
             5360, 5600, 10990, 5375, 5615, 11000, 5390, 5630, 11009, 5405, 
            5645, 11017, 5420, 5660, 11024, 5435, 5675, 11030, 5450, 5690, 
            11035, 5465, 5705, 11039, 5480, 5720, 5495, 10916, 5735, 5510, 
            10928, 5750, 5525, 10941, 5765, 5540}], 
           
           Line3DBox[{5328, 5556, 10955, 5329, 5571, 10968, 5346, 5586, 10980,
             5361, 5601, 10991, 5376, 5616, 11001, 5391, 5631, 11010, 5406, 
            5646, 11018, 5421, 5661, 11025, 5436, 5676, 11031, 5451, 5691, 
            11036, 5466, 5706, 11040, 5481, 5721, 11043, 5496, 5736, 5511, 
            10929, 5751, 5526, 10942, 5766, 5541}], 
           
           Line3DBox[{5330, 5557, 10956, 5331, 5572, 10969, 5347, 5587, 10981,
             5362, 5602, 10992, 5377, 5617, 11002, 5392, 5632, 11011, 5407, 
            5647, 11019, 5422, 5662, 11026, 5437, 5677, 11032, 5452, 5692, 
            11037, 5467, 5707, 11041, 5482, 5722, 11044, 5497, 5737, 11046, 
            5512, 5752, 5527, 10943, 5767, 5542}], 
           
           Line3DBox[{5332, 5558, 10957, 5333, 5573, 10970, 5348, 5588, 10982,
             5363, 5603, 10993, 5378, 5618, 11003, 5393, 5633, 11012, 5408, 
            5648, 11020, 5423, 5663, 11027, 5438, 5678, 11033, 5453, 5693, 
            11038, 5468, 5708, 11042, 5483, 5723, 11045, 5498, 5738, 11047, 
            5513, 5753, 11048, 5528, 5768, 
            5543}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, VertexNormals -> CompressedData["
1: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
9mmJTkv2C6uF+4dE1yX7WIbCfS2iA5P9FbLfQnRjovuTfQCiMxM9Ok2oT28R
6tLC54FENyXPheh3RM8j44XoSkRnIjhG9A6ifxDdo7vhP9n/jhPuh5N9cLIv
S/Zpyb6GcB8E5YT7h2QfhOxjkX0tsm9C9lfIfgvZZ1ku1P3JPgB5LkSPJvo0
GS9EJyW6KcEx4byCRM8j8wvRlYjOROb97ob/f5o/C58HeT5d+1lkf4Xst0gK
x0t3i7+n83/hOOnaPyTjhexjDRXua2kKcay7xd/T+T/ZlyX7tATHhPNK1/4h
mV+6W/w9nf+T/W/hPANkfiH7smSflsz73S3+ns7/e3r/PZ3/9/T+qfK/1//4
00z5vKj2Ef5e/7+/nkrnp6oL6Cl1DT3leqo6F6q6GKo6mnhh3c1TYd3NAmHd
DVWdjkgdYFc94H+tf6p5lup5PRb+fbxonRpF3RllnRpFXdt/rX+qeZYq/6nq
KKnqLkXrNOcJ6zSp6jqp6kDJ+BTWjXbNa1R1pskidakSwrrU7hb/7+Y/qQMU
qQuERIq647HC+CJE6pTjhfXM6cKWLaxrpqqDpqqbpqqzVhXWZdsI67LfCeuy
u1v8v5v/v4tvVHX6VHX9v9s/8RkYI+IzQHwJiK8J8TPpbvH/afyn4rFUvha/
2z/xMenyNRH6bIj6cjgIfTm6W/x/Gv+pfFqofF3GiPjAkHym8o2h8pkR9aV5
J/SlofKxIb43U0R8b6h8cqh8dbob/lP5FFH5Gon6IBE/E0cK3yRyf8tFfJaI
H5OHiC8T8XHaI+LjRHyf+ov4PhFfuZdCn6hyoU8U8ZVaKeIr1d3w/0/zZyqf
MWsKX7LuFn9P5/9UPntUvnzdLf6ezv8JLhOcJvj8ksKXsrvF39P5P5XPKsHl
6SK+rN0t/p7O/3t6/z2d//f0/v9tn0XUF727+bf09OupdH7h7yJtl/5P8AlE
9O2uVkQP/3s9xfUkr0XyvevvSX8i+N/ViuAbCPENRPgz4R0gwp+JLyCI8Of/
TP9U+2JUz0uIb139ieBbVyvCnwm/QxH+THgHiPDn/0z/VPVKVPlP8oDkhQh/
RhKvCH/uakX4M/HRRBH+THgHUvDnLt9Ioa5EdCYQ0f+J/gEi+n+3if9385/w
ZSF/BhH+DEL+DCL8GYX8GUT4Mwj5M4jwZ8LvUIQ/E96BIvo/0fNQRP8Hof4P
Ivp/t4n/d/P/d/GN5AHJCxH+3BWfCH/+P+5fqJMS3RRE9H+i54GI/t9t4v/T
+P8v/BlJXojw5//j/oV6NNGnUUT/J37zIKL/d5v4/zT+E1wmOC2i/yPBDxH9
vyuvRfR/JPdbRP/vakX0f6JPo4j+T3RTFNH/Uaj/o4j+T3QmFNH/Uah/oIj+
323wn8x/Qv0fRPR/EOr/IKL/d+GHiP7fldci+j+S+y2i/6NQ/0cR/Z+cm4Ei
+j/RTVFE/yd6Horo/0RnQhH9v9vg/5/mzySPSV6L6P9I7reI/t9t4u/p/F+o
/yPBDxH9H4X6P4jo/90m/p7O/wkuE5wW0f+R4IeI/t9t4u/p/J/Mf2Q+FNH/
Uaj/g4j+323i7+n8v6f339P5f0/vnyr/yScRPVRE/+/279X3lOupdH4qX6Ce
4mvUU66n8rmieo6kfobU04jUN3XVOYnUz/7Dp4vK1+u/1j/Vvti/4ZKwvqmL
R5F6M1HfuSkiPnUi9bP/8LX7r/VP5XNIlf+k3myliI8ile8iqc8cKuLTKOrr
KFI/+w8fSCrfSFL/Ly3iM0l8GYT+PyDi/9Nt4v/d/Cd1gJdFfESF9bPEFxZE
6mf/4VMqTuFrSuWDSur/xUR8U4kvQ5OIzyqVL2t3i/938/938U1YP4ueIj69
Ryh8fX+3fyqfYSpf4u4W/5/Gfy8Kn+qVFL7Wv9s/lc828ZeREPHl7m7x/2n8
J/X/60R82okvQ7WIrzvxgTcU8YGn8o2n8pknvvRC/x8U8f/5h4/9RArfeyqf
fCpf/e6G/8SXQej/AyL+P/8414D4mMiJnINA/GVeiJybIPT/wRiRcxaWU5zL
sJfiHAeqcx9Ez4kQ8f/p8v8T8f/pNvj/p/kz1TkjoueSiPj/dJv4ezr/Jz5Z
xDdLxP8Hhf4/SOH/8/97/D2d/1OdM1VNcS5Vd4u/p/P/9xTnrK2nOJetu8Xf
0/l/T++/p/P/nt4/Vf73+h9/mimfV3d7r76nXP+7/v/dbf+ip19PledUvljk
/AxRHy2qcWdK4dN1mcLX67/WP1X9EdXzIueakHNORM43QXL+jMj5Wf/wqSM8
46KIr91/rX8qXKLKf7IO7C3io0jluyhJ4dNI5etIeIapiA8kmf8uiPhGrqPw
mYyn8KXsbvH/bv5T+YhS+Y6K+pSKnJ+Fw0V8Tal8UAnPMBXxTa2i8Fml8mXt
bvH/bv7/Lr5R+fQqifj6ipyf9X/cP/EZJrqpyPm/IDz/F0TO/+028f9p/Kfy
qe5N4Wv9u/2L+myLnP/7D1/u7hb/n8Z/4fm/WCji0y7q6y5y/u8/fOD3UPjG
L6PwmSd6dKyIL73w/F98KeJjT/Q7WRHfeyqffOH5v0j0D5Hzf7sN/lOdU0B1
roE8xTkI4hTnJpBzFsh+i8j5v/84l4HqHAdy7oOByLkPRL+rEjknguhK60XO
lehu+P+n+TPZxxIXOWeE6lyS7hZ/T+f/VOfsUJ3L093i7+n8n+qcKbJf2Cxy
LlV3i7+n83+y/032w0XO/8VhIueydbf4ezr/7+n993T+39P7p8p/qnNRe8q5
rj3l+n/x//9HXUBP0dV7yvUEl0TrXKj2H6nqaEKFdTcoWndDUafT63/8af7P
9U9V50X1vOKEfx8i7I/0Q1V3RlWnRlXX9l/rn6rOkSr/qeooqeouk4X1maTl
COs0Sd3sK5G6ziSKOlBSXy5ad24krDNVFqkzpapL7W7x/27+k5Em6iNKVXdM
VacsWtesKaxrpqqDpqqbjqCosyZ12QuFddlSwrrs7hb/7+b/b+MnRZ0+ZV3/
b/ZP5TNA5UvQ3eL/0/gvWmdOWipfi9/tfw+FzwaVL0d3i/9P4z/BZWMRn5Zg
IV6EC/GD4Abxgekr4gND7u9uEd+Ym0J/GT8RnxniS1Mh4ktzksLHRtT3hvhl
UfnkUPnqdDf8p/IpovI1IngxWcQHico3SdRnidxnKl8mKh+nsSK+TweFvk9U
PlFUvlLdDv//MH8W9Rkj+awqvL+3hPdbVXifu1v8PZ3/E7xQEeIH8csieTxW
xJevu8Xf0/n/LCEuE5wm+EzlS9nd4u/p/D9FxGeVzINUvqzdLf6ezv97ev89
nf/39P6p8p/KF72n+Lr3lOupdH75VlSrzUsBm4V3F8+KrEHcs2nsxVMCiLG8
vWqZWBHKekv091LPR6uiMTaSUzrnhfLInR8NM3FSoPasJoNCbLfuWHjwXQMs
mmpQqyAWhQ362rlyNgxMfKXbZ3QHH4YqT527ZmEcfMgeu3FUUhUWm0lFx66o
hx9rlPcbVcaDpO+IGWZT6Hhn+nkVx6A68LRQ1XlwNxGXy0U7H9AsxhPXOtoq
0xsgymuYnLtTCDDTT/jt7B+Pt/p29IoLa4JJKd+Ut8S+gIFPxAyzV1XinmFF
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
02+EO67PTvtzp3240347sdfnxN4/Z1u12yesyjmsO3Zr8P3AfdJuod/+lVPj
MODrzuEp8wSgWK7yB6X9JTlaY6n3k5dRaPHqmc+lBzfRLOnoUatvBMoX3+a6
5dEt8sP++W/2z0varClVZdItLE46zrX549MytnSGPwq8jkWeDp+3aeEViE+6
zpwwLN0DKXIp2ZBXi8Mwq3juw+fTXMf9Np6TM38aJlN+3NMyICT0w/75b/bP
K87lPJ4xY1uJdHv7SbJLp3Gl5fv3C3+Jw8mqU4d1Sn0f6VdmcD0dcVUuRu2f
s6hkDLpViEvWs9EmCah06Mm7lMHyoMKQlecORH7YP//N/nlThtiK7/vskQy/
pXXLHn5JxroUr3byyzisq9RqeuPG91H44rkW36X2k42vL8nEdJFYvKnanEOB
24HX+bs8/CZEwkYO25JtRcSH/fPf7J87ef2YrlPB06LPA1HP62cdHId3PtFt
g84exrkpgUVWVvGUXP4RKevsfIQD29d8NPzMftwa0shj2otA+SVqa5FtXaP+
cftnl/TZcKq3h+SukzPltNre0u8P2dnga+e+MKdeMMf+L4eeL6c+L6feLqd+
LqceLqe+LadeLaf+LKeeLKc+rPzPpOJDjwsYXGt93XIH/UW+6Zpn3oRoxx43
7X1rbfW+OfXE9bF65c6yV86ph24we+seWL11Tj130ezFK8dePA/24jn16Gnv
3lOrd097+r6zevqcev2cegC1NzCr1Rvo1DOovYS72Ev4mL2ETj2G2nuY1+o9
dOpJvMFexWpWr6JTD2M99ja6W72NTj2PB9gLOdnqhXTqkfyDvZO92DtZj72T
2lNZwuqpzOrQa+nUg6m9mb9avZmZHHo2Bzr0ch5jf6c+C7HH06n306kntB57
RS+wVzQ1e0WdekiHsrc02uotdeo5XW31or5lL6pTj6pT76pTT+sd9rpGsNd1
DHtdnXpga7A39hJ7Y3OxN7aJQ89sOYde2p0OPbZOvbdOPbnaq1vE6tWNZA/v
fKuH18fq7U3B3l6nnt+VDr3A2h/szecf7BF26h2u6tBTfMhh3sepB1l7k4da
vclOPcslrV7mMexl1v7mR1aP83v2Pntavc++Dj3R2ivtavVK77R6qHOwh7oD
e6snsrd6CXurnXquWzr0Yi9nf/Zqq0fb7t1+xd5tp57uf3d91t7wplZvuFPP
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
TJKhcRvjPuyf/2b/PKfvuxETd/+Ikf3qTRu2MlBe3KxSpejhKNzZ2XV/9RIP
pGv5tOfbzLkqAXv3TH8YFo1cYT9N8sp7Ql6s+H7gyNIZ5Gq6077+V5zX5w/7
Z7M+P3v9utqLFZMQ8cN+3+BLgXK9ZpIW71dGYVLAkvozjpyWknkHDtv2yUMJ
O9Ymx9UV0ZDMT7eMX3FSUqQKXuorZ+Xrj3s0GdM77h+3f57uPVl6pbuCLr4/
rlnz4oF8V6Ta8OCL0Uhy93++D9bp/lhXh/tmizncT+t0n6043H9bwOG+3EiH
+3Wd7uPt5XB/b0eH+35zOtwP3JL3Cd+z7hOu+kn7rpfL35BjRQ6/rH7EU95V
ue536UYstL9tAfvcUrDHzWPwkJu3qgUi8/vH8+a2fSgVkpf2zfM0FK9HpXbr
0DAYbike3V+YyUcWzNj5a8zVMAw5WKetW7ZQtEjhs6bKwS1S7UCjcxPSRED7
55Kzj0576BaNXnT5UaFgFLl3v9+bO/HrwWfTP5lfNRR3fL3zFPo4CAV8/T7q
2uqWVC449OLS1vHrcEtvz42lw3Dx2euii345I+8mFDgevSIM2p+nfXraozdg
0sbzZeP3CR73Cy+t/uk9mXexf3DrziEYFlIusPtvAQhaGtdz/lBPuZUs06mc
ByOR53n1o/ufhAGlBy6pvvemDGlSeZOnTwi0/0/7ALUHMOfs/E0urgvDZzmO
ZjvYx0e6F2kyP2+vYLiyX1D7BrVnkD2PWGvNrWh/ofYZWj28YA+vWD28YA+v
WD28YA8vrB7ehD5G7WEccnPhbx/VDUHsyMF3x7QIkK5NiiZZvS0Iy2pEn0rf
OQzjTs/N1eSZp3QvmCbZ7sz/9edy4r77eB8Uz+yOMs83YnqJa5UrSUIPb0Kf
pNXDC/bwitXDC/bwitXDC/bwwurhTejDtHoewZ5HsXp4wR5eWD28wh5eWD28
YA+vWD28YA+vWD28YA+vWD28wh5e0R7eV88unt+R3h9d9m1Pl8HDV6Ytupe5
Qe9IlN27+aDLwghc6TV8SLpSV8XrQpsvh3cOxhKXn/O0nh8E976Fr56p2Ema
vhvU0cUlSnt4hT28sHp4wR5esXp4wR5esXp4wR5esXp4hT28YvXwgj28YvXw
gj28sHp4wR5eWD28wh5eWD28CX22Vg8v2MMrVg8v2MMr2sPbR1r+eu3iA5RO
86b64qbBUmDytcsROUKxZsfwycdnR6CP5/ZX9+I/B80+ffaTJcFB6DXfpXf/
G/E/54uvp8p36QAuLrie6UGzMO3hBXt4YfXwCnt4YfXwgj28YvXwgj28YvXw
gj28YvXwCnt4xerhTehDtnp4wR5esXp4hT28YvXwCnt4YfXwJvQ5Wz28YA+v
aA9vzYi2i+d2CUa3tVWLTO3vL2f9W1VMPzwE6cKu5UnpE4lPbuz5Ld/YSzJw
YP23He4HAvcPHRp2KgSdPPZ/u3nrKTnd9Ou7FZJEaA8v2MMrVg8v2MMLq4dX
2MMLq4c3oU/b6uEFe3jF6uEFe3jF6uH9f16f2cML9vCK1cMr7OEVq4dX2MML
q4f3T+vz8ZqP5uZbGIoVv82I2/rTQxkwM2WG+/MDUa3Qz7+6d4z/nJSm6a4z
629I08auDVxfBKJb/utD5IE/Lpb4KvMnQ/eh6NaUVRo/jnZcn9nDC/bwitXD
K+zhFauHV9jDC6uHN9HWZ/caRTtlzHcdUf1/nxq30gvxHzC+ORG/3+u2K3X3
9f1OydkXzQPrhXqjbKPMi7MUfQS/SwHF+v56BAOq7LzYZK0nsngcTDptxSNU
OX618LLYw7Jg9ZyA/FvvYtbizvN9S8Ri8OwbzVqUv4fJRSf+0qL8cVlRq3rn
Qm9isPJxgY1T84bDbUp4Ue9sQfJZo3JfvZl7F1f6NP0kX99g+L1f+qhIjQDp
4tm+RvSaYMzvX2xA0pHbZahLnpxeo26JW/krn2dqHL/vbVVl6JpxJ/DJ3fFv
I9MHSqEN155f9o7Cbx7la544vFcOle8RHVMiTH6K67De9U0YBq/dlmT3uDPy
edNTHcql9ZU837TfMbRZbKKvz1XmPPKsPy8QJdtVf9R/6X3kWr26/fhHYagp
Tbt29fJFjhmFXTbEf/682TmPz+XlEViRfPrZ/tH30TEoj8/VnYGoPmpm25vH
w7Dp1rMrR5Pfwe9HAork2ReIJi6vS25pHIG9GUcWnT3ugXSetc+t09sQbPry
xaBrU4PRs+CRXyt18dKnFH5e8fQtxOL1xek5XUcEwTf/86Rf3AuTGaePLLrc
5y7euWb4ZtOEq/h+kGuqAvsjxe3bFVEPLgViaf0NbwrHf58/vr2xP/pIpDx4
/7XH+qAgVOg06/t5hy4jqN7j5GNaRkqWdqUrZpgchHbHosfI8vno8LLahfxN
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
3lXUuz41PlZ6GR8rVeljE3t9zmw8MOiBoR44l/HDQj8M9cORxhuD3hjqjacY
nyz0yVCffMt4ZqFnRnZ65t3GP8t7j3/5Z1yhfw42XlropUW9dEfjq0FfLeqr
6bGFHlvUYz83fhv026J+m95b6L2lOL13Yq/PTp8vnD5HOH1ecFqf6fNlivH5
UJ9Pzy/0/FDPT/8v9P9Q/++0Pjvtz5324U777cRenxN7/8x5E+G8iei8CedT
ZKmZT4HOp3CeRVKbeRboPMuH/fNf75/7mvkp+dHMT0HnpzhvJZy3gs5bcT5L
OJ8Fnc/6sH/+6/0z5wFlrpkHFJ0H5PygcH4Qxzg/eMjMGwrnDTGK84Yf9s9/
vX/mfKscMPOt0PnWIDMPK2LmYaHzsG/N/KwMMvOzCNT52Q/757/cP3N+XJ6Y
+XHo/LiPmUMXzqFD59A5zy6cZ4fOs//T9s+cBxfOg0PnwTlXLpwrh86Vcz5d
OJ8OnU/nnLvsM3Pu0Dl3zssL5+Wh8/KcuxfO3UPn7jm/L5zfh87v8x4A4T0A
0HsAeJ+A8D4B6H0CvJdAeC8BXHkvAe83EN5vAL3fgPckCO9JgN6TwPsWhPct
QO9b4L0NMsPc2wC9t4H3Pwjvf8BT3v+gHld9rrrc38z5NV7yqefYPPcGz72h
594VzTk5eE4OPSfnubqoz9VzdZ7DI45PPYfnuT14bg89t+c5P3jODz3nf0mP
qz5XcwHmCGCOAM0RmDsIcwdo7sCcAswpoDmFelz1uZprMP9IeGoOoh5Xfa7m
JsxZhDkLLjNn0bxK8yvNZRabHAdZTI4jmuMw98EWk/vgEHOfeSYnEuZE0JxI
8yrNrzRXer/mXzkUBpgcSjSHYm6FUya3guZWKU3OJcy5oDmX5lWaX+nrf2ty
NMwzOZpojnbD5G5g7gbN3W6anE6Y00FzulfMqzS/0t8f3s8vc/nUHJC5oTQ1
uSE0N8xgckY5Z3JGaM6onkB9geaSzDGxxOSYojkmc09h7imaezInlZUmJ8V1
5qQZTK4K5qrQXJU5LBqaHBaawzK3BXNbaG7LnFeY82I2c171BOoLNBdmjoxq
JkeWMcyRI0zujJsmd4bmzulNTi2ZTE4NzanVE0TRF2iuzRwczMGhOThzc2Fu
Ds3NmbMLc3aMZM7uRk+gvkBz+TMmxwdzfNEcn7m/MPcXzf3pBDDJOAFRJ0BX
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
yVK6LPohoScSdUQhxrtIeeNfRN0LfYbQa4g6DXoCoS8QdQWcU5L3Zm4pYV5J
e3m1p1fnmzjHIpxrSZhnSWPmLuSEmcPARc5fcE5A8pq5ARThvEAx49qFzh3H
6NvpsIUuO8Fj7zVuWOiIE/ywq3Gu8tK4V/mM3rWzcZlCpynqM3cbRyh0haKe
kO5N6OBE/RudltBtiXqt+cYVCZ2RqC8qaRyMnDIuRtTD0G0IHYeo3+Dcl3Tk
U+e/tP9Y+5B1XiyDmRcSzg+Jzg1xvkXnXRLmXH408xiyxMxnJMxlcH5AOE+Q
MEdA7y707wnuva7x2UKvneC06Ynl/et/+WLZRFdM/yr0sKIOll5T/jB+U9Rt
0heqN0xwhqWNhxP6OFEXR78l9Fyijqu88UZCfyTX6I7oY4ReRtTJ0HsJ/Zeo
+9Keae2d1vm7nsYtCR2T1KZfooNUF5ngIecYt6eOL8HvOf26Tq9PBy+FjIuX
MfTwdNuy3DhuUb/9775+Yn/9dEhClyTqkeieJY1x0EhK/6x93trvrfOM9LtC
zyvqeOlN1Z8muFP6SPWSCU4yk/F8kt74PlHXR38m9GiiDm2ZmTeQvGb+QMZy
7oA+XujlRZ280/f1v/X103sJ/Zeo+6IvF3rzBGeuvenao67zoXTSQjed4KXp
eoXOV9T30qGqS03wqHSTQkcp6ifp/GSecX+i3m+omeuQV2bOQ3pzvoNzCMK5
hIR5BKfv63/r66erEzo7UV9Hxy8/8ameX/vpta9e523p0YU+PcGl00/LFeOp
Exw1va/Q/4q6X/pUoVcVdar0lEJfKeoqOT8jnKcRnaPhvIdw/kN07sPp+/rf
+vrpF4WeUdQxLjEeV+hzRV0u55aFc8wJ88tHjSsVOlNRX0qnLnTr0pZena5a
6KwTfLXTr/t/9fXpRIVuVNSLrjLuWT43DlrUP3MOXDgXLjoPTr8r9LyijreJ
mQeQ7mY+QEZyLoB+XejZRR2706/7f/X16XGFPlfU5c4Z75Ojy45tEv3L/tmb
mgZLx0yfp3nzQyTWL9oRuKjiOWzuuKb2lMIB0q5Qs5K/lY5G0cEt/viqzzyM
WrWy4LvF66X+qYPJ2ryOQ7vAnW37JvEWfQY9Sh71X/lXQIMBR1ut3CbN9sZ+
Wzf+9Xv+kqT/lxMiMbTA5TIpi53DiGW7fnhZMECK9mg+ZGbZaJyoXWFd7Il5
KLJ66s7TL9ZL68V/xFSMf/2F+1ck+a/X1efxtH4pwuJfP2bo1XbTl2+T0CUl
FlWJf/1tWfc27h7/+j++fNWpTIlz+ORmw7GVCgXIu2orJzaNf/0XHXdf8Jw5
D9ErHkwYcWy97Cxwu2HD+NevOKvXnP96XX3OD8/v+19f//3UY7/I6L5N5lZf
PXJq/Ot/U/T3GrnjXz/PikaBrS74iT63bIiZWil3BHYPOpfz0T1fDNk8qE6F
cSHSwH/44ndVQ1FlbOm9G9L74Jsu53t/Us1LOlQpsefctzEYubx/oc39A2Vs
t3b+UWl3S7ucvyxcdiUKFdvn2+xTyk/0mfTM4DmuoyOQru3YpUsv+aLb3eZZ
co4PkQIPu26bUCsUC3t2nLkyrQ8uJH9Vt15NL+mxY5TnnvjXf7TDY+qOHoEy
/8jnBda83SUDNn+5yvNmFM6MPLy+a/zr6jM29v/j7iyjqtra920rdmODXUfF
xL5tsbsDEbuPLbZiJ4rYiYqBigioiD4gKmKAICUNe286jGNi/Nf5rWcyxjv9
r/G+58MZjuGn+e1Zc3mAs/e8r3lf+aJClPltuzYZck6Zb1q4wYCKynxd0enP
VyjzP8WZL7IoFo487R7XNG8fTOejApt7KPNnB761I2X/nZq5Da9STNm/w73E
jcr+zz25dOZ5Y+XfhdcKb8fpPy1NwZ5BH096R/vR506NWrfLk0KuyWPO71X+
/+iyzXvwylPhmPi674kuM5LJ+cmoi2NHJ6JkzI2ylUoGkqe9o29X8yTK26Jr
cL5rBpyOTBoZv11HRtVrzXw7OIYSI9ePnHlZD7MjoY8HPw+E/nv/pKW348l8
e48JnyqlwflLfcub86NQ3DFykoP5dbo0x/jZ5pAMbFzhOdyzbrjy8/muxIdY
T8za2mh47NlMBIzp227mXj2depR/e7cXYTiyymt17A0DknSh+iZ5/EmsNUp0
GGLhk4V1eU4/SFL2Py322Pn8yv73vH39apOy/zHWnTOa+QXQlQ1f/T81S6KW
lT7tfehlwOX7BzvOVfZvczS7Y95RMfRg3eZP1y7qcWqH2d/5GYnVfpDp/+Vo
1abW36Ff6Q3rGsXyzVe+B+zdcTr+mfL92Gt3s0uPzr8gx4DpO4sXTqKhMcXK
Bl0yYGelS1d3bgzC7Hqvi86qlUSTE2Y9fjvZgFXb3lWLtI6HzzP3+9PnviSn
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
QU7DpkQlIXKG8/n3syIooEZLp6mPEjXf61ftX/Shi350wWkIb67w6Ap/rvC8
Cu+r8L2OYZ9xBvuNhddY+KSFX1p4pYXPuxD7vYXXW+u5v+t80S8v+uYFpyF8
xsJvLLzGwr8rfLzCwys800PYOy1808LzbcLeb+H7Fp514V0XvnXN5/6m8+/U
uvW53e0gmDccMd7fLADf2zyPeRyQCcOCsgENltvRG17X1Dix6/i3bNxoe2vl
941+5NU2PKpm92Bq//DyuCDl92u2q1VQpTBXOtKj8ozqb/S0+Z7nC6/yKShs
XnBXfEFPHNLXdRroHEEVHEq08BmdiZ4dxyavu2hHA3it+3BL3r3KfI/hNl8f
L/ejz22yFszsFUz+RvPfxijzg2aV6TwozpXsFk08OzZbTz2nWUfXr5iCXW9b
fmpXyBMrj/XzsVLmT/Uv/OaOMr9htYYFi12zo+a8mnq9WLFbmb9/xdM68238
lM+LY15n9gymOjv7V49W5je70KTurVeutEW/tNkc5e+PvdEy+34VUvCl3cW3
Z5X9Dym1J72rMj977X7XB8r809UPH5u01Y4u8jp6wPvqh5X53kUKTCzpGgPD
LqM3Kx89p2FX8naqMTYd7bdE5ZiUjKL1l0uP2r/XBRQ0blTZzAyYBuYJXd41
jOabeY5KXxZDXbYt63qnVhoqxLYo1Xd6NJIGd5zj3DOBlrXPsc6vT8Iisx2r
ltQJg++w03cXPPOmzWvXDd3imQnbp6e/jf8RSTM7FT+5bYsL1vZqt+Hw6wyc
/v6lYOMuYZTd6GMRk6Ux5LEnp4ht7TS4RQWM2jc2Gk8mWpg7WySQ/9aa0S6G
JBRc0HBfwdphmJjz57fTgd7UeeqBt1eV+eurdkqarsxP+xzef68yf/XbS8kO
yvy08jV6HlXmbxw8I+i2Mv/UyWlbuijzC85fZJiv7P9jpPEaR2X/Ye9aTPmu
S8KcAl1qjqgfhi/p6+aVfORNz241yjFX5mdWyRcetyMAGbwWWfAke5xJFlr4
Bx35UiqO5k6w+OZtEgmvYzNT39xNQeb7iKqZ2WG47TPr1PJZz1A9zPrZvALK
z7N3vbBajQ3onHblzY2Ai1TWatvRHW+S8b7pWvsl1YIp7ETbR4O+PKNKTYdZ
1Xyp/JwP8Xzt7RJF/fwetBk2OoHu2k6KdC6RjOAqw+zzd3mByJCK82rX0tO7
sb0Pld+QjCUxy62LNI3H0DEjv66LNNBby00+BePiMQ3v4qLan8W5ltFpRc5E
0+YS2871PJiB7fZVA91Kx9GVFY9LN68QiYEH9RvWeafA8P773cKuYTDNvmQ7
M/EpNvROGBZcKRNNB5z0LfSHAZl3H58NXXaRZgVNMTZR9l9yxPs+A9fF4GmD
lXmjrj6mugf2vSh5Kx1jVmbWiPB7RDfXFjbWVYpD8k7T8m+s0rFzc4krjzJC
MGaLbmrfYi9w0LZY6JwGmcjyORxSyi2IxmeWq+s60RuOpWdPGm6Thdo5lVIf
9o6nIxs7RNUPjFC+73do2/BwCj7eujm0/qX7NNr5z4kVx+qp9s7aKYFIAU1v
PfL+sWf4kDbQdO2EZAqvfeXYuIt6hAS8t/f0T0TjXsZnim/V05HlBU5HOcRh
Y17bohUtXmH5g2HbZuT1It+I429amGWiktXsm9WiH1HjCxXvrqoch0FGZxvf
nJSOzU1Wtnyg7P/L/SaHLJT9zxvRfvPcv/f/8YvnnKkRyPk0smyZjc/Qe2Jz
u3EeGWifJ+JK/ZqHaPr++pvt3Hxh27j49KLHsmFl4/NoaL0g6jj/6HmnE7eo
id3Imd+cs7Csw8zMercTaNS5GrZnZkXRULf+y+5FJKH54d4trJ28KG+B7Z7l
HCMp/wq8rRyfgedNx126Mdae8ia8mpdz5Anlff8y/7x+2cjZuvyC/0UdjuV4
n2j0I4KqLx/jaZVtwL4Ly5ekfjPgbYsH/SNbJVBodEub3d3i8Hpyo+dT5wTA
avVfC68PfkGZCYf1g5TvU9XKzX54rN0hOlnN23H7Y1+U3V+1Suej2QgxFIqu
XDMKUS53epptcKcwv9JpB6MyYGu85fLTLa9oe/2HZWq8uIUWc4e56ZpkwrG3
ocT26wk02qbeW7u8YeRW3njajj4pKBNVyaixpQ9GbchYbeyopysdj+YdVCYF
PxzGmC2/EQTvSUdmvx7yhA48uHiuWtEsPG0x51M1l1do6JPYo4CTI6I9Wsfv
t8iETytD90GBBoSX8Z9R3uclGZWIWtC1gwFWY51ONvuSCI8fkbpLI+Kpr6G0
V5FMHYb81fVdyVtBeGgcu3eBxRMqeuz+/r+MsqBb+XHzonyPkMBrbM+NXSsX
zcbdI76tv3zVU5W+IbdLTY3G8OTzX/Lv0KG6V8rEhJc3yNb63T7TOw9xv+zM
nlUXZKPYyIIbXXcYEHX75GHLm44IHJOdx/lUMk7E/Mh2uRIFH6OSxd/VD8Ks
qIZz+u5MR7HDz+4sjtWjqDE1+6O68vv94vA994QkbP7gWbx+IR1mz2lmatz2
BGZZBhi5e6SiX2KpeV9r6tH3hnlP9/3+NNHiQ11boxSctjldIPp1FI5US85T
5+UDCm1f2W3v4AwEDqhczmZTJLmXznTK+0aP9j45Dep00iufi41qu+wPQb1H
50e6Dk7A3bGlG/rGpGCyg3nw+vvBCGxc1XL94kSss3/S1HtaCkYaPrhfDw3F
lcaVTtd9HYv2k5qj1bNUzEhOMI+NCIFRwOwuMzrEovjk4q/btU7DiE4Vy9ks
i4B5jVmFF54MRqxVdMbp0hmoO23Xlc8Wccrfk30tLX0fYsLlgpVWK38fzCct
7vXjuAdtcT7xaHbPcNRxuF80xjkTbUd47O/Q1wmL2s655NvOT/m5GZx/yvxs
LHlwcn30QaKZbqvuhA1wRee4PtfhnI3QsD2mS2r542z/N21mvfTAebc+LTog
G4c/rliz6Pk5skv6Y1LFgCD4LlhoHe2WhaGvvts7PA1HyTfHa/S3PwxXm6Ej
c65nImDLkthTq/2oTUjpoMe+x7Bw5I51+//MRpfiCwrUHhZEfcIqbI+8GkZH
m9vHtjmbASNH8+qV6z/A2bip561t9HTg2P1+1srPs1mDuQEL6j1Bs235w5Y/
DqIrnXbun6z8vN07+cOrkbUn7vI6sEStz2suZGN2vaSQ703jaG+87ao1xZ7g
h22whf6PdARgmbPPO28KejPcqPXZICpTdk/E1mXK5wR9vQpWJxKRuaxr5w3G
YXTs1nH/B3uTsaKA45BvwyJh+75M+SqZ3lSv+J+NPZXf0/Fvj6fcORxBg0Jr
tPxRPw5FVkeaXa2cCoNjQkDxqCi0Gr33TnKFUHzvqSvtH5iGpecyezoHJ2LP
X4P6hEy+C6/IlpeCjqfiD4dpF3y+XqXTL/PN6D3wFZx7jZ1Uerjy99Bm44jG
dULgUnPgyBtvvGEWEXbAt1wWigRYZC+ZexoFeG04a+PLdcrnbf4cSEPVz4GQ
PgcSfw4k8TnwrPp5ki6onychPk82Vj9/En/+hPj8yZ9XyVj9vEri86rWc3/X
+fw9hfh7CsT3lBHq9yAKVL8HQXwPimJefbDEq/P3KeLvUxDfp/j7FxVUv39B
fP/i72vE39cgvq9pPfd3nc/f04m/p0N8T+dzAGqnngOQdA5AlaT7GtHqeQL4
PIHEeQKfP1Ab9fwBrfn8gc8riM8rIM4r+HyD+HwD4nyDz0PA5yEQ5yGF1fMT
4vMTiPMTPm+hMup5C4nzFq33+lX753Mq4nMqiHMqPgcja/UcjKRzMBor3Vea
p56n0XL1PI3EeVpv9fwNfP5G4vxtlHpeR3xeB3Fex+d7xOd7EOd78ep5IPF5
IPz4PJDPD4nPDyHOD/m8kfi8EeK8Ueu9ftX+XdVzWuJzWohz2vrqOTClqOfA
kM6ByVq6r8fnybRYPU/GfT5P5vNnLFbPn7GUz5/7qefVqKyeV0OcV9uo59s0
Wj3fhgmfb/9Qz8Npn3oeDnEezufnxOfnEOfnfN5Omep5O4nzdq33+lX755yC
OKeAyCk4ByFPNQeBlIP8dF91j5qnUKyap0DkKevV/AWcv0DkL5zXgPMaiLxG
67la8zk/Is6PIPIjzptorZo3QeRN/3T+v71/zumIczqInI5zQPJWc0CSckDK
lO5rc55InCeSyBM5f6Q+av4IkT9yXomVal5JIq88ouabdFXNN0nkm5yHooCa
h5LIQzk/Jc5PIfJTzlspXM1bIfLWDWo+S5zPQuSznOeC81yIPHefmv8S578Q
+e92NS8G58UQeTHnyzRZzZch8mXOqYlzakg5NXFODZFTcw5O69QcnKQcnCpK
fQWcpxPn6STydM7fqbyav5PI36+peT0VV/N68uO8foCa71MhNd8nke9vUXkA
Yh6ABA/A/AA2qPwACX6AeQNi3gD+zBu0U/kEYj4Bgk84oPIMxDwDBM9wU+Uf
iPkHWDL/4KLyEsS8BAQvQSpfQcxXQPAVzGlQhMppQOI0iDkNCE6DORDKUjkQ
SBwIrZb6OpaoPAktU3kSCJ7kjsqf0ESVPyHBnzCvQsyrkOBVmG+hMyrfQoJv
KazyMNRY5WGoD/Mwfio/g5EqP0MnmJ+xVHkb6FTeBoK3YT6HmM+B4HOKqDwP
Mc8DwfM4qvwPMf8Dwf8wL0QeKi8EwQsxX0TMF0HwRcwpEXNKkDglYk4JglNi
DooSVQ4KEgf1U19NP5Wnot4qTwXBU0Hlr4j5K/Rl/op5LWJeC4LX0nqu1vxd
Kj8G5scg+DHmzTBa5c1I8Gb/dP6/vX/m9Ig5PexgTs9T5QCpusoBksQBUi2p
r2mGyhMS84QQPGG8yh8S84cQ/KGTyisS84oQvOIrlW+kOirfCME3Mg9JzENC
8JDMT6KAyk9iN/OTzFvisMpbQvCWWu/1q/bPnCoxpwrBqTIHS8zBksTB0nap
r2ydytMS87QkeNr9Kn9LzN/SCOZv86q8LhVUeV10Z17XVOV7ifleCL53uMoD
E/PAEDww88NgfhiCH2beGB9V3pgEb6z1Xr9q/8xpE3PaEJz2bpUDp2MqB04S
B/5TXx/z5NRM5clJ8OTMn6Olyp+T4M+ZV8cAlVeH4NWZbyfm2yH49hsqD09t
VR4egoe3Uvl5vFf5eZgzP8+8PZi3R13m7bXe61ftn+8pEN9TgLinwPcgqLZ6
DwLSPQj6HvGffZV8n4L4PgXa8n2Kper9C/D9C4j7F1PV+xrg+xok7mtoPfd3
nb9JvadDfE8H4p7OC+7Rvsq92tI9IOJ7QBD3gJLU+0TE94kg7hO1V+8fge8f
Qdw/4vtKMFXvK6EH31fSeu7vOp/vqRHfU8N7vqf2osFV265e8eRUY3GBxJQ4
NKpSZngDkyQcupJ/bfBjHZWtkLp226QIBNWdO65CniR0cM+u2KSynvKENazo
2vk0tbOq1euS8jlf8ARGzBcIrqCqv1NM8bvxNCVneZ/XyXEodirmrKFGEqyO
/aXfpMx/t67XvvuWEdiwct5IO2X+jNX5i3xU5tueeNPWqeZpat3+zB9VlfmC
JxB8geAKjm/962BtZf7rlBY9QpX5di2WmMUq8+8+ffVurzL/XrPLfeKU+dNs
8v65VpnfZ/3Sq6uU+ZU/TK7VpeVparLusP5PZb7gCXKYLxBcQfXkzj62yr9P
k1JdK+1T/n3m+7W0KKv8+wieQPAFgitw7xJ19VinJEpeYvxyWK14LO3hPauE
8vuU/0SpLuXCkmnA/ldnRiY+xpLllaquUz4/hP+4W/pOsBud8rqQf3X0Wmql
S25wVJ+dyxMIvkBwBYXbnRts2zGJCpmemrZMmW/To9PqaTPikWRUZuu10GQa
f9AjbZPhMWzNIqw8lPnt8o0rnVnTnazzXcgX2mgdvSmWEv9Yl53LEwi+QHAF
C/7wPPT3/PGLVk34e37Gu211/p7vbx/3/YUyf51Hz1GL9Y8RYOHd+Kwyv/jC
TlGHgtzIxqfYJ+/ItbRxlnPdE8r+BU8g+ALBFexLrdVgy5RwGv15cLvBJ5JQ
+2yPmtOtdOjsd6zmuMF62nk9vnP1fDq0/6x3f3syDjs3tijWON9LOvKp/fH0
UAMOba76PtnSALcurxqVwUV0frXLI2dtPExtjqyfZpmOVUFhD0de0pF5/okB
xgHhuPL69vcq3ZMwfSN5RfdPoWZfzz67X38/vJYPMYoP1CN1lX3N8sMi6Pnx
So0XVLtPe/yeVSjbJROmvnbF5gVdRflaHRcZGr0in1G3dr8al5nLEwi+QHAF
Mf5/JGxX9t/leKFBmXl1GLu3a690Zf9HDwd22lH1JdVb3rWJ7XMDjuYUSH05
2YD8LcxaFe5zEdce3Rq4ZnM8PjlbnZs/Lj2XJxB8geAKNpnUPPHjUzwdnnR6
3a7mSZiz4/SoP1vGoU6DuFfRO0JpmenaMSc6GvA04JWu9yTl/8vDJ5Q3Laqj
OdU27ev6LgEbU7Z+XzA7EWvnTncNG5BKN1I+uPf18oeR1ZBys9Yl4qpr+b8K
1k+i0UXWXza7fZ16HW5QdeHXJGx+M2ed68soKhG9q6td6VDqXqJG+XvBafCc
d9PryNoI9LItPnJawzj6MsLj5GmTVKxmnmA98wUPmCsovP5Qoyaf42nJqiLb
pyn7H+noUnG1sv+Szy0tYpX97zpSIuG4sv+30+v/+Hv/6T7fTDqcCSSXBrUD
Pr1NQplRbfyKRSq/L94XW80fEU+3Jvq9ObIlEbqw72fejNKj0oJPew7e0FPJ
pi5n3d5HYciolQVK5dHD9PM1pxFeqXR83VePJp43kNP865w/oxJxeFWRlua1
E+haXLsP4/bdxaP+Hw/Vf5gG/4H7Rg++lkifZzRLPH8vFG3rpbkVPJSMFThj
8cjJA19C77Z7+vE5AsZtnd8lJwuxffJEDDeLw8iLB16f6fmEphUKmZWvYXou
T5DNfIHgCkbrpnxcoOzf26/3uelbE3Hr8PJ7rZX91/WrsL3CoiC65Kt7W/ht
PNo36vZ6qlsqMg8t7BhYMYlWn999y2FlHOaGbuhp/yUedeq2dL/lmkqW9rU/
dFn/FKEvrB5X8E/AsT7fjYc0DaVXNZcXHzj4In107zH9Xv2sXJ5A8AWCK3hm
Nbuu18cHNMIlp5L/XD2iR1Y5/r50Ckxi3s18MSYINSLMhhW6FYZBZTxCJp/O
wIXFBu+WYX7Y2Mxhf2ez4zRn3zGXQXOzc3mCocwXCK6gkZVH9ZhmkXQ6tHXp
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
snbo02ZmIkyavrg47FQA1eb1nldcD99qWTCesUO/SNl/1+vpQ/Iq+zcrVDUj
RNl/xtcBf7RT9p8zbvKd/cr+b3wbMbOVsv8X12OzBx4KJ3g55qne5iGcmyxs
8rlHJtrXax7jOlFPnt5r98bvuY18XTudurk8Be/yDhvkQEk088rEc19crtNO
+7mjjkxNwnPrgotK10ml7fopulNlw2jM6wmeu5XPi3nPTDmeE59IJg/edR9k
FE2v5q8oOtTNgA2LP+zUZ+so6cHq2W+U/w8u2lQ2+1y+FLT80XGVSUFf1Dni
Pe35ihiaGTLQLzyP8vtY3+1cnGckFj9asqnuRgPNuNyo65Q9OtyzvLfwUJUI
Ems1p7krBlZQvseNODpviqWe4tf7FCzncxshlV8uGLEsBTeCh+d8zwqj0rHZ
Yd7PvcncsN36x/5M2JeP+dh8Vwp1q3JzVvFFJ1F69IH+Ruv0sDvsee17ZCrB
e0CNEhEv6NaMKhtWxcbjmPKL43MwlOYY3zhe8aaOHMZ1a+/8KAm9Ngy8MOtM
OIn18rtHC0r3TYfPHJMH8csDqcjRTr3KdjtCndt3sfHKmw2LFueXer16gSF1
+oX3zIokstkavt0vHWcWTO7Qrr0PUlcVGWi3Uk81Tx1edbpVCpYcdFjz9FQ4
idXD8lOzB8r8gTv3Fg6toHx+fXuy1pqjXpjQ98RBXVAaFge+njbPPo0Gday5
lhaFoNbrbqHjm8Vg+uXSIXehoxZTvq08E/sULRv7NZ6pfK93W/Dnwx61z0K3
+GSfu48OUOP1dDLgYzbKTx/0oM/1YHrv1q567I9H6H+rxoA+pbJQvvHQ828L
n4fXxvIre5k/x/fegY/emyifw6eMOuV+/SrVGtmqn4vrcWq3+sLwF5nZ0JlW
1BnNPkEe96/aXmgfTL5rV3dNupCFohGZUzZXDSaxxmQ33Ht+WCbyW7/wKLQ9
icbHG+5ldEpASN0OUx/uj8Hbg/vrzXoeRjNXtHIcZpaA+aaDWjdQ/vtWe9Zs
fK+CQWTXfDC6JyWAam9ZecAkFbZJ72t93hNOddMLZ53xikW9YdP0T1ekIvZs
rWGVY4LJKv3CpNudY3DZpkr+IlFp2Jq8qfDNgAgasD9+V9MlwXBpeSx+cQHl
7+rBi1MGuweSX4/U1f3Xe8GyVFWrcs+ycGT15jeXfJSft8nxMyJXhQCjEzbu
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
23Xls0Wc8vdkX0tL34c04XLBSquVvw/mkxb3+nHcA1ucTzya3TOc6jjcLxrj
nIm2Izz2d+jrRIvazrnk286PykQNzj9lfjaWPDi5PvogYabbqjthA1ypc1yf
63DORmjYHtMltfzpbP83bWa99KDzbn1adEA2Dn9csWbR83OwS/pjUsWAIPJd
sNA62i0LQ199t3d4Gk4l3xyv0d/+MLnaDB2Zcz0TAVuWxJ5a7Yc2IaWDHvse
o4Ujd6zb/2c2uhRfUKD2sCD0CauwPfJqGI42t49tczYDRo7m1SvXf0Bn46ae
t7bR48Cx+/2slZ9nwRMIvkBwBfdO/vBqZO1Jd3kdWKLW5zUXsjG7XlLI96Zx
2Btvu2pNsSf0wzbYQv9HOgKwzNnnnTeC3gw3an02CGXK7onYukz5nKCvV8Hq
RCJlLuvaeYNxGI7dOu7/YG9yLk8g+ALBFYx/ezzlzuEIDAqt0fJH/TgqsjrS
7GrlVBgcEwKKR0VRq9F77yRXCKXvPXWl/QPTsPRcZk/n4ETa89egPiGT75JX
ZMtLQcdT8YfDtAs+X6/i9Mt8M3oPfEXOvcZOKj1c+Xtos3FE4zoh5FJz4Mgb
b7zJLCLsgG+5LBQJsMheMvc0FeC14ayNL9cpn7f/W2+VqdRbNZr7r2pz/xW4
/0qrL2sn92rtlPq1tJ77u87X6lXL5N42aPS2cQ6ey6tr9b9p9cVp9ctpPfd3
nX9Fo1fwn/YWzuD+w8ncf1id+w9zuC9xitSXKPcrHuB+Ra0+RtHf2ELqb1zF
fY8B3Pe4jvseRT/kKakfUuu9ftX+tXo1ddzb6aXR27lDuq90WqP/8xn3hV6T
+kK1+kWHa/SRiv7SflJ/6Q3uOy3Lfae+3Heq1Y+q9V6/av9avbKir3aaRm9t
Hem+nui//Sr134q+3FFSX+5S7tetzP26Gdyva6/Rx/tI6u/9xP299TT6fjdx
P/BEqR9Y671+1f7lXmU77lW+wL3NS//H3mat/mfRF31J6ovW6pfWeq7W/Loa
fdeiH7un1I/9T+f/2/tfpNErHsK95e4aveUk3dfW6j8XfenTpb500a++jfvV
N3C/el/uY+8v9bGL/vaNUn/7F+57nyj1vYt++ILcD3+I++FFn3yO1Cev1T+/
h/vqj3Nf/QHuqxf99l+lfns99+GbSX34Wr36vhq9+qK3/wf39leSevtrSH0F
Wv3/RuwLuCv5AuqzX6Aq+wVqsV+gjuQjuMM+Ai1/gZbvYAf7ET6zH6EV+xHG
avgUtPwLWr4GLb+Dlg+iPnslvCWvRGENr4TwVYzW8FakSn0dwn9xWPJfCF/G
rYf/6cvQ8mucYh9HWcnHMZH9HWclf0dX9n3oJd+H8IP8yFH9IGfYD1JJwyfS
kv0jf0n+ES1fiZbfJJ+GD0X2qjz7L16VR+xtOf8/elsmsf9lHvtfOrH/RcsX
I/wyecr8p19G67la84XvxpR9N8vZd6Plx/mn8//t/Wt5hYS3yCjm/+8tspL6
moT/yE/yH83R8CU1Z79SccmvJHxMxSUfk5a/yYF9T1XZ97SCfU/CD/VA8kNp
vdev2r/wat1jr9YQ9moJb1d/DW/XaKmvTMv/9YR9YcUkX9gbDb+Ylo9M+Mt2
Sv6yP9l39oV9Z5PZdyb8aK8kP5rWe/2q/QuvXGfJK3eNfXWXNbx1xlJfn/Df
DZb8d8KX90Ty5Wn59cqW+P/7+LT8fcL3d4h9f93Z9yf8gH9IfkCt9/pV+9fy
Kmp5GzkHx0Cpr9KT/Y+Z7H/MZv+j8EV+k3yRwi+ZIfkltZ77u8530/CKCm9p
F/aWDpe8peUkb6mW/7QP+1Insi91CftStfyqWs/9Xedba3h1t60MrzjuohPS
XW5sPdNXh9Gluhh9XZWKk3YXE+xaPCDH0cc6ra8Zj2Gm/eq/aZyO2nMG/DXK
eictPXLY5Pv+k+ju7Z5vSE42hiVcGjolz8vcNTErf5qhaCbie8zwHHTYCf2u
Z87tqsyf5JJn+vDVqfizhv8fBes8oMUOzqs+m8SjtmX/+ZubpONup+YnMu/u
pFpHN1zy+XQSg/f/ldFCmb/3xqE8f88Vq1fRmAJJyvyMP58Osz3oBIN9Pbs2
ynynctctJirz933+MuaPeg+oYWDPFS1N4/G97eE1fZX5n0ZfeRS0eSelH4pe
vfjOSVyqEdqzpzK/xRarbX/PFevu5OoRf+8/qvCK3iXPOmF7u6NLNijzZ9Z+
276yMr/KoV4Jgx7F5K7nTmVsaFk5BVdmPzDOioyg+Y6zOze30aNH7KL9380N
aLOi8fVTxcNp5riHkxu2DcbINvWuPpibgSUHp5s6Tk/AignDYtOKXsEwY5e9
Dk/S0GJENcfwRjG5a977c7btWJaCYkNXHDjwOIImvOpfxnilHjXixjut7mjA
3kmjNx8uGk6P8n/p2q1DMCwvLg26qszPuvhiw0XLBOy+3aXGsW/OmOE4/EhQ
YBruL7l1crwyV6yZmfmiQpT5bbs2GXJOmW9auMGAisp8XdHpz1co8z/FmS+y
KBZOedo9rmnePhjnowKbeyjzZwe+tSNl/52auQ2vUkzZv8O9xI3K/s89uXTm
eeOY3LXC23H6T0tTsGfQx5Pe0X743KlR63Z5UuCaPOb8XuX/jy7bvAevPBVO
E1/3PdFlRjKcn4y6OHZ0IkrG3ChbqWQgPO0dfbuaJyFvi67B+a4ZcDoyaWT8
dh2Mqtea+XZwDBIj14+ceVkPsyOhjwc/DyT99/7/j66zjqpy+76+Ygd2YGFi
B3Y77U4MbGyxA7sTu7sVFQsVMRBElyCCiHQ353AOHWK377m/vbZjvPs7zl97
jPvHvVw453nWXnN+5kxd5ZaMjnv7TvlmlgmnH41sXJfEUemrsdNOdnyA2wur
vrMPz8b2te5j3C2iDJ/Pj6ZfEt1p/u6mYxKv5SBwwuDO8w7rcNmn0N7ewZF0
doPHxsSHeqSmROhaFPD7d5qbdh010DMXWwpc8U41/PxzEs87FjL8/Ic+vI/Z
afj5J8zskd3KNxB3t/3y+9YqFW3Nvh1+7aHHHa9T3RYZfv515/K6FbROgPcW
+2/3bxn+e/ssV8RuSPx3Hh9Rx6WgYxpqzm60T7f+Jc00L2WyxHAPOLzvSvK7
NinwONjqto9jMK4Gzt1fulgqrBJKVQi5rcd+s9v39m8PoQUN35ecXy8VMzTz
33yYoceGPR9rxs5MJs93j73mLgrDjTEhRfwfZ6BU/FCL24PcqePYKuXuhx6j
QT5VUhqG5aHWhZReLmvDcW7F10UL9kbQn4ferVpbZ6NKlw/PzrVIQ/1ibge0
RaOpr5XP1BlbtXCtvPtFoEv8v3PJmNE3zV+ko+7L8EK1tr+kvZ5HHYcafv7h
CzcGnzT8/GkuF5v99/N3XlZs4X8/f4O6A4b89/P7uEcWvu8chlfJhYZFNkrD
1LdD+tu8TkHCj9GRfppzWPG+ldkMez1+HVo+5NKtNNjGHW3foG0I3Uu0HKnv
q0X5epq3bcPS4VCsVL3VEzT0vrNNnXFuLzFjZs3rLw9lIvKiZc1xV88hXWt5
8J3h9/AYWVZ91uViVc1rvWdZ3kCq182Frfzj4Dey27pYv2w005R0G3BdB93t
0w6/tnhidnXLHqmm6fi5YVbk+o4ZmFO9gNv9D160xu/IJtvaKagyZt3HstbR
/85wm0IxHX5kovbR34nHIs7hTwNEFN6lx/e9DSPLGH7+pVdNFsfcioFNwtaD
bydqYPk9bab55TRk7Mj65ZEcSefaPIKXiw7TqpV38jyoB6w7rOjkoCHbqF4l
74SEY/n4EgVanUrH9DfJz01d3yLxVoFBGVO3Uv6kztpBQ/Jwa0DtceNXxf47
+7+pXdfecB9xPeTWY9eDKDjecKhqHpuCC96rinWokwrbtU82TxyXCtie7vE2
JcQw/1U6YW+mR6JHq2kZmXpMKNvfeUjf45hkOq3e6eFpeBRasFPK6th/p9OR
NWEenwxzxYgyvgdXv8KuN6865UanYsVor3WBiXpYvgrqv7mMhjo0cl55OyUV
I026ux3KjkfVCx1Oz7B/QVs2vR0Qb5jzbvoO7ha11/D379qx3M7eKdjUNrRx
XcP33XLDrr8t83Rof6JyqxqvY+Bgb5u1bqceGxcdbnMjMQWTA3uuzBpleO41
Pf04eJ8OHULXNkkyPAcX+AUGWqclY3CDvKP2VTU4VWPLnta19XCqbB9aOiMF
10fsuzs0JALBlxNyOx5IRZN0rem7tYn/zseeRWO/30jDwCsF7hTRhlKFyzUT
B7tkYkbvNmYTghJQe+eqO6+dg9Bo5Ksf7jcyUDN7on6drQYvnc89+WgdCK3F
lIb//V5My3UOqVBTA5S222YXFQx0qxAyJjIdW54Evfo6VovmTxoW1V42fK/t
4jN97qbjeneXgo9Oa2Hfpd/rXzXCkDR8d9Xky6loHLGx0vFtOvgu8H16un8s
tn0ccv33Uj3cdFUCprxNwcuBUx2u/TpBxZIXDa9QKx2zV8XPXV9Uj7SiseFz
t57GyTWNT9cJ1+PTjKfXs2ek4dfJWRRU5xb9gYVuSWsNHteddm1xfiYW/crc
FhcWhLbuj9eUHqDF84D8jYOKZ2D6zQE/dl6bQdqMTd1iSqRhQ86QzvPap6KA
Br66wxHYfuaGyahcLazqfv3adKnh/vx3o+fLdy/pSYXgXpXW6uDk3uTgXsP9
If9Z/BaboGAaOum6yd2fsXjlMahz/OssnN9rkmYxNxAtdnfJcp5yBoUbeNb6
XiEP+xe/HpFzNurfebHrZ5Phw7LQ/tfUtMdZz7Ft58rD74/pUed7JV3tsWmo
VvXpNu2zWHpR8unu9dv0aNN3OfkcSsF6t/CI8a9e0++mT5o7zoqH+YKDH6c0
zsbUvA5TQnNTMGVdmSWrwv1RfrTDzJql0zEhbNmc56sS/52WR22C8g3f34Tc
WWVmhIfQ4qXzl646n45RVzO+trDVwm3Pqg2ZWyLQ2b7pM+vGaVj86I7FdMMc
Ua1ou75zeyRDs3iZSY3lKfBxzfyyeV8KNOcHFK3Y9DLtuZg5xX6h4fnSKP3H
MUcdfjs1XlhjQgjWlHhyaeQ0HSpmmI+YbrjH/I1KGlY75BEOfpk7yqyDDh6T
k240dkqX/Qh0VvQjkOxHaCr6FOi46FOA7FPg/gXi/gW04f6Fi6KvgVxFXwPe
cF/DT9HvQNzvANnvwH0QxH0QkH0QpUVvBMlT9kfsEn0T5Cb6Jkj2TXA/Be0X
/RQk+ym4z4K4zwKyz4L7L6if6L+A7L/gngySp+zLWCz6NchB9GuQ7NfgPg4a
L/o4SPZxcH8HDRD9HdST+zu474MWi74Pkn0f3A9Ce0Q/CHpyPwj3iVCk6BOB
7BNZLPpHyEr0j6AX949wXwk5i74SyL4S7jehJNFvAtlv8kj0odAb0YeCqdyH
wv0pNFT0p0D2p3DfCnHfCmTfCvezUAPRzwLZz1JD9LkQ97lA9rnki/4XshX9
L5D9L9wXQ9wXgwjui+FeGZKn7JfRij4aeiT6aEj20fQT/TVUXvTXkOyv4b4b
PBN9N5B9N9yPQ59EPw5kP46L6NPBS9GnQ7JPh/t3yFL070D273BfDw0XfT2Q
fT3c70OzRb8PZL8P9wCRPF25D+iq6A8C9wdRPe4P4r4hcN8Qyb6hF6KfiAqK
fiKS/UTcY0TylH1G50T/EXH/Ecn+I+5LIu5LItmXxP1KNFz0K0H2K3EfE5UV
fUwk+5i4v4n0or8Jsr+Je55InrLvifuhwP1QJPuhuE8KFqJPimSf1HbRP0V6
0T9Fy7l/qoDoqyJz0VdFsdxXxf1WdED0W5Hst+I+LJov+rBI9mFxfxaR6M+C
7M/ivi3qKfq2IPu2uJ+LuJ8Lsp+L+7yI+7wg+7y4/4vkKfu/uC8M3BdGsi9s
kOgXI+4XI9kvVlz0kRH3kZHsI+P+Mtoi+stIx/1l3HdGr0TfGWTfGfejEfej
QfajcZ8acZ8aZJ8a966RPGX/mrnoa6P5oq+NZF8b97uRTvS7Qfa7cR8ccR8c
ZB9cPdEbR/KU/XEWom8O3DdHsm+O++mI++lI9tOZiT47aiX67Ej22XH/HXH/
Hcn+u0OiL48ui748kn153K9H3K8H2a/HfXzEfXyQfXzc30f2or8Psr+Pe/5I
nrLvj/sBaanoB6SJ3A/IfYLEfYIk+wS5f5C4fxCyf3C+6Ckkecq+wjOi35Bi
RL8huXO/IfchEvchkuxD5P5EuiL6EyH7E7lnkeQp+xbdRD8j7Rf9jHSZ+xm5
z5G4z5FknyP3P9Ie0f8I2f/IPZEkT9kXyf2SlCn6JUn2S3IPJclT9lGeEf2V
lCL6K0n2V3LfJY0RfZck+y65H5OsRD8meXE/Jvdokjxln2ac6N+kdqJ/k/Zz
/yb3dRL3dZLs6xwj+j3JUfR70kLu9+QeUJKn7APl/lAyF/2hNIz7Q7lvlLhv
lGTfKPeTUl3RT0qyn1TNp/LifCqZZ9WI86zGcJ5VLSX/aiTnXxnLyzKWr7WI
87gecB7XMs7jkv7adUp+lzPnfT1X8r6ucD7YLCUfbJuRPDFj+WPG8spkvtl8
Jd/Mn/PQxnIe2hnOQ5P5aWs5P+0J56fJvLVMJW9NzWdrxflsczjP7aeS5ybz
3xYq+W/fjeTFTTWSL2csj85Yft13I3l3xvLxjOXpGcvfU/P6LnFen7F8P2N5
gMbyAxcayRs0lk+4mPMMmyp5hsbyD43lJRrLV3xlJI/xBuc3rlPyG43lPb7l
fMhxnA+ZwPmQxvIkZf5kmJI/aSyvUs23XMz5lsbyMGV+pifnZ7pxfuY0I3mb
Mp9zvJLPuY3zPP8oeZ5vOP/zG+d/duH8T5kXek/JC5X5og5KvqjMIzVV8kgj
jeSX5hjJO1XzUT9yPqqapzqW81TXMh8leSnJSRnLa1XzXftyvqvMgx2n5MEa
y481ljcr82lXKfm0xvJs3zKfVlbJvy2i5OV+57zc85yv20DJ143nPN5enMc7
gfN4bzBfZ6Pk9xrL+5X5wMGcD3yY84FlnnB9JU9YzR++x/nDxvKKDxrJNwbn
IR9Q8pCN5Sd/M5K3XIbzmXsq+cxqnnMQ5zkvUfKfczj/2VhedBfOlx6g5Esb
y6OW+dVFlPxqLyN515Gcjz1Hycc2lqct87fTlfxtY3ndMt+7mZLvLXndH0oe
uMwPr6rkh3tw3jgpeePG8sklb7xfyTOX+efblPzzaUby0tV89dKcry556WJK
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
231f09Iwx1d5Nium5hMNzq4aVcX3bRps7tR74hyvp1jnnXs+nklGXAOTr1+X
JaPF3UdHzw55RfKc08ym270+ebgZl262LO8V/e3p63zjznMaEPtpRINZeXBv
9qLT3Rcu2LBrbo3+Hscp5evpGaPT8+AyqFny7IV3qXLTCrfM80PwMa9B4uxb
ueh1c28Rc28/2j1tXaPdB14DX89VSUjOxUd7+5uWsRcpsfqRRrMfzMKQec86
9/qVh3GJTefqlunJ/uDtg8WfvcXjIz2Tb75Nhd+TnPxLQZlUZXfEQssOwbgx
6HuXgh8TMdniZv65vDhaNOF3v+dLfGlGfn5Wfcts1Op7YPavLsHUsMGC1lOq
amiU35NbLwIzMLn+/s/z6wYhsqd/qU7ZWnpsOqvx9bP/PcdT2ocU94PnrHbP
Fi4OILfpYdGxW3NBYUeibR0jyGJPJLWqTmQ+YofTzvgcPHEvW8ajeDiF3qZy
f4skUPm67faXeZSJvbm/rG5vSyLzMXfu2lbUUrcxo/v7WOoRde3G0riqmfQh
ue/cEDt/qrIpoM6TdhoUqbNvgdmDNDo6Ut+hcP3VWPpnwsj//KqFp7avZ1lb
SxbTSjZJHDcev20KpfnZZKLAKoeXzRqmUJ8nb1c2r/aKfr5/d2C3ZQYyC0yd
drbac7zTDfCt1iyZTA6X3xdqk4Xia7dGpifG4MJQTWOzO8nUuG+PTQ3KpuNx
2dvaGYbP5yGyKFMyIZq6xSx+5d8tGyOHrfW1O6KlF7Wvuj1cH0lROTFT+2xP
w76mJ67WSdJRgSP54+yj4mmcSQn/8ltTcDR1euOiszIocRmt8v4WQkfaPL2w
ZIAGTS1cd6RUSKXA+SNLZT+/Q0dvp20YUz0NZrcCD9QbpqOdP5bFbIx1waxe
O/vtu5QOinBoOXlMDFlebd9p1TEvtHBrNuhY4Rx0bL7zQpnahnuIdoKHX+VY
2Jyq37CeYV46fbKq8+reseR59Ny9+DfPsKS6le7Y92zsvrJU+6D4MfhPDVze
yD+FBrXb/LtY/QwUDNv32mTWDbpaLLTO5g0ZVK3O+mrnDfNb16seAyZ2i6O+
fmH38wrpKdV7Zv9m2SmYHvF03vGveqoy7fKXoecS6emTeGvrXRqEltb/tPfL
oBnpNRZPb+FHdy8O+tEiSYP0xp9njViTQkmnn0yvUekxrpztcahG7wwEzK0b
taB1Im3+9HzmZ9sQrDm7+JJrZCYe3Sl2pvQVHbmbulx7NiAGxSpO2eSdr0Pr
gFO1nXJdSJ6l+pa+VCEsD43bOiwfcN6PEu2Wutw46Y3wgQ/arsjJhQ2GBWhP
pNJpfXanmn4BsE0M2jBinh5PyzgGdu+ZSvXaDnp9xCaARuz1X93JX496IbPn
jTjzls5VuDDoTDM99b3z/unyMml4lVcmulEhVyppdqajbWAqNXGu2b5Kn1R0
/3ho3I6ByeQ/9KPjyAAt/Rx5sGPZejosOb64TLhPGi2M23q2XcsI6txhwNVF
F7RYf73NnFFjkil3QfeIK+d9aOZLqwW63EwsdVtS3e7afaqqOznfb/xNSugb
0qNMWh5aXk3sl9Az3vD5OxAVOiYYi+YUPlZ4VxYG73ipLXY6nSql1m7dZWgQ
9AklWrXL0sJnYDmnoLuR1PnRui0BmkDKw4dzZTKyUfPlqc6x/l5U2SVhW0IJ
LQ1e08f1nEkmMgu6vmtxM4WOVen2yco9gWa8sAs6OU+HUW1LjUzNSqfIslFx
u54+oW/7Dzp9SkyB/4kNtw5tTab1T+0L1Tj2mvSub3ZnJGeiQUTek4OG31v9
RX6XTDonUdnLq3rY1s2Cs0OtL+8fxNPW8APjQrtoqMyVsB768FQklhu/s82u
dJr/Kcs7fpAffZuuPVjjYArcCg/ZFXxVR+k2xbQv7B7S7dqnl7Ycm472xX7F
za0cQtfaDr+6qHAszV94cvCfz1kwPfVxcE5UMM2+/fDzq49acoxIvuw0NR3L
cnWah5Fp5Drvopf1wjCKt1315ZFJCuLblB5St2Q6fbvhmlyyxBF8G9Auul8t
veHzebTlTtLSwZo+6fXt3KnLmtFNzz/NwNHOixeEHUumQubvfy20i6UG1wes
ePclDQOtfap6BSXTZr8pyVebasnHr0ZyrYE6JJVdU8tKqyOnuVPz3swLp/vt
Rzk0+KOHe17SKM/vKRR7e3fa+3RPCii0y2Gm4T4+fnjWo8wIDW337bgy40sY
zeo6tAgM3/cd40/mbbJKprNHqyTWMPzeGv/UjrFbrUe/Uz3PfviYQp/zLHa5
3oilHaduNzBtrkf7QwHT7y7R0Yj8Me/2//KhE6Z+RXzz09A+2y6/ZIqWdo2e
8dB6/FvqPW2l5Zwfhrl5ji7b6UQSDd154NyeHsk0/fO9fnPPpKJa/Tj3yobP
8fibK/8sGZZM5U7/3jzYXIeW+hfny8XqyMNtXdKhn/50dt3xohN6pKHm2IDx
mgcp9GKWa/8vw9zoWpuSXneKZBg+t0V3XZp/nw48MDulNcx3jT7VXDfIMNe9
vFF6fdd+L1G9VfXwRYeTqdivbM3oiln4e6t98uMVt9Cic9eplx6/pDomhf/c
vZ+Hzd/aa3dlviN5tt+V53nXMI/tuKmxixtL5Lt9tWehdclU/7MOtxtmoZzX
ZNeCS53hmFo/7bKNhprGlz88yT8TI+49m7UfbrjbbK7fBNMQevOuHBbdy0VE
7FbTcYNfkTwv7DvS19fwfi/RKtJas9CXXP+ufFPjcxzNeLTie3bLbFzsmn8a
VqOQbh74d11NLWXdSxh3Y3omyt8K/XT/vBfWFW9Vcu/0GCowoc6O0QVz0GtL
5yoVc1xInp66OZ2rG55X1ZYuMd+eHEgfHrYZfNA5kvJLvIk4m56N+y1aL6u6
wp2eDfvZyNPweax389fuhYbPYZ23wVmmpyJws2KZvCzD/Bs93eK06Qc9mq7r
OXN1eBRG5b3d7bozgtztft0ddi8LPcZYjKhuFU0VHG3mx2W5UcXtwZUzF+Sg
YU38XpWQRBnXwl9PSI+kZZtdvlYbkAFd7OwuM7Lc8K39xSVPD+qo2OO2zzKH
p8N+xu2u3hYx8J81qNfwcvFUanGA64aEDIQuWZaQVtiDdqSbvs0f502ti+e4
l52Th8yOv2+uraYhr1KdK1l3C6bYan8r1QswzF0LBwSkOr2iIe6fx/WolUIW
dX1btTe8lw/VWNW+afVYHD3iscbJ8B67ebrnwPVOaajeZ1ZFjdlr9Ls4r0Oh
cD9yWnpxVHl9LprWcn2vK6kl03rV0gcFeFHBgz7Twwtm4qnX91qfDN9Ptz/Z
PpOPJ5PjiEX1Bhq+p0PX2DerUy8SDcd9qtjqaipZJvW7dcYw5x94/3rx+qev
KKTS8hl33FPpu9+E6g4/9Bj9vVLZrTO1ZDu7e52lpsnUqGOGVY8HOhw+sPzN
tIc7qHTH37dODdbSjtN9DvbulYmrdT7ZLUyLQ8Np7wc++BRE/TqZ1TC5kwXv
TvNap7e3I9+z8aO9vj/AtYBdO52zDHPj8w1tq2dp6fevMuPa5gai7smyBfca
vu8JLWeML1IsmWpk6Ap9GfwcpXfMLWq5IguvVg0j06HPUKLM5iDvwbF0x7TB
5f2G93jFcbeDS6wOhO5URstpG1PpfdlPLQLt9GgyrONUR/8E8ltfXuN6PoV6
tve5MWSxDjsqbd7w33OqbXxTk/+eW9W6rx1ibnhenXuTdn7WNFesHdTTfEPt
DLJe28dx09kULN/qcv1J8QCq2aXus9w7qdRypsn7nTP0+BPu7Bu+5yVGFzdf
PXxXKpk390lyG5+KKY3itt29kgw3i7T+nZNjaE9o1M5hhnuHdr/DzSsmoWhl
99dpbst7ZDnpTBkzx1xYVHbua7kwgH600x/yaumHQ5PNbpTYkovL3ju3n3ZM
plF7ao/+HhWDhpeqrzOvlI5f9mnZg9NSKGje2elYcBh2utxD3Uwz8LTU4EeF
iwbQ2oJlnjcamkoXFh5bvNdHDw/TaTPJ6wnZVZgw9n5mOq2uczpqSHIKunu2
rTN6aTi5f2zXeIRGRwM1cT4nfutRaPCSRp5B16l78N0ZrUroKdtzauEJFdNR
cZDL1Xrv/GDe/2L+kBAt+b6eYpNaLgNXK7Vu27mvBldX1z2+vUIQDduw1bXL
uwxk/LF5WsjbB71ySt04WsqPNDsWNl0Un4uW7mmXv/x+QU9mDE/ttDKCzIsX
D4rR5+D0hmVtptaJocYHo18OmxZMDu8Cfr/tm428UQG1fxjmsG4tTK/5d3ak
R1fP1Zk4NAWR+kPzXlno6bpjhMWhxW/puYc1JVZJQ5vGPe1WrXtNNWsnbdi4
O5kSNxfM1yZkYvf2Xpc7JnuSd0PPjEDD++dD8uN6LwzvnTsv/lL7V6GYNjYq
XhOqo1P6pYWj56Wik/ljF3dXDRZF2xdcXiKaNu9qPnHzmzTU7tHiYTOby1hy
srDhO+lA98yT42d+ycOW+XciD5VOoEn1u1mULBVOLqOWxkQ+yMSqG9SmyZRI
+lm9xlmrE1rqck03dMOuNCzs+7PH2IJ6Mm+zbp1Zzzhacq3+OoecFFQ5om9V
PCiVrD+UPebw4QnZnBy760nvVGTu6tx1ePckKjex6fKX599S2xg7h++1szC+
arHmv7+Gke+Tfn+qRGkod7D7gRYX06FvUe7h8H3J8Kq8+eCVRD3Fxyz2qbMp
GamPr43s2usdTo87tudJZz051DIp7acx3JusRgw2aWV476d2afC8VBKF5pVp
YdJPj0cNu3ktio6nAwPTbrjH6OjL21Znt9qnoPnr7u2tLyTSr+BuTW0N8+/L
9899b9trMGKL9bv6kVpqdW9Y4Jc2yeT5RWtj2UyHvDP7Eov119Du07/qXd8T
T1YRZwqZxqTizpqbzf97r18uHUf/veefDjxSbIXh/b5gSJeCUbODUX/ijBsj
AjNp/71h1RYlJsLTpor/4bX+tPd89O6AKplUboz7aY/2GoyLb2jRr34oLY9+
MuqwTQZRWdtiWsN9927ImKbr2/vRDteI+j99Myi/0ZLhLska/HXSBG8dH0G+
bwo3O+SZRoPf9DpT4bQWX8cm3f40wo/SK1WKOrXT8H15smT+5UMpqNHCq6TP
/VgqWK9xrQkfUuj4g4kLijTT44vd00vnqq3DwQYruuQ/TqPVSxBVeaMel87e
sB1a34kC9Vtb5FRJpSp9u237XTkNp1p6BH0f8xin29w7mP04hSppIuMGls/A
l/7LCzTX+9ChoLaD/OYl07z9M3N+Gz63jZK/lr7S6yFlj1w34eQtHS3z/T4o
baThHvrZL8riow9lOZV76m+Yd+b97L6o+4c0fHxTIrlfdxdYfbh1qucQHXXc
OrTgB4d0rEixzry6KAStHq/LrNc2kXJmLLm0NsLw769parp/63WKmLr/V7c1
zlS9v9vbN4Z5e+/wNw+rFo+lRvtWfQyuEkIrjlePyP6Uhd23Di4YM/EtzfrQ
cayFTktN53tUWvI9HfWrBVt/7RaDZwvHB4Qa5tbbm51CB3zQobzT+Vp2x4IR
/iM0oEC1eHKyaVMq3jC3W3R4cGjcd63h+5vWur1HMDma6dxq2qSjZ4mS5f6b
w5o9W3Thv7nsqN799X/zWC+vITdbzAxC/7LFW3w1zPsnOnaacT5Niyq2U9xe
LQqjnle82sdGpFGj9vlptoVSsH5p3S5xI5Jp9tSiljp/Lc2f07rM8lo6nHnx
wW5Z9yO44WTnN7RUOuW0/m6RWkOPTVGzhlX/6k/tNnXf3dAw370vYNflnGGu
K3z8hUvVEW70acq5Fq1cUqhm5JWseYa5rsIGk9PBKxKxdaZ//+GnDPOp/Zoa
75+l4kX3uP7vJsagnbNdajXrFDpp1bG0rXkq3pfuZXfCIhmmI0pummalp0FT
bi09d0SDD2taNUtsexv2oye17LRUR9c7fam25Eg6yh8JWNHGLhAzsmwdeoal
0bOjn3cEfU7BlO99zK590GDw8YLtku101Czw2CdtZDImpLX5dWSiM9zbLX8+
keJpx5GGnax3ZOPegavhPTedgf/5iLCopAAqUmJNFYsaeQhdFtrWxPCeLPex
7Od+eyKp0Ocv40em6ZCfP9rDvUYqrEeGdH9YIZlmjOr/0+tqMr7HTT9RtX00
tqUcfW7ikkTbDq59mlk0A13qbe44pHcwkh7G2Rfzekanz4T0GeyZi8r9r7ca
9lCDhrVdGuTvXInEXoMe7bmZiZ3WbetuuqtHpMvEnm13RlJw18lRdEeHPZEp
uxGuwSd/jVnHLskUE3XWOaekHhvuJAb49o9DzdNN9fELDO/twOFXLoxJRdEu
f0d9upSE0Aedbm/MSKbOeYX35FZJxbVrmSlvrBPQslLOIbe+8TTtVO7EuXfT
gcivHmceaYG23bd5fk+mKN322s2vp8Djx+Ipp4YkYM7IYi9a+qZQgZrfjtyw
02Hl3SkWHY4l4fmO6z7b/ujI32Rwn0P9tehXZ0HZCdNeY3JSz+SHhu9j97Jl
G76NSsOEHo2al/ENR7TTqfYDr6dREY/nLZx1WrQY8tvp3VBvtD35xKJqg3S6
UtT8zO/pOsTaPp47ZHgokndM+ptXNYM2jyz/o+8lDcrOyx8QM8Eb7uVK2pja
Z1Dve1Mfz72oxZsyH5dWWxaM0q13Lw0/mUEOnjUrvZ+igWvMUsviTTSwbJIe
mNMmjcomrrvW5HYcToyNdvbIPoPrp4r7lR6fTLumubeN25yF30NPp50u74LR
88qfDNsRT76rwhdrD2Zjyap1z35MdKdL/e6ObfNHQyNd0m9cN8x1n+ZFe079
spgCluYsd/BIo0GX7g+JXalHz/ZTbhZMvI+hezv1s5+ro7ChA7Z/NXxuk4pd
/2g69ATR4Cb5oycZ3leomD8hJQtNTx4uO2u5FtXqfCsQ2llLNwcPzHhLWkxp
XOfpp1ZpmHt2W7mjDTVUrGC9gZ3c47BuomOhjytCcL2O/8yUewlk9sT2T+Xv
mTh6P9dlVQtvbNAcq/r89mN6Osfxb+D6PDg5LJ3omRxCU8wM9463rnTreI1R
n4/nYoO9ve9yF39yLe3jkLQtmQo/37zQdWcmLNp8fJ1f3R+3+7efcmmWhiLi
+k+O+Z2BDTd/fKw22hej9l3Ys8LKl3JjHnuOy8rFjbAD9bRFk5EdcK99j1VH
kVP44uEvzlnoc9JvVt9TGaiyldYPtwumZU0th7+erEFf3Zyhb77o8Kn0ruuV
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
oqh74pgTk6fH0NqDj7eMSs+EzuPog/oPQuFlX/HD8oJa8u1t6ziP0lG3RfEh
x19HY8mOBrd/ugdSUtGqfrmG72Onz421w05408L1t8wGv92NEUuq5/geN/z/
1h2bUiwlhlaHH6w6YkcwWd1NbbOuouH7G+H5qFDYXVR3mVitdXctHW/Vs2/D
LpkoM+WBW9cScbgz7sPzkUMjiYJDPZx9MhF8Kbde9R0uaNXo7YKX5a5Qjd/R
hX7q8/Bq7EnNi4tx9PxMq9NtQj0oILYfVbqWDfuRt8N/rvGhJs8HNcxbo6Ea
fpoydztk4vj+5jezo+MRU3r2D6/IeGp11vn9/pvp6HKnXFyb0hEY+2vTvE3B
96iKWzfP04bfZ+GSz8vZNEmky39PzLx1JxIXNlKZ1OgMHDEZ0Xr4wCB0GrZ0
gNuEYHR1zk3Iyc3B4T2/tj+01iG9xpXS/Ytvw/cGb6b1fJiOzV9HnPu6ayma
9vdoluLgTXkZG1Z7G34/VRYue9HOJp4uh/YqkjM2lmx3WPU7sj4DXwe973ps
zy1afsw07OFoPfWxsW37LCANT0becCw/JgGD7j4d//6cjoY13fCjyNkU9N/p
0+CGbQTeDzg+vdZTLWU3qP3uwbU0fEjZVuTAyWB6NaTMo6Cub6hq9+YmB4bn
4mrz0cVcX4XTy9CHH16NDkfRxLonvmzLRtSjPlV7btXg3YMyf/Nq+qDV5QrN
ihh+bzef5rz99TgF0WM6B+Wu2w+X0m/zFxs+h4k5M0zGlPAi6xb1i2zTJcDd
qsORT7lZePT7080ZowxP/y/3Dk+dH4qq+0Yt+dUjBz3fd3mUbfjc9+jf4MRK
Py/UnuPgO2FxHr58nrbmbAkNtS1jWjjWIpg27Dy93CIuA2VN20zUtQ6jGZ8T
Oz/y1tKAfV5mUyumo+CavMNXPnkiK7V686xPeqo/+vEn+6hUtJ6c9ez9hhi0
6dx4QVBVw/xfp0GzzeZarKpj4ti9TCLMut/8k1s1kUoOfOQ4PiMN5d8U+3zt
ki9W1D8+KU4TjIuD6tjED8nFslPWVuV1HnA+O/bmhRNxqLPP8s3f69nYtqKQ
1n58NP4u+uhr/c0H7geX9K9XPAcLiwyPHVT5KHXJq/EsyeUlSpc5OObh0zz8
OHx4ea8Fb+nulR9PBo1/QNa/F3yY2i0Pz1ofqj7zmoZ6h4VteTkwkqZ5Oudr
eqdj3cO2czwCgqlD2drH7hrm1d1DuzV6sCcTrYb0OGVxaifGrDpVdX9kOO18
v+VE3V65uHzrRqlLHSNwqL75498tI2jE9f5Wa/tl4/6DJ2Unm6Vhaz33Ho23
x9CaJfufnquhhVWjxRUTDfevK+W+NgnZHUG3n0ZGf76UhgLpa/N3XLuMvgN6
jLpx4QHdn25q2SM9D743fg/PjnqOxs++bzWvfgffyqb6Hzc8rwrP2pL4iCLo
1DjrjBbVH+N6LROv8B85mGuvv3CwqJaCB8bYpjiFkGlQ5bzxWemYHdine6Hc
R7Tnyt6+Dl109GSR44Ayhu9daOKbP1FtwxH0KnuHWYtwGrrwWOrpq9m4cOFM
4uxT4Sjlpw+zLWVP7is7Xsgw/F1WNx+zp/EHPQK6nDr1Os2TXpQaODIoNhXe
J5reaX5Bh4nBf5dGGebhE1VXD19yOgX65LsVX42MRNL4NN/ownG0ZP/DokmG
58mqdpFoUCUQe5+Ni7cPcKAArxKx7wzP5yejijfwvKOjdVVW+Jc9EwWHel2S
HWbqsX7M49q31ryjJx9dFhz38MP1Z+Wp0i7DfcR6cJ/5o3V433PhvWWF7qN6
sYrPH15Nx8u90fOmLkrCniGFLR7uD8ap1iscHS8a5nzdhahub7XY2DE1c0SD
MNiYdCjuWT4dNSbVmzjASo+7TqPe2Dlch2NarQZJoWmo2KbW2U39tKi+YEeH
s2Wd6WWBnBBHw3zoWv98gUDDPeLpiu8dKz45Qxvqns9fYHjv1InuPajv7yja
uCL361tXHdZmt5z4o6see05FNyz+OASV7y9o885Eiw63zd9czE7HYf840wTD
c61x9M+ylw1z9nanAm2DLdPxpX+7CAfLYMRlPB/esrAGZm2s04slZGCI/cbK
U+7EonzzV1pbq3gcdj92UmubgUIBg0ef3xOM/Dsp/suiYpBR/MuWKZWz8aJC
x0L6jkko/cghP6+tF4r5zz325lAWui+uN2LFmMfU7/P9nXd/RKD4kJVNFuXl
wC7o4+B+zV3gNuRuC9PG/ijgXfLXJMP9ot+brbUq+nnR9ovn5prs98K3d6P+
aEfkwfCALt+3/mskJmy84lB1O6Y9Kr6k6aE8LNrlsP7mmr3kEj3r+rjCr3Hj
3P67tQ/n4aSJ863Gnr54Pin8+PcuzzC4c9KFWb3zMCnaatr7lS/pqk2pMXOv
HMFBB+uGnu55GDre8mrFFaH0IPH6+kvDQmlhva/HShmeYx2zSjV3q7uXdk47
ODh1hI4uDItb1tEtHYOLuJZa5BWI95WLPC3qFU0pM3q8b7sxG7blXfcEOXmi
1x4bl4+F99L0Fq9DYg3zRsXjf/zGBiVQiZvekwaGeWKdyaXrPl+yUMPPouTG
W8HUb/yP0TVDg6jT7D2/w2JzYHnMf9v1QlpsKxq51yk+lB52Lz1wv2H+10/s
tsExPAHX2qyqnz3N8DnJ+TPgmWHOmeLaeMHKZ5HUPnpi4+KdEnF3+UETi5AM
mHQbsfHKzBg8MK13d/GBKLRe7b7fNCMTfpuG1Lv6TotnVfemJEx2h23tpkVn
3s9A60l9Xk6ycqIRth8+PTaLxryXOUWvnspBRP9Klb82D8bJNle2NRnhjdAi
4+e7G+ax96O9Fj/6eg3L4OwTHWSPJpuqb/pvfssT/5xOiX9O8p/zv4dOiX8P
yX8P/3dhJf67ZMv/Xf45yUP8nDSPf86C4v+LXMT/F8n/LxvxewD/Hkj+HlLF
74349wb5e2stfs+0XfyeIX/PZuLvgl7i74LO/HfhvyP470jy78h/d2oi/u6Q
f/eh4nNC+eJzAvk5aSQ+V7AXnyvIzxV/DsGfQ8jPIX9ucUd8bkl+bvlzTiQ+
5yQ/57biewE38b0g+b3oIb5HVDDx/75HJL9H/cX3DrvE947k926F+J6Sh/ie
kvye8vcaA8T3muT3msRzgEzFc4Dkc4CfG8TPDZLPDX7OED9nSD5n+LlE/Fyi
avxcOiSeY8TPMZLPsX3iuUf83CP53OPnJPg5SfI5yc9VeiKeq5DPVX4OUzXx
HAbxc5if2+Qqntt0g5/b/Jwnfs6TfM57ivcC7RbvBZLvBUfxHqEs8R6hGvwe
WSveO3gs3jsk3zuu4j2F1eI9RVf4PcXvNbIX7zXI91q6eA+SRrwHsZjfg/ze
JH5vQr43+T1L/J6FfM9eFO9lKijey5DvZX6PE7/HId/jM8R7H/zeh3zv85wA
nhMg54RCYq7AGTFXkJwr3og5hJqIOYTkHFJIzC3UScwtcOa5hecc4jkHd3jO
4bmItoi5CHIu4jmKeI6CnKPairmLRou5C3LuWivmNHQUcxrknMZzHfqIuQ5y
rvsu5kA4izkQcg7kuRHdxNxIcm7kOZP+iDmTnvGcuUTMpfRAzKVUm+fSsmKO
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
r8P1OhAH7Bo5YO2G/abcsHbGnpUzNrlk7ZhdL8dscs/aSftdOWkH4Kptgav2
Xly1A/HXDpTD9nbctlfgtv03btvRg/P2DVy4J+XC2ZG7GkfO7tw9uHNP49Qt
l1NHrwu9Lup1oddFva7odVGvC70u6nWh10W9ruh1Ua8LvS7qdaHXRb2u6HVR
ryt6XdTrQq+Lel3odVGvC70u6nVFr4t6XdHrol4Xel3U60Kvi3pd6HVRryt6
XdTrQq+Lel3R66JeF3pd1OtCr4t6Xeh1Ua8LvS7qdaHXRb0u9Lqo1xW9Lup1
oddFvS70uqjXhV4X9brQ66JeF3pd1OtCr4t6XdHrol5X9Lqo14VeF/W60Oui
Xhd6XdTrQq+Lel3odVGvC70u6nVFr4t6XdHrol5X9Lqo14VeF/W60OuiXhd6
XdTrQq+Lel3odVGvC70u6nVFr4t6XdHrol5X9Lqo14VeF/W60OuiXhd6XdTr
Qq+Lel3odaVeF3pdqdeFXlfqdUWvi3pd0euiXlf0uqjXhV4X9bqi10W9LvS6
qNeFXhf1uqLXRb2u6HVRrwu9rtTrQq8r9brQ60q9ruh1Ua8LvS7qdaHXRb0u
9Lqo1xW9Lup1oddFvS70uqjXFb0u6nVFr4t6Xeh1Ua8LvS7qdaHXRb2u6HVR
ryt6XdTrQq+Lel3odVGvK3pd1OuKXhf1utDrol4Xel3U69a+6nVFr4t6XdHr
ol4Xel3U69a+6nVFr4t6XdHrol4Xel3U69a+6nVFr4t6XdHrol4Xel3U60Kv
i3pd6HVRrwu9Lup1oddFvS70uqjXhV4X9brQ66JeF3pd1OtCr4t6Xeh1Ua8L
vS7qdaHXRb0u9Lqo14VeF/W60OtKvS70uqjXhV4X9brQ66JeF3pd1OtCr4t6
Xeh1Ua8LvS7qdaHXRb0u9Lqo14VeF/W60OuiXhd6XdTrQq8r9brQ60q9LvS6
qNeFXhf1utDrol4Xel3U60Kvi3pd6HVRrwu9Lup1odeVel3odaVeF3pd1OtC
ryv1utDrSr0u9LpSrwu9Lup1oddFvS70uqjXhV4X9bqi10W9LvS6Uq8Lva7U
60KvK/W60OtKvS70uqjXhV4X9brQ66JeF3pd1OtCr4t6XdHrol5X9Lqo14Ve
F/W60OtKvS70ulKvC70u6nWh10W9LvS6qNeFXhf1uqLXRb2u6HVRrwu9Lup1
oddFvS70ulKvC72u1OtCryv1utDrSr0u9LpSryt6XdTrQq+Lel3odVGvC72u
1OtCryv1utDrSr0u9LpSrwu9rtTrQq8r9brQ60q9LvS6Uq8Lva7U60KvK/W6
0OtKvS70ulKvC72u1OtCr4t6Xeh1Ua8LvS7qdaHXRb0u9Lqo14VeV+p1oddF
vS70uqjXrX3V60KvK/W60OtKvS70ulKvC72u1OtCryv1utDr0r2OPWzO1k62
d7Vna1fbO1z2sNEeNuxhoz1srtbO94BhF/zIsCNmD5sTtTtmD1vsYUt72IVd
c++gt9MOmj1sntZumj1snayd9bTL7h33pdpx9+67tPtmD1s3aCfOHjbsYaM9
bJ2iHTp72Nyk3Xrv3PfUzp09bDbULn7a0U+7e+/0tYdd2PWfNjgAkxvQzsB1
cgbaJWAPW9rDhj1stIddcA/Yw+ZUOQnsYcMeNtrD1rVyGNjDFnvYaA+bk+U8
sIcNe9jSHnbBkZjcCfawWUdOxeRavH9wMCY3gz1snSNngz1stpPLwR427GFL
e9i17of2sDlOTsjkirCHzd5ySNjD1q/LLWnnZDc5J+xh60q5KO2o7CxHpd0V
9rDRHjbsYaM97FrXRXvYbCIHZnJj1h2cmcmlYQ9b7GFLe9gF92Zych4cXJ12
eP5LDg972Nwrt+cCOT/aw9YtcoHaEXpajlC7Q+xhS3vYBaeIPWxdINfoM4OD
1G7S83KTzhycpfXlMmkPm3fJcWIPG/awpT1sLZMTxR62bpQrxR42K+RQsYfN
JXKrlg3O1eRisYetQ+VosYfNEXK3Hhmcrna92MOW9rALDhh72Pyt3DD2sDlX
zhh72DpULpkdM+1h6xq5Z+2kfV5O2j6Dq8YedsFhYw9bfyG3rZ23M+W8tQv3
gly4/QdHbnLn2MPWIXLq2MOGPWxpD5sz5eC1m/dNuXnt7C2Rs2eXT3vYBceP
PWzYw5b2sHlATiB72NwmV7Adwn3lELKHzR1yC9s5PFrO4eQitqPIHra0h11w
F9tpXC2nkT1stpHr+KeDA8keNufLjWQPm3vkTLZLuZ5cSvaw+aIcS/awYQ9b
2sOGPWxpDxv2sKU9bC6Rw8keNifL7Wzn82A5nxcPLujhgyPa7uhVckfZw4Y9
bGkPm6VyTZ8YHFT2sGEPG+1h87yc1asGl/ULg+N64eC+socNe9jSHnbBlZ0c
2smtbeeWPWy0h819cnHZw+aVcnTb3WUPG+1hF5zeyfVdMTjA7GGzg9zgyRlu
l/gkucTtGK+UY8weNuxhS3vYPCMneXKVvz84zJPbzB42j8p5tgutPeyCI93u
9LNyp9upfqec6mWTa42DzR62tIetfeVmt7N9jJxt9rC5SC53O97sYUt72LXu
t/awdYuc8MkV//LgkE9ueTvne8k5/8zgottR1x52wV2fnPbJdZ8c+H0GN/4t
cua1h11w6W8ZHHu799rDZrmc/JcNrn47/OxhS3vYsIct7WHDHra0h124C9B3
BB7UHYG+O3Ci7g5Mdwr6rsFGumvAHjZ36A7CHwx3E/bVnQXtYRfuMvxwuOPQ
dx820N2HvhPBHra0h80JuivBvYk6XjvZ3tVybyK6N1Ebaoe7etjtbjTsfPfT
Llj3JhZ2xNybqDu1O+6d8hLtlKddc++gT9AOunfT39FuetpZc2+iuDcR3Zso
7k1E9yaKexPRvYmFnXjvyt+gXbl36Lo3sbBbP2rYue+uXbzuTSzs6Kfd/bTT
n3b9/zg4AHYDdG9iwRlol2BvuQSTY/Ds4B5MTgL3JlJyFV4rh0H3Jop7E9G9
ibpQzkO7EH8uF6Idif3kSLQ7wb2J6N7EolOBa/EuuRbtYDwhB2NyM+xs6N5E
PSKXY3I8Hh/cj8kJaVfkObki3Jso7k1E9yYqckvaOTlFzsnkonBvolbIUdlh
cFcmp2VyXdqB4d5E6d5EbSg3pp2Ze+XMtEvDvYnSvYkFx2Zyb44anBzuTRT3
JqJ7EwsOz7mD23P14Pxwb6JekAvEvYni3kTp3sSCO9RO0VZyirg3UdybiO5N
1JVykD44uEmXDM5Su0wfkMvEvYk6SY4T9ybqSrlP7URxbyK6N1Hcm4juTRT3
JqJ7E7VKblU7Vy+Vc8W9ifoXuVjcm6jz5GgdNbhb3Juo5XK62vV6Rq7X5IC1
G8a9iejexIIz1i7ZR+WScW+i/kmOWbtn+8k9495E3SonrV21f5Orxr2J4t5E
dG9iwW2z86Z7E/VzcuHakft3OXLcm6jPyp3j3kRxbyK6N5Ej5dpNDt77Bjev
nb0fy9lrl+8suXzcm8ixcvy4N7Hg/u01OIHtCp4jV5B7E7leDqHdQt2byGFy
Drk3UefJReTeRF0gR/EHg7vYTiP3JqJ7EwuuI/cm6nA5kNybyIfkRk7O5NLB
peTeRF0qx5J7E7Vc7iX3JnKznEzuTWQ7uZrcmyjuTUT3JurdcjvXk/OpexML
Lmg7oo/JET12cEe5N5Hz5ZT+aHBN20Hl3kR0b6KekpvazurX5KyuksuqexN1
lxzXdl/vl/v60ODETq7sroNDy72JcG8iujex4NyuM7i4k6Pb7u6mcnc3ktOr
exPFvYnSvYni3kTp3kR2khvMvYlcLme4XeI3yyXm3kR+TY4x9ybq9+UeT05y
u8rHy1W2w6x7E8W9iejeRC2T88y9iZwtF3pypA8e3OnJqebeRL1CrvXkYE9u
NvcminsT0b2J+qRcbu5NhHsTpXsTuU7uN/cminsTpXsT9Qm54pND3m459yZK
9yaKexPRvYm6Xi765Kh/YnDXzxicdrvuujex4MBPbjz3JmoDOfPt0u8ul557
E3WDHHvuTeREuffcmyjuTZTuTeRqufrt8N8sh7/d/lVy+yfnn3sTOUl3Abg3
UU/pjkDfHVipuwPTnQLuTYR7E9G9iTpBdxC+O9xN2G+4s8C9ibpKdxn6jgP3
Jkr3JsK9idK9ifpr3Yng3kQdqbsSq/l394v6d+d/enfzT8//+q7iX98/8A/w
Of0D/LPh3+A7+We4Af8Mn+Cf4f78R9xf/xL35x/jpvxj3Id/jP3v8a369zj9
k+x/ldfoX+X0D7P/bT6jf5v9z3NH/fM8gH+hV+hfqP+Rvp5/pFvz73QX/Tt9
Jf9Ul/7Wmn+qH+Wfqv+1bsa/1v4He5b+wfa/2fX4N/sx/s32P9tN9c/2jfzL
PVf/cv91+Mc7/fvtf8I38E94Xf4J/97wr7j/IT/AP+Rv8Q95e/4rb69/y1/i
n/OLu67557wn/5ynf9FXD/+o+9/1qfp3/Qz/tB/a/Kf/afe/7pP1r7v/gW/M
P/C/4x94/xv/sP6Nv2r6Zz78S+9/7LfqH3sN/96v0z/5jfgn/0n+1S/Vv/rp
H/76/Ns/U//2p3/+vQvYjV3AT9gFPK4dwbrsCLw7WMbu4NphpzDtGk5jB/Ez
n12zg3gPO4gz2U08pN1E7yzu1s6idxknscs4iF1GseN4o3Yc0+7j8+xEbmUn
cjg7kVPZldypXck67FBWsUPZjB3KtFt5HzuXjbVz6V3M+9nFXM4u5jF2NN/R
juafh93Nl9npfIWdzsvY6axgz7NCu57eAT2kHdAB2g0dwm6od0bbsDN6Bzuj
bbRLegu7pGnHtMuwe+qd1Ie0k+pd1Q+0qzqCHdYm2mFNu61p59W7sB21C9tS
O7K3siObdme9U/umdmp3sms7hl3bd9m19Q5uW+3grmQ3d7x2c72z+yPt7G5g
l/eYdnm/Ouz4vPu7iN3ftBPsXeHz2hX2DvHT7BB3Yoc47RZ/m53jsewcv8HO
sXeRl2kX2TvKB7Sj7N3liewuD2J3Oe00d2fX+Zx2nb0DfQc70L9iB9q70VO0
G512ppuxS92HXeoSdqm9Y71JO9bevd7i3euwk512tS9evGaHu712uNNu9+Ps
fG9n57stO98lwy542hFPu+OfHXbK5w675mkHvZK99ErtpjdjZ71aO+sr2GXf
yC57G3bZW7Pj/hI77vvZcU+7796J/7x24r0r/x678iPZlT887NCn3fp97Nw/
rp177+Jv0y5+2tFPu/ve6e+unf5r2fVvqF3/9YMD8LbBDfgUzsC9cgbaJThE
LsEZg2OwCvfg1XIPvj44Ce0q/K9chQdxGLaQw/C1wW34BZyHh3EensJ5aBfi
DrkQ7Uj8ihyJv8GdOFruxEcGp+L/cC32xrVYimuxHw7GDXIw/hM3Y7ncjF/G
2fixnI3J5WjH4x45HtcP7sdNgxOyy+CKvASHZBcckidwSCa3pJ2TVXJO2kVZ
KRelHZXr5Ki0u7JM7ko7LTvLaZlcl3ZgtpQDcypuzNdxY1bjxlw6ODOTS7MV
js3hcmwm96adnJ/IyZlcnXZ43iuH53HcniVye/bB+bldzk+7QLfhAn0bF+iR
wRG6A3fo03KHJqfo9XKNvoprNDlIT8pN2gs3qZ2l8+Us2WU6HZfpVjlOS3Cc
3oP79BHcp8J9unxwol68bI0rdbtcqR8NDtUWcqs+127V4Fydh4t1t1ysswdH
64dytw7F3Zqcru/hen1frtczOGB7yQH7k8ENe83gjLVL9hq5ZKfimB0kx8zu
2SW4Z5OT1q7ahXLVdsVhe50ctpW4bXvIbdt4cN6OwYU7WC7cOYMj95eDO7ee
nLotcer+Hzx77+k=
         "]], {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRange -> {Full, Full, All}, 
       DisplayFunction -> Identity, Axes -> True, 
       AxesLabel -> {None, None, None}, BoxRatios -> {1, 1, 0.4}, 
       DisplayFunction :> Identity, FaceGridsStyle -> Automatic, 
       Method -> {"DefaultBoundaryStyle" -> Directive[
           GrayLevel[0.3]], 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "RotationControl" -> "Globe"}, 
       PlotRange -> {{1., 16.}, {1., 16.}, {0., 16.}}, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"2", "3", "5", "8", "9", "12", "14", "15"}, 
        "SwatchLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 6], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Lighting -> {{"Ambient", 
                    RGBColor[0.30756835, 0.18676585, 0.147065275]}, {
                    "Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[0.30756835, 0.18676585, 0.147065275]}, {
                    "Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 6], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    Lighting -> {{"Ambient", 
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404]}, {
                    "Directional", 
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    Hue[0.7, 1, 1], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404]}, {
                    "Directional", 
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    Hue[0.7, 1, 1], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #5}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 6], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    Lighting -> {{"Ambient", 
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774]}, {
                    "Directional", 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774]}, {
                    "Directional", 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #6}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 6], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    Lighting -> {{"Ambient", 
                    RGBColor[0.28733552, 0.34844024, 0.38776376]}, {
                    "Directional", 
                    RGBColor[0.10916940000000003`, 0.1855503, 0.2347047], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[0.10916940000000003`, 0.1855503, 0.2347047], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.10916940000000003`, 0.1855503, 0.2347047], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[0.28733552, 0.34844024, 0.38776376]}, {
                    "Directional", 
                    RGBColor[0.10916940000000003`, 0.1855503, 0.2347047], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[0.10916940000000003`, 0.1855503, 0.2347047], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.10916940000000003`, 0.1855503, 0.2347047], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #7}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[1, 0.75, 0], Lighting -> {{"Ambient", 
                    RGBColor[0.334, 0.2755000000000001, 0.1]}, {"Directional", 
                    RGBColor[0.26, 0.19500000000000006`, 0.], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.1], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.26, 0.19500000000000006`, 0.], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[0.334, 0.2755000000000001, 0.1]}, {"Directional", 
                    RGBColor[0.26, 0.19500000000000006`, 0.], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.1], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.26, 0.19500000000000006`, 0.], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #8}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30100577`", ",", "0.22414668499999998`", ",", 
                    "0.090484535`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19699838300000003`", ",", "0.252204821`", ",", 
                    "0.33320940200000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.12202865833333335`, 0.14283175833333334`, 0.064190125], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.1830429875`", ",", "0.21424763749999998`", ",",
                     "0.0962851875`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1830429875, 0.21424763749999998`, 
                    0.0962851875]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "6"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30756835, 0.18676585, 0.147065275], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20504556666666668`, 0.12451056666666668`, 
                    0.09804351666666666], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30756835`", ",", "0.18676585`", ",", 
                    "0.147065275`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30756835, 0.18676585, 0.147065275]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30756835, 0.18676585, 0.147065275], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.15375433333333333`, 0.06427100000000001, 
                    0.03486316666666667], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2306315`", ",", "0.0964065`", ",", 
                    "0.05229475`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2306315, 0.0964065, 0.05229475]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.3`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.15375433333333333`, 0.06427100000000001, 
                    0.03486316666666667], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2306315`", ",", "0.0964065`", ",", 
                    "0.05229475`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2306315, 0.0964065, 0.05229475]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "6"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.2742634666666667, 0.25883306666666667`, 
                    0.32036026666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.41139519999999996`", ",", "0.3882496`", ",", 
                    "0.4805404`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17616266666666666`, 0.15687466666666666`, 
                    0.23378366666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.264244`", ",", "0.235312`", ",", 
                    "0.3506755`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.264244, 0.235312, 0.3506755]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.264244, 0.235312, 0.3506755], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.7, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> Hue[
                    0.6999999999999998, 1., 0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.7`", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.7, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.7, 1, 1], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17616266666666666`, 0.15687466666666666`, 
                    0.23378366666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.264244`", ",", "0.235312`", ",", 
                    "0.3506755`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.264244, 0.235312, 0.3506755]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.264244, 0.235312, 0.3506755], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "6"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.23627719999999997`, 0.19087386666666667`, 
                    0.14698493333333335`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.35441579999999995`", ",", "0.2863108`", ",", 
                    "0.2204774`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.1286798333333333, 0.07192566666666667, 
                    0.017064500000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19301974999999993`", ",", "0.1078885`", ",", 
                    "0.02559675`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.3`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.1286798333333333, 0.07192566666666667, 
                    0.017064500000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19301974999999993`", ",", "0.1078885`", ",", 
                    "0.02559675`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "6"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28733552, 0.34844024, 0.38776376], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.19155701333333336`, 0.23229349333333335`, 
                    0.25850917333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.28733552`", ",", "0.34844024`", ",", 
                    "0.38776376`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28733552, 0.34844024, 0.38776376]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28733552, 0.34844024, 0.38776376], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.10916940000000003`, 0.1855503, 0.2347047], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.07277960000000003, 0.12370020000000001`, 0.1564698], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.10916940000000003`", ",", "0.1855503`", ",", 
                    "0.2347047`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.10916940000000003`, 0.1855503, 0.2347047]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.10916940000000003`, 0.1855503, 0.2347047], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.10916940000000003`, 0.1855503, 0.2347047], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.07277960000000003, 0.12370020000000001`, 0.1564698], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.10916940000000003`", ",", "0.1855503`", ",", 
                    "0.2347047`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.10916940000000003`, 0.1855503, 0.2347047]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.10916940000000003`, 0.1855503, 0.2347047], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.10916940000000003`, 0.1855503, 0.2347047], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.07277960000000003, 0.12370020000000001`, 0.1564698], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.10916940000000003`", ",", "0.1855503`", ",", 
                    "0.2347047`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.10916940000000003`, 0.1855503, 0.2347047]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.10916940000000003`, 0.1855503, 0.2347047], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.334, 0.2755000000000001, 0.1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.22266666666666668`, 0.18366666666666673`, 
                    0.06666666666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.334`", ",", "0.2755000000000001`", ",", 
                    "0.1`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.334, 0.2755000000000001, 0.1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.334, 0.2755000000000001, 0.1], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.26, 0.19500000000000006`, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17333333333333334`, 0.13000000000000006`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.26`", ",", "0.19500000000000006`", ",", 
                    "0.`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.26, 0.19500000000000006`, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.26, 0.19500000000000006`, 0.], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.06666666666666668], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.1`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.1], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.26, 0.19500000000000006`, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17333333333333334`, 0.13000000000000006`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.26`", ",", "0.19500000000000006`", ",", 
                    "0.`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.26, 0.19500000000000006`, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.26, 0.19500000000000006`, 0.], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                 ",", #7, ",", #8}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               Graphics3DBox[
                SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                  DirectedInfinity[1]}, 
                PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
                0]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     Graphics3DBox[{
       GraphicsComplex3DBox[CompressedData["
1:eJyl3V1yHdeV5XGWXO2Cv2RUEZJhGCqDSYiCKArCDBpj6BEwOqKfewoYRA+A
Q+FQOAS7/FX+KKsffPfpyN+6Ky4j2i+IvZTOm/fPvJn7rLPy5Iv/+b//x//6
5NmzZ//ns2fPfvBs/veb/37877PH4/pZ0c+LflH0y6JfF/2m6FvRb4v+quh3
RX9d9DdFvy/6Q9Eb76nVz4p+XvSLol8W/broN0Xfin5b9FdFvyv666K/Kfp9
0R+K3s7r2U79rOjnRb8o+mXRr4t+U/St6LdFf1X0u6K/Lvqbot8X/aHo7fox
/NXPin5e9IuiXxb9uug3Rd+Kflv0V0W/K/rror8p+n3RH4rertPDX/2s6OdF
vyj6ZdGvi35T9K3ot0V/VfS7or8u+pui3xf9oejtfjj81c+Kfl70i6JfFv26
6DdF34p+W/RXRb8r+uuivyn6fdEfit76juGvflb086JfFP2y6NdFvyn6VvTb
or8q+l3RXxf9TdHvi/5Q9NbfDX/1s6KfF/2i6JdFvy76TdG3ot8W/VXR74r+
uuhvin5f9Iei+z3kr35W9POiXxT9sujXRb8p+lb026K/Kvpd0V8X/U3R74v+
UHSPV/7qZ0U/L/pF0S+Lfl30m6JvRb8t+qui3xX9ddHfFP2+6A9F97jkr35W
9POiXxT9sujXRb8p+lb026K/Kvpd0V8X/U3R74v+UHQ/X/7qZ0U/L/pF0S+L
fl30m6JvRb8t+qui3xX9ddHfFP2+6A9F93Pkr35W9POiXxT9sujXRb8p+lb0
26K/Kvpd0V8X/U3R74v+UHT3J3/1s6KfF/2i6JdFvy76TdG3ot8W/VXR74r+
uuhvin5f9Iei+/+Tv/pZ0c+LflH0y6JfF/2m6FvRb4v+quh3RX9d9DdFvy/6
Q9H97/JXPyv6edEvin5Z9Oui3xR9K/pt0V8V/a7or4v+puj3RX8oevvb/Ojm
hzY/rvlBzY9o4+E2HtvQp279aOuH2v243Q/a9aj9Htq/xyne/tX/l7++qf6/
/PWZ9P/l77h8Q59a/1/+9tf6//K3H9H/l7/Xb/3/dl1p57u1f/X/5a9vqv8v
f30m/X/5Oy7X/5e/4xj9f/nb9+n/y9/7pP5/u37L3/P6FG//6v/LX99U/1/+
+kwb+tT6//J3vKj/L3/7a/1/+duP6P+3+6T8vX54Hrfz3dq/+v/y1zfV/5e/
PpP+v/wdl+v/y99xjP6//O379P9bPyJ/r9NeL+TveX2Kt3/1/+Wvb7qhT63/
L3/9D/1/+Tte1P+Xv/21/n/r++Tv/dDrsvy9fnget/Pd2r/6//LXN9X/l78+
k/6//B2X6//L33GM/n/rr+Vv3+H9T/5ep71eyN/z+hRv/26l1v+Xv36e/r/8
9T/0/+XveFH/v41j5D+6/Ddq73/y36i9Xsh/oz7F27/6//LfqPX/5b9R6//L
f6PW/2/jRfnbR9vPyd++w/uf/L1Oe72Qv+f1hm7tX/1/+eub6v/LX59J/1/+
p8bl8ne8Yt8sf/s7+wz5ez/0uix/rx8b+tSnePtX/1/++qb6//LXZ9L/b/5H
8//l73jFvln+9nf2GfL3fuh1Wf5ePzyP2/lu7V/9f/nrm+r/y/+Uz9T8f/k7
LnR8In/7aPs5+dt3eP+Tv9dprxfy97w+xdu/+v/y1zfV/29+XvP/5e/423Gg
/B2v2DfL3/7OPkP+3g+9Lsvf64fncTvfrf2r/y//U75p8//lr8/heFv+jgsd
n8jfPtp+Tv72Hd7/5O912uuF/D2vT/H2r/7/x/qh+nb6R/LX53C8LX/HhY5P
5G8fvaFPbZ8hf++HXpfl7/XD87id79an5gHk7e9Dn7TlUFtu0vut/VfLsbXc
1YbeciotV9FyAG3eus2ztnnB5je3+Rb5ex3Sj5a/9239O/nb5+p3yN9x4YYu
f30U+2n56zvaf8i/XZfl187rNq946nrvfVg/Wv72rfp38necp9+x8VdfxPGh
/PUR7afl3/oMebTz1Ou1/L1+++/d7rfytw/Vj5a/4zb9O/nrc2zo8tcXdHwo
/9Y3+/3aeWf/IX+v022e3N+h/O0rT/X7jsP0o+Wvb6F/t/FXn0+/Q/5tHOjx
tvPIflr+XnftP+RvP+L1Uf72755Pbbwlf30I/Wj569tt6PJvvoaf384Lx4fy
9zpqPy3/U/l/+duPez2Vv+NXz7/mN8hfH04/euNv8+ncX/t31u+Qv9dFx4fy
t4+wn5a//bX9hPwdj3r9lb/+jedr89vk33xn/3v7d9O/k7/XOf0O+dsXOD6U
v310yzHZ58l/dPmPLv/R5T+6/EdvfnP7K//R5T+6/EeX/+jyH13+o8t/dPk7
XrT/lr/+iv2K/PUj27ys1502j7Xxt23ndUg/Wv7et/Xv5G+fq98h/1P5f/nr
l9ivy19/seUMvO+2eVm5ev5u6G2+0f16H9aPlr99q/6d/B3n6XfIX//D8ar8
9Qvt7+Wvr96+t/dp+Xud2NDl7331VN7BPlQ/Wv6O2/Tv5K/P0XKm+gjybzkk
ffL2PexT5e/v3vv6xl/vk14H5W9f2c4bv4/8HR/rk8r/VP5f/i1Xp+/djstx
mvz9HdvXyt/73oYuf/tEr5vyd1x1Ku+mD6EfLf9T+X/562O3z9GnkL+/S8d1
8vc+Zh+88de+z75B/o6TvM7KX1/hVN5TH04/uvnO8vf/p08nf39n+hry977k
OFD+9nEbuvwd99hnyF+fwOuy/PXVTuWdT/nQzSdt/l3zlZrf0cbhbXzYxi2t
n259Xus/2n2xXa/bdaSd34279Sn/X/7N12t+U/NB2vi8jRvbeKb12a3/a31J
u1+263i7TrTzvs3HnPL/5a+uDyt/dX0r+as7zpe/uuMi+avbR8q/XXfV23Va
fvL3+q3/7/9f/bzo+rbyV9fnkr/6VnTHq/JXt7+Xv3q773mflr/6x/r/8lc/
L7p+uvzV9R/lr74VXR9B/q0vUG99hH2q/NXlIf9T/r/81c+LfirvoK4vLH/1
rej6O/JXb32Z4zT5q9vXyv9jn/vU/5e/+nnR9f89jpY3UddHln/rW9Vbn6tP
IX91x3XyV/f7yf+U/y9/9fOi6//LX/1U3qeNA9TbuEGfTv7q+hryV3ccKH/1
j/X/5a9+XnT9f/mr6/973Opb0fWp5a+uryd/dX0Q+at7vPI/5f/LX/286Pr/
8m/jVPU2rt2Krv8vf3X9Vvmr60/JX93jkv8p/1/+6udF1/+Xv3rzCfT/5a9+
Km+org8uf3V9Q/mr+/nyP+X/y1/9vOj6//JX1/+Xv/pWdP1/v7+6/r/81fVz
5a/u58j/lP8v/+ZLqTcfS/9f/ur6//JX1/+Xv7r+v/zV9dnlr+7+5H/K/5e/
+nnR9f/lr67/L3/1rej6//JX1/+XV8s7q+vLy/9j103R/5d/e66+Pe/dnkNu
z8e25zbb84TtObf2/FV7Lqg9r9Keo2h585Y7/9j1aZp/13yl86K3cXgbH7Zx
S+unt6K3/qPdF9v1ul1H2vl9Ku/v3+/LPMD3+NKj/8vj8e1HZ/unT49vv3T3
/7zs//nx7d9/fnz7pXs8V+V4ro5v//jvx7dfusf/ohz/i+Pbf9iOb790v2/J
r7zXbz/o70re4p0+/HAo+YCls/3bMp/9Vt9+uJX510f9/IN+U+YLly7/OW+d
p5rzE32dh27//Li+ziv3c3VcX+eJ+39xXF//7n6ufr7/jh6Pfr7/Lh6nfr6c
Pf7hfI4+nNEXZ7d/flxfnN3P1XF9cXb/L47ri7Ofq28vZ49H317OHmd5Xmpx
9viHs/Oowxl9cXb758f1xdn9XB3XF2f3/+K4vjj7ufrzcvZ49Ofl7HHqz8vZ
4x/OzksPZ/TF2e2fH9cXZ/dzdVxfnN3/i+P64uzn6sPL2ePRh5ezx6kPL2eP
fzg7zz+c0Rdnt39+XF+c3c/VcX1xdv8vjuuLs5+r3y5nj0e/Xc4ep367nD3+
4WxuYjijL85u//y4vji7n6vj+uLs/l8c1xdnP7c8D/pOX13O6G/11eWMvjh7
/MN5Qx/O6Iuz2z8/ri/O7ufquL44u/8Xx/XF2c/VP5ezx6N/LmePU/9czh7/
cLb/Hc7oi7PbPz+uL87u5+q4vji7/xfH9cXZz9Unl7PHo08uZ49Tn1zOHv9w
dtwwnNEXZ7d/flxfnN3P1XF9cXb/L47ri7Ofqx8uZ49HP1zOHqd+uJw9/uHs
eGs4oy/Obv/8uL44u5+r4/ri7P5fHNcXZz9X31vOHo++t5w9Tn1vOXv8w9lx
6nBGX5zd/vlxfXF2P1fH9cXZ/b84ri/Ofq7+tpw9Hv1tOXuc+tty9viHs+P7
4Yy+OLv98+P64ux+ro7ri7P7f3FcX5z9XH1sOXs8+thy9jj1seXs8Q9nfZHh
jL44u/3z4/ri7H6ujuuLs/t/cVxfnP1c/Wo5ezz61XL2OPWr5ezxD2d96uGM
vji7/fPj+uLsfq6O64uz+39xXF+c/dwy//1OX1rO6G/1peWMvjh7/N/zV85/
3+uL83+x/XD+215fnP/KfobzX/b64vxn9j+c/3OvL85/4nOH8x/3+uL8B45n
OP9+ry/Ov+M4h/N/7PXF+bcc/4Hvk/791OjD+emHbD+c0Yfz039jP8MZfTg/
/TP7H87ow/npB3zucEYfzk+fcDzDGX04P/0Txzmc0YfzU/Gfn36OPnzRF2fn
SYYz+uL8M/YznNEX55+y/+GMvjj/hM8dzuiL8485nuGMvjj/iOMczuiLc/Gf
3ztfdOD8hD58H91+avTh/P7f2M+B8xP6cH5EX5zRh/P7f+VzD5yf0IfzI/ri
jD6c3xf/+an4z4/Ff37/C/ThjL44u/3wRV+cmcdbnNEXZ+f9hjP64vwZnzuc
0Rdn9MUZfXEu/vNT8Z8fi//8/lfowxl9cXb74Yy+ODP/uTijL87Olw5n9MX5
l3zucEZfnNEXZ/TFufjPT8V/fiz+8/tfow9n9MXZ7Ycz+uLMvPHijL44O888
nNEX5y/43OGMvjijL87oi3Pxn5+K//xY/OcPzocfOL9HH87v3P7A+Ql9OL91
PwfOj+jD98b9T40+nD8U//l98Z/fFf/5qfjPb4v//Fj855viP394iT6c0Rdn
tx/O6Iuz+xnO6Iuz+x++6IvzxucOZ/TFGX1xRl+c0Rdn9MUZfXH+En04oy/O
bj+c0Rdn9zOc0Rdn9z+c0Rfn4j+bK1mci//8VPznt8V/fiz+803xnz98hT6c
0Rdntx/O6Iuz+xnO6Iuz+x/O6Itz8Z/fF//ZnM7iXPznt8V/fiz+803xnz98
jT6c0Rdntx/O6Iuz+xnO6Iuz+x/O6Itz8Z/fF//5XfGfzT0tzsV/fiz+803x
nz98gz6c0Rdntx/O6Iuz+xnO6Iuz+x/O6Itz8Z/fF//5XfGfn4r/bI5scS7+
803xnz98iz6c0Rdntx/O6Iuz+xnO6Iuz+x/O6Itz8Z/fF//5XfGfn4r//Lb4
z+byFufiP3/4Dn04oy/Obj+c0Rdn9zOc0Rdn9z+c0Rfn4j+/L/7zu+I/PxX/
+W3xnx+L/xw5R/1QfdLxnb7f8/ffI3K5M87BVwof6hn1Kd/k2b52PB/j/Gf7
2vFnjEuf7WvHSzGOekZ9qu9/tq/tR6NPfbav7Z+ir3q2r73fRx/wbF97f4r7
1rN97fU0rrPP9rW//7guPNvXnq9xHj+jNpfreTu65+cZtblcz7ezfW0uN86f
M2pzuZ4PZ/vaXG78+57ta3O58e91tq/N5Qb/M2pzuXIeXc7n1OZy5Xy+r83l
BudzanO5cj7f1+Zyg/P5vjaXG5zP97W53OB8Tm0uV86jy/mC2lyunC/2tbnc
4HxBbS5Xzhf72lxucL7Y1+Zyg/PFvjaXG5wvqM3lynl0OV9Sm8uV8+W+Npcb
nC+pzeXK+XJfm8sNzpf72lxucL7c1+Zyg/MltblcOY8u52tqc7lyvt7X5nKD
8zW1uVw5X+9rc7nB+Xpfm8sNztf72lxucL6mNpcr59HlfENtLlfON/vaXG5w
vqE2lyvnm31tLjc43+xrc7nB+WZfm8sNzjfU5nLlPLqcN2pzuXLe9rW53OC8
UZvLlfO2r83lBudtX5vLDc7bvjaXG5w3anO5ch5dzrfU5nLlfLuvzeUG51tq
c7lyvt3X5nKDM7W53OB8u6/N5QbnW2pzuXIeXc6vqM3lyvnVvjaXG5xfUZvL
lfOrfW0uNzgzLjKXG5xf7WtzucH5FbW5XDmPLuc7anO5cr7b1+Zyg/Mdtblc
Od/ta3O5wfluX5vLDc7U5nKD8x21uVw5jy7n19TmcuX8el+byw3Or6nN5cr5
9b42lxucX+9rc7nBmXG7udzg/JraXK6cR5fzG2pzuXJ+s6/N5QbnN9TmcuX8
Zl+byw3Ob/a1udzg/GZfm8sNztbmcuU8upzvqc3lyvl+X5vLDc731OZy5Xy/
r83lBuf7fW0uNzjf72tzucFZX8lcrpxHl/MDtblcOT/sa3O5wfmB2lyunB/2
tbnc4Pywr83lBueHfW0uNzg/UOs3y/nv+9pcbnCeXK6c/7r3h83lBuc/7/3e
yOXK+U97/9ZcbnD+w96PNZcbnH+391fN5Qbn3+790sjlypm/5nKD8w/3tbnc
4Pzf9rW53OD8z/vaXG5w/sG+NpcbnD/Z1+Zyg/M/7WtzucH55/s6crlydl7E
XK6cf0ZNLjc4/3RfRy5Xzj/Z1+Zyg/OPqcnlBucf7WtzucG5+M8rlwvnlcuF
8+RygzN/zeXKeXK5cp5cbnD+t31tLlfOk8uV8+Ryg/O/7mtzuXJ+Kv7zY/Gf
Vy5XzqPL+Rf7OnK5cuavudzg/Pm+jlyunD+jJpcbnD/b1+Zyg3Pxn5+K//xY
/OeVy5Xz6HL+1b6OXK6cr/a185/B2fuiuVw5/5KaXG5w/uW+NpcbnIv//FT8
58fiP69crpxHl/Ov93XkcuX87/vaXG5wdl7ZXK6cv6Amlxucv9jX5nKDc/Gf
n4r//Fj855XLhfPK5cJ5crlyXrlcOE8uV86Ty5Xz5HKDM3/N5cr5ffGf3xX/
+an4z2+L//xY/Oeb4j+vXK6cR5fzy30duVw5v9zX5nKD88t9HblcOfPXXG5w
3va1udzgvO1rc7nBedvXkcuV8+hy/nJfRy5Xzl/ua3O5wfnLfR25XDkX/9m/
5nKDc/GfJ5cbnIv/PLnc4PzVvl6cR5fzV/s6crly/mpfm8sNzl/t68jlyrn4
z5PLDc7Ff36iNpcbnIv/PLnc4Pz1vl6cR5fz1/s6crly/npfm8sNzl/v68jl
yrn4z5PLDc7Ff/avudzgXPznyeUG52/29eI8upy/2deRy5XzN/vaXG5w/mZf
Ry5XzsV/nlxucC7+8+Ryg3Pxnx+pzeUG52/39eI8upy/3deRy5Xzt/vaXG5w
/nZfRy5XzsV/nlxucC7+8+Ryg3Pxn/1rLjc4f7evF+fR5fzdvo5crpy/29fm
coPzd/s6crlyLv7z5HKDc/GfJ5cbnIv/PLnc4Nz8Z3KP5nKXTi53+Snkclcf
/+l+++XLfLrffvmPPufMfOMzcqHmcoebudzFk1zuGs+Qyx3dXO78O5rLXf7s
/2cud/ZrLnd0c7lz3OZyRzeXO1zM5a7z3+c9nqOTizaXO/+u5nLX+Nb8/b+g
k+tuOXJzueHr6+ORy43zk5yqudw438zBksuN84ec7cfmcuPfndyvudz4dyRX
bC43/l3ILZvLDc76eORygzM+obnc4GwOllxucCZn+7G53OBM7tdcbnAmV2wu
NziTWzaXG5z18cjlBmd8QnO5wdkcLLnc4EzO9mNzucGZ3K+53OBMrthcbnAm
t2wuNzjr45HLDc74hOZyg7M5WHK5wZmc7cfmcoMzuV9zucGZXLG53OBMbtlc
bnDWxyOXG5zxCc3lBmdzsORygzM524/N5QZncr/mcoMzuWJzucGZ3LK53OCs
j0cuNzjjE5rLDc76kORygzM+58fmcoMzuV9zucGZXLG53OBMbtlcbnDe2I5c
bnDeOA5yucH5oAfngx6cD3pwpjaXG5zneOQ8nyvn2Z+cZz9ynu3lPLqc9fHI
5QZnfEJzucFZH5JcbnDG5/zYXG5wZhxiLjc4kys2lxucyS2byw3O+njkcoMz
PqG53OCsD0kuNzjjc35sLjc483nmcoMzuWJzucGZ3LK53OCsj0cuNzib1yGX
G5z1IcnlBmd8zo/N5QZncr/mcoMz43xzucGZ3LK53OCsj0cuNzj7fCm53OCs
D0kuNzjjc35sLjc4k/s1lxuc+T7mcoMzuWVzucFZH49cbnDGJzSXG5z1Icnl
Bmd8zo/N5QZncr/mcoMzuWJzucEZH81cbnDWxyOXG5zxCc3lBmd9SHK5wRmf
82NzucF5jkfO87lynv3LefYjZ3iZyw3O5kjJ5QZncqrmcoOzOVhyucGZnO3H
5nKDM7lfc7nBmVyxudzgTG7ZXG7L4wbnv+99ZnO5wflve9/YXG5w/sveBzaX
G5xP5HKD8x/3Pq253OA86+XK+Xd7f9VcbnD+7XG+T25HHlfOTz/kOMjlynly
ucF58rpwfjrkb4PziVxucP7B/vPM5QbnT/bfx1xucD7ocn4q/vPkcoPzz/f7
NY8bnOe/y/lnfE9yucH5kL8NzidyucH5J/vPM5cbnH+8/z7mcoPzrJcr5+I/
Ty5XzpPLlfOjvyvyuHKeXK6cJ5cr58nlBucTuVw5Ty5XzpPLDc6zXi7f733x
n5+K//xY/OfJ5QbnX7Df+Zxf7I/DXG5wZl7KXG5wPujB+UQuNzhPzlbOk9eV
86yXK+fiPz8V//mx+M+Tyw3Ov2K/8zm/2h+Hudzg7O+WPG5wPujB+UQuNzhP
zlbOk9eV86yXK+fiPz8V//mx+M+Tyw3Ov2a/8zm/3h+Hudzg/O/772kuNzg7
7/uRudzgPDlbOU9eV85f7L+PudzgXPznx+I/Ty5XzpPLlfPkcuU8uVw5Ty5X
zpPLlfONfdtH5nLl/L74z++K//xU/Oe3xX9+LP7zTfGfJ5cbnCcfK+eX++Mw
lxucX+6/p7nc4HzQg/OJXG5w3vafZy43OM/nyXn2I+fZXs6jy/nL/XaL8+Rj
5fzl/jjM5QbnL/ff01xucD7owflELjc4F/95crnBufjPk8sNzsV/nlxucP5q
v93iPPlYOX+1Pw5zucH5q/33NJcbnA96cD6Ryw3OxX82t2QuNzgX/3lyucG5
+M+Tyw3Ok4+V89f74zCXG5y/3n8/c7nB+aAH5xO53OBc/Od3jqPwzYNz8Z8n
lxuci/88udzgPPlYOX+zPw5zucH5m/33NJcbnA96cD6Ryw3OxX+eXG5wLv6z
uUBzucG5+M+Tyw3Ok4+V87f7zzeXG5y/3X9Pc7nB+aAH5xO53OBc/OfJ5Qbn
4j+/ta/Flw/OxX+eXG5wnnysnL/bH4e53OD83f57mssNzgc9OJ/I5Qbn4j9P
Ljc4F/95crnBufjPdZ2CyT3qm47vhM8a25PLjXUj2N5crr5v7P/58e3N5Ybu
8Vwd395cbqxLwfbmcvXF4/jN5eqvs725XH36+L63x7c3lxu6fMzlqrO9udzQ
5WkuV53tI5erLn/Xy/X8RDeXG+cburncOH/QzeXG+YBuLjf+fdHN5ca/F7q5
3OCPHrlcOZ+jk8sNzm7//LhuLjc4o5vLDc7o5nKDM7q53OCMbi43OKNHLlfO
F+jkcoOz27terpzdz9Vx3VxucEY3lxuc0c3lBmd0c7nBGT1yuXK+RCeXG5zd
3vVy5ex+ro7r5nKDM7q53OCMbi43OKObyw3O6JHLlfM1Ornc4Oz2rpcrZ/dz
dVw3lxuc0c3lBmd0c7nBGd1cbnBGj1yunG/QyeUGZ7d3vVw5u5+r47q53OCM
bi43OKObyw3O6OZygzN65HLlvKGTyw3Obu96uXJ2P1fHdXO5wRndXG5wRjeX
G5zRzeUGZ/TI5cqZXIm53ODs9q6XK+eSW1E3lxuc0c3lBmd0c7nBGd1cbnBG
j1yunMnpmMsNzm7verlydj9Xx3VzucEZ3VxucEY3lxuc0c3lBmf0yOXK2dwT
udzgXHJS6uZygzO6udzgjG4uNzijm8sNzujmcoMzeuRy5UyOzFxucHZ718uV
s/u5Oq6byw3O6OZygzO6udzgjG4uNzijRy5XziWXp24uNzijm8sNzujmcoMz
urnc4IxuLjc4o5vLDc7okcuVszlHcrnB2e1dL1fO7ufquG4uNzijm8sNzujm
coMzurnc4IweuVw5P6CTyw3Obu96uXJ2P1fHdXO5wRndXG5wRjeXG5zRzeUG
Z/TI5cpZ3q6XK+f/Kv7w34oP/Nfi9/6l+Lp/Lv7tfxaf9k/Fj/1j8V3/UPzV
3xcf9XfFL/2P4ov+luN3vVw5o5vLDc7o5nKDM7q53OCMbi43OKObyw3O6OZy
gzN65HLl/HN018uVs9cP18uV88/YD7nc4PzTvR65XDn/hM8llxucf7zXI5cr
5x/t9cjlyrn4z++9vrpeLpwf3d71cuE8uVw5P6Gbyw3O6OZy5fyEbi43OKOb
y5XzE3rkcuX8C3TXy5Wz27terpy5H5rLDc7eP83lyvmzvW4uNzijRy5XzsV/
fir+82Pxn9d6uXJGN5cbnNHN5QZndHO5wRndXG5wRjeXG5zRzeUG5+I/Pxb/
ea2XK2d0c7nBGd1cbnAu7z2I/s5crpy/2OvmcoMzeuRy5Vz856fiPz8W//mD
/anr5cL5ndu7Xi6c37ofcrlyvnH/5nLh/KH4z++L//yu+M9PxX9+W/znx+I/
3xT/ea2XK2d0c7nBGd1cbnBGN5cbnNHN5QZndHO5wRndXG5wRo9crpy/RHe9
XDm7vevlytn9kMsNzu7fXK6ci//suNBcbnAu/vPb4j8/Fv/5pvjPa71cOaOb
yw3O6OZygzO6udzgjG4uNzgX/9nxd+Ry5Vz858fiP98U/3mtlytndHO5wRnd
XG5wRjeXG5zRzeUG5+I/vyv+sz6HudzgXPznm+I/r/Vy5YxuLjc4o5vLDc7o
5nKDM7q53OBc/Od3xX9+Kv6zflLkcuVc/Oe1Xq6c0c3lBmd0c7nBGd1cbnBG
N5cbnIv//K74z0/Ff35b/Gd9u8jlyvk7dNfLlbPbu16unN0Pudzg7P7N5cq5
+M/v0c3lBufiP79Fj1yunPVHfd77N/xV97nl0c+L7nOho/sc4+g+dze6z4mN
vhXd53BG97mR0X3OYXRz+aObIx/d3HPLO4/O+rDBX/2sbH9e9IuiXxb9uug3
Rd+Kflv0V0W/K/rror8p+n3RH4rOer7yD/2sbH9e9IuiXxbd97XDP/St6LdF
f1X0u6K/Lrrrl8D/ZB7f8988Pus1x/mvfl70i6JfFv266DdF34p+W/RXRb8r
us9ne/6r3xf9oeisly3/0M/K9udFvyj6ZdGvi35T9K3ot0V/VXTX14F/6G+K
fl/0h6Kzvnlcf9TPyvbnRb8o+mXRr4t+U/St6LdFd30Xrz/qr4v+puj3RX8o
OuvRyz/0s7L9edEvin5Z9Oui3xR9K7rrP8E/9Luivy76m6LfF/2h6Lw/IK7/
6mdl+/OiXxT9sujXRb8p+lb026K/Kvpd0V8X/U3R74vueAX+8XzY4W/oZ2X7
86K7rjr8Q3fdaviHvhXddWzhH/pd0V3XEv6h3xf9oei8nyPuv+pnZfvzol8U
/bLo10W/KfpWdP1e77/qd0V/XfQ3Rb8v+kPReZ+K/EM/K9ufF/2i6JdFvy76
TdG3ot8WXR8Y/qG/Lvqbot8X/aHovP8m+h/1s7L9edEvin5Z9Oui3xR9K/pt
0V8VXX/Y/kf9TdHvi/5QdN9XBP/Qz8r250X3vR3wD933IsA/9K3ot0V/VfS7
ousbwz/0+6I/FJ33S0X/qX5Wtj8v+kXRL4t+XfSbom9Fvy36q6LfFf110fWT
7T9PPf8N/3j++/A39LOy/XnRfc8N/EP3PSLwD30r+m3RXxX9ruivi/6m6PrM
8FdfOVF80ZVrRF85PHXfsz667wUf3fdYT7/7ougvi+57bUf/qui+N3R033M5
uu9lHN33CA7n4YbPuXKK6r8o+q+K/uvj+srZqL8s+pdF/6roXxf9m6J/W/Tv
juuT19SfnHxh6L4/fnTfdz595Iuivyy67z8e/aui+37Z0X0f6ui+v3N03zc5
59WcJ/qHvyr6r4/rK1+l/rLoXxb9q6J/XfRviv5t0b87rk+uUR9vcnjqkxsL
/WXRvyz6V0X/uujfFP3bon93XJ8cob7Z5N5Cf1n0L4v+VdG/Lvo3Rf+26N8d
1yefpx8V718f3feFj/5V0X0f8+i+P3h033c7uu9nnd8X604u/cuif1X0r4v+
TdG/Lfp3x/UPxYf5UHyYD8WH+VB8mA/Fh5l5d/X3xX94X/yH98V/eF/8h5nX
V39Xxtfvyvj6XRlfTz5A/amME5/KOHHyBOpvy7hmcgbqkzNofXWs7zX//VSu
YGpzBVObK5jaXMHU5gqmNlcw9YY+tbkCn/f2uXZzBT4f63PD5gp8nrA9l+lz
beYK5H8qVyB/11syVyB/17MxVyB/1wvZ0Kc2VyB/1w8wVyB/n882VyD/8vxr
PK9prgD+J3MF8I91rcwVwD/WDTJXAP9Yl2VDP9SRK4B/rNNgrgD+8Ry8uQL4
t+eM47k2cwWe/6dyBZ7/rh9mrsDz3/WZzBV4/rv+zYY+tbkCz3/XwzBX4Pnv
egPmCjz/y/Pc8fyxuQL4n8wVwD/WaTNXAP9YB8tcAfxjnaEN/VBHrgD+se6I
uQL4x7oO5grg356bj+e8zRV4/TmVK/D643p45gq8/rjemLkCrz+u57ShH+rI
FXj9cX0XcwVef1w/w1yB15+yPkE8T2+uAP4ncwXwj3UHzRXAP9Z1M1cA/1g3
a0M/1JErgH+so2OuAP6xTom5Avi3dSDiuTZzBV7/T+UKvP67vqO5Aq//rp9n
rsDrv+uTbehTmyvw+u96ReYKvP67Hoy5Aq//Zb2NWB/CXAH8T+YK4B/raJor
gH+sU2iuAP6xDtyGPn8dz8I/1oVyPAv/WHfH8Sz827omsQ6HuQLvv6dyBd5/
Xa/UXIH3X9eDNFfg/df19jb0Qx25Au+//h4c13v/dX0jx/Xef8v6MbHeibkC
+J/MFcA/1oU1VwD/WHfTXAH8Y13DDf1QR64A3rHOmb4H/GMdKX0P+Ld1emJd
GXMF9j+ncgX2P3f7OnIF9j93+zpyBfY/d/s6cgWHOnIF9j93+zpyBfY/3g/0
i+x/7vZ15ArgH+tzj590KlcA/1jn2FwB/GMdWXMF8I91Ojf0Qx25AvjHun3m
CuAd66Lpv8G/rTsV6ySZK7D/PJUrsP90PWlzBfafrtdrrsD+0/VQN/RDHbkC
+0/XRzRXYP/p+nPmCuw/y/pesR6VuQL4n8wVwD/W7TZXAP9YF9lcAfxj3dkN
/VBHrgD+sQ6luQL4xzp/5grg3dZR87k2cwVTmyuY2lzB1OYKpjZXMLW5gqnN
FUxtrmBqcwVTmyuY2lzB1OYKpjZXMLW5glWbKzjU5gqmNlcwtbmCqc0VTG2u
YGpzBVObK5jaXMHU5gqmNlcwtbmCqc0VrPfGkCuY2lzB1OYKpjZXMLW5gqnN
FUxtrmBqcwVTmyuY2lzB1OYKpjZXsJ7TNVcwtbmCqc0VDBdyBev9iuQK1vsA
yRWs99eRK1jvWyNXsN4PRq5gvc+KXMF6/xK5gqnNFayaXMHU5gqmNlcwtbmC
qc0VTG2uYGpzBVObK5jaXMHU5gqmNlcwtbmCqc0VTG2uYGpzBVObK5jaXMHU
5gqmNlcwtbmCqc0VTG2uYGpzBVObK5jaXMHU5grWc+3mCqY2VzC1uYKpzRVM
ba5ganMFU5srmPdi4cOsGh9m1fgwq8aHWTU+zKrxYaY2V7Bq/IdV4z+sGv9h
1fgPU5srWDXj61Uzvl414+upzRWsmnHiqhknTm2uYNWMa6Y2V7DWMzBXYB/t
PLi5Ascxzr+bK3Ac7/y+uQJ9LPMDG/psZ65g9muuYI7DXMEct7mC+Z7mCoaL
uYL2nitzHc6DmyuQv/Pp5grk73y9uQL5mwcwV7Dx17yBuQL5m2cwVyB/8xLm
CuRvTuNj1yswT+08uLkC+Mf8u7kC+Mf8vrkC+Ed+YEOHf+QTzBXAP/IP5grg
H/kKcwXwP7legee/8+DmCjz/nX83V+D57/y+uQLPf/MDG7rnv/kEcwWe/+Yf
zBV4/puvMFfg+X9qvQL4xzy4uQL4x/y7uQL4x/y+uQL4R35gQ4d/5BPMFcA/
8g/mCuAf+QpzBfA/uV6B1x/nwc0VeP1x/t1cgdcf5/fNFXj9MT+woXv9MZ9g
rsDrj/kHcwVef8xXmCvw+nNqvQL4xzy4uQL4x/y7uQL4x/y+uQL4R35gQ4d/
5BPMFcA/8g/mCuAf+QpzBfA/uV6B13/nwc0VeP13/t1cgdd/5/fNFXj9Nz+w
oXv9N59grsDrv/kHcwVe/81XmCvw+n9qvQL4xzy4uQL4x/y7uQL4x/y+uQL4
R35gQ4d/5BPMFcA/8g/mCuAf+QpzBfA/uV6B91/nwc0VeP91/t1cgfdf5/fN
FXj/NT+woXv/NZ9grsD7r/kHcwXef81XmCvw/ntqvQL4xzy4uQL4x/y7uQL4
x/y+uQK4Rn5gQ4d/5BPMFcA/8g/mCuAf+QpzBfA/uV6B/Y/z4OYK7H+cfzdX
YP/j/L65Avsf8wMbuv2P+QRzBfY/5h/MFdj/mK8wV2D/Y07DXAH8Yx7cXAH8
Y/7dXAHfO+b3zRXAP/IDGzr8I59grgD+kX8wVwD/yFeYK4D/yfUK7D+dBzdX
YP/p/Lu5AvtP5/fNFdh/mh/Y0O0/zSeYK7D/NP9grsD+03yFuQL7z1PrFcA/
1nc1V8Bxxfy7uQL4x/y+uQL4R35gQ4d/5BPMFcA/8g/mCuAf+QpzBfA/tV7B
zVzXyBXcTB9AruBm+gZyBTfTZ5AruJm+hFzBzfaP2lzBvLfBXMG8N8Ncwby3
xFzBvDfGXMG8t8dcwbw3yVzB0/Trrlcw7w0jV/A49w9yBY9zvyFX8Dj3J3IF
j3M/I1fwuP3jr7mCeQ+GuYJ5D4m5gnkPjLmCeQ+PuYJ5D1KsV3B4D1WsV3B4
D1isV3B4D5u5grdzPSJX8HauX+QK3s71jlzB2+0ff80VzPtDzBXM+1vMFcz7
c8wVzPuLzBXM+6PMFcz7u8wVzPvTYr2CeX8duYKnuV6RK3ia6xW5gqft8Ndc
wfRV5Arm/TaxXsHh/UKxXsHh/U6xXsHh/VqxXsGPD7rrFXxy0F2v4PB+P3MF
7+Z6Qq7g3faPv+YK5j0z5grmPT/mCuY9S+YK5j1X5grmPWPmCuY9b+YKng7f
N9YrOLzn0FzB+8P3Mlcw79UxVzDvNTJXMO+VMlcw7/UyVzDvVYv1Cg7vtYv1
Cn5w0F2v4PBeR3MF874gcwXzviZzBfO+LHMF874ycwXzvjhzBfO+PnMFT4fj
j/UK5n2V5grmv5srmO9trmD+nc0VzPvuzBX89PDXXME/H/6aKzi8b9NcwbyX
zFzBvBfOXMG8l89cwbwX0VzB0+F4Yr2Cw3tBzRXMe+rMFcx7AmO9gsN7GmO9
gsN7MmO9gsN7Ss0VzPsJzRXM+yHNFTwd9h/rFRzejxrrFcx13XHiDw+148TD
+1fNFTwdto/1Cg7vcY31Cua9r+YKpn/+2FzB6OYKRjdXMLq5gtHNFYxurmD0
rejmCkY3VzC6uYLRzRWMbq5gdHMFo5sr8Hk98wMfmyuQv7q5AvmrmyuQv/pW
dHMF8lc3VyB/dXMF8lc3V+DzMuYHPjZXAP/QzRXAP3RzBfAPfSu6uQL4h26u
AP6hmyuAf3tf98n1Cjz/T+UKPP/VzRV4/qubK/D8V9+Kbq7A81/dXIHnv7q5
As//8l70k+sVwP9krgD+oZsrgH/o5grgH/pWdHMF8A/dXAH8QzdXAP/2/vmT
6xV4/TmVK/D6o26uwOuPurkCrz/qW9HNFXj9UTdX4PVH3VyB1x/1h6KbK4D/
yVwB/EM3VwD/0M0VwD/0rejmCuAfurkC+IdurgD+oT8U3VyB1/9TuQKv/+rm
Crz+q5sr8PqvvhXdXIHXf3VzBV7/1c0VeP1Xfyi6uQL4n8wVwD90cwXwD91c
AfxD34purgD+oZsrgH/o5grgH/pD0c0VeP89lSvw/qtursD7r7q5Au+/6lvR
zRV4/1U3V+D9V91xvfdf9YeimyuA/8lcAfxDN1cA/9DNFcA/9K3o5grgH7q5
AviHbq4A/qE/FN1cgf3PqVyB/Y+6uQL7H3VzBfY/6lvRzRXY/6ibK7D/Udcv
sv9Rfyi6uQL4n8wVwD90cwXwD91cAfxD34purgD+oZsrgH/o5grgH/pD0c0V
2H+eyhXYf6qbK7D/VDdXYP+pvhXdXIH9p7q5AvtPdXMF9p/qD0U3VwD/k7kC
+IdurgD+oZsrgH/oW9HNFcA/dHMF8A/dXAH8Q384rpsrWLrvQZj7t+9BGN33
IIzuexBG9z0I05/5HoTRXxbd9yCM7nsQRvc9CKP7HoTRfQ/C6OYKhrPrFQxP
34Mwuu9BGN33IIzuexCGp+9BGP1l0X0Pwui+B2F034MwurmC0c0VjG6uYK4L
vgdhdN+DMLrvQRjd9yBM3+N7EEZ/WXTfgzC670EY3fcgjO57EEb3PQijmyuY
88r1CkZ3vYLRXa9gzh/fgzC6uYLRzRWMbq5gdHMFo5srGN1cwejmCub88T0I
o/sehLnf+x6E0V8W3fcgjO57EEb3PQij+x6E0X0PwujmCoaD70GY89z3IIz+
sui+B2F034Mwuu9BGN1cwejmCkY3VzD3Id+DMPrLovsehNF9D8LovgdhdN+D
MLrvQRjdXMH8vswVjG6uYHRzBaObKxjdXMHo5gpGN1cw96niw5grWHrxYcwV
LL34MJErmN9p8R/MFSy9+A+RKxi9+A/mCpZextfmCpZexteRKxi9jBMjVzDX
gTKuiVzB/L5av/135q/Hz/0v5lVnnD95B587/hvzgKMftg/906L/lfms+dzJ
g6j/7Lg+eZB4PvQvzNeMfth/6D87rk+eJfTPj+uTl/F5vcnXhP7T4/rkd0L/
vOhXx/XJE8Xza5M/Uv9p0f+t6J8X/aro/170P+FvD59Dniv0nxzXJy8W+mdF
/2XRvziuf9D3nuP/I/7w6IfjD/0nx/XJ64X+WdF/WfQvjuvv9Y1H38px/gHf
dfb/yeNx/cfH9clXhv5Z0X9Z9C+O6+/0Y0ffiq4fO9/39/icox++b+g/Lvq/
Fv2zov+y6F8c15/0P0ffiq7/Obr+53zu7/AbZ/tD3jn0Hx3XJ08denkf63t9
yNHL+1jf6kOOvhVdH3J0fcjR9SGHz+TffS7mwCf0Hx3XJ48fenlf6pM+4ejl
famP+oSjb0XXJxxdn3B0fcLR9QmHw2/x8eb49f1G19+b/evvjV7ec/qovzd6
ec/pjf7e6FvR9fdG198bXX9vdP290fX3hqd93dT2dVPT100dfd3U9nVT29dN
bV83OVv6uqnt61ZNXzd19HV/KX3doY6+bmr6ulXT100dfd2fj/d1U9vXrZq+
btX0daumr5s6+rqp7eumtq+b2r5uavu6qe3rpravI3e/+qU/He/rpravm9q+
bmr7uqnt66a2r1s1fd3U0df9sfR1hzr6ukNtXze1fd3U9nVT29etmr5u1Rv6
oY6+bp5b+eRxp09tXze1fd3U9nVT29dNbV+3avq6VW/oU9PXTR193e9LX3eo
o6871NHXHero6w519HWHOvq6qenrVr2hT01ft2r6uvXcmX3d7473dVPb101t
Xze1fd3U9nVT29etmr5u1Rv61PR1q6avWzV93dTR1/1H6esOdfR1h9q+bmr7
uqnt66a2r1s1fd2qN/Sp6etWTV+3avq6VdPXTR193W+P93VT29dNbV83tX3d
1PZ1U9vXrZq+btUb+tT0daumr1s1fd2q6etWTV83tX3dWneUvm58QPu68Q3t
68ZntK8bX9K+bnxM+7q1Lit93fik9nXjq9rXjQ9rXze+rX3d+Lz2deML29eN
j2xfN76zfd341PZ142vb140Pbl83vrl93fjs9nXjy0dfNz6+fd34/vZ1M09g
XzfzCvZ1Mw9hXzfzFvZ1M89BXzfzIvZ1M49iXzfzLvZ1M09jXzfzOvZ1Mw9k
XzfzRvZ1M89kXzfzUvZ1M49lX7fmvejr1jwZfd2aV6OvW/Nw9HUzb2dfN/N8
9nUzL2hft9Y5/+Rxr8+/C33dzFPa1828pn3dzIPa1828qX3dzLPa1828rH3d
zOPa1828r33dmic+fN+lz78jfd2ah6avW/PW9HVrnpu+bs2L09etdf7t62a+
dtvr6z0C+nWTb9CvmxwAfd3KDdDXrZwBfd3kEuzrJsdgXze5B/u6yUnY102u
wr5uchj2dZPbsK+bnId93eRC7OsmR2Jft3In9HUrp0JfN7kW+7rJwdjXTW7G
vm5yNvZ1k8uxr5scj33d5H7s6yYnZF83uSL7uskhhV83uSX6usk52ddNLsq+
bnJU9nWTu7Kvm5yWfd3kuuzrJgdmXze5Mfu6yZnZ100uzb5ucmz2dZN7s6+b
nJx93ZP+nM+96tfNvLDzsLO9ft3o+nWj69eNrl83n+s87OjOw848u/Ows3/9
utH160bXr5vPdR52dOdhZz/6dbO987CjOw878+nOw47uPOzozsPO8djXjW5f
N7p93ej2daPb141uXze6fd3o+nXDx3nY0Z2HnfPBedjRnYcd3XnY0b84rsc8
7By/ft3o+nWj69fN93IednTnYUd3Hnb0L47rMQ87+laOU79u9v/J43Hdedg5
P52HHd152NGdhx3dedjJw5TnYmIedvT2XIx+3eifPB7X9etG168bXb9udP26
0fXrhnN5DiX6utHLcyjR183n6tfN9s7Dju487JxXzsOOXp4HiXnY0cvzIDEP
O/pW9PI8SMzDjt6eB9GvG12/bnT9uuHmPOzo5XmNmIcdvTyvEfOwo29FL89r
xDzs6OV5jejrhoN+3Rx/ef4i5mFn/87Djl6es4h52NHLcxYxDzv6VvTynEXM
w45enrOIedjR23MW39PXsV5P5OhmPT717+nrXHcG/cm+jv1ELm7eC2i+7tPj
+uw39O/p6/xe5uU+Pa4vnxH9fcvXzfqP5tzGJzVf9+lxfT5X/X3J1z21fN38
e5lnm38v9PXv5fbPj+vvS77uqeTrHlu+bt6juR0/zsjXfXpcn+OMvNznx/U5
TvXle7r/F0Wf89l82pzP5t8+Pa6v89n82+fH9eUXo6/16dz/i+P6mm92++/p
6/heka/79Lg+30t9+ezu5+q4Pt8r9v/iuD7fKz635evmumHebK4b5tM+Pa6v
6wb6um64n6vj+spnuP8Xx/WVS/BzS77unX0dHCJXduAQ+bpPj+vDIfJynx/X
h4P6cIj9vziuD4f43JKve2df95v9eRCfO9d582NznTf/9ulxfV3n0dd13v1c
HddX/sb9vziuD5/43JKve2dfBx/1t/Z1cIuc2IFb5Os+Pa4PN/XhFvu5Oq6v
93q6/xfH9TVP4+eWfN07+zq4qb+1r/vN/jxr3Hz/4LqP+15Cn4f1Pu5+ro7r
6z7u/n0eFm7xua67CLc4nrvj+vp9epyuuzh5xfvj+uJmn+zzsHJDX9zQFzf3
7/OwcvNzXS9Rbh7P3XF9cfM4XS9RboWP44V1v/P5navj+rrfOe7weVjvd36u
6xl6v/N47o7rK1fkcbqeIXwahxgfXR3X13niuMnnYT1P0Nd5gr7OE4/n7ri+
zhOP03UFPU/K93W8tvpVx3E+D2u/6vNWruPH941xpev48X3jOF3Hj+/bvleM
E30e1vPZ8abr43k+O551fTzPZ/R1PqOv87kcv+PN1Vc4bnV9OfsKx7OuL2df
4fNlri/H8bfjjPGs67D5e3Gc6zps/l4c/7oOm7+XcjyON+d4Yjzr87AcT4xz
fR6W42mfG+NQn4f1d+T41Odh/R2V/TteW/P0jhN9Hpb9t/3E+MvnYf1dlO0d
L8z2TW99cvR3+nVsF/2Lfp37pa/Rr/Nzok/Ur2M/cf/Xr+O4ot/Ur2P/0Ufo
1/F5cf/Rr+Nz7df06/xc79v6dR5H3B/06/z3ok/Urwu/lX5Bvy58TO5L+nVy
ir5ev47jjH5Nv47j9D6vX+dxxv1Hvw6uMf7Qr/N8tq/Ur+P47Uf06zz+uE/q
1/F94v6gX8f3cnygX+f3sk/Ur/N72Y/o1/m9vK/q1/k94/6jX+d1g3GPfl1c
N+h/9ev8vvZZ+nV+X/sF/Tq/r/dV/Tr/nWMcrF8Hhxjf6NfBwb5Yv04O0a/p
18HBPkW/Tg7e//XrPC/CD9Cv8zrvOE+/zus84wP9OvlE36pfBx/7Nf06+dgH
6dfJK/oX/Tq46Qfo18nNcaF+ndwcf+jXyc0+Wr9Obvab+nVys+/Tr5Nj9Hf2
Zd7H7e/s27yP05fZR8R93H7HPsP7Jfd5r7sxj8L9x99f+Olct/x9hu/J+Wi/
G9zoc+1Tgxv9pv1fcKMvs+8JbvQX3o+DG/cxr+PBjeuZv09/f60vj/6dPjvu
d85j2496v6MftK+K+519CvfvuO5zf/M6Lh+vW45P4jxhnGHfH+cJ/bj9bpwn
9JX2YXGe0L94/47zhPuY54XX3TZuiTyCfp39qn09/XH0efSb0Yfxfe1TvB/7
fb3/OB6L85lxkuOQOJ/p9+2P43ymr7SvivOZ/sJ/N++HbVzk+MlxSPQV9PX2
u9FX2A/S98T9kvu847f4vTBOclwRvxf6cfvR+L3Ql8nVPqKNWxzf2Pd7PPbF
9n8ej/2O46X4HTHOsM+O3xH9pt/b/qj15fbv9qnu377M/j5+F/S5Hpd9Wevb
7O/8/53si+nnWr8c4xL7ZfqYNi6xr4r5cPoe9xO5jDIOtr+M7+W4h77B/Xvd
a76C/auf6/XEvsTP9Xrl/az5GeEbOf6gL4x/L8fB9AcxL+V1jPtQ841aH+9x
ej2xP/M4vV55X/c4231l9HZ9b35dnM8+Z0YfGeez/krpP7x/t/uix3vKr3M8
FjkRxgN+r8grlb7Q/qn1Hx5XzC99pF/X+oUYl5p/YZwT143S166+qfSFfr73
PX//ft9Tfp3f1z6u/Xs47pVDG7es9UBKf+/nhD/G9VcOMU/4kX6dHOxbPV9b
/67f0caxq38s47q4ztMXeP+L67z9DvcV+Zzy68Lfp3/3dy4fx23t/NAfaeN/
/38xP+k4EG7hj9EHyK318af8Ork5vvG6KTfHtf7emh+w7t/4dY13O3/b775d
F9v9od0P232+9Smtn2r9Xesra99a+t/wNZ2XcB5abvpj+HXBzXnIj/Trghv9
rH5dcKNPb/Mu4QcXP91/B++H+nVxv6MP0q+L+90Jvy7ud/T1+nXyaeOVtZ82
7wKfmkuwDzIH4Hni/PNH+nVxnjCOafOmka8r821xnvD7iHwdv2/7Wf266FdP
+HV+3zY+W59b5k39vp6/ka/j+7bcRjzH85F+XZzPV/u/MQ7wfOb8su+J85nr
VuTruK6f8utabiD6CvMnzk/bV+jrO09pP3HifhW/F/59HFfE74Xfpf1o/F64
3ke+jvut50XkDzgerwf2zR6P95noh+gL4ndmvs7fEdfjyNf5Oyr5Ca9bMX5g
/94PI19Hf+R9IPJ1/i7K/L331ehf6YOjTzFXxXOysZ6J84s+V+u6Jebr5jll
5yfZT6xPYr6O/cT2znP6vVyHxHwd+4/tzdfNc/dtnRPnm/ncWOfEeUQ+Vz3m
n2Y/bZ0T83X+e6HH87Acj3o8D8vxqMc8IccZ64fY13Kcsb39DccZ+/E+ynHG
/u2PPJ9dJ8R8neez25uv4/hjPz4Py/HH/vXrZv2WrWxvvo7vFeucfHpcj3wd
3yv2432S7xX716/je8XntnVOzNd53XCdkE+P65Gv87rhfnwelu8b+9ev4/vG
55Z1TmKeEA6xvofjWDjE9vYvcIj9OF8Ch9i/fh0c4nPLOifhL8/xtHVOzNd5
nXcdEvs1r/Po8Tys13nXFfF5WPiox/Ow8FGP52Hhox7zyXCL9TrsW+EW2ztf
CLfYj/N2cIv969fBLT63rHMS8xxwUw9/fI6zrXOib+J93Pefmq/zPu5+HKd5
H3f/+nVwi891XhFucTz6dXCL47QPnnVj9OvkZp9svk5u6PE8rNzcv36d3Pxc
n4eVm8ejXyc3j1O/Tm6Fj+OFeB7G+x16PGfi/Q49nq/wfoceuX/4qEdeHD7q
4dd5njg+8nlYzxPHTfp1nifo8Tys54nHo1/neeJx6td5npTv63gtnoe1X0WP
52H5vurxPCzfVz2eh+X7qodf5/nsOFG/zvPZ8abPw3o+O57Vr/N8Rg+/zvO5
HL/jzXgeyb4CPZ6Tsa9Aj+crOH718Ov8vTie9XlYfy+Oc/Xr/L04/tWv8/dS
jsfxZuQVOB71mOfmeNTDr/N35DhUv87fkeNT/Tp/R2X/jtfieVj2rx5+nb8L
x1/6df4uyvaOF8Kv8/z8f33y/wW+rpGD
        "], {{{
           RGBColor[0.880722, 0.611041, 0.142051], 
           EdgeForm[None], 
           Specularity[
            GrayLevel[1], 3], 
           StyleBox[
            GraphicsGroup3DBox[{
              Polygon3DBox[CompressedData["
1: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
auSG6H7aT3vN5Bm0Aj6ar69zzvj5Yu6JE3hNhV2Z7q1VyXNtOY4dXMz9Yqx2
Y8m9RDn99eQ5T7l1RfIsqGz7UHRtUTa/u7AHUO15JLr+qJ51wJfknLnaR9cx
Za6H8Sk5Z/zlyfOuMvLg6HmsCR4Yfb801i4keY68TfuV5Pn1du1+kmfNW7XL
SZ7FlanfTJ6zlakHRc+Qj2o/l9xrlYs/Tu5/2kt8mtwXtSsYm1yPtPsdk1wT
tSsenVwTtV+akFzXtBucmFwftfcbl1zjtCuelHx/asf4bfTcMkw7TjwLj8B7
onv6aPwbXqF7Tb+rwp5H9ezr6DlniPam0XPOUO1No+ei4fjZ5B6jPe1zyb1N
+8xnknuz9sNrkzNJRb5/Q/K8XhW/nzwDVdO+M3nW0Q7hk+SZQDucdckZphJe
n5x/KusaTM4bVXTtJOeNO/DTyf1eO9jJyX1UO9iO0X1N2Xx+cr/Uznxhcs7R
rmN1chYqjxck5xzlsl+jZ55RuFNh76F+WKSYZ5VxvD4V3eOUtfsV9leas57A
t+S8HxgbvfNUrhwXvfNUdn4yuodqVzC+sCdRPX48us9qz7A4ev+p/L40Oicq
jy+JnpGUc+dH7061E1iAW+e8K1gYvUfVfmBRdK7Uzm1Z9IyqPjwmek+rLDwa
35Vzxn8/eq7ur99R9Cw9QNdz9Iw9UPdsdP0ZpGsbP6PapXsHD1UNxKOid7/K
12/FQo5QXSrspfUeXo+F+Z/jy2MhF+jej4W8oHstFnKE7rVYyBp4Hu6p6xZP
jd5Ra4fzAm6Q817ixeg9tvY5s6Izy2N8/zPRebC9rp/ovNYWj4jOVi3xSPwA
bqVrPjpLdsDDo/NUCzyz8Hkqb70SnU26cjzTta7+xWvl6KytGvtcdE7siJ+P
zoad8KvR2aobfjl6fu6Ch0bntWZ4WHTWa44nRWe9Nrhc9PMm9f9p0ft87Zdm
RGdAvbfp0ft/7Yheit7za691uYL2QZ4rT8e/5LzPP62Ye6V65pDojNyUYxOj
M2lrPKFw/v/miPjfo47/dqqTo/N1O75nTnSO64HnRue4nnh2dNbrjv8XnTtG
6r6Ongc0FxyWd/bTtbQjOQ/oPfwvef7Q72Vn8nyjz2d38ryi38uu5FlEn9We
5HlIn5WWA9oL6P0cSN4L6D1MSZ759ENkeedMXYdF8s4zuj7/Td4d6Pp5Pnm+
1/Opg/LO//q5Ds478+uajHlnXd1HxfLOwLqPSuWdM1V7NyXncO26/07O8Lp+
RiXPrHqm8GLyTKNnQH8l5389Zwl5Z3LdI0fmncN1P36ZnOe1Vz8i7xyue/a7
5F2D9qXjk2doPVv8JXmG0zX/a/L8p9/v98l7Cu1ypybPvnr2tD95N6Hr87fk
vYnunW+T9xfa025Lnqu0g/0hOb9plzs9eZ7WM7ityXsW7XK/Sc6x2t/OSc4z
eq73dXKm1d54XnIu0nOxaclZS8/sZibnMT3veyU5B+pZ4cbkfKud+avJWVHP
7+YmZyo9Q8znvTtQX5uRnM30THB2cq7Tc8Ciee8mVHP2Je9TdM8ekvceRHXp
0Lx3Fqpvh+e919CM9EVyhtdzh9+Td0C6Lz5Pzvx6rvFn8l5GteWP5J2U6tLL
yflTzzQ/S94j6HnHrOQsqueSLyTPvnouvDd5H6Tasjk5/2uXXjLv/YXur/rR
uwj11p+Td1uaVR6I3j+oz94fvRNQ764TnfE1T25Pzg+al47Jew+i/nhs3rsS
zRX/JO+/VMfK5L0X0Bz4IOe5OOe+3zB616TeXROfnPNMVaswy2muK5H37kZz
SO3ofYjmseJ576TUaxpF7680Vxyd90ysOadB9M5Ec8Lxee8yVIdfSs4DehZ8
XN77Ds2fpfPecain/xKdTZRR7oveXWi+/Sp5/6JnFkflvXvSXLQleRejZzE/
Ju8E9SxjZHK21LO/n5L3hpot60XvPTRv1I3eh2geTnnvrTSzDU/eTeh53L3R
uxrNn/8HxUJO/Q==
               "]], 
              Polygon3DBox[CompressedData["
1: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
Qq34oMvcMyaMDWPiIX9PCQ+U1C7TsG9IE81T+9TEidtomtqmJk7UpqcwBTx1
lV6DPcOX6+Rge4l6FL2KHmbTJnPcWDiy5H5bI03Z/77P0xpqqv7fX7uJp9Xb
6lG3buLJ9eZ6zB2aeEy9pp50aJP5MUX//jmf9MB6YT3tdk08j95Vj6wX0uPq
dfWw2zZZI3qzTg/etSPXwN6qU0O7Nqbmq/0fVOmNqhFqhTnB2sM1nlfhj6qs
/bhG+Br8cZW1Q9eUXoc/qbLW5BrSG/CnVdaWrHneqdNDsBZyTfHtOjW9a43W
FNYW1ijDmtQQ1hLWHMObeGi9tDXGjk1qHGsda+L1mtTE1sbWsOs2qYGtha3x
NmpSA1kLWSNv3MRD6iWtkTZpUkNbS1tDrd9kvsxWp8fk83+8i5ar0Wq1NZe1
lzX4Bk1qSGtJPeiGTWoYa5m5+vPNHOX8PLwkvvTceu8lq9ReU5aspS5RpbbU
E+uN9byD/T1dvJ05ydxkTWJtYg2zjX+/S+7QA+oFreGt5a3h12lSA1kLWWNt
1aRGslbSH9pLtOeyg7FcpRdjj861Cnvo9u5c87WffHBJv881Qfujh5T0A13T
tD98UEn/zzU++8kHlvT3zHnmvgNK+m8+E73amCXP6uou99p7bj1tTn7S+C7J
1WO1yX9Xwqf08sz0km3JszQG9Z5jl8TmdSX6/FZfv/TA/tbhJf1x16CtHXYq
6We7hmT/bOeSfrlr1tbmu5T0f30GetmxSp6Na6zWFjuW9Mtdw7Yft2tJ/8w5
prdtSubeOG20/mr4tF40xlx4a4n22HO296xfHdSmZ/1cP7/02vwGf8u1Jdr8
QJdnM7ROf1HNNVZvLNFiNddYvqlEiy/v4pXNSeamB7usv/jMffZdG795Dcef
3ovGm5tvLtF+PaexfGeJ/1Az1YLbSrRUD6oW3F7iLydtowV3lPjHEV20Sw1T
W6+Ap6ySE8wN5gC19ZaS3KB/f7evF+ZX10D0//pj/bwxppcfoyT2XBOzn3hh
ST/dNTP7jxeV9MPtwdiLsafi2oI9KXtT9uTsHdqzGtaf//YK7dHZq9O/2ku8
qkv/dtY6/Sd7MvZm7HHZa3fNyX74ySX90Cs5fna1r856kjnA3D5ySW5YpeTe
+wxcC9NDP872OSXeum3jv0fAJ/f6PbA6PSrXPuzp2duzx+jahye3d2XPybWS
0drk3kv4/nG9eN4n4HNLvLA9O3t39ghde7Hm1C/sWVLP6cH19seW+AlzkFr6
t5LcZM5R+yYoyUVqprXNaCVaqiZbW41aotVqsrVSKdFqNcnaqC7RKnOitdMo
JblSzTRX9kq0VE+uN7+gZD1EzbVWG71Ei9U0tW5QidaZU80F45bkWnOGuXrS
klzimqHrFSeV9KfNkWr/+CW5U001t4xXorV66Mfgs0u8tTnaXDJRSe42Z5lL
Ji7JZa6xur5xYkl/25rF2uWEkn62OU1tn6Qk1xnDQ/vzwbUD692v6vQcrQfV
BNeLbijRik+71DLWMOqjMXtPHc00lj9j/D7jv856uXroWtLTfT0xJq3t1FRj
9Ysu/vqWOuv5H3bxM9YE1gbWlPqvQ0tqTfPV7P18Yv76pMt8scZyfrmG4lrK
qlXW3v/Xxc/dWud9gs+7+Nmb68xP48H3KYb04+/jLn7VGtN4+KhLbWNN4/23
52jv0R6WvUrXeFzrcU3Hd5H+28VvWxNZG/3UxZvqSdXDX7p4WT2oemOMGqvG
uGvB4wzEG+lR9CrW0NY+h5XU1q7hLdzP13+t7fXyLpA9atf+XNNdpJ/fXevt
BuJ19EB6Id/fWLR//a4VjzUQfdWj6dXGHohX06Pp1dqB6KmeSm816kD03RrK
Wuplfs/5VXoAPh9z6Gx9/6GfULNm7fsZe+k/cvxzVTy7+WLMgei5nk5v5xq0
7/q4Ju7a9BgDyVd6QL1gMxC91/Pp/UYbSL7QI+uVnWPOtetLctn3XfTHOepc
dY3Pdx18Z8C1PzXd3Hd/idY7Z527zhHf/TBn3l3nHObSdznfdVVqVOshe8z2
mu0xu9Zuf2ikOj1L+0n2ZO3N2rO292sP2l60PVvXgl/p0juxZ+LztedgfB1X
Ul84R52rxoja6js2t9Wp+Xz3xndsbocfqfLuje9EuH4xpGR97xvO/6j5s45/
UdPvqLNPrXefY2qMXudU+K46OWHsNjFpbBpDvntjDBlL1ji+q+Maqe+S+I6F
a6dfd7kW/4Z/69su5/acntt3NHyXZbMq7274Tobvimxe5V0N35nw3RLfgfFd
Ct/R8F2YLfv5yh6LvYcjSuo1ewb+vTNL9MI1X9/V8p0W14JdQ/ZdmeFV1pa/
6nLvvGfeO3sW3ouzSuLVNVzXcn3/yfepvuzyW73n3nvfAfFdEN/J8V0f39nx
3R3fEfFdL9/Hcu3HNSDXur/rci+dQ84l13Rd23WN2HeBXAN2Ldg1ZN9l+6GL
lloD67d8Bvberiq5f/8H/Cuf6g==
               "]], 
              Polygon3DBox[CompressedData["
1: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
sBXsOLvEwszXVGRi+VlhNkDd/wA1lSoG
               "]]}], Lighting -> {{"Ambient", 
               RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
              "Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{2, 0, 2}]}}]}, {
           RGBColor[0.368417, 0.506779, 0.709798], 
           EdgeForm[None], 
           Specularity[
            GrayLevel[1], 3], 
           StyleBox[
            GraphicsGroup3DBox[{
              Polygon3DBox[CompressedData["
1:eJwt2XXAFdUWhvFv0LMxZqv4iQXS3UhLd6m0UgIijXQpUqKC3YpNqKCECgpK
2BIKFi0hKioliIhd93nve/6Y+/2cO5wzZ2bvtddau2jfER2H58nJyVnG/5zC
300hJ+fMJCfn+0xOTsvcnJwr8ubkXJaPA1fFFXEdXAVXwLVxZVwel8Y5+GLc
FnfADXBZHHFBXAYnuABug9vj+rg1bofr4ctxV9wQt8JX4rq4Bb4c18F18WW4
Ei6F/+O+L8LtcA/ON8Ed8DW4GW6Pe+Km+ArcDTfCV+LuuDEuif/lcy7EJfBP
+AJcFH+Nz8OV8SVcXwxXwgVxUVwVF8YlcDVcFJfCVXAhXBxv5jOK82x/4tle
yvkinC/J+S74WtwKd8K9cQvcHLfFtXFH3As3x7VwJVwOl8Nn4UtwcXyc7zgf
F8M/4vy4Oi7PNaVxeXw2LoQr4ny4CK6Az8GFcU1cEZfFNXAFXAZPwPfhIbgB
ro+r4nq4Lq6M1+Pz8ccxJ+cDnIs/wu/jFH+I38Nn4g34bXwaXovX4fx4E34X
n4HX43fw6XgdXovPwxvxdlwd78E7cA28Fx/GA/BxfASPwT/hH/BYfAJvwBfg
T/ABfB0+ig/h/vhHfBD3w8fwTlwTf4m/w1fhI/hDfCH+FH+EL8Kf4Y34Yvw5
boIb4xo8n5l4Lp6Ib8fv847u5Zo78Af4PtwUt+aamlzTGDfC1XEz3AbXwg1x
A3wpboQb4mq4Pq6Hq+DPcCm8nc/8GBfHW/A2XA3vxltxObwLb8Fl8Rf4E1wC
b8WbcRm8E3+OS+Md+E68lnu+H2/CBTi/GX+KS+Jt+Ed8K/4F34Dvx0O5t/H4
Xjw4n5/9YubFmOBn8x9+J3hctMUXBr//y/FFwePiCnwxHo3X4On4PY5z8ZaM
x9eVuEDw+38T3xL8/t/Ct+Jx+G18G56uMYsfxMe5t4f471+557v5e4jzizg/
T+MCL8O3aOzgh4LH2st4fPBv/RQ/HDyOXsLjgsfREjw2+LP34WfxgxpTeB7u
ixfh0cHPexiuHfy8r8e1gt/nUFwz+BkPwTWC39twXCf4vQ3G1fFLqZ+JYo/e
+Y24afA7H4Evw59zFMPHMx6/1+CyweO6Jy4TPC+74ZLB868rLqHnja/CxfDL
fFc+fG4+z/urcXHOX4pvwE2CY0A7XDB4/vXApYNjRndcCt/I839Av5nPGYgn
6f/D/fCN+lx8C34aj8fT8VN4HL4ZP4nH4in4MTwKT8WP49F4Bp6jZ4En4Uf1
LPA0/AQeg2/Ds3Xf+Fb8DJ6AJ+NZeCQehe/A/fDYXI+VgXgcvgcPwiPwTNwX
j8Z34v54In5Y7xiPwXfhAfgm/IjeJR6Jb8fX4eF4Br4WD8O34T64Jx6mZ4qv
xzfj3ngonoZ74SF4qt4r7osn4C54MJ6id4wH4cl6H7gz7oNbam7iG/SO8QB8
k8YB7o8nahzga/F43Bn3xiNxR9wDX695iHvhEbgDvgYPx+1xHzwKd8Ld8VDN
bXwVHohb4254iOY/7ooHKy7gq/Eg3CafY9sgxk81xs+xXM/Pk8zf7/HV+Ifo
9bAJ15wVHDsfxdcEr2OP4J7BsfNh3CM4ps7CvYJzkxfw8OBY/jjuExybH8O9
g3OZF/GI4NxnIR4ZnL8swMOC1+em+Ozg97YB3x38PD7E9+ge8RP42uD1/zk8
JHhNmIcHBa8Dz+LBwTnafHx9cH70PB6KO2bjyajg97Ae3xWca6zG04LzoFfx
DcE51zI8ITgHWYmnBOdEHfElwbnSa/jG4HzkDTw5OOdajicG51kr8E3B+dfr
eFLw+/8I3xs8vlbhqcHv8wN8O86TjSdFg/PELrhIcF7ZGRfOxknF/JuD875O
uFDwWHgfzwweO+/hGcFjZy2+I3h8rcN3KhYxJqYmXu8Ub47hV4Lzvmb4nOB4
sw0/ll1rtEY8EDxmN+H7g8f7RnwfPsHRHOcLnh/b8ePBc24LfjR4Pm3Fs4Ln
0w78RHCc24mfDJ7f3+DngufoLvx08DzejZ8Jnut78Zzg+bcZPxI8j7/AT2XX
Na0vc4PjwR48OziW7MfPB+duD+HuwbHqWzw/OPZ8hxcEx7nv8QvBse0wXhwc
w07gV4Nj2wH8YnAM+xm/hiPPd1riHENr/hG8JDjmHcQLg/OCo/jl4BzzB/xS
dn3Umrs0OO7+glcEx+Z/8FvBcf03/EZw/P4drwyO6yfx8uD4/Td+M3hN+BW/
Hrxu/IlXB68bf+BVwevDv/jt4HXmL7wGH8113vAzv2UYx1eJc5uvtM7h/1hD
7+aa9bp3zt+DN2jNxw/jT3WPeB7eh1/Aj+DP9P34LrwOP4Cfwbvxc3gW3qp7
0TPEH+rZ4/vwR3re+H68Ub8br8ancp/v4lfwSc6vwK/h3/EqPBvvwc/jZ/F+
/KLmQq7rwFl4Lv4SL8AP4U/0vPGD+GM9SzwH78Xz8dN4F34WP4W/wPPwLlyb
+/kK78XNNP7wl7i5xhzeh1tozOHduA7+Gu/HnfEhvAc31dzA3+IuGov4C1wL
78Ov4t/43pX4G9xJ40zvCLfUOMaP4+0aR/gxvE1jBD+Jd+K5+GvcSmMaP4F3
aFzgNTij+IIfxVs0jvBbOK9iGX4TB8Wj6HdyBmPjW8bGMs7/yn+/wfkV+E+8
JroWHM81DYPryHG4QXDtOBbXD66h++IKwTXfdbhicK12K748uIbrjysH13n9
cKXg2v123D64dp+J2wXX7jPwlbhYXudpjfE3HNVxElz7VsM5wfXiAFwluKac
jtsE14i34LbBte8E3Cg497sDdwiuWW/DVwTnjQNx1eAaejSuG1xbj8H18Ms8
n5/5u5zn8xz+Fi/EL+Fj+DW8AB/AS/BS/At+Ha/E/+C38Rv4b/wWfh3/hd/E
q/ApfN87eDn+g/Or8Xz8PV6MX8AH8Ut6R7me57nkG4VznTcr11VdkJOHuaa5
xPnv+LuI6xfhI3gpXoKP4lfxYvwDXoZfxIf0W/FCfBi/El079uI5lAvuczyI
uynmR8dn5Z/X4M8Sx6Ke0XWHatvTOSYlrvt6RNcpqn8vj653VNu2jl5DtZa2
ja6JVOeewTE5cX13JseUxHXf0Oh1ROvJ36lrB9W2c/F5ievWP1PXLKqF/0pd
j6gW/iN1/aJau010LaZaW3OoFc7P78pEjz2NwX+4fmTiWvI0jpsS15J5OSYm
rkn3p84TlC/8lGZzA57JodQ1i/oJ10fXWcoDx0evicrJp0Svrcqxf85+jsbj
t6lrFo2H71LXOIqf36eufTTfX8WlEseKKzjeSdxn+D11Xaa+R/foPEH5wq+p
azH1K0J0/aUa/EDqekfx4WDqOkhxY1r0uqx65N3Uc1Bz8T1cI3F8viy6llQ8
LKs4mziW1omuoxXrSkfnkMol1/NvL0s8hs+Pno+al4pDtXHQ3+hcUTnjh1xf
L/E4rBtdw/4/xqauwTVHdqauzbWOfITrJx7n23HrxPFtB26TOA5fwHFn4p5D
fa1JiXPyetG1s3opb3J9lcRr4oUcdyXu7azkfIXE62BBjvsSryOXcNyfeI1Y
wzWVE69T63CdxDHhA1wr8Xx8H9dMHEPWpv7tmuN7cfvEsWI5LpM4zr+GSyde
I97A5ROva6/jconXtRW4bOL1YjWulHgdvIjj7sT9qFWcr5h4nS3AcW/idepi
jnsS95QqcMxOvDapj9Ibl+e9/Ja6xldPTDFPv/HfjGOMxuEvGccSff7fGa/h
JRQTMl6TL9GzzXgNL6R5l/GaX1DjJ+OYpHv+J+OYp9/7a8ZxS8/8L61Z3EPJ
xLnH4dT9AfXiXkndz1RvQTFYz+23jOOlnsnvGec4hRVzMo5teoZ/Zhzz9Az/
0P2n/r3qByrG67tOZpz7FMAH8NLUv0vrrGJ5A5wGx+8WODd4LdW4PSM439G7
PjV4TdAYyASvJ5pHpwSvDw1xDI4jytvPDc4dNH7yKnfhe/Mn7nEpL7hQ4y3j
PF9zM09wvnMx/i7j3Epz7bTsGqrncyLjNUdz5MzgdaYuPp2/U/ncrxP3AUbg
zxPX9b+krmfVO70jOh9WL+K26JxZ/Y27omsW9RJnRPep1AO5PTrHVr9iQnTt
oD7bzOi8XT2TO6PzbfVAjqRea9RrvTs639aadlM25isHvyG67lDv98boOkJ9
vInRNYh6NdOj6wX1W8ZF1zLqh9waXReor3JLdB2hPszJ1DmAYu9R3Cdxf7hf
dK2qns/o6PpLPZYx0fWU+ieDo+sv9TpGRtdW6rEMj66D1CcZko3DWrNGRddc
6qUMiq7X1BsZGF2TqjfSJ7p+VK+jf3Rtrn7IgOjaXH2S66LrR/VA+kbXlf/v
gUTXsOpNjY2u6dTP6RVdh6rf0hu/m7hPUh4/kzjX3ZB6PCgHqMgxJ3HOqfz0
fMWQjGuCDN6Vca6qMbkbN47uD2i/42w8KnGfv1Q2ziv+q27QGv0F17fKxnmt
+y2jexTad2gR3btQz0c1ylmKz1x/ZXRPQD2Wdnhp4p5M1+gegvo2zaN7I9qz
ODX6nWodbxrdl9D+S7PoHoj2L66Orv3VI3qb3140cU51SnRuqX2TbtH5idbQ
b1LPTc3Rr1PX5to/Uu/5VLxT8S11b0d7QC+mjm+qX75K3W/RntR/+NrE+zX/
ps6ltY9TjuueTlyD5InOn7Uvk0Tnz9rTUX12Nj6Wcb6fi3dk3FtS3B7IuRNp
tl/B9c+njhWq+xQf1YPdxvUvpI5pqtG6RPdP1AfrHN0nUR9P9cqTGqvB67HW
8b7BNZDW+n6KW1w/N/EeWc3ofpT22qpF97W0XzYpO5c1f7V3oZywRfA+iXKq
5sH7J8qpmilGZnMGfadqnQvwvozry9PxNxm/V73fS4Nr0NPwV5yfzL89nrhn
3iC6T6X9NdXBAe/hmquie0rqAVaP7q1pv081ZcSHuWY2zydJ3MtvEt3L0p6d
as0UH+SaTtH9JfUVO0T3o9QbbB/dy1JvsGN0P0q9xKrRPT3tG14a3evTnmal
6Lxa+ymqIzUG+vM9jaJ7a9oTrBHd39MeZWX8QOJ9mSrRPRPtzam+z4u/5N7u
ia4FFD+1R6Q5PiB4b+cUvJ1rcqJrN+0JLky9RquO/hF3SLxPmhtdD2qP9bzo
ekp7r/mj82Tlb6qP1b9qHVz7Km9viT/P5o1aoz5J3ZfQnmC+6FpS+4abUq99
qkfOia65tN93PM320/CxNNv3y+faXbVAKz5zTurxr32rZ1PHKPUrVJcrx+sU
HHcUfzoG18HKCc/Hm7NzWfem/kRLfB5+J5tLaM1Ub0C5X+fg3oDyqC54H9c0
Trw/+1bqPQvtyapGV07YNbi+V351dXAvQfnVVZp/0TW19qk/S13Pam/3U1w1
8T7pxtR5heqyMtFzUH2GranvU/2TJbhI4l7NltS5h+rTBalzAPVhtqWua1SH
qv9xEd7Pe1+cOhdS/2dX6j0s1f6LUudm6quof6Cc+QL+3e7Ue1iqVfek3jdR
DXtWdL2sPdmPOd8ocS08P/V3qS9UKLo2155ssei6W3uFxaPrfe0VFomu2bVX
WDS6h6D93BLR/QHtOZaM7hto71J7lXnw1oznp+bpZvxc6lihfldhjpsT78s/
k9170rX/A0YGTA8=
               "]], 
              Polygon3DBox[CompressedData["
1:eJwtmnXgVVXahX8/lbONs2cGsRuxE0TsIBQ7wG7BLuzu7u5CsLtbxxm7W8RW
7O7W0e95vnX/YIbHc+7l3HP2ed+11rt7j9x1+KiJurq6zuJ/JuH/b6pdXUt3
d3VN2nR1XdOLP/AAeCL4MvgqeGH4fz26usbC78Gnwhtw/A34FfgAeAj8HPwO
fDK8Hvwa/CC8IdwHvg9+Az4MXgV+BR4PHwwPhV+EX4UPgleEX4Dfhk+C14XH
w+PgA+EV4Ofh1+FD4ZXhl+GH4I3gOeD74YfhjeE54X/Dr8GHwCvBL8Evw/vD
g+Fn4VvgZeHJ4evgG+Al4Qa+Cv4vvAE8O3wv/B94bXgm+B54NDwX/CP36zz4
fngNeHqO3wlfDM8J/8Dxc+GL4Dng7+Fz4Btbvht+kfNnhS/h+NzwTxw/H74C
XhD+A74Evh0eCFfOvxG+GV4Gngy+Fr4VXg6eAr4evgdeFZ4Gvg2+G14Fnhq+
Fb4PXh2eDr4Dvg1eHm7hG+Br4cXgieHL4THwPPDPXM8F8OXwAvDv8Gj4Tngl
uBfn3ww/AK8FzwjfDd8LrwZPC98OXwcvDk8CXwHfAQ+Fp4Rvgu+CV4angm+B
x8Lzwr/w710I/xteE56B43fBU/bs6uoJv9wj9/Myjs8P/wZfDF8JLwT/CY+B
r4b7wn/Bl8LXw0vAPfi+K30+8FJwga+GL4Xng3/l/Ivgd+FT4PU5/jrcm39/
BLwAvBD8JsdPgIfD4+AL4dngb/j82fAQzr8C3pnja8OD4cvhneC14PM4f2b4
M84/Az4Xngn+BD4dPgXuBY+Dj4PPh2eBv4DPhC+AZ4W/gs+CV+D7r4R34fuH
wcvDY+Ht4dXhofDV8K7wOvA5fH5G+CM+fxq8C8cnwJdz/AD4APhr+Bb4WHhF
+Cp4FDwcHgW/D18BHwifzvdNA7/J950InwpPBY+Hj4fPgKeF34ZPgtfm83fD
h/D5zeA14Tvhg+BN4IHwpfAO8BrwtvB4+EJ4T3gN+A74QHhjeBX4FnhfeH14
EHwZvCO8Jrwz/DY8Ft4fXge+Dz4c3hIeBt8DHwpvDp/N9c4Af8D1ngqfCU8H
vwufDK/F+XfBB3P+pvBZHJ8ensDxU+DtOP4afBHH94KHw/fCh8FbwDvAb8Cj
4X3gVeFb4f3gDeBd4Q/gK+GD4J3gt+Ax8H7wfPBe8HLw4vD88N7w8vAS8ALw
PvBAeEl4QXhfeBC8FLw0fA68ObwyPA+8B7wMPACeF94TXhZeDF4WPg/eEl4V
Xg4+Hx4BrwbPBW8L94P7w7PDI+EF4YXhmeBh8MzwvHAfeCt4IbgvPCe8DdwX
XgSeA94aXhjuB88N7w4vDS8KzwwPh2eB54OXgc+Ft4BXgZeCz4Y3g1eC94W/
gG+Ej4L3g7+Eb4KPhveBP4dvgI+E94e/gm+Gj4F3gz+Er4IPhreHX4cvhveG
94A/hq+BD4V3hN+EL4H3hfeGP4Ovh4+A94Q/ga+FD4NngdeBZ4Xnh2eD14N7
wwvCu8MfwVfDh8CzwuvCs8ELwCvD18K7w+vBe8GfwtfBh8MrwdfAu8Hrwm+x
Xk+E14FfhVfj+G3w/vCG8Lrwg/Ax8Ai4F9wb/pb1PRs8Vc/0t+/g3vDUcD/4
b3h2+Hm+fxd4cT7/JPwsvBM8AH4c/rbN8/9HyfP7us16qSXr47s2z/+fJffj
+zbr418lv/evNut1ppJ6PFHN+p+1ZL08A+8IL8q/9xg8cc37MFvJ+nq/zf3t
hueBf2izfnuW3O9Jat6X3iXr+Wl4B7g/3/co/By8M7wY/AT8AjwKXgJ+Cn4U
3hSeG/4P/Ai8CTwX/AD8GLwZPA/8X/hxeHN4XvhB+El4S3h++GF4Gu7vInAX
3Ad+guNbwPPBD8FdNe/rzCXv24ycv4K/p8nvmx4e7P2E54IncP5p8Ibwm/CL
8K7wkvDT8AycP8T7Dc8NTwv3937Bc8Avcf5u8FLwM/BT8PbwIvAj8HScP8jn
C88Jrw7fDh8AbwR319SvWUre//farP+/O9e3OOefAW8MrwD3g4+C14CXg7eA
n4FPh3eGN4Yfh0+Ct4M3hB+FT4C3gbeBX4UvgPeAt4bHwefDu8Nbwa/A58G7
wSPhl+Fz4V3h9eCH4GPhkfD68MPwcfBW8EbwY/CJ8LbwlvCL8NnwLvAG8CPw
8fDW8Aj4JfgceBS8JHwWvCk8FN4EfgI+Gd4e3hx+Gj4N3gneFH4SPgXewefX
5nl/13k+L7R5ft921stinH86vBE8xPXbZj180+R9/W+b5zuhyfv8Tpv6+lfn
+T3QZv291+T9n9Cm/nSVrI9F+f5j4bU5PgjuDx8DrwUPhDeDn4JPhXeE+8JH
wqvDy8ID4OPgYfBgeGH4CHg1eBl4EfhoeE14eXgJ+Ex4E3hFeCH4cHhVeGn4
NNbX1PDr1KMTekXDqmXVjHdz7T9x/D3+fhnnf8Ox29rol1eb6PPb2+iV8U30
8K1tvm9cEz/gd6if3mw6+rhN/3+9iX68q41+eKOJPr2jjX54rYm+vRTuAT/W
RC8dyfX87Porqe+Xc7zATzTRG0dw/CfXY0n/ub+N/nu3ib4dC08CP9rk997b
Rl++3UQP39NGX77VxG/c0kafvdLEv1wGN/DjTfTZdfA/4Oeb6Es1mlpNjbQ+
1zK4RPuqgeeueWY+u+OtcfD1fP6f/P2FJnr4WrjCzzXRr9fALfxsE/17cxu9
+3IT/3QVPDn8dBN9eiU8GfxUEz12BTwp/GQTvXU1PAX8TBP9fBTX8Ivvd0k/
Phz+0fetRE8dBv/g+1miXw+Bv4fPKtG/X7bxN21J/f2ijR+ZoqTeftzGbzUl
fvTDNv5okhJ//FEbf9OjxL9+0savlZL6/2kbvzRpSX/4rI1fm6ykHzzWxg99
2sSfvNrGv/7SxO+Nb+Nffm3it15v4xd/b+JPP2/jVycv6SdvtfF//2vib30n
fTd9Z+fgt7/Zxl/+2cTPfdDGr01c4o+P5Zzf4YtK9Mtojk8EP9zEnxzD8d/g
C0v0xoE1/uH0Er19NPyr9bdE74zh8xPDjzTxBydx/G94bInfOA7+A764RI+9
1ibf+K2Jn72vjR96p0mecSLn/wWPKdFrJ8D/gy8p0XfHw3/Co0v03xtt8oE/
mvhLa5a1yxo0Z02NsdZYw/rU9CB7kTWnb42H0kupqYbWjidq4rFWrPF4ej09
4OAaD6IX0QMOqvE0ehs9ysAaz6Z302OtUOMZ9Y56uiE1nkhvpOdYt6bH2evs
EdvU9Ah7hT1h25qeYG+w5m5X42n0NnqQDeB/1dTfBUr0vh5Rr6jnWq6mRlur
7Tnb12hGtaMacyV4JJ/bA74eXgV+v0n2YQbyYJseojbs053eYo9RG9pD7D0P
cf5LPbKGXEv2KLWNPcjeZY9Ra6ox7T2zl2gLNUaPGs+l99JDrue7zZ93+ful
/Leve0VjqDX0iMNrPKJeUY+5To3H0mupedeu8Yx6Rz3YmjUaWi19Hbwy/Hib
fOCzJvmaPdherAbZgeNHcH1nwM/BO9VoFLWKPWv2mp5ub9eTLFLT8+x9apre
NZ5Gb6Om/UdNz7P3+Yxmq+lx9jo1Qr8az6Z30/MsWuNx9Dp6uv41Hk2vpkdb
rMaj6dUugBd3vXK9I+1F8BI1mkBtoOZaqMZD6aX0fANq1ojeUI3p2lFzqb2e
hXesHY/YRNP1rPGgelE1d68aj63Xvh/eqMYD64X14BvWaCK1kZptZI2GUkup
6bau0XBqOTXWVvAe1iH43/DGNRpMLabGGlGj0dRqarQtazywXlhNP1WNB9YL
7wdPXaMZ1A5qjlngRUqyRDPFaWo8kF5IDbh5jefWe+s5poSfaKMtPm+S1z3a
Jk/7pEne+Eib/O/jJvnTV/w5i78/z3/blM9/CZ/ZWT+bwF/0ynp6tvP7fmyT
V/Yq0df+/tM768/7qYZRy/gO7Ax/C9+qtoEPgs8oyXKsydbmaWvy3kVL/J+/
0d/avyTPajt+YL6SfNdr8F7vWXJtXvN/4L1Lfovr32zl7c56mK4m3x1Qkvf6
TvpuvtN5P7xGf/tRJdeuprB2jSrRGtYoa9euJbXL3+hv3b1kLfnO+my3L3mX
XUPWqt1K1pY1wdq4S0mtGFazNnYo8bfWBNfajiW1wmvy3h9ZOtdq32zSk+xN
B3Xqy5kl99Ya7NrcuaQ2W1NcmzuV1Bqf4QPwXiXP1ppp7d2ypJZOX5OPL1aS
r89Yk2cvUZLHrwbfaG2HP4PnrcnPV4Tfca3CN/huwJ/C89T4+RXgt3ulJlub
t4I/sdbAN9kb4M/h+Wry/aHwu/D8NXnnSvB78JLwRfYa+ANrEzwaXh/+yFoA
X2IvgT+Gl4IvthbDH8IL1MwXVoYn9ErNtnb3KcnnZ6iZFyxekq+WGr8+Z8k8
YLIafz13yTxh8po8YZ6SvP/3Nv55+hK/rQZViw6B34JnqpknLFnib6eo8efz
lswX/mjjt2co8bt/tvHTM5b42d/a+PfpSvKLSWvyi7lK5hk/t5lPTF2SL/zU
Zj4yVUk+8EubecU0JXnHr238/7QleUFTkyfMUTJvealJ1qsGVgurKdTaW5Ro
DXuStWe7kl5lTVZrrFVSq63xapG1S2q/PUEtsWZJr1CzqDVWLdEy1nh7/Sol
td+eb+/bsEQLqEnsjRuVaBV7hr1/WEkvsaarjRYuqfXWVLVk35Jaa01VS/Ur
qbV6AnvRoBKvsG9N3nZySX5mz1LrrFHSy+wh9sYFS3qLPVMttXpJL92vJs87
pSQ/fbLNvOKLJvOep9rMV75sMi95qM285sMm846H28x3Pmoyn1CzqF0+aDIv
e7rNPOGrJvOSV9rMM35qMq8Y12ae8HOTecv+NXniqSV53wE1+eFpJXntM23m
b183me+83Gb+8mOTecpLbeZ1PzSZj9jj1YqrlfR+NaVaZ/MSrWnPUVssVNKL
1Kz26oElWtYabC0+vKRX712TB55Ykp+rWcyTDyvRMvZM84/9Snqpms/88tAS
LbhPTX55UkmevWdN3nl8SX6yV02eeUJJvqJmsrePKB0tVZOfHluSp+xWk28f
U5J/jKqZJxxdkpfsUZN3HleSx9jDzWP2Lenteha1z/IlXsaebJ6yT0mvViOY
9xxQoh3s6WqbpUp6vZpKLb90idZSg6mtlinRZmo2tdqyJVpOD6C2Wq7EG6jh
zbM2LtH2any15iYl2l/NrtbctETLq2GcXxxYom3U5Ob/h5RodTW7efLBJVpe
Te/84KASra8nUPtvVuIV1EjmV/uXaCdnYs7GpuzO7NEeZ5brNdr71HhqvXU4
//1e8cDOFnwmemM9sLMcn4neeMqSLN9M1GzUmj24o5es5WoQ9fh23dEmZhJm
4z4zswo1xPBOHqC20NOadVpT9brqq2Edv2Wt0KOZxfvO6N2siUM6+staaQbj
bFINZTZjje3f8QPWXj2+2btrUO+vBzX7ds3qTfX0zrZcY4d09NClHb1kb9fT
ms1bk/S6ZjBm7a5xsxlrtlmvPcBabs03W7aG2wv0tGb5vmN6XTMDs1t7ilmC
HtbZgjVLb2tPMAu359kr7DlmqWoue5EZkrNIMwCzJT2vs1wzA72wPcxZuZrB
3maPdPauprB32iOdjdtj7Z3WGGe3enprjz3W2bsa0N6r53eWa8ZhFqDmc7Zv
D1UL+o6aVfoO+u76DpuNWjN8t31HzU5dk767ZgzO0s1QzB7MKJwNm4GYXdhD
3RugRrS3WkOdXZuZWFvVpM4m7OlqVT26s2AzDb27GYezeDMTsw81pnsL1EBq
T2uos+YVu1Nb1VjuZVBDqb3MUJydm+GYrVjTnUWb4Vjr1STOftVIahU1mXsl
1EhqNTWF2bkaR62hRnDWoWZRO6hJnAWoWdQqagyzdTWI2kONtW0TTaX2UiNt
10RTqZ3MwL7v+Gf1gBndDx1/bXZnxuWs2AzS7MtM0r0K9jizSvO5ER3/Z+9V
E27V8XtqRTXk1k00ntpSDbhNEw2nNlSPfNfx39YTNdXIjn9Ua5nJOTs24zSr
M5NzVmoGalZn5uQsQ41mFmXG5SxEDWT2ZebprNhM1SzUDM/ZqRmp2Z7+VP+t
5lB7qEH3bKJp1aZmTuM69W50J0+w/rlH4JI2+l3/8y18ck3GNL6jr8yezEjN
hs1AzU6tieYZ+n1rpRp2ryYaW22r5t27iSZXC5tpje34Gf2UPX5Mx//Y+9UA
zv7ssWoDNY6zQmu+2kfN4uzXHquWsSc727bm26vtqc4m7GH2WvOPQR3/6mzK
DNLZjxrWbNKe62zDHmMvtkc7e7an2LvV6Ps08QBqdzMwZ6FqFrMxM7ObO/7Q
LE3PcETHr+sl9BhHdvy23kNPclQTj6NX0VMc3cQT6jXMfN0LYUZtFmzG614H
M2izXzNg9zKYUZsNm7m7N0ZNZhZvBu1eATN5s2nzpsM7eYHawkzavQ9mgGbV
Zoa3dPyufs1M1r1CanSzWjNY9xKp0c1mzdSd5Zvxm7Wr8dwbYwaq9lOjuRfH
zFTtpoZ0742ZodrSmaN7QZxZOos0g3eviRrPbN4ZnLNvZ5zO5r5vshdrQKce
mRG4t8dM0+zAjNe9KGa8Zr9qWPcumemqbc0Q3Luk5jRbMINyr5cZsNmUmYJ7
W9SoZg1qWvfeqDHVus7YnLU7U3X25kyzX6d/u56cCbgXSQ3trMCZgXtp1NDO
EsxY3TumJjZ7dQbr7NkZqrNZ8z9ng+Z35n3OcJ31O0NytuuM11m9Mz5nv2bg
zkL1SGbjzmT7dvSGs1pnuM7+nfk621WzT9y5f2p5Nbr3c9HuaHdnLO4FMqNz
9uLM2Fm6MypnyWZqZjvzl2Rt6hv3fpmpqF+cybj3yMzGWc0PnP9CdzIa842f
a2rJ/9cU+OOaWm0Nt5Z/Ao/pTg23ln9UU9utqdZWZ3Ldnet1VvdFzbtoTbG2
mLF7Pet3J3tXAzs7VNOqjZ0p9Olcr7OGiUr629DO+d/V5BdmRuYzznx7dvqf
s+7va/IWMybzCGd2znadGU7ofF/vzvP0/E9raq010dr4QU2vsIfYS5wJOtt1
huis8MOa3mFPsbe43nt2vt/f+6UapDs1yFr0eU0ttcZaa535Opt2Zuks2Bl8
7879UH9+q4bsTo2x1nxWU5vtCfaGb2pqjzXJ2vRVTa2yhlnL3u/oX3uYvezr
mtplTbO2/R9CVHvS
               "]], 
              Polygon3DBox[CompressedData["
1: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
8Swp+0LOqf/wXiZh61zv/z+ZKiQ=
               "]]}], Lighting -> {{"Ambient", 
               RGBColor[
               0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
              "Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{2, 0, 2}]}}]}, {
           RGBColor[0.560181, 0.691569, 0.194885], 
           EdgeForm[None], 
           Specularity[
            GrayLevel[1], 3], 
           StyleBox[
            GraphicsGroup3DBox[{
              Polygon3DBox[CompressedData["
1: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
zty7+BkvzFzLf4QXZO4/rMHzM/dSPsQv4oQX5jv3VZyfiCdoneN38Qv4cMU0
/Dwujefi1zP3iKbimZlr/OWF77PqgvdwrZxr26b67znXm00yxzvFvcbaq3Ou
nZvhOjnXRyfrZ+dc2x6n7ybnWrgWrp1zzd4c/5i5pt7Dv1WJ64/i47lWIee6
tTaumHNtWwd/nzl/3sX9UzP3oBbgtzL3lObh2Zn7DO/jOZn7GB/g23nPh+On
lFtm7olN4/q7mfsYK/QdJu/dZ7MW5mbuk6zi+uTMfapZ+O3Mfa1FeFrmPtIS
PCVzf2kOfjNzn+0dPClzD2omfrkwF1I8uyX57z1F/Ypw71X7crfw81Of6plw
Dqd69t3w81DdvbfAa1j1yK4Cr3PVbrPCz0P1+Jzw81ANPjccv/R3zQ+vMdXd
M8Lfu3oOs8PPRvX7y+E4qH7Lq+H4qF7E1eE1o37gc+HYrZr3snCfWnnChPB+
oDp6fHjdqtZ+PrzfqF5+KRyv1at5LRyX1d94MRy7VbO/Eo6/6vPMC8d99QQW
hOOC+gnLwnmVaqKnw++H+hinhnttytWXhvMn9S5uCj8/9bhuDj8/9TNvDL9P
6undEl4Pir03hN8t9dPuCq9Dxe1rw+tfPdVrwnFBvdZnw++0+gmLwvmfehRL
wvmceikLwzmi+gn7ChwfVSdeGO7vK+/aU+AYqtpzZ4H3S9X1fxW49lC9vzic
L6pH8W+B92PV+H8XOI6rP/BPgeO46v1bw++69ogXwvuf+iG7CxyXVfMWhOt/
5WBlw/045Vcp3FvXnl4x3KdQPhbhul35W9twH1x1Tblwj0O5Vvlwj0N5dYVw
b0K5WZlw7145WNVwH0E51RHhHrdyucPDswGt2crh+l81Qo1wf0G5UPVwf0F5
1zHhPoVyp1rhnrtyp5rh/r7yq0rhvoNyyyrhfo3yw2PD/QvleEeGexDKM6uF
+x3K5TqH9wP1z88J9/pVu70eznXU38uFe/rqJ0wN5zHq0b0djoPqE74Tjmvq
I00Pxzv1MCeGcyD17t4I50zqH04Lx1P1J6eE8znFjZLhWYX6G2+G8zP1EieF
czj1/c4NzzCUh5cOzxhU+x8d7sUoLz0vPNtQvTMzHOvVA+wa3lPVnz87PMtR
bTs5nC+q31gqPM9QH6N9eD6kuuCtcK6pXuVt4bpOOcnt4RitvGVweP9W/jM0
vOcpR3o8XH+q7/pYOK9Vr/XJcC2qfuBD4TpTfeP64VmX+gZjw3ut+rqnh3v0
qvFPDvfl1Zd4MFxDaqYwIlxLq79RLzxXUz/hhPBcTf2KhuH+u+rxxuF+uurx
U8J9fPU3moT74Kpt64TnMepdFAnPnNR7OTE8n1NfYlx4v1cPNi8871Efpm54
rqM+xqEC517qGbYIzxjUo7gnXG9r9nFxeD6nOq5puP+umvr+cN2recqocC2t
mciZ4dmk+hXNwj169V6OD8881FepHZ5dqU5pHp4lqLfTMjy/VB/jf+GZovok
DcLzP/VzWoVnmerVDA/3I9QvGhmuyTW7uTvcs1BufG+4htfs5oFwDa+5zxnh
Oaj6IZeEZ42qbbuE8znNdO4L9wU0u7kgPItVHdouPJ9TjfloOMdSP/9ggfNO
9e4GhPdmzT6uCM+AVY93CueXmn91CM9uVV9fHp4Bqw/QO5wvavbRMTwPVk+g
bziv0oyjfzgP0Jzl0vA8VfX1leG5sur3XuF8UbOV7uFcTfOy68I5qGZkd4Tz
GOX/d4bzEtUIg8I5h2ZSA8M5iuZrPcN5p+Zx14dzPs3prgrnvprNPRXu42g+
0iOcR2oWdlx45qS6sk14Pqpe2YEC5/rqYzcKz5/U83ki3FfSPKV4eEarPuSY
cI6rWckj4VpUPc/R4f6L+thFw3NZ9RiLhWe66j0+HK5pVY+UCM+A1cPcX+Aa
Q/OLo8J9YdXm/cL5nGZV54fn2eo/9Ann5Zox/VfgukW92ZPCMzPV+IeF583q
A58WntWp1zcknGerzsrCs2r1jfPDM2z1e1uH59zq750VnuWrx/h/QfhIIg==

               "]], 
              Polygon3DBox[CompressedData["
1:eJwtmmWAJEUaRIdeYDKBqaZgcHf3xd3d3d3d3d055DgcjsXd3d3d3d3d772L
/tFQr7K3u6Yq84v4InuSTXZcZYdOX1/fqfxneP4/bdPXtxjH95e+vp9H7+ub
cLCvb26O/8u50xkbF54JPh0+Hv6V11QcP9zf17ctY2PzmoHx0zh3LGOTdfv6
tuJ4COf+zdjU8PZwgc+CB+Hl4M/490fCU8Hbwf2MnwlPAW8DjwD/B54c3tpr
9RrgKeFt4RHhM+BJ4A3hP/i8U+FJ4Y3gP+HT4NHhZeFP4SPg37jGqeFH4O3g
v+EZ4CfhneF/4Bnhp+Bd4D7+/Uzw0/CucAeeHX4B3h2eGN4A/h0+BW7hpeGP
4cPg4eCZ4Wfg3eCJ4PXh3+CT4Qnh9eBf4X/BE8Drwr/AJ8GT1b6+2bx3nPsX
1zYB52b1XsEn+Sx4LcLxvZz7kec3DbwofB/8Ezw+75/Fe8W5Exn7mdcUHD/I
52/N2E/w5PAD8FbweLxm9t5z7gTGxoFn9FnCx8G/8JqS44d4/zaM3c/rUMa/
4dxLjI3N9a/E8VeMH8vYWPCK8JfwMfCY8ArwF/DR8Bjw8vDn8FF+P7w2/BN8
AjwOvCb8A3wcPC68FvwjfDw8PrwO/DN8Inypc4brOYZzO3E9Y/GalePrOPc9
92Mqxhfh+ArOXcDY8vz7dzjelXP3Otd5rcjxbZy7hvH54I3gJ7yn8PzwxvCT
rhl4Zngl+Hb4WucOvAJ8K3w1PAu8MnyH1+Bcg5eHb4Gv8trgVeA74evh6eBl
4ZvgK+AF4E3gp3xG8KY11/pO734vyfXfzfFqXgPvXQq+B17d74SXhu+F1/A7
4OV47c7x+5x7hX+/BON3cbyqf7PXxmsPjj/g3GuMr8r3bQo/7ZyBl2V8F/ht
+EV4GXhn+C3XhGvLa4Cvhy+Bp/Ea4Bvgy+Bp4WXgG+HL4ZHgUeE94O3gVeB9
4U/ht+E54HXgh+A74KHwWvAD8G1wgRt4N3gb+A+e8dfMhVXgJeHZ+fuO7WRO
ODfmgI+Dp4Avg4d2M1cmgy+BZ+O1Jsf3c+4W/z28NvwgfDs8J7wu/DB8p2ut
5t55D2+AR7YGwHvC28PTe8/hm+Er4bnh9eFH4bvheeAN4Mfge+AVuZ5vO1lT
ri2vyWs7mnM7Mj4vvCH8uGseXoH3v8vxbpy7z7nHa0+OP+Tc64yvDO8DfwK/
Ba8E7w1/DL/p98F7wR/Bb8BjwtPBp8BHw7/7DDl+lHu6vesRns25ynt+4F5P
xrkFvHecO4exUeDR4L3gHeAB1zR8CLwnPIT7NTq8d+/v6Vrz4MPgfeDGNQ0f
Cu8NTwLPB18EnwVPDM8LD4PPhCeC54EvhM/w/jpnOX6Wc79yfXM2mQvPwL/A
s/H9i3J8Jef+6/3ntRrHz3HuN8bnhVeHn4d/h6fg8xdyrnDuPMYmheeHL4bP
tnbCCzq34HOtN/D0Jfp6DDyqNR4+HN7X2gkvDF8Onw/3+5leC+e+4/sG1bDe
8z6QsYXgLeEX4MfgheGt4Bfhx11/3axN1+hd1g74GXgz+G6vjdcWHD+v5lkv
4B3g171Hrn94e/g17xG8NLwT/Kb3AF4K3hF+w3sEL8fnP8vx5py7x1rKa2uO
X+LcE4wvDm8Hv6pmwqOr0fBR8AHwaGomfCS8P9yqifAR8H6+v2a+uyYPcn0x
vg38shrtXOT7NTCVc2czthivbTl+Rc22fjK+E8cjc+5cxqaFd4RHgs9RbzzH
8cmcO9J6YU3y3jK/d2Dsv22enZ5Gb/OXa9i/jfGd4CfaPAufgc/iyTbPwnvg
vXiqzb3wmr32p9tcu9fotT7T5lq9R96rZ9vcK5+Bz+Ix+LlOnpnP7vE2z845
4Fx4rs2z8hn6LF9s86yswdbi59s8W5+Zz+5Urv9ceCru6y3wy4y/14kGqAWv
tqn11gxrxwttnrVzwLnwShutUBPUhtP4vPPgqfm8W+FT4HPgKeGb4ZPhs62v
8E3wMPhqeI4aPVJDnK+r1eita9C1OLRGfy6Cr4HnrNGrm5ro2RI18+3GJnq3
eM383pX/n8y1/cO5jxh7qY0WqVFq1aGcOx4ei/ddBx/SpP6PCV87GE+lt5oc
vhG+EL4Knr1GTw+DT4DHhq+Hb2uj7XoEvcLBTfRlDMavgQ+HT4THgW8YzBx2
Lg/CV8OvtanN1lxr76NtvIQar9bf2cYr6An0Bu/An7t24NXhd+EvrA3wGvC3
fP748K3Mz03h9xj/0rXD+JrwN4yPB9/M+Cbwd3pItQzeDP6A938NH8L71x6M
p9BbbFajP2+10eL9GF8Vfh/+Cj4YXgv+So+oHvB5G8Ff2zPAN8Ibw2/z/s9c
67x/NfgT1zh8MePrwF9YM+Gr4Q3gz9UgtRJeH/5STwlfC284GI1VaxerqXdv
tNEyNU6t+1GNUBt5/5bwI228m55N73ZvGy3XU+gtHm6jpXo8vd7dbbRfj6HX
uL2NF9Tj6fXugu/rxCPoFe5o4/30eHq97/n+CeE7+f7N4YfaaLuarXY/AD/S
iQfQC/yghsF38/4t4DfbaLUeSC/0YBuvoEfQK9zXxgvpQfQi97fxIuvBc8H3
tPFGeha9y+tttF3NV/tvbeM99ah61YPhheF3+qOPh7bpH97rjx6e0sZbdXl/
5f3/aaPlarRafTp8cCcar9af0Ua71XS1/aw22meNt9af3abWqwFqwZlttF+N
VCv/3cY76SH0EifDu3bi8fR6J8E7w6PAI8LntNESNUatOQHeHB4OHt71De8C
D8D98DHwxvBf/H198HHwpvA/cAc+Ht4M7uP9Q+Bj4U3gvxkfDj4R3gLuMD6C
9RXevRMPq5ddpUk/91lJv9tFf5aEP+TfHwI38BLwB/DB8KjwUtYu+FB4RHhu
+BV4b3h4eE74JXhPeAg8B/wivAc8AjwX/DK8l/W5jZfWg+pFR2N8GfgTxg+H
++F54FfhfeDdud4D1UfW01XwAOMLwW8zfhA8Crwg/BZ8IDwyvAD8JnwAXOH5
4Nfh/eACzwu/Bu8LjwTPD78B7w//qUbDj8M7wue28QZ6Hr3PNW28lJ5L77Uv
3MLD+uOP9m/jl+7vj/88HF65E8+v998PngS+rz/93sVtell7YHvhi9pkGfa4
9rq3tPHm9mT2Zhe2yTLsee19j27jB7/n8/7h845o4ye/gf+ED4BngZ/tT/99
YJt+87n+9N9HtfGX38F/wwe18c/P9ydvOaxN/vJ+f/zmkW3867fwX/Ahbfr7
d/vjZ69t40X1kHrJS9r09mYCZgNzdqN3U+ox4SvaeGU9tF768jZeWQ+tl76s
Tdajh9ZLX9fGm9oj2ytf1cbr6vH1+le38fp6Xr3vlW28uZ5YbzysTVZgZmR2
dHObXtYeyF7oxja9oD2gveAFbXoNPbPe+Tz4X514NL3aTW16RXtie+Pz23g3
exR7levh6zrpOe09b2jTe9pz2nteCl/QSaZltvVCydpzDc7XpGZaO63Jd9kP
cP9O4niakvWgp7V+rl3j78wA9Ecr1eiFPZh+a8Wa+q5HVY/WqfF/9nT6tRVq
6rce1fq+bu35wSb6uH6N/9Oj67fWqPF/en792Zo1/k/Pr39Yq8Z/6rHV5/Vq
/KQZgf5nlRo/YY+pv1y+Rm/MGPQbi9T4C/9m/ehyNffCnla/umyNvthz62eX
qdFLe2L96JI1+qdnsp8yT9FL6QEXL/FQekPzq0V6/Y55lRmIerxwjV6amai/
C9Xoq5mJerdAjT7Zgzpfx6t53vbg+u2la/TNDEb/u3KNvutxlyjxnHpfe0bn
3/S1N/+b6P88NfPPHtL5NV3NeriY17glNXHzJhmo82mamvljpqE/mKtmvpkh
6ddmrVkv9oD6w5lq1oc9ovVlhpr1YY+s/s5Ys57MRNTruWvmq555sRJPrJc2
c3W9TVSznszgXI8T1tQnMyL9wLw168OMQT8wX816M2Nybs9fU9/skV1/09as
dzM+6+3ENfVQj2reaL6od/WZ+ewmrakv9rTWk/Fr1quZr+t/gpp+yYzR+jRJ
Tb2135+01/+ZB9jz6pdmqalfZjj2U0vV+C17Uv3uBjX9jZmO/uDvnv5v28RP
/NPzI2Ys6v9wNXrnOb2Kmux7rcHWYmuu2eiWTfzLnz3/8Bk8Bnw571lvMD2q
etHW+Al7cOvraDX6pOaoPZN1koVs3cTv/NXzF/a06suoNf7GGm+tH9pJ1q5G
qBVqxP+z2yZ5+OslefBCTfT61ZL8d+Em+fVrJfnwYk3y0zdL8u4HSrJoM+np
7Jeb5KlvlOTR9vD2AxvV9HM+A59Fp8Zfmbnpx/pq/Is9vv3FhjX9o5mefn/j
mv7Snm/Jkh7NXtCMxvo9So0fNMOxfx6o8X/rNnkW3/b8lD3UnCU9qb2VPdkc
JT2kvdp6TfzLdz3/Zo82e0lPae+2fhN/+H3Pf63dxB9+XeLP7OnVs3Fr9MOe
bGhJj2evtmYTP/hVif9bp4m//abE/5lRqS8j1/hZe7i5Snpeezt7MHsx79F7
rqWS7NwMfdwmGY/+oanxs2Ya6mG3xv/qSfQmehizaTVf7V+8k+xp6SZ+9J0S
f7FsEz/7Xol/MNPUj75d4nfsyezN1JB3nEtN/On7JX5lmSZ+9t0SP7F4kzz+
rZL9ETMt+5uZa/zWQ03yo9Vr8kQ9n95Pzzd5E0+oN9QTTtHE0+nt9ICTNvGE
ekM932RN9ljca3HPaKCJZ32xN1/H692/53vr0/VkxmjW6B5N0ySTMZsxg+w2
8Yx6RzObUZvswbzQW1/e//9nNP3xmG0TT6o31ZNO0sRD66X10OM3WfOu/UH4
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
MwazHjMC94rsqc0O/gc1xlO+
               "]], 
              Polygon3DBox[CompressedData["
1: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
FWHv6T3IrrHmrEy4q1hma5TnM9lY9j9JqzE7
               "]]}], Lighting -> {{"Ambient", 
               RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
              "Directional", 
               RGBColor[
               0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[
               0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[
               0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
               ImageScaled[{2, 0, 2}]}}]}, {
           RGBColor[0.922526, 0.385626, 0.209179], 
           EdgeForm[None], 
           Specularity[
            GrayLevel[1], 6], 
           StyleBox[
            GraphicsGroup3DBox[{
              Polygon3DBox[CompressedData["
1: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
s3it4S/jzF5z8Rmc1muNXYVTvdaEldh75QWv4qxec/QpnOKV+1muVcUrv7a9
STVb31K1R2ji9TzsGbX0eq625xrutLbYM12MS6Rqj1PV5oTX813itHZZ/690
in/2jD5wet6Wczb2WtPsWaxwGhP2TFc5rRUzbIw5rSW2ppxziitP4ltOOdHn
uLBX3vQFLuKVg/yIy3rlPp/hQl75xRpcxmsd/hTf5pVTrMZ5vdbqj3EBr/X5
E1zQa33+EOfz2rfY/iWHVx60FpfzymV+xuW9cqif8O1ecW4Jvu4U55bhm05x
bim+4RRHF+NrTrnbazjyyvVex7FXTvQGzuaVE72Js3vF7Jk2Z51yrh9waa+9
nO3pinnlnl/iorh3pLylJXPu0eQ+2p6b5aQbcEX7rkhjyfKQc5HGm+UwZyON
K8tVzkcak//PYfCKhHKzy5Hu0/LYS5Hu33LXf/CihHKVi5F+o+WlFyKNT8uL
rkT6XZYn74vUJ5Y3/hgpVtt6tDZSPLdcYnuk+Pb/tSbSmLF8ZlcyD7E5tyPS
fLS1aU2kuG15xdXkPtT66Xs8OJFcr5P7bht3P0VaX2xN/CHSGmFr/XeR1gJb
648l8x8bF/sjPWvLsQ9Eer6Wn/eNlIO1ps/7R8rT2uKRuAbujDvgArgpHhEp
5+yEu+DC+H78GC6OH8CPR8ppH8TdknHVnmMnfBtuRntnXAg3x6NwTdwFj8G1
cVc8GtfCj+KjkeKJ5duHIs0120ccjDRubX9xJFKMsvz8cKR4YvuRgbgCbs/n
DIuUJ3fA/SLlw23wzkhj1fKH4ZFy7460D4iU07bDQ5Ox3eJBV5wtoTx2W6Q1
3fKErZHWccsTErFirO1H0sWav7Z/SYM/SGgPkj7WXLa9RtpYc9n2Kamx5ojt
O32sOWJ7sYyx4obtUzLEihW2D8oUK+bYXsnFijm2jyuQrNtYTE2JFU9sL5M7
Vi5RHsex5qbtuXLEilFlcPZYccn2UCFW3CiH88RaI+7A2fD3Ce0Hc8WKM7fj
vLFyjztx/lj79Io4X6y5XAHnjBWjbO9WOda+uCGuEmsP2whXirV3boBLxNqP
V8eFY+3xK+PbY+2178IlY9UBauCisWoFVXCpWHWAmrhcrD11XbyF5zU5oVyx
TKy9fG1cNtbevA4uHav+UAsXj1UfqIaLxaonVMXlY60dtoZUjbU3b0x7hVg1
gfq4Wqx9ehNcPdZ+/25cBG/BlXDtWHWk+3CdWPXAZrgi/gfXw5sj5ZOWo9aM
Vbu4F9eKVdNoimvEqiHcg5/3qvO8Y3vMoHXU8p+nveb467TnDqpBWL/lCapB
WF/lCqovWJ/nCKpfWH9mD6prWP9nC6p92P1nDqrX2LjKG1RbsX7LGVSbsL6K
g+ojNh6yBtVBbJxEQfUOGxshqMZh/VwuqE7X3J417u5VR70bT/aa103wJK95
eg+e5jXHmwftty2GNAvan1ucyRdUA7JnXR+P9Vp3GuLxXvGwPO7hVadtgMd5
5fZ34dFeOX8jPMErhjTGE73iZ/6gmqCNn1+89n1/0M/rvPZou3CxoBq0jZMH
gvbqVn9716se+A3XFA6qX9v4LxJUj7Y5Uiio3m3j6sGgvbTV8cbj3V7734l4
j9ce+aGg/b/V8SbhQ1775XF4l9deeAL+w2t/fV9Q/cLi/21B9XQbe0WDaug2
N0sH1a9tvD3jFcPf4J5LBdXHbUwWCKpr21wrGVS7tzFZMKimb3O2TFAN3cb8
x161xLV8TvGgurzNl4+Se5Afab8/qMZha0TZoDq7zZESQbV7m1P3BtVWLIY3
Daq/2JpVD4/xOlPImcxDivPv3KmqjZfCx73qDFf5rq+8aukb8ddetfRf8Rde
dc5fcEhV/bmE19psa/RBp3612vhRnCtVteuStO30qo0foX2HV838EP7dq7Z8
GK/3qgPsxl96nTtswJlSVZfO45X3W/6/nfZLXvWHjJaXedV+P6P9gldtJH0y
P7R8IJ3lD171h9+5Zq1XvWIHvuJVZ3C8ZkxVzTw3vuxVo8jEa4ZU1cNzJXM5
y1Vy4vSpqqsH+31Bv9PqJxu86o17nMamnQUcs3yba/p71XvvxL28zjiq4gFe
+UYtPNwrr6iGB3rVimvjEV45RgXc2+scpBLu63VuUheP8qpjV8R9vM5H7sA9
vc5QKuN+XrXcOnikV710o1c9ai/3WZP2IV55Tg082Ctv+cyrlr6Oaw571Y4u
Os0tqxddcJpPVp857jQX7ezjBK7O5wzyyoWOeNWaLtF+zKt+dQW/4lXP/xgf
9apZXcZ1Y52FWTy0PNLyyfO0v+Z1FvAp/tmrdrQTZwmqU9t6bX1p51Cjae9D
+6de9aWBQWPd6m+Dg8aEneMMCBp/Vivuhz/3qk31Dfr9VmvqHzQfrK7VNWj8
2flCb/yJV42rG37D6yzgVa9zjU+4h15Bc95qZT2DYp+d3fTA73idWz2O3/I6
d3sMv+l1vtAdv+11zuWDzgAsP3k0qC/svKNzUD/a2USHoLXQzl/a4We9zmg6
BdVY7TyiPX7O67xmSNA8sbOe1KCzBMttBgXFAquldwn6PXYm0jGoNmTnOG2C
YqKd17QKqtXaGU3LoNqunem0xcu9znEeCarh2tnNw0E1UzsraR20Tts5Toug
GqudGc0Jmm925pUp6NzCcjZbl+xMcLLT3PJ4utN8SsUznca7szzWaT5lxrOd
5k0mPMWpv+0M60uncZoFz3WaQxnxJKc5EeGFyT2y5flLnX6T5e1vOvWlnSu9
7fSs7CzsK6e+tzz/LacxYudKPzmt27aPWOY0Nu3c6meneWxnoBOd5noGPMFp
72+1nWFOuYDtKRY5rdV2RjPDKS+wfccCp3XezlWnOcUPO4cd6zTv7Vx1vNP6
YGepU51yjbR4hNPabmdV85xyBDurmuWUIyTwKKcYlh6Pc8oLbN80xynepMNj
nOaQnYutd8n9LR7pFFey4vl4VlDMtfPHi1515gw2D4PihdWZhwXlE3b2Ojpo
LbEa9ZigtcTq2DaH7Mzxaz5zdlB8t/PQUUExzmrIc4Niup2rjgjKV6yePDQo
jtgZ7sigOG7ntguD1jM7L54WtF7aGbHNbzuj/NzqKkH1FzvPnRe0lti586Kg
tdbOl6cHrU92Djs8aM2zM+IZQb/ZzlunBsU+q41PDoqzVm+fH7QW2vnvE0Fx
02rjM4PWQjvnXRC0NtsZt8UMOzP9gnv7H1ynRzI=
               "]], 
              Polygon3DBox[CompressedData["
1:eJwtmmWg3MYVhV+8Dnhke7WyX5gdsuMwY8PM3FDTMDMzM2MbZmg4aRiahhkb
ZiaHmft9Ofqx9n4arXafNHPvPefOVBvvsNr2A/r6+k7ln4H8/8bwvr53B/X1
7dnp63uo29c3dn9f3wylr+9euK55D68Cj4EXgFeE/8X588N7cf4oeDXGP4cX
Ynw1+FrG/wLvz/i48CjG74eHMT4jvDr8BbwwPLzq65sGvgseDA9mfBb4EXhC
eDx4RvgBeDi8AnwF158P3pPrjwOPZPw+uGG8gmeGH4YngN/l7/uS8w+Hn+f8
Y3ktxPtzOGc9zj2U/y9ifA6O7czYO5z/BXwY/D94ec65HJ4X3gNeFr4Unhve
DV4VvgZeGN4PXhm+Cl4Q3gdeBb56UL5zX3gD+G54Zfh4eCX4SngBeG/4f/ye
9+C94IfhY7q51tkcX5dzl+Z1MeNzcmwXxpaBL4HngneF3+b3fw4fCj8HL8f4
ZfA88O7wIHg013oQ7uf+fMn5Bb4Q/pLxgYyPgO+EK8angpeF34fnhCeDF4ff
gGeCR8DLwx/Cc8Nz8jyXgN+EZ4bf5/pf8/1Hwi9y/aO7+VvP4py/9uceOFfO
K7k3k/NaivfvcGxWPj89vDL8KTw//DLXe4Pr7QLfy2dfgl+Hd4bvgUdy/qqc
/xm8IOdPDS8HfwDPBb/O+e9w/h7wg5w/DeMrMP4RPA/j08ErwZ/A88HTwivC
H8PzwlPCy/iM4DngKXwm8Lvw7PCrXP8trr8bfH83f+Pt8PKd/O1fMV455+Cv
4V/gieEb4QF8fgjnzwo/Ck8ED4Cngm+HB8EdeGr4DrjAP/P5ieAb4D74N3hS
+CZ4IDwW508J3waPB//K+CTwv+EO/AH8Db/vKPglfk/N+XMw/gQ8KeNdeHb4
cXgSeCg8G/wYPDH8B5+fHL4FHgcujM8EPwSPD/fBU8C3wuPCv3P+ZPDN8Njw
v40NfP/a8KV8/9eMD+bYxfA38Dp8/jbGl4OPgu9n7H/wlvAt8Iuc/xy8BXwz
/Cn8B3w6/D78GHwDvAR8inOP650GTwNvAv/Y6+vbvJNreK1HeV3P+8U5djLj
n8C/w6fB78Fj4D5+wxnwB/BH8K+MnwK/A3/L2EBeZ8GfwF8w3oHPhD+GP4cH
wP+EP4Lf4/23fP5o+GX4Q8Z/gU+G34JPLVnvru9D4c8YH4tj/4A/hD+Gf2P8
VPhd+HH4RnhJ+FT44eGJb8aLQ+CH4AvbeHcw/BT8X3gN+CL4BfjZQbknN8HP
w8/Am8H/hp+Dn4I3gW8wXsFPw5vCN8JPwP+BV4PPh5+G74XXhC+Gf4B7/P4r
4B/hN+ExjB8MPw0/Cd8Drw5fCP8ED+P8K+Gf4QfhCxifHT4Qvti5DC8FnwZP
yvNdjGOvw6OZX89y/pOMbwxfx/iujJ0CTw1v5PNnvOHYv+CfjH/Er+HwVfAv
8Pxc71TOHwFvDL/F+Z/Bh8DPwq/Ab8K7wvcZqzn/dHhaeFN4Dfim9vcdBq/e
n9+7ZPs8l4LPh2eBt4eXhM+DZ4a3g5eAz4Vngrd1fvF9Q/l9l8LfwbMzfgjj
E8Jrw3PAh8ETwevAc8JHwBPDf23n043tenA+fMP1hnDsEvjbbnLMHYyv0Enu
WQu+BV4GPqKbnHknvGInufQZPn8fvBZ8Cbw247fCy8JHwmvCN8NLw4fD33F+
l++7DP4e/h6u4cvhH5wfvcw156BzcVY+fwDvx+fYmozPBh8ETwCvBS8CnwmP
hLc0l8D/hGeAt4AXhc+CR8FbwfPBJ8FTwBvCi8FnwzPCW8PzwifAk8MbWCvA
Z8DTwZvBC8P/gKeHN4fngo+CJ4HXheeBj4Mng9eHZ4L3gofBq8GzwPvB/fAa
8OLwOfBoeBvjAX/zV/AR8Avwptyb3eAevKrzgfm5Bse+hP/C/J6bzx/D+KTw
eozPDO8DD4dXh0fDe8ANvAr8Gtd/G94dfgC+kGvcw/vpuebxnNvjNQ/vn+XY
lIzN1bDGzb0cG87YnPBz5kZ4GPzA8Kwn14f10/3wye362tH52ORa83J+Yy6B
n+nkO/78LvgFczU8Pjwv/CK8EDwBPDf8PLwA3A8v3GRtW4NYi7ie92jvr+vz
vuG5X027vtes82ydA86FNerMBeeMc2f1OnPHOePcWavOs3BOODf+WmdtuiZd
m+vUWZuuSdfmVryeb/PRZc4/ft/bndQw1jJr11m7PmOftc9zV94PaJ/HynVi
hTnJ3LQgn38VXpTzJoEXgF+BF4EnhrfsT/7bos2XMzepla0ZrB1maVI7mKPN
1bM2ydXmcHP5Frye4PN/82/g86fz/eeYuxk/2NwIn21uhg9yrsPnwePBhxoL
6+Q2c9yB5vomtbY1u7X76Ca53xrcWnzGJrWmNYG1wfa8XuH7t+PYVcZXxl92
LjM+EWPzwS/BC8MTqkWa1PZqCLXEyCZaQk2gNpi+iVZRA6gFRjXRCta41rrT
wf/tRNOobWZrUstY41jrLAS/1knOMHdYX7zb1ofWE+vy987aSYw2Vq9WJ7YY
A4wFizWpBa2RrZW35vUCY1tx7HI+vw38Irw1fIXxqs5cdc66NhdvUltbo1qr
LtmklrYmtTZdtEltac1p7blEk1rWmtvae5EmtbI1qLXosnVigTHJ2LRMndhk
DjAXLFcnNhkzjB1L1ckV5hBzyWJ1YpMxxFiyRJ1Yaww2Fi9aJ7YY04xtS9bJ
PcZkY/PSdXKNOchctEKdWGtMNbYuXye2GiONldvxepn323LsSvNhk1rcmtva
e5U6sdecam5doYnWVEOqJZdvUuurQdWim9bRYmoutdfm8CKdaFK16WZ19Iaa
Te22Up1a0Bxvrt+4jt5Sk6nNduT1Gu938DP8vk3qaDk1nlpv1Tq5wBxhrtiB
16u8397fwPl/r6N31Mxq57/V0a5qSrXlenVqO2s8td0yTbSHmkfts3QT7aEm
UZss20QLqcnV5iuqSTrJaea2bXm9xPtt/E71Zh3tp2ZVu25UR7urodXS69fR
smpIteSGdbSumlHtuFwT7a+mUludwfi58LjwIeZa+Hx4EHyY94/Xw3x2XWMq
338E4/vw/gOO7cLY4fDe8Pvwzv2p3+5r60Pr1R0YX6mTGsNa47A6WlhNvBN8
JLwv/KE1l7kX3g/+CN4N/ob64e+d1HzWfkczvj/8sTnP+FOndrHGsdbZsY4W
vwteH94JXqUTja4e3apO7WMNYy2jPlcvqWf1S/auE0sft2Z2/depfayZrJ22
rFP7WANaC25bRwuqadQ229WptdSIasVt6mgdayhrqS3q1I7WjNaOx8AHwJ8Y
o6wt4A3hx+DN4GPhA+FP4T3h73qp1a3RrdWNscZac8rIOjnd3G6OnaZOzDX2
GpNnqJOTzc3m5Onq5GBzsTl72jo5ylxlDJ2xTk1gbWDNMKJOzjf3WzNM7Vqj
fpkTfhKerE6ON9cb86ev48e4Fl2T+huHcmzHTtaga/GAOnPbmGps3b9ObDXm
Gnu/70WLqFnULvvVicXmaHP1vnVy9Z8aEj6wTuxxzbh2Dqmz1l3DruWD66xl
c5a566A6ucuYZez6thdtoSZSG+3D+Ead5Fhz7V790Xfqa/2cPRnfgPePcmxT
xk6BT4R/hg/ozxx3ruvHqW/Vx2pT9Zj1tXPMueYzPwfeD/4RPs45CJ9Xx0vT
UzumP2vOteeau62b7/C7TnCNwOdz/t0+S84/lrGT64z9xDn7wyfWufYP8L7w
SfDxnXyn370Rrwedy8ZA4x38kHPZHAn/DX5gUPT96cZP+BHXNnxmN/fAe7E+
fFY3c9i57D06Gz6ujjb2HnovT4CPhb+H94GPh4+Bv/NvhC+A/+Nc5e85rj81
zNitHn+F623YH79BvaJetIYZ2Opz9bcxydhkzLm1mxhjrDGG3d5NjDHWGIPu
cLzO3+o98F7sVif2eQ+8F7vUuTfeA+/F7nX+dmOksXLnOvfG3+Rv26POvfAe
ea+MWcYuY9yd3dSA1oLWiKPqxABjgTHurm7ugffCe/YIfBbnXM37fj5zRH+e
qc/WZ/hE6z90Wj9C/+dszr+G9+Nz7EjOPbOOFlYTH96fOeBc8Bk8xvnnMn4d
7ydk/GjGzoGvhSeAj+rPM/JZ+Ywe7SYmGZuMYXd34+mYj84siYc+c+PzVSVz
Qc1pPvpHSTwdv4n2VUOqJSdsoh31FPQWjEnWRzNWiVXGNOurUVVinTHJem1k
lVjV30T7qqnV1moYvZFDSrSNGkav4eASbTO8iTelZlY7D2vi5elZ6V01TbxU
PT69Pj0g59537f37tJv6+vv2eYzppv7+ob3f+g8jWn9Pv2PiJt6EHoheyERN
vBM9C72LN7pZr5+0+XeCJtpaTa22fr2bZ/1xW7+/1s16/qjN32o+tZ9r5vdu
YoCxwBjyazd+1rDWH9G/8hpqAWsAr208X7z1W/QL9ZT+9M5KvCY9hj+9txIv
ynswvPVzvDcn98cvfqPNB3o6i/H+pBKvx3vU3/ox3jvvkXPTOe29s2awdrio
xPtyDjoXnYOfdxMDjYX62fo5akK16S4lWtEYYawwBv7mb6/jNajR1ep6hnpj
F5Z4iXqCelMXlHiFznHnumvmM8ZO7LbeF8ce0evieVzQiceu1+453rsf2/Xh
b1Rf/dSuH/1za1trXP31U/uj9+2X6Kf7G/2ucav8dv8m783YVf5WY5T58eGS
2OVn9OLnqnIt17yx4pWSWGAOcC2+WpIbJm/iDesh6yWPaOId60HrRU/dxMvV
U9Zb1o/YhPd/dNLPmZzXU8Zfjp/Sn2dqrp+2yrM2RxnLXi7JH9M2mevOeXsP
UzTxrvWI9YqnaeJ963nrfU/VxGvWU9ZbnrKJl6wHrRc9WRMvXY9br9uYY+x+
sSQWTdrEK9dz13sf1MRr1cPVyx0PPqkTD1YvdnAT71dPWW/ZHG5ueL4kHx3X
jd44t6R+NMcY6z5o9bM5xVj8fquXqyZerZ6y3vKr3cTSD1v97T1bsuSZeS+H
NPGy9Zz1ns051iuPlOSibhMvWE9Zb7luEsuN6XrPk8DXd9IjsFcwtIl3rYes
l2wMN5e9VBLbzSHWO4+V5BZziLXDCyW5xRxk/fNoSW4yhlsvPV4S241BagHn
tLHJmk/9OkOVWvAy+K1O/kb/Vj1e69PrSrxfPWPrqWtLvOQ/ax74xhKv0Z6c
z+PNkl6dPT3vz1slvT49Zv3DG0q8Z3tO3p93SnpR9sS8/2+U9Mr0vK0Xry/x
wvW89cbuLfEf9YztLd1doif0+I33Y0rmiz0y/YRhVeavPRn9lqbKfNUjtjfw
eol3rKdvfvi0ZH7pqdsr+m9JvaqHrpd8T0m9rgehF3FfSX9Cz93e139K6k17
Qvo9vSrrU8/Q5/t2iZdoT0xv/YmSXtlHveQzewDG5497yXf2CIzPH/QSH/X0
zH+fwIv6fAYlnn3aS3y2R2L8+xCerRNP3nj9WS/xXo/ZeDyml3xgD8b4+V4v
XqYenfH3fXiqTjxD86vf4Xf5HcZSPUp7t8+UeJf21OzNPl3Sa7Nn4Pp9raSX
YA3j/H+3pLelJ28v9KkSr96en97qsyW9QHuIevlPlvQWXcNqQTWoa1uNp9Z7
rqRXbs9KP2tIlfhkj1x/c8Iq/pI9MP2voVXikZ668ey3tl6w52E8HatKvWKO
N/51quR3e4LGr1/a+sEemPH417a+sEdhPBxQJf/b47Ie+qIkPtnDNb793OYb
ewTGx9/b+kaP3fjdV6U+0IM3nv7R1lMXtfFajXaC9T+vuUqODanTr9c7c847
9+2BWW982cani9v472f87Em85i45NpSxS3g93ckxxy6v42Wb48xPfqffbf/R
/QD23KzPPi+Jl/bMrH++buOdPS/rsc9KemHWINYiI6r4e3rY+mPTV/Gb7Ynq
Dw6ukt/saapdp67ij7rHQC08SRV/0T0FateJqviL7mFQ205cxY+0p6r/WlfJ
h/Y49UO7VfLTpW3+tcYx/9nTVXtPWcWvtYdqLT9VFb/WHq5+5qAq8dqay9rr
mzae2/Oz3v2qjd/28NXik1bxO+0h65eWKvnNPRBq68mr+LH2fPVPqyr50R6t
2n6yKv6sey7U/lNU8XOtEfV6rFGtHUuTeGbP0fttz0R/cb8Sv1zPS216Z4l+
toaxlpmjil8/oMl6c4+C8XesJvHJnprx0R76N/A8VfxMPUH10O0lets9AV87
f6r463oS+qWjq3gV9jwGwluU+JdqJP2yWatoJ3v238LzVvFT7RHqH85exf/V
w9Dvmq2Kt2GPZmx4y5J60B6S/ua+Jf2EcZrEE/c4mF/0LPQuDivx88ZtEj/0
jIxH9qzGhbcu8Uvt8emHHljSX7AHpH+7f0m/wB6W/ureJf0Je1z6tfuU9C/s
iY0Db1Xiz+qpq53vKPEr7Bnq9x5Q0q9Qk+tPXV6iT92z8QO8QBU/Wc9QfXpb
iR/inotf4L9U8SPV6PpVV5Zodz0IY+XVJd6EPRD17s0lfos9CvXtTSV+y++9
5Ff3YBh/3UOjv3tEiT+p56TfOXMVL8o9J9/B81Xx1/XU1du3lPg97tH4GV64
ij/qHo/v4fmr+OnuibG/cniJv6nHpL88UxXvSU9evX5riZ/0VS/1vj1r64eB
TfKNe4isL/TM9GdnqeKl6Qnr/91V4k/Z4+vAm5f44+6Z+hVepGr3UnXT+9ms
xP/XA9EP/FeJ3v+6Fz2jJ2q9454j+w1HlfjFnSb5zD1K1j96rPqFV5T4CV/0
oj/soVtP2VPWfz+opH+hR6OfeVmJX2EPU39/r5J+xi+91Bf2tM2XQ1p/aPwq
8fznXuoh9+CYL7/sRQ+5h8D66Sd4p0725Fhv9PF7D+qkx29+HrtJPrfHaX3i
nrHf4cWq+Pd/7imDjynxy9UUaovFq/j9elj6fQ+VeFu/9lIvuefGemBo6/9M
UCW/DG79sP4quUWNqzYcr4r2tUetH//PEr9VT0i/9ZISP8aetf75GSX+7x+9
1GP2iKwH3FOl/39kiV/+Wy/1nD1W6xX3gNlPPK6kX+CeNfuNR5f4759z/qqd
7Jmw3lVzq23HqaLF3RNm//LYkn6EPTv96mtK/EX3nNmPPKGkn+GeO/uVJ5b0
O+xBD4F3LOm32NMeCu9U0o+xB96Fdy7pH9hDHgzvUNIfck/BePA2Jf0h98zY
/9m9pF/pHoNB8LYl/R575OrnPUv6Ie55s/95fEk/xj0R9pf2KOnn2DOv4O1L
+lXuUSjwdiX9Kvdc/QQvVKUfpIeon35piZ+mR6e/+2CJd+eer9/gRav0K9xj
YX/ltBL/XI1lr1MPRu2lx6of/ECJ9+oesB/hBav039yzYX/k9BL/3h6z/bvd
SvpF/wckIoxJ
               "]], 
              Polygon3DBox[CompressedData["
1:eJwV1mXcFUUbB+BDNzwg3SHdIN3w0qCCKJ3SjUpIdzfSDdIoKKIoDWLRIKE0
SigN0vVe8+H+cF+//8zsnrMzu1na9KjfPXokEjmmYqlRUZHIvviRyIl4kUin
GJHIliSRyPtsIBvD0rHOrAEbwEaxtKwTq8w6sP4sFmvA3mP92QiWhnVkFVk7
1ofFYPVZPdaPDWGpWHtWibVn/VhM9h6rzz5lw1hq1oFVTxaJlE8QiTTnT1lJ
mS5qrn6NXGk2Ti6HXGq5EvwoSyrTRk3UL5DLxwbItWYT2HyWl/VnHdhMtoIV
Z6NYTvOlMV9JfoxFybRS4/Xz5PKwT+VyyaWVK8WPs2Qy95NGIpvCOLl27HO5
Fnwsm8Nysb6sK5vH1rIybDzryGaxlawEG806sdlsFSvJxrDubAFbz8qxiawb
m8/WsbJsAuvM5rDVrBQby3qxxWwDq8imsB5sIfuClWeT2H/uYyc7zz5iG1lP
uUXsS1aBTWbvsr5sEEvJ2rEHxu5g51gv9hX7QG4QG8fSsy5sAXvM4qhF7Ba7
Zexy/R65BmwGmyh3gJ1lPdlONpb9wk6zrmwrG8N+ZqdYF/YDG8d+ZX+wbmwb
e2yNPewS682+YZ/JXWEP2QT2JxvNfmInWWf2PZvPHrHYaiG7yRayJ/q4ajG7
zRaxp/p4agm7wyaw/foz5uvBdrBJ7AS7wvqzX9lUdppdZ4PYATaN/cH+YYPZ
QXbDfSxlu1h9NpWNl/uN/cm6s+1sCjvFrrGBbD/719glbCerx6ax6XJ/sn/Z
EHaITWYn2VU2gP3GZrAz7AYbyg6zR+bbzS6yT9gmNk/uIYsV9iG7weawf8J+
lpvCzod9zrqykSw+a8yqss5sKIvLGrIqrCMbyGKz99n/WCc2mMVhH7Bq4Zxg
w1k81og1YcPYNJaZ9WDvsD5sAEvB2rKGbDCbwDKwrqwxG8qmsEysO3ub9Waf
suTsQ1aDdWOjWQLWhNViPdh4log1YzPZVfaITWRn2Gx2nT1hk9k5Npf9y56x
qewCe+h33sUusI/Z12yW3DX2mE1iZ1kd1otNZklYC1aTdWdjWULWlNVlH7Gp
LIq1ZLVZTzaRJWbNWSM2hE1iGVk3ltv5l875V5r/zt6QicbO6V/ITWdH5DKy
hHJ5+Y8shtwnapX+O7mabI5cb7aabWG12FzWh61h37PabB4rbb6C5ns77AeW
K7xj1Dr9Vrm6bIFcKbkCcnXDXmI5wztGrddvk3ubLZTrz75g29k7bBFrxkaz
WSwH680GsC/ZDvYuW8yaslFsJsvOPmFlrFvIuu+EvcRyy/ztf/tYP10uC2st
t5JnlyvGD7OM+ptyy/S75d5j0+VSmS8ilyn8XuwR6yu7Vv+DXB02n6WViyGX
NTh7ytKxeCxXmJNFM+6VNY7p7xk7mu2TG8g3s32sEVvFShqb39g64exgOWTS
sOgsS/hP2BO5FOyVPoPazP5jqVk0uczh/2SP2UvrHtXftcYo9iNLKfeaZVTf
sofsudxh/W25EWwPSy73kqVX37AH7LXccf19uTHsJ7bKNeawbnF+hGUKz5Qq
xqqG84kV1NcyXyXWKjyrrAyrzSqz1uwlK8tqsAqsRdiHrBQrz4qy+uwWy8eW
qbgsNdvIXruWpSwOSxXet+wVW85SsOzhOWKJ9CtUKpYznOUsSTgf3NsI/TL3
VoT1NPZznlIuRzi3WeLwzpIbrl8qV5j1kmvOx7DZLCfrE84D11zF2Db8FSsn
U5NVZC3Zc1Y6fBuoWCxF+B5gL4wtK1eYvRvOfJYnnOHWnaH/2hpV2HC5a2xa
uH9WiQ1j19l09hWrzIaG70nzlTJfI/4fK2q+Kqw0axzewewttkTFZinDNwd7
Gc57uTKsSTg/WTGZaqwcaxbOT1aClWNFWD12k+VlVVlZ1jSclaw4q8CKs/fD
fmCFWSVWkjVkD1gRVpGVYB+E540VYi3VOP1c95ab9XN9b8i9YOnUJnafJWXP
9GnC78DuseIsr/lqhXc/e9NcJVg+Vju8b1l2dtvvt0F/yBqt2VJj35LLLVeD
/8Wyhueb5WE12d8sG7tj7MZwthjbhi0xtohcTrlq4fuHZZEryLKwiuG7gaVh
hVhWVil8r7C0rK2arF9kvgJskPkKyGWWq8D/YKllorPzYQ/JzWDH5GKwC+HZ
Y5+x46y97NTwfcQKsSGsqFwu81Xnl1lmmQ/VJP1CufxsoFxWuSi5gvwXFkcm
G0vKCrFfWVyWhSVhBdjPLHY4c9kbrAjbz+KzzCwxy89+YrFYOzVFv9i6Bdlg
674pl0yuMP+NxZPJyzKwsuwkS8Hu+u2/CmeQsR+yZcbmkUsvV4afYMnl7sl9
rT8q15Ytl8snl1GuHD/FUsrlZ5lYeXaapWLJ2HN92rAP2V1jI+xs2M/mm8aO
sljsEouE9xk7wRKxu/okaiW7wuKyG/r44Txhl9hT13cw7CHzDWO7WWK5eyxK
rWJXWXoW3/XlZntYxPWNUNv0B4xtyb6Uiyd3kyUIZxu7yBKw2/pE6nP2F3th
3SP6O8aOZHtZfLlbLKFazi6zZ3KHwjksN5ztYiOtu50dZK3YBpbQ2DsssVrB
/mYx2UX9a7mZ7HcWxR6wZGoNu86GmG9LeM7kmrK1LJNcIvebL7wzWUyZDCwB
y8P2suisMMvGKrOzLF0409hlfbRwRrOT5vsovAfC+9Ma1dksNoh9G55H1pit
ZnGM/YtFV3PYKZaE3dcnVavZNTbY2O/CM29sE7aGfcxWhvcsq8Fms6Hs+7Bf
WDO2jg1jP4TnmzVn69lwtjXsF9aCfcGe+O33hn3K+rDN7P+FqjJY
               "]]}], Lighting -> {{"Ambient", 
               RGBColor[0.30756835, 0.18676585, 0.147065275]}, {"Directional", 
               RGBColor[0.2306315, 0.0964065, 0.05229475], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               GrayLevel[0.3], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[0.2306315, 0.0964065, 0.05229475], 
               ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}, {}, {}}, {{
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwt0ckrBVAUB+D7eA8Pz5ApSVGypvwBbKyRrJEsDSVlR8makjUla0rWlKwp
WZvn4eGZx+/J4tzvLG73d063tnewYyASQhhTkahia14IxexiLfvZyFG2cIrt
nGMPlzjMNU5wizPc4wJPucJnbjArP4QdlvOA9bznofwHHvGRx0zxhE/pd/jM
M77wnK+84Bsv+c4rfvCan7zhF2/5zTv+MBkNfws3yU9q67jPUm4zynWmzL2c
nofz3OU0NznOVQ5xkd2cZRsn2cwRNrCPNexkEavlF7KKBaxkghUUHcroaihh
LosZZyFzmGA285jFOGPMZnq1mCOTmcz4/99fi1o+yA==
            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0UcuBXAQB+D/09vzOIDgAIIDCA4gyl6Uvba0EBxAwglwAEH0zgFEiYiI
HhERvXc+sZh8mdXM/Ca/saWmORJCaFebiSFENP0ZIWRzmPlcYjHXWM5DVvOG
DfxhG2PRELqZyz4WcpClHGUlV1jHDbbwmJ2841hSCPcc5wMn+MhJPnGKz5zm
C2f4ylm+cY7vnOcHF/jJRX793cFvLvOHKwxxIfSYf6vv4BGbuM5aLrOCIyzh
AAvYyxx2McpWfsmhnles4j7LuMqiv32YxyFm8VreMV4ykxeM8pwZPGM6T5nG
E6byiCk8YDL3mMRdJnKHCdxmPLcYF/n/7y/0AkoX
            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0TssHQAUBuDj4t5LPRcx1tIYdRGjLo0RgxgxNKZiadgqUe+29xrESMQr
IoiUNiKtRYy6NEaWzm3RevPddDj5cpb/nJxT09XT+jovIgbUfCoiLxFxWRpR
yXRZRA2r+Zy1fMEGtrCJnWxnH7s5yH5mOco5znCTy9znZ37nIU95zN8cSkf8
4TuecZjnHOFFLo9/OcZ/HOclJ3jFSV7zPW/4gbf8yDtmeM8sHzjFyI/4af4v
/Q+e8IBH3OY3LnKD05zN7cUM3/AtX7GXbezgSzazno18xjpW8SmTrOBX9y7n
Hsu4y1J+YQl3+ISfWMwtFnGTaa4zxTUmucpCrrCAS8znAhOJ//99BKvnQ3g=

            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0ektA3AUAPB/tY7W0ZqATkAnwAYqcV/FdzQRQQQVERGhnQATYAJMgAkw
AXXf/BofXn55yUvelZ6c6ZmOhBAWxVw8hEg0hGwyhGZOMM08MyywiyVmecgJ
njDPcxZ4xRJvecgyTxhJqWEzr5jmLTMsszcRwgP7+Mh+PnGAzxzkC4f4ymG+
cYTvHOUHx/jJcX4xx+/KPvzhJH85xRALoUP/e3kbb9jCSyZ5xl/zH/OOB7xm
kRdc4ylnecQc99nNPXZyle2cYWtlLqZYdO8kd9nEHTZymw3cYj03meAG41xn
HddYyxXWcJnVXGKMC4xynlXR///+AQVYP9Y=
            "]]}, {
           GrayLevel[0.2], 
           
           Line3DBox[{2886, 1265, 2885, 4790, 3125, 2887, 4791, 3126, 2888, 
            4792, 3127, 2889, 4793, 3128, 2890, 4794, 3129, 2891, 4795, 3130, 
            2892, 4796, 3131, 2893, 4797, 3132, 2894, 4798, 3133, 2895, 4799, 
            3134, 2896, 4800, 3135, 2897, 4801, 3136, 2898, 4802, 3137, 2899, 
            4803, 3138, 2900}], 
           
           Line3DBox[{2902, 4265, 4685, 2901, 1281, 2903, 4804, 3139, 2904, 
            4805, 3140, 2905, 4806, 3141, 2906, 4807, 3142, 2907, 4808, 3143, 
            2908, 4809, 3144, 2909, 4810, 3145, 2910, 4811, 3146, 2911, 4812, 
            3147, 2912, 4813, 3148, 2913, 4814, 3149, 2914, 4815, 3150, 2915, 
            4816, 3151, 2916}], 
           
           Line3DBox[{2918, 4266, 4686, 2917, 4267, 4687, 2919, 1297, 2920, 
            4817, 3152, 2921, 4818, 3153, 2922, 4819, 3154, 2923, 4820, 3155, 
            2924, 4821, 3156, 2925, 4822, 3157, 2926, 4823, 3158, 2927, 4824, 
            3159, 2928, 4825, 3160, 2929, 4826, 3161, 2930, 4827, 3162, 2931, 
            4828, 3163, 2932}], 
           
           Line3DBox[{2934, 4268, 4688, 2933, 4269, 4689, 2935, 4270, 4690, 
            2936, 1313, 2937, 4829, 3164, 2938, 4830, 3165, 2939, 4831, 3166, 
            2940, 4832, 3167, 2941, 4833, 3168, 2942, 4834, 3169, 2943, 4835, 
            3170, 2944, 4836, 3171, 2945, 4837, 3172, 2946, 4838, 3173, 2947, 
            4839, 3174, 2948}], 
           
           Line3DBox[{2950, 4271, 4691, 2949, 4272, 4692, 2951, 4273, 4693, 
            2952, 4274, 4694, 2953, 1329, 2954, 4840, 3175, 2955, 4841, 3176, 
            2956, 4842, 3177, 2957, 4843, 3178, 2958, 4844, 3179, 2959, 4845, 
            3180, 2960, 4846, 3181, 2961, 4847, 3182, 2962, 4848, 3183, 2963, 
            4849, 3184, 2964}], 
           
           Line3DBox[{2966, 4275, 4695, 2965, 4276, 4696, 2967, 4277, 4697, 
            2968, 4278, 4698, 2969, 4279, 4699, 2970, 1345, 2971, 4850, 3185, 
            2972, 4851, 3186, 2973, 4852, 3187, 2974, 4853, 3188, 2975, 4854, 
            3189, 2976, 4855, 3190, 2977, 4856, 3191, 2978, 4857, 3192, 2979, 
            4858, 3193, 2980}], 
           
           Line3DBox[{2982, 4280, 4700, 2981, 4281, 4701, 2983, 4282, 4702, 
            2984, 4283, 4703, 2985, 4284, 4704, 2986, 4285, 4705, 2987, 1361, 
            2988, 4859, 3194, 2989, 4860, 3195, 2990, 4861, 3196, 2991, 4862, 
            3197, 2992, 4863, 3198, 2993, 4864, 3199, 2994, 4865, 3200, 2995, 
            4866, 3201, 2996}], 
           
           Line3DBox[{2998, 4286, 4706, 2997, 4287, 4707, 2999, 4288, 4708, 
            3000, 4289, 4709, 3001, 4290, 4710, 3002, 4291, 4711, 3003, 4292, 
            4712, 3004, 1377, 3005, 4867, 3202, 3006, 4868, 3203, 3007, 4869, 
            3204, 3008, 4870, 3205, 3009, 4871, 3206, 3010, 4872, 3207, 3011, 
            4873, 3208, 3012}], 
           
           Line3DBox[{3014, 4293, 4713, 3013, 4294, 4714, 3015, 4295, 4715, 
            3016, 4296, 4716, 3017, 4297, 4717, 3018, 4298, 4718, 3019, 4299, 
            4719, 3020, 4300, 4720, 3021, 1393, 3022, 4874, 3209, 3023, 4875, 
            3210, 3024, 4876, 3211, 3025, 4877, 3212, 3026, 4878, 3213, 3027, 
            4879, 3214, 3028}], 
           
           Line3DBox[{3030, 4301, 4721, 3029, 4302, 4722, 3031, 4303, 4723, 
            3032, 4304, 4724, 3033, 4305, 4725, 3034, 4306, 4726, 3035, 4307, 
            4727, 3036, 4308, 4728, 3037, 4309, 4729, 3038, 1409, 3039, 4880, 
            3215, 3040, 4881, 3216, 3041, 4882, 3217, 3042, 4883, 3218, 3043, 
            4884, 3219, 3044}], 
           
           Line3DBox[{3046, 4310, 4730, 3045, 4311, 4731, 3047, 4312, 4732, 
            3048, 4313, 4733, 3049, 4314, 4734, 3050, 4315, 4735, 3051, 4316, 
            4736, 3052, 4317, 4737, 3053, 4318, 4738, 3054, 4319, 4739, 3055, 
            1425, 3056, 4885, 3220, 3057, 4886, 3221, 3058, 4887, 3222, 3059, 
            4888, 3223, 3060}], 
           
           Line3DBox[{3062, 4320, 4740, 3061, 4321, 4741, 3063, 4322, 4742, 
            3064, 4323, 4743, 3065, 4324, 4744, 3066, 4325, 4745, 3067, 4326, 
            4746, 3068, 4327, 4747, 3069, 4328, 4748, 3070, 4329, 4749, 3071, 
            4330, 4750, 3072, 1441, 3073, 4889, 3224, 3074, 4890, 3225, 3075, 
            4891, 3226, 3076}], 
           
           Line3DBox[{3078, 4331, 4751, 3077, 4332, 4752, 3079, 4333, 4753, 
            3080, 4334, 4754, 3081, 4335, 4755, 3082, 4336, 4756, 3083, 4337, 
            4757, 3084, 4338, 4758, 3085, 4339, 4759, 3086, 4340, 4760, 3087, 
            4341, 4761, 3088, 4342, 4762, 3089, 1457, 3090, 4892, 3227, 3091, 
            4893, 3228, 3092}], 
           
           Line3DBox[{3094, 4343, 4763, 3093, 4344, 4764, 3095, 4345, 4765, 
            3096, 4346, 4766, 3097, 4347, 4767, 3098, 4348, 4768, 3099, 4349, 
            4769, 3100, 4350, 4770, 3101, 4351, 4771, 3102, 4352, 4772, 3103, 
            4353, 4773, 3104, 4354, 4774, 3105, 4355, 4775, 3106, 1473, 3107, 
            4894, 3229, 3108}], 
           
           Line3DBox[{3110, 4356, 4776, 3109, 4357, 4777, 3111, 4358, 4778, 
            3112, 4359, 4779, 3113, 4360, 4780, 3114, 4361, 4781, 3115, 4362, 
            4782, 3116, 4363, 4783, 3117, 4364, 4784, 3118, 4365, 4785, 3119, 
            4366, 4786, 3120, 4367, 4787, 3121, 4368, 4788, 3122, 4369, 4789, 
            3123, 1489, 3124}], 
           
           Line3DBox[{3231, 1730, 3230, 5000, 3470, 3232, 5001, 3471, 3233, 
            5002, 3472, 3234, 5003, 3473, 3235, 5004, 3474, 3236, 5005, 3475, 
            3237, 5006, 3476, 3238, 5007, 3477, 3239, 5008, 3478, 3240, 5009, 
            3479, 3241, 5010, 3480, 3242, 5011, 3481, 3243, 5012, 3482, 3244, 
            5013, 3483, 3245}], 
           
           Line3DBox[{3247, 4370, 4895, 3246, 1746, 3248, 5014, 3484, 3249, 
            5015, 3485, 3250, 5016, 3486, 3251, 5017, 3487, 3252, 5018, 3488, 
            3253, 5019, 3489, 3254, 5020, 3490, 3255, 5021, 3491, 3256, 5022, 
            3492, 3257, 5023, 3493, 3258, 5024, 3494, 3259, 5025, 3495, 3260, 
            5026, 3496, 3261}], 
           
           Line3DBox[{3263, 4371, 4896, 3262, 4372, 4897, 3264, 1762, 3265, 
            5027, 3497, 3266, 5028, 3498, 3267, 5029, 3499, 3268, 5030, 3500, 
            3269, 5031, 3501, 3270, 5032, 3502, 3271, 5033, 3503, 3272, 5034, 
            3504, 3273, 5035, 3505, 3274, 5036, 3506, 3275, 5037, 3507, 3276, 
            5038, 3508, 3277}], 
           
           Line3DBox[{3279, 4373, 4898, 3278, 4374, 4899, 3280, 4375, 4900, 
            3281, 1778, 3282, 5039, 3509, 3283, 5040, 3510, 3284, 5041, 3511, 
            3285, 5042, 3512, 3286, 5043, 3513, 3287, 5044, 3514, 3288, 5045, 
            3515, 3289, 5046, 3516, 3290, 5047, 3517, 3291, 5048, 3518, 3292, 
            5049, 3519, 3293}], 
           
           Line3DBox[{3295, 4376, 4901, 3294, 4377, 4902, 3296, 4378, 4903, 
            3297, 4379, 4904, 3298, 1794, 3299, 5050, 3520, 3300, 5051, 3521, 
            3301, 5052, 3522, 3302, 5053, 3523, 3303, 5054, 3524, 3304, 5055, 
            3525, 3305, 5056, 3526, 3306, 5057, 3527, 3307, 5058, 3528, 3308, 
            5059, 3529, 3309}], 
           
           Line3DBox[{3311, 4380, 4905, 3310, 4381, 4906, 3312, 4382, 4907, 
            3313, 4383, 4908, 3314, 4384, 4909, 3315, 1810, 3316, 5060, 3530, 
            3317, 5061, 3531, 3318, 5062, 3532, 3319, 5063, 3533, 3320, 5064, 
            3534, 3321, 5065, 3535, 3322, 5066, 3536, 3323, 5067, 3537, 3324, 
            5068, 3538, 3325}], 
           
           Line3DBox[{3327, 4385, 4910, 3326, 4386, 4911, 3328, 4387, 4912, 
            3329, 4388, 4913, 3330, 4389, 4914, 3331, 4390, 4915, 3332, 1826, 
            3333, 5069, 3539, 3334, 5070, 3540, 3335, 5071, 3541, 3336, 5072, 
            3542, 3337, 5073, 3543, 3338, 5074, 3544, 3339, 5075, 3545, 3340, 
            5076, 3546, 3341}], 
           
           Line3DBox[{3343, 4391, 4916, 3342, 4392, 4917, 3344, 4393, 4918, 
            3345, 4394, 4919, 3346, 4395, 4920, 3347, 4396, 4921, 3348, 4397, 
            4922, 3349, 1842, 3350, 5077, 3547, 3351, 5078, 3548, 3352, 5079, 
            3549, 3353, 5080, 3550, 3354, 5081, 3551, 3355, 5082, 3552, 3356, 
            5083, 3553, 3357}], 
           
           Line3DBox[{3359, 4398, 4923, 3358, 4399, 4924, 3360, 4400, 4925, 
            3361, 4401, 4926, 3362, 4402, 4927, 3363, 4403, 4928, 3364, 4404, 
            4929, 3365, 4405, 4930, 3366, 1858, 3367, 5084, 3554, 3368, 5085, 
            3555, 3369, 5086, 3556, 3370, 5087, 3557, 3371, 5088, 3558, 3372, 
            5089, 3559, 3373}], 
           
           Line3DBox[{3375, 4406, 4931, 3374, 4407, 4932, 3376, 4408, 4933, 
            3377, 4409, 4934, 3378, 4410, 4935, 3379, 4411, 4936, 3380, 4412, 
            4937, 3381, 4413, 4938, 3382, 4414, 4939, 3383, 1874, 3384, 5090, 
            3560, 3385, 5091, 3561, 3386, 5092, 3562, 3387, 5093, 3563, 3388, 
            5094, 3564, 3389}], 
           
           Line3DBox[{3391, 4415, 4940, 3390, 4416, 4941, 3392, 4417, 4942, 
            3393, 4418, 4943, 3394, 4419, 4944, 3395, 4420, 4945, 3396, 4421, 
            4946, 3397, 4422, 4947, 3398, 4423, 4948, 3399, 4424, 4949, 3400, 
            1890, 3401, 5095, 3565, 3402, 5096, 3566, 3403, 5097, 3567, 3404, 
            5098, 3568, 3405}], 
           
           Line3DBox[{3407, 4425, 4950, 3406, 4426, 4951, 3408, 4427, 4952, 
            3409, 4428, 4953, 3410, 4429, 4954, 3411, 4430, 4955, 3412, 4431, 
            4956, 3413, 4432, 4957, 3414, 4433, 4958, 3415, 4434, 4959, 3416, 
            4435, 4960, 3417, 1906, 3418, 5099, 3569, 3419, 5100, 3570, 3420, 
            5101, 3571, 3421}], 
           
           Line3DBox[{3423, 4436, 4961, 3422, 4437, 4962, 3424, 4438, 4963, 
            3425, 4439, 4964, 3426, 4440, 4965, 3427, 4441, 4966, 3428, 4442, 
            4967, 3429, 4443, 4968, 3430, 4444, 4969, 3431, 4445, 4970, 3432, 
            4446, 4971, 3433, 4447, 4972, 3434, 1922, 3435, 5102, 3572, 3436, 
            5103, 3573, 3437}], 
           
           Line3DBox[{3439, 4448, 4973, 3438, 4449, 4974, 3440, 4450, 4975, 
            3441, 4451, 4976, 3442, 4452, 4977, 3443, 4453, 4978, 3444, 4454, 
            4979, 3445, 4455, 4980, 3446, 4456, 4981, 3447, 4457, 4982, 3448, 
            4458, 4983, 3449, 4459, 4984, 3450, 4460, 4985, 3451, 1938, 3452, 
            5104, 3574, 3453}], 
           
           Line3DBox[{3455, 4461, 4986, 3454, 4462, 4987, 3456, 4463, 4988, 
            3457, 4464, 4989, 3458, 4465, 4990, 3459, 4466, 4991, 3460, 4467, 
            4992, 3461, 4468, 4993, 3462, 4469, 4994, 3463, 4470, 4995, 3464, 
            4471, 4996, 3465, 4472, 4997, 3466, 4473, 4998, 3467, 4474, 4999, 
            3468, 1954, 3469}], 
           
           Line3DBox[{3576, 2195, 3575, 5210, 3815, 3577, 5211, 3816, 3578, 
            5212, 3817, 3579, 5213, 3818, 3580, 5214, 3819, 3581, 5215, 3820, 
            3582, 5216, 3821, 3583, 5217, 3822, 3584, 5218, 3823, 3585, 5219, 
            3824, 3586, 5220, 3825, 3587, 5221, 3826, 3588, 5222, 3827, 3589, 
            5223, 3828, 3590}], 
           
           Line3DBox[{3592, 4475, 5105, 3591, 2211, 3593, 5224, 3829, 3594, 
            5225, 3830, 3595, 5226, 3831, 3596, 5227, 3832, 3597, 5228, 3833, 
            3598, 5229, 3834, 3599, 5230, 3835, 3600, 5231, 3836, 3601, 5232, 
            3837, 3602, 5233, 3838, 3603, 5234, 3839, 3604, 5235, 3840, 3605, 
            5236, 3841, 3606}], 
           
           Line3DBox[{3608, 4476, 5106, 3607, 4477, 5107, 3609, 2227, 3610, 
            5237, 3842, 3611, 5238, 3843, 3612, 5239, 3844, 3613, 5240, 3845, 
            3614, 5241, 3846, 3615, 5242, 3847, 3616, 5243, 3848, 3617, 5244, 
            3849, 3618, 5245, 3850, 3619, 5246, 3851, 3620, 5247, 3852, 3621, 
            5248, 3853, 3622}], 
           
           Line3DBox[{3624, 4478, 5108, 3623, 4479, 5109, 3625, 4480, 5110, 
            3626, 2243, 3627, 5249, 3854, 3628, 5250, 3855, 3629, 5251, 3856, 
            3630, 5252, 3857, 3631, 5253, 3858, 3632, 5254, 3859, 3633, 5255, 
            3860, 3634, 5256, 3861, 3635, 5257, 3862, 3636, 5258, 3863, 3637, 
            5259, 3864, 3638}], 
           
           Line3DBox[{3640, 4481, 5111, 3639, 4482, 5112, 3641, 4483, 5113, 
            3642, 4484, 5114, 3643, 2259, 3644, 5260, 3865, 3645, 5261, 3866, 
            3646, 5262, 3867, 3647, 5263, 3868, 3648, 5264, 3869, 3649, 5265, 
            3870, 3650, 5266, 3871, 3651, 5267, 3872, 3652, 5268, 3873, 3653, 
            5269, 3874, 3654}], 
           
           Line3DBox[{3656, 4485, 5115, 3655, 4486, 5116, 3657, 4487, 5117, 
            3658, 4488, 5118, 3659, 4489, 5119, 3660, 2275, 3661, 5270, 3875, 
            3662, 5271, 3876, 3663, 5272, 3877, 3664, 5273, 3878, 3665, 5274, 
            3879, 3666, 5275, 3880, 3667, 5276, 3881, 3668, 5277, 3882, 3669, 
            5278, 3883, 3670}], 
           
           Line3DBox[{3672, 4490, 5120, 3671, 4491, 5121, 3673, 4492, 5122, 
            3674, 4493, 5123, 3675, 4494, 5124, 3676, 4495, 5125, 3677, 2291, 
            3678, 5279, 3884, 3679, 5280, 3885, 3680, 5281, 3886, 3681, 5282, 
            3887, 3682, 5283, 3888, 3683, 5284, 3889, 3684, 5285, 3890, 3685, 
            5286, 3891, 3686}], 
           
           Line3DBox[{3688, 4496, 5126, 3687, 4497, 5127, 3689, 4498, 5128, 
            3690, 4499, 5129, 3691, 4500, 5130, 3692, 4501, 5131, 3693, 4502, 
            5132, 3694, 2307, 3695, 5287, 3892, 3696, 5288, 3893, 3697, 5289, 
            3894, 3698, 5290, 3895, 3699, 5291, 3896, 3700, 5292, 3897, 3701, 
            5293, 3898, 3702}], 
           
           Line3DBox[{3704, 4503, 5133, 3703, 4504, 5134, 3705, 4505, 5135, 
            3706, 4506, 5136, 3707, 4507, 5137, 3708, 4508, 5138, 3709, 4509, 
            5139, 3710, 4510, 5140, 3711, 2323, 3712, 5294, 3899, 3713, 5295, 
            3900, 3714, 5296, 3901, 3715, 5297, 3902, 3716, 5298, 3903, 3717, 
            5299, 3904, 3718}], 
           
           Line3DBox[{3720, 4511, 5141, 3719, 4512, 5142, 3721, 4513, 5143, 
            3722, 4514, 5144, 3723, 4515, 5145, 3724, 4516, 5146, 3725, 4517, 
            5147, 3726, 4518, 5148, 3727, 4519, 5149, 3728, 2339, 3729, 5300, 
            3905, 3730, 5301, 3906, 3731, 5302, 3907, 3732, 5303, 3908, 3733, 
            5304, 3909, 3734}], 
           
           Line3DBox[{3736, 4520, 5150, 3735, 4521, 5151, 3737, 4522, 5152, 
            3738, 4523, 5153, 3739, 4524, 5154, 3740, 4525, 5155, 3741, 4526, 
            5156, 3742, 4527, 5157, 3743, 4528, 5158, 3744, 4529, 5159, 3745, 
            2355, 3746, 5305, 3910, 3747, 5306, 3911, 3748, 5307, 3912, 3749, 
            5308, 3913, 3750}], 
           
           Line3DBox[{3752, 4530, 5160, 3751, 4531, 5161, 3753, 4532, 5162, 
            3754, 4533, 5163, 3755, 4534, 5164, 3756, 4535, 5165, 3757, 4536, 
            5166, 3758, 4537, 5167, 3759, 4538, 5168, 3760, 4539, 5169, 3761, 
            4540, 5170, 3762, 2371, 3763, 5309, 3914, 3764, 5310, 3915, 3765, 
            5311, 3916, 3766}], 
           
           Line3DBox[{3768, 4541, 5171, 3767, 4542, 5172, 3769, 4543, 5173, 
            3770, 4544, 5174, 3771, 4545, 5175, 3772, 4546, 5176, 3773, 4547, 
            5177, 3774, 4548, 5178, 3775, 4549, 5179, 3776, 4550, 5180, 3777, 
            4551, 5181, 3778, 4552, 5182, 3779, 2387, 3780, 5312, 3917, 3781, 
            5313, 3918, 3782}], 
           
           Line3DBox[{3784, 4553, 5183, 3783, 4554, 5184, 3785, 4555, 5185, 
            3786, 4556, 5186, 3787, 4557, 5187, 3788, 4558, 5188, 3789, 4559, 
            5189, 3790, 4560, 5190, 3791, 4561, 5191, 3792, 4562, 5192, 3793, 
            4563, 5193, 3794, 4564, 5194, 3795, 4565, 5195, 3796, 2403, 3797, 
            5314, 3919, 3798}], 
           
           Line3DBox[{3800, 4566, 5196, 3799, 4567, 5197, 3801, 4568, 5198, 
            3802, 4569, 5199, 3803, 4570, 5200, 3804, 4571, 5201, 3805, 4572, 
            5202, 3806, 4573, 5203, 3807, 4574, 5204, 3808, 4575, 5205, 3809, 
            4576, 5206, 3810, 4577, 5207, 3811, 4578, 5208, 3812, 4579, 5209, 
            3813, 2419, 3814}], 
           
           Line3DBox[{3921, 2660, 3920, 5420, 4160, 3922, 5421, 4161, 3923, 
            5422, 4162, 3924, 5423, 4163, 3925, 5424, 4164, 3926, 5425, 4165, 
            3927, 5426, 4166, 3928, 5427, 4167, 3929, 5428, 4168, 3930, 5429, 
            4169, 3931, 5430, 4170, 3932, 5431, 4171, 3933, 5432, 4172, 3934, 
            5433, 4173, 3935}], 
           
           Line3DBox[{3937, 4580, 5315, 3936, 2676, 3938, 5434, 4174, 3939, 
            5435, 4175, 3940, 5436, 4176, 3941, 5437, 4177, 3942, 5438, 4178, 
            3943, 5439, 4179, 3944, 5440, 4180, 3945, 5441, 4181, 3946, 5442, 
            4182, 3947, 5443, 4183, 3948, 5444, 4184, 3949, 5445, 4185, 3950, 
            5446, 4186, 3951}], 
           
           Line3DBox[{3953, 4581, 5316, 3952, 4582, 5317, 3954, 2692, 3955, 
            5447, 4187, 3956, 5448, 4188, 3957, 5449, 4189, 3958, 5450, 4190, 
            3959, 5451, 4191, 3960, 5452, 4192, 3961, 5453, 4193, 3962, 5454, 
            4194, 3963, 5455, 4195, 3964, 5456, 4196, 3965, 5457, 4197, 3966, 
            5458, 4198, 3967}], 
           
           Line3DBox[{3969, 4583, 5318, 3968, 4584, 5319, 3970, 4585, 5320, 
            3971, 2708, 3972, 5459, 4199, 3973, 5460, 4200, 3974, 5461, 4201, 
            3975, 5462, 4202, 3976, 5463, 4203, 3977, 5464, 4204, 3978, 5465, 
            4205, 3979, 5466, 4206, 3980, 5467, 4207, 3981, 5468, 4208, 3982, 
            5469, 4209, 3983}], 
           
           Line3DBox[{3985, 4586, 5321, 3984, 4587, 5322, 3986, 4588, 5323, 
            3987, 4589, 5324, 3988, 2724, 3989, 5470, 4210, 3990, 5471, 4211, 
            3991, 5472, 4212, 3992, 5473, 4213, 3993, 5474, 4214, 3994, 5475, 
            4215, 3995, 5476, 4216, 3996, 5477, 4217, 3997, 5478, 4218, 3998, 
            5479, 4219, 3999}], 
           
           Line3DBox[{4001, 4590, 5325, 4000, 4591, 5326, 4002, 4592, 5327, 
            4003, 4593, 5328, 4004, 4594, 5329, 4005, 2740, 4006, 5480, 4220, 
            4007, 5481, 4221, 4008, 5482, 4222, 4009, 5483, 4223, 4010, 5484, 
            4224, 4011, 5485, 4225, 4012, 5486, 4226, 4013, 5487, 4227, 4014, 
            5488, 4228, 4015}], 
           
           Line3DBox[{4017, 4595, 5330, 4016, 4596, 5331, 4018, 4597, 5332, 
            4019, 4598, 5333, 4020, 4599, 5334, 4021, 4600, 5335, 4022, 2756, 
            4023, 5489, 4229, 4024, 5490, 4230, 4025, 5491, 4231, 4026, 5492, 
            4232, 4027, 5493, 4233, 4028, 5494, 4234, 4029, 5495, 4235, 4030, 
            5496, 4236, 4031}], 
           
           Line3DBox[{4033, 4601, 5336, 4032, 4602, 5337, 4034, 4603, 5338, 
            4035, 4604, 5339, 4036, 4605, 5340, 4037, 4606, 5341, 4038, 4607, 
            5342, 4039, 2772, 4040, 5497, 4237, 4041, 5498, 4238, 4042, 5499, 
            4239, 4043, 5500, 4240, 4044, 5501, 4241, 4045, 5502, 4242, 4046, 
            5503, 4243, 4047}], 
           
           Line3DBox[{4049, 4608, 5343, 4048, 4609, 5344, 4050, 4610, 5345, 
            4051, 4611, 5346, 4052, 4612, 5347, 4053, 4613, 5348, 4054, 4614, 
            5349, 4055, 4615, 5350, 4056, 2788, 4057, 5504, 4244, 4058, 5505, 
            4245, 4059, 5506, 4246, 4060, 5507, 4247, 4061, 5508, 4248, 4062, 
            5509, 4249, 4063}], 
           
           Line3DBox[{4065, 4616, 5351, 4064, 4617, 5352, 4066, 4618, 5353, 
            4067, 4619, 5354, 4068, 4620, 5355, 4069, 4621, 5356, 4070, 4622, 
            5357, 4071, 4623, 5358, 4072, 4624, 5359, 4073, 2804, 4074, 5510, 
            4250, 4075, 5511, 4251, 4076, 5512, 4252, 4077, 5513, 4253, 4078, 
            5514, 4254, 4079}], 
           
           Line3DBox[{4081, 4625, 5360, 4080, 4626, 5361, 4082, 4627, 5362, 
            4083, 4628, 5363, 4084, 4629, 5364, 4085, 4630, 5365, 4086, 4631, 
            5366, 4087, 4632, 5367, 4088, 4633, 5368, 4089, 4634, 5369, 4090, 
            2820, 4091, 5515, 4255, 4092, 5516, 4256, 4093, 5517, 4257, 4094, 
            5518, 4258, 4095}], 
           
           Line3DBox[{4097, 4635, 5370, 4096, 4636, 5371, 4098, 4637, 5372, 
            4099, 4638, 5373, 4100, 4639, 5374, 4101, 4640, 5375, 4102, 4641, 
            5376, 4103, 4642, 5377, 4104, 4643, 5378, 4105, 4644, 5379, 4106, 
            4645, 5380, 4107, 2836, 4108, 5519, 4259, 4109, 5520, 4260, 4110, 
            5521, 4261, 4111}], 
           
           Line3DBox[{4113, 4646, 5381, 4112, 4647, 5382, 4114, 4648, 5383, 
            4115, 4649, 5384, 4116, 4650, 5385, 4117, 4651, 5386, 4118, 4652, 
            5387, 4119, 4653, 5388, 4120, 4654, 5389, 4121, 4655, 5390, 4122, 
            4656, 5391, 4123, 4657, 5392, 4124, 2852, 4125, 5522, 4262, 4126, 
            5523, 4263, 4127}], 
           
           Line3DBox[{4129, 4658, 5393, 4128, 4659, 5394, 4130, 4660, 5395, 
            4131, 4661, 5396, 4132, 4662, 5397, 4133, 4663, 5398, 4134, 4664, 
            5399, 4135, 4665, 5400, 4136, 4666, 5401, 4137, 4667, 5402, 4138, 
            4668, 5403, 4139, 4669, 5404, 4140, 4670, 5405, 4141, 2868, 4142, 
            5524, 4264, 4143}], 
           
           Line3DBox[{4145, 4671, 5406, 4144, 4672, 5407, 4146, 4673, 5408, 
            4147, 4674, 5409, 4148, 4675, 5410, 4149, 4676, 5411, 4150, 4677, 
            5412, 4151, 4678, 5413, 4152, 4679, 5414, 4153, 4680, 5415, 4154, 
            4681, 5416, 4155, 4682, 5417, 4156, 4683, 5418, 4157, 4684, 5419, 
            4158, 2884, 4159}]}, {
           GrayLevel[0.2], 
           
           Line3DBox[{1025, 1265, 1026, 4685, 1280, 1055, 4686, 1295, 1070, 
            4688, 1310, 1085, 4691, 1325, 1100, 4695, 1340, 1115, 4700, 1355, 
            1130, 4706, 1370, 1145, 4713, 1385, 1160, 4721, 1400, 1175, 4730, 
            1415, 1190, 4740, 1430, 1205, 4751, 1445, 1220, 4763, 1460, 1235, 
            4776, 1475, 1250}], 
           
           Line3DBox[{1027, 1266, 4790, 1028, 1281, 1056, 4687, 1296, 1071, 
            4689, 1311, 1086, 4692, 1326, 1101, 4696, 1341, 1116, 4701, 1356, 
            1131, 4707, 1371, 1146, 4714, 1386, 1161, 4722, 1401, 1176, 4731, 
            1416, 1191, 4741, 1431, 1206, 4752, 1446, 1221, 4764, 1461, 1236, 
            4777, 1476, 1251}], 
           
           Line3DBox[{1029, 1267, 4791, 1030, 1282, 4804, 1057, 1297, 1072, 
            4690, 1312, 1087, 4693, 1327, 1102, 4697, 1342, 1117, 4702, 1357, 
            1132, 4708, 1372, 1147, 4715, 1387, 1162, 4723, 1402, 1177, 4732, 
            1417, 1192, 4742, 1432, 1207, 4753, 1447, 1222, 4765, 1462, 1237, 
            4778, 1477, 1252}], 
           
           Line3DBox[{1031, 1268, 4792, 1032, 1283, 4805, 1058, 1298, 4817, 
            1073, 1313, 1088, 4694, 1328, 1103, 4698, 1343, 1118, 4703, 1358, 
            1133, 4709, 1373, 1148, 4716, 1388, 1163, 4724, 1403, 1178, 4733, 
            1418, 1193, 4743, 1433, 1208, 4754, 1448, 1223, 4766, 1463, 1238, 
            4779, 1478, 1253}], 
           
           Line3DBox[{1033, 1269, 4793, 1034, 1284, 4806, 1059, 1299, 4818, 
            1074, 1314, 4829, 1089, 1329, 1104, 4699, 1344, 1119, 4704, 1359, 
            1134, 4710, 1374, 1149, 4717, 1389, 1164, 4725, 1404, 1179, 4734, 
            1419, 1194, 4744, 1434, 1209, 4755, 1449, 1224, 4767, 1464, 1239, 
            4780, 1479, 1254}], 
           
           Line3DBox[{1035, 1270, 4794, 1036, 1285, 4807, 1060, 1300, 4819, 
            1075, 1315, 4830, 1090, 1330, 4840, 1105, 1345, 1120, 4705, 1360, 
            1135, 4711, 1375, 1150, 4718, 1390, 1165, 4726, 1405, 1180, 4735, 
            1420, 1195, 4745, 1435, 1210, 4756, 1450, 1225, 4768, 1465, 1240, 
            4781, 1480, 1255}], 
           
           Line3DBox[{1037, 1271, 4795, 1038, 1286, 4808, 1061, 1301, 4820, 
            1076, 1316, 4831, 1091, 1331, 4841, 1106, 1346, 4850, 1121, 1361, 
            1136, 4712, 1376, 1151, 4719, 1391, 1166, 4727, 1406, 1181, 4736, 
            1421, 1196, 4746, 1436, 1211, 4757, 1451, 1226, 4769, 1466, 1241, 
            4782, 1481, 1256}], 
           
           Line3DBox[{1039, 1272, 4796, 1040, 1287, 4809, 1062, 1302, 4821, 
            1077, 1317, 4832, 1092, 1332, 4842, 1107, 1347, 4851, 1122, 1362, 
            4859, 1137, 1377, 1152, 4720, 1392, 1167, 4728, 1407, 1182, 4737, 
            1422, 1197, 4747, 1437, 1212, 4758, 1452, 1227, 4770, 1467, 1242, 
            4783, 1482, 1257}], 
           
           Line3DBox[{1041, 1273, 4797, 1042, 1288, 4810, 1063, 1303, 4822, 
            1078, 1318, 4833, 1093, 1333, 4843, 1108, 1348, 4852, 1123, 1363, 
            4860, 1138, 1378, 4867, 1153, 1393, 1168, 4729, 1408, 1183, 4738, 
            1423, 1198, 4748, 1438, 1213, 4759, 1453, 1228, 4771, 1468, 1243, 
            4784, 1483, 1258}], 
           
           Line3DBox[{1043, 1274, 4798, 1044, 1289, 4811, 1064, 1304, 4823, 
            1079, 1319, 4834, 1094, 1334, 4844, 1109, 1349, 4853, 1124, 1364, 
            4861, 1139, 1379, 4868, 1154, 1394, 4874, 1169, 1409, 1184, 4739, 
            1424, 1199, 4749, 1439, 1214, 4760, 1454, 1229, 4772, 1469, 1244, 
            4785, 1484, 1259}], 
           
           Line3DBox[{1045, 1275, 4799, 1046, 1290, 4812, 1065, 1305, 4824, 
            1080, 1320, 4835, 1095, 1335, 4845, 1110, 1350, 4854, 1125, 1365, 
            4862, 1140, 1380, 4869, 1155, 1395, 4875, 1170, 1410, 4880, 1185, 
            1425, 1200, 4750, 1440, 1215, 4761, 1455, 1230, 4773, 1470, 1245, 
            4786, 1485, 1260}], 
           
           Line3DBox[{1047, 1276, 4800, 1048, 1291, 4813, 1066, 1306, 4825, 
            1081, 1321, 4836, 1096, 1336, 4846, 1111, 1351, 4855, 1126, 1366, 
            4863, 1141, 1381, 4870, 1156, 1396, 4876, 1171, 1411, 4881, 1186, 
            1426, 4885, 1201, 1441, 1216, 4762, 1456, 1231, 4774, 1471, 1246, 
            4787, 1486, 1261}], 
           
           Line3DBox[{1049, 1277, 4801, 1050, 1292, 4814, 1067, 1307, 4826, 
            1082, 1322, 4837, 1097, 1337, 4847, 1112, 1352, 4856, 1127, 1367, 
            4864, 1142, 1382, 4871, 1157, 1397, 4877, 1172, 1412, 4882, 1187, 
            1427, 4886, 1202, 1442, 4889, 1217, 1457, 1232, 4775, 1472, 1247, 
            4788, 1487, 1262}], 
           
           Line3DBox[{1051, 1278, 4802, 1052, 1293, 4815, 1068, 1308, 4827, 
            1083, 1323, 4838, 1098, 1338, 4848, 1113, 1353, 4857, 1128, 1368, 
            4865, 1143, 1383, 4872, 1158, 1398, 4878, 1173, 1413, 4883, 1188, 
            1428, 4887, 1203, 1443, 4890, 1218, 1458, 4892, 1233, 1473, 1248, 
            4789, 1488, 1263}], 
           
           Line3DBox[{1053, 1279, 4803, 1054, 1294, 4816, 1069, 1309, 4828, 
            1084, 1324, 4839, 1099, 1339, 4849, 1114, 1354, 4858, 1129, 1369, 
            4866, 1144, 1384, 4873, 1159, 1399, 4879, 1174, 1414, 4884, 1189, 
            1429, 4888, 1204, 1444, 4891, 1219, 1459, 4893, 1234, 1474, 4894, 
            1249, 1489, 1264}], 
           
           Line3DBox[{1490, 1730, 1491, 4895, 1745, 1520, 4896, 1760, 1535, 
            4898, 1775, 1550, 4901, 1790, 1565, 4905, 1805, 1580, 4910, 1820, 
            1595, 4916, 1835, 1610, 4923, 1850, 1625, 4931, 1865, 1640, 4940, 
            1880, 1655, 4950, 1895, 1670, 4961, 1910, 1685, 4973, 1925, 1700, 
            4986, 1940, 1715}], 
           
           Line3DBox[{1492, 1731, 5000, 1493, 1746, 1521, 4897, 1761, 1536, 
            4899, 1776, 1551, 4902, 1791, 1566, 4906, 1806, 1581, 4911, 1821, 
            1596, 4917, 1836, 1611, 4924, 1851, 1626, 4932, 1866, 1641, 4941, 
            1881, 1656, 4951, 1896, 1671, 4962, 1911, 1686, 4974, 1926, 1701, 
            4987, 1941, 1716}], 
           
           Line3DBox[{1494, 1732, 5001, 1495, 1747, 5014, 1522, 1762, 1537, 
            4900, 1777, 1552, 4903, 1792, 1567, 4907, 1807, 1582, 4912, 1822, 
            1597, 4918, 1837, 1612, 4925, 1852, 1627, 4933, 1867, 1642, 4942, 
            1882, 1657, 4952, 1897, 1672, 4963, 1912, 1687, 4975, 1927, 1702, 
            4988, 1942, 1717}], 
           
           Line3DBox[{1496, 1733, 5002, 1497, 1748, 5015, 1523, 1763, 5027, 
            1538, 1778, 1553, 4904, 1793, 1568, 4908, 1808, 1583, 4913, 1823, 
            1598, 4919, 1838, 1613, 4926, 1853, 1628, 4934, 1868, 1643, 4943, 
            1883, 1658, 4953, 1898, 1673, 4964, 1913, 1688, 4976, 1928, 1703, 
            4989, 1943, 1718}], 
           
           Line3DBox[{1498, 1734, 5003, 1499, 1749, 5016, 1524, 1764, 5028, 
            1539, 1779, 5039, 1554, 1794, 1569, 4909, 1809, 1584, 4914, 1824, 
            1599, 4920, 1839, 1614, 4927, 1854, 1629, 4935, 1869, 1644, 4944, 
            1884, 1659, 4954, 1899, 1674, 4965, 1914, 1689, 4977, 1929, 1704, 
            4990, 1944, 1719}], 
           
           Line3DBox[{1500, 1735, 5004, 1501, 1750, 5017, 1525, 1765, 5029, 
            1540, 1780, 5040, 1555, 1795, 5050, 1570, 1810, 1585, 4915, 1825, 
            1600, 4921, 1840, 1615, 4928, 1855, 1630, 4936, 1870, 1645, 4945, 
            1885, 1660, 4955, 1900, 1675, 4966, 1915, 1690, 4978, 1930, 1705, 
            4991, 1945, 1720}], 
           
           Line3DBox[{1502, 1736, 5005, 1503, 1751, 5018, 1526, 1766, 5030, 
            1541, 1781, 5041, 1556, 1796, 5051, 1571, 1811, 5060, 1586, 1826, 
            1601, 4922, 1841, 1616, 4929, 1856, 1631, 4937, 1871, 1646, 4946, 
            1886, 1661, 4956, 1901, 1676, 4967, 1916, 1691, 4979, 1931, 1706, 
            4992, 1946, 1721}], 
           
           Line3DBox[{1504, 1737, 5006, 1505, 1752, 5019, 1527, 1767, 5031, 
            1542, 1782, 5042, 1557, 1797, 5052, 1572, 1812, 5061, 1587, 1827, 
            5069, 1602, 1842, 1617, 4930, 1857, 1632, 4938, 1872, 1647, 4947, 
            1887, 1662, 4957, 1902, 1677, 4968, 1917, 1692, 4980, 1932, 1707, 
            4993, 1947, 1722}], 
           
           Line3DBox[{1506, 1738, 5007, 1507, 1753, 5020, 1528, 1768, 5032, 
            1543, 1783, 5043, 1558, 1798, 5053, 1573, 1813, 5062, 1588, 1828, 
            5070, 1603, 1843, 5077, 1618, 1858, 1633, 4939, 1873, 1648, 4948, 
            1888, 1663, 4958, 1903, 1678, 4969, 1918, 1693, 4981, 1933, 1708, 
            4994, 1948, 1723}], 
           
           Line3DBox[{1508, 1739, 5008, 1509, 1754, 5021, 1529, 1769, 5033, 
            1544, 1784, 5044, 1559, 1799, 5054, 1574, 1814, 5063, 1589, 1829, 
            5071, 1604, 1844, 5078, 1619, 1859, 5084, 1634, 1874, 1649, 4949, 
            1889, 1664, 4959, 1904, 1679, 4970, 1919, 1694, 4982, 1934, 1709, 
            4995, 1949, 1724}], 
           
           Line3DBox[{1510, 1740, 5009, 1511, 1755, 5022, 1530, 1770, 5034, 
            1545, 1785, 5045, 1560, 1800, 5055, 1575, 1815, 5064, 1590, 1830, 
            5072, 1605, 1845, 5079, 1620, 1860, 5085, 1635, 1875, 5090, 1650, 
            1890, 1665, 4960, 1905, 1680, 4971, 1920, 1695, 4983, 1935, 1710, 
            4996, 1950, 1725}], 
           
           Line3DBox[{1512, 1741, 5010, 1513, 1756, 5023, 1531, 1771, 5035, 
            1546, 1786, 5046, 1561, 1801, 5056, 1576, 1816, 5065, 1591, 1831, 
            5073, 1606, 1846, 5080, 1621, 1861, 5086, 1636, 1876, 5091, 1651, 
            1891, 5095, 1666, 1906, 1681, 4972, 1921, 1696, 4984, 1936, 1711, 
            4997, 1951, 1726}], 
           
           Line3DBox[{1514, 1742, 5011, 1515, 1757, 5024, 1532, 1772, 5036, 
            1547, 1787, 5047, 1562, 1802, 5057, 1577, 1817, 5066, 1592, 1832, 
            5074, 1607, 1847, 5081, 1622, 1862, 5087, 1637, 1877, 5092, 1652, 
            1892, 5096, 1667, 1907, 5099, 1682, 1922, 1697, 4985, 1937, 1712, 
            4998, 1952, 1727}], 
           
           Line3DBox[{1516, 1743, 5012, 1517, 1758, 5025, 1533, 1773, 5037, 
            1548, 1788, 5048, 1563, 1803, 5058, 1578, 1818, 5067, 1593, 1833, 
            5075, 1608, 1848, 5082, 1623, 1863, 5088, 1638, 1878, 5093, 1653, 
            1893, 5097, 1668, 1908, 5100, 1683, 1923, 5102, 1698, 1938, 1713, 
            4999, 1953, 1728}], 
           
           Line3DBox[{1518, 1744, 5013, 1519, 1759, 5026, 1534, 1774, 5038, 
            1549, 1789, 5049, 1564, 1804, 5059, 1579, 1819, 5068, 1594, 1834, 
            5076, 1609, 1849, 5083, 1624, 1864, 5089, 1639, 1879, 5094, 1654, 
            1894, 5098, 1669, 1909, 5101, 1684, 1924, 5103, 1699, 1939, 5104, 
            1714, 1954, 1729}], 
           
           Line3DBox[{1955, 2195, 1956, 5105, 2210, 1985, 5106, 2225, 2000, 
            5108, 2240, 2015, 5111, 2255, 2030, 5115, 2270, 2045, 5120, 2285, 
            2060, 5126, 2300, 2075, 5133, 2315, 2090, 5141, 2330, 2105, 5150, 
            2345, 2120, 5160, 2360, 2135, 5171, 2375, 2150, 5183, 2390, 2165, 
            5196, 2405, 2180}], 
           
           Line3DBox[{1957, 2196, 5210, 1958, 2211, 1986, 5107, 2226, 2001, 
            5109, 2241, 2016, 5112, 2256, 2031, 5116, 2271, 2046, 5121, 2286, 
            2061, 5127, 2301, 2076, 5134, 2316, 2091, 5142, 2331, 2106, 5151, 
            2346, 2121, 5161, 2361, 2136, 5172, 2376, 2151, 5184, 2391, 2166, 
            5197, 2406, 2181}], 
           
           Line3DBox[{1959, 2197, 5211, 1960, 2212, 5224, 1987, 2227, 2002, 
            5110, 2242, 2017, 5113, 2257, 2032, 5117, 2272, 2047, 5122, 2287, 
            2062, 5128, 2302, 2077, 5135, 2317, 2092, 5143, 2332, 2107, 5152, 
            2347, 2122, 5162, 2362, 2137, 5173, 2377, 2152, 5185, 2392, 2167, 
            5198, 2407, 2182}], 
           
           Line3DBox[{1961, 2198, 5212, 1962, 2213, 5225, 1988, 2228, 5237, 
            2003, 2243, 2018, 5114, 2258, 2033, 5118, 2273, 2048, 5123, 2288, 
            2063, 5129, 2303, 2078, 5136, 2318, 2093, 5144, 2333, 2108, 5153, 
            2348, 2123, 5163, 2363, 2138, 5174, 2378, 2153, 5186, 2393, 2168, 
            5199, 2408, 2183}], 
           
           Line3DBox[{1963, 2199, 5213, 1964, 2214, 5226, 1989, 2229, 5238, 
            2004, 2244, 5249, 2019, 2259, 2034, 5119, 2274, 2049, 5124, 2289, 
            2064, 5130, 2304, 2079, 5137, 2319, 2094, 5145, 2334, 2109, 5154, 
            2349, 2124, 5164, 2364, 2139, 5175, 2379, 2154, 5187, 2394, 2169, 
            5200, 2409, 2184}], 
           
           Line3DBox[{1965, 2200, 5214, 1966, 2215, 5227, 1990, 2230, 5239, 
            2005, 2245, 5250, 2020, 2260, 5260, 2035, 2275, 2050, 5125, 2290, 
            2065, 5131, 2305, 2080, 5138, 2320, 2095, 5146, 2335, 2110, 5155, 
            2350, 2125, 5165, 2365, 2140, 5176, 2380, 2155, 5188, 2395, 2170, 
            5201, 2410, 2185}], 
           
           Line3DBox[{1967, 2201, 5215, 1968, 2216, 5228, 1991, 2231, 5240, 
            2006, 2246, 5251, 2021, 2261, 5261, 2036, 2276, 5270, 2051, 2291, 
            2066, 5132, 2306, 2081, 5139, 2321, 2096, 5147, 2336, 2111, 5156, 
            2351, 2126, 5166, 2366, 2141, 5177, 2381, 2156, 5189, 2396, 2171, 
            5202, 2411, 2186}], 
           
           Line3DBox[{1969, 2202, 5216, 1970, 2217, 5229, 1992, 2232, 5241, 
            2007, 2247, 5252, 2022, 2262, 5262, 2037, 2277, 5271, 2052, 2292, 
            5279, 2067, 2307, 2082, 5140, 2322, 2097, 5148, 2337, 2112, 5157, 
            2352, 2127, 5167, 2367, 2142, 5178, 2382, 2157, 5190, 2397, 2172, 
            5203, 2412, 2187}], 
           
           Line3DBox[{1971, 2203, 5217, 1972, 2218, 5230, 1993, 2233, 5242, 
            2008, 2248, 5253, 2023, 2263, 5263, 2038, 2278, 5272, 2053, 2293, 
            5280, 2068, 2308, 5287, 2083, 2323, 2098, 5149, 2338, 2113, 5158, 
            2353, 2128, 5168, 2368, 2143, 5179, 2383, 2158, 5191, 2398, 2173, 
            5204, 2413, 2188}], 
           
           Line3DBox[{1973, 2204, 5218, 1974, 2219, 5231, 1994, 2234, 5243, 
            2009, 2249, 5254, 2024, 2264, 5264, 2039, 2279, 5273, 2054, 2294, 
            5281, 2069, 2309, 5288, 2084, 2324, 5294, 2099, 2339, 2114, 5159, 
            2354, 2129, 5169, 2369, 2144, 5180, 2384, 2159, 5192, 2399, 2174, 
            5205, 2414, 2189}], 
           
           Line3DBox[{1975, 2205, 5219, 1976, 2220, 5232, 1995, 2235, 5244, 
            2010, 2250, 5255, 2025, 2265, 5265, 2040, 2280, 5274, 2055, 2295, 
            5282, 2070, 2310, 5289, 2085, 2325, 5295, 2100, 2340, 5300, 2115, 
            2355, 2130, 5170, 2370, 2145, 5181, 2385, 2160, 5193, 2400, 2175, 
            5206, 2415, 2190}], 
           
           Line3DBox[{1977, 2206, 5220, 1978, 2221, 5233, 1996, 2236, 5245, 
            2011, 2251, 5256, 2026, 2266, 5266, 2041, 2281, 5275, 2056, 2296, 
            5283, 2071, 2311, 5290, 2086, 2326, 5296, 2101, 2341, 5301, 2116, 
            2356, 5305, 2131, 2371, 2146, 5182, 2386, 2161, 5194, 2401, 2176, 
            5207, 2416, 2191}], 
           
           Line3DBox[{1979, 2207, 5221, 1980, 2222, 5234, 1997, 2237, 5246, 
            2012, 2252, 5257, 2027, 2267, 5267, 2042, 2282, 5276, 2057, 2297, 
            5284, 2072, 2312, 5291, 2087, 2327, 5297, 2102, 2342, 5302, 2117, 
            2357, 5306, 2132, 2372, 5309, 2147, 2387, 2162, 5195, 2402, 2177, 
            5208, 2417, 2192}], 
           
           Line3DBox[{1981, 2208, 5222, 1982, 2223, 5235, 1998, 2238, 5247, 
            2013, 2253, 5258, 2028, 2268, 5268, 2043, 2283, 5277, 2058, 2298, 
            5285, 2073, 2313, 5292, 2088, 2328, 5298, 2103, 2343, 5303, 2118, 
            2358, 5307, 2133, 2373, 5310, 2148, 2388, 5312, 2163, 2403, 2178, 
            5209, 2418, 2193}], 
           
           Line3DBox[{1983, 2209, 5223, 1984, 2224, 5236, 1999, 2239, 5248, 
            2014, 2254, 5259, 2029, 2269, 5269, 2044, 2284, 5278, 2059, 2299, 
            5286, 2074, 2314, 5293, 2089, 2329, 5299, 2104, 2344, 5304, 2119, 
            2359, 5308, 2134, 2374, 5311, 2149, 2389, 5313, 2164, 2404, 5314, 
            2179, 2419, 2194}], 
           
           Line3DBox[{2420, 2660, 2421, 5315, 2675, 2450, 5316, 2690, 2465, 
            5318, 2705, 2480, 5321, 2720, 2495, 5325, 2735, 2510, 5330, 2750, 
            2525, 5336, 2765, 2540, 5343, 2780, 2555, 5351, 2795, 2570, 5360, 
            2810, 2585, 5370, 2825, 2600, 5381, 2840, 2615, 5393, 2855, 2630, 
            5406, 2870, 2645}], 
           
           Line3DBox[{2422, 2661, 5420, 2423, 2676, 2451, 5317, 2691, 2466, 
            5319, 2706, 2481, 5322, 2721, 2496, 5326, 2736, 2511, 5331, 2751, 
            2526, 5337, 2766, 2541, 5344, 2781, 2556, 5352, 2796, 2571, 5361, 
            2811, 2586, 5371, 2826, 2601, 5382, 2841, 2616, 5394, 2856, 2631, 
            5407, 2871, 2646}], 
           
           Line3DBox[{2424, 2662, 5421, 2425, 2677, 5434, 2452, 2692, 2467, 
            5320, 2707, 2482, 5323, 2722, 2497, 5327, 2737, 2512, 5332, 2752, 
            2527, 5338, 2767, 2542, 5345, 2782, 2557, 5353, 2797, 2572, 5362, 
            2812, 2587, 5372, 2827, 2602, 5383, 2842, 2617, 5395, 2857, 2632, 
            5408, 2872, 2647}], 
           
           Line3DBox[{2426, 2663, 5422, 2427, 2678, 5435, 2453, 2693, 5447, 
            2468, 2708, 2483, 5324, 2723, 2498, 5328, 2738, 2513, 5333, 2753, 
            2528, 5339, 2768, 2543, 5346, 2783, 2558, 5354, 2798, 2573, 5363, 
            2813, 2588, 5373, 2828, 2603, 5384, 2843, 2618, 5396, 2858, 2633, 
            5409, 2873, 2648}], 
           
           Line3DBox[{2428, 2664, 5423, 2429, 2679, 5436, 2454, 2694, 5448, 
            2469, 2709, 5459, 2484, 2724, 2499, 5329, 2739, 2514, 5334, 2754, 
            2529, 5340, 2769, 2544, 5347, 2784, 2559, 5355, 2799, 2574, 5364, 
            2814, 2589, 5374, 2829, 2604, 5385, 2844, 2619, 5397, 2859, 2634, 
            5410, 2874, 2649}], 
           
           Line3DBox[{2430, 2665, 5424, 2431, 2680, 5437, 2455, 2695, 5449, 
            2470, 2710, 5460, 2485, 2725, 5470, 2500, 2740, 2515, 5335, 2755, 
            2530, 5341, 2770, 2545, 5348, 2785, 2560, 5356, 2800, 2575, 5365, 
            2815, 2590, 5375, 2830, 2605, 5386, 2845, 2620, 5398, 2860, 2635, 
            5411, 2875, 2650}], 
           
           Line3DBox[{2432, 2666, 5425, 2433, 2681, 5438, 2456, 2696, 5450, 
            2471, 2711, 5461, 2486, 2726, 5471, 2501, 2741, 5480, 2516, 2756, 
            2531, 5342, 2771, 2546, 5349, 2786, 2561, 5357, 2801, 2576, 5366, 
            2816, 2591, 5376, 2831, 2606, 5387, 2846, 2621, 5399, 2861, 2636, 
            5412, 2876, 2651}], 
           
           Line3DBox[{2434, 2667, 5426, 2435, 2682, 5439, 2457, 2697, 5451, 
            2472, 2712, 5462, 2487, 2727, 5472, 2502, 2742, 5481, 2517, 2757, 
            5489, 2532, 2772, 2547, 5350, 2787, 2562, 5358, 2802, 2577, 5367, 
            2817, 2592, 5377, 2832, 2607, 5388, 2847, 2622, 5400, 2862, 2637, 
            5413, 2877, 2652}], 
           
           Line3DBox[{2436, 2668, 5427, 2437, 2683, 5440, 2458, 2698, 5452, 
            2473, 2713, 5463, 2488, 2728, 5473, 2503, 2743, 5482, 2518, 2758, 
            5490, 2533, 2773, 5497, 2548, 2788, 2563, 5359, 2803, 2578, 5368, 
            2818, 2593, 5378, 2833, 2608, 5389, 2848, 2623, 5401, 2863, 2638, 
            5414, 2878, 2653}], 
           
           Line3DBox[{2438, 2669, 5428, 2439, 2684, 5441, 2459, 2699, 5453, 
            2474, 2714, 5464, 2489, 2729, 5474, 2504, 2744, 5483, 2519, 2759, 
            5491, 2534, 2774, 5498, 2549, 2789, 5504, 2564, 2804, 2579, 5369, 
            2819, 2594, 5379, 2834, 2609, 5390, 2849, 2624, 5402, 2864, 2639, 
            5415, 2879, 2654}], 
           
           Line3DBox[{2440, 2670, 5429, 2441, 2685, 5442, 2460, 2700, 5454, 
            2475, 2715, 5465, 2490, 2730, 5475, 2505, 2745, 5484, 2520, 2760, 
            5492, 2535, 2775, 5499, 2550, 2790, 5505, 2565, 2805, 5510, 2580, 
            2820, 2595, 5380, 2835, 2610, 5391, 2850, 2625, 5403, 2865, 2640, 
            5416, 2880, 2655}], 
           
           Line3DBox[{2442, 2671, 5430, 2443, 2686, 5443, 2461, 2701, 5455, 
            2476, 2716, 5466, 2491, 2731, 5476, 2506, 2746, 5485, 2521, 2761, 
            5493, 2536, 2776, 5500, 2551, 2791, 5506, 2566, 2806, 5511, 2581, 
            2821, 5515, 2596, 2836, 2611, 5392, 2851, 2626, 5404, 2866, 2641, 
            5417, 2881, 2656}], 
           
           Line3DBox[{2444, 2672, 5431, 2445, 2687, 5444, 2462, 2702, 5456, 
            2477, 2717, 5467, 2492, 2732, 5477, 2507, 2747, 5486, 2522, 2762, 
            5494, 2537, 2777, 5501, 2552, 2792, 5507, 2567, 2807, 5512, 2582, 
            2822, 5516, 2597, 2837, 5519, 2612, 2852, 2627, 5405, 2867, 2642, 
            5418, 2882, 2657}], 
           
           Line3DBox[{2446, 2673, 5432, 2447, 2688, 5445, 2463, 2703, 5457, 
            2478, 2718, 5468, 2493, 2733, 5478, 2508, 2748, 5487, 2523, 2763, 
            5495, 2538, 2778, 5502, 2553, 2793, 5508, 2568, 2808, 5513, 2583, 
            2823, 5517, 2598, 2838, 5520, 2613, 2853, 5522, 2628, 2868, 2643, 
            5419, 2883, 2658}], 
           
           Line3DBox[{2448, 2674, 5433, 2449, 2689, 5446, 2464, 2704, 5458, 
            2479, 2719, 5469, 2494, 2734, 5479, 2509, 2749, 5488, 2524, 2764, 
            5496, 2539, 2779, 5503, 2554, 2794, 5509, 2569, 2809, 5514, 2584, 
            2824, 5518, 2599, 2839, 5521, 2614, 2854, 5523, 2629, 2869, 5524, 
            2644, 2884, 
            2659}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
         VertexNormals -> CompressedData["
1:eJzt3LGNQjEQBcAV1HAFUAeBe6CEkyClBJq4GNGJK6ANYkogsRPLSOgHnA3z
Mk8Ju+u3+T3u9quI+PuJWMez3BPnnHPOOeecc84555xzzuf16/Z0OF9uuUp5
c84555xzzjnnnHPOOed8fk+cc84555xzzjnnnHPOOf8cj27G+6fAOeecc845
55xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzvk7vfRz5CpNjwfn
nHPOOeecc84555xzzjnnnHPOOeecc8455/x1T5xzzjnnnHPOOeecc84555xz
zjnnnHPOOeec8+Ue3YzX68s555xzzjnnnHPOOeecc84555xzzjnnnHPOOeec
c84555xzzjnnnHPOOeecc875jF56v3KVph+Mc84555xzzjnnnHPOOeecc845
5zxxzjnnnHPOOeecc84555xzzjnnnLce3YzXq8A555xzzjnnnHPOOeecc845
55xzzjnnnHPOl3m5G81VmvtSzjnnnHM+lyfOOeeccz63RzfjzRU555xzzjnn
nHPOOeecc84553wWL/vYXKXZ23LOOeecc84555xzzt/viXPOOeecc84555xz
/v8e3Yx3B8g555xzzjnnnHPO+Tf4AwjwjoI=
         "]], {}, {{}, {}}}, Axes -> True, AxesLabel -> {None, None, None}, 
      BoxRatios -> {1, 1, 0.4}, DisplayFunction -> Identity, FaceGridsStyle -> 
      Automatic, ImageSize -> {180., 166.74088966451538`}, 
      Method -> {"DefaultBoundaryStyle" -> Directive[
          GrayLevel[0.3]], 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "RotationControl" -> "Globe"}, PlotRange -> {Full, Full, All}, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, SphericalRegion -> True, 
      Ticks -> {Automatic, Automatic, Automatic}, ViewAngle -> 
      0.42769327351158737`, 
      ViewPoint -> {0.8794601837597164, -2.817060951308669, 
       1.6555112146383135`}, 
      ViewVertical -> {-0.14579894252339204`, 0.4670188773855414, 
       0.8721445043825072}], 
     FormBox[
      FormBox[
       TemplateBox[{"1", "6", "11", "16"}, "SwatchLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 6], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Lighting -> {{"Ambient", 
                    RGBColor[0.30756835, 0.18676585, 0.147065275]}, {
                    "Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[0.30756835, 0.18676585, 0.147065275]}, {
                    "Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30100577`", ",", "0.22414668499999998`", ",", 
                    "0.090484535`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19699838300000003`", ",", "0.252204821`", ",", 
                    "0.33320940200000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.12202865833333335`, 0.14283175833333334`, 0.064190125], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.1830429875`", ",", "0.21424763749999998`", ",",
                     "0.0962851875`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1830429875, 0.21424763749999998`, 
                    0.0962851875]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "6"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30756835, 0.18676585, 0.147065275], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20504556666666668`, 0.12451056666666668`, 
                    0.09804351666666666], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30756835`", ",", "0.18676585`", ",", 
                    "0.147065275`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30756835, 0.18676585, 0.147065275]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30756835, 0.18676585, 0.147065275], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.15375433333333333`, 0.06427100000000001, 
                    0.03486316666666667], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2306315`", ",", "0.0964065`", ",", 
                    "0.05229475`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2306315, 0.0964065, 0.05229475]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.3`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.15375433333333333`, 0.06427100000000001, 
                    0.03486316666666667], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2306315`", ",", "0.0964065`", ",", 
                    "0.05229475`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2306315, 0.0964065, 0.05229475]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               Graphics3DBox[
                SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                  DirectedInfinity[1]}, 
                PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
                0]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     Graphics3DBox[{
       GraphicsComplex3DBox[CompressedData["
1:eJzt3V+SHNeR5eESJDWof2yQACmwCIpVAaBQKAAF7oC5hlkBbMzmebaQi5gF
YCm1FC5hRlKr1a1ucR4Ux23i83DLmnkYa5k1X67hMCoy0jPiXr/n/q7H5X/9
7//lvz04Ozv7H1+cnf30LP/9z+/327PDvv7JoD8a9CeD/nTQnw36xaAvg/5i
0K8G/XrQbwb97aDfDvp3g268T7WfDPqjQX8y6E8H/dmgXwz6MugvBv1q0K8H
/WbQ3w767aB/N+je18ZXfWofDfqTQX866M8G/WLQl0F/MehXg3496DeD/nbQ
bwf9u0G3//A+Vjfep9ong/500J8N+sWgL4P+YtCvBv160G8G/e2g3w76d4Nu
P21/oe59bXzVp/bpoD8b9ItBXwb9xaBfDfr1oN8M+ttBvx307wbd8dB+Wd3+
w/tY3Xifap8N+sWgL4P+YtCvBv160G8G/e2g3w76d4Nu3uH4p24/bX+h7n1t
fNWn9mLQl0F/MehXg3496DeD/nbQbwf9u0E3vzPPUHc8tF9Wt//wPlY33qfa
ZdBfDPrVoF8P+s2gvx3020H/btDNo9Oa36U170jreJjWfjqt/Uda7+u0xvtU
+2LQrwb9etBvBv3toN8O+neD7nzFvFnd/M48Q93x0H5Z3f7D+1h9GfSpvRr0
60G/GfS3g3476N8NuvNC5yfq5tHmc+rmHY5/6vbT9hfqy6Ab71Pt9aDfDPrb
Qb8d9O8G3fm380B15yvmzermd+YZ6o6H9svqy6B7Xxtf9am9GfS3g3476N8N
uj6H821154XOT9TNo83n1M07HP/Ul0G3//A+Vjfep9q3g3476N8Nun6Svoa6
82/ngerOV8yb1c3vzDPUl0G3n7a/UPe+Nr7qU3s76N8Nur6d/pG6PofzbXXn
hc5P1M2jzefUl0F3PLRfVrf/8D5WN96n2u8GXX9Un05dP0lfQ935t/NAdecr
5s3qy6Cbdzj+qdtP21+oe18bX/Wpva//rx+qb6qfpB+kz+T82/mw83LnK84H
nMeY35kPmfc5HjoeOE7af/g82K8Yb/99yvc33pM/6u+knzf5TPoU0/xbX2RB
n+YxOc78esr7HKen8dA8xf576lf8nU75/5O/7/3u3+ub6v/oZ+gz6V/o/y3o
5v/my85jFv6/80vzPvt/+2PHSfsv85f7+v/Tesv0HNjf6A/pm05+nj6R/dqC
bv4/zQudrzuPyXnNr+3/p7zDfNBx0n7tlP/v/Wp/YVwmv97+3s/TN/X58Pdc
0M3/zX+dl5v/mC84j8nnmV+bbznvNx9xvDnl/xuP6b50HPX3m8YBx1ufD58b
+w/nE/pMzr/Mv5yXm3/qVzmPyXWYX5tX6bvc1/+3/zW+9iP+bvbr/k5TP2S+
4/Ut6Ob/5rP6TM5/nf85L3f+pl/iPCbXZ35tfnbK/zd+Uz8+9TvTczL9rqfW
Icw3nR/omzr/cj6tzzT5H86T9QWdLzoPOZU3p/X+Mp+I7ngW3f40us9zdO+n
6H6f6Pf106ObV0Y3P4ruOBnd8SS6/VZ0n7/o3ken/H+vd8obnOc4Ptlvmuf5
fHrfOM4t6NM8wPmW+ZF5k/mj44njjOO5z5/Ppf3rKf/f/Nj7yDzP6/L5dByy
f3T+43Pu/Wde730w5aHOd/3+jtuOD/Zn9nPmU47/9/X//X5Tnu1zbL5lHjCN
W1M/qy+woE95vffNqXUO/QbHB8cNx3/zKfMs8/FT/r/zPefb9pfmu8bLvNDn
0vvOcdHf2Tzdfs3nzf7O33Uah/V7jJd5q/Nj53P39f893zSv04dyvJr60WVt
fb6n+87+bxpXnCfZf015jffBqXUR/Tbnx86b9W9O+f/6F/7OzsP93vaL5gvT
c7ysrf2reYH9l+P0lCfaPzo++Zx7/51a/9DvNL739f/9/MkHmebt0zxzmhdN
efyUd0550jSuT+PQ1G9Oz/l0X55aR5l8f//O58Pnxvg7njjOGH/zL/My4z/N
V5xHmncaf30Xx13jr09pv2P89fXvu95yil/XX7b/sX/UX7P/Mf+Y/AXnw9P8
yv7H+bP5pf2P/pTjq/2P/u+p/uXUuornNd/Rh/a59D7Qt3P8dT6tz+H4O80/
9JWcRzn+6qOYpzr+et+dGkf16b1/p/UTf2+fN897inef/GJ9I/NP50v6R5Nf
YP6p3+R8zPxTH+tUvuhzbzym+3RaJ/E5nO6b6Xue4vId98yP9FXNE6f5hL+z
82+fG/vFU/MifUT7V/M2fXfvx2k9xP7R8Wla//M+8/vfl4/Xv3Y+NM0b7M/s
53yepvm/45LzN+cn+rh+v+m+m9Y9HLf0I+0ffW7NM7w/vO5TnL155TQ/cNw+
5XPZzzn+O+55XzhPm55j8+ZT6xsL38N8znHL/tTxzOfW+8nn2es+xdMv6FPe
av7leO4473ho/2e/6PPt/eJ9dGodY1pfmtb9pvXYaZ184hcmruS+6xbO26I7
/46uzxF94kz1KaI7r47uPNDr9X6ZnmPvF/t3xz37P58fxwn7r2l9buJ67svf
64/r5+kb6Q/qH+mzTv6I98W0LuH4Yz9uHuHzav9q/uS4Pq1DT/3axO9McTnF
8euLeB/7d/4+Pk8+Z/oap9YfprzM/MLxynHM/nLiLcx3HdenedK03un9an9h
XE7x+pPfbb/l8+fv6e88rTM4n5jmvdM8beKKpjxyynumcXricaZ+ZLrvp9/p
1L4CfceJj9a39vec1hOmebbzuYmf078wX5jyOPMF5zfmSdP6/dRPeD86fvqc
+Pvdl+/3/0+/27RuoD80caKT76D/YV487Vee5pHmaxNfM4275iP27/YH9t/e
39N+i+k50Hc+tT4w+ab6cfpJ+j76Ec6/p33h035l8/5TPMq073DaD2e/b39k
/zHta5n2W/g7TH705P8bb3X9JOOt7vzbeKs7XzHe6uZ3xlvd8dB4q9t/GO9p
XevU/X6qH3J8sB9SN5+yH1J3/mE/pL4MuvME+xV18zD7FXXHufuu357q1yf/
3/FZfRqfnTc4fqo7z3Z8Vl8G3fme47O6+e4p7sB42P9MnMKp/OVUXml/b96q
7vzYvFLd+YR5q/oy6M6rzUPVnVeYJ6p7392XxzmVp0/+v/eHuuOt8zl1/Qnn
c+rTfG4ZdP0R889pX7i695F56sRPTNzZqfnoKZ9A/8b7Sd18R59D3fmBPof6
Muj6UM6/1L0vzD/V7Ufvy1ee8l0m/9/+VH3yz8zrjYu682D9P/Vl0D2f+ae6
z98pLtjxyvnGxBGf8heXtZ18X/2Y6Ppk0Z2/RtdXiG6+v/Bvdf9//u3vFt3n
Kbr9XHTHn+jmBdFP8fKnfPTJ/zf/UNcPs79W1z/w/laffo9l0H0+9E/VHU/0
m9TNv5yfq993vejUOp7+v/mKuv6//fupfsfnQX0Z9KkfcnzQb504YHXz3Pvu
fzq1Ljr5/+br6tP6tv7/NO46Hqh7//r8qNvfnxqHzY9O7dtzPqGfNe3zO7X+
f4rL0P83vz+Vd5oPqXs/On6oL4PuuOp9MOWb6s4P9HPVT+1nVb+v/+/89tS8
y/mAuveX+ZO6/bHjjbr5i8+nuvn+qXmY82P9X3X9JP2yU/7/5Ds4H1b3fnH+
oG7/ar6lvgy6eaL9prrzKu+zyW9QP1Wf4BS3OPlu+kHq/v7On9XtL51vqJtf
mJ+pm487nqk7f/X5V9fvOeXD6Y9O/vIpbtrfU/9I3f7P+ba6+YLzE/Vl0J33
mGeo6xPYL6vrq9233oz6jwOP/iO/Q9qHh/3jHx52jz9+un986Z7/8XD+x/vH
3325f3zpXs/5cD3n+8cffrd/fOle/+Vw/Zf7x/+w7B9fut/XeXO+r77F2n7U
51jb0o2PvlTioy+4th/0Ede2dOOp75t46ruv7YU+/dpeTP117lvHy4eHXb3u
Q49/vK/XfeV5zvf1uk88/+W+Xr+7n6v/tLb1O3o9+rVrW7+L1znkGRVnrz9x
Nv97eNjVK84e/3hfrzh7nvN9veLs+S/39Yqzn6uft7YVZ69H/3ttPwz58UHf
fm0rzl5/4ux85uFhV684e/zjfb3i7HnO9/WKs+e/3Ncrzn6u/ujaVpy9nmFe
90F/PtepP7+2FWevP3F2fv7wsKtXnD3+8b5ecfY85/t6xdnzX+7rFWc/V795
bT8OfkTFGf2DPnyuUx9+bSvOXn/irN/08LCrV5w9/vG+XnH2POf7esXZ81/u
6xVnP3fw0T7qt+d69NvX9oN+e65Tv31tK85ef+Ksf/rwsKtXnD3+8b5ecfY8
5/t6xdnzX+7rFWc/V199bT/qq+d69NXX9oO+eq5TX31tK85ef+Kc60378LCr
V5w9/vG+XnH2POf7esXZ81/u6z94XD5X/3xtP+qf53r0z9f2g/55rlP/fG0r
zl5X4qyv/PCwq1ecPf7xvl5x9jzn+3rF2fNf7usVZz/Xv1/bj/rkuR598rX9
oE+e69QnX9uKs5+fOOsTPzzs6hVnj3+8r1ecPc/5vl5x9vyX+3rF2c/VD1/b
j54316MfvrYf9MNznfrha1tx9nMSZ33fh4ddveLs8Y/39Yqz5znf1yvOnv9y
X684+7n63mtbcfZ6/Ly1/aDvnevU917birPnS5z1cR8edvWKs8c/3tcrzp7n
fF+vOHv+y3294uzn6m+vbcXZ69HfXtsPXkeuU397bSvO/l3irC/78LCrV5w9
/vG+XnH2POf7esXZ81/u6xVnP1cfe20rzl6PPvbaVpy9Tq9vbSvO/v/EWZ/1
4WFXrzh7/ON9veLsec739Yqz57/c1yvOfq5+9dpWnL0e/eq1rTh7nfrVa3vh
dadNnPVNHx529Yqzxz/e1yvOnud8X684e/7Lfb3i7OfqS69txdnr0Zde24qz
16kvvbYVZ68/cbZNnP/6/aatOP/799s2cf637zdtxfkv32/aivO/fr9pK87/
8v22TZz//P2mrTj/8/ebtuL8p+83bcX5n77ftBXnP36/aSvOf/h+01acf//9
pq04/6/vt+0a1+Ma17RnQ5s4H/9h21ac/2HbJs7Hn9Mmzj/ftonz8WfbtuL8
s22bOB9/um0rzj/dtonz8QFt4vxg2ybOx59s24rzT7Zt4nw827YV5388bNqK
7z9u24ozbcX5021bcf4NbeL8m21bcf71tq04/3rbVpx/tW0rzr/athXnX9Im
zr/cthXnX2zbivMvtm3F+ZNtmzjfrXFKW/fvY9o1fofH2/ZsaBPnu8+3beJ8
/HzbJs6Hz7dtxfnzbZs4331Gm3neZ9s2cT58tm0rzp9t28T57tG2TZyPj7Zt
4nx4tG0rzr89bNqK829pE+ffbtuK72+3bcWZtuL85batOH+5bSvOX27bivMX
tInzF9u24vzFtq04f7FtK85Ptm3F+cm2rTg/2bYV568Pm7bi/DVt4vz1tq04
f71tK77n2/Y4tBXn821bcT7fthXnr2gT56+2bcX5q21bcf5q21acn27bivPT
bVtxfrptK87fHjZtxflb2sT5221bcf5221acf7dtK76/27aHoa04/27bVpy/
oU2cv9m2Fedvtm3F+ZttW3F+tm0rzs+2bcX52bZNnH9Yv0faxPnuctsmzh8v
t23ifLzctonzh8ttW/fvJe0av4vLbXs2tInzDxfbNnG+u9i2ifPHi22bOB8v
tm3i/OFi2ybOh4ttmzhfXGzbivPzw6atOD/fthXn59u24vx821acn2/bivNz
2sT5+bat+D7fthVn2orzsm0rzsu2rTgv27bivGzbivOybSvOy7atOL88bNqK
88ttW3F+uW0rzi+3bcX55batOL+kTZxfbtuK88ttW/F9sW3vhrbi/GLbVpxf
bNuK84ttW3F+sW0rzi+2bcX51WHTVpxfbduK86ttW3F+tW0rzq+2bcX5FW3i
/GrbVpxfbduK89W2rfhebduPQ1txvtq2FeerbVtxvtq2FeerbVtxfn3YtBXn
19u24vx621acX2/bivPrbVtxfk2bOL/ethXn19u24ny9bSvO19u24nu9bY9D
W3G+3rYV5+ttW3G+3rYV5zeHTVtxfrNtK85vtm3F+c22rTi/2bYV5ze0ifOb
bVtxfrNtK84327bifLNtK84327bie7NtPwxtxflm21acb7ZtxfndYdNWnN9t
24rzu21bcX63bSvO77ZtxfkdbeL8bttWnN9t24rz221bcX67bSvOb7dtxfnt
tq34vt22h6GtOL/dthXn94dNW3F+v20rzu+3bcX5/batOL/fthXn97SJ8/tt
W3F+v20rzrfbtuJ8u20rzrfbtuJ8u20rzrfbtuJ7u20vhrZxufqj8Zvi78nl
6uvl+PhFcLnNf4qvFT9GLlffJOfP/Bou1/l9jq/5NVyu89G6nsx34XLb/Cm8
bOY3crnm/fC7crnmpzk++a1crvlUfV/X9+Fx5XIrP4HLdbyq+CSvgcu1f83x
GV/kcu0PKp6uA8LjyuVW/wCX23zR+Hp/wuePrs8fHR+peFnm3fW58nXhX/WR
4HTlcs3r6nOT78PlOk+p65ErCKfrulWuM/0cXK7jYPGp8s/x9eJzy+X+gThH
j58Dl1t+AlxufB653Phvjcs1zvElk7fD5R6Mc7jbzE/hcjPPksvNeCSXmzxB
LrfyN7hcfdHiVvHrik/VR4oPyHpK6a5bRWc9pT5Xnx9OVy7XvK6+l+vd4XRd
h83nut4dTnf9PLlc54PF6crJ5LmVf47vl+cdLvdOXjQ+4Loe0bjcfyLOcMBy
uVkfaVyucY4vmbwdLvdgnMPdJv+By03+L5cbP0cuN/6JXG7Nr+Fy9UWLW814
DZfbfP7EnXWrOo/rVjk+625yua7DwunK5ZrX1fdKvg+X6zylrtNxM5yu3Ffi
EJ8ALlcfqXhT+ef4hHLm8Rvl+eMDZv0ILrfW4+Ry13XSxuX+M3GG05XLTb4t
l3swzvE5Mz+Fy41vIJcbP0cuN+OsXG75n3C5+qLFueLXFeeKj1ScK/5Gca7M
u4tzZT5YnKvzlGX778blyhVEZ727rtN12BzP+mDFwX0TOY88/6rr8xdXms+B
y81zIZeb50guN8+dXG49p3C5d8Y5Pqc8Epxu43L/hTinXfsludzqx+Ry1+8p
l1vronC56VflcqsfhsvVFy3Odf0+crn6/MW54iMV58q8W85VLrf5SHC6crmN
K4AzblyunEx0uIKKg/sm8rnxC+ByXYctrlT+Ob6fnHl8wmX9N1xu8iK53Mqj
4HLvjHN8TnlROF253OSBjctd88bG5f6FOKdd81K53FoXhctN3iuXW3kyXK6+
aHGu+HXFueIjFefKekpxrqxbFefKekpxrvr8xF0uV66grof17vpc12Fzfta7
S5f7ig6PVJ/rPs34ePLPuc/w64pblReNryjPn/x1Wf8/XO6dcY7PKc8PpyuX
m3m6XG7GKbnc8gHkctf7sHG5/06c0/4Jvi6fGx8DLldftDhXOfP4ivj8xbmy
blWcK+tWxbm6PyW+jOuwjItyuXIFdT3rcy2X2ziZnB9Ops4j95Xj1/G0cblw
jI0rhcstXgEut64DLjfXLZdb63FwuXfGWe5WLtc4w/XK5ebz5HKLj5LLfcz3
g0tuXO4ar8blTjyuvnK4XH3j+HTpf+Ry9YHD5brvOFxuuBW5XPdp/pl8f21r
PrP+Wy73qI/0T9s8q3G5zlP+sB3H5HIz7jcuF5+/eFx9UXx9udziXuVy2Xdc
PK5+Xbhc9ncfw+WGI5PLXf7WyuUWByGXux4nl3tnnFfdfUDhcSsvksvFlz7G
r8Z/rv5aXzT6+vltPcR1j+jh6eBy277j6KxflE/nPvroy99audy2ry28rhxB
+Nv8vVwu6wW13qP/HF4X/7nyDPzn8LhHedHEL+s7cLlHOUbWneRyi6OGyz0b
uNz6fLnc5W9t43Iz34fLTT8gl1tcilzuet7G5WbeCpd7hv8cHvcO/7nyaXzR
irscY3R90eiZL9hPuy4Xfb2P5HJbnRP8Erlc97WVz4iPlDyj7QOKnvV5uNzy
LeRy8Z9rHoj/HB73KC+a+5X6G+Fxk/83Lpc6J+Fx6zl2/dN1zujpv+Ryl7+1
jcsNzwCX6/7B8Lh3xjnH4/MXlwv3lby8fC+43Dv85/I78EUr7uGE4XJbnZPo
4ffhcq3bE18g42dbT3bdGD9PLtd9bTXuwhVkHtj2aUbH56/1DPyY4nLxn8un
W69PLjdcqFzumRxjjpdjxO+Ry72TY+T8crl3zlNYt5fLLb4VLveMvO4jvrFc
rvu7P3C8XO4Z/vMF1yOXW/GHyz3ii5ZPhy8aHvdM7is6vmh43NxvcrltnybX
2XgHuYbo6/Mil2sdqvC4eR7lcq3bEx43z7tcrnVOwuPe4YvW/br+nVxu5U9w
ue47Do9b/SFcrvu7w+PeyX1xPXK5dd3yI3Ii5n1wudah+kB/L5drfaTwuEf8
5/Kd8UUr78EXrXWU9XvK5Z7J10U3zjm/fF2O1xflc+VyrauWeUjymcbjyN1E
X/MluVzr9oTHzbgkl2sdqvC4d/iiyUfP8EXD497JMeb4Zf3/cLn1u8Hlng1c
7t3E5a7nl8tNvi2Xm35ALrfyefkmOSZ8Zrnc5EFyuUf85/Kd8UWLx5VjzPH4
ollHyX0nl1v9D1xu7iO53FbnhPPI5VpXLT7jGX5d1s+sQ5X1tsSt8WJyYdEf
rNcNl2udwPC4d/iidb/ii4bHzXxfLtc6J+Fxy0+Ay638Hy63xge53PV4udzc
b3K51q8rHhefP36QddXC49a6vD6HnF10/OfynfFFi8fFF611FHzR3Pdn8vzR
jXPOb16X45e1lctddblc66pl3E1eLJdrncDkPZl3yuVa9zI8bnydxjMO9XIb
ryv3iH9XvydcblsXoL+Ty23rBdZphctt6wjkE3K5bX2B/E8ut607kK/L5bb1
iP9HLjfnlctt6xf4F3K5bV0Dv0kut6134A/K5bZ1EPxcudy2PoL/Lpfb1k24
X+Vy23qKHClcblsfhFOVy23rg3KwcLltfRDO9r5cblsfhPuVy23rg3DFcrlt
fRBuWS63rQ/KkcLltvVuOFW53LbeLQcLl9vWu+Fs78vltvVuuF+53LbeDVcs
l9vWu+GW5XLberccKVxu4zfgVOVyG78hBwuX2/gNONv7crmN34D7lctt/AZc
sVxu4zfgluVyG78hRwqX23gkOFW53MYjycHC5TYeCc72vlxu45HgfuVyG48E
VyyX23gkuGW53MYjyZHC5Ta+Dk5VLrfxdXKwcLmNr4OzvS+X2/g6uF+53MbX
wRXL5Ta+Dm5ZLrfxdXKkcLmNF4VTlcttvKgcLFxu40XhbO/L5TZeFO5XLrfx
onDFcrmNF4VblsttvOiCDpfb+Odl+7mtXq78c84j/5zj5Z+jyz9HH7jcxj+v
euOfV73xz7lOuYJVb/zzqjf+edUb/yxHCpfbeH441VYvV55fDtZ6ufL8cLb3
5XIbzw/3K5fbeH64YrncxvPDLcvlVj8Ml9v2p8CdyuW2/Sn4kK1ervtTyG/k
ctv+lBNcbtufQlzkctv+FLhiudy2PwVuWS637U+RI4XLbfut4FRbvVz3W8nB
Wi/X/VZwtvflctt+K7hfudy23wo/SS43eaxcbttvJecMl9v2D8Kdtnq57h+E
a5XLbfsH4Wblctv+wRNcbts/CPcrl9v2D8IVy+W2/YNwy3K5bf+gHClcbtsP
C6fa6uW6H1YOFi637YeFs70vl9v2w8L9yuWWDwCX2/bDwiHL5bb9sHLO1st1
vzzcqVxu2/8O1yqX2/azw83K5bb96Se43LbfHO5XLrftH4crlstt+8HhluVy
2/5uOVK43OI54HJb3Uu4Vrlc6wTKzcrltrpqJ7jc4jngcq2P1DhhuFzrycgh
y+Vaf6NxznK51iVOnVx943/f9jeNy9Uf/st2vJXLDY/QuFzyuOJyfa/HP291
udwzfaRwub6nJlwuXEGNQ753KfVy13G/cbnWcU1epS/KfS2Xe2AdNp8nJxMu
t3gNudyM23C5B+McLpc4h8s9wmcVl0v9uuODtZUzX3XfuxQut/IiuVzqix4T
399v7+Ma/1wfyXowvmirty2Xiy9aXK7rF+n3Wb+ofI48rrhc45w82zhHX8fl
xuX6nprorFvVOOR79KL/ces/V95mHdfUv2XeUFws/kbVy4WTsZ+Wy83z0rhc
uIKql2ucczxxDpcbTrZxuXAFVSfX94jleOox3uEzNy53fc7kcut3kMvN58Hl
hodqXK5xjo4v6njY6uVS7+tAPti4XOOcPNs4R3/wt7ZxuVm/kstd49a4XOpe
5nc6w3+uebV1XJNXrdfduNyMX3C5BzjG4nLxRe/kNeRyyS+qXq5xxueTy839
1rhc3j8YLrfGYbncrMvB5R65ruJyqS8aLveI/1z+EZxa1cm138jxrkdHxxe9
Y/7R6uXi87f3IcjlGufk2VkfhstNHtS4XN/zGB3uq3wc6xJHx38u39M6rpf8
nVwu+ybC5dbvKZfLPqAPHN+4XPLnC6/H9Xny5XC5R/mNfE/2tX3EN25crpwM
xzcuV+6L62lcbv4OLvcMX7TWq4xzdPZNFJeb+wcuN/db43LhHc64zsblMi+p
9TZ8pOJyc1/K5eI/1zpo8k+43KP8c463jmv6BXzR4q7y+8DlVv8ql5t1e7jc
6g/lcpP/w+VWfiqXa5zZz9C4XOZ/4XIP+PxH/Ce53FqXl8uNPweXW+OdXC7r
lsVD44vWelXuf7ncdbxuXG7Gd7jcswfrv+Vy4QjO+NzG5Rpn/OTG5TLPLi4X
/7nWQfk9kwfnOWhcbvp9uNzK9+Rys28SLrfuN7nczH/hcitflctlX1u43KNx
5vxyucm3G5fLvrZwuZXPy+XiZ1SdXOOc4+03cjz+c/mk+V5wuZnvNC43/adc
Lnlzcbnpf8jzknc3Ltf38HKexuUa58QRH6m43OQlcrn4z/pJcrlH/OfyQ5OX
wuXWfFwuN+MXXG75E3K5vFe66uTi15U/kvwfLvdonDleLvdAv1xcbtZP4HLL
b5HLdR9Qjmefpr6dXG75RXK5uT/hcuMPNS43979cLvvaiss1r4vOekrxBHAE
Z+iNyzXO8RvWeDYul/6iuFz85+IIiW+43DwHjcvVbw73qJ64w0W3462Xm8//
dP94uVz3BbTzWy83/vqX+8fL5bovpl3P+f7xbR+jvrjXL5frPIvj5XJbPQy/
74v94+Vya13iav94udy2L9j4yOVmneRm/3i53LYv3njK5U4cub6+8YfLbb4o
equXq8+PLpfrvFtdLrf5SOhyueZ16nK5zlPUG5drv4wul+s4WP2sPj96q5dr
PRl0uVz3aarL5bZ9behyue6jV5fLbfuO0RuX67oVulyudSGKR8UXVZfLbT4S
equX67oVulxu8/nR5XLN69Qbl2vejC6X67xbXS7XeUrlqfLP6HK57jtWb/Vy
rY+ELpfb9rWhy+W2Oifojct1HRZdLle+SV0u17oQxaPii6rL5TafH10ut61b
obd6ua4PojcuV18DXS7XeYq6XK7zbnW5XH2kylNz3XC57u9ux1svd9Xlct2n
qd7q5eb8crmr3rjcfK5c7qrL5db1yOWuulxuXefbfV0ut64fLldfVF0uVx9J
XS7Xebd643Kdp6DL5TauAF0ut63Dosvlum6lLperz3/mcwaXW9z6p/t643Lj
t3+5rzcuN7y8XK4+P7pcrvs01eVy3XesLpfrPnp1uVzrQpw5PsDl1nz50329
cbmsp7TzyOXK13l+udzsp1mGz32xr8vlNk4GXS7XdSt1uVzXYc/Ma+ByrY/U
jpfLxUdq55HLpX5dO79cbvZjLcPnvtjX5XLdd6wul2udE3W5XOtCnJmPy+Xi
17Xj5XKpQ9XOc76vy+U2nx9dLleuQF0ut63DosvlNu4LXS5XTubMeaRc7qo3
LjfHy+WybtXOc76vy+W2umrocrnWOVGXy7Vuj7pcrvvo1eVyrQtxpv8hl5v1
pk/39cblZn3/y31dLje6XG5bh0WXy5UrUJfLbZwMulxuXefbfV0ut65fTtQ6
ruiNq7PuJbockvvs1Ru34b5/dNe5rUOg7rpgq4uA7jpKq9OA3nzn4f1sdRxc
bvnZcLltH/3KB8Qvl8tt+47X9e/48XK5bZ9muFzeixcut+1rW7ncrCfI5bZ9
QFmfy3v84HLbvol1/elOnv9/sX4Cl1t1UOByi7+By606K3C57u8Ol5v1Irlc
93eHy816VONyec9juNyqQwOX6/7B44P1+rM+Bpeb9Te53I+sWxVnxvrgMf1a
1tngcltdiFWv9Ua43Pq94XLddxwut+07XvWsl8rltn304XJ5b2m43LavbdUP
cAXhcts+zewjhSsIl9v2Tax61qvlct0HFC436+FyuVk/l8vNertcbq5bLjfr
+XK5Wf+Xyw0v0Lhc3sMbLrfqhMHlHuAKwuUW7wCX637YcLnhKeRyw1/I5Rav
AZdrXYhwucWDwOW2ffThePFFrRcjlxueRS631TlJf7+uk8rluq8tXG54HLnc
tg8ofBvrsOFy3XccHiU8kVyu+zTD5YZXksu1/ka43PBQcrnhJeRyw1vJ5SYu
crnhuRqXy3vSw+VWHUe4XPcPhsut97bD5bp/MFzuR7iv2qcBJxMut947D5db
/B1cbvF6cLnF98HlhoOSy639enC54Q3lciufkMt9vv3/4XLd1xYuN5yGXG7b
p5l9pKsul+u+4+JTV10u13304XIv8EXD5R7wRcPlfsAXDZd7xBcNl/sRXzRc
7h2+aLjcH/RFaeVyq84uXG4+Ry63eGG43HwPudx8b7ncxEkuN3GVy7UuRNXL
xRfN7+o++uJy1/tCLtd9x8UD5b6Dy237NHN+7ve0vtejuNw8T3C51qEqLjfP
K1yudXvqObe+aM5vHdf0O/Ki6b/wRatervxz+iP2d6cfTL8ol+v+7upns49B
Ljf99/p9isulv79jPJDLzbjRuNyMP3K51hfN+dmfknEu455crnUhqu4qvmjG
XeucFJfLvuOM6+47rnpAyQvgcts++pw/+ciytul3qatWXC75zkfyocblUlet
6m5Qt6fysORrcLnWoUqeV/ux4HKTJ7Z6ufJ1yRepJ5M8tfaTweVWnmu93Owz
k8tNfr2sbfLv5ONwucehXm7y+sbl8j6g4nIzn4DLzTxDLjfzErlc60IUl5v3
hMDluo++uFzqnNS8K/MtudzM2+ByW52THJ/54rK2mbdlvwZcbuadcrnWoSou
l/nuB+bDcrmZN8vlWicw8/AjvmhxudTfyDy/9uPK5T5Y/14ud9UblxsfQi43
+4blcuN/LGubPCv7CORyqV9XPkveUySXG/8GLveY/dbyX/GH4HLjGzUul7oQ
xeXmPU5yudQ5KS73j1tftLhc6vYUlxtfTS7XOlTR/7z1RcvXo65afMD4go3L
pU5gcbn/tvVFy5ek7mV8zPiajcuVu53eJ6bu+oB8nrrrY/JP6q4Py5eoL4Mu
n+J6s7p8lut56vKJrpdMdSDUXVeRe1Z3vUsOUt31XjkzdXkHOR71ZdDlrVzX
V5c3dN1UffCVGz8+1DeRI5/eJ9b0T4bjHw36k0F/OujPBv1i0JdBfzHoV4N+
PeiDfyzX3OryqFuHI7rrhHL56q7fyvWqyy/ITarL78ilqS+DPtVj0KeUq1DX
p3fdWt11qqFej/scpveJNf2T4fhHg/5k0J8O+rNBvxj0ZdD1I+GBmq4fD2/R
9LeDfjvo1uFg38j0PrGmfzIc/2jQnwz600F/NugXg74M+uD7yiPLCTXdOiXW
R1O/HXTrcFgff3ifWNM/GY5/NOhPBv3poD8b9ItBXwZdfx2+remuL8EPNX2q
93A76NbhcF/T8D6xpsvXDPXQp/rdU73pqT7yVM93qj871Uud6ntO9Sin+olT
vb+pPt1UT819Yq1uge9zi/7JcPyjQX8y6E8H/dmgT/UVlkF/MehXg3496DeD
/nbQbwfdOhzR4ZLcd9f0T4bjHw267x1in0bTrQsCB9/0ZdDdhwoX2/TrQb8Z
9Knew+2gW4eDfYytboHvc2P/W9MfDbrvHRq4YPdvNP1i0JdBd/86/HHTrwf9
ZtCtXwI/N9WBaDqcnftCm/7JcPyjQfe9Q+w7arrv3WJfR9OXQbdOAJx3068H
farrYJ0YOMWpDkTT4RndZ9v0T4bjHw36k0G3bhD7kZp+MejLoL8YdOsHwH83
/WbQ3w767aBbh4N9y80f9X1uA8/rPs+m+95O9tE13fcisk+p6cugvxj0q0G/
HvSbQbcOAdztVAei6fC57gNv+ifD8Y8G3fd2Rn866M8G/WLQl0F/MehXg349
6FNdh7eDfjvo1uFIP4Xf3+qNorve1eo5qn896L5XBI6k6c8H/eWgWxff+kTq
1h23/ou6dZ3TWqfc+qHq1um3PqO676mw/p3680F/OeivBv31oPueLtfh1H3v
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
H0auoPTBh5ErqH1Og/8gV1D64D/IFZQ++A9yBe6bbPowv5YrKD5omCc2riD6
ME+UK3D/tHqrV5B87q/b9etq/327rlrtPxx29XBJbT/sPxz29U8H/S/b9ayK
288P+/pv9vW7z/f18F9t3+LPD/v6b/b14+eD/uW+nn1X7tc7/uywr/96Xz98
PuhfDvr5vn7258G3/9lhX//1oH8+6F8O+vmg/27Q/3nrb9f+tp8e9vVf7et3
nw36F4P+1aB/s6//ML3/909bf9j9Xk3/1b5+/GzQvxj0rwb9m339bnh/bvYT
tOv8p63vWnnIg8O+/st9/fDZoH8x6F8N+jf7+sfhvbTZX9V093llHeiPW5+z
+uMHh339l4P+2aB/MehfDfo3+/pxeA9scejq7qti/1P73D9s/cYaZ35y2Nd/
sa/fDe9jvXsy6MP7WO+e7esfhvexZh9S093fxD6npru/KfOv32/9QPcPNf0X
+/rx0aAP70s9Ph304X2ph+F9qdnP0XT3H6W9GnT3H6W92dezT6jtZxnef5r9
QOqH4T2nhyeDPrzn9PBsX78Y3nOa/UBNd99Q2qtBd99Q2ptBd99Q/CXzuuRb
5HW1TkNel/Gp5XUZ183rsk5vXpfxnryu1nvI6zI+mdfVeid5Xflo5HXpH83r
ijMgr4s/Yl5X9RvJ62p/K3ldrUuR18WnM68r35+8Lj6geV2tK5DX1e9sXres
rXlddPO66OZ10c3ropvXRTevi05eV+tz5HXxH83ran2avC7+o3ldrU+T18V/
NK8rPoC8rnxS8rryv8jr6vuS19X4Sl5X+3rI62rfGXldrTuS12XeaF5X9WkX
9DzP5HVnQ153N+R1tc5EXhe/2Lyu1oHI6zI/N6+rdW7X2VNXduH4cADkdfk9
zOvKZ3lw2OpDXld+DXld/e7kdeXLkNcVJ0ReV/VgXddO/Bf09Feua2fd3XXt
PP/kdWdDXhc/xbyueA7yunq+yOuKR3HfeuYZ5HW1Huy+9dSVXTg+n+f68hp3
87paz3Z9Ob45ed1xyOuKAyOvi09tXlf1e91Xnt/P9d/1e5rXxWc3r6v6tAt6
6ja7/pvrcP13XScwr6t9aq7/Plhb8rriHsjrst5jXlfryuR1WU8yr6t1a/K6
6n9ct13Wf5PXVV3chePz9+R1WW8zr6t1ZfK6rOeZ19W6teu2yXPI62p/kHld
7gvyuqonY16Xfsy8Lv2leV3GO/O6zBfJ62q9wbwuzzt5Xe6n5tdl/DWvS3+m
X5fnyLwu46x+Xfx087qcR78uunldnhP9uujmdZkP6dfleTKvC+dqXhfdvC66
eV1087ro5nXRzeuim9dl3CKvS7/W8rrwjuR16TdbXhedvC79csvrwtGS16U/
Na+rujfmdfm+5HVZf215Xe4/8rqzB6tuXpfxmrwuz23L67KusWz1GqfM6xL/
9fPLp6Puo/s6zOtq3DKvCy9FXpfnueV14TKtyxT+cuH4rLuQ12XdseV1ue8f
HLZ65oPmdXkezOvyu5vX5Tk0rwsHb163Pp8tr8vvsqCnvzKvS55iXpc4mNfl
viKvq/7UvC7cs/WI8nyZ1+W+lBvM/Wlel+PkBqMvHJ/8jLwu69Ytr8tx5HXp
t83ravwzr8u+BfK6us/M69b7wbyufAbzutwHcn3rfdbyuowTy1bPPLTldRl3
yOtyn7W8LuchrysOw7wufLCc3hrfltclXvJ4ia95XeJFXlfxNa9LPkdeV3UJ
Fo5PPkdel/i2vC75HHld4tvyuuRz5HWV55DX1e9AXlfPB3ld3e/kddUfkNeV
/umgk9dVf0xeV/pv9nXzOseBts+LvK703+zr5nWlf7mvm9fV+E9eV/qv93Xz
utK/HPTzff3vdR22fEryOuvgNq7js0H/YtC/GvRv9nXzusqv9euor9x0/brM
Dz4bdP066is3Xb8u9+mwf6fldblO8rry0R8c9vVf7uvNr6PedtP166jn3XiY
YV+MeV3p074Y87rMR9fv23TzOurKN928jjrxTTevSz867ENpeV30YR9Ky+vy
ueR1xeOQ1/neAHXzOt970PRhP4h5XY1Lw34Q87rSh/0g5nWlT/tBzOt430XT
zevirwz7NVpex/s6mj7s12h5XfRl0If9Gs2viz7s12h+XeJgXhf+f9h/0fK6
1AUc9lm0vC76sM+i5XXh6Id9Fi2viz7ss2h5XfRhn0XL66JP+yx+3OZ11f64
zevqvn142Nd/3OZ11T487OrHT/f1eh+PXNzDw65ez7fHPx70H7d5ne8laLzc
p/t6fQ/0O/26HP/jNq9zXbTxdZ/u6/lc9bsv9/Wjfl3O8+OQ1z087Or1e3n8
4339bsjrjkNed5jyuh+3eV3lpQ8Pu3qusx3/eF/PdbbznO/r5sd1/stB/3Gb
11We//Cwq/teyTr+8b5e9/ewT1q97hfPf7mvV5w8/sd9vi7fq/F1n+7r+V7q
zsfqPOf7er5XO//lvp7v1T534ut+3OZ1le88POzq1W8M+3HVq9/wPOf7ej3f
nv9yX6/72s8d+LqPV/t64tC4soeHXd35fx3/eF9PHNp5zvf1xKGd/3JfTxza
5w583cerff14va9XPz/sK23826f7evXz6NXPe57zfd11mjr/5b5e/ZyfO/B1
H6/29eP1vv7hZl93/2HlKQ8Pu3ri1o5/vK8nbu085/t64tbOf7mvJ27tcwe+
7uPVvn683tc/3Ozrh7f7unmc+VzL/x7v6+ZN5k/qLb8wz0B3nHS8VLc/tl9W
97n0+VSf8mPz35bXopu3ml+qN07OPAzdPMh8Qt3x2XFL3X69+b7o7b4jPs4X
zN9bno1uXmw+qm4+aF6lbp7Sxm/05l/Qj6vbbxmHNj8639edB7T8G9381zxS
3bys+e7ojueOW+r2035f52vOb5xXqJvXt/wY3XzTPEzdPMXxWN3xx+/V5omX
+7rzkraegG6+3PJIdPMs8wl1x0+v3/mm8yfnIerm9ea76uaDLe9Bd5xv6x7O
Z1/s684zzL/VzU/Nw9TNO7we55vOb8z71c2Lzf/UzXf83DYPvd7XG09Jfqlu
PuX5na+Zv5unqpuXeZ42/3q7r5vHebzzBfM79SlPrvH7N1u9xsW810m/7iec
J/31F9vjq1/2fRgZP8IdmSdyntbfOf5TJ7f08M/km3fUE6l+h+us/mvw68Ir
Nr8ucSOfzXqY+dodn1vjc+KgX5f1Ofm6X3Dd+dy8v488+sK8MP3I4Nd9MD/I
cYNf95FxqPqdwa+z3k31o+EhyVvNt2rcJv+wn3KcPzJu2U+18Yf+tPoxrr/6
qcGvO6OuSvlG1Bmpfo06GtV/M75Wv0Z9B/vB5tfxfeo83D/VD1Ifp/q7cLDk
xfU7kidekPe4P8J85AfG47oPGBerH+Z71fX8Yvs96zw8vzU+8H1rXDLvzzg5
1Is58/0r6ffNk9Lv8zvqGzW/ju9b53FdP9ez9mPNr6P/rHGMOkeON60OEfVr
Kl+gvkx9n9w/5JUfqXtSzzP5U42DxKHOD8dQ18l9Vt+XOoz1uYxfle8w761x
nvjouzjvuWNeUeM/8Wk8G3mr+WXlA8SnPncdj8ynMj42v868Ot93PV6/zvzB
/RH6AT8wT677jDpKlX9Rn6j6cer7VN7E/KF+j/RX+nXEra4H3qW+15pvmCfK
YdR1rrrPlev39bnJ31x3DU+mX5f+Db8un9v8ulwnfl2+l35d5TmMh8atzr/G
Wb/uA/1yXWd+R/y6/O76dTUOkv/+YHzzvXyfWfr73Lf4dbnP9eucn9fv89vt
/6+8IHXNyMt8Th1vm1/3cvv/q59Ov4Ffd0d/5/PXOI/BJ65+D78u/WTz66jv
X/2i+Wt+h+TD5Kf28/W5xKfyEeJT5yc+lVeGu6YfyrimXzetMxzJ3ypO6zjb
/Lp1XG7r9nmPMPm4477jrX5d8gr9ugvmpXU9r7fnq/w64w5+3Z39XfI+66zl
vkj/hl9X/RXzDPM660/p1/3AeFh5NPPtGjeYb9f1PN9+38pfsp8Ovy79VfPr
klczTzIPd7xqfh2/Y81j9BfyXL3Zfq/Kr/kd6358uf38ysvws2qeZF6RfITr
d7zVr6t5GX7dtH57N+Qljrv1PD3fXqfz0MY1DH7dR/Jv58VtPXnw6w7kGc7T
9ety/+jXlQ+AX5d+Q7+u9l/g12U80q/L+O74c+RzK37/uP3c+v3JX91f1vy6
7CuRL/jV9vylwyN6f3nfnZF31ffIPmKfJ66z7lPiWef7yfb4ui9+sdXrc/Dl
atw3v8l4x7ysxjvfB5xxgflsjQuOixkXqC9c/S3naf4Kft0dPkD1t9Qdrn6P
/Kb6Pefd6fcY56rfox+vfo/Prf4K36nuGz63+ivqwFZ/xXy/+ivqh1Z/pU+b
fon33lW/xPvYql/iPWHVL/H+quqXeK9S9Uu876f6Jd6DWP0JeW0bn11fJR+a
7ps6v793dH6/0v9KHJf9669+CX/Y/aeNr+P9bXV89lfg1x2zb859OyvHr1/n
fVDXad2WzJe4f6o/xFev/jB8v34deWedh+d82u9Ux7PvqI73fs08hO9V40zy
Z/k6+43027xvsvpt5yHpt6f38LG/q85jf5Tjf7X9vs4nml/nPu34TOk38OsO
jnPxD4hDjS/rfdW4DMaP0v/EOJE8i/fk1fHktTXO816xGgftd/J9iEMdHz8H
v+4H7oP6XOZx5aMwftU4m/1m8in/to1PWz/Dr8v3anxdni/9uqEOgv1y6e77
ig9EHlbXM6xbNl8410kcK28a6v5n/4l+QeLpfLjuQ/y6PKf6dUd8p8qP8J3q
/I5PyVuJW50H36nm7dxXdT34TpXH4TvV98J3qnxTLir9tPt7Mi75Hvo83/ic
9Twzv3Z/iH5d5TmuvxG3uu+H8emAz1nX436zfC/31ef8GQd53nJfNb7u99vn
tMY36unX8+1+O/KUtp+DeUPd73IbGReNm/tO9OsYL+s602/Iidv/ch81vu7f
eG5znvR7+HUXrMtUvsO6Q+Vx3Fc1riYfxq+zn6/jzZPyubyfrH7nYXw9TO9z
+hP9Ps+Zfl3uQ/26C/L2GgfwI2r8tK49+yf168wv6/5d8wr9uiP5TR2/5i36
dQf37+U89L+Vz/re1uR9ri/n96Nef+UL5quJq/l07rs1b2z7Y/+VPC/Hk9/U
8cP4mudLvy79lX7dR/yaGs+9n10ncT8z+5Precq8AL/uDH+jfgd+xzp+4Otq
XoNfdzHtJ/8r8yLGDf2Umpe5v8T14OjmSdxHza8b+LoL9pM7b9Wv++C+ZebF
+nUf3b/KvFu/7geup+Yx+FD1HKQ/wa/7gN9e91f8ZPI593nW7/l8+7k1f+Jz
63ce9rX8QH5Z9zWfW/nUwNdd4D/XdeGrGyf9uiN5V+Vl+tjUhdGv+0A867re
bY+veLzZ6nW95jHOJ6b5Fn5dy4ecj8rXOb/0ePw684xW5+TTfV2/ruV5+hnM
jxs37/Fy3I4HHj/5Pfh15hnt+Mf7un6d/Xs7z9/pfljzWnX9OvMbdf06x9GJ
427nH9aRxnEVv848tR3/eF9vft0JXl6/rvGO6I2vI19o+Y7r/eTl7fjH+/q0
X0G/zvu+nf9yX29+HXFs53HflVyF+10/3den/SX6dW2/Pbp+XfPN0fVR2v2E
rl/X5vPOV8hnT+0f0q+zH2/ncd8G/WM7/+W+3vw6njf1xtfxu7bPnea1w36y
5te5voWuX+e41fbf/m5fb/sw7E/9XPk6fXmvZ6hzol+nH9D8EvfbkZe04913
RT7RznO+rze/Th4d3bzPfl+98XX0L+qNr+M+m+I2+gXG+/G+bv/nPE3dca/t
50E3HzEvVzePMz9WNz9tnBi6cWxx8znWr9MXl6s939fNa9r+KPSWP8oloDe/
Tm4K3Xy/7ctB169rfg3jgHlB2483zcOdd8jXOf/0c1/s684n2j4odPv9xg2j
T7x54+v0U9DNZ9u+O/Tm18m7oDe/7kQ9D/261u+j29/4fc37zNP1R9SdD7V9
eujmeeY96v5ujn/q9qONG3OeKF8nRzXUuVHXr2t1T9CbX+f6HLrjQPOzhrpB
bd76Yl83Tm0dEN1+wjxGfdov9fe6H9b5T5vPyteRN7d57tt9vfl1zruch1p3
x3V356f6dad4Uvot5w9tnjhwteYXbR7i/Gvgjls+wvGOG+Yp6v/HePu/Aa80
0DE=
        "], {{{
           EdgeForm[], 
           Directive[
            Specularity[
             GrayLevel[1], 3], 
            RGBColor[0.880722, 0.611041, 0.142051], Lighting -> {{"Ambient", 
               RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
              "Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{2, 0, 2}]}}], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1:eJwt2XWgFVUXhvGjzBZ1o+A+oojY3d0dNIICCgKKgIF0t7RBd4MYoBIq3QoG
koqNAZhgUH5igKh8z+t7/rieH+NlOPfcmbXWu+aUhi2rtzg4l8vN4T9FeP1f
lssdxOtBvB5RLJdbg/eUyOU2x1xuHP4Eb8Hjca+Qyx3J96zFv3G8OF6Hf8cl
8Hr8Bz4Zb8IHH5XLXYp34aPwZXg3/oDzbOKcY/HHfP8XeDT+EH+Jx+CP8A/4
efwZXoufwGvxGvw4XoNX4754NV6Hn8TrcGn+rU/x3/gTjg/H7+HP8Ej8Pt6K
n8Mb8Tb8LP4Uf45H6X3ijXgE3oBX4T54FT6e82/E/+AT8Of4AD4P/4AP5+e9
GO/AxfFFeDs+Ep+Lt+HD8Dl4Kz4Un4m/wRk+C3+HD8Fn4+9xUXwG/hYHfCH+
GR+BL8A/4WL4fPwjjvhUvAW/wWdeCn+M/+J9Hoc/wfvxifiLnH5Judyx+CO4
j+Nl8Gf4X3wUfhfP5jzH4A/wnxy/BO/EJfi7p+DNuAg+CX+p6wqXxB/ivXz/
ej7Dp/B6/COegj/H7+J+uDXnv5mvh3F9rslb8CP4AXwTfgjfj2/ED+L78A24
Ea6Hr8cNcV38DufshVfqZ8zncm/y/ybxXqZwvBXHO+MLOVYD38H3X4Cr4yr4
IlwTV8UX47txNVwZt8FNcBXcFjfFVXF73BzXDb5OuuDf+bfm4G94D/cFX7fd
OF4/+Frtji/B9+A7cR3cW+8N1wu+trvi+4Ov/8fwn5xzLv6Wc+7F8/B3eB+e
j7/HRfnZ3sI7cTG8Gv+KI16l+x4H/CbegQ/H7+Bf8CH4DbwdH+CcS/HP+FM8
DL+Lf8JT8Rd4O34RbyqhCzCXW8bLs7zfldE/yzscP4zjK/Fu/C/Hl+Cf8M/4
Bfwl/gPPxl/jv/ACvBXvwC/hzfhQzvM23oV3cnwa3oJ34xl4GP/uP3gx/pHj
f+NF+Ae8Hy/E2/AuPB1/he/i73TCrfhsT+A6mcufJ/LvPJT8O3uD72nL99/E
99TheGdcFp/C/2uHb9b1xvHW+AZcG5fFqVBfW+HrcS2ON8fX4Jq4Gb4a18BN
8VW4Om6Db8T34jt0Ev6dabyHqrg4no6r4RJ4Bu6EewTX0ra4S3C9aoe7Bte6
zrhncD1vwfmv5bR3c/4uHH8yuO71wAODfxfdcL/g2tsVPxVcJx/D/YPv2e54
QPA10B53C66ZLTn/dZz/Hs7fFZfXfYrvwifgm/CduAy+EVfDx+MbcHV8Ir4Z
18An4VtwVVwaX48r4KPxlbgKLoWv1WeFj8PX4cb4cpU03tOj+ArdXxxvgq/E
d+Fe+A7cCPePvgd1Lz6GK6r+cLwbrqCagwfgWvgRfW64nGoO7ovvxA/jHrgy
boB746r4QdwTV8ENcXdcSTUN98HV8EO4A5/hY8F9sCPuHtwHe+JBwffXfcl1
ZzG+H9+Bl+D6yTVoKa6ZXNdm4RrJde1VXB2fjF/BdyfXuNn4Tnwinql7AZ+E
X8YP4Gp4GW6CmwTfy01x0+A+2Aw3C+6/DZPr1+u4UXIdXI4fTK5lK3ADfCd+
Dd+TXFvn4IeTa9ybuBVuFdwjmuPmwb2+BW4RPAM8ih8Nru2N8QP4bVwruQfM
xXWTe8lCXC+5di/Cw/CLwbVxIH46uFa0wZ2D54Sh+IXg2jgATwquIUPw1ODa
OAhPDq5jvfDg4BrVGw8Jrkt98NDgOjMYPxNcSx9J7gFv4X54QnCtexyPCe4X
9yb3ufm4dnKfm4frJPfCBbrXcMvgmacvHh1cP1vjTsG1uj+eGFz3nsBjg3vH
k3hccO94Co8P7h0j8LTgWl2e65OSmLuimH9vHXHLzNddO9wMB80EKv348OB7
+Rj8j2ZKfByvRYPv0xL40OD7NOHDgu/ro/G/fB2Jj+c143hJfDg+BB+Lj8T7
+eIt5UryuifzDBsyz5SaLb/Bv/KlGbcIr3/o72sW0t8LrjmlcLHgWlQa79V7
wsV1vuDacijep/enGqKeq58BH8Hrb3p/uCj/+Tv7r+XljlWvz/4r1bnDeP1L
nwXO6zMIrmll8AG+iuMT9B6DP9tDcC3cXLUF34ObqZ7gu3FT1QdcDtdVXcW3
43vVR/C5wX3nWnx5cL26HV8WXHtvw5cG16tbcW3cAjfGNXET1Sh8L26JH8Vl
cR31CHxOcP+6Bp8dXNuvxmcF95GrcHXcWPVNeSK492W4Eq6vvokr4PvUH3EN
1WXV3sz9VzNeA1wR36/eh8vjeuqb6sv4InwBLoMvxOdn7sGq85fgjngIfhI/
iLvidvgh3A23xx3wYPxE5llTM2cv3B4Pwo/jdngg7ovb4gG4D26D++Pe+GH1
CdwBP4K74464Me6BO+FGuAtui/vgiXgEfhw/jUfhvngSHol74wl4eOZ5XXP7
B5lzl/LXsMzzjeacZ/Eo1XU8FY9UXcdT8HDVcvwcHqFajp/PPP9+hT/EDYJn
ntaZZzXNbLPxcfg8fI7uxeD+e2LmPnqaZh5cGp+Pz8UJn45PxcfjC/B5+PTg
eeZyfFpwz70Mnxk8/1yJzwief67Apwb36EsL83BZ9X2cx2fg03ApfC4+Gz+n
HoLn4CnqM3gefl79B8/NnFWUWd7AR+Mz8el4jmo8fhM3xJ1xG3wsPgefhUvi
s/AZ+Bh8Nj4z82y4Ab+VuTd2wC3wlcE9vRw+P3hWvB4vDs6Dn+G1eB/+Ca/B
e/GPeGFwBvw0c53WrL40c59RbnobvxSc11YVfl/6uVZk7lHKayvxavwn/gGv
w3/hn/Eq/Afehtfj/Xg7fhvvwd/hZcFZ8ku8NDhLfoHfwb/jrZl7lzL+crwo
OMNuxBvwv3gXfg//g3dmrslaLvyC38cH+ONu/C7+G+/AS4Kz6ueZe6z2D8sy
91XtFl4vXHu6xy/OPPNehi/KPAtfii8s1AFdMzdnnmVuxTdknmVuwzcW6pKu
4ZNVvPGpvJyUeSa6Hd+UeY5QPu1RuEdUH3ril4Mz8no8Mzjvr8Pzg3P6x5l7
pnYOqzPPF8ra7+BZwbl4Q+ZZQ/uT1/C84Cz/EX41eGfyHp4RnLvX4leCc/S7
eHrwzmFN4dpWfXgfvxa8W9iEV+Lf8Pf49eD9w+ZCDVHdeCZzDlD2mZx5lldm
nJZ5llfmmp45Bygrzcg8eypDzcw8O7yNF2aeU5QxF2SeO5Ql52fODcqkL2XO
Fsq/L2TOEMqtL2bOReoRB/N6G8dr4xr4quD5uTy+IngOL5t5D6D5/K7Mc5by
3cv41uCZvDq+Jnier4gXBO9MPsHXBc/YlfG1wTN5JXx18ExeIfO8pkz6SuZ5
TZn31UK9VW2clblfqA4PzTxbaXc0JnPGmorHZ56nVuJFmXPYFDwu82ylfL0Y
Lw/emWzBK4L3Y1/ht/Cv+NvM9V/zzNeZZ0Nl9iX4vOBseF3mWVX7sbGZ52Xt
64ZkzhDK4xMzZwhl50mZM6Ly8tOZZ2ftxJ7KnNuUwSdknuu1H+ufee7WXm5g
5rlbe7lBmedN7e4GZ84E2o/1y5wDtDcbgCtGz29XMRw9wfHJeDTHK0XPildr
35A855XFryXPW8p3y5JnMuW4pcmzl/LdkuR57hq8KHkO0/kXJ89eOudBhT2V
auSG6H7aT3vN5Bm0Aj6ar69zzvj5Yu6JE3hNhV2Z7q1VyXNtOY4dXMz9Yqx2
Y8m9RDn99eQ5T7l1RfIsqGz7UHRtUTa/u7AHUO15JLr+qJ51wJfknLnaR9cx
Za6H8Sk5Z/zlyfOuMvLg6HmsCR4Yfb801i4keY68TfuV5Pn1du1+kmfNW7XL
SZ7FlanfTJ6zlakHRc+Qj2o/l9xrlYs/Tu5/2kt8mtwXtSsYm1yPtPsdk1wT
tSsenVwTtV+akFzXtBucmFwftfcbl1zjtCuelHx/asf4bfTcMkw7TjwLj8B7
onv6aPwbXqF7Tb+rwp5H9ezr6DlniPam0XPOUO1No+ei4fjZ5B6jPe1zyb1N
+8xnknuz9sNrkzNJRb5/Q/K8XhW/nzwDVdO+M3nW0Q7hk+SZQDucdckZphJe
n5x/KusaTM4bVXTtJOeNO/DTyf1eO9jJyX1UO9iO0X1N2Xx+cr/Uznxhcs7R
rmN1chYqjxck5xzlsl+jZ55RuFNh76F+WKSYZ5VxvD4V3eOUtfsV9leas57A
t+S8HxgbvfNUrhwXvfNUdn4yuodqVzC+sCdRPX48us9qz7A4ev+p/L40Oicq
jy+JnpGUc+dH7061E1iAW+e8K1gYvUfVfmBRdK7Uzm1Z9IyqPjwmek+rLDwa
35Vzxn8/eq7ur99R9Cw9QNdz9Iw9UPdsdP0ZpGsbP6PapXsHD1UNxKOid7/K
12/FQo5QXSrspfUeXo+F+Z/jy2MhF+jej4W8oHstFnKE7rVYyBp4Hu6p6xZP
jd5Ra4fzAm6Q817ixeg9tvY5s6Izy2N8/zPRebC9rp/ovNYWj4jOVi3xSPwA
bqVrPjpLdsDDo/NUCzyz8Hkqb70SnU26cjzTta7+xWvl6KytGvtcdE7siJ+P
zoad8KvR2aobfjl6fu6Ch0bntWZ4WHTWa44nRWe9Nrhc9PMm9f9p0ft87Zdm
RGdAvbfp0ft/7Yheit7za691uYL2QZ4rT8e/5LzPP62Ye6V65pDojNyUYxOj
M2lrPKFw/v/miPjfo47/dqqTo/N1O75nTnSO64HnRue4nnh2dNbrjv8XnTtG
6r6Ongc0FxyWd/bTtbQjOQ/oPfwvef7Q72Vn8nyjz2d38ryi38uu5FlEn9We
5HlIn5WWA9oL6P0cSN4L6D1MSZ759ENkeedMXYdF8s4zuj7/Td4d6Pp5Pnm+
1/Opg/LO//q5Ds478+uajHlnXd1HxfLOwLqPSuWdM1V7NyXncO26/07O8Lp+
RiXPrHqm8GLyTKNnQH8l5389Zwl5Z3LdI0fmncN1P36ZnOe1Vz8i7xyue/a7
5F2D9qXjk2doPVv8JXmG0zX/a/L8p9/v98l7Cu1ypybPvnr2tD95N6Hr87fk
vYnunW+T9xfa025Lnqu0g/0hOb9plzs9eZ7WM7ityXsW7XK/Sc6x2t/OSc4z
eq73dXKm1d54XnIu0nOxaclZS8/sZibnMT3veyU5B+pZ4cbkfKud+avJWVHP
7+YmZyo9Q8znvTtQX5uRnM30THB2cq7Tc8Ciee8mVHP2Je9TdM8ekvceRHXp
0Lx3Fqpvh+e919CM9EVyhtdzh9+Td0C6Lz5Pzvx6rvFn8l5GteWP5J2U6tLL
yflTzzQ/S94j6HnHrOQsqueSLyTPvnouvDd5H6Tasjk5/2uXXjLv/YXur/rR
uwj11p+Td1uaVR6I3j+oz94fvRNQ764TnfE1T25Pzg+al47Jew+i/nhs3rsS
zRX/JO+/VMfK5L0X0Bz4IOe5OOe+3zB616TeXROfnPNMVaswy2muK5H37kZz
SO3ofYjmseJ576TUaxpF7680Vxyd90ysOadB9M5Ec8Lxee8yVIdfSs4DehZ8
XN77Ds2fpfPecain/xKdTZRR7oveXWi+/Sp5/6JnFkflvXvSXLQleRejZzE/
Ju8E9SxjZHK21LO/n5L3hpot60XvPTRv1I3eh2geTnnvrTSzDU/eTeh53L3R
uxrNn/8HxUJO/Q==
              "]], 
             Polygon3DBox[CompressedData["
1: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
Qq34oMvcMyaMDWPiIX9PCQ+U1C7TsG9IE81T+9TEidtomtqmJk7UpqcwBTx1
lV6DPcOX6+Rge4l6FL2KHmbTJnPcWDiy5H5bI03Z/77P0xpqqv7fX7uJp9Xb
6lG3buLJ9eZ6zB2aeEy9pp50aJP5MUX//jmf9MB6YT3tdk08j95Vj6wX0uPq
dfWw2zZZI3qzTg/etSPXwN6qU0O7Nqbmq/0fVOmNqhFqhTnB2sM1nlfhj6qs
/bhG+Br8cZW1Q9eUXoc/qbLW5BrSG/CnVdaWrHneqdNDsBZyTfHtOjW9a43W
FNYW1ijDmtQQ1hLWHMObeGi9tDXGjk1qHGsda+L1mtTE1sbWsOs2qYGtha3x
NmpSA1kLWSNv3MRD6iWtkTZpUkNbS1tDrd9kvsxWp8fk83+8i5ar0Wq1NZe1
lzX4Bk1qSGtJPeiGTWoYa5m5+vPNHOX8PLwkvvTceu8lq9ReU5aspS5RpbbU
E+uN9byD/T1dvJ05ydxkTWJtYg2zjX+/S+7QA+oFreGt5a3h12lSA1kLWWNt
1aRGslbSH9pLtOeyg7FcpRdjj861Cnvo9u5c87WffHBJv881Qfujh5T0A13T
tD98UEn/zzU++8kHlvT3zHnmvgNK+m8+E73amCXP6uou99p7bj1tTn7S+C7J
1WO1yX9Xwqf08sz0km3JszQG9Z5jl8TmdSX6/FZfv/TA/tbhJf1x16CtHXYq
6We7hmT/bOeSfrlr1tbmu5T0f30GetmxSp6Na6zWFjuW9Mtdw7Yft2tJ/8w5
prdtSubeOG20/mr4tF40xlx4a4n22HO296xfHdSmZ/1cP7/02vwGf8u1Jdr8
QJdnM7ROf1HNNVZvLNFiNddYvqlEiy/v4pXNSeamB7usv/jMffZdG795Dcef
3ovGm5tvLtF+PaexfGeJ/1Az1YLbSrRUD6oW3F7iLydtowV3lPjHEV20Sw1T
W6+Ap6ySE8wN5gC19ZaS3KB/f7evF+ZX10D0//pj/bwxppcfoyT2XBOzn3hh
ST/dNTP7jxeV9MPtwdiLsafi2oI9KXtT9uTsHdqzGtaf//YK7dHZq9O/2ku8
qkv/dtY6/Sd7MvZm7HHZa3fNyX74ySX90Cs5fna1r856kjnA3D5ySW5YpeTe
+wxcC9NDP872OSXeum3jv0fAJ/f6PbA6PSrXPuzp2duzx+jahye3d2XPybWS
0drk3kv4/nG9eN4n4HNLvLA9O3t39ghde7Hm1C/sWVLP6cH19seW+AlzkFr6
t5LcZM5R+yYoyUVqprXNaCVaqiZbW41aotVqsrVSKdFqNcnaqC7RKnOitdMo
JblSzTRX9kq0VE+uN7+gZD1EzbVWG71Ei9U0tW5QidaZU80F45bkWnOGuXrS
klzimqHrFSeV9KfNkWr/+CW5U001t4xXorV66Mfgs0u8tTnaXDJRSe42Z5lL
Ji7JZa6xur5xYkl/25rF2uWEkn62OU1tn6Qk1xnDQ/vzwbUD692v6vQcrQfV
BNeLbijRik+71DLWMOqjMXtPHc00lj9j/D7jv856uXroWtLTfT0xJq3t1FRj
9Ysu/vqWOuv5H3bxM9YE1gbWlPqvQ0tqTfPV7P18Yv76pMt8scZyfrmG4lrK
qlXW3v/Xxc/dWud9gs+7+Nmb68xP48H3KYb04+/jLn7VGtN4+KhLbWNN4/23
52jv0R6WvUrXeFzrcU3Hd5H+28VvWxNZG/3UxZvqSdXDX7p4WT2oemOMGqvG
uGvB4wzEG+lR9CrW0NY+h5XU1q7hLdzP13+t7fXyLpA9atf+XNNdpJ/fXevt
BuJ19EB6Id/fWLR//a4VjzUQfdWj6dXGHohX06Pp1dqB6KmeSm816kD03RrK
Wuplfs/5VXoAPh9z6Gx9/6GfULNm7fsZe+k/cvxzVTy7+WLMgei5nk5v5xq0
7/q4Ju7a9BgDyVd6QL1gMxC91/Pp/UYbSL7QI+uVnWPOtetLctn3XfTHOepc
dY3Pdx18Z8C1PzXd3Hd/idY7Z527zhHf/TBn3l3nHObSdznfdVVqVOshe8z2
mu0xu9Zuf2ikOj1L+0n2ZO3N2rO292sP2l60PVvXgl/p0juxZ+LztedgfB1X
Ul84R52rxoja6js2t9Wp+Xz3xndsbocfqfLuje9EuH4xpGR97xvO/6j5s45/
UdPvqLNPrXefY2qMXudU+K46OWHsNjFpbBpDvntjDBlL1ji+q+Maqe+S+I6F
a6dfd7kW/4Z/69su5/acntt3NHyXZbMq7274Tobvimxe5V0N35nw3RLfgfFd
Ct/R8F2YLfv5yh6LvYcjSuo1ewb+vTNL9MI1X9/V8p0W14JdQ/ZdmeFV1pa/
6nLvvGfeO3sW3ouzSuLVNVzXcn3/yfepvuzyW73n3nvfAfFdEN/J8V0f39nx
3R3fEfFdL9/Hcu3HNSDXur/rci+dQ84l13Rd23WN2HeBXAN2Ldg1ZN9l+6GL
lloD67d8Bvberiq5f/8H/Cuf6g==
              "]], 
             Polygon3DBox[CompressedData["
1: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
sBXsOLvEwszXVGRi+VlhNkDd/wA1lSoG
              "]]}]}, {
           EdgeForm[], 
           Directive[
            Specularity[
             GrayLevel[1], 3], 
            RGBColor[0.368417, 0.506779, 0.709798], Lighting -> {{"Ambient", 
               RGBColor[
               0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
              "Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{2, 0, 2}]}}], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1: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
I97A5ROva6/jconXtRW4bOL1YjWulHgdvIjj7sT9qFWcr5h4nS3AcW/idepi
jnsS95QqcMxOvDapj9Ibl+e9/Ja6xldPTDFPv/HfjGOMxuEvGccSff7fGa/h
JRQTMl6TL9GzzXgNL6R5l/GaX1DjJ+OYpHv+J+OYp9/7a8ZxS8/8L61Z3EPJ
xLnH4dT9AfXiXkndz1RvQTFYz+23jOOlnsnvGec4hRVzMo5teoZ/Zhzz9Az/
0P2n/r3qByrG67tOZpz7FMAH8NLUv0vrrGJ5A5wGx+8WODd4LdW4PSM439G7
PjV4TdAYyASvJ5pHpwSvDw1xDI4jytvPDc4dNH7yKnfhe/Mn7nEpL7hQ4y3j
PF9zM09wvnMx/i7j3Epz7bTsGqrncyLjNUdz5MzgdaYuPp2/U/ncrxP3AUbg
zxPX9b+krmfVO70jOh9WL+K26JxZ/Y27omsW9RJnRPep1AO5PTrHVr9iQnTt
oD7bzOi8XT2TO6PzbfVAjqRea9RrvTs639aadlM25isHvyG67lDv98boOkJ9
vInRNYh6NdOj6wX1W8ZF1zLqh9waXReor3JLdB2hPszJ1DmAYu9R3Cdxf7hf
dK2qns/o6PpLPZYx0fWU+ieDo+sv9TpGRtdW6rEMj66D1CcZko3DWrNGRddc
6qUMiq7X1BsZGF2TqjfSJ7p+VK+jf3Rtrn7IgOjaXH2S66LrR/VA+kbXlf/v
gUTXsOpNjY2u6dTP6RVdh6rf0hu/m7hPUh4/kzjX3ZB6PCgHqMgxJ3HOqfz0
fMWQjGuCDN6Vca6qMbkbN47uD2i/42w8KnGfv1Q2ziv+q27QGv0F17fKxnmt
+y2jexTad2gR3btQz0c1ylmKz1x/ZXRPQD2Wdnhp4p5M1+gegvo2zaN7I9qz
ODX6nWodbxrdl9D+S7PoHoj2L66Orv3VI3qb3140cU51SnRuqX2TbtH5idbQ
b1LPTc3Rr1PX5to/Uu/5VLxT8S11b0d7QC+mjm+qX75K3W/RntR/+NrE+zX/
ps6ltY9TjuueTlyD5InOn7Uvk0Tnz9rTUX12Nj6Wcb6fi3dk3FtS3B7IuRNp
tl/B9c+njhWq+xQf1YPdxvUvpI5pqtG6RPdP1AfrHN0nUR9P9cqTGqvB67HW
8b7BNZDW+n6KW1w/N/EeWc3ofpT22qpF97W0XzYpO5c1f7V3oZywRfA+iXKq
5sH7J8qpmilGZnMGfadqnQvwvozry9PxNxm/V73fS4Nr0NPwV5yfzL89nrhn
3iC6T6X9NdXBAe/hmquie0rqAVaP7q1pv081ZcSHuWY2zydJ3MtvEt3L0p6d
as0UH+SaTtH9JfUVO0T3o9QbbB/dy1JvsGN0P0q9xKrRPT3tG14a3evTnmal
6Lxa+ymqIzUG+vM9jaJ7a9oTrBHd39MeZWX8QOJ9mSrRPRPtzam+z4u/5N7u
ia4FFD+1R6Q5PiB4b+cUvJ1rcqJrN+0JLky9RquO/hF3SLxPmhtdD2qP9bzo
ekp7r/mj82Tlb6qP1b9qHVz7Km9viT/P5o1aoz5J3ZfQnmC+6FpS+4abUq99
qkfOia65tN93PM320/CxNNv3y+faXbVAKz5zTurxr32rZ1PHKPUrVJcrx+sU
HHcUfzoG18HKCc/Hm7NzWfem/kRLfB5+J5tLaM1Ub0C5X+fg3oDyqC54H9c0
Trw/+1bqPQvtyapGV07YNbi+V351dXAvQfnVVZp/0TW19qk/S13Pam/3U1w1
8T7pxtR5heqyMtFzUH2GranvU/2TJbhI4l7NltS5h+rTBalzAPVhtqWua1SH
qv9xEd7Pe1+cOhdS/2dX6j0s1f6LUudm6quof6Cc+QL+3e7Ue1iqVfek3jdR
DXtWdL2sPdmPOd8ocS08P/V3qS9UKLo2155ssei6W3uFxaPrfe0VFomu2bVX
WDS6h6D93BLR/QHtOZaM7hto71J7lXnw1oznp+bpZvxc6lihfldhjpsT78s/
k9170rX/A0YGTA8=
              "]], 
             Polygon3DBox[CompressedData["
1:eJwtmnXgVVXahX8/lbONs2cGsRuxE0TsIBQ7wG7BLuzu7u5CsLtbxxm7W8RW
7O7W0e95vnX/YIbHc+7l3HP2ed+11rt7j9x1+KiJurq6zuJ/JuH/b6pdXUt3
d3VN2nR1XdOLP/AAeCL4MvgqeGH4fz26usbC78Gnwhtw/A34FfgAeAj8HPwO
fDK8Hvwa/CC8IdwHvg9+Az4MXgV+BR4PHwwPhV+EX4UPgleEX4Dfhk+C14XH
w+PgA+EV4Ofh1+FD4ZXhl+GH4I3gOeD74YfhjeE54X/Dr8GHwCvBL8Evw/vD
g+Fn4VvgZeHJ4evgG+Al4Qa+Cv4vvAE8O3wv/B94bXgm+B54NDwX/CP36zz4
fngNeHqO3wlfDM8J/8Dxc+GL4Dng7+Fz4Btbvht+kfNnhS/h+NzwTxw/H74C
XhD+A74Evh0eCFfOvxG+GV4Gngy+Fr4VXg6eAr4evgdeFZ4Gvg2+G14Fnhq+
Fb4PXh2eDr4Dvg1eHm7hG+Br4cXgieHL4THwPPDPXM8F8OXwAvDv8Gj4Tngl
uBfn3ww/AK8FzwjfDd8LrwZPC98OXwcvDk8CXwHfAQ+Fp4Rvgu+CV4angm+B
x8Lzwr/w710I/xteE56B43fBU/bs6uoJv9wj9/Myjs8P/wZfDF8JLwT/CY+B
r4b7wn/Bl8LXw0vAPfi+K30+8FJwga+GL4Xng3/l/Ivgd+FT4PU5/jrcm39/
BLwAvBD8JsdPgIfD4+AL4dngb/j82fAQzr8C3pnja8OD4cvhneC14PM4f2b4
M84/Az4Xngn+BD4dPgXuBY+Dj4PPh2eBv4DPhC+AZ4W/gs+CV+D7r4R34fuH
wcvDY+Ht4dXhofDV8K7wOvA5fH5G+CM+fxq8C8cnwJdz/AD4APhr+Bb4WHhF
+Cp4FDwcHgW/D18BHwifzvdNA7/J950InwpPBY+Hj4fPgKeF34ZPgtfm83fD
h/D5zeA14Tvhg+BN4IHwpfAO8BrwtvB4+EJ4T3gN+A74QHhjeBX4FnhfeH14
EHwZvCO8Jrwz/DY8Ft4fXge+Dz4c3hIeBt8DHwpvDp/N9c4Af8D1ngqfCU8H
vwufDK/F+XfBB3P+pvBZHJ8ensDxU+DtOP4afBHH94KHw/fCh8FbwDvAb8Cj
4X3gVeFb4f3gDeBd4Q/gK+GD4J3gt+Ax8H7wfPBe8HLw4vD88N7w8vAS8ALw
PvBAeEl4QXhfeBC8FLw0fA68ObwyPA+8B7wMPACeF94TXhZeDF4WPg/eEl4V
Xg4+Hx4BrwbPBW8L94P7w7PDI+EF4YXhmeBh8MzwvHAfeCt4IbgvPCe8DdwX
XgSeA94aXhjuB88N7w4vDS8KzwwPh2eB54OXgc+Ft4BXgZeCz4Y3g1eC94W/
gG+Ej4L3g7+Eb4KPhveBP4dvgI+E94e/gm+Gj4F3gz+Er4IPhreHX4cvhveG
94A/hq+BD4V3hN+EL4H3hfeGP4Ovh4+A94Q/ga+FD4NngdeBZ4Xnh2eD14N7
wwvCu8MfwVfDh8CzwuvCs8ELwCvD18K7w+vBe8GfwtfBh8MrwdfAu8Hrwm+x
Xk+E14FfhVfj+G3w/vCG8Lrwg/Ax8Ai4F9wb/pb1PRs8Vc/0t+/g3vDUcD/4
b3h2+Hm+fxd4cT7/JPwsvBM8AH4c/rbN8/9HyfP7us16qSXr47s2z/+fJffj
+zbr418lv/evNut1ppJ6PFHN+p+1ZL08A+8IL8q/9xg8cc37MFvJ+nq/zf3t
hueBf2izfnuW3O9Jat6X3iXr+Wl4B7g/3/co/By8M7wY/AT8AjwKXgJ+Cn4U
3hSeG/4P/Ai8CTwX/AD8GLwZPA/8X/hxeHN4XvhB+El4S3h++GF4Gu7vInAX
3Ad+guNbwPPBD8FdNe/rzCXv24ycv4K/p8nvmx4e7P2E54IncP5p8Ibwm/CL
8K7wkvDT8AycP8T7Dc8NTwv3937Bc8Avcf5u8FLwM/BT8PbwIvAj8HScP8jn
C88Jrw7fDh8AbwR319SvWUre//farP+/O9e3OOefAW8MrwD3g4+C14CXg7eA
n4FPh3eGN4Yfh0+Ct4M3hB+FT4C3gbeBX4UvgPeAt4bHwefDu8Nbwa/A58G7
wSPhl+Fz4V3h9eCH4GPhkfD68MPwcfBW8EbwY/CJ8LbwlvCL8NnwLvAG8CPw
8fDW8Aj4JfgceBS8JHwWvCk8FN4EfgI+Gd4e3hx+Gj4N3gneFH4SPgXewefX
5nl/13k+L7R5ft921stinH86vBE8xPXbZj180+R9/W+b5zuhyfv8Tpv6+lfn
+T3QZv291+T9n9Cm/nSVrI9F+f5j4bU5PgjuDx8DrwUPhDeDn4JPhXeE+8JH
wqvDy8ID4OPgYfBgeGH4CHg1eBl4EfhoeE14eXgJ+Ex4E3hFeCH4cHhVeGn4
NNbX1PDr1KMTekXDqmXVjHdz7T9x/D3+fhnnf8Ox29rol1eb6PPb2+iV8U30
8K1tvm9cEz/gd6if3mw6+rhN/3+9iX68q41+eKOJPr2jjX54rYm+vRTuAT/W
RC8dyfX87Porqe+Xc7zATzTRG0dw/CfXY0n/ub+N/nu3ib4dC08CP9rk997b
Rl++3UQP39NGX77VxG/c0kafvdLEv1wGN/DjTfTZdfA/4Oeb6Es1mlpNjbQ+
1zK4RPuqgeeueWY+u+OtcfD1fP6f/P2FJnr4WrjCzzXRr9fALfxsE/17cxu9
+3IT/3QVPDn8dBN9eiU8GfxUEz12BTwp/GQTvXU1PAX8TBP9fBTX8Ivvd0k/
Phz+0fetRE8dBv/g+1miXw+Bv4fPKtG/X7bxN21J/f2ijR+ZoqTeftzGbzUl
fvTDNv5okhJ//FEbf9OjxL9+0savlZL6/2kbvzRpSX/4rI1fm6ykHzzWxg99
2sSfvNrGv/7SxO+Nb+Nffm3it15v4xd/b+JPP2/jVycv6SdvtfF//2vib30n
fTd9Z+fgt7/Zxl/+2cTPfdDGr01c4o+P5Zzf4YtK9Mtojk8EP9zEnxzD8d/g
C0v0xoE1/uH0Er19NPyr9bdE74zh8xPDjzTxBydx/G94bInfOA7+A764RI+9
1ibf+K2Jn72vjR96p0mecSLn/wWPKdFrJ8D/gy8p0XfHw3/Co0v03xtt8oE/
mvhLa5a1yxo0Z02NsdZYw/rU9CB7kTWnb42H0kupqYbWjidq4rFWrPF4ej09
4OAaD6IX0QMOqvE0ehs9ysAaz6Z302OtUOMZ9Y56uiE1nkhvpOdYt6bH2evs
EdvU9Ah7hT1h25qeYG+w5m5X42n0NnqQDeB/1dTfBUr0vh5Rr6jnWq6mRlur
7Tnb12hGtaMacyV4JJ/bA74eXgV+v0n2YQbyYJseojbs053eYo9RG9pD7D0P
cf5LPbKGXEv2KLWNPcjeZY9Ra6ox7T2zl2gLNUaPGs+l99JDrue7zZ93+ful
/Leve0VjqDX0iMNrPKJeUY+5To3H0mupedeu8Yx6Rz3YmjUaWi19Hbwy/Hib
fOCzJvmaPdherAbZgeNHcH1nwM/BO9VoFLWKPWv2mp5ub9eTLFLT8+x9apre
NZ5Gb6Om/UdNz7P3+Yxmq+lx9jo1Qr8az6Z30/MsWuNx9Dp6uv41Hk2vpkdb
rMaj6dUugBd3vXK9I+1F8BI1mkBtoOZaqMZD6aX0fANq1ojeUI3p2lFzqb2e
hXesHY/YRNP1rPGgelE1d68aj63Xvh/eqMYD64X14BvWaCK1kZptZI2GUkup
6bau0XBqOTXWVvAe1iH43/DGNRpMLabGGlGj0dRqarQtazywXlhNP1WNB9YL
7wdPXaMZ1A5qjlngRUqyRDPFaWo8kF5IDbh5jefWe+s5poSfaKMtPm+S1z3a
Jk/7pEne+Eib/O/jJvnTV/w5i78/z3/blM9/CZ/ZWT+bwF/0ynp6tvP7fmyT
V/Yq0df+/tM768/7qYZRy/gO7Ax/C9+qtoEPgs8oyXKsydbmaWvy3kVL/J+/
0d/avyTPajt+YL6SfNdr8F7vWXJtXvN/4L1Lfovr32zl7c56mK4m3x1Qkvf6
TvpuvtN5P7xGf/tRJdeuprB2jSrRGtYoa9euJbXL3+hv3b1kLfnO+my3L3mX
XUPWqt1K1pY1wdq4S0mtGFazNnYo8bfWBNfajiW1wmvy3h9ZOtdq32zSk+xN
B3Xqy5kl99Ya7NrcuaQ2W1NcmzuV1Bqf4QPwXiXP1ppp7d2ypJZOX5OPL1aS
r89Yk2cvUZLHrwbfaG2HP4PnrcnPV4Tfca3CN/huwJ/C89T4+RXgt3ulJlub
t4I/sdbAN9kb4M/h+Wry/aHwu/D8NXnnSvB78JLwRfYa+ANrEzwaXh/+yFoA
X2IvgT+Gl4IvthbDH8IL1MwXVoYn9ErNtnb3KcnnZ6iZFyxekq+WGr8+Z8k8
YLIafz13yTxh8po8YZ6SvP/3Nv55+hK/rQZViw6B34JnqpknLFnib6eo8efz
lswX/mjjt2co8bt/tvHTM5b42d/a+PfpSvKLSWvyi7lK5hk/t5lPTF2SL/zU
Zj4yVUk+8EubecU0JXnHr238/7QleUFTkyfMUTJvealJ1qsGVgurKdTaW5Ro
DXuStWe7kl5lTVZrrFVSq63xapG1S2q/PUEtsWZJr1CzqDVWLdEy1nh7/Sol
td+eb+/bsEQLqEnsjRuVaBV7hr1/WEkvsaarjRYuqfXWVLVk35Jaa01VS/Ur
qbV6AnvRoBKvsG9N3nZySX5mz1LrrFHSy+wh9sYFS3qLPVMttXpJL92vJs87
pSQ/fbLNvOKLJvOep9rMV75sMi95qM285sMm846H28x3Pmoyn1CzqF0+aDIv
e7rNPOGrJvOSV9rMM35qMq8Y12ae8HOTecv+NXniqSV53wE1+eFpJXntM23m
b183me+83Gb+8mOTecpLbeZ1PzSZj9jj1YqrlfR+NaVaZ/MSrWnPUVssVNKL
1Kz26oElWtYabC0+vKRX712TB55Ykp+rWcyTDyvRMvZM84/9Snqpms/88tAS
LbhPTX55UkmevWdN3nl8SX6yV02eeUJJvqJmsrePKB0tVZOfHluSp+xWk28f
U5J/jKqZJxxdkpfsUZN3HleSx9jDzWP2Lenteha1z/IlXsaebJ6yT0mvViOY
9xxQoh3s6WqbpUp6vZpKLb90idZSg6mtlinRZmo2tdqyJVpOD6C2Wq7EG6jh
zbM2LtH2any15iYl2l/NrtbctETLq2GcXxxYom3U5Ob/h5RodTW7efLBJVpe
Te/84KASra8nUPtvVuIV1EjmV/uXaCdnYs7GpuzO7NEeZ5brNdr71HhqvXU4
//1e8cDOFnwmemM9sLMcn4neeMqSLN9M1GzUmj24o5es5WoQ9fh23dEmZhJm
4z4zswo1xPBOHqC20NOadVpT9brqq2Edv2Wt0KOZxfvO6N2siUM6+staaQbj
bFINZTZjje3f8QPWXj2+2btrUO+vBzX7ds3qTfX0zrZcY4d09NClHb1kb9fT
ms1bk/S6ZjBm7a5xsxlrtlmvPcBabs03W7aG2wv0tGb5vmN6XTMDs1t7ilmC
HtbZgjVLb2tPMAu359kr7DlmqWoue5EZkrNIMwCzJT2vs1wzA72wPcxZuZrB
3maPdPauprB32iOdjdtj7Z3WGGe3enprjz3W2bsa0N6r53eWa8ZhFqDmc7Zv
D1UL+o6aVfoO+u76DpuNWjN8t31HzU5dk767ZgzO0s1QzB7MKJwNm4GYXdhD
3RugRrS3WkOdXZuZWFvVpM4m7OlqVT26s2AzDb27GYezeDMTsw81pnsL1EBq
T2uos+YVu1Nb1VjuZVBDqb3MUJydm+GYrVjTnUWb4Vjr1STOftVIahU1mXsl
1EhqNTWF2bkaR62hRnDWoWZRO6hJnAWoWdQqagyzdTWI2kONtW0TTaX2UiNt
10RTqZ3MwL7v+Gf1gBndDx1/bXZnxuWs2AzS7MtM0r0K9jizSvO5ER3/Z+9V
E27V8XtqRTXk1k00ntpSDbhNEw2nNlSPfNfx39YTNdXIjn9Ua5nJOTs24zSr
M5NzVmoGalZn5uQsQ41mFmXG5SxEDWT2ZebprNhM1SzUDM/ZqRmp2Z7+VP+t
5lB7qEH3bKJp1aZmTuM69W50J0+w/rlH4JI2+l3/8y18ck3GNL6jr8yezEjN
hs1AzU6tieYZ+n1rpRp2ryYaW22r5t27iSZXC5tpje34Gf2UPX5Mx//Y+9UA
zv7ssWoDNY6zQmu+2kfN4uzXHquWsSc727bm26vtqc4m7GH2WvOPQR3/6mzK
DNLZjxrWbNKe62zDHmMvtkc7e7an2LvV6Ps08QBqdzMwZ6FqFrMxM7ObO/7Q
LE3PcETHr+sl9BhHdvy23kNPclQTj6NX0VMc3cQT6jXMfN0LYUZtFmzG614H
M2izXzNg9zKYUZsNm7m7N0ZNZhZvBu1eATN5s2nzpsM7eYHawkzavQ9mgGbV
Zoa3dPyufs1M1r1CanSzWjNY9xKp0c1mzdSd5Zvxm7Wr8dwbYwaq9lOjuRfH
zFTtpoZ0742ZodrSmaN7QZxZOos0g3eviRrPbN4ZnLNvZ5zO5r5vshdrQKce
mRG4t8dM0+zAjNe9KGa8Zr9qWPcumemqbc0Q3Luk5jRbMINyr5cZsNmUmYJ7
W9SoZg1qWvfeqDHVus7YnLU7U3X25kyzX6d/u56cCbgXSQ3trMCZgXtp1NDO
EsxY3TumJjZ7dQbr7NkZqrNZ8z9ng+Z35n3OcJ31O0NytuuM11m9Mz5nv2bg
zkL1SGbjzmT7dvSGs1pnuM7+nfk621WzT9y5f2p5Nbr3c9HuaHdnLO4FMqNz
9uLM2Fm6MypnyWZqZjvzl2Rt6hv3fpmpqF+cybj3yMzGWc0PnP9CdzIa842f
a2rJ/9cU+OOaWm0Nt5Z/Ao/pTg23ln9UU9utqdZWZ3Ldnet1VvdFzbtoTbG2
mLF7Pet3J3tXAzs7VNOqjZ0p9Olcr7OGiUr629DO+d/V5BdmRuYzznx7dvqf
s+7va/IWMybzCGd2znadGU7ofF/vzvP0/E9raq010dr4QU2vsIfYS5wJOtt1
huis8MOa3mFPsbe43nt2vt/f+6UapDs1yFr0eU0ttcZaa535Opt2Zuks2Bl8
7879UH9+q4bsTo2x1nxWU5vtCfaGb2pqjzXJ2vRVTa2yhlnL3u/oX3uYvezr
mtplTbO2/R9CVHvS
              "]], 
             Polygon3DBox[CompressedData["
1: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
8Swp+0LOqf/wXiZh61zv/z+ZKiQ=
              "]]}]}, {
           EdgeForm[], 
           Directive[
            Specularity[
             GrayLevel[1], 3], 
            RGBColor[0.560181, 0.691569, 0.194885], Lighting -> {{"Ambient", 
               RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
              "Directional", 
               RGBColor[
               0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[
               0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[
               0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
               ImageScaled[{2, 0, 2}]}}], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1: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
zty7+BkvzFzLf4QXZO4/rMHzM/dSPsQv4oQX5jv3VZyfiCdoneN38Qv4cMU0
/Dwujefi1zP3iKbimZlr/OWF77PqgvdwrZxr26b67znXm00yxzvFvcbaq3Ou
nZvhOjnXRyfrZ+dc2x6n7ybnWrgWrp1zzd4c/5i5pt7Dv1WJ64/i47lWIee6
tTaumHNtWwd/nzl/3sX9UzP3oBbgtzL3lObh2Zn7DO/jOZn7GB/g23nPh+On
lFtm7olN4/q7mfsYK/QdJu/dZ7MW5mbuk6zi+uTMfapZ+O3Mfa1FeFrmPtIS
PCVzf2kOfjNzn+0dPClzD2omfrkwF1I8uyX57z1F/Ypw71X7crfw81Of6plw
Dqd69t3w81DdvbfAa1j1yK4Cr3PVbrPCz0P1+Jzw81ANPjccv/R3zQ+vMdXd
M8Lfu3oOs8PPRvX7y+E4qH7Lq+H4qF7E1eE1o37gc+HYrZr3snCfWnnChPB+
oDp6fHjdqtZ+PrzfqF5+KRyv1at5LRyX1d94MRy7VbO/Eo6/6vPMC8d99QQW
hOOC+gnLwnmVaqKnw++H+hinhnttytWXhvMn9S5uCj8/9bhuDj8/9TNvDL9P
6undEl4Pir03hN8t9dPuCq9Dxe1rw+tfPdVrwnFBvdZnw++0+gmLwvmfehRL
wvmceikLwzmi+gn7ChwfVSdeGO7vK+/aU+AYqtpzZ4H3S9X1fxW49lC9vzic
L6pH8W+B92PV+H8XOI6rP/BPgeO46v1bw++69ogXwvuf+iG7CxyXVfMWhOt/
5WBlw/045Vcp3FvXnl4x3KdQPhbhul35W9twH1x1Tblwj0O5Vvlwj0N5dYVw
b0K5WZlw7145WNVwH0E51RHhHrdyucPDswGt2crh+l81Qo1wf0G5UPVwf0F5
1zHhPoVyp1rhnrtyp5rh/r7yq0rhvoNyyyrhfo3yw2PD/QvleEeGexDKM6uF
+x3K5TqH9wP1z88J9/pVu70eznXU38uFe/rqJ0wN5zHq0b0djoPqE74Tjmvq
I00Pxzv1MCeGcyD17t4I50zqH04Lx1P1J6eE8znFjZLhWYX6G2+G8zP1EieF
czj1/c4NzzCUh5cOzxhU+x8d7sUoLz0vPNtQvTMzHOvVA+wa3lPVnz87PMtR
bTs5nC+q31gqPM9QH6N9eD6kuuCtcK6pXuVt4bpOOcnt4RitvGVweP9W/jM0
vOcpR3o8XH+q7/pYOK9Vr/XJcC2qfuBD4TpTfeP64VmX+gZjw3ut+rqnh3v0
qvFPDvfl1Zd4MFxDaqYwIlxLq79RLzxXUz/hhPBcTf2KhuH+u+rxxuF+uurx
U8J9fPU3moT74Kpt64TnMepdFAnPnNR7OTE8n1NfYlx4v1cPNi8871Efpm54
rqM+xqEC517qGbYIzxjUo7gnXG9r9nFxeD6nOq5puP+umvr+cN2recqocC2t
mciZ4dmk+hXNwj169V6OD8881FepHZ5dqU5pHp4lqLfTMjy/VB/jf+GZovok
DcLzP/VzWoVnmerVDA/3I9QvGhmuyTW7uTvcs1BufG+4htfs5oFwDa+5zxnh
Oaj6IZeEZ42qbbuE8znNdO4L9wU0u7kgPItVHdouPJ9TjfloOMdSP/9ggfNO
9e4GhPdmzT6uCM+AVY93CueXmn91CM9uVV9fHp4Bqw/QO5wvavbRMTwPVk+g
bziv0oyjfzgP0Jzl0vA8VfX1leG5sur3XuF8UbOV7uFcTfOy68I5qGZkd4Tz
GOX/d4bzEtUIg8I5h2ZSA8M5iuZrPcN5p+Zx14dzPs3prgrnvprNPRXu42g+
0iOcR2oWdlx45qS6sk14Pqpe2YEC5/rqYzcKz5/U83ki3FfSPKV4eEarPuSY
cI6rWckj4VpUPc/R4f6L+thFw3NZ9RiLhWe66j0+HK5pVY+UCM+A1cPcX+Aa
Q/OLo8J9YdXm/cL5nGZV54fn2eo/9Ann5Zox/VfgukW92ZPCMzPV+IeF583q
A58WntWp1zcknGerzsrCs2r1jfPDM2z1e1uH59zq750VnuWrx/h/QfhIIg==

              "]], 
             Polygon3DBox[CompressedData["
1:eJwtmmWAJEUaRIdeYDKBqaZgcHf3xd3d3d3d3d055DgcjsXd3d3d3d3d772L
/tFQr7K3u6Yq84v4InuSTXZcZYdOX1/fqfxneP4/bdPXtxjH95e+vp9H7+ub
cLCvb26O/8u50xkbF54JPh0+Hv6V11QcP9zf17ctY2PzmoHx0zh3LGOTdfv6
tuJ4COf+zdjU8PZwgc+CB+Hl4M/490fCU8Hbwf2MnwlPAW8DjwD/B54c3tpr
9RrgKeFt4RHhM+BJ4A3hP/i8U+FJ4Y3gP+HT4NHhZeFP4SPg37jGqeFH4O3g
v+EZ4CfhneF/4Bnhp+Bd4D7+/Uzw0/CucAeeHX4B3h2eGN4A/h0+BW7hpeGP
4cPg4eCZ4Wfg3eCJ4PXh3+CT4Qnh9eBf4X/BE8Drwr/AJ8GT1b6+2bx3nPsX
1zYB52b1XsEn+Sx4LcLxvZz7kec3DbwofB/8Ezw+75/Fe8W5Exn7mdcUHD/I
52/N2E/w5PAD8FbweLxm9t5z7gTGxoFn9FnCx8G/8JqS44d4/zaM3c/rUMa/
4dxLjI3N9a/E8VeMH8vYWPCK8JfwMfCY8ArwF/DR8Bjw8vDn8FF+P7w2/BN8
AjwOvCb8A3wcPC68FvwjfDw8PrwO/DN8Inypc4brOYZzO3E9Y/GalePrOPc9
92Mqxhfh+ArOXcDY8vz7dzjelXP3Otd5rcjxbZy7hvH54I3gJ7yn8PzwxvCT
rhl4Zngl+Hb4WucOvAJ8K3w1PAu8MnyH1+Bcg5eHb4Gv8trgVeA74evh6eBl
4ZvgK+AF4E3gp3xG8KY11/pO734vyfXfzfFqXgPvXQq+B17d74SXhu+F1/A7
4OV47c7x+5x7hX+/BON3cbyqf7PXxmsPjj/g3GuMr8r3bQo/7ZyBl2V8F/ht
+EV4GXhn+C3XhGvLa4Cvhy+Bp/Ea4Bvgy+Bp4WXgG+HL4ZHgUeE94O3gVeB9
4U/ht+E54HXgh+A74KHwWvAD8G1wgRt4N3gb+A+e8dfMhVXgJeHZ+fuO7WRO
ODfmgI+Dp4Avg4d2M1cmgy+BZ+O1Jsf3c+4W/z28NvwgfDs8J7wu/DB8p2ut
5t55D2+AR7YGwHvC28PTe8/hm+Er4bnh9eFH4bvheeAN4Mfge+AVuZ5vO1lT
ri2vyWs7mnM7Mj4vvCH8uGseXoH3v8vxbpy7z7nHa0+OP+Tc64yvDO8DfwK/
Ba8E7w1/DL/p98F7wR/Bb8BjwtPBp8BHw7/7DDl+lHu6vesRns25ynt+4F5P
xrkFvHecO4exUeDR4L3gHeAB1zR8CLwnPIT7NTq8d+/v6Vrz4MPgfeDGNQ0f
Cu8NTwLPB18EnwVPDM8LD4PPhCeC54EvhM/w/jpnOX6Wc79yfXM2mQvPwL/A
s/H9i3J8Jef+6/3ntRrHz3HuN8bnhVeHn4d/h6fg8xdyrnDuPMYmheeHL4bP
tnbCCzq34HOtN/D0Jfp6DDyqNR4+HN7X2gkvDF8Onw/3+5leC+e+4/sG1bDe
8z6QsYXgLeEX4MfgheGt4Bfhx11/3axN1+hd1g74GXgz+G6vjdcWHD+v5lkv
4B3g171Hrn94e/g17xG8NLwT/Kb3AF4K3hF+w3sEL8fnP8vx5py7x1rKa2uO
X+LcE4wvDm8Hv6pmwqOr0fBR8AHwaGomfCS8P9yqifAR8H6+v2a+uyYPcn0x
vg38shrtXOT7NTCVc2czthivbTl+Rc22fjK+E8cjc+5cxqaFd4RHgs9RbzzH
8cmcO9J6YU3y3jK/d2Dsv22enZ5Gb/OXa9i/jfGd4CfaPAufgc/iyTbPwnvg
vXiqzb3wmr32p9tcu9fotT7T5lq9R96rZ9vcK5+Bz+Ix+LlOnpnP7vE2z845
4Fx4rs2z8hn6LF9s86yswdbi59s8W5+Zz+5Urv9ceCru6y3wy4y/14kGqAWv
tqn11gxrxwttnrVzwLnwShutUBPUhtP4vPPgqfm8W+FT4HPgKeGb4ZPhs62v
8E3wMPhqeI4aPVJDnK+r1eita9C1OLRGfy6Cr4HnrNGrm5ro2RI18+3GJnq3
eM383pX/n8y1/cO5jxh7qY0WqVFq1aGcOx4ei/ddBx/SpP6PCV87GE+lt5oc
vhG+EL4Knr1GTw+DT4DHhq+Hb2uj7XoEvcLBTfRlDMavgQ+HT4THgW8YzBx2
Lg/CV8OvtanN1lxr76NtvIQar9bf2cYr6An0Bu/An7t24NXhd+EvrA3wGvC3
fP748K3Mz03h9xj/0rXD+JrwN4yPB9/M+Cbwd3pItQzeDP6A938NH8L71x6M
p9BbbFajP2+10eL9GF8Vfh/+Cj4YXgv+So+oHvB5G8Ff2zPAN8Ibw2/z/s9c
67x/NfgT1zh8MePrwF9YM+Gr4Q3gz9UgtRJeH/5STwlfC284GI1VaxerqXdv
tNEyNU6t+1GNUBt5/5bwI228m55N73ZvGy3XU+gtHm6jpXo8vd7dbbRfj6HX
uL2NF9Tj6fXugu/rxCPoFe5o4/30eHq97/n+CeE7+f7N4YfaaLuarXY/AD/S
iQfQC/yghsF38/4t4DfbaLUeSC/0YBuvoEfQK9zXxgvpQfQi97fxIuvBc8H3
tPFGeha9y+tttF3NV/tvbeM99ah61YPhheF3+qOPh7bpH97rjx6e0sZbdXl/
5f3/aaPlarRafTp8cCcar9af0Ua71XS1/aw22meNt9af3abWqwFqwZlttF+N
VCv/3cY76SH0EifDu3bi8fR6J8E7w6PAI8LntNESNUatOQHeHB4OHt71De8C
D8D98DHwxvBf/H198HHwpvA/cAc+Ht4M7uP9Q+Bj4U3gvxkfDj4R3gLuMD6C
9RXevRMPq5ddpUk/91lJv9tFf5aEP+TfHwI38BLwB/DB8KjwUtYu+FB4RHhu
+BV4b3h4eE74JXhPeAg8B/wivAc8AjwX/DK8l/W5jZfWg+pFR2N8GfgTxg+H
++F54FfhfeDdud4D1UfW01XwAOMLwW8zfhA8Crwg/BZ8IDwyvAD8JnwAXOH5
4Nfh/eACzwu/Bu8LjwTPD78B7w//qUbDj8M7wue28QZ6Hr3PNW28lJ5L77Uv
3MLD+uOP9m/jl+7vj/88HF65E8+v998PngS+rz/93sVtell7YHvhi9pkGfa4
9rq3tPHm9mT2Zhe2yTLsee19j27jB7/n8/7h845o4ye/gf+ED4BngZ/tT/99
YJt+87n+9N9HtfGX38F/wwe18c/P9ydvOaxN/vJ+f/zmkW3867fwX/Ahbfr7
d/vjZ69t40X1kHrJS9r09mYCZgNzdqN3U+ox4SvaeGU9tF768jZeWQ+tl76s
Tdajh9ZLX9fGm9oj2ytf1cbr6vH1+le38fp6Xr3vlW28uZ5YbzysTVZgZmR2
dHObXtYeyF7oxja9oD2gveAFbXoNPbPe+Tz4X514NL3aTW16RXtie+Pz23g3
exR7levh6zrpOe09b2jTe9pz2nteCl/QSaZltvVCydpzDc7XpGZaO63Jd9kP
cP9O4niakvWgp7V+rl3j78wA9Ecr1eiFPZh+a8Wa+q5HVY/WqfF/9nT6tRVq
6rce1fq+bu35wSb6uH6N/9Oj67fWqPF/en792Zo1/k/Pr39Yq8Z/6rHV5/Vq
/KQZgf5nlRo/YY+pv1y+Rm/MGPQbi9T4C/9m/ehyNffCnla/umyNvthz62eX
qdFLe2L96JI1+qdnsp8yT9FL6QEXL/FQekPzq0V6/Y55lRmIerxwjV6amai/
C9Xoq5mJerdAjT7Zgzpfx6t53vbg+u2la/TNDEb/u3KNvutxlyjxnHpfe0bn
3/S1N/+b6P88NfPPHtL5NV3NeriY17glNXHzJhmo82mamvljpqE/mKtmvpkh
6ddmrVkv9oD6w5lq1oc9ovVlhpr1YY+s/s5Ys57MRNTruWvmq555sRJPrJc2
c3W9TVSznszgXI8T1tQnMyL9wLw168OMQT8wX816M2Nybs9fU9/skV1/09as
dzM+6+3ENfVQj2reaL6od/WZ+ewmrakv9rTWk/Fr1quZr+t/gpp+yYzR+jRJ
Tb2135+01/+ZB9jz6pdmqalfZjj2U0vV+C17Uv3uBjX9jZmO/uDvnv5v28RP
/NPzI2Ys6v9wNXrnOb2Kmux7rcHWYmuu2eiWTfzLnz3/8Bk8Bnw571lvMD2q
etHW+Al7cOvraDX6pOaoPZN1koVs3cTv/NXzF/a06suoNf7GGm+tH9pJ1q5G
qBVqxP+z2yZ5+OslefBCTfT61ZL8d+Em+fVrJfnwYk3y0zdL8u4HSrJoM+np
7Jeb5KlvlOTR9vD2AxvV9HM+A59Fp8Zfmbnpx/pq/Is9vv3FhjX9o5mefn/j
mv7Snm/Jkh7NXtCMxvo9So0fNMOxfx6o8X/rNnkW3/b8lD3UnCU9qb2VPdkc
JT2kvdp6TfzLdz3/Zo82e0lPae+2fhN/+H3Pf63dxB9+XeLP7OnVs3Fr9MOe
bGhJj2evtmYTP/hVif9bp4m//abE/5lRqS8j1/hZe7i5Snpeezt7MHsx79F7
rqWS7NwMfdwmGY/+oanxs2Ya6mG3xv/qSfQmehizaTVf7V+8k+xp6SZ+9J0S
f7FsEz/7Xol/MNPUj75d4nfsyezN1JB3nEtN/On7JX5lmSZ+9t0SP7F4kzz+
rZL9ETMt+5uZa/zWQ03yo9Vr8kQ9n95Pzzd5E0+oN9QTTtHE0+nt9ICTNvGE
ekM932RN9ljca3HPaKCJZ32xN1/H692/53vr0/VkxmjW6B5N0ySTMZsxg+w2
8Yx6RzObUZvswbzQW1/e//9nNP3xmG0TT6o31ZNO0sRD66X10OM3WfOu/UH4
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
MwazHjMC94rsqc0O/gc1xlO+
              "]], 
             Polygon3DBox[CompressedData["
1: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
FWHv6T3IrrHmrEy4q1hma5TnM9lY9j9JqzE7
              "]]}]}, {
           EdgeForm[], 
           Directive[
            Specularity[
             GrayLevel[1], 6], 
            RGBColor[0.922526, 0.385626, 0.209179], Lighting -> {{"Ambient", 
               RGBColor[0.30756835, 0.18676585, 0.147065275]}, {"Directional", 
               RGBColor[0.2306315, 0.0964065, 0.05229475], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               GrayLevel[0.3], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[0.2306315, 0.0964065, 0.05229475], 
               ImageScaled[{2, 0, 2}]}}], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1:eJwt2XXAVEUXx/EHlpp5gHuJoZFuUbqRVhEspFNQurtbusvABOwWuwNREERS
QFCRblC63+95f/vH434Y7+7enTtz5syZIt0GthiQNiUlZTX/SfDaK0pJKQMe
iVNSKqempJzGLXxKyl34Ku6Eq+Azdg2ujs/h1rga/g+3wjXwedwG18IXcTtc
G1/C7XEdfBl3wHXxFdwR18QXcFv8HPfTCY/ifurRfg13pr0BvoEfxQ9xTXb8
OG5I+03cFbegPQeuz3sfwTlxA1yfa67jLlxTCZ/CD+O2XJMX3801rXAu3Ai3
xAE3xK1xbtwYt8F5cBP8PO6MR+MXcBc8Bt/E3+IVOAt/m/AqXrPy9xt+mdeI
v834FV7/5vqX8DM4M3+/4pzc46e0j8I/cp9f4nF4Jv//MzwaT8Nf4LF4Bv4K
j8ez8Dd4Ip6DC/L3Fy7OZ95m34df5bUQf/vwa7xe4/qvcDrrY/wNfon2W/g7
vBJfx1/jF/GL+FE8Fp/B7+MX8Cn8Ln4On8Bv4+W4EZ97C3fjtxyn/S18Hp/G
7+HnueYkfgc/iz/HY/B0vCSkpJRM1X1W5PUk7Q/x3jlc0xz3p30uvh8PwPPw
A3ggnojr4x54Pn4QD8JP4CZ4KZ8zHd+De9E+C9+H++LZuBnuh2fge3FvPA3f
jXvimbgp7oOfxu3wMPwMbo+H43G4Ln4Mj8V1rB9wD1zKxiEej++y8Yyfwm3x
ULwMt7Yxw30+idvgIbQ/izvikXg57oBH4Am4Hu6OF+CH8GDcERfE9+H2OD++
N9aYsLHRiM8vhHfju3BevA3XwDnwRlwJF8Q7cR2cB2/F1fFteBeui/Ph7bgm
roBP4Afxnfg4fgDnxztwLVwA/45re417G/+VcTvuMx++h/ssTPsfuB7tpfB+
m7O4GP7T5ikujQ/Y9bgMPmi/ERfBeywm4PL4KG6O78DH8P24KN5rsQI3xinp
eF64HD5s/YZvx0dwM1wWH8JNcXfus6SNSe7zPTwIP4HfwQPwFHwlJ7GW9+TL
zivjOTsujtMF9W8JfJlr0uK8OH1Q/5bEl2hPg/PgU/hfvjMrPo5P41R8Ap/B
mfFJfBZnwRdxCu/NjY/hU7R7nCHoGZfCaXE2XAzf5JosuBBOoT3CRbALek5l
8Q2uyWyxBGcMet6l8XXaU3FBfBU7nB8fxSf5XofTcH1Me1F8i/asuDC+hj0u
gE/j/7g+wmfwORzjs/gqzoZn2fO2mOmYg17z6Gk8w+tZPIVne61ry/F0XAI/
6TTnq9icwk/aGmbxEL/oNXfec5pvFh8+wk/ZmmdxEi/DVS1u4zk2Dixe4bk2
Vizu4fk2ziwe4nPc8w0b19zzBXwL58Ln8U0c8L/4Gs6O/8PXbc7htXgqPpyN
NQBPwYfwQptLFp/5/CO0n+Dfmbh+gY1pi8+0r6F9KP8+yPXzbOxajKX9Xcbk
QDyVMXmIa/bz/zLw3k34fXyG6zdxzQKuWWzrFV6Il+A/8LMWM22NwvPxIrwb
L8cHef86PAtvxxvxPLyQa/7k87fSdpPP/4X2ObTPp30DnosX4PV4Np6H93D9
Zq6/zvV7aH+O9mW078XP23PEr+FeeBx+Ffe058V73sb98WTaX8e98Xi7B/yC
jQ38Fu6HJ+E3cB88wdZJ/KKNJfwtnoTn4q/xBDwbv4n74onWJ9znb3znNe5z
N96Er+Jd+Fd8Bf+MF+OjeB1ego/h9fglWw/xT3gRPmL9g1fgE3gDXolP4l/x
e7Zm4s14Nf4Xb8Xf4HN4C/4Q/4c34lX4FN6Gv8Xn8Xb8Hb6Ad+Dv8UX8F96G
b+G9eAu+gXfiNfgyPowP4IyMmb/xXpyCD+J/cHp8AO/D6fDv+Ad8iff+hj/A
Z/E+/CdOwzX78d84gf/Bf+G0+AWvNfFdxm3PSPO9BX3eJ9JcaxXrvkbi/U79
PQWfdHomT+DTTt8/Av/j9Hym4lNOv3s43ufUN0PxX04xbx2+w74/Vt5ra4L1
8RD8p1P/DcN/O8XOX3AFr/Fn43Cb03Pogbc6za3H8G9Oz7Ab3uT0fFrhH5Ix
x9b6NU45n+V+B5yef0v8vdO4eAR/5/T8u+MtTv36ON7sNKZa4G+d5tA0fAYv
ot8aJDTelibzH/vOJbhxQuPk5Uj3Y+PnlWTuYb9pZaTvtWe3KtL92Nh7KdJ3
Wdx4GKdJKCe/k347i1/ndRDtRROKY0NwMVsfLVYl+9b2FvVirbnWzyu45uGE
xvmHkX6Xjc/VkfrQxu3USDHcYvli3CihObIQN0xo7kzBlROaa5NxxYTm1yRc
KaH5+AHumtDc+ShSf9pYXZqM/x/Sb58kY4s9k/cjPTubRx9Her42LwbjIgnF
Z5s3062vnGL5Rzi/V3y0OJnwWgPX4zu94oH1/2qnePw0TuMVD+y3vO+0zr+C
s3it4S/jzF5z8Rmc1muNXYVTvdaEldh75QWv4qxec/QpnOKV+1muVcUrv7a9
STVb31K1R2ji9TzsGbX0eq625xrutLbYM12MS6Rqj1PV5oTX813itHZZ/690
in/2jD5wet6Wczb2WtPsWaxwGhP2TFc5rRUzbIw5rSW2ppxziitP4ltOOdHn
uLBX3vQFLuKVg/yIy3rlPp/hQl75xRpcxmsd/hTf5pVTrMZ5vdbqj3EBr/X5
E1zQa33+EOfz2rfY/iWHVx60FpfzymV+xuW9cqif8O1ecW4Jvu4U55bhm05x
bim+4RRHF+NrTrnbazjyyvVex7FXTvQGzuaVE72Js3vF7Jk2Z51yrh9waa+9
nO3pinnlnl/iorh3pLylJXPu0eQ+2p6b5aQbcEX7rkhjyfKQc5HGm+UwZyON
K8tVzkcak//PYfCKhHKzy5Hu0/LYS5Hu33LXf/CihHKVi5F+o+WlFyKNT8uL
rkT6XZYn74vUJ5Y3/hgpVtt6tDZSPLdcYnuk+Pb/tSbSmLF8ZlcyD7E5tyPS
fLS1aU2kuG15xdXkPtT66Xs8OJFcr5P7bht3P0VaX2xN/CHSGmFr/XeR1gJb
648l8x8bF/sjPWvLsQ9Eer6Wn/eNlIO1ps/7R8rT2uKRuAbujDvgArgpHhEp
5+yEu+DC+H78GC6OH8CPR8ppH8TdknHVnmMnfBtuRntnXAg3x6NwTdwFj8G1
cVc8GtfCj+KjkeKJ5duHIs0120ccjDRubX9xJFKMsvz8cKR4YvuRgbgCbs/n
DIuUJ3fA/SLlw23wzkhj1fKH4ZFy7460D4iU07bDQ5Ox3eJBV5wtoTx2W6Q1
3fKErZHWccsTErFirO1H0sWav7Z/SYM/SGgPkj7WXLa9RtpYc9n2Kamx5ojt
O32sOWJ7sYyx4obtUzLEihW2D8oUK+bYXsnFijm2jyuQrNtYTE2JFU9sL5M7
Vi5RHsex5qbtuXLEilFlcPZYccn2UCFW3CiH88RaI+7A2fD3Ce0Hc8WKM7fj
vLFyjztx/lj79Io4X6y5XAHnjBWjbO9WOda+uCGuEmsP2whXirV3boBLxNqP
V8eFY+3xK+PbY+2178IlY9UBauCisWoFVXCpWHWAmrhcrD11XbyF5zU5oVyx
TKy9fG1cNtbevA4uHav+UAsXj1UfqIaLxaonVMXlY60dtoZUjbU3b0x7hVg1
gfq4Wqx9ehNcPdZ+/25cBG/BlXDtWHWk+3CdWPXAZrgi/gfXw5sj5ZOWo9aM
Vbu4F9eKVdNoimvEqiHcg5/3qvO8Y3vMoHXU8p+nveb467TnDqpBWL/lCapB
WF/lCqovWJ/nCKpfWH9mD6prWP9nC6p92P1nDqrX2LjKG1RbsX7LGVSbsL6K
g+ojNh6yBtVBbJxEQfUOGxshqMZh/VwuqE7X3J417u5VR70bT/aa103wJK95
eg+e5jXHmwftty2GNAvan1ucyRdUA7JnXR+P9Vp3GuLxXvGwPO7hVadtgMd5
5fZ34dFeOX8jPMErhjTGE73iZ/6gmqCNn1+89n1/0M/rvPZou3CxoBq0jZMH
gvbqVn9716se+A3XFA6qX9v4LxJUj7Y5Uiio3m3j6sGgvbTV8cbj3V7734l4
j9ce+aGg/b/V8SbhQ1775XF4l9deeAL+w2t/fV9Q/cLi/21B9XQbe0WDaug2
N0sH1a9tvD3jFcPf4J5LBdXHbUwWCKpr21wrGVS7tzFZMKimb3O2TFAN3cb8
x161xLV8TvGgurzNl4+Se5Afab8/qMZha0TZoDq7zZESQbV7m1P3BtVWLIY3
Daq/2JpVD4/xOlPImcxDivPv3KmqjZfCx73qDFf5rq+8aukb8ddetfRf8Rde
dc5fcEhV/bmE19psa/RBp3612vhRnCtVteuStO30qo0foX2HV838EP7dq7Z8
GK/3qgPsxl96nTtswJlSVZfO45X3W/6/nfZLXvWHjJaXedV+P6P9gldtJH0y
P7R8IJ3lD171h9+5Zq1XvWIHvuJVZ3C8ZkxVzTw3vuxVo8jEa4ZU1cNzJXM5
y1Vy4vSpqqsH+31Bv9PqJxu86o17nMamnQUcs3yba/p71XvvxL28zjiq4gFe
+UYtPNwrr6iGB3rVimvjEV45RgXc2+scpBLu63VuUheP8qpjV8R9vM5H7sA9
vc5QKuN+XrXcOnikV710o1c9ai/3WZP2IV55Tg082Ctv+cyrlr6Oaw571Y4u
Os0tqxddcJpPVp857jQX7ezjBK7O5wzyyoWOeNWaLtF+zKt+dQW/4lXP/xgf
9apZXcZ1Y52FWTy0PNLyyfO0v+Z1FvAp/tmrdrQTZwmqU9t6bX1p51Cjae9D
+6de9aWBQWPd6m+Dg8aEneMMCBp/Vivuhz/3qk31Dfr9VmvqHzQfrK7VNWj8
2flCb/yJV42rG37D6yzgVa9zjU+4h15Bc95qZT2DYp+d3fTA73idWz2O3/I6
d3sMv+l1vtAdv+11zuWDzgAsP3k0qC/svKNzUD/a2USHoLXQzl/a4We9zmg6
BdVY7TyiPX7O67xmSNA8sbOe1KCzBMttBgXFAquldwn6PXYm0jGoNmTnOG2C
YqKd17QKqtXaGU3LoNqunem0xcu9znEeCarh2tnNw0E1UzsraR20Tts5Toug
GqudGc0Jmm925pUp6NzCcjZbl+xMcLLT3PJ4utN8SsUznca7szzWaT5lxrOd
5k0mPMWpv+0M60uncZoFz3WaQxnxJKc5EeGFyT2y5flLnX6T5e1vOvWlnSu9
7fSs7CzsK6e+tzz/LacxYudKPzmt27aPWOY0Nu3c6meneWxnoBOd5noGPMFp
72+1nWFOuYDtKRY5rdV2RjPDKS+wfccCp3XezlWnOcUPO4cd6zTv7Vx1vNP6
YGepU51yjbR4hNPabmdV85xyBDurmuWUIyTwKKcYlh6Pc8oLbN80xynepMNj
nOaQnYutd8n9LR7pFFey4vl4VlDMtfPHi1515gw2D4PihdWZhwXlE3b2Ojpo
LbEa9ZigtcTq2DaH7Mzxaz5zdlB8t/PQUUExzmrIc4Niup2rjgjKV6yePDQo
jtgZ7sigOG7ntguD1jM7L54WtF7aGbHNbzuj/NzqKkH1FzvPnRe0lti586Kg
tdbOl6cHrU92Djs8aM2zM+IZQb/ZzlunBsU+q41PDoqzVm+fH7QW2vnvE0Fx
02rjM4PWQjvnXRC0NtsZt8UMOzP9gnv7H1ynRzI=
              "]], 
             Polygon3DBox[CompressedData["
1:eJwtmmWg3MYVhV+8Dnhke7WyX5gdsuMwY8PM3FDTMDMzM2MbZmg4aRiahhkb
ZiaHmft9Ofqx9n4arXafNHPvPefOVBvvsNr2A/r6+k7ln4H8/8bwvr53B/X1
7dnp63uo29c3dn9f3wylr+9euK55D68Cj4EXgFeE/8X588N7cf4oeDXGP4cX
Ynw1+FrG/wLvz/i48CjG74eHMT4jvDr8BbwwPLzq65sGvgseDA9mfBb4EXhC
eDx4RvgBeDi8AnwF158P3pPrjwOPZPw+uGG8gmeGH4YngN/l7/uS8w+Hn+f8
Y3ktxPtzOGc9zj2U/y9ifA6O7czYO5z/BXwY/D94ec65HJ4X3gNeFr4Unhve
DV4VvgZeGN4PXhm+Cl4Q3gdeBb56UL5zX3gD+G54Zfh4eCX4SngBeG/4f/ye
9+C94IfhY7q51tkcX5dzl+Z1MeNzcmwXxpaBL4HngneF3+b3fw4fCj8HL8f4
ZfA88O7wIHg013oQ7uf+fMn5Bb4Q/pLxgYyPgO+EK8angpeF34fnhCeDF4ff
gGeCR8DLwx/Cc8Nz8jyXgN+EZ4bf5/pf8/1Hwi9y/aO7+VvP4py/9uceOFfO
K7k3k/NaivfvcGxWPj89vDL8KTw//DLXe4Pr7QLfy2dfgl+Hd4bvgUdy/qqc
/xm8IOdPDS8HfwDPBb/O+e9w/h7wg5w/DeMrMP4RPA/j08ErwZ/A88HTwivC
H8PzwlPCy/iM4DngKXwm8Lvw7PCrXP8trr8bfH83f+Pt8PKd/O1fMV455+Cv
4V/gieEb4QF8fgjnzwo/Ck8ED4Cngm+HB8EdeGr4DrjAP/P5ieAb4D74N3hS
+CZ4IDwW508J3waPB//K+CTwv+EO/AH8Db/vKPglfk/N+XMw/gQ8KeNdeHb4
cXgSeCg8G/wYPDH8B5+fHL4FHgcujM8EPwSPD/fBU8C3wuPCv3P+ZPDN8Njw
v40NfP/a8KV8/9eMD+bYxfA38Dp8/jbGl4OPgu9n7H/wlvAt8Iuc/xy8BXwz
/Cn8B3w6/D78GHwDvAR8inOP650GTwNvAv/Y6+vbvJNreK1HeV3P+8U5djLj
n8C/w6fB78Fj4D5+wxnwB/BH8K+MnwK/A3/L2EBeZ8GfwF8w3oHPhD+GP4cH
wP+EP4Lf4/23fP5o+GX4Q8Z/gU+G34JPLVnvru9D4c8YH4tj/4A/hD+Gf2P8
VPhd+HH4RnhJ+FT44eGJb8aLQ+CH4AvbeHcw/BT8X3gN+CL4BfjZQbknN8HP
w8/Am8H/hp+Dn4I3gW8wXsFPw5vCN8JPwP+BV4PPh5+G74XXhC+Gf4B7/P4r
4B/hN+ExjB8MPw0/Cd8Drw5fCP8ED+P8K+Gf4QfhCxifHT4Qvti5DC8FnwZP
yvNdjGOvw6OZX89y/pOMbwxfx/iujJ0CTw1v5PNnvOHYv+CfjH/Er+HwVfAv
8Pxc71TOHwFvDL/F+Z/Bh8DPwq/Ab8K7wvcZqzn/dHhaeFN4Dfim9vcdBq/e
n9+7ZPs8l4LPh2eBt4eXhM+DZ4a3g5eAz4Vngrd1fvF9Q/l9l8LfwbMzfgjj
E8Jrw3PAh8ETwevAc8JHwBPDf23n043tenA+fMP1hnDsEvjbbnLMHYyv0Enu
WQu+BV4GPqKbnHknvGInufQZPn8fvBZ8Cbw247fCy8JHwmvCN8NLw4fD33F+
l++7DP4e/h6u4cvhH5wfvcw156BzcVY+fwDvx+fYmozPBh8ETwCvBS8CnwmP
hLc0l8D/hGeAt4AXhc+CR8FbwfPBJ8FTwBvCi8FnwzPCW8PzwifAk8MbWCvA
Z8DTwZvBC8P/gKeHN4fngo+CJ4HXheeBj4Mng9eHZ4L3gofBq8GzwPvB/fAa
8OLwOfBoeBvjAX/zV/AR8Avwptyb3eAevKrzgfm5Bse+hP/C/J6bzx/D+KTw
eozPDO8DD4dXh0fDe8ANvAr8Gtd/G94dfgC+kGvcw/vpuebxnNvjNQ/vn+XY
lIzN1bDGzb0cG87YnPBz5kZ4GPzA8Kwn14f10/3wye362tH52ORa83J+Yy6B
n+nkO/78LvgFczU8Pjwv/CK8EDwBPDf8PLwA3A8v3GRtW4NYi7ie92jvr+vz
vuG5X027vtes82ydA86FNerMBeeMc2f1OnPHOePcWavOs3BOODf+WmdtuiZd
m+vUWZuuSdfmVryeb/PRZc4/ft/bndQw1jJr11m7PmOftc9zV94PaJ/HynVi
hTnJ3LQgn38VXpTzJoEXgF+BF4EnhrfsT/7bos2XMzepla0ZrB1maVI7mKPN
1bM2ydXmcHP5Frye4PN/82/g86fz/eeYuxk/2NwIn21uhg9yrsPnwePBhxoL
6+Q2c9yB5vomtbY1u7X76Ca53xrcWnzGJrWmNYG1wfa8XuH7t+PYVcZXxl92
LjM+EWPzwS/BC8MTqkWa1PZqCLXEyCZaQk2gNpi+iVZRA6gFRjXRCta41rrT
wf/tRNOobWZrUstY41jrLAS/1knOMHdYX7zb1ofWE+vy987aSYw2Vq9WJ7YY
A4wFizWpBa2RrZW35vUCY1tx7HI+vw38Irw1fIXxqs5cdc66NhdvUltbo1qr
LtmklrYmtTZdtEltac1p7blEk1rWmtvae5EmtbI1qLXosnVigTHJ2LRMndhk
DjAXLFcnNhkzjB1L1ckV5hBzyWJ1YpMxxFiyRJ1Yaww2Fi9aJ7YY04xtS9bJ
PcZkY/PSdXKNOchctEKdWGtMNbYuXye2GiONldvxepn323LsSvNhk1rcmtva
e5U6sdecam5doYnWVEOqJZdvUuurQdWim9bRYmoutdfm8CKdaFK16WZ19Iaa
Te22Up1a0Bxvrt+4jt5Sk6nNduT1Gu938DP8vk3qaDk1nlpv1Tq5wBxhrtiB
16u8397fwPl/r6N31Mxq57/V0a5qSrXlenVqO2s8td0yTbSHmkfts3QT7aEm
UZss20QLqcnV5iuqSTrJaea2bXm9xPtt/E71Zh3tp2ZVu25UR7urodXS69fR
smpIteSGdbSumlHtuFwT7a+mUludwfi58LjwIeZa+Hx4EHyY94/Xw3x2XWMq
338E4/vw/gOO7cLY4fDe8Pvwzv2p3+5r60Pr1R0YX6mTGsNa47A6WlhNvBN8
JLwv/KE1l7kX3g/+CN4N/ob64e+d1HzWfkczvj/8sTnP+FOndrHGsdbZsY4W
vwteH94JXqUTja4e3apO7WMNYy2jPlcvqWf1S/auE0sft2Z2/depfayZrJ22
rFP7WANaC25bRwuqadQ229WptdSIasVt6mgdayhrqS3q1I7WjNaOx8AHwJ8Y
o6wt4A3hx+DN4GPhA+FP4T3h73qp1a3RrdWNscZac8rIOjnd3G6OnaZOzDX2
GpNnqJOTzc3m5Onq5GBzsTl72jo5ylxlDJ2xTk1gbWDNMKJOzjf3WzNM7Vqj
fpkTfhKerE6ON9cb86ev48e4Fl2T+huHcmzHTtaga/GAOnPbmGps3b9ObDXm
Gnu/70WLqFnULvvVicXmaHP1vnVy9Z8aEj6wTuxxzbh2Dqmz1l3DruWD66xl
c5a566A6ucuYZez6thdtoSZSG+3D+Ead5Fhz7V790Xfqa/2cPRnfgPePcmxT
xk6BT4R/hg/ozxx3ruvHqW/Vx2pT9Zj1tXPMueYzPwfeD/4RPs45CJ9Xx0vT
UzumP2vOteeau62b7/C7TnCNwOdz/t0+S84/lrGT64z9xDn7wyfWufYP8L7w
SfDxnXyn370Rrwedy8ZA4x38kHPZHAn/DX5gUPT96cZP+BHXNnxmN/fAe7E+
fFY3c9i57D06Gz6ujjb2HnovT4CPhb+H94GPh4+Bv/NvhC+A/+Nc5e85rj81
zNitHn+F623YH79BvaJetIYZ2Opz9bcxydhkzLm1mxhjrDGG3d5NjDHWGIPu
cLzO3+o98F7sVif2eQ+8F7vUuTfeA+/F7nX+dmOksXLnOvfG3+Rv26POvfAe
ea+MWcYuY9yd3dSA1oLWiKPqxABjgTHurm7ugffCe/YIfBbnXM37fj5zRH+e
qc/WZ/hE6z90Wj9C/+dszr+G9+Nz7EjOPbOOFlYTH96fOeBc8Bk8xvnnMn4d
7ydk/GjGzoGvhSeAj+rPM/JZ+Ywe7SYmGZuMYXd34+mYj84siYc+c+PzVSVz
Qc1pPvpHSTwdv4n2VUOqJSdsoh31FPQWjEnWRzNWiVXGNOurUVVinTHJem1k
lVjV30T7qqnV1moYvZFDSrSNGkav4eASbTO8iTelZlY7D2vi5elZ6V01TbxU
PT69Pj0g59537f37tJv6+vv2eYzppv7+ob3f+g8jWn9Pv2PiJt6EHoheyERN
vBM9C72LN7pZr5+0+XeCJtpaTa22fr2bZ/1xW7+/1s16/qjN32o+tZ9r5vdu
YoCxwBjyazd+1rDWH9G/8hpqAWsAr208X7z1W/QL9ZT+9M5KvCY9hj+9txIv
ynswvPVzvDcn98cvfqPNB3o6i/H+pBKvx3vU3/ox3jvvkXPTOe29s2awdrio
xPtyDjoXnYOfdxMDjYX62fo5akK16S4lWtEYYawwBv7mb6/jNajR1ep6hnpj
F5Z4iXqCelMXlHiFznHnumvmM8ZO7LbeF8ce0evieVzQiceu1+453rsf2/Xh
b1Rf/dSuH/1za1trXP31U/uj9+2X6Kf7G/2ucav8dv8m783YVf5WY5T58eGS
2OVn9OLnqnIt17yx4pWSWGAOcC2+WpIbJm/iDesh6yWPaOId60HrRU/dxMvV
U9Zb1o/YhPd/dNLPmZzXU8Zfjp/Sn2dqrp+2yrM2RxnLXi7JH9M2mevOeXsP
UzTxrvWI9YqnaeJ963nrfU/VxGvWU9ZbnrKJl6wHrRc9WRMvXY9br9uYY+x+
sSQWTdrEK9dz13sf1MRr1cPVyx0PPqkTD1YvdnAT71dPWW/ZHG5ueL4kHx3X
jd44t6R+NMcY6z5o9bM5xVj8fquXqyZerZ6y3vKr3cTSD1v97T1bsuSZeS+H
NPGy9Zz1ns051iuPlOSibhMvWE9Zb7luEsuN6XrPk8DXd9IjsFcwtIl3rYes
l2wMN5e9VBLbzSHWO4+V5BZziLXDCyW5xRxk/fNoSW4yhlsvPV4S241BagHn
tLHJmk/9OkOVWvAy+K1O/kb/Vj1e69PrSrxfPWPrqWtLvOQ/ax74xhKv0Z6c
z+PNkl6dPT3vz1slvT49Zv3DG0q8Z3tO3p93SnpR9sS8/2+U9Mr0vK0Xry/x
wvW89cbuLfEf9YztLd1doif0+I33Y0rmiz0y/YRhVeavPRn9lqbKfNUjtjfw
eol3rKdvfvi0ZH7pqdsr+m9JvaqHrpd8T0m9rgehF3FfSX9Cz93e139K6k17
Qvo9vSrrU8/Q5/t2iZdoT0xv/YmSXtlHveQzewDG5497yXf2CIzPH/QSH/X0
zH+fwIv6fAYlnn3aS3y2R2L8+xCerRNP3nj9WS/xXo/ZeDyml3xgD8b4+V4v
XqYenfH3fXiqTjxD86vf4Xf5HcZSPUp7t8+UeJf21OzNPl3Sa7Nn4Pp9raSX
YA3j/H+3pLelJ28v9KkSr96en97qsyW9QHuIevlPlvQWXcNqQTWoa1uNp9Z7
rqRXbs9KP2tIlfhkj1x/c8Iq/pI9MP2voVXikZ668ey3tl6w52E8HatKvWKO
N/51quR3e4LGr1/a+sEemPH417a+sEdhPBxQJf/b47Ie+qIkPtnDNb793OYb
ewTGx9/b+kaP3fjdV6U+0IM3nv7R1lMXtfFajXaC9T+vuUqODanTr9c7c847
9+2BWW982cani9v472f87Em85i45NpSxS3g93ckxxy6v42Wb48xPfqffbf/R
/QD23KzPPi+Jl/bMrH++buOdPS/rsc9KemHWINYiI6r4e3rY+mPTV/Gb7Ynq
Dw6ukt/saapdp67ij7rHQC08SRV/0T0FateJqviL7mFQ205cxY+0p6r/WlfJ
h/Y49UO7VfLTpW3+tcYx/9nTVXtPWcWvtYdqLT9VFb/WHq5+5qAq8dqay9rr
mzae2/Oz3v2qjd/28NXik1bxO+0h65eWKvnNPRBq68mr+LH2fPVPqyr50R6t
2n6yKv6sey7U/lNU8XOtEfV6rFGtHUuTeGbP0fttz0R/cb8Sv1zPS216Z4l+
toaxlpmjil8/oMl6c4+C8XesJvHJnprx0R76N/A8VfxMPUH10O0lets9AV87
f6r463oS+qWjq3gV9jwGwluU+JdqJP2yWatoJ3v238LzVvFT7RHqH85exf/V
w9Dvmq2Kt2GPZmx4y5J60B6S/ua+Jf2EcZrEE/c4mF/0LPQuDivx88ZtEj/0
jIxH9qzGhbcu8Uvt8emHHljSX7AHpH+7f0m/wB6W/ureJf0Je1z6tfuU9C/s
iY0Db1Xiz+qpq53vKPEr7Bnq9x5Q0q9Qk+tPXV6iT92z8QO8QBU/Wc9QfXpb
iR/inotf4L9U8SPV6PpVV5Zodz0IY+XVJd6EPRD17s0lfos9CvXtTSV+y++9
5Ff3YBh/3UOjv3tEiT+p56TfOXMVL8o9J9/B81Xx1/XU1du3lPg97tH4GV64
ij/qHo/v4fmr+OnuibG/cniJv6nHpL88UxXvSU9evX5riZ/0VS/1vj1r64eB
TfKNe4isL/TM9GdnqeKl6Qnr/91V4k/Z4+vAm5f44+6Z+hVepGr3UnXT+9ms
xP/XA9EP/FeJ3v+6Fz2jJ2q9454j+w1HlfjFnSb5zD1K1j96rPqFV5T4CV/0
oj/soVtP2VPWfz+opH+hR6OfeVmJX2EPU39/r5J+xi+91Bf2tM2XQ1p/aPwq
8fznXuoh9+CYL7/sRQ+5h8D66Sd4p0725Fhv9PF7D+qkx29+HrtJPrfHaX3i
nrHf4cWq+Pd/7imDjynxy9UUaovFq/j9elj6fQ+VeFu/9lIvuefGemBo6/9M
UCW/DG79sP4quUWNqzYcr4r2tUetH//PEr9VT0i/9ZISP8aetf75GSX+7x+9
1GP2iKwH3FOl/39kiV/+Wy/1nD1W6xX3gNlPPK6kX+CeNfuNR5f4759z/qqd
7Jmw3lVzq23HqaLF3RNm//LYkn6EPTv96mtK/EX3nNmPPKGkn+GeO/uVJ5b0
O+xBD4F3LOm32NMeCu9U0o+xB96Fdy7pH9hDHgzvUNIfck/BePA2Jf0h98zY
/9m9pF/pHoNB8LYl/R575OrnPUv6Ie55s/95fEk/xj0R9pf2KOnn2DOv4O1L
+lXuUSjwdiX9Kvdc/QQvVKUfpIeon35piZ+mR6e/+2CJd+eer9/gRav0K9xj
YX/ltBL/XI1lr1MPRu2lx6of/ECJ9+oesB/hBav039yzYX/k9BL/3h6z/bvd
SvpF/wckIoxJ
              "]], 
             Polygon3DBox[CompressedData["
1:eJwV1mXcFUUbB+BDNzwg3SHdIN3w0qCCKJ3SjUpIdzfSDdIoKKIoDWLRIKE0
SigN0vVe8+H+cF+//8zsnrMzu1na9KjfPXokEjmmYqlRUZHIvviRyIl4kUin
GJHIliSRyPtsIBvD0rHOrAEbwEaxtKwTq8w6sP4sFmvA3mP92QiWhnVkFVk7
1ofFYPVZPdaPDWGpWHtWibVn/VhM9h6rzz5lw1hq1oFVTxaJlE8QiTTnT1lJ
mS5qrn6NXGk2Ti6HXGq5EvwoSyrTRk3UL5DLxwbItWYT2HyWl/VnHdhMtoIV
Z6NYTvOlMV9JfoxFybRS4/Xz5PKwT+VyyaWVK8WPs2Qy95NGIpvCOLl27HO5
Fnwsm8Nysb6sK5vH1rIybDzryGaxlawEG806sdlsFSvJxrDubAFbz8qxiawb
m8/WsbJsAuvM5rDVrBQby3qxxWwDq8imsB5sIfuClWeT2H/uYyc7zz5iG1lP
uUXsS1aBTWbvsr5sEEvJ2rEHxu5g51gv9hX7QG4QG8fSsy5sAXvM4qhF7Ba7
Zexy/R65BmwGmyh3gJ1lPdlONpb9wk6zrmwrG8N+ZqdYF/YDG8d+ZX+wbmwb
e2yNPewS682+YZ/JXWEP2QT2JxvNfmInWWf2PZvPHrHYaiG7yRayJ/q4ajG7
zRaxp/p4agm7wyaw/foz5uvBdrBJ7AS7wvqzX9lUdppdZ4PYATaN/cH+YYPZ
QXbDfSxlu1h9NpWNl/uN/cm6s+1sCjvFrrGBbD/719glbCerx6ax6XJ/sn/Z
EHaITWYn2VU2gP3GZrAz7AYbyg6zR+bbzS6yT9gmNk/uIYsV9iG7weawf8J+
lpvCzod9zrqykSw+a8yqss5sKIvLGrIqrCMbyGKz99n/WCc2mMVhH7Bq4Zxg
w1k81og1YcPYNJaZ9WDvsD5sAEvB2rKGbDCbwDKwrqwxG8qmsEysO3ub9Waf
suTsQ1aDdWOjWQLWhNViPdh4log1YzPZVfaITWRn2Gx2nT1hk9k5Npf9y56x
qewCe+h33sUusI/Z12yW3DX2mE1iZ1kd1otNZklYC1aTdWdjWULWlNVlH7Gp
LIq1ZLVZTzaRJWbNWSM2hE1iGVk3ltv5l875V5r/zt6QicbO6V/ITWdH5DKy
hHJ5+Y8shtwnapX+O7mabI5cb7aabWG12FzWh61h37PabB4rbb6C5ns77AeW
K7xj1Dr9Vrm6bIFcKbkCcnXDXmI5wztGrddvk3ubLZTrz75g29k7bBFrxkaz
WSwH680GsC/ZDvYuW8yaslFsJsvOPmFlrFvIuu+EvcRyy/ztf/tYP10uC2st
t5JnlyvGD7OM+ptyy/S75d5j0+VSmS8ilyn8XuwR6yu7Vv+DXB02n6WViyGX
NTh7ytKxeCxXmJNFM+6VNY7p7xk7mu2TG8g3s32sEVvFShqb39g64exgOWTS
sOgsS/hP2BO5FOyVPoPazP5jqVk0uczh/2SP2UvrHtXftcYo9iNLKfeaZVTf
sofsudxh/W25EWwPSy73kqVX37AH7LXccf19uTHsJ7bKNeawbnF+hGUKz5Qq
xqqG84kV1NcyXyXWKjyrrAyrzSqz1uwlK8tqsAqsRdiHrBQrz4qy+uwWy8eW
qbgsNdvIXruWpSwOSxXet+wVW85SsOzhOWKJ9CtUKpYznOUsSTgf3NsI/TL3
VoT1NPZznlIuRzi3WeLwzpIbrl8qV5j1kmvOx7DZLCfrE84D11zF2Db8FSsn
U5NVZC3Zc1Y6fBuoWCxF+B5gL4wtK1eYvRvOfJYnnOHWnaH/2hpV2HC5a2xa
uH9WiQ1j19l09hWrzIaG70nzlTJfI/4fK2q+Kqw0axzewewttkTFZinDNwd7
Gc57uTKsSTg/WTGZaqwcaxbOT1aClWNFWD12k+VlVVlZ1jSclaw4q8CKs/fD
fmCFWSVWkjVkD1gRVpGVYB+E540VYi3VOP1c95ab9XN9b8i9YOnUJnafJWXP
9GnC78DuseIsr/lqhXc/e9NcJVg+Vju8b1l2dtvvt0F/yBqt2VJj35LLLVeD
/8Wyhueb5WE12d8sG7tj7MZwthjbhi0xtohcTrlq4fuHZZEryLKwiuG7gaVh
hVhWVil8r7C0rK2arF9kvgJskPkKyGWWq8D/YKllorPzYQ/JzWDH5GKwC+HZ
Y5+x46y97NTwfcQKsSGsqFwu81Xnl1lmmQ/VJP1CufxsoFxWuSi5gvwXFkcm
G0vKCrFfWVyWhSVhBdjPLHY4c9kbrAjbz+KzzCwxy89+YrFYOzVFv9i6Bdlg
674pl0yuMP+NxZPJyzKwsuwkS8Hu+u2/CmeQsR+yZcbmkUsvV4afYMnl7sl9
rT8q15Ytl8snl1GuHD/FUsrlZ5lYeXaapWLJ2HN92rAP2V1jI+xs2M/mm8aO
sljsEouE9xk7wRKxu/okaiW7wuKyG/r44Txhl9hT13cw7CHzDWO7WWK5eyxK
rWJXWXoW3/XlZntYxPWNUNv0B4xtyb6Uiyd3kyUIZxu7yBKw2/pE6nP2F3th
3SP6O8aOZHtZfLlbLKFazi6zZ3KHwjksN5ztYiOtu50dZK3YBpbQ2DsssVrB
/mYx2UX9a7mZ7HcWxR6wZGoNu86GmG9LeM7kmrK1LJNcIvebL7wzWUyZDCwB
y8P2suisMMvGKrOzLF0409hlfbRwRrOT5vsovAfC+9Ma1dksNoh9G55H1pit
ZnGM/YtFV3PYKZaE3dcnVavZNTbY2O/CM29sE7aGfcxWhvcsq8Fms6Hs+7Bf
WDO2jg1jP4TnmzVn69lwtjXsF9aCfcGe+O33hn3K+rDN7P+FqjJY
              "]]}]}, {}, {}, {}, {}, {}, {}, {}}, {{
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwt0ckrBVAUB+D7eA8Pz5ApSVGypvwBbKyRrJEsDSVlR8makjUla0rWlKwp
WZvn4eGZx+/J4tzvLG73d063tnewYyASQhhTkahia14IxexiLfvZyFG2cIrt
nGMPlzjMNU5wizPc4wJPucJnbjArP4QdlvOA9bznofwHHvGRx0zxhE/pd/jM
M77wnK+84Bsv+c4rfvCan7zhF2/5zTv+MBkNfws3yU9q67jPUm4zynWmzL2c
nofz3OU0NznOVQ5xkd2cZRsn2cwRNrCPNexkEavlF7KKBaxkghUUHcroaihh
LosZZyFzmGA285jFOGPMZnq1mCOTmcz4/99fi1o+yA==
            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0UcuBXAQB+D/09vzOIDgAIIDCA4gyl6Uvba0EBxAwglwAEH0zgFEiYiI
HhERvXc+sZh8mdXM/Ca/saWmORJCaFebiSFENP0ZIWRzmPlcYjHXWM5DVvOG
DfxhG2PRELqZyz4WcpClHGUlV1jHDbbwmJ2841hSCPcc5wMn+MhJPnGKz5zm
C2f4ylm+cY7vnOcHF/jJRX793cFvLvOHKwxxIfSYf6vv4BGbuM5aLrOCIyzh
AAvYyxx2McpWfsmhnles4j7LuMqiv32YxyFm8VreMV4ykxeM8pwZPGM6T5nG
E6byiCk8YDL3mMRdJnKHCdxmPLcYF/n/7y/0AkoX
            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0TssHQAUBuDj4t5LPRcx1tIYdRGjLo0RgxgxNKZiadgqUe+29xrESMQr
IoiUNiKtRYy6NEaWzm3RevPddDj5cpb/nJxT09XT+jovIgbUfCoiLxFxWRpR
yXRZRA2r+Zy1fMEGtrCJnWxnH7s5yH5mOco5znCTy9znZ37nIU95zN8cSkf8
4TuecZjnHOFFLo9/OcZ/HOclJ3jFSV7zPW/4gbf8yDtmeM8sHzjFyI/4af4v
/Q+e8IBH3OY3LnKD05zN7cUM3/AtX7GXbezgSzazno18xjpW8SmTrOBX9y7n
Hsu4y1J+YQl3+ISfWMwtFnGTaa4zxTUmucpCrrCAS8znAhOJ//99BKvnQ3g=

            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0ektA3AUAPB/tY7W0ZqATkAnwAYqcV/FdzQRQQQVERGhnQATYAJMgAkw
AXXf/BofXn55yUvelZ6c6ZmOhBAWxVw8hEg0hGwyhGZOMM08MyywiyVmecgJ
njDPcxZ4xRJvecgyTxhJqWEzr5jmLTMsszcRwgP7+Mh+PnGAzxzkC4f4ymG+
cYTvHOUHx/jJcX4xx+/KPvzhJH85xRALoUP/e3kbb9jCSyZ5xl/zH/OOB7xm
kRdc4ylnecQc99nNPXZyle2cYWtlLqZYdO8kd9nEHTZymw3cYj03meAG41xn
HddYyxXWcJnVXGKMC4xynlXR///+AQVYP9Y=
            "]]}, {
           GrayLevel[0.2], 
           
           Line3DBox[{2886, 1265, 2885, 4790, 3125, 2887, 4791, 3126, 2888, 
            4792, 3127, 2889, 4793, 3128, 2890, 4794, 3129, 2891, 4795, 3130, 
            2892, 4796, 3131, 2893, 4797, 3132, 2894, 4798, 3133, 2895, 4799, 
            3134, 2896, 4800, 3135, 2897, 4801, 3136, 2898, 4802, 3137, 2899, 
            4803, 3138, 2900}], 
           
           Line3DBox[{2902, 4265, 4685, 2901, 1281, 2903, 4804, 3139, 2904, 
            4805, 3140, 2905, 4806, 3141, 2906, 4807, 3142, 2907, 4808, 3143, 
            2908, 4809, 3144, 2909, 4810, 3145, 2910, 4811, 3146, 2911, 4812, 
            3147, 2912, 4813, 3148, 2913, 4814, 3149, 2914, 4815, 3150, 2915, 
            4816, 3151, 2916}], 
           
           Line3DBox[{2918, 4266, 4686, 2917, 4267, 4687, 2919, 1297, 2920, 
            4817, 3152, 2921, 4818, 3153, 2922, 4819, 3154, 2923, 4820, 3155, 
            2924, 4821, 3156, 2925, 4822, 3157, 2926, 4823, 3158, 2927, 4824, 
            3159, 2928, 4825, 3160, 2929, 4826, 3161, 2930, 4827, 3162, 2931, 
            4828, 3163, 2932}], 
           
           Line3DBox[{2934, 4268, 4688, 2933, 4269, 4689, 2935, 4270, 4690, 
            2936, 1313, 2937, 4829, 3164, 2938, 4830, 3165, 2939, 4831, 3166, 
            2940, 4832, 3167, 2941, 4833, 3168, 2942, 4834, 3169, 2943, 4835, 
            3170, 2944, 4836, 3171, 2945, 4837, 3172, 2946, 4838, 3173, 2947, 
            4839, 3174, 2948}], 
           
           Line3DBox[{2950, 4271, 4691, 2949, 4272, 4692, 2951, 4273, 4693, 
            2952, 4274, 4694, 2953, 1329, 2954, 4840, 3175, 2955, 4841, 3176, 
            2956, 4842, 3177, 2957, 4843, 3178, 2958, 4844, 3179, 2959, 4845, 
            3180, 2960, 4846, 3181, 2961, 4847, 3182, 2962, 4848, 3183, 2963, 
            4849, 3184, 2964}], 
           
           Line3DBox[{2966, 4275, 4695, 2965, 4276, 4696, 2967, 4277, 4697, 
            2968, 4278, 4698, 2969, 4279, 4699, 2970, 1345, 2971, 4850, 3185, 
            2972, 4851, 3186, 2973, 4852, 3187, 2974, 4853, 3188, 2975, 4854, 
            3189, 2976, 4855, 3190, 2977, 4856, 3191, 2978, 4857, 3192, 2979, 
            4858, 3193, 2980}], 
           
           Line3DBox[{2982, 4280, 4700, 2981, 4281, 4701, 2983, 4282, 4702, 
            2984, 4283, 4703, 2985, 4284, 4704, 2986, 4285, 4705, 2987, 1361, 
            2988, 4859, 3194, 2989, 4860, 3195, 2990, 4861, 3196, 2991, 4862, 
            3197, 2992, 4863, 3198, 2993, 4864, 3199, 2994, 4865, 3200, 2995, 
            4866, 3201, 2996}], 
           
           Line3DBox[{2998, 4286, 4706, 2997, 4287, 4707, 2999, 4288, 4708, 
            3000, 4289, 4709, 3001, 4290, 4710, 3002, 4291, 4711, 3003, 4292, 
            4712, 3004, 1377, 3005, 4867, 3202, 3006, 4868, 3203, 3007, 4869, 
            3204, 3008, 4870, 3205, 3009, 4871, 3206, 3010, 4872, 3207, 3011, 
            4873, 3208, 3012}], 
           
           Line3DBox[{3014, 4293, 4713, 3013, 4294, 4714, 3015, 4295, 4715, 
            3016, 4296, 4716, 3017, 4297, 4717, 3018, 4298, 4718, 3019, 4299, 
            4719, 3020, 4300, 4720, 3021, 1393, 3022, 4874, 3209, 3023, 4875, 
            3210, 3024, 4876, 3211, 3025, 4877, 3212, 3026, 4878, 3213, 3027, 
            4879, 3214, 3028}], 
           
           Line3DBox[{3030, 4301, 4721, 3029, 4302, 4722, 3031, 4303, 4723, 
            3032, 4304, 4724, 3033, 4305, 4725, 3034, 4306, 4726, 3035, 4307, 
            4727, 3036, 4308, 4728, 3037, 4309, 4729, 3038, 1409, 3039, 4880, 
            3215, 3040, 4881, 3216, 3041, 4882, 3217, 3042, 4883, 3218, 3043, 
            4884, 3219, 3044}], 
           
           Line3DBox[{3046, 4310, 4730, 3045, 4311, 4731, 3047, 4312, 4732, 
            3048, 4313, 4733, 3049, 4314, 4734, 3050, 4315, 4735, 3051, 4316, 
            4736, 3052, 4317, 4737, 3053, 4318, 4738, 3054, 4319, 4739, 3055, 
            1425, 3056, 4885, 3220, 3057, 4886, 3221, 3058, 4887, 3222, 3059, 
            4888, 3223, 3060}], 
           
           Line3DBox[{3062, 4320, 4740, 3061, 4321, 4741, 3063, 4322, 4742, 
            3064, 4323, 4743, 3065, 4324, 4744, 3066, 4325, 4745, 3067, 4326, 
            4746, 3068, 4327, 4747, 3069, 4328, 4748, 3070, 4329, 4749, 3071, 
            4330, 4750, 3072, 1441, 3073, 4889, 3224, 3074, 4890, 3225, 3075, 
            4891, 3226, 3076}], 
           
           Line3DBox[{3078, 4331, 4751, 3077, 4332, 4752, 3079, 4333, 4753, 
            3080, 4334, 4754, 3081, 4335, 4755, 3082, 4336, 4756, 3083, 4337, 
            4757, 3084, 4338, 4758, 3085, 4339, 4759, 3086, 4340, 4760, 3087, 
            4341, 4761, 3088, 4342, 4762, 3089, 1457, 3090, 4892, 3227, 3091, 
            4893, 3228, 3092}], 
           
           Line3DBox[{3094, 4343, 4763, 3093, 4344, 4764, 3095, 4345, 4765, 
            3096, 4346, 4766, 3097, 4347, 4767, 3098, 4348, 4768, 3099, 4349, 
            4769, 3100, 4350, 4770, 3101, 4351, 4771, 3102, 4352, 4772, 3103, 
            4353, 4773, 3104, 4354, 4774, 3105, 4355, 4775, 3106, 1473, 3107, 
            4894, 3229, 3108}], 
           
           Line3DBox[{3110, 4356, 4776, 3109, 4357, 4777, 3111, 4358, 4778, 
            3112, 4359, 4779, 3113, 4360, 4780, 3114, 4361, 4781, 3115, 4362, 
            4782, 3116, 4363, 4783, 3117, 4364, 4784, 3118, 4365, 4785, 3119, 
            4366, 4786, 3120, 4367, 4787, 3121, 4368, 4788, 3122, 4369, 4789, 
            3123, 1489, 3124}], 
           
           Line3DBox[{3231, 1730, 3230, 5000, 3470, 3232, 5001, 3471, 3233, 
            5002, 3472, 3234, 5003, 3473, 3235, 5004, 3474, 3236, 5005, 3475, 
            3237, 5006, 3476, 3238, 5007, 3477, 3239, 5008, 3478, 3240, 5009, 
            3479, 3241, 5010, 3480, 3242, 5011, 3481, 3243, 5012, 3482, 3244, 
            5013, 3483, 3245}], 
           
           Line3DBox[{3247, 4370, 4895, 3246, 1746, 3248, 5014, 3484, 3249, 
            5015, 3485, 3250, 5016, 3486, 3251, 5017, 3487, 3252, 5018, 3488, 
            3253, 5019, 3489, 3254, 5020, 3490, 3255, 5021, 3491, 3256, 5022, 
            3492, 3257, 5023, 3493, 3258, 5024, 3494, 3259, 5025, 3495, 3260, 
            5026, 3496, 3261}], 
           
           Line3DBox[{3263, 4371, 4896, 3262, 4372, 4897, 3264, 1762, 3265, 
            5027, 3497, 3266, 5028, 3498, 3267, 5029, 3499, 3268, 5030, 3500, 
            3269, 5031, 3501, 3270, 5032, 3502, 3271, 5033, 3503, 3272, 5034, 
            3504, 3273, 5035, 3505, 3274, 5036, 3506, 3275, 5037, 3507, 3276, 
            5038, 3508, 3277}], 
           
           Line3DBox[{3279, 4373, 4898, 3278, 4374, 4899, 3280, 4375, 4900, 
            3281, 1778, 3282, 5039, 3509, 3283, 5040, 3510, 3284, 5041, 3511, 
            3285, 5042, 3512, 3286, 5043, 3513, 3287, 5044, 3514, 3288, 5045, 
            3515, 3289, 5046, 3516, 3290, 5047, 3517, 3291, 5048, 3518, 3292, 
            5049, 3519, 3293}], 
           
           Line3DBox[{3295, 4376, 4901, 3294, 4377, 4902, 3296, 4378, 4903, 
            3297, 4379, 4904, 3298, 1794, 3299, 5050, 3520, 3300, 5051, 3521, 
            3301, 5052, 3522, 3302, 5053, 3523, 3303, 5054, 3524, 3304, 5055, 
            3525, 3305, 5056, 3526, 3306, 5057, 3527, 3307, 5058, 3528, 3308, 
            5059, 3529, 3309}], 
           
           Line3DBox[{3311, 4380, 4905, 3310, 4381, 4906, 3312, 4382, 4907, 
            3313, 4383, 4908, 3314, 4384, 4909, 3315, 1810, 3316, 5060, 3530, 
            3317, 5061, 3531, 3318, 5062, 3532, 3319, 5063, 3533, 3320, 5064, 
            3534, 3321, 5065, 3535, 3322, 5066, 3536, 3323, 5067, 3537, 3324, 
            5068, 3538, 3325}], 
           
           Line3DBox[{3327, 4385, 4910, 3326, 4386, 4911, 3328, 4387, 4912, 
            3329, 4388, 4913, 3330, 4389, 4914, 3331, 4390, 4915, 3332, 1826, 
            3333, 5069, 3539, 3334, 5070, 3540, 3335, 5071, 3541, 3336, 5072, 
            3542, 3337, 5073, 3543, 3338, 5074, 3544, 3339, 5075, 3545, 3340, 
            5076, 3546, 3341}], 
           
           Line3DBox[{3343, 4391, 4916, 3342, 4392, 4917, 3344, 4393, 4918, 
            3345, 4394, 4919, 3346, 4395, 4920, 3347, 4396, 4921, 3348, 4397, 
            4922, 3349, 1842, 3350, 5077, 3547, 3351, 5078, 3548, 3352, 5079, 
            3549, 3353, 5080, 3550, 3354, 5081, 3551, 3355, 5082, 3552, 3356, 
            5083, 3553, 3357}], 
           
           Line3DBox[{3359, 4398, 4923, 3358, 4399, 4924, 3360, 4400, 4925, 
            3361, 4401, 4926, 3362, 4402, 4927, 3363, 4403, 4928, 3364, 4404, 
            4929, 3365, 4405, 4930, 3366, 1858, 3367, 5084, 3554, 3368, 5085, 
            3555, 3369, 5086, 3556, 3370, 5087, 3557, 3371, 5088, 3558, 3372, 
            5089, 3559, 3373}], 
           
           Line3DBox[{3375, 4406, 4931, 3374, 4407, 4932, 3376, 4408, 4933, 
            3377, 4409, 4934, 3378, 4410, 4935, 3379, 4411, 4936, 3380, 4412, 
            4937, 3381, 4413, 4938, 3382, 4414, 4939, 3383, 1874, 3384, 5090, 
            3560, 3385, 5091, 3561, 3386, 5092, 3562, 3387, 5093, 3563, 3388, 
            5094, 3564, 3389}], 
           
           Line3DBox[{3391, 4415, 4940, 3390, 4416, 4941, 3392, 4417, 4942, 
            3393, 4418, 4943, 3394, 4419, 4944, 3395, 4420, 4945, 3396, 4421, 
            4946, 3397, 4422, 4947, 3398, 4423, 4948, 3399, 4424, 4949, 3400, 
            1890, 3401, 5095, 3565, 3402, 5096, 3566, 3403, 5097, 3567, 3404, 
            5098, 3568, 3405}], 
           
           Line3DBox[{3407, 4425, 4950, 3406, 4426, 4951, 3408, 4427, 4952, 
            3409, 4428, 4953, 3410, 4429, 4954, 3411, 4430, 4955, 3412, 4431, 
            4956, 3413, 4432, 4957, 3414, 4433, 4958, 3415, 4434, 4959, 3416, 
            4435, 4960, 3417, 1906, 3418, 5099, 3569, 3419, 5100, 3570, 3420, 
            5101, 3571, 3421}], 
           
           Line3DBox[{3423, 4436, 4961, 3422, 4437, 4962, 3424, 4438, 4963, 
            3425, 4439, 4964, 3426, 4440, 4965, 3427, 4441, 4966, 3428, 4442, 
            4967, 3429, 4443, 4968, 3430, 4444, 4969, 3431, 4445, 4970, 3432, 
            4446, 4971, 3433, 4447, 4972, 3434, 1922, 3435, 5102, 3572, 3436, 
            5103, 3573, 3437}], 
           
           Line3DBox[{3439, 4448, 4973, 3438, 4449, 4974, 3440, 4450, 4975, 
            3441, 4451, 4976, 3442, 4452, 4977, 3443, 4453, 4978, 3444, 4454, 
            4979, 3445, 4455, 4980, 3446, 4456, 4981, 3447, 4457, 4982, 3448, 
            4458, 4983, 3449, 4459, 4984, 3450, 4460, 4985, 3451, 1938, 3452, 
            5104, 3574, 3453}], 
           
           Line3DBox[{3455, 4461, 4986, 3454, 4462, 4987, 3456, 4463, 4988, 
            3457, 4464, 4989, 3458, 4465, 4990, 3459, 4466, 4991, 3460, 4467, 
            4992, 3461, 4468, 4993, 3462, 4469, 4994, 3463, 4470, 4995, 3464, 
            4471, 4996, 3465, 4472, 4997, 3466, 4473, 4998, 3467, 4474, 4999, 
            3468, 1954, 3469}], 
           
           Line3DBox[{3576, 2195, 3575, 5210, 3815, 3577, 5211, 3816, 3578, 
            5212, 3817, 3579, 5213, 3818, 3580, 5214, 3819, 3581, 5215, 3820, 
            3582, 5216, 3821, 3583, 5217, 3822, 3584, 5218, 3823, 3585, 5219, 
            3824, 3586, 5220, 3825, 3587, 5221, 3826, 3588, 5222, 3827, 3589, 
            5223, 3828, 3590}], 
           
           Line3DBox[{3592, 4475, 5105, 3591, 2211, 3593, 5224, 3829, 3594, 
            5225, 3830, 3595, 5226, 3831, 3596, 5227, 3832, 3597, 5228, 3833, 
            3598, 5229, 3834, 3599, 5230, 3835, 3600, 5231, 3836, 3601, 5232, 
            3837, 3602, 5233, 3838, 3603, 5234, 3839, 3604, 5235, 3840, 3605, 
            5236, 3841, 3606}], 
           
           Line3DBox[{3608, 4476, 5106, 3607, 4477, 5107, 3609, 2227, 3610, 
            5237, 3842, 3611, 5238, 3843, 3612, 5239, 3844, 3613, 5240, 3845, 
            3614, 5241, 3846, 3615, 5242, 3847, 3616, 5243, 3848, 3617, 5244, 
            3849, 3618, 5245, 3850, 3619, 5246, 3851, 3620, 5247, 3852, 3621, 
            5248, 3853, 3622}], 
           
           Line3DBox[{3624, 4478, 5108, 3623, 4479, 5109, 3625, 4480, 5110, 
            3626, 2243, 3627, 5249, 3854, 3628, 5250, 3855, 3629, 5251, 3856, 
            3630, 5252, 3857, 3631, 5253, 3858, 3632, 5254, 3859, 3633, 5255, 
            3860, 3634, 5256, 3861, 3635, 5257, 3862, 3636, 5258, 3863, 3637, 
            5259, 3864, 3638}], 
           
           Line3DBox[{3640, 4481, 5111, 3639, 4482, 5112, 3641, 4483, 5113, 
            3642, 4484, 5114, 3643, 2259, 3644, 5260, 3865, 3645, 5261, 3866, 
            3646, 5262, 3867, 3647, 5263, 3868, 3648, 5264, 3869, 3649, 5265, 
            3870, 3650, 5266, 3871, 3651, 5267, 3872, 3652, 5268, 3873, 3653, 
            5269, 3874, 3654}], 
           
           Line3DBox[{3656, 4485, 5115, 3655, 4486, 5116, 3657, 4487, 5117, 
            3658, 4488, 5118, 3659, 4489, 5119, 3660, 2275, 3661, 5270, 3875, 
            3662, 5271, 3876, 3663, 5272, 3877, 3664, 5273, 3878, 3665, 5274, 
            3879, 3666, 5275, 3880, 3667, 5276, 3881, 3668, 5277, 3882, 3669, 
            5278, 3883, 3670}], 
           
           Line3DBox[{3672, 4490, 5120, 3671, 4491, 5121, 3673, 4492, 5122, 
            3674, 4493, 5123, 3675, 4494, 5124, 3676, 4495, 5125, 3677, 2291, 
            3678, 5279, 3884, 3679, 5280, 3885, 3680, 5281, 3886, 3681, 5282, 
            3887, 3682, 5283, 3888, 3683, 5284, 3889, 3684, 5285, 3890, 3685, 
            5286, 3891, 3686}], 
           
           Line3DBox[{3688, 4496, 5126, 3687, 4497, 5127, 3689, 4498, 5128, 
            3690, 4499, 5129, 3691, 4500, 5130, 3692, 4501, 5131, 3693, 4502, 
            5132, 3694, 2307, 3695, 5287, 3892, 3696, 5288, 3893, 3697, 5289, 
            3894, 3698, 5290, 3895, 3699, 5291, 3896, 3700, 5292, 3897, 3701, 
            5293, 3898, 3702}], 
           
           Line3DBox[{3704, 4503, 5133, 3703, 4504, 5134, 3705, 4505, 5135, 
            3706, 4506, 5136, 3707, 4507, 5137, 3708, 4508, 5138, 3709, 4509, 
            5139, 3710, 4510, 5140, 3711, 2323, 3712, 5294, 3899, 3713, 5295, 
            3900, 3714, 5296, 3901, 3715, 5297, 3902, 3716, 5298, 3903, 3717, 
            5299, 3904, 3718}], 
           
           Line3DBox[{3720, 4511, 5141, 3719, 4512, 5142, 3721, 4513, 5143, 
            3722, 4514, 5144, 3723, 4515, 5145, 3724, 4516, 5146, 3725, 4517, 
            5147, 3726, 4518, 5148, 3727, 4519, 5149, 3728, 2339, 3729, 5300, 
            3905, 3730, 5301, 3906, 3731, 5302, 3907, 3732, 5303, 3908, 3733, 
            5304, 3909, 3734}], 
           
           Line3DBox[{3736, 4520, 5150, 3735, 4521, 5151, 3737, 4522, 5152, 
            3738, 4523, 5153, 3739, 4524, 5154, 3740, 4525, 5155, 3741, 4526, 
            5156, 3742, 4527, 5157, 3743, 4528, 5158, 3744, 4529, 5159, 3745, 
            2355, 3746, 5305, 3910, 3747, 5306, 3911, 3748, 5307, 3912, 3749, 
            5308, 3913, 3750}], 
           
           Line3DBox[{3752, 4530, 5160, 3751, 4531, 5161, 3753, 4532, 5162, 
            3754, 4533, 5163, 3755, 4534, 5164, 3756, 4535, 5165, 3757, 4536, 
            5166, 3758, 4537, 5167, 3759, 4538, 5168, 3760, 4539, 5169, 3761, 
            4540, 5170, 3762, 2371, 3763, 5309, 3914, 3764, 5310, 3915, 3765, 
            5311, 3916, 3766}], 
           
           Line3DBox[{3768, 4541, 5171, 3767, 4542, 5172, 3769, 4543, 5173, 
            3770, 4544, 5174, 3771, 4545, 5175, 3772, 4546, 5176, 3773, 4547, 
            5177, 3774, 4548, 5178, 3775, 4549, 5179, 3776, 4550, 5180, 3777, 
            4551, 5181, 3778, 4552, 5182, 3779, 2387, 3780, 5312, 3917, 3781, 
            5313, 3918, 3782}], 
           
           Line3DBox[{3784, 4553, 5183, 3783, 4554, 5184, 3785, 4555, 5185, 
            3786, 4556, 5186, 3787, 4557, 5187, 3788, 4558, 5188, 3789, 4559, 
            5189, 3790, 4560, 5190, 3791, 4561, 5191, 3792, 4562, 5192, 3793, 
            4563, 5193, 3794, 4564, 5194, 3795, 4565, 5195, 3796, 2403, 3797, 
            5314, 3919, 3798}], 
           
           Line3DBox[{3800, 4566, 5196, 3799, 4567, 5197, 3801, 4568, 5198, 
            3802, 4569, 5199, 3803, 4570, 5200, 3804, 4571, 5201, 3805, 4572, 
            5202, 3806, 4573, 5203, 3807, 4574, 5204, 3808, 4575, 5205, 3809, 
            4576, 5206, 3810, 4577, 5207, 3811, 4578, 5208, 3812, 4579, 5209, 
            3813, 2419, 3814}], 
           
           Line3DBox[{3921, 2660, 3920, 5420, 4160, 3922, 5421, 4161, 3923, 
            5422, 4162, 3924, 5423, 4163, 3925, 5424, 4164, 3926, 5425, 4165, 
            3927, 5426, 4166, 3928, 5427, 4167, 3929, 5428, 4168, 3930, 5429, 
            4169, 3931, 5430, 4170, 3932, 5431, 4171, 3933, 5432, 4172, 3934, 
            5433, 4173, 3935}], 
           
           Line3DBox[{3937, 4580, 5315, 3936, 2676, 3938, 5434, 4174, 3939, 
            5435, 4175, 3940, 5436, 4176, 3941, 5437, 4177, 3942, 5438, 4178, 
            3943, 5439, 4179, 3944, 5440, 4180, 3945, 5441, 4181, 3946, 5442, 
            4182, 3947, 5443, 4183, 3948, 5444, 4184, 3949, 5445, 4185, 3950, 
            5446, 4186, 3951}], 
           
           Line3DBox[{3953, 4581, 5316, 3952, 4582, 5317, 3954, 2692, 3955, 
            5447, 4187, 3956, 5448, 4188, 3957, 5449, 4189, 3958, 5450, 4190, 
            3959, 5451, 4191, 3960, 5452, 4192, 3961, 5453, 4193, 3962, 5454, 
            4194, 3963, 5455, 4195, 3964, 5456, 4196, 3965, 5457, 4197, 3966, 
            5458, 4198, 3967}], 
           
           Line3DBox[{3969, 4583, 5318, 3968, 4584, 5319, 3970, 4585, 5320, 
            3971, 2708, 3972, 5459, 4199, 3973, 5460, 4200, 3974, 5461, 4201, 
            3975, 5462, 4202, 3976, 5463, 4203, 3977, 5464, 4204, 3978, 5465, 
            4205, 3979, 5466, 4206, 3980, 5467, 4207, 3981, 5468, 4208, 3982, 
            5469, 4209, 3983}], 
           
           Line3DBox[{3985, 4586, 5321, 3984, 4587, 5322, 3986, 4588, 5323, 
            3987, 4589, 5324, 3988, 2724, 3989, 5470, 4210, 3990, 5471, 4211, 
            3991, 5472, 4212, 3992, 5473, 4213, 3993, 5474, 4214, 3994, 5475, 
            4215, 3995, 5476, 4216, 3996, 5477, 4217, 3997, 5478, 4218, 3998, 
            5479, 4219, 3999}], 
           
           Line3DBox[{4001, 4590, 5325, 4000, 4591, 5326, 4002, 4592, 5327, 
            4003, 4593, 5328, 4004, 4594, 5329, 4005, 2740, 4006, 5480, 4220, 
            4007, 5481, 4221, 4008, 5482, 4222, 4009, 5483, 4223, 4010, 5484, 
            4224, 4011, 5485, 4225, 4012, 5486, 4226, 4013, 5487, 4227, 4014, 
            5488, 4228, 4015}], 
           
           Line3DBox[{4017, 4595, 5330, 4016, 4596, 5331, 4018, 4597, 5332, 
            4019, 4598, 5333, 4020, 4599, 5334, 4021, 4600, 5335, 4022, 2756, 
            4023, 5489, 4229, 4024, 5490, 4230, 4025, 5491, 4231, 4026, 5492, 
            4232, 4027, 5493, 4233, 4028, 5494, 4234, 4029, 5495, 4235, 4030, 
            5496, 4236, 4031}], 
           
           Line3DBox[{4033, 4601, 5336, 4032, 4602, 5337, 4034, 4603, 5338, 
            4035, 4604, 5339, 4036, 4605, 5340, 4037, 4606, 5341, 4038, 4607, 
            5342, 4039, 2772, 4040, 5497, 4237, 4041, 5498, 4238, 4042, 5499, 
            4239, 4043, 5500, 4240, 4044, 5501, 4241, 4045, 5502, 4242, 4046, 
            5503, 4243, 4047}], 
           
           Line3DBox[{4049, 4608, 5343, 4048, 4609, 5344, 4050, 4610, 5345, 
            4051, 4611, 5346, 4052, 4612, 5347, 4053, 4613, 5348, 4054, 4614, 
            5349, 4055, 4615, 5350, 4056, 2788, 4057, 5504, 4244, 4058, 5505, 
            4245, 4059, 5506, 4246, 4060, 5507, 4247, 4061, 5508, 4248, 4062, 
            5509, 4249, 4063}], 
           
           Line3DBox[{4065, 4616, 5351, 4064, 4617, 5352, 4066, 4618, 5353, 
            4067, 4619, 5354, 4068, 4620, 5355, 4069, 4621, 5356, 4070, 4622, 
            5357, 4071, 4623, 5358, 4072, 4624, 5359, 4073, 2804, 4074, 5510, 
            4250, 4075, 5511, 4251, 4076, 5512, 4252, 4077, 5513, 4253, 4078, 
            5514, 4254, 4079}], 
           
           Line3DBox[{4081, 4625, 5360, 4080, 4626, 5361, 4082, 4627, 5362, 
            4083, 4628, 5363, 4084, 4629, 5364, 4085, 4630, 5365, 4086, 4631, 
            5366, 4087, 4632, 5367, 4088, 4633, 5368, 4089, 4634, 5369, 4090, 
            2820, 4091, 5515, 4255, 4092, 5516, 4256, 4093, 5517, 4257, 4094, 
            5518, 4258, 4095}], 
           
           Line3DBox[{4097, 4635, 5370, 4096, 4636, 5371, 4098, 4637, 5372, 
            4099, 4638, 5373, 4100, 4639, 5374, 4101, 4640, 5375, 4102, 4641, 
            5376, 4103, 4642, 5377, 4104, 4643, 5378, 4105, 4644, 5379, 4106, 
            4645, 5380, 4107, 2836, 4108, 5519, 4259, 4109, 5520, 4260, 4110, 
            5521, 4261, 4111}], 
           
           Line3DBox[{4113, 4646, 5381, 4112, 4647, 5382, 4114, 4648, 5383, 
            4115, 4649, 5384, 4116, 4650, 5385, 4117, 4651, 5386, 4118, 4652, 
            5387, 4119, 4653, 5388, 4120, 4654, 5389, 4121, 4655, 5390, 4122, 
            4656, 5391, 4123, 4657, 5392, 4124, 2852, 4125, 5522, 4262, 4126, 
            5523, 4263, 4127}], 
           
           Line3DBox[{4129, 4658, 5393, 4128, 4659, 5394, 4130, 4660, 5395, 
            4131, 4661, 5396, 4132, 4662, 5397, 4133, 4663, 5398, 4134, 4664, 
            5399, 4135, 4665, 5400, 4136, 4666, 5401, 4137, 4667, 5402, 4138, 
            4668, 5403, 4139, 4669, 5404, 4140, 4670, 5405, 4141, 2868, 4142, 
            5524, 4264, 4143}], 
           
           Line3DBox[{4145, 4671, 5406, 4144, 4672, 5407, 4146, 4673, 5408, 
            4147, 4674, 5409, 4148, 4675, 5410, 4149, 4676, 5411, 4150, 4677, 
            5412, 4151, 4678, 5413, 4152, 4679, 5414, 4153, 4680, 5415, 4154, 
            4681, 5416, 4155, 4682, 5417, 4156, 4683, 5418, 4157, 4684, 5419, 
            4158, 2884, 4159}]}, {
           GrayLevel[0.2], 
           
           Line3DBox[{1025, 1265, 1026, 4685, 1280, 1055, 4686, 1295, 1070, 
            4688, 1310, 1085, 4691, 1325, 1100, 4695, 1340, 1115, 4700, 1355, 
            1130, 4706, 1370, 1145, 4713, 1385, 1160, 4721, 1400, 1175, 4730, 
            1415, 1190, 4740, 1430, 1205, 4751, 1445, 1220, 4763, 1460, 1235, 
            4776, 1475, 1250}], 
           
           Line3DBox[{1027, 1266, 4790, 1028, 1281, 1056, 4687, 1296, 1071, 
            4689, 1311, 1086, 4692, 1326, 1101, 4696, 1341, 1116, 4701, 1356, 
            1131, 4707, 1371, 1146, 4714, 1386, 1161, 4722, 1401, 1176, 4731, 
            1416, 1191, 4741, 1431, 1206, 4752, 1446, 1221, 4764, 1461, 1236, 
            4777, 1476, 1251}], 
           
           Line3DBox[{1029, 1267, 4791, 1030, 1282, 4804, 1057, 1297, 1072, 
            4690, 1312, 1087, 4693, 1327, 1102, 4697, 1342, 1117, 4702, 1357, 
            1132, 4708, 1372, 1147, 4715, 1387, 1162, 4723, 1402, 1177, 4732, 
            1417, 1192, 4742, 1432, 1207, 4753, 1447, 1222, 4765, 1462, 1237, 
            4778, 1477, 1252}], 
           
           Line3DBox[{1031, 1268, 4792, 1032, 1283, 4805, 1058, 1298, 4817, 
            1073, 1313, 1088, 4694, 1328, 1103, 4698, 1343, 1118, 4703, 1358, 
            1133, 4709, 1373, 1148, 4716, 1388, 1163, 4724, 1403, 1178, 4733, 
            1418, 1193, 4743, 1433, 1208, 4754, 1448, 1223, 4766, 1463, 1238, 
            4779, 1478, 1253}], 
           
           Line3DBox[{1033, 1269, 4793, 1034, 1284, 4806, 1059, 1299, 4818, 
            1074, 1314, 4829, 1089, 1329, 1104, 4699, 1344, 1119, 4704, 1359, 
            1134, 4710, 1374, 1149, 4717, 1389, 1164, 4725, 1404, 1179, 4734, 
            1419, 1194, 4744, 1434, 1209, 4755, 1449, 1224, 4767, 1464, 1239, 
            4780, 1479, 1254}], 
           
           Line3DBox[{1035, 1270, 4794, 1036, 1285, 4807, 1060, 1300, 4819, 
            1075, 1315, 4830, 1090, 1330, 4840, 1105, 1345, 1120, 4705, 1360, 
            1135, 4711, 1375, 1150, 4718, 1390, 1165, 4726, 1405, 1180, 4735, 
            1420, 1195, 4745, 1435, 1210, 4756, 1450, 1225, 4768, 1465, 1240, 
            4781, 1480, 1255}], 
           
           Line3DBox[{1037, 1271, 4795, 1038, 1286, 4808, 1061, 1301, 4820, 
            1076, 1316, 4831, 1091, 1331, 4841, 1106, 1346, 4850, 1121, 1361, 
            1136, 4712, 1376, 1151, 4719, 1391, 1166, 4727, 1406, 1181, 4736, 
            1421, 1196, 4746, 1436, 1211, 4757, 1451, 1226, 4769, 1466, 1241, 
            4782, 1481, 1256}], 
           
           Line3DBox[{1039, 1272, 4796, 1040, 1287, 4809, 1062, 1302, 4821, 
            1077, 1317, 4832, 1092, 1332, 4842, 1107, 1347, 4851, 1122, 1362, 
            4859, 1137, 1377, 1152, 4720, 1392, 1167, 4728, 1407, 1182, 4737, 
            1422, 1197, 4747, 1437, 1212, 4758, 1452, 1227, 4770, 1467, 1242, 
            4783, 1482, 1257}], 
           
           Line3DBox[{1041, 1273, 4797, 1042, 1288, 4810, 1063, 1303, 4822, 
            1078, 1318, 4833, 1093, 1333, 4843, 1108, 1348, 4852, 1123, 1363, 
            4860, 1138, 1378, 4867, 1153, 1393, 1168, 4729, 1408, 1183, 4738, 
            1423, 1198, 4748, 1438, 1213, 4759, 1453, 1228, 4771, 1468, 1243, 
            4784, 1483, 1258}], 
           
           Line3DBox[{1043, 1274, 4798, 1044, 1289, 4811, 1064, 1304, 4823, 
            1079, 1319, 4834, 1094, 1334, 4844, 1109, 1349, 4853, 1124, 1364, 
            4861, 1139, 1379, 4868, 1154, 1394, 4874, 1169, 1409, 1184, 4739, 
            1424, 1199, 4749, 1439, 1214, 4760, 1454, 1229, 4772, 1469, 1244, 
            4785, 1484, 1259}], 
           
           Line3DBox[{1045, 1275, 4799, 1046, 1290, 4812, 1065, 1305, 4824, 
            1080, 1320, 4835, 1095, 1335, 4845, 1110, 1350, 4854, 1125, 1365, 
            4862, 1140, 1380, 4869, 1155, 1395, 4875, 1170, 1410, 4880, 1185, 
            1425, 1200, 4750, 1440, 1215, 4761, 1455, 1230, 4773, 1470, 1245, 
            4786, 1485, 1260}], 
           
           Line3DBox[{1047, 1276, 4800, 1048, 1291, 4813, 1066, 1306, 4825, 
            1081, 1321, 4836, 1096, 1336, 4846, 1111, 1351, 4855, 1126, 1366, 
            4863, 1141, 1381, 4870, 1156, 1396, 4876, 1171, 1411, 4881, 1186, 
            1426, 4885, 1201, 1441, 1216, 4762, 1456, 1231, 4774, 1471, 1246, 
            4787, 1486, 1261}], 
           
           Line3DBox[{1049, 1277, 4801, 1050, 1292, 4814, 1067, 1307, 4826, 
            1082, 1322, 4837, 1097, 1337, 4847, 1112, 1352, 4856, 1127, 1367, 
            4864, 1142, 1382, 4871, 1157, 1397, 4877, 1172, 1412, 4882, 1187, 
            1427, 4886, 1202, 1442, 4889, 1217, 1457, 1232, 4775, 1472, 1247, 
            4788, 1487, 1262}], 
           
           Line3DBox[{1051, 1278, 4802, 1052, 1293, 4815, 1068, 1308, 4827, 
            1083, 1323, 4838, 1098, 1338, 4848, 1113, 1353, 4857, 1128, 1368, 
            4865, 1143, 1383, 4872, 1158, 1398, 4878, 1173, 1413, 4883, 1188, 
            1428, 4887, 1203, 1443, 4890, 1218, 1458, 4892, 1233, 1473, 1248, 
            4789, 1488, 1263}], 
           
           Line3DBox[{1053, 1279, 4803, 1054, 1294, 4816, 1069, 1309, 4828, 
            1084, 1324, 4839, 1099, 1339, 4849, 1114, 1354, 4858, 1129, 1369, 
            4866, 1144, 1384, 4873, 1159, 1399, 4879, 1174, 1414, 4884, 1189, 
            1429, 4888, 1204, 1444, 4891, 1219, 1459, 4893, 1234, 1474, 4894, 
            1249, 1489, 1264}], 
           
           Line3DBox[{1490, 1730, 1491, 4895, 1745, 1520, 4896, 1760, 1535, 
            4898, 1775, 1550, 4901, 1790, 1565, 4905, 1805, 1580, 4910, 1820, 
            1595, 4916, 1835, 1610, 4923, 1850, 1625, 4931, 1865, 1640, 4940, 
            1880, 1655, 4950, 1895, 1670, 4961, 1910, 1685, 4973, 1925, 1700, 
            4986, 1940, 1715}], 
           
           Line3DBox[{1492, 1731, 5000, 1493, 1746, 1521, 4897, 1761, 1536, 
            4899, 1776, 1551, 4902, 1791, 1566, 4906, 1806, 1581, 4911, 1821, 
            1596, 4917, 1836, 1611, 4924, 1851, 1626, 4932, 1866, 1641, 4941, 
            1881, 1656, 4951, 1896, 1671, 4962, 1911, 1686, 4974, 1926, 1701, 
            4987, 1941, 1716}], 
           
           Line3DBox[{1494, 1732, 5001, 1495, 1747, 5014, 1522, 1762, 1537, 
            4900, 1777, 1552, 4903, 1792, 1567, 4907, 1807, 1582, 4912, 1822, 
            1597, 4918, 1837, 1612, 4925, 1852, 1627, 4933, 1867, 1642, 4942, 
            1882, 1657, 4952, 1897, 1672, 4963, 1912, 1687, 4975, 1927, 1702, 
            4988, 1942, 1717}], 
           
           Line3DBox[{1496, 1733, 5002, 1497, 1748, 5015, 1523, 1763, 5027, 
            1538, 1778, 1553, 4904, 1793, 1568, 4908, 1808, 1583, 4913, 1823, 
            1598, 4919, 1838, 1613, 4926, 1853, 1628, 4934, 1868, 1643, 4943, 
            1883, 1658, 4953, 1898, 1673, 4964, 1913, 1688, 4976, 1928, 1703, 
            4989, 1943, 1718}], 
           
           Line3DBox[{1498, 1734, 5003, 1499, 1749, 5016, 1524, 1764, 5028, 
            1539, 1779, 5039, 1554, 1794, 1569, 4909, 1809, 1584, 4914, 1824, 
            1599, 4920, 1839, 1614, 4927, 1854, 1629, 4935, 1869, 1644, 4944, 
            1884, 1659, 4954, 1899, 1674, 4965, 1914, 1689, 4977, 1929, 1704, 
            4990, 1944, 1719}], 
           
           Line3DBox[{1500, 1735, 5004, 1501, 1750, 5017, 1525, 1765, 5029, 
            1540, 1780, 5040, 1555, 1795, 5050, 1570, 1810, 1585, 4915, 1825, 
            1600, 4921, 1840, 1615, 4928, 1855, 1630, 4936, 1870, 1645, 4945, 
            1885, 1660, 4955, 1900, 1675, 4966, 1915, 1690, 4978, 1930, 1705, 
            4991, 1945, 1720}], 
           
           Line3DBox[{1502, 1736, 5005, 1503, 1751, 5018, 1526, 1766, 5030, 
            1541, 1781, 5041, 1556, 1796, 5051, 1571, 1811, 5060, 1586, 1826, 
            1601, 4922, 1841, 1616, 4929, 1856, 1631, 4937, 1871, 1646, 4946, 
            1886, 1661, 4956, 1901, 1676, 4967, 1916, 1691, 4979, 1931, 1706, 
            4992, 1946, 1721}], 
           
           Line3DBox[{1504, 1737, 5006, 1505, 1752, 5019, 1527, 1767, 5031, 
            1542, 1782, 5042, 1557, 1797, 5052, 1572, 1812, 5061, 1587, 1827, 
            5069, 1602, 1842, 1617, 4930, 1857, 1632, 4938, 1872, 1647, 4947, 
            1887, 1662, 4957, 1902, 1677, 4968, 1917, 1692, 4980, 1932, 1707, 
            4993, 1947, 1722}], 
           
           Line3DBox[{1506, 1738, 5007, 1507, 1753, 5020, 1528, 1768, 5032, 
            1543, 1783, 5043, 1558, 1798, 5053, 1573, 1813, 5062, 1588, 1828, 
            5070, 1603, 1843, 5077, 1618, 1858, 1633, 4939, 1873, 1648, 4948, 
            1888, 1663, 4958, 1903, 1678, 4969, 1918, 1693, 4981, 1933, 1708, 
            4994, 1948, 1723}], 
           
           Line3DBox[{1508, 1739, 5008, 1509, 1754, 5021, 1529, 1769, 5033, 
            1544, 1784, 5044, 1559, 1799, 5054, 1574, 1814, 5063, 1589, 1829, 
            5071, 1604, 1844, 5078, 1619, 1859, 5084, 1634, 1874, 1649, 4949, 
            1889, 1664, 4959, 1904, 1679, 4970, 1919, 1694, 4982, 1934, 1709, 
            4995, 1949, 1724}], 
           
           Line3DBox[{1510, 1740, 5009, 1511, 1755, 5022, 1530, 1770, 5034, 
            1545, 1785, 5045, 1560, 1800, 5055, 1575, 1815, 5064, 1590, 1830, 
            5072, 1605, 1845, 5079, 1620, 1860, 5085, 1635, 1875, 5090, 1650, 
            1890, 1665, 4960, 1905, 1680, 4971, 1920, 1695, 4983, 1935, 1710, 
            4996, 1950, 1725}], 
           
           Line3DBox[{1512, 1741, 5010, 1513, 1756, 5023, 1531, 1771, 5035, 
            1546, 1786, 5046, 1561, 1801, 5056, 1576, 1816, 5065, 1591, 1831, 
            5073, 1606, 1846, 5080, 1621, 1861, 5086, 1636, 1876, 5091, 1651, 
            1891, 5095, 1666, 1906, 1681, 4972, 1921, 1696, 4984, 1936, 1711, 
            4997, 1951, 1726}], 
           
           Line3DBox[{1514, 1742, 5011, 1515, 1757, 5024, 1532, 1772, 5036, 
            1547, 1787, 5047, 1562, 1802, 5057, 1577, 1817, 5066, 1592, 1832, 
            5074, 1607, 1847, 5081, 1622, 1862, 5087, 1637, 1877, 5092, 1652, 
            1892, 5096, 1667, 1907, 5099, 1682, 1922, 1697, 4985, 1937, 1712, 
            4998, 1952, 1727}], 
           
           Line3DBox[{1516, 1743, 5012, 1517, 1758, 5025, 1533, 1773, 5037, 
            1548, 1788, 5048, 1563, 1803, 5058, 1578, 1818, 5067, 1593, 1833, 
            5075, 1608, 1848, 5082, 1623, 1863, 5088, 1638, 1878, 5093, 1653, 
            1893, 5097, 1668, 1908, 5100, 1683, 1923, 5102, 1698, 1938, 1713, 
            4999, 1953, 1728}], 
           
           Line3DBox[{1518, 1744, 5013, 1519, 1759, 5026, 1534, 1774, 5038, 
            1549, 1789, 5049, 1564, 1804, 5059, 1579, 1819, 5068, 1594, 1834, 
            5076, 1609, 1849, 5083, 1624, 1864, 5089, 1639, 1879, 5094, 1654, 
            1894, 5098, 1669, 1909, 5101, 1684, 1924, 5103, 1699, 1939, 5104, 
            1714, 1954, 1729}], 
           
           Line3DBox[{1955, 2195, 1956, 5105, 2210, 1985, 5106, 2225, 2000, 
            5108, 2240, 2015, 5111, 2255, 2030, 5115, 2270, 2045, 5120, 2285, 
            2060, 5126, 2300, 2075, 5133, 2315, 2090, 5141, 2330, 2105, 5150, 
            2345, 2120, 5160, 2360, 2135, 5171, 2375, 2150, 5183, 2390, 2165, 
            5196, 2405, 2180}], 
           
           Line3DBox[{1957, 2196, 5210, 1958, 2211, 1986, 5107, 2226, 2001, 
            5109, 2241, 2016, 5112, 2256, 2031, 5116, 2271, 2046, 5121, 2286, 
            2061, 5127, 2301, 2076, 5134, 2316, 2091, 5142, 2331, 2106, 5151, 
            2346, 2121, 5161, 2361, 2136, 5172, 2376, 2151, 5184, 2391, 2166, 
            5197, 2406, 2181}], 
           
           Line3DBox[{1959, 2197, 5211, 1960, 2212, 5224, 1987, 2227, 2002, 
            5110, 2242, 2017, 5113, 2257, 2032, 5117, 2272, 2047, 5122, 2287, 
            2062, 5128, 2302, 2077, 5135, 2317, 2092, 5143, 2332, 2107, 5152, 
            2347, 2122, 5162, 2362, 2137, 5173, 2377, 2152, 5185, 2392, 2167, 
            5198, 2407, 2182}], 
           
           Line3DBox[{1961, 2198, 5212, 1962, 2213, 5225, 1988, 2228, 5237, 
            2003, 2243, 2018, 5114, 2258, 2033, 5118, 2273, 2048, 5123, 2288, 
            2063, 5129, 2303, 2078, 5136, 2318, 2093, 5144, 2333, 2108, 5153, 
            2348, 2123, 5163, 2363, 2138, 5174, 2378, 2153, 5186, 2393, 2168, 
            5199, 2408, 2183}], 
           
           Line3DBox[{1963, 2199, 5213, 1964, 2214, 5226, 1989, 2229, 5238, 
            2004, 2244, 5249, 2019, 2259, 2034, 5119, 2274, 2049, 5124, 2289, 
            2064, 5130, 2304, 2079, 5137, 2319, 2094, 5145, 2334, 2109, 5154, 
            2349, 2124, 5164, 2364, 2139, 5175, 2379, 2154, 5187, 2394, 2169, 
            5200, 2409, 2184}], 
           
           Line3DBox[{1965, 2200, 5214, 1966, 2215, 5227, 1990, 2230, 5239, 
            2005, 2245, 5250, 2020, 2260, 5260, 2035, 2275, 2050, 5125, 2290, 
            2065, 5131, 2305, 2080, 5138, 2320, 2095, 5146, 2335, 2110, 5155, 
            2350, 2125, 5165, 2365, 2140, 5176, 2380, 2155, 5188, 2395, 2170, 
            5201, 2410, 2185}], 
           
           Line3DBox[{1967, 2201, 5215, 1968, 2216, 5228, 1991, 2231, 5240, 
            2006, 2246, 5251, 2021, 2261, 5261, 2036, 2276, 5270, 2051, 2291, 
            2066, 5132, 2306, 2081, 5139, 2321, 2096, 5147, 2336, 2111, 5156, 
            2351, 2126, 5166, 2366, 2141, 5177, 2381, 2156, 5189, 2396, 2171, 
            5202, 2411, 2186}], 
           
           Line3DBox[{1969, 2202, 5216, 1970, 2217, 5229, 1992, 2232, 5241, 
            2007, 2247, 5252, 2022, 2262, 5262, 2037, 2277, 5271, 2052, 2292, 
            5279, 2067, 2307, 2082, 5140, 2322, 2097, 5148, 2337, 2112, 5157, 
            2352, 2127, 5167, 2367, 2142, 5178, 2382, 2157, 5190, 2397, 2172, 
            5203, 2412, 2187}], 
           
           Line3DBox[{1971, 2203, 5217, 1972, 2218, 5230, 1993, 2233, 5242, 
            2008, 2248, 5253, 2023, 2263, 5263, 2038, 2278, 5272, 2053, 2293, 
            5280, 2068, 2308, 5287, 2083, 2323, 2098, 5149, 2338, 2113, 5158, 
            2353, 2128, 5168, 2368, 2143, 5179, 2383, 2158, 5191, 2398, 2173, 
            5204, 2413, 2188}], 
           
           Line3DBox[{1973, 2204, 5218, 1974, 2219, 5231, 1994, 2234, 5243, 
            2009, 2249, 5254, 2024, 2264, 5264, 2039, 2279, 5273, 2054, 2294, 
            5281, 2069, 2309, 5288, 2084, 2324, 5294, 2099, 2339, 2114, 5159, 
            2354, 2129, 5169, 2369, 2144, 5180, 2384, 2159, 5192, 2399, 2174, 
            5205, 2414, 2189}], 
           
           Line3DBox[{1975, 2205, 5219, 1976, 2220, 5232, 1995, 2235, 5244, 
            2010, 2250, 5255, 2025, 2265, 5265, 2040, 2280, 5274, 2055, 2295, 
            5282, 2070, 2310, 5289, 2085, 2325, 5295, 2100, 2340, 5300, 2115, 
            2355, 2130, 5170, 2370, 2145, 5181, 2385, 2160, 5193, 2400, 2175, 
            5206, 2415, 2190}], 
           
           Line3DBox[{1977, 2206, 5220, 1978, 2221, 5233, 1996, 2236, 5245, 
            2011, 2251, 5256, 2026, 2266, 5266, 2041, 2281, 5275, 2056, 2296, 
            5283, 2071, 2311, 5290, 2086, 2326, 5296, 2101, 2341, 5301, 2116, 
            2356, 5305, 2131, 2371, 2146, 5182, 2386, 2161, 5194, 2401, 2176, 
            5207, 2416, 2191}], 
           
           Line3DBox[{1979, 2207, 5221, 1980, 2222, 5234, 1997, 2237, 5246, 
            2012, 2252, 5257, 2027, 2267, 5267, 2042, 2282, 5276, 2057, 2297, 
            5284, 2072, 2312, 5291, 2087, 2327, 5297, 2102, 2342, 5302, 2117, 
            2357, 5306, 2132, 2372, 5309, 2147, 2387, 2162, 5195, 2402, 2177, 
            5208, 2417, 2192}], 
           
           Line3DBox[{1981, 2208, 5222, 1982, 2223, 5235, 1998, 2238, 5247, 
            2013, 2253, 5258, 2028, 2268, 5268, 2043, 2283, 5277, 2058, 2298, 
            5285, 2073, 2313, 5292, 2088, 2328, 5298, 2103, 2343, 5303, 2118, 
            2358, 5307, 2133, 2373, 5310, 2148, 2388, 5312, 2163, 2403, 2178, 
            5209, 2418, 2193}], 
           
           Line3DBox[{1983, 2209, 5223, 1984, 2224, 5236, 1999, 2239, 5248, 
            2014, 2254, 5259, 2029, 2269, 5269, 2044, 2284, 5278, 2059, 2299, 
            5286, 2074, 2314, 5293, 2089, 2329, 5299, 2104, 2344, 5304, 2119, 
            2359, 5308, 2134, 2374, 5311, 2149, 2389, 5313, 2164, 2404, 5314, 
            2179, 2419, 2194}], 
           
           Line3DBox[{2420, 2660, 2421, 5315, 2675, 2450, 5316, 2690, 2465, 
            5318, 2705, 2480, 5321, 2720, 2495, 5325, 2735, 2510, 5330, 2750, 
            2525, 5336, 2765, 2540, 5343, 2780, 2555, 5351, 2795, 2570, 5360, 
            2810, 2585, 5370, 2825, 2600, 5381, 2840, 2615, 5393, 2855, 2630, 
            5406, 2870, 2645}], 
           
           Line3DBox[{2422, 2661, 5420, 2423, 2676, 2451, 5317, 2691, 2466, 
            5319, 2706, 2481, 5322, 2721, 2496, 5326, 2736, 2511, 5331, 2751, 
            2526, 5337, 2766, 2541, 5344, 2781, 2556, 5352, 2796, 2571, 5361, 
            2811, 2586, 5371, 2826, 2601, 5382, 2841, 2616, 5394, 2856, 2631, 
            5407, 2871, 2646}], 
           
           Line3DBox[{2424, 2662, 5421, 2425, 2677, 5434, 2452, 2692, 2467, 
            5320, 2707, 2482, 5323, 2722, 2497, 5327, 2737, 2512, 5332, 2752, 
            2527, 5338, 2767, 2542, 5345, 2782, 2557, 5353, 2797, 2572, 5362, 
            2812, 2587, 5372, 2827, 2602, 5383, 2842, 2617, 5395, 2857, 2632, 
            5408, 2872, 2647}], 
           
           Line3DBox[{2426, 2663, 5422, 2427, 2678, 5435, 2453, 2693, 5447, 
            2468, 2708, 2483, 5324, 2723, 2498, 5328, 2738, 2513, 5333, 2753, 
            2528, 5339, 2768, 2543, 5346, 2783, 2558, 5354, 2798, 2573, 5363, 
            2813, 2588, 5373, 2828, 2603, 5384, 2843, 2618, 5396, 2858, 2633, 
            5409, 2873, 2648}], 
           
           Line3DBox[{2428, 2664, 5423, 2429, 2679, 5436, 2454, 2694, 5448, 
            2469, 2709, 5459, 2484, 2724, 2499, 5329, 2739, 2514, 5334, 2754, 
            2529, 5340, 2769, 2544, 5347, 2784, 2559, 5355, 2799, 2574, 5364, 
            2814, 2589, 5374, 2829, 2604, 5385, 2844, 2619, 5397, 2859, 2634, 
            5410, 2874, 2649}], 
           
           Line3DBox[{2430, 2665, 5424, 2431, 2680, 5437, 2455, 2695, 5449, 
            2470, 2710, 5460, 2485, 2725, 5470, 2500, 2740, 2515, 5335, 2755, 
            2530, 5341, 2770, 2545, 5348, 2785, 2560, 5356, 2800, 2575, 5365, 
            2815, 2590, 5375, 2830, 2605, 5386, 2845, 2620, 5398, 2860, 2635, 
            5411, 2875, 2650}], 
           
           Line3DBox[{2432, 2666, 5425, 2433, 2681, 5438, 2456, 2696, 5450, 
            2471, 2711, 5461, 2486, 2726, 5471, 2501, 2741, 5480, 2516, 2756, 
            2531, 5342, 2771, 2546, 5349, 2786, 2561, 5357, 2801, 2576, 5366, 
            2816, 2591, 5376, 2831, 2606, 5387, 2846, 2621, 5399, 2861, 2636, 
            5412, 2876, 2651}], 
           
           Line3DBox[{2434, 2667, 5426, 2435, 2682, 5439, 2457, 2697, 5451, 
            2472, 2712, 5462, 2487, 2727, 5472, 2502, 2742, 5481, 2517, 2757, 
            5489, 2532, 2772, 2547, 5350, 2787, 2562, 5358, 2802, 2577, 5367, 
            2817, 2592, 5377, 2832, 2607, 5388, 2847, 2622, 5400, 2862, 2637, 
            5413, 2877, 2652}], 
           
           Line3DBox[{2436, 2668, 5427, 2437, 2683, 5440, 2458, 2698, 5452, 
            2473, 2713, 5463, 2488, 2728, 5473, 2503, 2743, 5482, 2518, 2758, 
            5490, 2533, 2773, 5497, 2548, 2788, 2563, 5359, 2803, 2578, 5368, 
            2818, 2593, 5378, 2833, 2608, 5389, 2848, 2623, 5401, 2863, 2638, 
            5414, 2878, 2653}], 
           
           Line3DBox[{2438, 2669, 5428, 2439, 2684, 5441, 2459, 2699, 5453, 
            2474, 2714, 5464, 2489, 2729, 5474, 2504, 2744, 5483, 2519, 2759, 
            5491, 2534, 2774, 5498, 2549, 2789, 5504, 2564, 2804, 2579, 5369, 
            2819, 2594, 5379, 2834, 2609, 5390, 2849, 2624, 5402, 2864, 2639, 
            5415, 2879, 2654}], 
           
           Line3DBox[{2440, 2670, 5429, 2441, 2685, 5442, 2460, 2700, 5454, 
            2475, 2715, 5465, 2490, 2730, 5475, 2505, 2745, 5484, 2520, 2760, 
            5492, 2535, 2775, 5499, 2550, 2790, 5505, 2565, 2805, 5510, 2580, 
            2820, 2595, 5380, 2835, 2610, 5391, 2850, 2625, 5403, 2865, 2640, 
            5416, 2880, 2655}], 
           
           Line3DBox[{2442, 2671, 5430, 2443, 2686, 5443, 2461, 2701, 5455, 
            2476, 2716, 5466, 2491, 2731, 5476, 2506, 2746, 5485, 2521, 2761, 
            5493, 2536, 2776, 5500, 2551, 2791, 5506, 2566, 2806, 5511, 2581, 
            2821, 5515, 2596, 2836, 2611, 5392, 2851, 2626, 5404, 2866, 2641, 
            5417, 2881, 2656}], 
           
           Line3DBox[{2444, 2672, 5431, 2445, 2687, 5444, 2462, 2702, 5456, 
            2477, 2717, 5467, 2492, 2732, 5477, 2507, 2747, 5486, 2522, 2762, 
            5494, 2537, 2777, 5501, 2552, 2792, 5507, 2567, 2807, 5512, 2582, 
            2822, 5516, 2597, 2837, 5519, 2612, 2852, 2627, 5405, 2867, 2642, 
            5418, 2882, 2657}], 
           
           Line3DBox[{2446, 2673, 5432, 2447, 2688, 5445, 2463, 2703, 5457, 
            2478, 2718, 5468, 2493, 2733, 5478, 2508, 2748, 5487, 2523, 2763, 
            5495, 2538, 2778, 5502, 2553, 2793, 5508, 2568, 2808, 5513, 2583, 
            2823, 5517, 2598, 2838, 5520, 2613, 2853, 5522, 2628, 2868, 2643, 
            5419, 2883, 2658}], 
           
           Line3DBox[{2448, 2674, 5433, 2449, 2689, 5446, 2464, 2704, 5458, 
            2479, 2719, 5469, 2494, 2734, 5479, 2509, 2749, 5488, 2524, 2764, 
            5496, 2539, 2779, 5503, 2554, 2794, 5509, 2569, 2809, 5514, 2584, 
            2824, 5518, 2599, 2839, 5521, 2614, 2854, 5523, 2629, 2869, 5524, 
            2644, 2884, 
            2659}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
         VertexNormals -> CompressedData["
1:eJztvWV0Fdvy7k1wlwQLGnTjEhwChbsF9+Du7u7u7u4kBAkSCggaJAnEia9k
xYMHh5t7umq941/rnfucfcflbtinz5cepwa706t79pw1n/pVP8UGjus0JHWq
VKk250mVKk2q/+9/T+rNG7p3vxHpCHpcj+txPa7H9bge1+N6XI/rcT2ux/W4
HtfjelyP63E9rsf1uB7//eP/83+vYMy76dYtXsfit0erPrQYdANGW2wtOKVH
BJQenqd+cpvnyMc6hfb3fv06Qf/3/+bfF662vtmxGRFIR/7/wP89n4/Pc9by
QvXsDT2Rj4unvq5xODgRXFJV7v9gWyBe045wpHV+15GRsVBwZufgvhMicf6h
QWvfOj6G3C3Ln0+9JhqC1zmtyGIXitNOTPGPRwNO147/deen52E68nNRPS86
j+l8fB76e6Yj/93aSywbFVgUje+8jH2v24RB9ZqNaszLHgztAqp337k8FtMe
alUmoqc7+h7N9jXAJuK/7vw0zpHGuel9UY1/Hgc8LqxoPPD18fXWoOu8PLnm
yh3bA5GPhrK57X8YYqHnx5Wp102PxF7aEWKCL6db3vQF0O/h3wf8u3h80bgz
/f/cp8q+edw+GksvGDPmZdpH8K3Sc/sMQZFQ5my3eZ+qRuG+b70+Vq4Rge1C
HRvYVQ395a7/r45/+u+Q3z8+D48DHhf8d+k6TdfL1+mi/R7+fRBOv4vuA9bS
7gNUo/tA9w3pvpnmgYsw4HpSvxh8Nx1KZ0wfBm2H1h7brksgDHCfm7eBTTyO
W5x++9EM93B73LFZ97OH/XLX/1fH/1+d33gc8Ljg30XjzHS9PN7+6vlL1Ixd
/LRwDK4b+7Fit+buULp+s+O2XwxQ6opVmbOljLj5U0AT/BaOELfl9YCPQb/c
9f/s+V++b3zkccDjgsfDXz3/jVIt31w+H4M+11rOm/8+FHYe+e5WomoA2Ezs
XPDYrnh0afBw80mXO1jOr+/FcsdDfrnr/9nzP8/LPE/z/MzzBc8fPG/wOOZx
zeOZ768r3e/tdJ/zPF7TrVOVULSiY/v1mcb4Vo6GdBUqP7M/HIV0hGWbc6S7
dPYZ0PPg5wN/0HPZpL0n/N4Avy80f/F8BjyP0brC6wzw+vKrzf+8/vF62Jau
czzNyzxP76DfxfNFSZo/GtJ9uEzjmMd1GbpvfH/T0v1eSveZnovpyM+FniPS
c4Qd9BzpuSM9d/iDnjuNE6RxYlpfaFwhjSvTuv+rzf8/O3/mcUzPxzSe+f76
0f3eTff5V7v+3z3/p/eE3xvg94XHMY9rnsd+tev/3fP/gTQvj6V5ehvNYzxf
8PzB88avdv2/e/7P6x+vh7y+8LzM8zTPz7/a9f/u+f/vfv7fPf//3c+vGv9C
DzXpo6rnxf89n0/orvq/V/x7lc7/b/T/X/53/S7/XjXOVe+F6j3i9+6aeO9U
7ym/19PEe/3fdn7VPK96XjyvuYh1RLXuyHVK5M9m69p/2/lVeY5q/Ms8SuTP
yNcr8mfTUeTP0Evkdao8UJU3qvJMmZcK/f+Xuf6/Ov5V+wjVvoPz5p5in+Ii
9jUifwbKn1Hkz6Z9k9D/zfZZrJexfib0/1/m+v/q+P+r85tqny739SJ//o/P
r9IZSgldQuj/v8z1/+z5X7xvKPJnM13rr56f9H+Trin0f5PeLPT/X+b6f/b8
r9RpFbqu1IGF/m/SjYX+D1ZCZ2ZdmusAQv836dhC/0eumwn936STC/3fpKsL
/f+Xmf9lnULo/6Z5Wuj/Jl1T6P+mcS30fyT9H4T+j3lEXUbWcYT+b6r7CP3f
rE6krCv9YvP/z86feRxzfUbo/0j6Pwj9/5e5/t89/y8p6uxC/zery/9q1/+7
5/+k/yPp/yj0fzMu5Ve7/t89/5ecldD/zbisX+36f/f8/3c//++e///u51eN
fxUX/btw3b/Lv/93+j/3Ayj6BfS4HtfjelyP63E9rsf1uB7X43pcj+txPa7H
9bge1+N6XI/rcT3++8ZRj+txPa7H9bge1+N6XI/rcT2ux/W4HtfjelyP63E9
rsf1uB7X43pcj+txPa7H9bge1+N6XI/rcT2ux/W4HtfjelyP63E9/tfjuPld
y/dvY3BqZcPLNXVdIdvqRzb7zhug/4gB30dlfIorpwywmPH4GRZaG2CwPJYI
8WPOtD5v7Y9zhr639hjriZMLt4XjsxLA26LfnNUWgThgT7d1i7x9oFiBxdty
28RDqosDxicbo9Fv2PaCvbsfgTTHk7JmsYuC93fHe8bZGfBHnWLvp932BIct
4ROflYmBzq+8phf4EIT1G6fuP3qlO7a0Hjna7WY8ZG46dHa1EhEYvM7/TifL
ILw6IMkuo70RDq0qvTVXVSNmjSjT9N3cVej0rEXtTNmioVyhXfkjd/ngilMv
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
jTfg8ebim5Q2tXs43lrTOv/8+EDoc7JtnUGvjbB6r22B9nPi8fW45Kyndh7E
b8XHnojsFgbn7vQ+kaN2JBa5apF/wo7H2PRK7v7Zbkbz+4L0viC/Lzba+wX0
fiG/X/Q+Ar2PyO9jZ+295fcYLOn9pfcd6X2HkfS+t9fmB6T5AXh++Kvzc3Vt
voKL2nwFQPMVzW+QW5vfkOc3mg9hpTYfIs+HqvnZ9sOzVzvnRWKfOx/aP3wU
Ajkap6vSIyXP8K5T3qrC6DjMf/ZxZoPTVkjjce3uukwRsDiff/oWXTxxrcPg
Ps23G/DyvmHH0r2JVs7Pvtp6gTW09QJ4vaD1BVJp6wvw+rJJW4+A1iPk9ehn
z8+z7n658GnrU+i1Y/z5yt8jMPWxmxWPbYuB3VmdNp/6aIDTE1KNfHwtDDMO
XWsTtSkClhtfl/DO4AeVz1261TTMgDYZirXr2cIIvUN2NTiQJxQufi29+JFt
FK7rM+h8uoYRsG/dj7Ofdj/AXXQskPlu4xaPkuDNm7rOy+yjcZXvraxDkiKg
Wmi+j7FWvpB/5fY+1XMb0Nt66gX3voEQOCty6r2sRri/sWaRha0j4INFu7OD
25fFQxk25vFuFAceE5Iq7ivoAZMOf+9a9WUweJ11G7e7ajzs2HrP/367lP1e
gfhSt8tEws2aVi7rbkVAr0tffMcFGuBcvYsX/BYfxDZ5ix99mSv2p8/P2VpU
uprjVQBuO7M7roVPND4oniFVRHIYdLtnPdUh3BnHDW5zpsnBOHRYnOX7H+vD
4czZxX49X3piiW8+f6RvHof1VrrMwcphcLvJ5ffxLXfgvc1FtyZ6x+Gx+pGP
eowKhxPDUz+3amWA6OjCYS5FozF0buN9K076mLiIpd/n/AjMvdVO+3+v4Jj2
79Go/Xvgf0/nBzo/8PlPatcDJbXrgbp0PXT9QNcP/ej6s2i/F+j3Av/enz0/
0/PFg9rzBX6+NB7wpjYe8BaNBxo/SOMHefw80MYbDsvzr/EGPN5ofAKNTwyg
8UnjGWg8Yw0az3u0cW868vjvpb0veEl7X2AtvS/0fiG9X1CM3q9d2vuIZ7X3
ETLQ+0jvL9L7C/z+/uz5+Wfnzwu1+RbWafMt8Hzro83PUEybn5HnZ5rPoa82
nyPP53r+/Of5s6OWP0BhLX8Azh8o3wDKN+A75RuUnwDlJ8j5iZ4//3n+TPkw
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
QfF9XT2ux/W4HtfjelyP63E9rsf1uB7X43pcj+txPa7H9bge1+N6XI/rcT2u
x/W4HtfjelyP63E9rsf1uB7X43pcj+txPa7H9fh/Hkc9rsf1uB7X43pcj+tx
Pa7H9bge1+N6XI/rcT2ux/W4HtfjelyP63E9rsf1uB7X43pcj+txjrP/BPmo
IPunsF8C+yewb0Jn8gWxJZ8Q9gdhXxb2aWF/FvbFiSWfHPbBUf3df+r52UeW
fWXZ18OBfEHYJ4T9QcjnGNnXgv2OyWcFbMi/hf1W2C+H/XPYN4f9iti/iP2G
VH/3n3p+8k1B9gFm/xT2a2H/ln7k20K+0Sa/EfYZYR8d9tVhPx32MSK/LJOf
0UTykSJ/J2A/KfIfYj8iYB8i8sth/xyTnxr72LGvHfvZsY8g+fuZ/ARVv+vv
un72aSa/GpNfM/vosK8O++mw7wv7wLD/C/m6Ifsdsc/RY/KXYr+p9uQzxf5e
7PfF/lkvyF+N/dbY74l8iZD97tifiP0F2W+QfQbZ35F8FE0+j6rf9XddP/tq
s882+wGxvxH5EJp8jsjXHNmfh315yD8PrciHiv2n2PeLfcDY/4t91+qTDxv7
lLUg37ux5IO3lHy1yP8Jv5APIfsPsu8j+X+afD/Zd5N9ONl/U/W7/q7rJ78l
ky86+y6x7xT7ULH/FPsksW8S+yWRDxacIX8w9sNiPzb2Z2NfNvbDY3889oNT
/V3V+dmPsyT5c7K/KvmAIvmCYm7yA/2r5//Z10++ViYfe/a3Yj8w9gdjX7A1
5F/FflbsY8U+beSvbvJVZ5889s1jvzz2KWTfQvYrZJ9I9o1kv8gj5NNpJN9O
9utkn9QfxzTfVPaxZZ9a9q1l39Vi5BNMfqEmv2D2aWbfZvZrZp9s9s1mH0b2
KWffcvYNZJ948rsz+cWTHxv7swH7spF/GPuJAfuIsU8b+7axX5s9+Yqxzxj7
i7F/HvvpsY8e+awj+xmyjyH5gpv8JJ+SjyT5WCP7ebKPZ03yT31Dfqrsv1yS
/GvJNxjZx7YI+QeznzD7CFcn/2Y6D/B5JpJ/Nvtp898ln0tkP3P2MSdfRpOf
PP8uug9I98HkJ0j3k33wgO8n+bSxbxvw/WT/PPbT4+flSX5v7P/Gz4ueO2Yi
n0N+7uwryT6TPE7Y15PGFS6jccW+quyzyv6qNG5xB/nc3qZxS+Oc/ZlNvszs
65yWfJ75vWBfbfbZ5veI3jtkn3N+79hXnn3m+T2l9xrpvTb5YNI8gDQPAM8D
NJ8gzScmn0Hyw2N/POD5hH0N2eeQ5yt38uFjXz6er16Q36Qr+U/2pnmP/T7Z
/5PnSfZbXUr+qzyvqv6u6vzke80+2CbfZyS/bfbfZr/mv3r+n339tJ6yDyHw
epqW/CZpvTb5HW8nf0T2S+T1mn1Ayb/X5NvLPqzkN2vymWUf3HTki8t5BfsQ
k5+nyceTfaDJf9LkB80+3OzLzXkO+6CzLzrnRarf9XddP/k7st8jcD6ZRD6g
M8kXVOSrJh9LzlfZn5X9WjnvjSV/XPbLZT9f9idmv2L2nyWfVJNfNOfhlLeb
/Lo5b48if3TydTf5pLM/PfvV875A9bv+ruun/RT7agLvp9iflf1axX4NO5K/
KO/XyH8aN5OPLvtQs28x+xizfzGQbzT7SPO+kn2755CPN+9Dad+KyeSjzvtW
9q2PIx973ufSvpj93k0+76rf9XddP/mVIukJJt9S8t9F9tFlvWIS+byy7yvr
FeQji77kb2zyNSY/afaXZp2E/bzZ35t1FdXf/aeen3xh2ScW2B+W/YzZ3zj1
/9TrkP14Wa9jn2ny7wX27WWfb/b9Zp2QdEX2rzb5Vqv+7j/1/KQnI+nJJh/e
0zktHm8eH4TzXs+1PbYvAGpcsjRkPRIL3dq3cu1qEYkHUy3b3/TCA3CdlSus
frUYCH77o6/j/jBskXtafsOmCMyWP6BasxyRcKfOkVuzJngiHy8/fVS/gGci
FJ1yv1DeWUHY52CroxY7AyC59KcDqw7FQqRfTRz+3YAH59r8GLPzAeQZGnym
Xa0Y6Dc6Q4Nax8OwXo991x+tjMAcjSo+G5crElbfdeoxJ+W8fPzivvKJdcr5
y3R0KNtidhDOWRG9pW/KfudkiQrBDinnPzGmsU9AyvlHh1bN1WXvA6jrlWx0
rBkDqzY9rLn2UBhezHuj75j1ETh3n8PZ/DkjoeP0VudnppyXjxUbHVj+v6+/
U/8dNb9OCsLmg3YkP9sTAFUbT6qw/nAsPJzhsn5VTS/TMe/K2AIttyfCgQ9r
wycvMeKkErXrvnofCvYJN88VLR8Gk7PkLrq7TizW2NHRoeIxN7SPuHDUNpcB
Voysfrbzu+cwpPf0ic8igzHKNe/0ijPjoFneqe6fbz0wHT/nv/5ow/0kiDs7
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

         "]], {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRange -> {Full, Full, All}, 
       DisplayFunction -> Identity, Axes -> True, 
       AxesLabel -> {None, None, None}, BoxRatios -> {1, 1, 0.4}, 
       DisplayFunction :> Identity, FaceGridsStyle -> Automatic, 
       Method -> {"DefaultBoundaryStyle" -> Directive[
           GrayLevel[0.3]], 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "RotationControl" -> "Globe"}, 
       PlotRange -> {{1., 16.}, {1., 16.}, {0., 16.}}, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"4", "7", "10", "13"}, "SwatchLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 6], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Lighting -> {{"Ambient", 
                    RGBColor[0.30756835, 0.18676585, 0.147065275]}, {
                    "Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[0.30756835, 0.18676585, 0.147065275]}, {
                    "Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30100577`", ",", "0.22414668499999998`", ",", 
                    "0.090484535`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19699838300000003`", ",", "0.252204821`", ",", 
                    "0.33320940200000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.12202865833333335`, 0.14283175833333334`, 0.064190125], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.1830429875`", ",", "0.21424763749999998`", ",",
                     "0.0962851875`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1830429875, 0.21424763749999998`, 
                    0.0962851875]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "6"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30756835, 0.18676585, 0.147065275], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20504556666666668`, 0.12451056666666668`, 
                    0.09804351666666666], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30756835`", ",", "0.18676585`", ",", 
                    "0.147065275`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30756835, 0.18676585, 0.147065275]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30756835, 0.18676585, 0.147065275], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.15375433333333333`, 0.06427100000000001, 
                    0.03486316666666667], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2306315`", ",", "0.0964065`", ",", 
                    "0.05229475`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2306315, 0.0964065, 0.05229475]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.3`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.15375433333333333`, 0.06427100000000001, 
                    0.03486316666666667], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2306315`", ",", "0.0964065`", ",", 
                    "0.05229475`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2306315, 0.0964065, 0.05229475]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               Graphics3DBox[
                SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                  DirectedInfinity[1]}, 
                PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
                0]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8522841639126368`*^9, {3.852284336265608*^9, 3.8522843922744455`*^9}, 
   3.852284491778957*^9, 3.852284593379511*^9, {3.8522846823359685`*^9, 
   3.8522847019625893`*^9}, 3.8522853193653107`*^9, 3.852286445048151*^9, 
   3.8522877606497927`*^9, 3.8522888832970266`*^9, 3.852288964443931*^9},
 CellLabel->
  "Out[211]=",ExpressionUUID->"6f27cc78-5a09-44dc-9b7c-b8179b77b2f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ListPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"list3d", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"list3d", "[", 
        RowBox[{"[", "16", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "16"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"list3d", "[", 
        RowBox[{"[", "7", "]"}], "]"}], ",", 
       RowBox[{"list3d", "[", 
        RowBox[{"[", "10", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"7", ",", "10"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"list3d", "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", 
       RowBox[{"list3d", "[", 
        RowBox[{"[", "13", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"4", ",", "13"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"list3d", "[", 
        RowBox[{"[", "6", "]"}], "]"}], ",", 
       RowBox[{"list3d", "[", 
        RowBox[{"[", "11", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"6", ",", "11"}], "}"}]}]}], "]"}]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ListPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"list3d", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"list3d", "[", 
        RowBox[{"[", "15", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2", ",", "15"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"list3d", "[", 
        RowBox[{"[", "8", "]"}], "]"}], ",", 
       RowBox[{"list3d", "[", 
        RowBox[{"[", "9", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"8", ",", "9"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"list3d", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{"list3d", "[", 
        RowBox[{"[", "14", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"3", ",", "14"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"list3d", "[", 
        RowBox[{"[", "5", "]"}], "]"}], ",", 
       RowBox[{"list3d", "[", 
        RowBox[{"[", "12", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"5", ",", "12"}], "}"}]}]}], "]"}]}], "}"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.852292528488581*^9, 3.85229271779628*^9}},
 CellLabel->
  "In[319]:=",ExpressionUUID->"17a341f0-2d6c-4597-97fa-794421c08598"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     Graphics3DBox[{
       GraphicsComplex3DBox[CompressedData["
1:eJyF3VtyI1d2hWFZ7Qt1q0Y3oRJEQS0wC8VisVgozMAYg0eAcISfPQUMBUPh
s0fBIbjv9y6/cB9HfTtXsF8U+pV9MvEzmTi5cuXh9X/+93/81+efffbZ/3z5
2Wc/+6z+97//Pv/Pzw7z/CLwReDLwFeBrwPfBD4Fvg38JvDbwO8Cvw98F/g+
8OS7/l1+Efgi8GXgq8DXgW8CnwLfBn4T+G3gd4HfB74LfB94Oq9rO/lF4IvA
l4GvAl8Hvgl8Cnwb+E3gt4HfBX4f+C7wfeDp+lH+5ReBLwJfBr4KfB34JvAp
8G3gN4HfBn4X+H3gu8D3gafrdPmXXwS+CHwZ+CrwdeCbwKfAt4HfBH4b+F3g
94HvAt8Hnr4Py7/8IvBF4MvAV4GvA98EPgW+Dfwm8NvA7wK/D3wX+D7wNO8o
//KLwBeBLwNfBb4OfBP4FPg28JvAbwO/C/w+8F3g+8DT/K78yy8CXwS+DHwV
+DrwTeBT4NvAbwK/Dfwu8PvAd4HvA/dz6F9+Efgi8GXgq8DXgW8CnwLfBn4T
+G3gd4HfB74LfB+4x6t/+UXgi8CXga8CXwe+CXwKfBv4TeC3gd8Ffh/4LvB9
4B6X/uUXgS8CXwa+Cnwd+CbwKfBt4DeB3wZ+F/h94LvA94G7f/3LLwJfBL4M
fBX4OvBN4FPg28BvAr8N/C7w+8B3ge8Ddz/6l18Evgh8Gfgq8HXgm8CnwLeB
3wR+G/hd4PeB7wLfB+54+pdfBL4IfBn4KvB14JvAp8C3gd8Efhv4XeD3ge8C
3wfu/0//8ovAF4EvA18Fvg58E/gU+Dbwm8BvA78L/D7wXeD7wP3v+pdfBL4I
fBn4KvB14JvAp8C3gd8Efhv4XeD3ge8C3weefg4pP025XsqbUg6S7s/TfWO6
n5kCT/O/NC9J35fpOp6uL+m8Tz+PdL6b/+tfbv6vf7n5v/7l5v/6l5v/619u
/q9/ufm//uV6fe66Yv6vf7n5v/7l5v/6l5v/619u/q9/ufm//uXm//qX6++5
67f5v/9/ufm//uXm//qXm//rX27+r3+5+b/+5eb/+pfr6bnvSfN//csXgZv/
619u/q9/+RS4+b/+5eb/+peb/+tfro/n5iPm//qXLwI3/9e/3Pxf//IpcPN/
/cvN//UvN//Xv9zPrX/nfeb/+pcvAjf/9zjk5v/6l0+Bm//rX27+r3+5+b/+
5X4+/Tu/Nv/Xv3wRuPm//uXm//qXT4Gb/+tfbv6vf7n5v/7lfg79T3Dzf/3L
F4Gb/+tfbv7vccunwM3/9S83/9e/3Pxf/3KPV//eL5r/61++CNz8X/9y83/9
y6fAzf/1Lzf/17/c/F//co9L/96Xm//rX74I3Pxf/3Lzf/3Lp8DN//UvN//X
v9z8X/9y969/8w/zf/3LF4Gb/+tfbv6vf/kUuPm/n19u/q9/ufm//uXuR//m
TOb/+pcvAjf/17/c/F//8ilw83/9y83/9S83/9e/3PH0b55n/q9/+SJw83/9
y83/9S+fAjf/17/c/F9fcvN//cv9/+nf3NT8X//yReDm//qXm//rXz4Fbv6v
f7n5v/7l5v/6l/vf9e92Kb9LudIi8HQfnu4P031Lmk9Pgaf5R/peTNfrdB1J
53fynv75MTwH+EguXfzfDvPbF2f704v57Qd3/Msw/uX89g8v57cf3OO5Csdz
Nb/94Vfz2w/u8V+H47+e3/5xmt9+cD9v6K88mLc/8XPoW5zN4ctD6AcMzvbH
8Dz7aG5f3sLz14N5/hPfhOeFg+u/zlufU9X5CR/nodtfzvNxXjnO1Twf54nj
X8/z8XN3v6HPfzbP9+cFP5rn6x8+PHv85XkBL8/w4dntL+f58Ow4V/N8eHb8
63k+PLvf0Ns/m9vrGX40t9czfHj2+Muzz1HLM3x4dvvLeT48O87VPB+eHf96
ng/P7jf088/m83qGH83n9Qwfnj3+8uxz6fIMH57d/nKeD8+OczXPh2fHv57n
w7P7DT38szm8nuFHc3g9w4dnj788+5y/PMOHZ7e/nOfDs+NczfPh2fGv5/nw
7H5D3/5s3q5n+NG8Xc/w4dnjL8/2JsozfHh2+8t5Pjw7ztU8H54d/3qeD8/u
N/Tqz+bqeoYfzdX1DB+ePf7yPMHLM3x4dvvLeT48O87VPB+eHf96ng/P7jf0
58/m53qGH83P9Qwfnj3+8uz8tzzDh2e3v5znw7PjXM3z4dnxr+f58Ox+Q0/+
bE6uZ/jRnFzP8OHZ4y/P3jeUZ/jw7PaX83x4dpyreT48O/71PB+e3W/ow5/N
w/UMP5qH6xk+PHv85dn7rfIMH57d/nKeD8+OczXPh2fHv57nw7P7Db33s7m3
nuFHc289w4dnj788e59anuHDs9tfzvPh2XGu5vnw7PjX83x4dr+h334239Yz
/Gi+rWf48Ozxl2fv78szfHh2+8t5Pjw7ztU8H54d/3qeD8/uN/TYz+bYeoYf
zbH1DB+ePf7ybC5SnuHDs9tfzvPh2XGu5vnw7PjX83x4dr+hr342r9Yz/Ghe
rWf48Ozxl2dz6vIMH57d/nKeD8+OczXPh2fHv57nw7P7Dc+/z+bSeoYfzaX1
DB+ePf6P/FPP//iUD89/Z/vy/LdP+fD8V8Ypz3/5lA/Pf2b88vynT/nw/Ef2
W57/8Ckfnn/P8ZTn333Kh+ffcpzl+Tef8uH51xz/k9+T+X39O7w8n/6V7csz
vDyf/oVxyjO8PJ/+mfHLM7w8n37GfsszvDyfPud4yjO8PJ/+ieMsz/DyfAr5
8+nn8PILH559TlKe4cPzN4xTnuHD89eMX57hw/NX7Lc8w4fnLzme8gwfnr/g
OMszfHgO+fODz4uePJ/g5ffg9vXv8PL88EvGefJ8gpfnA3x4hpfnh1+w3yfP
J3h5PsCHZ3h5fgj58ynkz4eQPz98By/P8OHZ7csvfHjmOd7wDB+efe5XnuHD
87fstzzDh2f48AwfnkP+fAr58yHkzw8/wMszfHh2+/IMH555/jk8w4dnn5eW
Z/jw/D37Lc/w4Rk+PMOH55A/n0L+fAj588NP8PIMH57dvjzDh2eeGw/P8OHZ
58zlGT48/8h+yzN8eIYPz/DhOeTPp5A/H0L+/Ojz8CfPD/DyfHb7J88neHk+
Os6T5wO8/G4cv/4dXp4fQ/78EPLnc8ifTyF/Pob8+RDy503Inx9fwcszfHh2
+/IMH54dpzzDh2fHL7/w4Xliv+UZPjzDh2f48AwfnuHDM3x4fg0vz/Dh2e3L
M3x4dpzyDB+eHb88w4fnkD/bKxmeQ/58CvnzMeTPh5A/b0L+/PgGXp7hw7Pb
l2f48Ow45Rk+PDt+eYYPzyF/fgj5sz2d4Tnkz8eQPx9C/rwJ+fPjW3h5hg/P
bl+e4cOz45Rn+PDs+OUZPjyH/Pkh5M/nkD/bexqeQ/58CPnzJuTPj+/g5Rk+
PLt9eYYPz45TnuHDs+OXZ/jwHPLnh5A/n0P+fAr5sz2y4Tnkz5uQPz++h5dn
+PDs9uUZPjw7TnmGD8+OX57hw3PInx9C/nwO+fMp5M/HkD/byxueQ/78+AFe
nuHDs9uXZ/jw7DjlGT48O355hg/PIX9+CPnzOeTPp5A/H0P+fAj5c+s5mofa
17Ufba4nZ/uWN8kd39xEzvatlyv3eLzPlLN9u1+Se/zO++Vs33q5cj9vWG+k
9XKfeOvlyvXj94qc7VsvV67PsJ5J6+U+8Xa+yvVvL9fzE956uZ5v8NbL9fyB
t16u5wO89XL9+cJbL9efF7z1cvUPb71cPfs+hL1cPbu9vVw9O469XD07vr1c
PbvfsJ5G6+XqGd56uXqGt16unn2/xF6unt3eXq6eHcderp4d316unt1vWDej
9XL1DG+9XD3DWy9Xz76vYy9Xz25vL1fPjmMvV8+Oby9Xz+43rI/Rerl6hrde
rp7hrZerZ99/sperZ7e3l6tnx7GXq2fHt5erZ/cb1sFovVw9w1svV8/w1svV
s++T2cvVs9vby9Wz49jL1bPj28vVs/sN6120Xq6e4a2Xq2d46+XqeYLby9Wz
29vL1bPj2MvVs+Pby9Wz+w3rWrRerp7hrZerZ3jr5erZXom9XD27vb1cPTuO
vVw9O769XD2737B+Revl6hneerl6hrderp7t6djL1bPb28vVs+PYy9Wz49vL
1bP7DetUtF6unuGtl6tneOvl6tnek71cPbu9vVw9O469XD07vr1cPbvfsB5F
6+XqGd56uXqGt16unu2R2cvVs9vby9Wz49jL1bPj28vVs/sN6060Xq6e4a2X
q2d46+Xq2V6evVw9u729XD07jr1cPTu+vVw9u9+wvkTr5eoZ3nq5eoa3Xq6e
7Tnay9Wz29vL1bPj2MvVs+Pby9Wz+w3rSLRerp7hrZerZ3jr5ep5D7eXq2e3
t5erZ8exl6tnx7eXq2f3G9aLaL1cPcNbL1fP8NbL1bO+7eXq+e8hH/5byIH/
GvLev4Rc988hv/1TyGn/GPLYP4Tc9fchX/1dyFF/G/LS34Rc9Nccv71cPcNb
L1fP8NbL1TO89XL1DG+9XD3DWy9Xz/DWy9UzvPVy9fxzuL1cPXv9sJer528+
5a2Xq+evP+Wtl6vnrz7lrZer5y8/5a2Xq+cvPuWtl6vnkD8/eH21l4vng9vb
y8Xz6OXi+QRvvVw9w1svF88neOvl6hneerl4PsFbL1fP38Ht5erZ7e3l6pnv
w9bL1bPfn/Zy9fztp7z1cvUMb71cPYf8+RTy50PIn0cvV8/w1svVM7z1cvUM
b71cPcNbL1fP8NbL1TO89XL1HPLnQ8ifRy9Xz/DWy9UzvPVy9QxvvVw9w1sv
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
3F4B/hu3V4D/xu0V4D+t7yVvvYLi9grq+9teQXF7BcXtFRS3V1DzM3sFxe0V
FLdXUNxeQXF7BcXtFRS3V1DcXkF5tldQPu0VFLdXUNxeQXF7BeXTXkFxewXF
7RUUt1dQ3F5BcXsFxe0VFLdXUNcFewXF7RUUt1dQ3F5BzXvsFRS3V1DcXkFx
ewXF7RUUt1dQ3F5BcXsFdV7ZKyhur6C4vYI6f+wVFLdXUNxeQXF7BcXtFRS3
V1DcXkFxewV1/tgrKG6voL7v7RUUt1dQ3F5BcXsFxe0VFLdXUNxeQXF7BeXB
XkGd5/YKitsrKG6voLi9guL2CorbKyhur6C4vYL6HrJXUNxeQXF7BcXtFRS3
V1DcXkFxewXF7RXU75e9guL2CorbKyhur6C4vYLi9gqK2yuo76mQw7ReQfGQ
w7ReQfGQw7ReQf2ehvyh9QqKh/yh9QqKh/yh9QqKh/vr1isoHu6vW6+geLhP
bL2Cug6E+5rWK6jfrzTf/gfPryvP/TvPVes+/2n90NZn+xvPAYvXeqPyF4H/
ledZtd+ndUgb/2ae1/qP7f3Qv/C8pvjT+I1/M89rHcnGX87zWpfW3tHpab3U
xr+e57VOZeMvA7+a52M9XHtHtX6r/OvAfxn4y8CvAv9V4H8k3y4/T+vGNv7V
PK/1Ohv/NvDvA/9xnj+ae9fx/4F8uPjT8Tf+1TyvdUUb/zbw7wP/cZ4/mBsX
n8Jx/p7ctcb//DDPv5zntS5q498G/n3gP87zs3ls8Snw9J7X78g5iz993sa/
DPwXgX8b+PeB/zjPT+afxafAw3tVJ/PP2u9vyRtr+6d1lhv/Yp7X+raNh/eb
HsL7TQ/h/aajOWTxKfDwftPRHLJ4er/pN+SBxZ/8NP7FPK91fhsP7x+dwvtH
p/D+0cGcsPgUeHj/6GBOWDy8f3QwJywPvybHq+MP7xOdzPdqfPO94uG9oUN4
b+gQ3hvamO8VnwIP7w1tzPeKh/eGNuZ7xdN7Q87rar7nvK7mmc7ranvndcWd
1xV3XlfceV3t13ldced1NW93XlfjO68r7ryuuPO62q/zuuLO62oc53W1vfO6
4s7ran7uvK6487rizuvqeJzXFXdeV9x5XXHndcWd1xV3XlfceV1x53Xlx3ld
ced1dT44ryvuvK6487rizuvq/jT1GZzXFXdeV9x5XX0u53XFndcVd15X3Hld
fa7QB2jzujpO53U1/ueHee68rs5P53XFndcVd15X3Hld3V+H5+xtXlc8PWd3
Xlf888M8d15X3Hldced1xZ3XFXdeV57Dc+02rysenmu3eV3t13ldbe+8rrjz
ujqvnNcVD8+X27yueHi+3OZ1xafAw/PlNq8rnp4vO68r7ryuuPO68ua8rnh4
/tvmdcXD8982rys+BR6e/7Z5XfHw/LfN68qD87o6/vA8t83ranzndcXDc9s2
rysentu2eV3xKfDw3LbN64qH57ZtXlc8Pbf9yLyO939aLld/H0H+kXmd77H4
/mbK6z4yr2Oclte9mOc1buMfmdf5uczfXszzsW4t/CHldR+Z17Hflte9mOe1
X/lDyOtOKa+rn5f5WP284OPn5faX8/wh5HWnkNcdUl5X6wxP88fZ8roX87yO
s+VvL8M4V/O8jrONfx14nc/mXXU+m6e9mOfjfDZPeznP6/jldfxt/Ot5Xp+n
bf+ReR2fq+V1L+Z5fS55fa42ztU8r8/Vxr+e5/W52n5TXlfXDfOrum6Yd72Y
5+O6AR/XDce5mufj73k5/vU8r8/b9hvyunPK6z4yr8NDy+tezPPy0PK3l/O8
PLT3W38Vxr+e5+Wh7TfkdeeQ151SXlfXefOous6bp72Y5+M6Dx/Xece5mufj
7wo5/vU8Lz9tvyGvO4e87hTyumPK6z4yr8Nby+tezPPyJi9vbZyreT7Wk3f8
63le3tp+Q153DnndKeR1x5DXHVJel9bteTHPx/e46/C8nOfjexw+vscdP63b
M4X9hvXhx3XZ4/E9bry14wzrww+PyZvz5LBuz/Dm+jxX83x4c/ywbs/w5n7D
uu7Dm8fj+9d68zjDuu7DW/Dj/cL4vrMPcDXPx/ed9x1h3Z7xfed+w7rr4/vO
4/H9aPy04wzrrpef5KHdH13N83GeeN8U1u0Z54nr5IT1z8d54vH4nrLniccZ
1j8f50n4vN6vjfmq93Fh3Z4xX7W/EdYbr8/b7it9L5jP244zrDdenzd9rnaf
GNbtGeez95thHe9xPns/6/u2ns+uzxPW8R7nczh+7zfHvML71rAO9phXeD/r
+6rOK+yrhHWw6/jTcbb72bBe9Ph98T7X9zr9ffH+N6wXPX5fwvF4v1nH0+5n
w7o9dTztPjes21PHk/bb7kPDuj3j98j707Buz/g9CuN7v1bjt/vEsG5PjZ/G
afdfYd2e8XsRtvd+obZPPM2T23NY87ri5nXmfuHvJrdedHoOa17HOO05rHld
bW9e5+fyOal5HeO37c3r6rlAeg5rXsd+23NY8zr2K295XY2TnsOa1/nzCn9H
tW1vXsfxtHHCc9iW13Gc7fmmeR3H2bY3r+M42zjmdRxnG9+8zvPZ55jmdZ7P
bm9ex/G3cczrOP42vnldPV+ewvbmdXyu9hzWvI7PJW95HZ+rPYc1r+NzyVte
V/tNz2HN67xu+BzTvM7rBrzldXxeecvr+LzyltfxeeUtr8NDe/5oXoeHtr15
HR7aOOZ1eGjjm9fhoe03PIdteV0dT3oOa17ndd7npOZ1XufhLa/zOu9zT/M6
/MhbXocfecvr8CNveR3e2vNE8zq8te3N6/DWxjGvw1sb37wOb22/4Tlsy+vw
Jm95XR1neg6b3oc1r/N73Pdbzev8Hoe3vA5v7f3TKew3rLvY8jq8yVtehzd5
y+v05jw5vA/b8jq9+d6oeZ3e4C2v0xu85XV6g7e8Tm/wltf5fcf9Qsvr/L6D
t7zO7zt4y+v8voO3vA4/8pbX4Ufe8jrPE++PzOs8T7xvCu/DtrzO8wTe8jrP
E3jL6zxP4C2vc77K/VrL65yvwltex+eVt7yOz9vebw3r+LW8js+bPle7Twzv
w7a8zvMZ3vI6z2d4y+s8n33v1bzOeQX3my2vc14Bb3md8wp4y+s4/vY+rHmd
vy/ez4Z12Fpe5+8LvOV1/r7AW17H8Xi/2fI6jkfe8jqOR97yOn+PvA8N78O2
vM7fI3jL6xjf+7WW1zG+vOV1/l54/xXeh215Hdt7v9DyOs/P/58n/x+q3xTv

        "], {{{
           RGBColor[0.880722, 0.611041, 0.142051], 
           EdgeForm[None], 
           Specularity[
            GrayLevel[1], 3], 
           StyleBox[
            GraphicsGroup3DBox[{
              Polygon3DBox[CompressedData["
1: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
uy/WVmMpuxfWsshryKVct4oaG9k9uOYcL5/dm2uBy2X34JrhL7L7jNsZG19m
13Jf4+rJdbrm9h+i85Uy5/fRuVFZ8UfcrOB8+F10PlH+/CM6cyoH/RWdSZQb
/4zOlsqBz0T3Y5WHxyRnbz3v16pXVfD1vy6556b5pEpyX0734rLk+lE12aXJ
/T1d/0uSe24aA99GZxtl6UrJ/T3dr8rJPUDdxz3RuUsZ+3Nco+C177PoZ03Z
8oDkzKZ8cig/AwvOCf9EZypl4P2Ts5bWrH2Tc51y9yHJ/VvlBC0EypPKsSWS
c6ny7fXJvUGN1QOT86fWu4OT+9LKG99EZzzl/B3R2VJzw+7orKu6YFd0blSu
3hmdG5XDD0rOusok/0ZnYOXnv6NzoPL5f9EZWDm8tjJEwb2yG5L7nJq370yu
l9VnHphcR6tO6pdcL6ufOSC5jlbvqH9yfap+db3kWk99s7uS63H1pYfqWhfc
s+qbXBerp90ruabT3HVfch2tvuK9yXWu+o33JNe26hPentxXUf98SHJNrZ5Y
3eT6UX253sm1oXrafZLrOPW06yTXm+rXnZPc01Bvo1Ryn1/r8kXJvWLN4RWT
e7yawy9O7v1qPqmaXLOrT3hTcm9cvcTTkvcINF/dnNxDUB18Y3Jdr55qreT6
V33CM5L3CzRfnY4HFTxHXZi8Z6EMcEFyH15rd3mtowVngArJPXCtO2cn7zVo
TT8zeW9C89tZyXsTyhglk/cglDEC7lpw/bVfcn2hmu6T6HVBuat5cr9O2bVp
co9FvZYWeHPBdcEDybWz+k+DNV8UnPmv4WdewRlySnQeUwZoltzHU1bsWjyu
1KfpltzjUmbeFD2nKdO+Fp33lHVfjc6NyrcvR9dfqrOOK76PqrEe1LNXwufT
HX9acCY/Prlnpdrk6uT+pDLtVcn9TNUapZN7TaoXTk7uMSrnn5LcH1N9cXnx
PdVcVCO556kMXJOfNQVn3ROSe2Kqj07lZ0zB8+0tyf1SZeNXoutKrdEnJvcD
VXecn9wfU/1yXnI/TfPzuclzoMZqmeT+mGqWK5N7pKq/rkjunaomOim536ha
qRw/kwuu3com99lUB70UXc8qP7wRvRarHtwYvdYrg62OzgPad1iATy64xz4v
Ogeq9z49Omspn0+LzpDqbyyLrkG07zAjOlOpBzI1OtcpB86Pzlfad1gRXXdr
v2NVdJbQnsjH0Xnp//VRdM2onvni6JpRPfPnomtM5f0l0TWj+ucro7OK9kqW
R/dDtPexNLpnov2R+5P7e9q/mBmdD9UDnxudgbXXsDU6v6lu+jA6j6mW2RKd
r1SvrY3OPNpP2Rydc1RHfxSd8VTHvRidqVQTvx5dv6junh2daZWHP4jOeKrF
3ozOTqrd5kTncO0NPRudt7W3Mis6G2uPZlt0HlNduSY6U2lv6P3obKlM9xa+
quBach0uW/Ce0ejk/qf2XD6NzoSqVYcl9yG1B/FudE9YufcdfH7Befvt6H6v
svQifEjBOXlhcR9M9+W94n+7zmGv5D07Zaejk/f+lJFS8h6ics4LxfdU12oD
PqXgnN82uW+vvZgOyb137W+2S+7Va0/ttuT+vPba2if37bXXuT66B65a4Jjk
vUXlrmOT13HNIfsk72kqdxUl7zkqj8XkfUzlui/5nqsLrhd+id53UO76LXp/
U9ns9+K1W7no1+j9UOWxL6J77Krpfsa3FFzH/RS9B6Gc9lV0/1913NfF904Z
YHv0HoFqupycu5Q97k7u92rvbG/cvOAs2jF570P7y4fjbgXn6iOT+5nKn0ck
7/UoVx+WvNejGuGo5H1Y5dXOyfsm2muultzX1brWSuO+4P2mW5N7ttpr65Tc
n9dec6PkHrL2p1om78to/6tHcj9f++/1k/vG2psbkdyj1n5fw+Ses/aqRiX3
sbVveEdy/1l73F2S1yatI22S91+079ak+Dy1ZrVO3tPRHlxPPVcF7++PTO6f
a7+yQXKf+f/7gMk9be2XDU/u1Wvv8n8XPFci
               "]], 
              Polygon3DBox[CompressedData["
1:eJwtmgXUFlUXRl/v+I1jd3d3d3d3tyIKdnc3it0CJnaggKiIgGKgYoLd3f3b
7b+3z6zlUve6M/PNe+Oc5zxn5ux+8FYHlU6ncxn/Gp//nlN3Or/x3zFVp3P2
hJ3OHvDD8E3wz/BZ8M/wE/CZcG/4V/gp+Cz4T/h7+AOe9xt8NPwJPJTxY+Be
8E/waPgM+Fz4d/hpuDd8NvwL/CTcC74I/gd+Ab4APh/+E34WPhc+Hf4Bfgw+
DT4B/hIeAZ8InwR/DT8Enwz/AI+EB/N+38GnwN/Coxg/Ff6yq9PZAF4Gfhw+
mfFv4IfhU+Bu8EPwjfBP8Odcvx68FPwofDzjX8DD4RPgY+HP4GHwcfCF8N/w
8/D58AXwX/Bz8HnwefAf8DPwOfBR8Mfw/fDR8Jnwj/Dj8OnwMfCn8APwsfBx
8Ofwg/Dx8Be83/rw0vBj8JGMfwTfBx8F/834zvB68Fj4PXhVeCH4Yfhlrj8Q
7sl8jYNfgw+B94Vfhl+BD4L3hl+EX4UPhveBX4L3hV+D7+B5B8EvwvvDezH+
AnxYw7rBx8HrwAcw/iZ8F9cfCu8DvwrfDh8Ij4P3g/fk+ufhsfC+cHf4OXgm
+Gy4G9evBU/Zvs+O8NvwJO3928Cvwa/Dx8KHcv8r8BvwcfBh8KvwS/ABcI+S
+dkPfh2+k/sPhveH34AHwIfAO8JPwlfBe8IHwm/Bd8OHwVO087UD/Ba8K/wM
fB28N9wTfhm+Fd4f3g1+Fr4e3geevF2P7eE34T3hF+Gb4X3hneCn4KvhvTyP
rOeO8DpV5utExr+CR8InwQfD78CD4CPgneEx8DVwD7gH/BJ8C7wfPGm7ftvC
r8OTtfOzHfwGfBD8NjwQPhw+HP4Qvhc+Et4bfgW+DT4A3gV+Gr4W7gn/Dr8H
j2O+f4H/gN+HX4R/hb+D7/b8wV/D28Oj4b7cvwf8LXwXfAPjX8G3Nvl7T5Wc
j9ua7KcxJefxlibz/WRJfPqO+doUXpHnjYHn53mXwwfA68HzwZfB+8Prwrc3
2d9Pl5y377l/M3glxp+Gb24yf0+UnN8b4XGe35L5uAAe4nzA3YwP8L3u95Lf
c1WT3zesZP/3gR81HpSsx2O8z+bwRvAo+KYm+2F0yfnuBz9ufCiZ7295v03g
FXi/p+B5uf9SeL8q5+9qrn/C+FFyXs+F73D/wbvCm3D9g/CFXL8LvCk8HL6o
yvixXH8xfDbXb2w8bPL8c+BNjc9N5u9ceDPjFXwJ3BveBL62yf4dUXKeVuL5
t8En8fwt4RXgW+AT4M3ha5qct+El5/G6Jvt3ZEn8WJHrb4VP5Pot4BuanKdR
Jfu9f5Pz93DJfv1fV+ZzZa5/Br6+yf58qOT8fsPzBsD94S/NT4zfZ3yDu8Nz
1/k9+3L/2vBv8FjzU0n+3J7r54LngBeEf2H8efgR+Ef4ff7+avDCVdZzYcb7
wofAG8Gntufj0Sr59QOuXx1eBH4E/greEF4WHg1vV2f9+1TZXz/DozyP/L0f
3K/wQPM7/A28Q53171fl9/wKv+DfK8l3X/P8jeDlGH8C/rHNh/cw/j38U6sX
hsD/cz7hQcYn+Fv4fH7/PcY3eHfnk+dtDC/P856El+P6m8wHVfbLgvCV8EHw
BvCV3P+I+ask3v3O/dvDazH+LHwZ48OMtyXx5GL4fuN1STw+Dx5sPIN3gy+F
HzDflMS7P3jeDvDaVfJJX8Yfg4eWxOMrmuz3QSXxeFne70b42Cr7d2n4BviY
Kvv/8ibnZWBJfF+e8Zvh46vs/wXgK+AD4fXhx+Et4I1L1nMhuA98MOMbwoe2
6zGkSjx8os77blWS31+A94H3KJmP1/g9y8Jzcf1Q8xu8PDwPPAweBc8GTwrf
Dr8JrwDPCz8Ib1xnPi+Ad4bfYnxFeD54OPwZvC28BLyE+RReDp4bfgD+FN4G
XhxeHP4E3hpeDF7M/Q/vBa8GLw0fwnwd7X4vyd8vML4oPDPj98JL8D4XwEfB
n5u/uP4o54fr14Sf4/qF4RkZvwf+CN4KXhReFB4LLwbPAt8Hj4MXh2eF74eX
5PkXwkfDX8D78Pwe8O48fyXzV5P33Q1eEd4X7gl3g1eGK+4/zPXj/uXgCev8
ni2qjDd13nfzKs+r4SPgTeEV4Dt4Hx7Z+Y3nXQG/A68ML8D4SHgvBveAdy55
/rTcf7rM+KrwDHAv3w9eA54ePhPeFV4dng4+A94FXg2euo7+2glexXjVld+z
Brws/DA8KzwJfBv8CDw7PBl8B3wQ73Ok57Pk7/3alflanfFljDfwnvCq8FLG
I66fE56d6xeAZ271V3fG34G3aPP7ZVXix2zwCXAP+H148za/X1ol3jzF8+eD
p4Hvgrds49nlVeLbZm28vqSK3p8VPh7eC34P3pb3mRIuvM/88I7wUu5XeGF4
Tq4/Gd6H6z9yf7bx+p4q+mQO+CR4b/hDeHb4RLgn/AG8R5P9vlnJ/p6l1Zd7
Mv4uvBPjS3t+GF8EnqDOfG5WZX89ze9bAJ4OHgg/Cy8EzwAPNr5x/b/wWPhC
eD+ed6j5vGQ9D2yyvw4sWf8nuX9eeGquH2D8hrvDq8BLGk/geeCp4Dvh5+FF
4JngIfD+Tfb3/iX77QD4cPiAkv20Ju9zHdyrSrxfFb4KPq1KvlwNvho+vYo+
Wx2+Bj6jip5bA74WPrNKPureJH5sXrKfnuF9FoSnZ3wQPAaeH54Wvhu+Ebae
/YF/XQTvXqfeu6FKfu2q876bwMvDezaJX1uU7PeJ2vi5VZV6YDx4d3ijKvXO
zly/pvu5JJ7sBq/jeSmJf//y93eFN6hSD33W/v6LGf8Y/rz9/ZfAn3i+2/1z
VIme/6Kdj0vhT83n7XxeXhLvFoPPg4+oMv41fD18RUm8+rKdP+v5z+BXu/J+
c1TZX4swfg58WJX3WRQ+Fz68yvt0axIvNy05r2+3+/nIEn3/VnsejyjR/8+1
87Njid79i7+3E7xulfpuV563tvGgJP5P3NZrW1epr0bXyd9bltTPO3D9kuYH
eCH3a536ZeuSevypOs/fpkTfjKlTv25bokeehneBtyvRE8/UWY/tS/Tus/Bu
8A4l+v7NNh4cXlIPPg93Mx6W6L9Oe/2GVerZ0V05r1NU0W8vwWvBs1V5312a
8Gol+e2xrsSTyavEu1e6Mh+zV4kv78KrwAvCDznf8Erw/PAI+Jau+DI/8bxL
4Fth/un8DF8K3wxwaedH+GJ4IDwp/Dd8FfwQPAs8MRfdCg+Dp/dnwTfAg+HJ
4X+5/hr4tq7/fnLnF/gyeBA8GfwPfDV8OzwB/Ct8OdyjSfzYpeQ89WwS73ct
yWcDuH4i+A+4D3wXPDH8J9wXvhueBP4L7gcPh2eEG97vJvhO2GX4nfEr+Z8h
XdHP/mjj9Yy87Fnm5yr5fwTjM8ETwjfDh/I+p8LHlujxoYxPC4/P+PXOfxvf
jy6pxxeHz3e/Vzk/78GnwMeU+Af3cf/U5gvGr4Xvh6fxdeDrjDf8vS2NLyXx
9AHGp4O7GO8PPwjPAE8A3wh/yvMvgs8qyS8ftOfxtJL88H57Xk8tyY8juX9m
eCLuvwX+sI0Hp5fks4/a9z+jJF9ewvsMhQeU+AGftPqmV0m++rjVU2eW5Kt/
unJ+1q/i9xjzVyzZo+aCI5voiRNL9KpnQq9HT8ON4z16RXoCPkvPRO9Ez0Cv
SU2tV2OMVWvrSejlGBP0Koyxekt6NsZeY46xx5ij12BM0TvSwzHWGGP1nvRE
jL2H8t4XldRM1k7GOGNvv05i3x6Mn1LiEekVOafObe9OtIhz7tw75+Zq94R7
wxitd2OMNHYb042dxmRjszFXbeqeMfYaw91LxmhjuTHf2G2MNlYb09Warplr
55qrTdxj7jX3pN6VMdZYa4zSezEnWqupkcyV5lRr0Ts7ybXmXGstNZC5WA1l
LWaNpra6uErtYg1j7W7O1UtRU5mL1VTWcuZMtZaaSa90RCdaypytt6KmMpef
WsUb0CNYpY7msra0BlSLmUP11o7pJLduWUXbq4nVxsZcY6+aSG/OHGguNOfo
dZkj9OLUiOYOa1BrUTWYXmz/KrW8Nb1emTW2tbY1kt61Od/a+rlOtIBnwrPh
mVFbeuY8e54JtZ5nwLPgGVLLbQ/3K6nZ1rfWgq8q8SA2MDfBV5d4DBvCa1bJ
ZeY0a1M1hdpiu0609U7wNSWexkZ1NKRe17udaEtrOr0ua3xrve3gviU18Xp1
arBr4ds7qc30XK5v19/11BM5r6Sm1CvZCr6wPQ8rw9vAV5bUqGu7P/j/8Uo0
k9pJj+T8kppb72RbuE9JjbtuHQ/mgpKadKV2P/Vv94P7Q0/ounY/6BWNx/j4
JTHT2GnMVmtP1Uks/8/DgL/rxNtQo6iFl+lEu5hT1QLmUHOtOdTawRxgbp2S
589ZolnVrnOqY0tqXmtfPZ5R7frrdZpz1fbmcHOxMdBYaAxUy4+zrijR1Gpr
a2hr6b3b9TTn693M3YkWUCOpldT41jrmfHO/Od5aV82qdlVjWhs9Yh1T0nOw
92BNYG2gxrUWViOpldRs1s5qTLWmmsJa1j2jX3F+lb1kjjHXqNnU8kuaB0t6
EvYm3I/Wpj3b/aeGaEpyltrCHD9JSY4y9+shbNXuX3sHegDrlPRE9AbUeGo9
NZFepxpJraQG1DtTU6mt1Fzfte+zRfv79QrUYGoxc4xepJpObaeHYe9FDbRB
iUepNrLmXb/EI7IWVhOtV+JBqZXMofOV1EjmVnsiL5f0OOyV2BN6qcSDtlek
ZlQ7qin1ytQIC5TUVGoHPTe9VD1cvTg9GL0YPUG9NnsiG5Z4xPZK1Kxbtufb
+VaDqkXVqHplalC1qBpVr0vPZN0Sj+6tdr+u0a63+13PZK12/fRSrHGWK/Fc
rH2scZYp8XCsffR0XO912/1uTbh8iYa0VtTTWKXEI9Tr0BNZocRT0CvRA1m5
xHPUG7En90pJz8lenZ7QIiWeiV6RGnKhkppQbWmNuGR7Xj1/apIFSzwYtYoe
09olPSi9Jz2EhUs8Hb0Fa9Cl2vP6ZHuel2jPp+fLmn7pEk/JWl/PYdESz0Yv
wpp42RLPylp56wmT//u1+cjzNq6Np8YXe5Svl/Tk7F2q4eZsz7PxSU04d0mN
rFZUs81T4jGo5dTM85bUnGppNd9cbfxRC9rTe7ekZ2ivT007Q4kGV+saD+do
45fxTw08XYmmUxurcacq0cBqX+Oz8VKP4qauaP6JSjSstYAe0RQlmlLvSE0+
WYnGV6tbA8xU4uFYG1gj1G08tnawRh6/jcfGfzX6NCUaWu1uPDQ+29O9pI7H
8H4br42P1gSzlHiI1grWELOVeETWFvZs32vjnb1ce6xj23xn/LMn+3xJz8he
rT0SeyX2ZOx92sOwl2EPxd6lPd+3S3pY9oLtUb9R0vO0d23P+LWSnqi9ZHuo
b5X0hO2t2mN+s6RHa+/ZHvarJT1qe9v2ZOzN2EOxd2XP94WSHpm9YHtG9o7s
+djbtUaZv8STsHaxh/tOSc/Z3q49JXtL9qDshdsTfqakZ2iv2B7ccyU9Qntz
9qyfLemB2su2Z2Xvyp6VvV57TPaa7EEe1+ov9a16VP2nB7FGGw+Mt+Z8tcLJ
VbRA/zp71T3/X/3S5Cw4h87lA03mxjlz7oY2mVvnzLm7oc7ZcM+792+qcxY8
I56Vu5r8FtfUtfUMqgVOqXI2hzVZC9fQtXywyVo6Z87dkCaxxzVxbe5tsjau
qWurh9qtzcfqx/uarLVn2rNtT+74Eo/TXt3wJmvhmfRsjmhyNt2T7s27m+w9
19i1fqBOrDQmGhuH1omNK5X4z3r69rbs8ej16/nbu7LHZS9gZJ3Ybs40d9rD
sPdlz8vexsN1cpk5zFxmT8DegHrcXrA9HuuT3p3UL+pl9Yf1kvr5oTq5zxxi
LhleJ7aaM8wdw+A1Oon5xv776/TzreGs5UbVya3mVHPrg3VyjTnEXPJondxn
jjPXPVIn15mTzc0j6mgBY7qxfWCTs+GZ9mzf0yT3mkPMJYPgDzrJweZiPQK9
Aj0Cvbh+dWKNMc/Yp6ett929Ey/9yjqxTI2iVhlcRc+r/9XL9lDsJdqjtbdy
eZ3YqMZR61jzW/uf1klvrk+dWGmMNFbqieqN6rnqlfv8se15Vy/aczqpxGOw
F6XHqdepp6qXbr1p/Wi9aH3Zt07sNiYbm/XE9cb1/PXmrZmtnXt10vvR47WX
0KMT7/eyOtrMGG2svqKONjPmG/uvrRNrjenGdjW5/eOzq2h1e9QnlNTo9q6t
Gewn965SS4xsEouN4cbywU20kZpJ7aRnrHesx2tv4Lo6sdwYb6y/Hp6jkxhv
rL+6Tm4zh5nL9Hz0fuyR2Nuwx2HvRP1p7+PSOrnHnGPu0UPWS9aTtZdxVZ1c
aA4yF91Xx3tQs6hdrFnsH55VpZa5pk5uM8eaa++to23UQGohe3r29uxh+W2D
PW6/NbFnYu/75Ca1jjWNtY09d3vv9nT9tsAeqL1de4j2Rk9qUltZI1krndhk
71lzWXud1aQ2tCa0NjyzSe1mDWkt2atJLWkNaS15dpPa0ZpQPX9Gk1rLms/1
OqdJ/LamsrayZ2nv0jnYuk5P096mHo/fnvRuUltaI1ornt6k1rOGc38MqaMN
1ZRqy9MY799JTeh82kO3l24P3m9d7Hnb+7ZH7rcs9mzt3brntq0TE42Nxhh7
dUc12dueGc/OEU1isXvSvXl4k7k3Rhur/SbBbxNGd/JtiD1We632rP0Wxm8c
/NbhsU6+RfEbCL+FeKKTb4Ps2du7t/7325Njmng7xlBjqd8A+C2APXy/LfKb
Ar8tGNPJtztHNznbJ5f0V+0p21t+tJNva/wGwm8h/MbAb5lOaVL7WlObT+2p
++2GZ8xeu3Piu15ZZa5urlObqBnVjrfWqTXUDGoHPUt7l/ohepkD6mhbNbfa
+9Qmtbua1vx5T51aQM2r9r3LnN+JJlYbD66jha0RrBXsoeq36L/od+l/6cfo
p+h32cPWD9Lf0T+5o442V+Or9W+po22ssay19Fv0g/SH9FPurFMbqOnV9rfV
0f7WVNZWt9epFawJrA0G1ald1PRqe+fcuXfN7HUPrKP1rQmsDe5sopXURGoj
e/r29u2p++3QgCZaSQ2llrqjiTZSY6m19GQ8G+dVOY+eGdf2iipnSU9Ub9Sa
2m+n9Hg8++dUOa96PJ79c6uc1xvr1ALWCNYKd9epXayBrIX+D5ZfgSc=
               "]], 
              Polygon3DBox[CompressedData["
1:eJwl1nW4FGUfBuD9aAEBaRQppUvpBukSkG6QbpBukG5QWuk8xKG7u7tTpRsE
BCT97tE/nnOd575+7+w7s7Ozm7JR+8rtIoRCoVMSWaZGC4UWRgyF9sHTetMo
oVBv1ov9wuaxXOyWNGfdWD+WUv/V3CJ2gJ1lzdlNaca6sr4shT7TXDg7wi6y
1mwKW8D2RvhvL43ZDWnKurA+LLk+2txkto7tYlXYDLaUHWYXWCs2iy1jR9kl
1obNZsvZMXaZtWXT2GJ2kJ1jLdhkNp/tYSdZEzaKTWJr2U5WlU1nS9ghdp61
ZLelBevO+rNU+nVpwjqz3iyZ/ou1YWw/O8OasccykI1n01lhfYC5oWwBW8mK
s/rsK1aRVWW3vXF1WGZWnn3HbrJ6LCurwKqwW6wRK8zqsybsJavLsrBvWWV2
gzVgBVgd9j37izVkBVld1og9Z9+zQqwea8xesFosOSvEirLTrDZLwQqzYuws
q8mSsYLsG3aGVWexWRb2NdvDarA4LCvLxnazt67DLnaK/cEG6OPM/cI2sr2s
BqvGQiw5S+nfNdbOYSvYcXaFtQuuOxvGFrJVrBjrx/qy6Wwhy8v6sj5sGlvA
8rA+rDf7lc1nuVl/1o/NYGEsHxvBxrJlbCMrx35k/dlMtojlZyPZOLacbWLl
2SA2nIWx1awEa8yKsAasKXvl3IayUWwJW8dKmxvCRrLFbC0rxQazEWwRW8NK
smFsNFvK1rMybDgbw8LZBlaWjWVT2Qa2h1UP7nlWkQUPky4sKvuJ/co2sX2s
JlvCtrDL7B7rxRaxTewiu8N6sDC2kV1gt1l3tpBtYOfZLdaNLWab2SV2l/Vk
C9h6do7dZF3ZCrabXWdP2SC2iu1lN9lzNphtYkfZQ/aWjWbr2EF2l71iw9kG
dpjdZ6/ZSLaUbWVX2H3Wm61ke9gN9owNZFvYcfaYvWdj2WZ2jD1i79gYtpEd
YQ/YGzaKhbNt7Cp7wPqw5WwH+509Yv3YMrad/cYesr5sn2RnxVhpdt/9spWl
ZjlZXnaZXWRVWGPWisXUj0o+VpZVZE/NXWJVWRPWmn2sH5P8rByrxJ6Zu8Aq
s0asJYuhr7a/fewW+4sNYTslPcvLCrLfrd3O0rLcLD+7yhawqCwOS8I2szD2
EYvPPmNb2Q6WjuVhBdhvbA/LxAqwIuw628uysaKsFLvHdrEMLB8rxP5gu1lG
lp8VZtfYEZaXlWEV2J9sjXPbz26zF2yomfXsELvH/mYj2HEpyiqzmuyNtRPZ
X3rUCP99Hy/0ZzJ7qccInC1iU9gr/WMJHnGL2VT2tx5bPmJL2Es2x2usYttY
w2BG5rE1bAdrpD+X8WwuW8Yq6c/kZzaHhbOK+pPgWcQmsBmsiP5n8DxhE9lM
9o0+SV4E+xD/hsLs5VHwfWbuZzaNFdKfBs8nNonNYkWD85cJbB5bzr4LjiUT
2Xy2glXWtzrxE+wJ+8DGBb9B5I0eL7heLNzrjg/ORY8Y4d+vgtB8NoO9D+4f
icVWsJnsQ3D/BNeQrWTT2Ts9UXCt2XI2i/2jfy5x2Co2317WOfhZdoN1CZ5X
Eo3FZZ+yLebmmlvDTrNrrLOZtewAu8NesmHBeyYRWTSWgK23dh6LzGIG+2Eb
2Ss2l61m29n3wW8Lea1/ItHZ0mB/LIq5WCwx28SmsbfB8SUmW8ZmswjmorD4
bF2wZxaJRWcJ2YZgL/a8lp1h11knM2PYFLae7WbV2H7JwYqzMuyBtQdYTlaC
lWUPWVtr67HebBBLaKYNq8t6sYEsQfA7ipVjrdgPLBJrysqz1qxj8HXPmrMK
rC3rzKKwdqw+68MGs0SsO+vAxrIpLAPrxtqzMWwyS8+6snZsNJvE0rGOrBUb
zn5mX7BOrDUbwcaz1OxOMMsGsJEss97ZXBs2kk1gadhZKc1qsvqh0L8fnC7m
2rJRbCJKy85LWVabNWQR9HvBMdkgNppl1R8G58KGsnEsm97M8b5lbVgnFjn4
XLGZbBs7xOoGn182i21nh1m94PnAprMt7ACrzf6QRqwj68mSBs8Mc9PYZraf
1WLXpDHrxHqxz4PPuLkZbCs7yOqwc1KG1WIN2P/0XuZ6sqlsLsvJerDubDKb
zXKw1qwO68kGsHjsQfDesSFsLPta72muB5vC5rDs7H5wrdlgNoZ9pbcyV5v1
YD+y+Kwlq8Tas64sGrsbvO9sIBvFsuiHJQ8rzb5lT9zjHaxtyPqxoSyJmTNS
itVg9dg/5laxhCwNS88Os3AWiyVjKdgutpjFYImDZxHbzpawmOxTloztYEvZ
xywpS852squsBmvO2rE4+mWpxpqyNiyWvkLisy9ZWnbQ2uUsHvuCpWEH2EGW
i5Vk5dgjdojlZqVYefaYrWQJWGqWjh1i21galovlY1fYIhadJWRJ2Ta2jMVl
qVhqtp9tYV+yHCwPu8RWs0QsLcvAjrDN7AuWneVmF9nvrBZryTqwuPopKcGq
sTrsvbmTrDirymqzd+w1W8V2sePsh+B7R1az3ewE66ifkGKsCqvF3lp7mpVk
1Vld9oH94N5oyYaxn9iXZtqzBqwvG8ISs/XyGcvIsrAT1q5lSVh6lokdY7+x
mqwFa88+0TdJKpaN5WIXzK1jn7IMLDM7zq6w6qwZa8ti62skMUvHMrKj5jaw
pCwTy8pOso3sc5aZfcVOsQnsefB7RiKxBez/f5QrjA==
               "]]}], Lighting -> {{"Ambient", 
               RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
              "Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{2, 0, 2}]}}]}, {
           RGBColor[0.368417, 0.506779, 0.709798], 
           EdgeForm[None], 
           Specularity[
            GrayLevel[1], 3], 
           StyleBox[
            GraphicsGroup3DBox[{
              Polygon3DBox[CompressedData["
1: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
NiSc86k/1iNc7+k8q2e4vtL51OHh3pP6pf8L58TqB+6bS30V7bnZdbrm2I7Z
tb/ykNrZvSzN+e2ye0qak1Wyew5aX1sru+bV3lHIrqm1p5Rl18vKkbZUdr2s
PXG/XOrP6N5l1+laC9tm9680/2tk1/uq6Wtm96m0jtrlUn9GsSK7L6HcaZvs
PpjWb1Ue9cu8RuqF82n1J2tl9+603jdU+BxI53HjwucuOosZFa6p1B/uGq7l
dDbXMVxjq5fbKVyX6lxv/3D9rDOOzuGaUOd6HcK1us4BDwjX1eoJtw/X5+oV
twjXMzp3aBmui3R2sHe4ttHZxH7h+l/nLK3CNYDOFCZkn3lpPz0Mn1TmNX5I
di9R67pduKegs5h9w/0CndG0Ddfh6p3uE+41qOfcOlxXqGfbJlxXqBbYK1xf
6eyjcbh/p7ObRuH+nc5KRoTrf/W3DwnX/OqNHxquXdUz7xKuh3V2OTzcX1B/
fli4jlIf+OBwf0F9+MPCdZT6+SPDPQj1ww8M19s6n20e7qfofKdZuM+iM6b6
4VpUPfAG4dpS5wgNw3WpzhqahHs0OntqGu5v6lxpt3AfU2dPu4d7NDoD2jNc
i+rcZ49wjaqzpIrsnpX2l0rZ/SXtR9pXlZ8XFe/C56A6Z6+T3XNTLfBfhXsK
OrfdNlzz6wy9VvgMVWfo1cNnsTp/rx0+p9T5+KYK90R0Llye3bPSnrixwj0L
nf/WDJ/L6vy9mN3L0t5XObt/qH1tu3A/QufCObs3qD00ZffEtA/+HxnA8oc=

               "]], 
              Polygon3DBox[CompressedData["
1:eJwtmnW8XNUVhd9kzss9EyAhJAQIEOJYgODuEtzdCe7uGhxKcXe3UqxClRaX
UlxKcXd3SKDf1zX/lH6/c2fyZu7de6+19oyYuPf6e/Xp6ek5l/8p/HdI09Mz
c6un5yXgkH49Pe1OT8/98CnwMnA/+F/wmfDKcIUfgU+HV4QH8foZ4f/AB8J/
g5+GD+rt6VkSvhN+CN4DXhj+B/wsfAi8NNzh/R6Fz+D1K8HrcL4DPIDzXngq
zh+Dz+J8Ffg/lfeGl4MHwetx/U7wQK5v4LuaXL8vvAT8PjwFvgLeBn4T/g6+
CN4MfhJ+Bz4ZXh1+Df4aPh/eGH4L/h6+GN4cfhv+Ab4E3gL+AP4ZvhLeFn4X
/gm+DN4K7tvJ5z+Nv3d5uBd+EP4VvBz8Otd/A1/A9ZvAb8DfwhfCm8LvwZPh
y+Gt4YbXPwz/mtevAP+xyf3Zh/PF4cL5A/CpnC8LP875W/CJnK8K/67J6/eE
F4F7uP4ez0vu1x+a3I+9OV8MbnF+L3wS50vBH3L+C3wV59vBU7gff4aPLrn+
R/iP8BEl93sA1w+Gn4X3hX/m/C/wMSV/b3/OB8HPwPvAC8NLwN/Dp8MzwrPC
r8CHwRfCl8Eb8e/fDV8EXw5vDP8Dnty3p6cPfB/XT4SHcj4b/Bp8BHwxfAW8
Cdf/E14UXgr+kfMz4d83eb734nxReBF4SfgHzs+A14QnwtNw3oYfgl/28/Sm
Pvrwfd3n81TyfD/G+ZvwCZxPgP8JPwcf2pv6uht+Bj64N9/vZL6fP8FHlfz7
P8F3wUeW3K+BXD8Efh7eH14X3hGeltf3haeFp4ef43w/eG14e7g/5wW+B34e
Pqw3z8eD8Evev97U38PwK/Ck3tRbG67wI7zfLvA78I/wpZxvCT8Fv2u/gNeA
X4W/gs+DN4Kva3K/t4Xnha9t8rxsA88Db9eknofDU8PXNPn8W8Pj4InwwfAI
eBr4eviv8HbwfPA28AHwMLgffA58I7wOPAo+C74eXgseAR8Bnw0vAU8PHwOf
By8NzwgfDZ8LLwXPAB8FnwMvCQ+xX8H94Sf4PvaCz4ZvgNfmfCR8a5P7vws8
P3xLk/rZGR4PbwnvB88CV3hv+Hh4Hnha+Ar49/Dm8BzwHvCx8Nxwf/hy+Hfw
ZvDs9gN4avjf/D17wPvAJ8Dzcj4Q3hc+EZ4Png7eCz4OHgcPgM+Fb4LXhUf7
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
xzNb0+Pp9fRk7ob0ZHozNZdZt5rxnXYyP7WkGdNn7ewYzJ7MhD9pR9OZFZuB
fdTODsNszEz0rXYyO7NSM7UX29mRmLWZsb/Rzk7N7N0M7qV2Mn2zOTPRF7rf
j1mpGe1r7WRmZrdmwB+0k7GZDbsDea77/fr8/D+TL/EMZvVqbLW2GtHsUc2n
9nu1+zyqCd9rZ0eoVtRj6DX0IO7K3AHd0a0H60lPojfR47zefX69vwPhKX1T
f9bP5/BHTTLkV9rZabS69eO//1q3vsyErur+PdaTO4mzuv3FejMDMgsyszGr
dQdzZrffuJvR07irdKel11Ezq531QGaxZlRmVXoQs1gzKrMqPZNZrpmW2ZaZ
k1mzmZHZkZ7JLNhMdlK339zV7XfHdvuF/c+dmrs1dwDuRt35uFs1k3YX5M7F
3ac7PHcxZk5XdvuJWbc7Gnd5ZtrubvRs7g7dKerl9HTuFt3p6fXcIbmrcwfh
bskdlLsoM2h3r3osd4fuuPReZlq1ZOdm1mVm0bckUzDLMEMzSzNDM8vW401V
4nH0fgvUzD5ntrN70ZrZo2ZRuywGH9PKTHI2zVXj9xcq8VuL1GgbZ5qzbaGa
2efMd/YvWDP7nbHO2rlrtMvCJXnFwjWz0Jnp7FwWPrOVmehsnL9GS6iR1Erz
1GgTNYxa5scms8cZpLb4qUmeqqZQW/wAD2+lxq31eWu0nBpHrTNDjV8eUpK3
jIf3aWXGO+tnqslXZyzZH46r0U5qMLXYfDVaQI2oVnwYXq+VHmuvnbMm/1iw
JH8dWpM/zlSyrxxdkx/MUZLfzg5vC89dkq+NqskTZi/JN+eo6c32aPPglWq0
oRpNrTa2Jt+YqySPG1OTt8xZknc+WjNr7OH28uVrtKEaUC24Wo0WViOrlVeH
b29FI6uVx3YyG+0Z9o4RNfnTmJI8ebaavHlUiV8fVtPL7en61Zlr8sKhJf56
lpo8ceaSvGxWeF14lpJ8eUwnXkUPo5cZWePvx5bkG8Nr/P/okrxgcpM87+t2
9qeP1cxOZ46z5+cm+d637ewnemry4e/b2b/0r9HOamq19Qo1WlcNrZY2k2xK
MjqzyqZm1jvz3Rf0hcfb29vZVw+oqTU1udp8mhqtbs1au4Nr8o1BJfleqcnD
JrezL5++Jg8ZXJIfdmryxFKSV05V87dY89b+ujVaTo2n1lunRpuoUdR2G9b0
bnu4Wmjqmt7hZ/KzrQc/2YomVBuqofX+m/ZGW2/A+evwNSX7l341vaa3ZJ9R
a/LKdsk+Y0jNvmH6knxzUI1WUbOYX05bk5fak+xNnzaZlc5UZ+snTWarM9PZ
+XGT2elMdDZ+1mT2OGOdtd82mdXOUGdpn5r9zo/t/D7m+yaz3hnvrP+lSd78
XTu/f5nSZD/zTTv7+e+aaAE1gFrg8yaz2pnn7PuyiRZw5jv7e2vyyint5EHT
wcvB05TklwNr9idTl+Sd7Zr87ad29mkz1uwzZij5/cQXTbSEGkGt8E0TbeBM
d7Z/3WS2q2nUNl810TZqFLVKqyb/+6Gd/aZ6cURXT6oHvYfXdOe1uzVrdlRX
f5m9PV2j3dSkalP1vnpdPa++f7bGC5ghmCU8V5MlmIGYhTxeo+3UbGo3n2mf
bT+zvw1Zs0Zbq9HV6k/VaE01o9rRe+a98zP4W6cna7SgmlRtao1Za37n/lbE
79Dv0nvurtKeM7KrN9XHa9TMdme8XsOeb+/3GTV7955576xBsz1rztqzRs3y
l6zxgnoyvdna8D9b8QR6g+drsh8zH7OfZ+B9W/FMeqcnarSrmlZta81b+9aE
Wb/3yHtlT3I3vVSNd9SD6kWtMWvNHuAu0R5gL7Dm3GVYc9aePcnd4tI1XlYP
qhe15qw9/cD4rl/RH+gX9F8+kz6b1qTZvM+sz67PrFn84jXeU0+uN7fn2fv0
b/o/e6i91Jpyt/1vrt+uFY2v1l+mxuvqsfXa9mh7tTPb375Yc9aePdzfytxd
oz3VoHqNe+D5W/Esehdr1tq1p/tbNnu6vd0adhe9RI131jPrnR+s8U56JL3S
QzWf3e9Ar7RWjbfT8+n9lqvJRsxkzGac0c5qZ/KErl+xNqwR/cyqNdmSGZFZ
kTPaWa2f089Y09a2msPfSjnTne3ONHeZagy1hj3A3y79P8MvmbFm+2oCtYEz
3l2cM9PZ6Ux197Qy//6VrWRGZkdqDrWHmsFdsDPaWe3MdBe8Yk22Y6ZjtqMm
UZuoefxtlTPaWa1mMRufUJN9mXGZdakB1YJqHLP4/2u6Eo3obuqRGq+px9Xr
3g8v34oH1gurUdQqahR3iQ/UeGM9rl53lZoszYzNrM0Z4ixxJro7UyOoFdQQ
7qbVOGodNZW73n/VeFU9tF5ajaBWUKO4a/gfPFDwbQ==
               "]], 
              Polygon3DBox[CompressedData["
1:eJwl1mWYVVUbBuCDDMMMjeQwQzN0d3e30g1KtxLSIam0pEqKASqh2AEI2Eko
XdIlIt3fva7vx/vjua93n7X3PmuvtXI/M+TpwU9EIpE9KlmomEjkWFQkciVp
JJIzSSSSLXkkkoQdYmdYPMvMUrHz7A4rzBJZSnaO3WaFWD72iA31w/P4T+xj
loKdlW/pK8jysqSxkchofcv4PraNRek7Kl/Sl4PFhT52hF1g2VlWlppdYHdZ
EZafRbPj7CrLxeJZMmOMNcZr/C/2DYvRd1q+oS8/y83SskvsPivGCrI07CK7
x4qyAiwdu8wesOKsEGvNFhpjLT/BDrMKrBCrxIaw/iw5OyVfd20iy8Vi2Rl2
kxVgeVh6doU9ZCVYYfYk+4c9YiVZkfC8nm2cMV7n+9mOMAYbz5azA2wne4KN
YkvZXrY1/L/sBbaE7WFfsQgbyRaz3ezr8H+wMexV9ifbzjK6lxtylKrASrPH
7Dl989nP7JMwLjssn3PPCSwLK88K6qvIB7N+7Ib6WT6tLyWLlkvpy6uvDO/H
erIE9kBOpWqwyiw7eyinVjVZFVaa5XNtWdaf9WLZ2D05harGKrIyLFFfOTaA
9WaZ2S05WlViZVlBlkFfXtaetWIlWTwrwrqzTqwsy8/Ks4GsDyvHCrAKbBDr
ywqxjCwf68Baszh2V45VVVkFloXdlpOryqwcy8diXRvHmrGGLDeLZplZY1aP
5WRRLCNryOqwAiwVS2AtWROWld2RY1QVVp4lshT6srHmrBHLy2JYVtaUNWDx
7L6cUlVnlVh+llJfPGvBGrM8LDnLwpqw+iwHS8oysAasdph/7KB8yjzIxjKx
wiyTvkTekbVhJVg2Vph1Yx3ZdfWT/LdrU7Bk8k31CzvLUrHkYZ6qA+wki2MZ
5ctqZ1iDWFL2KNp7Z7+xiywNi5WvqF1hHWFR7LG+q+w7dohFsyTyv+p7doQl
Z0/I19QP7BiLYUnl/9SPYc1gsSxK/kd9G75dloxF5KKeN4vnLcA7s3bsgfpT
PqwvM0sf1l21nx1nWVkGuYhrM7s2P+/E2rJiLCsryLqw9qw4i2OFWFfWgWVi
N+VkqiIrwx6qv+SjxsjCnpRvqV/ZeZaaxch31R/sH5aOpZTvq33sIMvE0sn3
1N6wfrGMLK18R/3OLrO0LIWcwb1cZ0lVeVYqrOPWpgnueUX4TbaLtdQ3nE1l
29gXYVw2iM1m37MP2UFWirVkM9jz4X2yYqwpm8IGh/tlRVkT9iIbGOYUS89K
sl6sZVi/WDpWgvVkLcJ8ZGlZcfYsax6elRVhjdlkNii8J5aTVWfDWbfwjllx
1oxNZUPCO2E5WDU2jHUN84elYcXYM6xpmGcsNSvKerBmYS6z7Kwqe551Dt8B
K8lasOnsOdaQtWG92Er2KmvOerORbDN7jzVjvdgItom9y5qynmw428jWh7nM
Hss51NOsavg2WBJ9uVhrViN8QzH/P4zkZK1Y9fCtsUdydvUUq8Yas3b6+rDV
7PUw51kJ1pxNY0NZI9aW9War2GusPmvFnmXL2VLWgLVmPdkKtizMZZbAqrDn
WBe2m+ViNdgI1p3tYblZTTaS9WAnWE3WjS1lL7KTrBbrzpaxKew0a8L6s7Vs
LjvOarCubAmbzI6x6qwLW8wmsaOsGuvMFrGJ7BRrzPqxN9jssKaxa3I6VYcV
Z2dYU30D2JtsHtvB/pXTqtqsKPubNdLXl61hc9g37KqcRtVixdhZ1kzfQPYW
m8/OseZsEHubLWCXWHv2AvuArWCHWGXWgS1g49lhVoV1ZK+wcWw7OylHVGmW
ENZY1kXfOPYJW8O2sRPyY+tGKZadNWHP6hvGN7B17AiryjqxhWwCO89asMHs
HfZK2BdYBzaKfciWs4vsKTaUrWeLwr7AOrLRbAtbyS6wlmwIW8cWhrWddWJj
2EdsFavMyrK6bCwbyaqwcqweG8deYFVZeVafjWej2JPWv1nsXXaO7QnrJJvN
3gvrMdsbzhFsPtsU1lS2n6VnL7P1YX9ku1kqNo29GfZH9itLzaazt8Leyn5h
adgM9nbYq9lvLBtbzD5i/7Ej4WzBFrDN7Ao7wOLYIraFXWNHWVo2k73DTrPf
WTr2ElvHzrA/WGY2j21kl9hfLCObw95nF9i+sG+xuWxD2L/Zn2Gf8f4Gslns
O/ZB2KPYAPYy+5ZtDmcG1odNZ9+wDeFswbqziexz9ia7wXqwSewL9hbLZ9xV
bCt7wM6FvUxff/YS28U2hf2S9WUz2A72Pkvp2slsdTg3sO/ZbX392Ey2k21k
KfRNYqvC3s++C2cBfYPZHPYD28Ji9U1kK8PZhH0b9m59Q9hc9iP7iCXqW822
sYfsPMvLVrKv2X12ltVybV3Wms1mM1hNVoe1YrPYdLaV7Zb/9Q3mZqlZPdZQ
X3s+n81idVkD1o7NYy+zOqw+a8vmspdYbVaPtWFz2ExWjVVgDdgENpq1YMPY
FLaVfc6qs4qsIZvIxrAarBJrxCaxsawSK8PqsDFsBHuKjWDT2Hb2JXuaTWEL
2e/sJ9aKTWWL2B/sZ5bg/S1ln7Ab7DjLzpaxT9lNdoLFsyXsY3adHWN52Ar2
FbvHzrBc7HX2BbvDTrH8bA3bzh6xCywHe5V9xm6xkyw3W86+ZHfZaXbVPXdm
Y9nHbDXLqe819jm7zf5m1/R1ZePZp+wN9h/rxiawz9haVpEVZpXZUDYg3DNL
xjKxRqwu+x/PNwbP
               "]]}], Lighting -> {{"Ambient", 
               RGBColor[
               0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
              "Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {{
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwt0UkuBEAUgOHSrbU2tTZERCSIAyAOgDgAHQegY22KjR3iADgBiQMgDoA4
AOIA5nmeZ74Wi5evVvXnVdVnBtMDOSGEMZMTMVyIhZDiCuu5wWbusJ2H7OYj
+5ibF8IwKzjBRs6wlfPs5BJ7uMZ+bnGUe5ziHff173nAh2yHjzziE4/5zBO+
8JSvPOMbz/nOC37wkp+84hev+c0b/vA2Ev4WntW/dZzkLke4yQxXmeYiOzjH
Fk6zgeMs4xAj7OW9d+nK7sM2brOJ66zjMktZq59kDUtYzWJWsYiVLGQ5C5hi
gknms5hxFlI6JOjqEGcuY4wyysj///4Coco85g==
            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0TkoB3AYBuDf330fsxSzFLMUsxRWKaxyjZJilmKWYpYi980shSS5QpKQ
3Pf1yPD19C7fW9+XW99c1RQJIbSZregQIsJXXAiZTI0PIZfZLGQ+S1nMSpaz
jjVsZSO72ME+9nCIAxzjCFe5yE2u84SHvON4TAj3nOADJ/nIKT5xms+c4Qtn
+co5vnGe71zgx18PP7nELy7zmyv84SpDVAhX+m/lfR5zjRt/+7jCYY6yn4Ps
Zi/b2ckGtrCatSxjBYtYwjwWMIs5TGYGb9w7nddM4yVTecEUnjOZZ0ziKRN5
zAQeMZ4HjOMeY7nLGO4wmtuMivz/9xcKgUg1
            "]]}, {
           GrayLevel[0.2], 
           
           Line3DBox[{1444, 753, 1443, 2448, 1683, 1445, 2449, 1684, 1446, 
            2450, 1685, 1447, 2451, 1686, 1448, 2452, 1687, 1449, 2453, 1688, 
            1450, 2454, 1689, 1451, 2455, 1690, 1452, 2456, 1691, 1453, 2457, 
            1692, 1454, 2458, 1693, 1455, 2459, 1694, 1456, 2460, 1695, 1457, 
            2461, 1696, 1458}], 
           
           Line3DBox[{1460, 2133, 2343, 1459, 769, 1461, 2462, 1697, 1462, 
            2463, 1698, 1463, 2464, 1699, 1464, 2465, 1700, 1465, 2466, 1701, 
            1466, 2467, 1702, 1467, 2468, 1703, 1468, 2469, 1704, 1469, 2470, 
            1705, 1470, 2471, 1706, 1471, 2472, 1707, 1472, 2473, 1708, 1473, 
            2474, 1709, 1474}], 
           
           Line3DBox[{1476, 2134, 2344, 1475, 2135, 2345, 1477, 785, 1478, 
            2475, 1710, 1479, 2476, 1711, 1480, 2477, 1712, 1481, 2478, 1713, 
            1482, 2479, 1714, 1483, 2480, 1715, 1484, 2481, 1716, 1485, 2482, 
            1717, 1486, 2483, 1718, 1487, 2484, 1719, 1488, 2485, 1720, 1489, 
            2486, 1721, 1490}], 
           
           Line3DBox[{1492, 2136, 2346, 1491, 2137, 2347, 1493, 2138, 2348, 
            1494, 801, 1495, 2487, 1722, 1496, 2488, 1723, 1497, 2489, 1724, 
            1498, 2490, 1725, 1499, 2491, 1726, 1500, 2492, 1727, 1501, 2493, 
            1728, 1502, 2494, 1729, 1503, 2495, 1730, 1504, 2496, 1731, 1505, 
            2497, 1732, 1506}], 
           
           Line3DBox[{1508, 2139, 2349, 1507, 2140, 2350, 1509, 2141, 2351, 
            1510, 2142, 2352, 1511, 817, 1512, 2498, 1733, 1513, 2499, 1734, 
            1514, 2500, 1735, 1515, 2501, 1736, 1516, 2502, 1737, 1517, 2503, 
            1738, 1518, 2504, 1739, 1519, 2505, 1740, 1520, 2506, 1741, 1521, 
            2507, 1742, 1522}], 
           
           Line3DBox[{1524, 2143, 2353, 1523, 2144, 2354, 1525, 2145, 2355, 
            1526, 2146, 2356, 1527, 2147, 2357, 1528, 833, 1529, 2508, 1743, 
            1530, 2509, 1744, 1531, 2510, 1745, 1532, 2511, 1746, 1533, 2512, 
            1747, 1534, 2513, 1748, 1535, 2514, 1749, 1536, 2515, 1750, 1537, 
            2516, 1751, 1538}], 
           
           Line3DBox[{1540, 2148, 2358, 1539, 2149, 2359, 1541, 2150, 2360, 
            1542, 2151, 2361, 1543, 2152, 2362, 1544, 2153, 2363, 1545, 849, 
            1546, 2517, 1752, 1547, 2518, 1753, 1548, 2519, 1754, 1549, 2520, 
            1755, 1550, 2521, 1756, 1551, 2522, 1757, 1552, 2523, 1758, 1553, 
            2524, 1759, 1554}], 
           
           Line3DBox[{1556, 2154, 2364, 1555, 2155, 2365, 1557, 2156, 2366, 
            1558, 2157, 2367, 1559, 2158, 2368, 1560, 2159, 2369, 1561, 2160, 
            2370, 1562, 865, 1563, 2525, 1760, 1564, 2526, 1761, 1565, 2527, 
            1762, 1566, 2528, 1763, 1567, 2529, 1764, 1568, 2530, 1765, 1569, 
            2531, 1766, 1570}], 
           
           Line3DBox[{1572, 2161, 2371, 1571, 2162, 2372, 1573, 2163, 2373, 
            1574, 2164, 2374, 1575, 2165, 2375, 1576, 2166, 2376, 1577, 2167, 
            2377, 1578, 2168, 2378, 1579, 881, 1580, 2532, 1767, 1581, 2533, 
            1768, 1582, 2534, 1769, 1583, 2535, 1770, 1584, 2536, 1771, 1585, 
            2537, 1772, 1586}], 
           
           Line3DBox[{1588, 2169, 2379, 1587, 2170, 2380, 1589, 2171, 2381, 
            1590, 2172, 2382, 1591, 2173, 2383, 1592, 2174, 2384, 1593, 2175, 
            2385, 1594, 2176, 2386, 1595, 2177, 2387, 1596, 897, 1597, 2538, 
            1773, 1598, 2539, 1774, 1599, 2540, 1775, 1600, 2541, 1776, 1601, 
            2542, 1777, 1602}], 
           
           Line3DBox[{1604, 2178, 2388, 1603, 2179, 2389, 1605, 2180, 2390, 
            1606, 2181, 2391, 1607, 2182, 2392, 1608, 2183, 2393, 1609, 2184, 
            2394, 1610, 2185, 2395, 1611, 2186, 2396, 1612, 2187, 2397, 1613, 
            913, 1614, 2543, 1778, 1615, 2544, 1779, 1616, 2545, 1780, 1617, 
            2546, 1781, 1618}], 
           
           Line3DBox[{1620, 2188, 2398, 1619, 2189, 2399, 1621, 2190, 2400, 
            1622, 2191, 2401, 1623, 2192, 2402, 1624, 2193, 2403, 1625, 2194, 
            2404, 1626, 2195, 2405, 1627, 2196, 2406, 1628, 2197, 2407, 1629, 
            2198, 2408, 1630, 929, 1631, 2547, 1782, 1632, 2548, 1783, 1633, 
            2549, 1784, 1634}], 
           
           Line3DBox[{1636, 2199, 2409, 1635, 2200, 2410, 1637, 2201, 2411, 
            1638, 2202, 2412, 1639, 2203, 2413, 1640, 2204, 2414, 1641, 2205, 
            2415, 1642, 2206, 2416, 1643, 2207, 2417, 1644, 2208, 2418, 1645, 
            2209, 2419, 1646, 2210, 2420, 1647, 945, 1648, 2550, 1785, 1649, 
            2551, 1786, 1650}], 
           
           Line3DBox[{1652, 2211, 2421, 1651, 2212, 2422, 1653, 2213, 2423, 
            1654, 2214, 2424, 1655, 2215, 2425, 1656, 2216, 2426, 1657, 2217, 
            2427, 1658, 2218, 2428, 1659, 2219, 2429, 1660, 2220, 2430, 1661, 
            2221, 2431, 1662, 2222, 2432, 1663, 2223, 2433, 1664, 961, 1665, 
            2552, 1787, 1666}], 
           
           Line3DBox[{1668, 2224, 2434, 1667, 2225, 2435, 1669, 2226, 2436, 
            1670, 2227, 2437, 1671, 2228, 2438, 1672, 2229, 2439, 1673, 2230, 
            2440, 1674, 2231, 2441, 1675, 2232, 2442, 1676, 2233, 2443, 1677, 
            2234, 2444, 1678, 2235, 2445, 1679, 2236, 2446, 1680, 2237, 2447, 
            1681, 977, 1682}], 
           
           Line3DBox[{1789, 1218, 1788, 2658, 2028, 1790, 2659, 2029, 1791, 
            2660, 2030, 1792, 2661, 2031, 1793, 2662, 2032, 1794, 2663, 2033, 
            1795, 2664, 2034, 1796, 2665, 2035, 1797, 2666, 2036, 1798, 2667, 
            2037, 1799, 2668, 2038, 1800, 2669, 2039, 1801, 2670, 2040, 1802, 
            2671, 2041, 1803}], 
           
           Line3DBox[{1805, 2238, 2553, 1804, 1234, 1806, 2672, 2042, 1807, 
            2673, 2043, 1808, 2674, 2044, 1809, 2675, 2045, 1810, 2676, 2046, 
            1811, 2677, 2047, 1812, 2678, 2048, 1813, 2679, 2049, 1814, 2680, 
            2050, 1815, 2681, 2051, 1816, 2682, 2052, 1817, 2683, 2053, 1818, 
            2684, 2054, 1819}], 
           
           Line3DBox[{1821, 2239, 2554, 1820, 2240, 2555, 1822, 1250, 1823, 
            2685, 2055, 1824, 2686, 2056, 1825, 2687, 2057, 1826, 2688, 2058, 
            1827, 2689, 2059, 1828, 2690, 2060, 1829, 2691, 2061, 1830, 2692, 
            2062, 1831, 2693, 2063, 1832, 2694, 2064, 1833, 2695, 2065, 1834, 
            2696, 2066, 1835}], 
           
           Line3DBox[{1837, 2241, 2556, 1836, 2242, 2557, 1838, 2243, 2558, 
            1839, 1266, 1840, 2697, 2067, 1841, 2698, 2068, 1842, 2699, 2069, 
            1843, 2700, 2070, 1844, 2701, 2071, 1845, 2702, 2072, 1846, 2703, 
            2073, 1847, 2704, 2074, 1848, 2705, 2075, 1849, 2706, 2076, 1850, 
            2707, 2077, 1851}], 
           
           Line3DBox[{1853, 2244, 2559, 1852, 2245, 2560, 1854, 2246, 2561, 
            1855, 2247, 2562, 1856, 1282, 1857, 2708, 2078, 1858, 2709, 2079, 
            1859, 2710, 2080, 1860, 2711, 2081, 1861, 2712, 2082, 1862, 2713, 
            2083, 1863, 2714, 2084, 1864, 2715, 2085, 1865, 2716, 2086, 1866, 
            2717, 2087, 1867}], 
           
           Line3DBox[{1869, 2248, 2563, 1868, 2249, 2564, 1870, 2250, 2565, 
            1871, 2251, 2566, 1872, 2252, 2567, 1873, 1298, 1874, 2718, 2088, 
            1875, 2719, 2089, 1876, 2720, 2090, 1877, 2721, 2091, 1878, 2722, 
            2092, 1879, 2723, 2093, 1880, 2724, 2094, 1881, 2725, 2095, 1882, 
            2726, 2096, 1883}], 
           
           Line3DBox[{1885, 2253, 2568, 1884, 2254, 2569, 1886, 2255, 2570, 
            1887, 2256, 2571, 1888, 2257, 2572, 1889, 2258, 2573, 1890, 1314, 
            1891, 2727, 2097, 1892, 2728, 2098, 1893, 2729, 2099, 1894, 2730, 
            2100, 1895, 2731, 2101, 1896, 2732, 2102, 1897, 2733, 2103, 1898, 
            2734, 2104, 1899}], 
           
           Line3DBox[{1901, 2259, 2574, 1900, 2260, 2575, 1902, 2261, 2576, 
            1903, 2262, 2577, 1904, 2263, 2578, 1905, 2264, 2579, 1906, 2265, 
            2580, 1907, 1330, 1908, 2735, 2105, 1909, 2736, 2106, 1910, 2737, 
            2107, 1911, 2738, 2108, 1912, 2739, 2109, 1913, 2740, 2110, 1914, 
            2741, 2111, 1915}], 
           
           Line3DBox[{1917, 2266, 2581, 1916, 2267, 2582, 1918, 2268, 2583, 
            1919, 2269, 2584, 1920, 2270, 2585, 1921, 2271, 2586, 1922, 2272, 
            2587, 1923, 2273, 2588, 1924, 1346, 1925, 2742, 2112, 1926, 2743, 
            2113, 1927, 2744, 2114, 1928, 2745, 2115, 1929, 2746, 2116, 1930, 
            2747, 2117, 1931}], 
           
           Line3DBox[{1933, 2274, 2589, 1932, 2275, 2590, 1934, 2276, 2591, 
            1935, 2277, 2592, 1936, 2278, 2593, 1937, 2279, 2594, 1938, 2280, 
            2595, 1939, 2281, 2596, 1940, 2282, 2597, 1941, 1362, 1942, 2748, 
            2118, 1943, 2749, 2119, 1944, 2750, 2120, 1945, 2751, 2121, 1946, 
            2752, 2122, 1947}], 
           
           Line3DBox[{1949, 2283, 2598, 1948, 2284, 2599, 1950, 2285, 2600, 
            1951, 2286, 2601, 1952, 2287, 2602, 1953, 2288, 2603, 1954, 2289, 
            2604, 1955, 2290, 2605, 1956, 2291, 2606, 1957, 2292, 2607, 1958, 
            1378, 1959, 2753, 2123, 1960, 2754, 2124, 1961, 2755, 2125, 1962, 
            2756, 2126, 1963}], 
           
           Line3DBox[{1965, 2293, 2608, 1964, 2294, 2609, 1966, 2295, 2610, 
            1967, 2296, 2611, 1968, 2297, 2612, 1969, 2298, 2613, 1970, 2299, 
            2614, 1971, 2300, 2615, 1972, 2301, 2616, 1973, 2302, 2617, 1974, 
            2303, 2618, 1975, 1394, 1976, 2757, 2127, 1977, 2758, 2128, 1978, 
            2759, 2129, 1979}], 
           
           Line3DBox[{1981, 2304, 2619, 1980, 2305, 2620, 1982, 2306, 2621, 
            1983, 2307, 2622, 1984, 2308, 2623, 1985, 2309, 2624, 1986, 2310, 
            2625, 1987, 2311, 2626, 1988, 2312, 2627, 1989, 2313, 2628, 1990, 
            2314, 2629, 1991, 2315, 2630, 1992, 1410, 1993, 2760, 2130, 1994, 
            2761, 2131, 1995}], 
           
           Line3DBox[{1997, 2316, 2631, 1996, 2317, 2632, 1998, 2318, 2633, 
            1999, 2319, 2634, 2000, 2320, 2635, 2001, 2321, 2636, 2002, 2322, 
            2637, 2003, 2323, 2638, 2004, 2324, 2639, 2005, 2325, 2640, 2006, 
            2326, 2641, 2007, 2327, 2642, 2008, 2328, 2643, 2009, 1426, 2010, 
            2762, 2132, 2011}], 
           
           Line3DBox[{2013, 2329, 2644, 2012, 2330, 2645, 2014, 2331, 2646, 
            2015, 2332, 2647, 2016, 2333, 2648, 2017, 2334, 2649, 2018, 2335, 
            2650, 2019, 2336, 2651, 2020, 2337, 2652, 2021, 2338, 2653, 2022, 
            2339, 2654, 2023, 2340, 2655, 2024, 2341, 2656, 2025, 2342, 2657, 
            2026, 1442, 2027}]}, {
           GrayLevel[0.2], 
           
           Line3DBox[{513, 753, 514, 2343, 768, 543, 2344, 783, 558, 2346, 
            798, 573, 2349, 813, 588, 2353, 828, 603, 2358, 843, 618, 2364, 
            858, 633, 2371, 873, 648, 2379, 888, 663, 2388, 903, 678, 2398, 
            918, 693, 2409, 933, 708, 2421, 948, 723, 2434, 963, 738}], 
           
           Line3DBox[{515, 754, 2448, 516, 769, 544, 2345, 784, 559, 2347, 
            799, 574, 2350, 814, 589, 2354, 829, 604, 2359, 844, 619, 2365, 
            859, 634, 2372, 874, 649, 2380, 889, 664, 2389, 904, 679, 2399, 
            919, 694, 2410, 934, 709, 2422, 949, 724, 2435, 964, 739}], 
           
           Line3DBox[{517, 755, 2449, 518, 770, 2462, 545, 785, 560, 2348, 
            800, 575, 2351, 815, 590, 2355, 830, 605, 2360, 845, 620, 2366, 
            860, 635, 2373, 875, 650, 2381, 890, 665, 2390, 905, 680, 2400, 
            920, 695, 2411, 935, 710, 2423, 950, 725, 2436, 965, 740}], 
           
           Line3DBox[{519, 756, 2450, 520, 771, 2463, 546, 786, 2475, 561, 
            801, 576, 2352, 816, 591, 2356, 831, 606, 2361, 846, 621, 2367, 
            861, 636, 2374, 876, 651, 2382, 891, 666, 2391, 906, 681, 2401, 
            921, 696, 2412, 936, 711, 2424, 951, 726, 2437, 966, 741}], 
           
           Line3DBox[{521, 757, 2451, 522, 772, 2464, 547, 787, 2476, 562, 
            802, 2487, 577, 817, 592, 2357, 832, 607, 2362, 847, 622, 2368, 
            862, 637, 2375, 877, 652, 2383, 892, 667, 2392, 907, 682, 2402, 
            922, 697, 2413, 937, 712, 2425, 952, 727, 2438, 967, 742}], 
           
           Line3DBox[{523, 758, 2452, 524, 773, 2465, 548, 788, 2477, 563, 
            803, 2488, 578, 818, 2498, 593, 833, 608, 2363, 848, 623, 2369, 
            863, 638, 2376, 878, 653, 2384, 893, 668, 2393, 908, 683, 2403, 
            923, 698, 2414, 938, 713, 2426, 953, 728, 2439, 968, 743}], 
           
           Line3DBox[{525, 759, 2453, 526, 774, 2466, 549, 789, 2478, 564, 
            804, 2489, 579, 819, 2499, 594, 834, 2508, 609, 849, 624, 2370, 
            864, 639, 2377, 879, 654, 2385, 894, 669, 2394, 909, 684, 2404, 
            924, 699, 2415, 939, 714, 2427, 954, 729, 2440, 969, 744}], 
           
           Line3DBox[{527, 760, 2454, 528, 775, 2467, 550, 790, 2479, 565, 
            805, 2490, 580, 820, 2500, 595, 835, 2509, 610, 850, 2517, 625, 
            865, 640, 2378, 880, 655, 2386, 895, 670, 2395, 910, 685, 2405, 
            925, 700, 2416, 940, 715, 2428, 955, 730, 2441, 970, 745}], 
           
           Line3DBox[{529, 761, 2455, 530, 776, 2468, 551, 791, 2480, 566, 
            806, 2491, 581, 821, 2501, 596, 836, 2510, 611, 851, 2518, 626, 
            866, 2525, 641, 881, 656, 2387, 896, 671, 2396, 911, 686, 2406, 
            926, 701, 2417, 941, 716, 2429, 956, 731, 2442, 971, 746}], 
           
           Line3DBox[{531, 762, 2456, 532, 777, 2469, 552, 792, 2481, 567, 
            807, 2492, 582, 822, 2502, 597, 837, 2511, 612, 852, 2519, 627, 
            867, 2526, 642, 882, 2532, 657, 897, 672, 2397, 912, 687, 2407, 
            927, 702, 2418, 942, 717, 2430, 957, 732, 2443, 972, 747}], 
           
           Line3DBox[{533, 763, 2457, 534, 778, 2470, 553, 793, 2482, 568, 
            808, 2493, 583, 823, 2503, 598, 838, 2512, 613, 853, 2520, 628, 
            868, 2527, 643, 883, 2533, 658, 898, 2538, 673, 913, 688, 2408, 
            928, 703, 2419, 943, 718, 2431, 958, 733, 2444, 973, 748}], 
           
           Line3DBox[{535, 764, 2458, 536, 779, 2471, 554, 794, 2483, 569, 
            809, 2494, 584, 824, 2504, 599, 839, 2513, 614, 854, 2521, 629, 
            869, 2528, 644, 884, 2534, 659, 899, 2539, 674, 914, 2543, 689, 
            929, 704, 2420, 944, 719, 2432, 959, 734, 2445, 974, 749}], 
           Line3DBox[{537, 765, 2459, 538, 780, 2472, 555, 795, 2484, 570, 
            810, 2495, 585, 825, 2505, 600, 840, 2514, 615, 855, 2522, 630, 
            870, 2529, 645, 885, 2535, 660, 900, 2540, 675, 915, 2544, 690, 
            930, 2547, 705, 945, 720, 2433, 960, 735, 2446, 975, 750}], 
           
           Line3DBox[{539, 766, 2460, 540, 781, 2473, 556, 796, 2485, 571, 
            811, 2496, 586, 826, 2506, 601, 841, 2515, 616, 856, 2523, 631, 
            871, 2530, 646, 886, 2536, 661, 901, 2541, 676, 916, 2545, 691, 
            931, 2548, 706, 946, 2550, 721, 961, 736, 2447, 976, 751}], 
           
           Line3DBox[{541, 767, 2461, 542, 782, 2474, 557, 797, 2486, 572, 
            812, 2497, 587, 827, 2507, 602, 842, 2516, 617, 857, 2524, 632, 
            872, 2531, 647, 887, 2537, 662, 902, 2542, 677, 917, 2546, 692, 
            932, 2549, 707, 947, 2551, 722, 962, 2552, 737, 977, 752}], 
           
           Line3DBox[{978, 1218, 979, 2553, 1233, 1008, 2554, 1248, 1023, 
            2556, 1263, 1038, 2559, 1278, 1053, 2563, 1293, 1068, 2568, 1308, 
            1083, 2574, 1323, 1098, 2581, 1338, 1113, 2589, 1353, 1128, 2598, 
            1368, 1143, 2608, 1383, 1158, 2619, 1398, 1173, 2631, 1413, 1188, 
            2644, 1428, 1203}], 
           
           Line3DBox[{980, 1219, 2658, 981, 1234, 1009, 2555, 1249, 1024, 
            2557, 1264, 1039, 2560, 1279, 1054, 2564, 1294, 1069, 2569, 1309, 
            1084, 2575, 1324, 1099, 2582, 1339, 1114, 2590, 1354, 1129, 2599, 
            1369, 1144, 2609, 1384, 1159, 2620, 1399, 1174, 2632, 1414, 1189, 
            2645, 1429, 1204}], 
           
           Line3DBox[{982, 1220, 2659, 983, 1235, 2672, 1010, 1250, 1025, 
            2558, 1265, 1040, 2561, 1280, 1055, 2565, 1295, 1070, 2570, 1310, 
            1085, 2576, 1325, 1100, 2583, 1340, 1115, 2591, 1355, 1130, 2600, 
            1370, 1145, 2610, 1385, 1160, 2621, 1400, 1175, 2633, 1415, 1190, 
            2646, 1430, 1205}], 
           
           Line3DBox[{984, 1221, 2660, 985, 1236, 2673, 1011, 1251, 2685, 
            1026, 1266, 1041, 2562, 1281, 1056, 2566, 1296, 1071, 2571, 1311, 
            1086, 2577, 1326, 1101, 2584, 1341, 1116, 2592, 1356, 1131, 2601, 
            1371, 1146, 2611, 1386, 1161, 2622, 1401, 1176, 2634, 1416, 1191, 
            2647, 1431, 1206}], 
           
           Line3DBox[{986, 1222, 2661, 987, 1237, 2674, 1012, 1252, 2686, 
            1027, 1267, 2697, 1042, 1282, 1057, 2567, 1297, 1072, 2572, 1312, 
            1087, 2578, 1327, 1102, 2585, 1342, 1117, 2593, 1357, 1132, 2602, 
            1372, 1147, 2612, 1387, 1162, 2623, 1402, 1177, 2635, 1417, 1192, 
            2648, 1432, 1207}], 
           
           Line3DBox[{988, 1223, 2662, 989, 1238, 2675, 1013, 1253, 2687, 
            1028, 1268, 2698, 1043, 1283, 2708, 1058, 1298, 1073, 2573, 1313, 
            1088, 2579, 1328, 1103, 2586, 1343, 1118, 2594, 1358, 1133, 2603, 
            1373, 1148, 2613, 1388, 1163, 2624, 1403, 1178, 2636, 1418, 1193, 
            2649, 1433, 1208}], 
           
           Line3DBox[{990, 1224, 2663, 991, 1239, 2676, 1014, 1254, 2688, 
            1029, 1269, 2699, 1044, 1284, 2709, 1059, 1299, 2718, 1074, 1314, 
            1089, 2580, 1329, 1104, 2587, 1344, 1119, 2595, 1359, 1134, 2604, 
            1374, 1149, 2614, 1389, 1164, 2625, 1404, 1179, 2637, 1419, 1194, 
            2650, 1434, 1209}], 
           
           Line3DBox[{992, 1225, 2664, 993, 1240, 2677, 1015, 1255, 2689, 
            1030, 1270, 2700, 1045, 1285, 2710, 1060, 1300, 2719, 1075, 1315, 
            2727, 1090, 1330, 1105, 2588, 1345, 1120, 2596, 1360, 1135, 2605, 
            1375, 1150, 2615, 1390, 1165, 2626, 1405, 1180, 2638, 1420, 1195, 
            2651, 1435, 1210}], 
           
           Line3DBox[{994, 1226, 2665, 995, 1241, 2678, 1016, 1256, 2690, 
            1031, 1271, 2701, 1046, 1286, 2711, 1061, 1301, 2720, 1076, 1316, 
            2728, 1091, 1331, 2735, 1106, 1346, 1121, 2597, 1361, 1136, 2606, 
            1376, 1151, 2616, 1391, 1166, 2627, 1406, 1181, 2639, 1421, 1196, 
            2652, 1436, 1211}], 
           
           Line3DBox[{996, 1227, 2666, 997, 1242, 2679, 1017, 1257, 2691, 
            1032, 1272, 2702, 1047, 1287, 2712, 1062, 1302, 2721, 1077, 1317, 
            2729, 1092, 1332, 2736, 1107, 1347, 2742, 1122, 1362, 1137, 2607, 
            1377, 1152, 2617, 1392, 1167, 2628, 1407, 1182, 2640, 1422, 1197, 
            2653, 1437, 1212}], 
           
           Line3DBox[{998, 1228, 2667, 999, 1243, 2680, 1018, 1258, 2692, 
            1033, 1273, 2703, 1048, 1288, 2713, 1063, 1303, 2722, 1078, 1318, 
            2730, 1093, 1333, 2737, 1108, 1348, 2743, 1123, 1363, 2748, 1138, 
            1378, 1153, 2618, 1393, 1168, 2629, 1408, 1183, 2641, 1423, 1198, 
            2654, 1438, 1213}], 
           
           Line3DBox[{1000, 1229, 2668, 1001, 1244, 2681, 1019, 1259, 2693, 
            1034, 1274, 2704, 1049, 1289, 2714, 1064, 1304, 2723, 1079, 1319, 
            2731, 1094, 1334, 2738, 1109, 1349, 2744, 1124, 1364, 2749, 1139, 
            1379, 2753, 1154, 1394, 1169, 2630, 1409, 1184, 2642, 1424, 1199, 
            2655, 1439, 1214}], 
           
           Line3DBox[{1002, 1230, 2669, 1003, 1245, 2682, 1020, 1260, 2694, 
            1035, 1275, 2705, 1050, 1290, 2715, 1065, 1305, 2724, 1080, 1320, 
            2732, 1095, 1335, 2739, 1110, 1350, 2745, 1125, 1365, 2750, 1140, 
            1380, 2754, 1155, 1395, 2757, 1170, 1410, 1185, 2643, 1425, 1200, 
            2656, 1440, 1215}], 
           
           Line3DBox[{1004, 1231, 2670, 1005, 1246, 2683, 1021, 1261, 2695, 
            1036, 1276, 2706, 1051, 1291, 2716, 1066, 1306, 2725, 1081, 1321, 
            2733, 1096, 1336, 2740, 1111, 1351, 2746, 1126, 1366, 2751, 1141, 
            1381, 2755, 1156, 1396, 2758, 1171, 1411, 2760, 1186, 1426, 1201, 
            2657, 1441, 1216}], 
           
           Line3DBox[{1006, 1232, 2671, 1007, 1247, 2684, 1022, 1262, 2696, 
            1037, 1277, 2707, 1052, 1292, 2717, 1067, 1307, 2726, 1082, 1322, 
            2734, 1097, 1337, 2741, 1112, 1352, 2747, 1127, 1367, 2752, 1142, 
            1382, 2756, 1157, 1397, 2759, 1172, 1412, 2761, 1187, 1427, 2762, 
            1202, 1442, 1217}]}, {}, {}, {}, {}, {}}}, 
        VertexNormals -> CompressedData["
1:eJztyEENwCAABLAL++ECJfMwCSS88YkaJEwBBkj7bOvzGyXJqsmTk/167733
3nvvvffee++9995777333nvvvffee++9995777333nvvvffee++999577733
3nvvvffee++9995777333nvvvffee++9995777333nvvvffee++999577733
3nvvvffee++9995777333nvvvffee++9995777333nvvvffee++999577733
3nvvvffee++9995777333nvvvffe3/o/oWPITQ==
         "]], {}, {{}, {}}}, Axes -> True, AxesLabel -> {None, None, None}, 
      BoxRatios -> {1, 1, 0.4}, DisplayFunction -> Identity, FaceGridsStyle -> 
      Automatic, ImageSize -> {180., 166.74088966451538`}, 
      Method -> {"DefaultBoundaryStyle" -> Directive[
          GrayLevel[0.3]], 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "RotationControl" -> "Globe"}, PlotRange -> {Full, Full, All}, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, SphericalRegion -> True, 
      Ticks -> {Automatic, Automatic, Automatic}, ViewAngle -> 
      0.42769327351158737`, 
      ViewPoint -> {1.2190767254928032`, -2.386926550873013, 
       2.0655346954479388`}, 
      ViewVertical -> {-0.27764556139167307`, 0.5436241611043211, 
       0.7920768357319421}], 
     FormBox[
      FormBox[
       TemplateBox[{"1", "16"}, "SwatchLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30100577`", ",", "0.22414668499999998`", ",", 
                    "0.090484535`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19699838300000003`", ",", "0.252204821`", ",", 
                    "0.33320940200000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               Graphics3DBox[
                SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                  DirectedInfinity[1]}, 
                PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
                0]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     Graphics3DBox[{
       GraphicsComplex3DBox[CompressedData["
1:eJzt3V/SXUmVHfCLaNsqwEWBCjUIUf50S6hVolBrBn3H0CP4whF+9hTuUL6h
3GePQkNwgylM01D9ULlWxPltMqTwg59aLzfOVn7nzz6ZO9dee2WeF//9f/7z
/3h0Op3+1w9Op++f8u9//9Pf/j1d/vbxY+w5/gx7jj/HnuOfY8/xc+w5vsOe
4zP2HL/EnuNX2HP8GnuO32DP8dfYc/wWe47fYfc4/t396u/YP+PX9/Q59p/z
e6Ldc+x3/J5od8b+kt8T7V5hf83viXZvsH/N74l2b7G/4/dEO/2qf+3ftrO/
+/efY4/ffo79jv/3/d1hz9+fscdvL7G/5v9jP/P/sefv32CP377G/o7/j/0N
/x+742fXj3d+37UzDn2OPX78Ofbn/H5GuzvsOe8Ze/z4Evsrfj+j3WvsOe8b
7PHj19jf8vsZ7d5hN67leYwXxmv7pf6yv3pe473Xe47d8eH7PGPPc73EHj+8
wh5/vcYef73Bnut9jT3Xe4s913uH3flmF5f1k+Pffuk86vvbzQPOt44Px43x
I/b45SX2+PEV9vjlNfb48Q32nPdr7LmPt9hz3nfYxQGOf/uj8Vf/Gkd8b8Z1
39MuDol3vL8z9jz/S+x5/lfY49/X2L/m/2N/xf/Hnr9/iz339w67+GyHM3bz
4i6O7+LObpzs3uvuPsShZ+x5zpfY45dX2OPH19jf8HtHu6+x57xvsec+3mHP
ffsc+bV/iSdidz6L3Xgau+M5dvtT7D5P7O84zq94P3ZxZezio9idJ2N3Pond
uBW74y92+9EON/sc4jNxg3mO85NxU5zn+LTfOM+dse/yAPMt8ZG4SfzofOI8
43zu+HNcGl/FZ/YX8bH9SJznfTk+nYeMj+Y/jnP7n7jefrDDoea7Pr/ztvOD
8cw4J55y/vf65oG7vGWHsx3H4i1xwG7e2sVZeYEz9h2ut9/snlNc6Py8mzec
/8VT4izxuPON7998z3zbeCne1V/iQsel/c550fcsTjeuOd6Md77X3Tws36O/
xK3mx+Zznk9ew+uYP5vXyUM5X+3i6Hn9Or53/c74t5tXzJOMXztcYz/Y+UUe
QX5ilzfL35g/+z7lL3zP5uE+t3FRvLAbx+f1a3wVFxi/nKd3ONH46PzkOLf/
Of71o3yn/vX/5el2vNKOB9nl7bs8c5cX7XD8DnfucNJuXt/NQ7u4uRvnu365
86O8s7/+nePDcaP/nU+cZ/S/+Etcpv93+Yp5pLhT/8u7OO/qf3lK447+l9f/
kN+NN/L/vmfnZ/lQ4494Vj7I+GP+Zz68y6+MP+bP4kvjj/yU86vxR/73Q/Hl
Q3UVzyvekYd2XNoP5O2cf82n5Tmcf3f5h7ySeZTzrzyKONX51373oXlUnt7+
u6uf+L4db57X+cfr7fhieSPxp/mS/NGOLxB/yjeZj4k/5bE+hBcd9/pj1093
dRLH4a7f7J5TvkceznlPfCSvKk7c5RO+Z/Nvx41x8UN5kTyi8VXcJu9uf9zV
Q4yPzk+7+p/9zOcXb8r/i1OMv/KtO/5rF+ccT7v833nJ/M38RB7X59v1u13d
w3lLPtL46LgVZ9g/vG/jrPy/uHKXHzhvf4jnMs45/zvv2S/M03bjWNz8ofrG
mecQzzlvGU+dzxy39ifHs/dt/rTLA3Z8rrjJ+WQ3zzsfGv+Mi45v+4v96EN1
jF19aVf329Vjd3XynX5hpyv52LqFeVvs5t+xy3PELu9zpt2Of93x4h9br9iN
Y/uL8d15z/jn+HGeMH7t6nM7XY98g/y/ebb8nHyuvJd8tnyW/IXv336xq0s4
/xjHxRGOV+Or+Ml5fVeH3sW1nX5n5xf5Tvl/eRH7sX/n+3E8Oc7kNT5Uf9jh
MvGF85XzmPFyp7cQ7zqv7/KkXb3T/mq80C/yf/prx3cbtxx/vk/f867OYD6x
y3t3edpOV7TDkTvcs5und3qcXRzZ9fvdezLeOw/IO8qPOm7k6T5UT9jl2eZz
O/2c/IV4YYfjxAvmN+KkXf1+Fyfsj86fjhPfn3yz/L88se/H97arG8gP7XSi
O95B/kNcbP5hvii+F6/t9DW7eVc8Ynw3Hhi/7d/6z/7uOJB3/lB9YMebysfJ
J8n7yEeYf5v3mo+Zr4j7P6RHEfc4HzsfGveNR8YP+73vQ3/7HvL7LTz0t/zG
7/+yjv/L5dg+x/lN+//63e/102P7HNe+2l8/WcdPOP8T7Dn/z777vT09ts9x
7av9ZbW/PuN+nmHP/fxy/d0Xx/Y5rn21v/1qHb/g/l9gPx2P35+P7XNc+2p/
9+W6Drg1xzdw+WUdP4CzcvwAHr3/h+9+r+CCHF/BSdfV/p55LMf34IOH36z7
Iu7m+MK8dVt/f0ecyPEd8fr9P67jb49x+vrjZU//TLz45tgfa/8L/S72v1/3
9fRov61+0P6T66540n6y7Jf8/YujffSHZX+/3tON/O326+9+H8gHHtbf933l
fla7e/Dc/fLjBfxxWf68Yz67y99/e8Qd1zxH/Jz4+731/59i/z1+jv0X6/me
Hu2XNb7q51x3ta+fl/22xnv9/NnxuH5e9rvVn2/kwxf9vOz3azzWz7mf1f4e
PP2w/HkBz91+u64Pnni/xkv9vOat2+qH9fOyJ17Vz8t++W/r+MnRfvrP63xP
sf/5GBdr/0/rfF8c7dcfreMXtNfPy/5++aV+znMtv9TPy/6w/FI/57qr/T35
wP263gX8mnh4B966y/Xi54zbPEf8vOzXjPdPj/ZbcMKTo/30g/X/T7H/AT/H
vq5XP+e6P1zHL2ivn5f9bvWf+jnPpZ+X/X71z/o5113nuScfe/jyeL76Yd3H
HXj3/Rpf9fPy1y39M35e9mvm60+P9kv6/5Oj/bTa1c85T3DIM9qvuFQ/x/4n
5u3Y9fOyv1/PWT/nuda4rp+X/WH5sX7OfTpvLvv9+vsL+dtl+fOOfOAu9xc/
L5x6yXPEz8ueeap+XvZb+v+To/30k/X/T4/26+rn9XPaf39d/wvsf8TPsevn
Zb9b/bN+znPp52W/X/22fs59frX+Hz7iYfnzQj6cebZ+Xvb3q//Xz2fs8fP5
eJ76+Xy8bv18Pt5n/XzmuZ4d7fFD/bzs8Vv9fD4e18/5/eMRV9a+3uMDfF/f
u/zU6if38CnpVxfy//TD+nnZ22/j58TxXCd+XvaMi/p52TOO6udlz7irn4Ob
M06fHe03/bzsiQP188vjcf0c+5/wc35XXHqAR2kck99az1k/xw8rTl7gUxJX
6+c8V+Jw/Lyu37gdPwePruepn5NXpP8/Odozj9TPwaOZd54d7c0LvjjaM6/V
z6+Ox/VzrrvmzZv593qe+jm/fzjmPbWvfl4/xw+Jx/BfwQn1c54rcTV+Xte5
475iD26pn5c9OKd+Tp627qN+XvbiqGdH+00/L3twWv38+nhcP+e6CwfWz2m/
cGP9HPuf8XN+Fy6tn+OH1T/r51x34d76Oc8VnBA/r/MVV8fPGf9rXNfPyx7c
Xj8nLqx4Xj9n/k5e8OxoTx5RPye/zfh6cbQPP+c+w3vAjyYPqp9z3eRN8kmr
ff2c398f8/LaV1yqn3Pd5H3x8/q75onxc/pZxvunR3vy0Pp52ZO31s/Br+f1
/8+O9pt+Xvb3xInyZfo59xkeCR4781T9nOsmL5DHXv2wfo79L/g5v98ceY5e
NzxG/Lz+v7xH/Bw8mvfz6dEeHqZ+TlxI/vv0aC8v9OxoT1yqn8PLJP6/ONqH
n3Ofq3/Wz7mfNa7r51w3eYF89bLXzznP4hXr57Rf82n9nN/wnPHzO9rFz++O
562f33EfT4723Hf9vOx5zvp52W/6ednrxxdH+/Bz7vOL4/l6P8+O1+91nx7v
t+d/wvPlPOv56+e0X/6q/+Sd/ZVX/us6ljcOT5f4Ez//27LLA//5yKPUz/+6
7Ksf1s9/Ouap9fP/Be+v3+Yz67h+Ds8oj/SHI86qn//Pspun/P44j9XPv1vn
T9y1H+d4+fcav8qLwuuXp1/zcfB//Rx78v70lzXfX+Xrlr18TOLl363fNd7r
52XXz9d1H4nz9fP3j+07nh6tdvp52YunEi/XPFdcFD8ve+ftxJfw1fDPjdfy
orGv6496iHWP2Jcf6+cVv8ofxM+xU78oTwc/d4r9/N1v/Ry+Sf552TMv188/
OJ6nfo6dekHrPfLPy36Ffy7OgH++LT9d4UWv8V/qO4lPaZ/+Zn3JOtJPl329
t9aLYl+/rQv9lOu/OLbTz7fwKcn3g/eXPXEgfr6kvfWatF/njZ9v8Mydr8KH
wz9f0h7+uXgaXrR+X/i8fo5dXjT25AvGaetysa9+VD9Th6mf4Uvq59QD4J/L
M8IjBWcUR8TPsa/29TN6lPo58w38c/NA+OdbeHx40fbXnC9+TvuF5+vntM/7
jJ8TJzKOrX9a54w98St+hn+qn1O/Wf6pn3N/yavi57TXz2kPz3/LfBNcBC4v
7xU/pz38c/kOeNH6fV2/fo5dXjT2Nb7rZ+p+9XPsa/4c9WTrxvB59XPqzfDP
nXeD9+PntJd/jh2ev/UM+Jhr5hv454t6lOXn9+s5bvCitzwfvOhD2i97/HyF
74mf72kfP184f/x75/1Yn7cOf3ds33p7+Gpw3QO8cevn6DdbJ6d9eS/O37o3
91M/53jdd/0cPgJetDwdvOg1dvi68BrtP/Fzzp9+ED+nvbwo9zn0DuoaYl/j
pX6OPeMrfo59jcf6OXb450vsa7zXz7HDP78P7oQXbX9df1c/i1Pj57SHr7tP
e/i68EfF//Fz2q94e6LfDz/nPnLf6kfUiYj74mfq5PUz8b5+pt5bP6c9/HN5
Z3jR4h540dZR1nPWz7FnPoqfY9fPOT88f3k6eVGuWz+jy6if4ZOHHkfdTewL
L9XP1BXr59iXP+tndezxc3AnvGjw6Ale9CHt09/i57Q/r/+Pn9MeHumS9uu3
fk77/P+LY7vh5/hp3Uf9nPltxYH6OfbgefVN6pjgmevntF/PUz+nPfxzeWd4
0fj9Ci9ang5eNHWU9Lv6Ofbzahc/5/yZx+PntJcX5Tz1MzqL+jl2+LrUz5qf
xi+xr/sbejF1YbE/WvcdP6tLj58zzuFF21/hRR/SPvln/Jz28HX3aQ9fl/pr
8X/8nPaJx/Ez7evn4Kzlz/oZPUv9nPbw/OGDqu+In2NPXV6eQ51d7PDP5Z3h
ReP3K7xo6yjwoun3J+rdqQue9HPOL65L+/P6jZ+x18/oJurn2Jc/62d0Q/Vz
7Lnv+BndXP0c+/LL0DOqw+V9qMsd/D/jR13uqAsQ79TljnoB85O63FFHAE+o
yx31BfCfutxRdwCvq8sd9Yj/R11uzqsud9Qv4C/U5Y66BnyTutxR74AfVJc7
6iDwuepyR30E/l1d7qib0F/V5Y56ijpSdLmjPohOVV3uqA+qg0WXO+qD6Gw/
Vpc76oPoftXljvogumJ1uaM+iG5ZXe6oD6ojRZc76t3oVNXljnq3Olh0uaPe
jc72Y3W5o96N7ldd7qh3oytWlzvq3eiW1eWOerc6UnS5Q7+BTlVd7tBvqINF
lzv0G+hsP1aXO/Qb6H7V5Q79BrpidblDv4FuWV3u0G+oI0WXO/RI6FTV5Q49
kjpYdLlDj4TO9mN1uUOPhO5XXe7QI6ErVpc79EjoltXlDj2SOlJ0uUNfh05V
Xe7Q16mDRZc79HXobD9Wlzv0deh+1eUOfR26YnW5Q1+Hblld7tDXqSNFlzv0
ouhU1eUOvag6WHS5Qy+KzvZjdblDL4ruV13u0IuiK1aXO/Si6JbV5Q696Bk7
utyhfz4fr6sud+ifcx71z2mv/jl29c+xb3S5Q/+87EP/vOxD/5z7VFew7EP/
vOxD/7zsQ/+sjhRd7tDzo1NVlzv0/Opg0eUOPT8624/V5Q49P7pfdblDz4+u
WF3u0POjW1aX2ziMLnesT0F3qi53rE+Bh1SXO9angG/U5Y71KR/Q5Y71KfhF
Xe5Yn4KuWF3uWJ+Cblld7lifoo4UXe5Yb4VOVV1ucJG63LHeCt2sutyx3uoD
utyx3grdr7rcsd4KPkldbnCsutyx3kqdM7rcsX4Q3am63LF+EF2rutyxfhDd
rLrcsX7wA7rcsX4Q3a+63LF+EF2xutyxfhDdsrrcsX5QHSm63LEeFp2qutyx
HlYdLLrcsR4Wne3H6nLHelh0v+pyywOgyx3rYdEhq8sd62HVOaPLHevl0Z2q
yx3r39G1qssd69nRzarLHevTP6DLHevN0f2qyx3rx9EVq8sd68HRLavLHeu7
1ZGiy62eA11uj9Hl5lhdbvV26HLLR6PL7fFH6nKr50CXe9PP6oTR5eZYXW6O
1eXmWF3u4Jn1N7rc4Jyhy6WeUl2u/PCfj/OtutzoEYYuFxxXXW7yqvOy//Fo
V5d7kkeKLjd5gbpcdAWdh8I/ocvNvD90ueFH0eW23qUul/57jX6IOmyup04m
utzqNdTlZt5Gl3vRz9Hl4ufocq/os6rLTf6KLjf6vqHLDU+GLre4SF1u+EV0
uX0P6nKtj6QeDC9q/Bi6XHjR6nKtXyTuU78ongPHVZern4Oz9XPsa14eutzk
zepyqVt1Hkr9AV1uxsHQ5YY3RZd7IW+oLhZ+I7rc9jd1ucTj6HIzXoYuF11B
dLkX/Zz2+Dm63Ohkhy4XXUF0uVfqg9Xlho9Bl9u8VV3uGmfqcvse1OXmeuhy
o4caulz9HDu8qPOhutzkX0OXC447wUsNXa5+jv3Rd79Dl5v6lbrc5behyw0/
hC73BP/cvDo8K7rc6sXU5Wb+Qpd7QcdYXS686E29hrpc8EV0uRf9DM+nLjf9
behyU/9Bl9t5WF1u6nLocq/cV3W54RfR5V7hn8sfoVOLPuxq3Eh769Gxw4ve
yD/U5SbPHbpccNwJ3nToclMfRpcbHDR0uakvqctF91Ueh7pEdLkn+OfynuFZ
0eVe4UVv9CN1uX2f6nJZB3RP+6HLBT/feT/W58HL0eVe1W/kOVnX9gBvPHS5
6mRoP3S56r64n6HLzd+hyz3Bi7ZepZ9jZ91EdbnpP+hy09+GLhe9w4n7HLpc
8pLW2+CRqstNv1SXC//cOmjwJ7rcq/rntE98QJd7hRet7irvB11u46u63NTt
0eU2HqrLDf5Hl1t8qi5XP7OeYehyyf+iy73A81/hn9Tlti6vLjf8HLrcznfq
cqlbVg8NL9p6Vfq/utw1Xw9dbuZ3dLmnR+tYXS46ghPXHbpc/QyfPHS55NnV
5cI/tw7K+wwOzjgYutzEfXS5xXvqcrNuEl1u+5u63OS/6HKLV9Xlsq4tutyr
fub86nKDt4cul3Vt0eUWz6vLhc+ILvein9PeuJH28M/lSfNc6HKT7wxdbuKn
ulxwc3W5iT/gvODuoctFR3DiPEOXq5/jR3ik6nKDS9Tlwj/LJ6nLvcI/lw8N
LkWX23xcXW7mL3S55SfU5UYngi73Cl9XfiT4H13uVT/TXl3uhbhcXW7qJ+hy
y7eoy3UdUNqzTlPeTl1u+SJ1uemf6HLDDw1dbvq/ulzWtVWXK66LnXpK9QTo
CE7Yhy5XP4dvWP4culziRXW58M/VEeLf6HIzDoYu132Iw4uGz9vtn4terPwT
fEl5FPOh5OXko81TwZvNn8D72/V5wX3gqeIs42XmVearzmP2x8Qt4kHjBHxz
+y/8/tCVhrcL37bbj9i6Ynhf4n3nTdc3J18H71zRJ9UeHgK87/rUgU/Jd4t3
XP+Uv4fvuYD7RnyF77zs9PvE+50OuPxo8Mluf+fHHP/l6P/aw6O7vjn9GZ1O
8+DntM94Ae+7PnvgU3SaxXGvaJ/xAt/TPMb1JfEz6yEah97SPuMFvl/ddnmO
9LfdftmPOY5/iPflddQ9sc9H7eGP1ZWgV6ud/QkGPnV9JHqOgbPgezqvur6E
dZa1U78ceQl8vzr7zIcX/D94U/LI8k+syy8PBK5pfQx+pXWq50d76w/gfffn
GPj05dH+gP/H/M+6qM7D8JrlJ9A1lyd4S3v8v1sXUd4u8Xm3n7vr7/leVe30
/1EfA++oi6098wh4v3Ww89FefEq9qHHb9U/gzban/w9+Ar6z8w668gt8w24d
S/eTSr/d7Y//+Hjc+gB8SesA7g+UOhj6kdbBnh/trQ+D992faeBT6nLFobt1
k9RLm4e5Pjv9GV75PfFn8HPw/a472u1bMOyPN+3N4zfrBHa69p0Oe6cb3ulc
d7rMnY5wp3vb6bR2uqKdDman23CdWN5H39fu+w2Pj8d9758d7e0nn9MefX/b
px8+pz166LbfrIPsuHiJPePo1dHecfcae8bpm6O94/rro71x4C3tE0/g+8f3
NjJeWXc3eFPX38PX9jyxu76ZdRTuOzPWj8IftD3rfYc+wvvOPKLeDR1q7Zmn
3N+IfXRq5/tDtWc+he93HWbm487Xu++LPD4ed96n3lic4Ppm1qu0ffrzc9qz
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
W+K61NX8zsYazwPXpX5vnT187Jn2yc/Bdd1fU1yXfv/ocrQnHxTXZTyI6/Le
xXUZh+K61KHEdeFXxXV5L2fsiVfiuuAUcV38IK5LvwLXNZ6K66KPsb6c8SWu
S78E11XPKK5LO3Bdedoz7YPPXLceHCiuSzvXrWfcgOs6/4nr+A5D7eln4rrw
4X7HMjyAuI59xGtf/WzguswT56M9eejAdZl3XFeevxfX5TzguvL14rroSKzn
/u64bqP2+AtcV/+K6+IvcF39K64LngPXlWc+0z54DlwX/w5cFzwHrot/B64L
ngPXFefwPavqjr4F17EvdOtT3zu2D06rnir8UOps1tXyHazMd9+C6zjPDfzS
9QyZP9Dx1568+9sjrrtR77S+YB0uOKnPk+Mfc73gOr6f0vsOT5j1Nqkjcd3i
tPjhydF+4fuwbf8J953rRgf47RHXpS7S95U6CfXL2FPfKi5PO+pesbcOCq5L
/djvmFmPL46irhx75+1Pj/bwRbnP2JvHPz3ar8wb1XOib27dAd1tdZ7uU5D5
AN2l/NhYT04dtPpGv5uT+gf6eOsd7WfEm76P5EU8T89D/yn+oX6vbrDrl/I+
qPvGnjjl+pPwcq2Hp46EHr39AP109Yc8V+/nk+Nz9jyM3+CcB5439hv9MPb3
vEfxVeNG4rrrHDJP8h6v4IuOw+TDPG/PQ57Q+8m6V/WKxM/iJXQY98w/rqO7
UF+P/T317z4PdeXq66jLdjyjs6/uDj/0/ORFvU/6WZ8XnWivy/zVeifrGItn
8M9F3uXJ0d765dOj/R7/DBxFPv+Af6qLwz+9bvZvEdfx3bcL4/AKrsu8fy+u
Az/Iy8Vv1ZWhS20/Q+cR+wP6icZx9AexJz53vU3eB3X36tnwW++H/LnPtfDG
g7iOvK73ueyOK/OBXjf4DX1dv2P+6dFeXKe+zu/Apr3fgfV7ZV8c7cU5zIf6
reePPoZ13PfE5d5n3iPruPPe78G5nQdZx/1e/7KfT/2WeJ9+i76u+x09Pdo7
Llz/xvc4iguiuwKXOU6db8e6Dr9TnDiduMH665t5LONPXXLiWP0WXMb61eIa
vpfdeZL1h42L4te8B76X3XnG+S7XVf8RPIJ/en78U1zJ90p6n3wv2/jkfHhV
pxU/rXnW70RlXm4/yfyQ9Qjgced959v2k5yH7xA1jqojQdd3z3uOf9pPgluN
d8F9xOH2i8Q39XWJV+QZ4rqex/pe8D7zofv5FM9l3kAf0/uJbgzcmvHVuJ95
G91Y+3twNXmSONz5ynVifk+qeYzrRvgukHzZA+/RfYTan4PLWPfYPElcETzC
/TvfFlfET+icxH3FFekvG1zivNvx9OXxPs1Dbzzfjbxi5Lms67yCR82jO17I
u83P7rif9ovoeNXXhQdQX/eT4/20fXg/9HWZj4rDcl349PZHrlv//fh43b5/
8Kt1Dft78EbzsfT3Hx7PXzv8pv3LfncCd/U5Ur92PHGf7af4s+f73rF9+8Un
R3uvAy/XeV98k/nOffcy37muIPOC+nu+pyxf1+8NwtddOc/gV+DrbvAAjbes
i2jcc38Z9hmTr3vPPNe4Rxxv3OO6jVfwTu03XLfxCp164xX5fuMV+ubGK3Bq
4xL78jQusV9M45LfR0lcYn+NxiW/J5G45HcOEpfcp+m8jsG1Y36Gr7uCh3b9
puf3fcfO+6v9r/jx/Lfvv3EJfti6p3xd6k/yda3Xwtelrj/2+1h1Qfk6+0Hv
U70gemL5uiu8uuuXB18H7ux5GOfWW+Xr8rzOxyf7K7or+bqMF/k6x2/jtt/Z
Stw2D0ncdp8g6rnydVfjUdr/8Pi85hODr1MfEJ4pcQO+7uI8F/4AP3R+iX4Y
vs75o/ZvmCeCs9zHJ+3BtZ3n2fek86BxB52lfF33p4Wve08/6HXJ48qjMH91
no1+xf3X/u3oH/kD+bo8l3xdx5d83UZ/Y1yuHf+UBwKH9X5Yfy++k6+74Mfi
JvCD9Vb5gvjTfLj9EL7uxr5RPQ+8U/ERvFPP7/wU3Op3SnIeeKfm7fSr3g+8
U3EcvNPQDcLXFb/B18UuX3eD5+z4dp1YxrPrrPLeyLs6DlxflPncfVjS7zfz
0wWes/ejfiXPpZ4j5888yHhLvxrrtH93HKed31zvl/FN/i9Oka+7kje0v5MH
Fi/oN+bLwdcxX/Y+1fHkfoy/rquGr0sck69r3IOvu6MuU7xD3aE4jn7VeZV1
aMUXzndpL07Kddk/pe95M79e1AOl/TfEfcaZfF33oQWf3oHbOw/AR3T+dN1d
/G0/kTcljwmukK+7gm9cxypfd1EPlPMQf4tn3VcuuM/6ct4f6wmLF8Sr8at4
Ov1u4Ub5uuJM+Lor+KbtN/Nrxpd8XeKVfN0DfE3nc/uzdRL4uvQr+brmBfB1
J/iNvgf39WB9rnxd8xr4ujtxRfrvX8mLmDfkU5qXwdeNenDs4iT60eDrzOvI
Q+Xr8l7k65rnytehCzSPlq+7ofcyT5evc51nx0HiCXzdPXx7+1f4ZPCcurG+
zy+P123+xHX7nuFX+xzgS9eXydfdkbcUT8E/977g1fWTfN0V3FVcJo+NHlG+
7h5/9r747nz98Zujvff75vLvas5TnQ==
        "], {{{
           RGBColor[0.880722, 0.611041, 0.142051], 
           EdgeForm[None], 
           Specularity[
            GrayLevel[1], 3], 
           StyleBox[
            GraphicsGroup3DBox[{
              Polygon3DBox[CompressedData["
1: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
uy/WVmMpuxfWsshryKVct4oaG9k9uOYcL5/dm2uBy2X34JrhL7L7jNsZG19m
13Jf4+rJdbrm9h+i85Uy5/fRuVFZ8UfcrOB8+F10PlH+/CM6cyoH/RWdSZQb
/4zOlsqBz0T3Y5WHxyRnbz3v16pXVfD1vy6556b5pEpyX0734rLk+lE12aXJ
/T1d/0uSe24aA99GZxtl6UrJ/T3dr8rJPUDdxz3RuUsZ+3Nco+C177PoZ03Z
8oDkzKZ8cig/AwvOCf9EZypl4P2Ts5bWrH2Tc51y9yHJ/VvlBC0EypPKsSWS
c6ny7fXJvUGN1QOT86fWu4OT+9LKG99EZzzl/B3R2VJzw+7orKu6YFd0blSu
3hmdG5XDD0rOusok/0ZnYOXnv6NzoPL5f9EZWDm8tjJEwb2yG5L7nJq370yu
l9VnHphcR6tO6pdcL6ufOSC5jlbvqH9yfap+db3kWk99s7uS63H1pYfqWhfc
s+qbXBerp90ruabT3HVfch2tvuK9yXWu+o33JNe26hPentxXUf98SHJNrZ5Y
3eT6UX253sm1oXrafZLrOPW06yTXm+rXnZPc01Bvo1Ryn1/r8kXJvWLN4RWT
e7yawy9O7v1qPqmaXLOrT3hTcm9cvcTTkvcINF/dnNxDUB18Y3Jdr55qreT6
V33CM5L3CzRfnY4HFTxHXZi8Z6EMcEFyH15rd3mtowVngArJPXCtO2cn7zVo
TT8zeW9C89tZyXsTyhglk/cglDEC7lpw/bVfcn2hmu6T6HVBuat5cr9O2bVp
co9FvZYWeHPBdcEDybWz+k+DNV8UnPmv4WdewRlySnQeUwZoltzHU1bsWjyu
1KfpltzjUmbeFD2nKdO+Fp33lHVfjc6NyrcvR9dfqrOOK76PqrEe1LNXwufT
HX9acCY/Prlnpdrk6uT+pDLtVcn9TNUapZN7TaoXTk7uMSrnn5LcH1N9cXnx
PdVcVCO556kMXJOfNQVn3ROSe2Kqj07lZ0zB8+0tyf1SZeNXoutKrdEnJvcD
VXecn9wfU/1yXnI/TfPzuclzoMZqmeT+mGqWK5N7pKq/rkjunaomOim536ha
qRw/kwuu3com99lUB70UXc8qP7wRvRarHtwYvdYrg62OzgPad1iATy64xz4v
Ogeq9z49Omspn0+LzpDqbyyLrkG07zAjOlOpBzI1OtcpB86Pzlfad1gRXXdr
v2NVdJbQnsjH0Xnp//VRdM2onvni6JpRPfPnomtM5f0l0TWj+ucro7OK9kqW
R/dDtPexNLpnov2R+5P7e9q/mBmdD9UDnxudgbXXsDU6v6lu+jA6j6mW2RKd
r1SvrY3OPNpP2Rydc1RHfxSd8VTHvRidqVQTvx5dv6junh2daZWHP4jOeKrF
3ozOTqrd5kTncO0NPRudt7W3Mis6G2uPZlt0HlNduSY6U2lv6P3obKlM9xa+
quBach0uW/Ce0ejk/qf2XD6NzoSqVYcl9yG1B/FudE9YufcdfH7Befvt6H6v
svQifEjBOXlhcR9M9+W94n+7zmGv5D07Zaejk/f+lJFS8h6ics4LxfdU12oD
PqXgnN82uW+vvZgOyb137W+2S+7Va0/ttuT+vPba2if37bXXuT66B65a4Jjk
vUXlrmOT13HNIfsk72kqdxUl7zkqj8XkfUzlui/5nqsLrhd+id53UO76LXp/
U9ns9+K1W7no1+j9UOWxL6J77Krpfsa3FFzH/RS9B6Gc9lV0/1913NfF904Z
YHv0HoFqupycu5Q97k7u92rvbG/cvOAs2jF570P7y4fjbgXn6iOT+5nKn0ck
7/UoVx+WvNejGuGo5H1Y5dXOyfsm2muultzX1brWSuO+4P2mW5N7ttpr65Tc
n9dec6PkHrL2p1om78to/6tHcj9f++/1k/vG2psbkdyj1n5fw+Ses/aqRiX3
sbVveEdy/1l73F2S1yatI22S91+079ak+Dy1ZrVO3tPRHlxPPVcF7++PTO6f
a7+yQXKf+f/7gMk9be2XDU/u1Wvv8n8XPFci
               "]], 
              Polygon3DBox[CompressedData["
1:eJwtmgXUFlUXRl/v+I1jd3d3d3d3tyIKdnc3it0CJnaggKiIgGKgYoLd3f3b
7b+3z6zlUve6M/PNe+Oc5zxn5ux+8FYHlU6ncxn/Gp//nlN3Or/x3zFVp3P2
hJ3OHvDD8E3wz/BZ8M/wE/CZcG/4V/gp+Cz4T/h7+AOe9xt8NPwJPJTxY+Be
8E/waPgM+Fz4d/hpuDd8NvwL/CTcC74I/gd+Ab4APh/+E34WPhc+Hf4Bfgw+
DT4B/hIeAZ8InwR/DT8Enwz/AI+EB/N+38GnwN/Coxg/Ff6yq9PZAF4Gfhw+
mfFv4IfhU+Bu8EPwjfBP8Odcvx68FPwofDzjX8DD4RPgY+HP4GHwcfCF8N/w
8/D58AXwX/Bz8HnwefAf8DPwOfBR8Mfw/fDR8Jnwj/Dj8OnwMfCn8APwsfBx
8Ofwg/Dx8Be83/rw0vBj8JGMfwTfBx8F/834zvB68Fj4PXhVeCH4Yfhlrj8Q
7sl8jYNfgw+B94Vfhl+BD4L3hl+EX4UPhveBX4L3hV+D7+B5B8EvwvvDezH+
AnxYw7rBx8HrwAcw/iZ8F9cfCu8DvwrfDh8Ij4P3g/fk+ufhsfC+cHf4OXgm
+Gy4G9evBU/Zvs+O8NvwJO3928Cvwa/Dx8KHcv8r8BvwcfBh8KvwS/ABcI+S
+dkPfh2+k/sPhveH34AHwIfAO8JPwlfBe8IHwm/Bd8OHwVO087UD/Ba8K/wM
fB28N9wTfhm+Fd4f3g1+Fr4e3geevF2P7eE34T3hF+Gb4X3hneCn4KvhvTyP
rOeO8DpV5utExr+CR8InwQfD78CD4CPgneEx8DVwD7gH/BJ8C7wfPGm7ftvC
r8OTtfOzHfwGfBD8NjwQPhw+HP4Qvhc+Et4bfgW+DT4A3gV+Gr4W7gn/Dr8H
j2O+f4H/gN+HX4R/hb+D7/b8wV/D28Oj4b7cvwf8LXwXfAPjX8G3Nvl7T5Wc
j9ua7KcxJefxlibz/WRJfPqO+doUXpHnjYHn53mXwwfA68HzwZfB+8Prwrc3
2d9Pl5y377l/M3glxp+Gb24yf0+UnN8b4XGe35L5uAAe4nzA3YwP8L3u95Lf
c1WT3zesZP/3gR81HpSsx2O8z+bwRvAo+KYm+2F0yfnuBz9ufCiZ7295v03g
FXi/p+B5uf9SeL8q5+9qrn/C+FFyXs+F73D/wbvCm3D9g/CFXL8LvCk8HL6o
yvixXH8xfDbXb2w8bPL8c+BNjc9N5u9ceDPjFXwJ3BveBL62yf4dUXKeVuL5
t8En8fwt4RXgW+AT4M3ha5qct+El5/G6Jvt3ZEn8WJHrb4VP5Pot4BuanKdR
Jfu9f5Pz93DJfv1fV+ZzZa5/Br6+yf58qOT8fsPzBsD94S/NT4zfZ3yDu8Nz
1/k9+3L/2vBv8FjzU0n+3J7r54LngBeEf2H8efgR+Ef4ff7+avDCVdZzYcb7
wofAG8Gntufj0Sr59QOuXx1eBH4E/greEF4WHg1vV2f9+1TZXz/DozyP/L0f
3K/wQPM7/A28Q53171fl9/wKv+DfK8l3X/P8jeDlGH8C/rHNh/cw/j38U6sX
hsD/cz7hQcYn+Fv4fH7/PcY3eHfnk+dtDC/P856El+P6m8wHVfbLgvCV8EHw
BvCV3P+I+ask3v3O/dvDazH+LHwZ48OMtyXx5GL4fuN1STw+Dx5sPIN3gy+F
HzDflMS7P3jeDvDaVfJJX8Yfg4eWxOMrmuz3QSXxeFne70b42Cr7d2n4BviY
Kvv/8ibnZWBJfF+e8Zvh46vs/wXgK+AD4fXhx+Et4I1L1nMhuA98MOMbwoe2
6zGkSjx8os77blWS31+A94H3KJmP1/g9y8Jzcf1Q8xu8PDwPPAweBc8GTwrf
Dr8JrwDPCz8Ib1xnPi+Ad4bfYnxFeD54OPwZvC28BLyE+RReDp4bfgD+FN4G
XhxeHP4E3hpeDF7M/Q/vBa8GLw0fwnwd7X4vyd8vML4oPDPj98JL8D4XwEfB
n5u/uP4o54fr14Sf4/qF4RkZvwf+CN4KXhReFB4LLwbPAt8Hj4MXh2eF74eX
5PkXwkfDX8D78Pwe8O48fyXzV5P33Q1eEd4X7gl3g1eGK+4/zPXj/uXgCev8
ni2qjDd13nfzKs+r4SPgTeEV4Dt4Hx7Z+Y3nXQG/A68ML8D4SHgvBveAdy55
/rTcf7rM+KrwDHAv3w9eA54ePhPeFV4dng4+A94FXg2euo7+2glexXjVld+z
Brws/DA8KzwJfBv8CDw7PBl8B3wQ73Ok57Pk7/3alflanfFljDfwnvCq8FLG
I66fE56d6xeAZ271V3fG34G3aPP7ZVXix2zwCXAP+H148za/X1ol3jzF8+eD
p4Hvgrds49nlVeLbZm28vqSK3p8VPh7eC34P3pb3mRIuvM/88I7wUu5XeGF4
Tq4/Gd6H6z9yf7bx+p4q+mQO+CR4b/hDeHb4RLgn/AG8R5P9vlnJ/p6l1Zd7
Mv4uvBPjS3t+GF8EnqDOfG5WZX89ze9bAJ4OHgg/Cy8EzwAPNr5x/b/wWPhC
eD+ed6j5vGQ9D2yyvw4sWf8nuX9eeGquH2D8hrvDq8BLGk/geeCp4Dvh5+FF
4JngIfD+Tfb3/iX77QD4cPiAkv20Ju9zHdyrSrxfFb4KPq1KvlwNvho+vYo+
Wx2+Bj6jip5bA74WPrNKPureJH5sXrKfnuF9FoSnZ3wQPAaeH54Wvhu+Ebae
/YF/XQTvXqfeu6FKfu2q876bwMvDezaJX1uU7PeJ2vi5VZV6YDx4d3ijKvXO
zly/pvu5JJ7sBq/jeSmJf//y93eFN6hSD33W/v6LGf8Y/rz9/ZfAn3i+2/1z
VIme/6Kdj0vhT83n7XxeXhLvFoPPg4+oMv41fD18RUm8+rKdP+v5z+BXu/J+
c1TZX4swfg58WJX3WRQ+Fz68yvt0axIvNy05r2+3+/nIEn3/VnsejyjR/8+1
87Njid79i7+3E7xulfpuV563tvGgJP5P3NZrW1epr0bXyd9bltTPO3D9kuYH
eCH3a536ZeuSevypOs/fpkTfjKlTv25bokeehneBtyvRE8/UWY/tS/Tus/Bu
8A4l+v7NNh4cXlIPPg93Mx6W6L9Oe/2GVerZ0V05r1NU0W8vwWvBs1V5312a
8Gol+e2xrsSTyavEu1e6Mh+zV4kv78KrwAvCDznf8Erw/PAI+Jau+DI/8bxL
4Fth/un8DF8K3wxwaedH+GJ4IDwp/Dd8FfwQPAs8MRfdCg+Dp/dnwTfAg+HJ
4X+5/hr4tq7/fnLnF/gyeBA8GfwPfDV8OzwB/Ct8OdyjSfzYpeQ89WwS73ct
yWcDuH4i+A+4D3wXPDH8J9wXvhueBP4L7gcPh2eEG97vJvhO2GX4nfEr+Z8h
XdHP/mjj9Yy87Fnm5yr5fwTjM8ETwjfDh/I+p8LHlujxoYxPC4/P+PXOfxvf
jy6pxxeHz3e/Vzk/78GnwMeU+Af3cf/U5gvGr4Xvh6fxdeDrjDf8vS2NLyXx
9AHGp4O7GO8PPwjPAE8A3wh/yvMvgs8qyS8ftOfxtJL88H57Xk8tyY8juX9m
eCLuvwX+sI0Hp5fks4/a9z+jJF9ewvsMhQeU+AGftPqmV0m++rjVU2eW5Kt/
unJ+1q/i9xjzVyzZo+aCI5voiRNL9KpnQq9HT8ON4z16RXoCPkvPRO9Ez0Cv
SU2tV2OMVWvrSejlGBP0Koyxekt6NsZeY46xx5ij12BM0TvSwzHWGGP1nvRE
jL2H8t4XldRM1k7GOGNvv05i3x6Mn1LiEekVOafObe9OtIhz7tw75+Zq94R7
wxitd2OMNHYb042dxmRjszFXbeqeMfYaw91LxmhjuTHf2G2MNlYb09Warplr
55qrTdxj7jX3pN6VMdZYa4zSezEnWqupkcyV5lRr0Ts7ybXmXGstNZC5WA1l
LWaNpra6uErtYg1j7W7O1UtRU5mL1VTWcuZMtZaaSa90RCdaypytt6KmMpef
WsUb0CNYpY7msra0BlSLmUP11o7pJLduWUXbq4nVxsZcY6+aSG/OHGguNOfo
dZkj9OLUiOYOa1BrUTWYXmz/KrW8Nb1emTW2tbY1kt61Od/a+rlOtIBnwrPh
mVFbeuY8e54JtZ5nwLPgGVLLbQ/3K6nZ1rfWgq8q8SA2MDfBV5d4DBvCa1bJ
ZeY0a1M1hdpiu0609U7wNSWexkZ1NKRe17udaEtrOr0ua3xrve3gviU18Xp1
arBr4ds7qc30XK5v19/11BM5r6Sm1CvZCr6wPQ8rw9vAV5bUqGu7P/j/8Uo0
k9pJj+T8kppb72RbuE9JjbtuHQ/mgpKadKV2P/Vv94P7Q0/ounY/6BWNx/j4
JTHT2GnMVmtP1Uks/8/DgL/rxNtQo6iFl+lEu5hT1QLmUHOtOdTawRxgbp2S
589ZolnVrnOqY0tqXmtfPZ5R7frrdZpz1fbmcHOxMdBYaAxUy4+zrijR1Gpr
a2hr6b3b9TTn693M3YkWUCOpldT41jrmfHO/Od5aV82qdlVjWhs9Yh1T0nOw
92BNYG2gxrUWViOpldRs1s5qTLWmmsJa1j2jX3F+lb1kjjHXqNnU8kuaB0t6
EvYm3I/Wpj3b/aeGaEpyltrCHD9JSY4y9+shbNXuX3sHegDrlPRE9AbUeGo9
NZFepxpJraQG1DtTU6mt1Fzfte+zRfv79QrUYGoxc4xepJpObaeHYe9FDbRB
iUepNrLmXb/EI7IWVhOtV+JBqZXMofOV1EjmVnsiL5f0OOyV2BN6qcSDtlek
ZlQ7qin1ytQIC5TUVGoHPTe9VD1cvTg9GL0YPUG9NnsiG5Z4xPZK1Kxbtufb
+VaDqkXVqHplalC1qBpVr0vPZN0Sj+6tdr+u0a63+13PZK12/fRSrHGWK/Fc
rH2scZYp8XCsffR0XO912/1uTbh8iYa0VtTTWKXEI9Tr0BNZocRT0CvRA1m5
xHPUG7En90pJz8lenZ7QIiWeiV6RGnKhkppQbWmNuGR7Xj1/apIFSzwYtYoe
09olPSi9Jz2EhUs8Hb0Fa9Cl2vP6ZHuel2jPp+fLmn7pEk/JWl/PYdESz0Yv
wpp42RLPylp56wmT//u1+cjzNq6Np8YXe5Svl/Tk7F2q4eZsz7PxSU04d0mN
rFZUs81T4jGo5dTM85bUnGppNd9cbfxRC9rTe7ekZ2ivT007Q4kGV+saD+do
45fxTw08XYmmUxurcacq0cBqX+Oz8VKP4qauaP6JSjSstYAe0RQlmlLvSE0+
WYnGV6tbA8xU4uFYG1gj1G08tnawRh6/jcfGfzX6NCUaWu1uPDQ+29O9pI7H
8H4br42P1gSzlHiI1grWELOVeETWFvZs32vjnb1ce6xj23xn/LMn+3xJz8he
rT0SeyX2ZOx92sOwl2EPxd6lPd+3S3pY9oLtUb9R0vO0d23P+LWSnqi9ZHuo
b5X0hO2t2mN+s6RHa+/ZHvarJT1qe9v2ZOzN2EOxd2XP94WSHpm9YHtG9o7s
+djbtUaZv8STsHaxh/tOSc/Z3q49JXtL9qDshdsTfqakZ2iv2B7ccyU9Qntz
9qyfLemB2su2Z2Xvyp6VvV57TPaa7EEe1+ov9a16VP2nB7FGGw+Mt+Z8tcLJ
VbRA/zp71T3/X/3S5Cw4h87lA03mxjlz7oY2mVvnzLm7oc7ZcM+792+qcxY8
I56Vu5r8FtfUtfUMqgVOqXI2hzVZC9fQtXywyVo6Z87dkCaxxzVxbe5tsjau
qWurh9qtzcfqx/uarLVn2rNtT+74Eo/TXt3wJmvhmfRsjmhyNt2T7s27m+w9
19i1fqBOrDQmGhuH1omNK5X4z3r69rbs8ej16/nbu7LHZS9gZJ3Ybs40d9rD
sPdlz8vexsN1cpk5zFxmT8DegHrcXrA9HuuT3p3UL+pl9Yf1kvr5oTq5zxxi
LhleJ7aaM8wdw+A1Oon5xv776/TzreGs5UbVya3mVHPrg3VyjTnEXPJondxn
jjPXPVIn15mTzc0j6mgBY7qxfWCTs+GZ9mzf0yT3mkPMJYPgDzrJweZiPQK9
Aj0Cvbh+dWKNMc/Yp6ett929Ey/9yjqxTI2iVhlcRc+r/9XL9lDsJdqjtbdy
eZ3YqMZR61jzW/uf1klvrk+dWGmMNFbqieqN6rnqlfv8se15Vy/aczqpxGOw
F6XHqdepp6qXbr1p/Wi9aH3Zt07sNiYbm/XE9cb1/PXmrZmtnXt10vvR47WX
0KMT7/eyOtrMGG2svqKONjPmG/uvrRNrjenGdjW5/eOzq2h1e9QnlNTo9q6t
Gewn965SS4xsEouN4cbywU20kZpJ7aRnrHesx2tv4Lo6sdwYb6y/Hp6jkxhv
rL+6Tm4zh5nL9Hz0fuyR2Nuwx2HvRP1p7+PSOrnHnGPu0UPWS9aTtZdxVZ1c
aA4yF91Xx3tQs6hdrFnsH55VpZa5pk5uM8eaa++to23UQGohe3r29uxh+W2D
PW6/NbFnYu/75Ca1jjWNtY09d3vv9nT9tsAeqL1de4j2Rk9qUltZI1krndhk
71lzWXud1aQ2tCa0NjyzSe1mDWkt2atJLWkNaS15dpPa0ZpQPX9Gk1rLms/1
OqdJ/LamsrayZ2nv0jnYuk5P096mHo/fnvRuUltaI1ornt6k1rOGc38MqaMN
1ZRqy9MY799JTeh82kO3l24P3m9d7Hnb+7ZH7rcs9mzt3brntq0TE42Nxhh7
dUc12dueGc/OEU1isXvSvXl4k7k3Rhur/SbBbxNGd/JtiD1We632rP0Wxm8c
/NbhsU6+RfEbCL+FeKKTb4Ps2du7t/7325Njmng7xlBjqd8A+C2APXy/LfKb
Ar8tGNPJtztHNznbJ5f0V+0p21t+tJNva/wGwm8h/MbAb5lOaVL7WlObT+2p
++2GZ8xeu3Piu15ZZa5urlObqBnVjrfWqTXUDGoHPUt7l/ohepkD6mhbNbfa
+9Qmtbua1vx5T51aQM2r9r3LnN+JJlYbD66jha0RrBXsoeq36L/od+l/6cfo
p+h32cPWD9Lf0T+5o442V+Or9W+po22ssay19Fv0g/SH9FPurFMbqOnV9rfV
0f7WVNZWt9epFawJrA0G1ald1PRqe+fcuXfN7HUPrKP1rQmsDe5sopXURGoj
e/r29u2p++3QgCZaSQ2llrqjiTZSY6m19GQ8G+dVOY+eGdf2iipnSU9Ub9Sa
2m+n9Hg8++dUOa96PJ79c6uc1xvr1ALWCNYKd9epXayBrIX+D5ZfgSc=
               "]], 
              Polygon3DBox[CompressedData["
1:eJwl1nW4FGUfBuD9aAEBaRQppUvpBukSkG6QbpBukG5QWuk8xKG7u7tTpRsE
BCT97tE/nnOd575+7+w7s7Ozm7JR+8rtIoRCoVMSWaZGC4UWRgyF9sHTetMo
oVBv1ov9wuaxXOyWNGfdWD+WUv/V3CJ2gJ1lzdlNaca6sr4shT7TXDg7wi6y
1mwKW8D2RvhvL43ZDWnKurA+LLk+2txkto7tYlXYDLaUHWYXWCs2iy1jR9kl
1obNZsvZMXaZtWXT2GJ2kJ1jLdhkNp/tYSdZEzaKTWJr2U5WlU1nS9ghdp61
ZLelBevO+rNU+nVpwjqz3iyZ/ou1YWw/O8OasccykI1n01lhfYC5oWwBW8mK
s/rsK1aRVWW3vXF1WGZWnn3HbrJ6LCurwKqwW6wRK8zqsybsJavLsrBvWWV2
gzVgBVgd9j37izVkBVld1og9Z9+zQqwea8xesFosOSvEirLTrDZLwQqzYuws
q8mSsYLsG3aGVWexWRb2NdvDarA4LCvLxnazt67DLnaK/cEG6OPM/cI2sr2s
BqvGQiw5S+nfNdbOYSvYcXaFtQuuOxvGFrJVrBjrx/qy6Wwhy8v6sj5sGlvA
8rA+rDf7lc1nuVl/1o/NYGEsHxvBxrJlbCMrx35k/dlMtojlZyPZOLacbWLl
2SA2nIWx1awEa8yKsAasKXvl3IayUWwJW8dKmxvCRrLFbC0rxQazEWwRW8NK
smFsNFvK1rMybDgbw8LZBlaWjWVT2Qa2h1UP7nlWkQUPky4sKvuJ/co2sX2s
JlvCtrDL7B7rxRaxTewiu8N6sDC2kV1gt1l3tpBtYOfZLdaNLWab2SV2l/Vk
C9h6do7dZF3ZCrabXWdP2SC2iu1lN9lzNphtYkfZQ/aWjWbr2EF2l71iw9kG
dpjdZ6/ZSLaUbWVX2H3Wm61ke9gN9owNZFvYcfaYvWdj2WZ2jD1i79gYtpEd
YQ/YGzaKhbNt7Cp7wPqw5WwH+509Yv3YMrad/cYesr5sn2RnxVhpdt/9spWl
ZjlZXnaZXWRVWGPWisXUj0o+VpZVZE/NXWJVWRPWmn2sH5P8rByrxJ6Zu8Aq
s0asJYuhr7a/fewW+4sNYTslPcvLCrLfrd3O0rLcLD+7yhawqCwOS8I2szD2
EYvPPmNb2Q6WjuVhBdhvbA/LxAqwIuw628uysaKsFLvHdrEMLB8rxP5gu1lG
lp8VZtfYEZaXlWEV2J9sjXPbz26zF2yomfXsELvH/mYj2HEpyiqzmuyNtRPZ
X3rUCP99Hy/0ZzJ7qccInC1iU9gr/WMJHnGL2VT2tx5bPmJL2Es2x2usYttY
w2BG5rE1bAdrpD+X8WwuW8Yq6c/kZzaHhbOK+pPgWcQmsBmsiP5n8DxhE9lM
9o0+SV4E+xD/hsLs5VHwfWbuZzaNFdKfBs8nNonNYkWD85cJbB5bzr4LjiUT
2Xy2glXWtzrxE+wJ+8DGBb9B5I0eL7heLNzrjg/ORY8Y4d+vgtB8NoO9D+4f
icVWsJnsQ3D/BNeQrWTT2Ts9UXCt2XI2i/2jfy5x2Co2317WOfhZdoN1CZ5X
Eo3FZZ+yLebmmlvDTrNrrLOZtewAu8NesmHBeyYRWTSWgK23dh6LzGIG+2Eb
2Ss2l61m29n3wW8Lea1/ItHZ0mB/LIq5WCwx28SmsbfB8SUmW8ZmswjmorD4
bF2wZxaJRWcJ2YZgL/a8lp1h11knM2PYFLae7WbV2H7JwYqzMuyBtQdYTlaC
lWUPWVtr67HebBBLaKYNq8t6sYEsQfA7ipVjrdgPLBJrysqz1qxj8HXPmrMK
rC3rzKKwdqw+68MGs0SsO+vAxrIpLAPrxtqzMWwyS8+6snZsNJvE0rGOrBUb
zn5mX7BOrDUbwcaz1OxOMMsGsJEss97ZXBs2kk1gadhZKc1qsvqh0L8fnC7m
2rJRbCJKy85LWVabNWQR9HvBMdkgNppl1R8G58KGsnEsm97M8b5lbVgnFjn4
XLGZbBs7xOoGn182i21nh1m94PnAprMt7ACrzf6QRqwj68mSBs8Mc9PYZraf
1WLXpDHrxHqxz4PPuLkZbCs7yOqwc1KG1WIN2P/0XuZ6sqlsLsvJerDubDKb
zXKw1qwO68kGsHjsQfDesSFsLPta72muB5vC5rDs7H5wrdlgNoZ9pbcyV5v1
YD+y+Kwlq8Tas64sGrsbvO9sIBvFsuiHJQ8rzb5lT9zjHaxtyPqxoSyJmTNS
itVg9dg/5laxhCwNS88Os3AWiyVjKdgutpjFYImDZxHbzpawmOxTloztYEvZ
xywpS852squsBmvO2rE4+mWpxpqyNiyWvkLisy9ZWnbQ2uUsHvuCpWEH2EGW
i5Vk5dgjdojlZqVYefaYrWQJWGqWjh1i21galovlY1fYIhadJWRJ2Ta2jMVl
qVhqtp9tYV+yHCwPu8RWs0QsLcvAjrDN7AuWneVmF9nvrBZryTqwuPopKcGq
sTrsvbmTrDirymqzd+w1W8V2sePsh+B7R1az3ewE66ifkGKsCqvF3lp7mpVk
1Vld9oH94N5oyYaxn9iXZtqzBqwvG8ISs/XyGcvIsrAT1q5lSVh6lokdY7+x
mqwFa88+0TdJKpaN5WIXzK1jn7IMLDM7zq6w6qwZa8ti62skMUvHMrKj5jaw
pCwTy8pOso3sc5aZfcVOsQnsefB7RiKxBez/f5QrjA==
               "]]}], Lighting -> {{"Ambient", 
               RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
              "Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{2, 0, 2}]}}]}, {
           RGBColor[0.368417, 0.506779, 0.709798], 
           EdgeForm[None], 
           Specularity[
            GrayLevel[1], 3], 
           StyleBox[
            GraphicsGroup3DBox[{
              Polygon3DBox[CompressedData["
1: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
NiSc86k/1iNc7+k8q2e4vtL51OHh3pP6pf8L58TqB+6bS30V7bnZdbrm2I7Z
tb/ykNrZvSzN+e2ye0qak1Wyew5aX1sru+bV3lHIrqm1p5Rl18vKkbZUdr2s
PXG/XOrP6N5l1+laC9tm9680/2tk1/uq6Wtm96m0jtrlUn9GsSK7L6HcaZvs
PpjWb1Ue9cu8RuqF82n1J2tl9+603jdU+BxI53HjwucuOosZFa6p1B/uGq7l
dDbXMVxjq5fbKVyX6lxv/3D9rDOOzuGaUOd6HcK1us4BDwjX1eoJtw/X5+oV
twjXMzp3aBmui3R2sHe4ttHZxH7h+l/nLK3CNYDOFCZkn3lpPz0Mn1TmNX5I
di9R67pduKegs5h9w/0CndG0Ddfh6p3uE+41qOfcOlxXqGfbJlxXqBbYK1xf
6eyjcbh/p7ObRuH+nc5KRoTrf/W3DwnX/OqNHxquXdUz7xKuh3V2OTzcX1B/
fli4jlIf+OBwf0F9+MPCdZT6+SPDPQj1ww8M19s6n20e7qfofKdZuM+iM6b6
4VpUPfAG4dpS5wgNw3WpzhqahHs0OntqGu5v6lxpt3AfU2dPu4d7NDoD2jNc
i+rcZ49wjaqzpIrsnpX2l0rZ/SXtR9pXlZ8XFe/C56A6Z6+T3XNTLfBfhXsK
OrfdNlzz6wy9VvgMVWfo1cNnsTp/rx0+p9T5+KYK90R0Llye3bPSnrixwj0L
nf/WDJ/L6vy9mN3L0t5XObt/qH1tu3A/QufCObs3qD00ZffEtA/+HxnA8oc=

               "]], 
              Polygon3DBox[CompressedData["
1:eJwtmnW8XNUVhd9kzss9EyAhJAQIEOJYgODuEtzdCe7uGhxKcXe3UqxClRaX
UlxKcXd3SKDf1zX/lH6/c2fyZu7de6+19oyYuPf6e/Xp6ek5l/8p/HdI09Mz
c6un5yXgkH49Pe1OT8/98CnwMnA/+F/wmfDKcIUfgU+HV4QH8foZ4f/AB8J/
g5+GD+rt6VkSvhN+CN4DXhj+B/wsfAi8NNzh/R6Fz+D1K8HrcL4DPIDzXngq
zh+Dz+J8Ffg/lfeGl4MHwetx/U7wQK5v4LuaXL8vvAT8PjwFvgLeBn4T/g6+
CN4MfhJ+Bz4ZXh1+Df4aPh/eGH4L/h6+GN4cfhv+Ab4E3gL+AP4ZvhLeFn4X
/gm+DN4K7tvJ5z+Nv3d5uBd+EP4VvBz8Otd/A1/A9ZvAb8DfwhfCm8LvwZPh
y+Gt4YbXPwz/mtevAP+xyf3Zh/PF4cL5A/CpnC8LP875W/CJnK8K/67J6/eE
F4F7uP4ez0vu1x+a3I+9OV8MbnF+L3wS50vBH3L+C3wV59vBU7gff4aPLrn+
R/iP8BEl93sA1w+Gn4X3hX/m/C/wMSV/b3/OB8HPwPvAC8NLwN/Dp8MzwrPC
r8CHwRfCl8Eb8e/fDV8EXw5vDP8Dnty3p6cPfB/XT4SHcj4b/Bp8BHwxfAW8
Cdf/E14UXgr+kfMz4d83eb734nxReBF4SfgHzs+A14QnwtNw3oYfgl/28/Sm
Pvrwfd3n81TyfD/G+ZvwCZxPgP8JPwcf2pv6uht+Bj64N9/vZL6fP8FHlfz7
P8F3wUeW3K+BXD8Efh7eH14X3hGeltf3haeFp4ef43w/eG14e7g/5wW+B34e
Pqw3z8eD8Evev97U38PwK/Ck3tRbG67wI7zfLvA78I/wpZxvCT8Fv2u/gNeA
X4W/gs+DN4Kva3K/t4Xnha9t8rxsA88Db9eknofDU8PXNPn8W8Pj4InwwfAI
eBr4eviv8HbwfPA28AHwMLgffA58I7wOPAo+C74eXgseAR8Bnw0vAU8PHwOf
By8NzwgfDZ8LLwXPAB8FnwMvCQ+xX8H94Sf4PvaCz4ZvgNfmfCR8a5P7vws8
P3xLk/rZGR4PbwnvB88CV3hv+Hh4Hnha+Ar49/Dm8BzwHvCx8Nxwf/hy+Hfw
ZvDs9gN4avjf/D17wPvAJ8Dzcj4Q3hc+EZ4Png7eCz4OHgcPgM+Fb4LXhUf7
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
xzNb0+Pp9fRk7ob0ZHozNZdZt5rxnXYyP7WkGdNn7ewYzJ7MhD9pR9OZFZuB
fdTODsNszEz0rXYyO7NSM7UX29mRmLWZsb/Rzk7N7N0M7qV2Mn2zOTPRF7rf
j1mpGe1r7WRmZrdmwB+0k7GZDbsDea77/fr8/D+TL/EMZvVqbLW2GtHsUc2n
9nu1+zyqCd9rZ0eoVtRj6DX0IO7K3AHd0a0H60lPojfR47zefX69vwPhKX1T
f9bP5/BHTTLkV9rZabS69eO//1q3vsyErur+PdaTO4mzuv3FejMDMgsyszGr
dQdzZrffuJvR07irdKel11Ezq531QGaxZlRmVXoQs1gzKrMqPZNZrpmW2ZaZ
k1mzmZHZkZ7JLNhMdlK339zV7XfHdvuF/c+dmrs1dwDuRt35uFs1k3YX5M7F
3ac7PHcxZk5XdvuJWbc7Gnd5ZtrubvRs7g7dKerl9HTuFt3p6fXcIbmrcwfh
bskdlLsoM2h3r3osd4fuuPReZlq1ZOdm1mVm0bckUzDLMEMzSzNDM8vW401V
4nH0fgvUzD5ntrN70ZrZo2ZRuywGH9PKTHI2zVXj9xcq8VuL1GgbZ5qzbaGa
2efMd/YvWDP7nbHO2rlrtMvCJXnFwjWz0Jnp7FwWPrOVmehsnL9GS6iR1Erz
1GgTNYxa5scms8cZpLb4qUmeqqZQW/wAD2+lxq31eWu0nBpHrTNDjV8eUpK3
jIf3aWXGO+tnqslXZyzZH46r0U5qMLXYfDVaQI2oVnwYXq+VHmuvnbMm/1iw
JH8dWpM/zlSyrxxdkx/MUZLfzg5vC89dkq+NqskTZi/JN+eo6c32aPPglWq0
oRpNrTa2Jt+YqySPG1OTt8xZknc+WjNr7OH28uVrtKEaUC24Wo0WViOrlVeH
b29FI6uVx3YyG+0Z9o4RNfnTmJI8ebaavHlUiV8fVtPL7en61Zlr8sKhJf56
lpo8ceaSvGxWeF14lpJ8eUwnXkUPo5cZWePvx5bkG8Nr/P/okrxgcpM87+t2
9qeP1cxOZ46z5+cm+d637ewnemry4e/b2b/0r9HOamq19Qo1WlcNrZY2k2xK
MjqzyqZm1jvz3Rf0hcfb29vZVw+oqTU1udp8mhqtbs1au4Nr8o1BJfleqcnD
JrezL5++Jg8ZXJIfdmryxFKSV05V87dY89b+ujVaTo2n1lunRpuoUdR2G9b0
bnu4Wmjqmt7hZ/KzrQc/2YomVBuqofX+m/ZGW2/A+evwNSX7l341vaa3ZJ9R
a/LKdsk+Y0jNvmH6knxzUI1WUbOYX05bk5fak+xNnzaZlc5UZ+snTWarM9PZ
+XGT2elMdDZ+1mT2OGOdtd82mdXOUGdpn5r9zo/t/D7m+yaz3hnvrP+lSd78
XTu/f5nSZD/zTTv7+e+aaAE1gFrg8yaz2pnn7PuyiRZw5jv7e2vyyint5EHT
wcvB05TklwNr9idTl+Sd7Zr87ad29mkz1uwzZij5/cQXTbSEGkGt8E0TbeBM
d7Z/3WS2q2nUNl810TZqFLVKqyb/+6Gd/aZ6cURXT6oHvYfXdOe1uzVrdlRX
f5m9PV2j3dSkalP1vnpdPa++f7bGC5ghmCU8V5MlmIGYhTxeo+3UbGo3n2mf
bT+zvw1Zs0Zbq9HV6k/VaE01o9rRe+a98zP4W6cna7SgmlRtao1Za37n/lbE
79Dv0nvurtKeM7KrN9XHa9TMdme8XsOeb+/3GTV7955576xBsz1rztqzRs3y
l6zxgnoyvdna8D9b8QR6g+drsh8zH7OfZ+B9W/FMeqcnarSrmlZta81b+9aE
Wb/3yHtlT3I3vVSNd9SD6kWtMWvNHuAu0R5gL7Dm3GVYc9aePcnd4tI1XlYP
qhe15qw9/cD4rl/RH+gX9F8+kz6b1qTZvM+sz67PrFn84jXeU0+uN7fn2fv0
b/o/e6i91Jpyt/1vrt+uFY2v1l+mxuvqsfXa9mh7tTPb375Yc9aePdzfytxd
oz3VoHqNe+D5W/Esehdr1tq1p/tbNnu6vd0adhe9RI131jPrnR+s8U56JL3S
QzWf3e9Ar7RWjbfT8+n9lqvJRsxkzGac0c5qZ/KErl+xNqwR/cyqNdmSGZFZ
kTPaWa2f089Y09a2msPfSjnTne3ONHeZagy1hj3A3y79P8MvmbFm+2oCtYEz
3l2cM9PZ6Ux197Qy//6VrWRGZkdqDrWHmsFdsDPaWe3MdBe8Yk22Y6ZjtqMm
UZuoefxtlTPaWa1mMRufUJN9mXGZdakB1YJqHLP4/2u6Eo3obuqRGq+px9Xr
3g8v34oH1gurUdQqahR3iQ/UeGM9rl53lZoszYzNrM0Z4ixxJro7UyOoFdQQ
7qbVOGodNZW73n/VeFU9tF5ajaBWUKO4a/gfPFDwbQ==
               "]], 
              Polygon3DBox[CompressedData["
1:eJwl1mWYVVUbBuCDDMMMjeQwQzN0d3e30g1KtxLSIam0pEqKASqh2AEI2Eko
XdIlIt3fva7vx/vjua93n7X3PmuvtXI/M+TpwU9EIpE9KlmomEjkWFQkciVp
JJIzSSSSLXkkkoQdYmdYPMvMUrHz7A4rzBJZSnaO3WaFWD72iA31w/P4T+xj
loKdlW/pK8jysqSxkchofcv4PraNRek7Kl/Sl4PFhT52hF1g2VlWlppdYHdZ
EZafRbPj7CrLxeJZMmOMNcZr/C/2DYvRd1q+oS8/y83SskvsPivGCrI07CK7
x4qyAiwdu8wesOKsEGvNFhpjLT/BDrMKrBCrxIaw/iw5OyVfd20iy8Vi2Rl2
kxVgeVh6doU9ZCVYYfYk+4c9YiVZkfC8nm2cMV7n+9mOMAYbz5azA2wne4KN
YkvZXrY1/L/sBbaE7WFfsQgbyRaz3ezr8H+wMexV9ifbzjK6lxtylKrASrPH
7Dl989nP7JMwLjssn3PPCSwLK88K6qvIB7N+7Ib6WT6tLyWLlkvpy6uvDO/H
erIE9kBOpWqwyiw7eyinVjVZFVaa5XNtWdaf9WLZ2D05harGKrIyLFFfOTaA
9WaZ2S05WlViZVlBlkFfXtaetWIlWTwrwrqzTqwsy8/Ks4GsDyvHCrAKbBDr
ywqxjCwf68Baszh2V45VVVkFloXdlpOryqwcy8diXRvHmrGGLDeLZplZY1aP
5WRRLCNryOqwAiwVS2AtWROWld2RY1QVVp4lshT6srHmrBHLy2JYVtaUNWDx
7L6cUlVnlVh+llJfPGvBGrM8LDnLwpqw+iwHS8oysAasdph/7KB8yjzIxjKx
wiyTvkTekbVhJVg2Vph1Yx3ZdfWT/LdrU7Bk8k31CzvLUrHkYZ6qA+wki2MZ
5ctqZ1iDWFL2KNp7Z7+xiywNi5WvqF1hHWFR7LG+q+w7dohFsyTyv+p7doQl
Z0/I19QP7BiLYUnl/9SPYc1gsSxK/kd9G75dloxF5KKeN4vnLcA7s3bsgfpT
PqwvM0sf1l21nx1nWVkGuYhrM7s2P+/E2rJiLCsryLqw9qw4i2OFWFfWgWVi
N+VkqiIrwx6qv+SjxsjCnpRvqV/ZeZaaxch31R/sH5aOpZTvq33sIMvE0sn3
1N6wfrGMLK18R/3OLrO0LIWcwb1cZ0lVeVYqrOPWpgnueUX4TbaLtdQ3nE1l
29gXYVw2iM1m37MP2UFWirVkM9jz4X2yYqwpm8IGh/tlRVkT9iIbGOYUS89K
sl6sZVi/WDpWgvVkLcJ8ZGlZcfYsax6elRVhjdlkNii8J5aTVWfDWbfwjllx
1oxNZUPCO2E5WDU2jHUN84elYcXYM6xpmGcsNSvKerBmYS6z7Kwqe551Dt8B
K8lasOnsOdaQtWG92Er2KmvOerORbDN7jzVjvdgItom9y5qynmw428jWh7nM
Hss51NOsavg2WBJ9uVhrViN8QzH/P4zkZK1Y9fCtsUdydvUUq8Yas3b6+rDV
7PUw51kJ1pxNY0NZI9aW9War2GusPmvFnmXL2VLWgLVmPdkKtizMZZbAqrDn
WBe2m+ViNdgI1p3tYblZTTaS9WAnWE3WjS1lL7KTrBbrzpaxKew0a8L6s7Vs
LjvOarCubAmbzI6x6qwLW8wmsaOsGuvMFrGJ7BRrzPqxN9jssKaxa3I6VYcV
Z2dYU30D2JtsHtvB/pXTqtqsKPubNdLXl61hc9g37KqcRtVixdhZ1kzfQPYW
m8/OseZsEHubLWCXWHv2AvuArWCHWGXWgS1g49lhVoV1ZK+wcWw7OylHVGmW
ENZY1kXfOPYJW8O2sRPyY+tGKZadNWHP6hvGN7B17AiryjqxhWwCO89asMHs
HfZK2BdYBzaKfciWs4vsKTaUrWeLwr7AOrLRbAtbyS6wlmwIW8cWhrWddWJj
2EdsFavMyrK6bCwbyaqwcqweG8deYFVZeVafjWej2JPWv1nsXXaO7QnrJJvN
3gvrMdsbzhFsPtsU1lS2n6VnL7P1YX9ku1kqNo29GfZH9itLzaazt8Leyn5h
adgM9nbYq9lvLBtbzD5i/7Ej4WzBFrDN7Ao7wOLYIraFXWNHWVo2k73DTrPf
WTr2ElvHzrA/WGY2j21kl9hfLCObw95nF9i+sG+xuWxD2L/Zn2Gf8f4Gslns
O/ZB2KPYAPYy+5ZtDmcG1odNZ9+wDeFswbqziexz9ia7wXqwSewL9hbLZ9xV
bCt7wM6FvUxff/YS28U2hf2S9WUz2A72Pkvp2slsdTg3sO/ZbX392Ey2k21k
KfRNYqvC3s++C2cBfYPZHPYD28Ji9U1kK8PZhH0b9m59Q9hc9iP7iCXqW822
sYfsPMvLVrKv2X12ltVybV3Wms1mM1hNVoe1YrPYdLaV7Zb/9Q3mZqlZPdZQ
X3s+n81idVkD1o7NYy+zOqw+a8vmspdYbVaPtWFz2ExWjVVgDdgENpq1YMPY
FLaVfc6qs4qsIZvIxrAarBJrxCaxsawSK8PqsDFsBHuKjWDT2Hb2JXuaTWEL
2e/sJ9aKTWWL2B/sZ5bg/S1ln7Ab7DjLzpaxT9lNdoLFsyXsY3adHWN52Ar2
FbvHzrBc7HX2BbvDTrH8bA3bzh6xCywHe5V9xm6xkyw3W86+ZHfZaXbVPXdm
Y9nHbDXLqe819jm7zf5m1/R1ZePZp+wN9h/rxiawz9haVpEVZpXZUDYg3DNL
xjKxRqwu+x/PNwbP
               "]]}], Lighting -> {{"Ambient", 
               RGBColor[
               0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
              "Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {{
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwt0UkuBEAUgOHSrbU2tTZERCSIAyAOgDgAHQegY22KjR3iADgBiQMgDoA4
AOIA5nmeZ74Wi5evVvXnVdVnBtMDOSGEMZMTMVyIhZDiCuu5wWbusJ2H7OYj
+5ibF8IwKzjBRs6wlfPs5BJ7uMZ+bnGUe5ziHff173nAh2yHjzziE4/5zBO+
8JSvPOMbz/nOC37wkp+84hev+c0b/vA2Ev4WntW/dZzkLke4yQxXmeYiOzjH
Fk6zgeMs4xAj7OW9d+nK7sM2brOJ66zjMktZq59kDUtYzWJWsYiVLGQ5C5hi
gknms5hxFlI6JOjqEGcuY4wyysj///4Coco85g==
            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0TkoB3AYBuDf330fsxSzFLMUsxRWKaxyjZJilmKWYpYi980shSS5QpKQ
3Pf1yPD19C7fW9+XW99c1RQJIbSZregQIsJXXAiZTI0PIZfZLGQ+S1nMSpaz
jjVsZSO72ME+9nCIAxzjCFe5yE2u84SHvON4TAj3nOADJ/nIKT5xms+c4Qtn
+co5vnGe71zgx18PP7nELy7zmyv84SpDVAhX+m/lfR5zjRt/+7jCYY6yn4Ps
Zi/b2ckGtrCatSxjBYtYwjwWMIs5TGYGb9w7nddM4yVTecEUnjOZZ0ziKRN5
zAQeMZ4HjOMeY7nLGO4wmtuMivz/9xcKgUg1
            "]]}, {
           GrayLevel[0.2], 
           
           Line3DBox[{1444, 753, 1443, 2448, 1683, 1445, 2449, 1684, 1446, 
            2450, 1685, 1447, 2451, 1686, 1448, 2452, 1687, 1449, 2453, 1688, 
            1450, 2454, 1689, 1451, 2455, 1690, 1452, 2456, 1691, 1453, 2457, 
            1692, 1454, 2458, 1693, 1455, 2459, 1694, 1456, 2460, 1695, 1457, 
            2461, 1696, 1458}], 
           
           Line3DBox[{1460, 2133, 2343, 1459, 769, 1461, 2462, 1697, 1462, 
            2463, 1698, 1463, 2464, 1699, 1464, 2465, 1700, 1465, 2466, 1701, 
            1466, 2467, 1702, 1467, 2468, 1703, 1468, 2469, 1704, 1469, 2470, 
            1705, 1470, 2471, 1706, 1471, 2472, 1707, 1472, 2473, 1708, 1473, 
            2474, 1709, 1474}], 
           
           Line3DBox[{1476, 2134, 2344, 1475, 2135, 2345, 1477, 785, 1478, 
            2475, 1710, 1479, 2476, 1711, 1480, 2477, 1712, 1481, 2478, 1713, 
            1482, 2479, 1714, 1483, 2480, 1715, 1484, 2481, 1716, 1485, 2482, 
            1717, 1486, 2483, 1718, 1487, 2484, 1719, 1488, 2485, 1720, 1489, 
            2486, 1721, 1490}], 
           
           Line3DBox[{1492, 2136, 2346, 1491, 2137, 2347, 1493, 2138, 2348, 
            1494, 801, 1495, 2487, 1722, 1496, 2488, 1723, 1497, 2489, 1724, 
            1498, 2490, 1725, 1499, 2491, 1726, 1500, 2492, 1727, 1501, 2493, 
            1728, 1502, 2494, 1729, 1503, 2495, 1730, 1504, 2496, 1731, 1505, 
            2497, 1732, 1506}], 
           
           Line3DBox[{1508, 2139, 2349, 1507, 2140, 2350, 1509, 2141, 2351, 
            1510, 2142, 2352, 1511, 817, 1512, 2498, 1733, 1513, 2499, 1734, 
            1514, 2500, 1735, 1515, 2501, 1736, 1516, 2502, 1737, 1517, 2503, 
            1738, 1518, 2504, 1739, 1519, 2505, 1740, 1520, 2506, 1741, 1521, 
            2507, 1742, 1522}], 
           
           Line3DBox[{1524, 2143, 2353, 1523, 2144, 2354, 1525, 2145, 2355, 
            1526, 2146, 2356, 1527, 2147, 2357, 1528, 833, 1529, 2508, 1743, 
            1530, 2509, 1744, 1531, 2510, 1745, 1532, 2511, 1746, 1533, 2512, 
            1747, 1534, 2513, 1748, 1535, 2514, 1749, 1536, 2515, 1750, 1537, 
            2516, 1751, 1538}], 
           
           Line3DBox[{1540, 2148, 2358, 1539, 2149, 2359, 1541, 2150, 2360, 
            1542, 2151, 2361, 1543, 2152, 2362, 1544, 2153, 2363, 1545, 849, 
            1546, 2517, 1752, 1547, 2518, 1753, 1548, 2519, 1754, 1549, 2520, 
            1755, 1550, 2521, 1756, 1551, 2522, 1757, 1552, 2523, 1758, 1553, 
            2524, 1759, 1554}], 
           
           Line3DBox[{1556, 2154, 2364, 1555, 2155, 2365, 1557, 2156, 2366, 
            1558, 2157, 2367, 1559, 2158, 2368, 1560, 2159, 2369, 1561, 2160, 
            2370, 1562, 865, 1563, 2525, 1760, 1564, 2526, 1761, 1565, 2527, 
            1762, 1566, 2528, 1763, 1567, 2529, 1764, 1568, 2530, 1765, 1569, 
            2531, 1766, 1570}], 
           
           Line3DBox[{1572, 2161, 2371, 1571, 2162, 2372, 1573, 2163, 2373, 
            1574, 2164, 2374, 1575, 2165, 2375, 1576, 2166, 2376, 1577, 2167, 
            2377, 1578, 2168, 2378, 1579, 881, 1580, 2532, 1767, 1581, 2533, 
            1768, 1582, 2534, 1769, 1583, 2535, 1770, 1584, 2536, 1771, 1585, 
            2537, 1772, 1586}], 
           
           Line3DBox[{1588, 2169, 2379, 1587, 2170, 2380, 1589, 2171, 2381, 
            1590, 2172, 2382, 1591, 2173, 2383, 1592, 2174, 2384, 1593, 2175, 
            2385, 1594, 2176, 2386, 1595, 2177, 2387, 1596, 897, 1597, 2538, 
            1773, 1598, 2539, 1774, 1599, 2540, 1775, 1600, 2541, 1776, 1601, 
            2542, 1777, 1602}], 
           
           Line3DBox[{1604, 2178, 2388, 1603, 2179, 2389, 1605, 2180, 2390, 
            1606, 2181, 2391, 1607, 2182, 2392, 1608, 2183, 2393, 1609, 2184, 
            2394, 1610, 2185, 2395, 1611, 2186, 2396, 1612, 2187, 2397, 1613, 
            913, 1614, 2543, 1778, 1615, 2544, 1779, 1616, 2545, 1780, 1617, 
            2546, 1781, 1618}], 
           
           Line3DBox[{1620, 2188, 2398, 1619, 2189, 2399, 1621, 2190, 2400, 
            1622, 2191, 2401, 1623, 2192, 2402, 1624, 2193, 2403, 1625, 2194, 
            2404, 1626, 2195, 2405, 1627, 2196, 2406, 1628, 2197, 2407, 1629, 
            2198, 2408, 1630, 929, 1631, 2547, 1782, 1632, 2548, 1783, 1633, 
            2549, 1784, 1634}], 
           
           Line3DBox[{1636, 2199, 2409, 1635, 2200, 2410, 1637, 2201, 2411, 
            1638, 2202, 2412, 1639, 2203, 2413, 1640, 2204, 2414, 1641, 2205, 
            2415, 1642, 2206, 2416, 1643, 2207, 2417, 1644, 2208, 2418, 1645, 
            2209, 2419, 1646, 2210, 2420, 1647, 945, 1648, 2550, 1785, 1649, 
            2551, 1786, 1650}], 
           
           Line3DBox[{1652, 2211, 2421, 1651, 2212, 2422, 1653, 2213, 2423, 
            1654, 2214, 2424, 1655, 2215, 2425, 1656, 2216, 2426, 1657, 2217, 
            2427, 1658, 2218, 2428, 1659, 2219, 2429, 1660, 2220, 2430, 1661, 
            2221, 2431, 1662, 2222, 2432, 1663, 2223, 2433, 1664, 961, 1665, 
            2552, 1787, 1666}], 
           
           Line3DBox[{1668, 2224, 2434, 1667, 2225, 2435, 1669, 2226, 2436, 
            1670, 2227, 2437, 1671, 2228, 2438, 1672, 2229, 2439, 1673, 2230, 
            2440, 1674, 2231, 2441, 1675, 2232, 2442, 1676, 2233, 2443, 1677, 
            2234, 2444, 1678, 2235, 2445, 1679, 2236, 2446, 1680, 2237, 2447, 
            1681, 977, 1682}], 
           
           Line3DBox[{1789, 1218, 1788, 2658, 2028, 1790, 2659, 2029, 1791, 
            2660, 2030, 1792, 2661, 2031, 1793, 2662, 2032, 1794, 2663, 2033, 
            1795, 2664, 2034, 1796, 2665, 2035, 1797, 2666, 2036, 1798, 2667, 
            2037, 1799, 2668, 2038, 1800, 2669, 2039, 1801, 2670, 2040, 1802, 
            2671, 2041, 1803}], 
           
           Line3DBox[{1805, 2238, 2553, 1804, 1234, 1806, 2672, 2042, 1807, 
            2673, 2043, 1808, 2674, 2044, 1809, 2675, 2045, 1810, 2676, 2046, 
            1811, 2677, 2047, 1812, 2678, 2048, 1813, 2679, 2049, 1814, 2680, 
            2050, 1815, 2681, 2051, 1816, 2682, 2052, 1817, 2683, 2053, 1818, 
            2684, 2054, 1819}], 
           
           Line3DBox[{1821, 2239, 2554, 1820, 2240, 2555, 1822, 1250, 1823, 
            2685, 2055, 1824, 2686, 2056, 1825, 2687, 2057, 1826, 2688, 2058, 
            1827, 2689, 2059, 1828, 2690, 2060, 1829, 2691, 2061, 1830, 2692, 
            2062, 1831, 2693, 2063, 1832, 2694, 2064, 1833, 2695, 2065, 1834, 
            2696, 2066, 1835}], 
           
           Line3DBox[{1837, 2241, 2556, 1836, 2242, 2557, 1838, 2243, 2558, 
            1839, 1266, 1840, 2697, 2067, 1841, 2698, 2068, 1842, 2699, 2069, 
            1843, 2700, 2070, 1844, 2701, 2071, 1845, 2702, 2072, 1846, 2703, 
            2073, 1847, 2704, 2074, 1848, 2705, 2075, 1849, 2706, 2076, 1850, 
            2707, 2077, 1851}], 
           
           Line3DBox[{1853, 2244, 2559, 1852, 2245, 2560, 1854, 2246, 2561, 
            1855, 2247, 2562, 1856, 1282, 1857, 2708, 2078, 1858, 2709, 2079, 
            1859, 2710, 2080, 1860, 2711, 2081, 1861, 2712, 2082, 1862, 2713, 
            2083, 1863, 2714, 2084, 1864, 2715, 2085, 1865, 2716, 2086, 1866, 
            2717, 2087, 1867}], 
           
           Line3DBox[{1869, 2248, 2563, 1868, 2249, 2564, 1870, 2250, 2565, 
            1871, 2251, 2566, 1872, 2252, 2567, 1873, 1298, 1874, 2718, 2088, 
            1875, 2719, 2089, 1876, 2720, 2090, 1877, 2721, 2091, 1878, 2722, 
            2092, 1879, 2723, 2093, 1880, 2724, 2094, 1881, 2725, 2095, 1882, 
            2726, 2096, 1883}], 
           
           Line3DBox[{1885, 2253, 2568, 1884, 2254, 2569, 1886, 2255, 2570, 
            1887, 2256, 2571, 1888, 2257, 2572, 1889, 2258, 2573, 1890, 1314, 
            1891, 2727, 2097, 1892, 2728, 2098, 1893, 2729, 2099, 1894, 2730, 
            2100, 1895, 2731, 2101, 1896, 2732, 2102, 1897, 2733, 2103, 1898, 
            2734, 2104, 1899}], 
           
           Line3DBox[{1901, 2259, 2574, 1900, 2260, 2575, 1902, 2261, 2576, 
            1903, 2262, 2577, 1904, 2263, 2578, 1905, 2264, 2579, 1906, 2265, 
            2580, 1907, 1330, 1908, 2735, 2105, 1909, 2736, 2106, 1910, 2737, 
            2107, 1911, 2738, 2108, 1912, 2739, 2109, 1913, 2740, 2110, 1914, 
            2741, 2111, 1915}], 
           
           Line3DBox[{1917, 2266, 2581, 1916, 2267, 2582, 1918, 2268, 2583, 
            1919, 2269, 2584, 1920, 2270, 2585, 1921, 2271, 2586, 1922, 2272, 
            2587, 1923, 2273, 2588, 1924, 1346, 1925, 2742, 2112, 1926, 2743, 
            2113, 1927, 2744, 2114, 1928, 2745, 2115, 1929, 2746, 2116, 1930, 
            2747, 2117, 1931}], 
           
           Line3DBox[{1933, 2274, 2589, 1932, 2275, 2590, 1934, 2276, 2591, 
            1935, 2277, 2592, 1936, 2278, 2593, 1937, 2279, 2594, 1938, 2280, 
            2595, 1939, 2281, 2596, 1940, 2282, 2597, 1941, 1362, 1942, 2748, 
            2118, 1943, 2749, 2119, 1944, 2750, 2120, 1945, 2751, 2121, 1946, 
            2752, 2122, 1947}], 
           
           Line3DBox[{1949, 2283, 2598, 1948, 2284, 2599, 1950, 2285, 2600, 
            1951, 2286, 2601, 1952, 2287, 2602, 1953, 2288, 2603, 1954, 2289, 
            2604, 1955, 2290, 2605, 1956, 2291, 2606, 1957, 2292, 2607, 1958, 
            1378, 1959, 2753, 2123, 1960, 2754, 2124, 1961, 2755, 2125, 1962, 
            2756, 2126, 1963}], 
           
           Line3DBox[{1965, 2293, 2608, 1964, 2294, 2609, 1966, 2295, 2610, 
            1967, 2296, 2611, 1968, 2297, 2612, 1969, 2298, 2613, 1970, 2299, 
            2614, 1971, 2300, 2615, 1972, 2301, 2616, 1973, 2302, 2617, 1974, 
            2303, 2618, 1975, 1394, 1976, 2757, 2127, 1977, 2758, 2128, 1978, 
            2759, 2129, 1979}], 
           
           Line3DBox[{1981, 2304, 2619, 1980, 2305, 2620, 1982, 2306, 2621, 
            1983, 2307, 2622, 1984, 2308, 2623, 1985, 2309, 2624, 1986, 2310, 
            2625, 1987, 2311, 2626, 1988, 2312, 2627, 1989, 2313, 2628, 1990, 
            2314, 2629, 1991, 2315, 2630, 1992, 1410, 1993, 2760, 2130, 1994, 
            2761, 2131, 1995}], 
           
           Line3DBox[{1997, 2316, 2631, 1996, 2317, 2632, 1998, 2318, 2633, 
            1999, 2319, 2634, 2000, 2320, 2635, 2001, 2321, 2636, 2002, 2322, 
            2637, 2003, 2323, 2638, 2004, 2324, 2639, 2005, 2325, 2640, 2006, 
            2326, 2641, 2007, 2327, 2642, 2008, 2328, 2643, 2009, 1426, 2010, 
            2762, 2132, 2011}], 
           
           Line3DBox[{2013, 2329, 2644, 2012, 2330, 2645, 2014, 2331, 2646, 
            2015, 2332, 2647, 2016, 2333, 2648, 2017, 2334, 2649, 2018, 2335, 
            2650, 2019, 2336, 2651, 2020, 2337, 2652, 2021, 2338, 2653, 2022, 
            2339, 2654, 2023, 2340, 2655, 2024, 2341, 2656, 2025, 2342, 2657, 
            2026, 1442, 2027}]}, {
           GrayLevel[0.2], 
           
           Line3DBox[{513, 753, 514, 2343, 768, 543, 2344, 783, 558, 2346, 
            798, 573, 2349, 813, 588, 2353, 828, 603, 2358, 843, 618, 2364, 
            858, 633, 2371, 873, 648, 2379, 888, 663, 2388, 903, 678, 2398, 
            918, 693, 2409, 933, 708, 2421, 948, 723, 2434, 963, 738}], 
           
           Line3DBox[{515, 754, 2448, 516, 769, 544, 2345, 784, 559, 2347, 
            799, 574, 2350, 814, 589, 2354, 829, 604, 2359, 844, 619, 2365, 
            859, 634, 2372, 874, 649, 2380, 889, 664, 2389, 904, 679, 2399, 
            919, 694, 2410, 934, 709, 2422, 949, 724, 2435, 964, 739}], 
           
           Line3DBox[{517, 755, 2449, 518, 770, 2462, 545, 785, 560, 2348, 
            800, 575, 2351, 815, 590, 2355, 830, 605, 2360, 845, 620, 2366, 
            860, 635, 2373, 875, 650, 2381, 890, 665, 2390, 905, 680, 2400, 
            920, 695, 2411, 935, 710, 2423, 950, 725, 2436, 965, 740}], 
           
           Line3DBox[{519, 756, 2450, 520, 771, 2463, 546, 786, 2475, 561, 
            801, 576, 2352, 816, 591, 2356, 831, 606, 2361, 846, 621, 2367, 
            861, 636, 2374, 876, 651, 2382, 891, 666, 2391, 906, 681, 2401, 
            921, 696, 2412, 936, 711, 2424, 951, 726, 2437, 966, 741}], 
           
           Line3DBox[{521, 757, 2451, 522, 772, 2464, 547, 787, 2476, 562, 
            802, 2487, 577, 817, 592, 2357, 832, 607, 2362, 847, 622, 2368, 
            862, 637, 2375, 877, 652, 2383, 892, 667, 2392, 907, 682, 2402, 
            922, 697, 2413, 937, 712, 2425, 952, 727, 2438, 967, 742}], 
           
           Line3DBox[{523, 758, 2452, 524, 773, 2465, 548, 788, 2477, 563, 
            803, 2488, 578, 818, 2498, 593, 833, 608, 2363, 848, 623, 2369, 
            863, 638, 2376, 878, 653, 2384, 893, 668, 2393, 908, 683, 2403, 
            923, 698, 2414, 938, 713, 2426, 953, 728, 2439, 968, 743}], 
           
           Line3DBox[{525, 759, 2453, 526, 774, 2466, 549, 789, 2478, 564, 
            804, 2489, 579, 819, 2499, 594, 834, 2508, 609, 849, 624, 2370, 
            864, 639, 2377, 879, 654, 2385, 894, 669, 2394, 909, 684, 2404, 
            924, 699, 2415, 939, 714, 2427, 954, 729, 2440, 969, 744}], 
           
           Line3DBox[{527, 760, 2454, 528, 775, 2467, 550, 790, 2479, 565, 
            805, 2490, 580, 820, 2500, 595, 835, 2509, 610, 850, 2517, 625, 
            865, 640, 2378, 880, 655, 2386, 895, 670, 2395, 910, 685, 2405, 
            925, 700, 2416, 940, 715, 2428, 955, 730, 2441, 970, 745}], 
           
           Line3DBox[{529, 761, 2455, 530, 776, 2468, 551, 791, 2480, 566, 
            806, 2491, 581, 821, 2501, 596, 836, 2510, 611, 851, 2518, 626, 
            866, 2525, 641, 881, 656, 2387, 896, 671, 2396, 911, 686, 2406, 
            926, 701, 2417, 941, 716, 2429, 956, 731, 2442, 971, 746}], 
           
           Line3DBox[{531, 762, 2456, 532, 777, 2469, 552, 792, 2481, 567, 
            807, 2492, 582, 822, 2502, 597, 837, 2511, 612, 852, 2519, 627, 
            867, 2526, 642, 882, 2532, 657, 897, 672, 2397, 912, 687, 2407, 
            927, 702, 2418, 942, 717, 2430, 957, 732, 2443, 972, 747}], 
           
           Line3DBox[{533, 763, 2457, 534, 778, 2470, 553, 793, 2482, 568, 
            808, 2493, 583, 823, 2503, 598, 838, 2512, 613, 853, 2520, 628, 
            868, 2527, 643, 883, 2533, 658, 898, 2538, 673, 913, 688, 2408, 
            928, 703, 2419, 943, 718, 2431, 958, 733, 2444, 973, 748}], 
           
           Line3DBox[{535, 764, 2458, 536, 779, 2471, 554, 794, 2483, 569, 
            809, 2494, 584, 824, 2504, 599, 839, 2513, 614, 854, 2521, 629, 
            869, 2528, 644, 884, 2534, 659, 899, 2539, 674, 914, 2543, 689, 
            929, 704, 2420, 944, 719, 2432, 959, 734, 2445, 974, 749}], 
           
           Line3DBox[{537, 765, 2459, 538, 780, 2472, 555, 795, 2484, 570, 
            810, 2495, 585, 825, 2505, 600, 840, 2514, 615, 855, 2522, 630, 
            870, 2529, 645, 885, 2535, 660, 900, 2540, 675, 915, 2544, 690, 
            930, 2547, 705, 945, 720, 2433, 960, 735, 2446, 975, 750}], 
           
           Line3DBox[{539, 766, 2460, 540, 781, 2473, 556, 796, 2485, 571, 
            811, 2496, 586, 826, 2506, 601, 841, 2515, 616, 856, 2523, 631, 
            871, 2530, 646, 886, 2536, 661, 901, 2541, 676, 916, 2545, 691, 
            931, 2548, 706, 946, 2550, 721, 961, 736, 2447, 976, 751}], 
           
           Line3DBox[{541, 767, 2461, 542, 782, 2474, 557, 797, 2486, 572, 
            812, 2497, 587, 827, 2507, 602, 842, 2516, 617, 857, 2524, 632, 
            872, 2531, 647, 887, 2537, 662, 902, 2542, 677, 917, 2546, 692, 
            932, 2549, 707, 947, 2551, 722, 962, 2552, 737, 977, 752}], 
           
           Line3DBox[{978, 1218, 979, 2553, 1233, 1008, 2554, 1248, 1023, 
            2556, 1263, 1038, 2559, 1278, 1053, 2563, 1293, 1068, 2568, 1308, 
            1083, 2574, 1323, 1098, 2581, 1338, 1113, 2589, 1353, 1128, 2598, 
            1368, 1143, 2608, 1383, 1158, 2619, 1398, 1173, 2631, 1413, 1188, 
            2644, 1428, 1203}], 
           
           Line3DBox[{980, 1219, 2658, 981, 1234, 1009, 2555, 1249, 1024, 
            2557, 1264, 1039, 2560, 1279, 1054, 2564, 1294, 1069, 2569, 1309, 
            1084, 2575, 1324, 1099, 2582, 1339, 1114, 2590, 1354, 1129, 2599, 
            1369, 1144, 2609, 1384, 1159, 2620, 1399, 1174, 2632, 1414, 1189, 
            2645, 1429, 1204}], 
           
           Line3DBox[{982, 1220, 2659, 983, 1235, 2672, 1010, 1250, 1025, 
            2558, 1265, 1040, 2561, 1280, 1055, 2565, 1295, 1070, 2570, 1310, 
            1085, 2576, 1325, 1100, 2583, 1340, 1115, 2591, 1355, 1130, 2600, 
            1370, 1145, 2610, 1385, 1160, 2621, 1400, 1175, 2633, 1415, 1190, 
            2646, 1430, 1205}], 
           
           Line3DBox[{984, 1221, 2660, 985, 1236, 2673, 1011, 1251, 2685, 
            1026, 1266, 1041, 2562, 1281, 1056, 2566, 1296, 1071, 2571, 1311, 
            1086, 2577, 1326, 1101, 2584, 1341, 1116, 2592, 1356, 1131, 2601, 
            1371, 1146, 2611, 1386, 1161, 2622, 1401, 1176, 2634, 1416, 1191, 
            2647, 1431, 1206}], 
           
           Line3DBox[{986, 1222, 2661, 987, 1237, 2674, 1012, 1252, 2686, 
            1027, 1267, 2697, 1042, 1282, 1057, 2567, 1297, 1072, 2572, 1312, 
            1087, 2578, 1327, 1102, 2585, 1342, 1117, 2593, 1357, 1132, 2602, 
            1372, 1147, 2612, 1387, 1162, 2623, 1402, 1177, 2635, 1417, 1192, 
            2648, 1432, 1207}], 
           
           Line3DBox[{988, 1223, 2662, 989, 1238, 2675, 1013, 1253, 2687, 
            1028, 1268, 2698, 1043, 1283, 2708, 1058, 1298, 1073, 2573, 1313, 
            1088, 2579, 1328, 1103, 2586, 1343, 1118, 2594, 1358, 1133, 2603, 
            1373, 1148, 2613, 1388, 1163, 2624, 1403, 1178, 2636, 1418, 1193, 
            2649, 1433, 1208}], 
           
           Line3DBox[{990, 1224, 2663, 991, 1239, 2676, 1014, 1254, 2688, 
            1029, 1269, 2699, 1044, 1284, 2709, 1059, 1299, 2718, 1074, 1314, 
            1089, 2580, 1329, 1104, 2587, 1344, 1119, 2595, 1359, 1134, 2604, 
            1374, 1149, 2614, 1389, 1164, 2625, 1404, 1179, 2637, 1419, 1194, 
            2650, 1434, 1209}], 
           
           Line3DBox[{992, 1225, 2664, 993, 1240, 2677, 1015, 1255, 2689, 
            1030, 1270, 2700, 1045, 1285, 2710, 1060, 1300, 2719, 1075, 1315, 
            2727, 1090, 1330, 1105, 2588, 1345, 1120, 2596, 1360, 1135, 2605, 
            1375, 1150, 2615, 1390, 1165, 2626, 1405, 1180, 2638, 1420, 1195, 
            2651, 1435, 1210}], 
           
           Line3DBox[{994, 1226, 2665, 995, 1241, 2678, 1016, 1256, 2690, 
            1031, 1271, 2701, 1046, 1286, 2711, 1061, 1301, 2720, 1076, 1316, 
            2728, 1091, 1331, 2735, 1106, 1346, 1121, 2597, 1361, 1136, 2606, 
            1376, 1151, 2616, 1391, 1166, 2627, 1406, 1181, 2639, 1421, 1196, 
            2652, 1436, 1211}], 
           
           Line3DBox[{996, 1227, 2666, 997, 1242, 2679, 1017, 1257, 2691, 
            1032, 1272, 2702, 1047, 1287, 2712, 1062, 1302, 2721, 1077, 1317, 
            2729, 1092, 1332, 2736, 1107, 1347, 2742, 1122, 1362, 1137, 2607, 
            1377, 1152, 2617, 1392, 1167, 2628, 1407, 1182, 2640, 1422, 1197, 
            2653, 1437, 1212}], 
           
           Line3DBox[{998, 1228, 2667, 999, 1243, 2680, 1018, 1258, 2692, 
            1033, 1273, 2703, 1048, 1288, 2713, 1063, 1303, 2722, 1078, 1318, 
            2730, 1093, 1333, 2737, 1108, 1348, 2743, 1123, 1363, 2748, 1138, 
            1378, 1153, 2618, 1393, 1168, 2629, 1408, 1183, 2641, 1423, 1198, 
            2654, 1438, 1213}], 
           
           Line3DBox[{1000, 1229, 2668, 1001, 1244, 2681, 1019, 1259, 2693, 
            1034, 1274, 2704, 1049, 1289, 2714, 1064, 1304, 2723, 1079, 1319, 
            2731, 1094, 1334, 2738, 1109, 1349, 2744, 1124, 1364, 2749, 1139, 
            1379, 2753, 1154, 1394, 1169, 2630, 1409, 1184, 2642, 1424, 1199, 
            2655, 1439, 1214}], 
           
           Line3DBox[{1002, 1230, 2669, 1003, 1245, 2682, 1020, 1260, 2694, 
            1035, 1275, 2705, 1050, 1290, 2715, 1065, 1305, 2724, 1080, 1320, 
            2732, 1095, 1335, 2739, 1110, 1350, 2745, 1125, 1365, 2750, 1140, 
            1380, 2754, 1155, 1395, 2757, 1170, 1410, 1185, 2643, 1425, 1200, 
            2656, 1440, 1215}], 
           
           Line3DBox[{1004, 1231, 2670, 1005, 1246, 2683, 1021, 1261, 2695, 
            1036, 1276, 2706, 1051, 1291, 2716, 1066, 1306, 2725, 1081, 1321, 
            2733, 1096, 1336, 2740, 1111, 1351, 2746, 1126, 1366, 2751, 1141, 
            1381, 2755, 1156, 1396, 2758, 1171, 1411, 2760, 1186, 1426, 1201, 
            2657, 1441, 1216}], 
           
           Line3DBox[{1006, 1232, 2671, 1007, 1247, 2684, 1022, 1262, 2696, 
            1037, 1277, 2707, 1052, 1292, 2717, 1067, 1307, 2726, 1082, 1322, 
            2734, 1097, 1337, 2741, 1112, 1352, 2747, 1127, 1367, 2752, 1142, 
            1382, 2756, 1157, 1397, 2759, 1172, 1412, 2761, 1187, 1427, 2762, 
            1202, 1442, 1217}]}, {}, {}, {}, {}, {}}}, 
        VertexNormals -> CompressedData["
1:eJztnXVwldmy9hPcAwkW3AeXAMECjROc4B7cNbi7u7u7RQgSJDQQNEgSiBPf
yY4HDw7fvuft3lW397fm3Km61DDncv5ZdSjm3a+s1evpp3+9KD1kYtfhGczM
zLxzmJllNFP97xWMfzfTus3rRPz2aM2HNkNvwDjz7UWn9Y6BCqMKNE5v/xx5
bFDsYL/Xr1N+//1/8/eL197Y6sSsGKSR/z/wf8/X4+s4W16ok6epL/K4dPrr
ukfDU8HDrMagBztC8Zo2wrF2hT3HxCZC0dndwgdMjsWFR4auf+v6GPLbVzmf
YV08hG9wW5XTLhJnnJoWnIw6nKmN/+euT9/DOPJ3UX0vuo7xenwd+j3jyL9b
f5llsyJL4vGdn37A9VJRUMe2Wd0FecKhY0idXrtXJmKmI20rxvTxxsDjub+G
lIr5P3d9mudI89y4XlTzn+cBzwsrmg98f3y/dek+L0+1Xb1rZyjyqKuU3+GH
LhH6fFydYcPMWOyrjZAQfjnzypYvgJ6Hnw/4uXh+0bwz/v/8Zyq9edwpHiss
Gj/+ZaZH8K36c4esYbFQ0bnngk+14vDAt74fa9SNwY6Rrk3sakX+cvf/V+c/
/XfI64+vw/OA5wX/Lt2n8X75Pj205+Hng2h6LnoPWE97D1Cb3gO9N6T3ZowD
F2Hw9bSBCfhuJlTIliUKOoyoP6Fj91AY7D2/YJNSyThxaZadx7Pew51JJ+bc
zxP1y93/X53/fzW+8TzgecHPRfPMeL883/7q9cvaJi59WjwBN0z4WK1na2+o
0LjVSZsvOih/xaqic3k9bv0U0gK/RSMkbXs9+GPYL3f/Pzv+y/XGI88Dnhc8
H/7q9W+Ut39z+XwCBlyzX7DwfSTsPvbdq2ytECjl1K3oiT3J6NHk4dbTHnew
ctCAi5VPRvxy9/+z4z/HZY7THJ85XnD84LjB85jnNc9nfr+e9L530nsu8Hhd
z641I9GKxk4bs48PrBEPmavWeOZwNA5phBVbLTJfcn4G9D34+8Af9F22aOuE
1w3weqH4xfEMOI7RvsL7DPD+8qvFf97/eD/sQPc5ieIyx+ld9FwcL8pR/GhK
7+EyzWOe1xXpvfH7zUTvezm9Z/ouxpG/C31HpO8Iu+g70ndH+u7wB313midI
88S4v9C8QppXxn3/V4v/P1s/8zym72Ocz/x+g+h976X3/Kvd/z9d/9M64XUD
vF54HvO85jj2q93/P13/D6G4PIHi9A6KYxwvOH5w3PjV7v+frv95/+P9kPcX
jsscpzk+/2r3/0/X///06//T9f8//fqq+S/8UKM/qvpe/N/z9YTv+vvvK/6+
yuf/N/7/L/9c/5S/r5rnqnWhWke87q6Jdadap7yuZ4h1/X/t+qo4r/peHNc8
xD6i2nfkPiX0s8m+9n/t+iqdo5r/UkcJ/Yx8v0I/G0ehn6Gv0HUqHajSjSqd
KXWp8P9/mfv/q/NflUeo8g7WzX1EnuIh8hqhn4H0Mwr9bMybhP9vkmexX8b+
mfD/f5n7/6vz/6/GN1WeLvN6oZ//x9dX+QzlhS8h/P9f5v5/dvwX6w2Ffjbx
tf7q9cn/N/qawv83+s3C//9l7v9nx3+lT6vwdaUPLPx/o28s/H+wEj4z+9Jc
BxD+v9HHFv4/ct1M+P9Gn1z4/0ZfXfj/v0z8l3UK4f8b47Tw/42+pvD/jfNa
+P9I/j8I/x8LiLqMrOMI/99Y9xH+v0mdSFlX+sXi/8/WzzyPuT4j/H8k/x+E
///L3P8/Xf+XE3V24f+b1OV/tfv/p+t/8v+R/H8U/r8Jl/Kr3f8/Xf9Lzkr4
/yZc1q92//90/f9Pv/4/Xf//06+vmv8qLvqfwnX/U/6+yufHre/s379NwOk1
dC/XNfSE3GsflTpwXgeDRg/+PjbbU1w9bbD5rMfPsNj6EJ3liVRIHn+u3Xnr
YJw34r21zwRfnFq8A5yckwL+5gPnrTUPxcH7em5Y4h8ApYss3ZHfoPfNLg6e
lK6Px6CRO4v263UMMp5My5XTLg7e353km2Snwx8NSr+fcdsXHLdFOz2rmADd
XvnNLPIhDBs3zzBo3GpvtLceM87rZjLkaDlibu2yMYZ9LfhOV8swvDo4zS6b
gx6OrKmwPV8tPeaKqdjy3fw16PasTf3sueOhcrE9hWP3BOCqMy8LT2wdjEPH
TQurvCkZGlfz8AyOjMJG8QUztbjqhSEHveDz9SS4Pv6PlO7lgjFCX6T56EH3
oD/23jGuSCqsb1uxVp/6sbjOMWdkrRQ3nFQ6+eRw9wRY0j7y+ssl0ZieXLdi
5bTn8Or48d1bXySAx40MrWtV0KHDqYddvla7gjkr1e3rOjkR1t9Pbjfzqw6P
LH6Q/CP6EaZ069nd+0c8jJz6pmp61hj09c6e522Nm/ikzwf3lyWTIIub+fgG
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
5fODmH/heiXzRswfMXfEvBefd8g8leq5/q77Z86euXuuD3K9k88L5Lonnz/O
9Tqu0/E5d1ZUl+Z6NHMAzAUwD8AcRmPiMphbaEMczATiYpZTnZ3PafpCXBLz
SMyB8TmdzAEyh8dcHvN4quf6u+6fz0XiPgmuw3IdmuvSXI/muinXUbl+yudV
nSNegOvjzGcwr8GcBvMxzMswH6L6XdX1mc8rR7we85Z8Xief35mf+MC/ev2f
ff98/hT3tXC9m/kA5gWYE+Dz8bm+zXVt5jb4HHTus2Buhjka5meYW2KOifkl
5saYI2N+7Bhxe3ri+JjfY27yxwmNo2SulblV5liZwyxN3DCf68ncIHPbzHEz
v83cPHP0zGVx3wL3MTBHxH0jfC4dcy98bhr3FTGnwed8cR8ScwXMbTDHwfwG
/3sDzB0wb8A8DfM1zNXweejMNzHXxOd3M1/2lLgyPm+a+T7m+myJp3xDfCXz
2OWIZ+XzfZlrLUE8MfPFzBXXIZ6brmM8b9mJeHrm6/l3+TxK7m/gvgY+P5H7
S/i5uJ+H+3v4PfD5dNwHxu+Tz1PjvjF+n8zTMF/D34v//QbmQfh78Tn+fK4/
f3fmzJg743nCnB+fm76C5hVzlsxdMm9J8xZ3Efd6m+Ytn5vM5ygzp82cdybi
vnldMGfP3D2vIz5HlfseeN1xnwn3nfA65T4f7vvhdc19Vtx3xXGAzwHkvj2O
J3xuHff5cTxhzom5J45X/O9hMKfD8eoF8WeexKP1o7jH/B/zgBwnmb9cTjwm
x1XV76quz+dT83nVzIEj8ffM4zO//Vev/7Pvn/swuS+T99NMxJ/Rfm3kn/nf
F2F+ivdr5gL5nF3mA5nL5HNhmTtlLjYzcbKsK5hL5nM3WYcwF87nRLJuYS6f
OX3WOdwXwX0SrItUz/V33T+fw8h9tKwn04gLnE2coNCrRq6N9Srzmsxvsu5N
JF6W+Vnme5lXZn6ZeVQ+z5T5cdbhfP4m8/us2+OoX4LPX2edz/0q3L/CeYHq
uf6u++c+Z+575nyKeU3mN0W+hvzv4XC+xudEbyWulrl05piZa2aeGYgjZ66c
80rm+OcR1895KJ9zmk59FZy3ch8Ln3PPeS73EXFfEefFquf6u+6fzxXlPnX2
E/icXOZq2a/gf0+IOVD2K/i810DinY2cM/HlzJuzT8J8P/P+7Kuofvc/9fp8
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
ClBwBUhcAQquAIkrQMEVIHEFKLgC5FFwBUBcAQquAIgrQMEVIHEFKLgCIK4A
BVeAxBWg4AqAuAIUXAESV4CCKwDiClBwBUBcAQquAIgrQMEVAHEFKLgCIK4A
BVeAxBWg4AqAuAIUXAEQV4CCKwDiCkBwBcZRcAVAXAEKrgCIK0DBFQBxBSi4
AiSuAARXgDwKrgCIK0DBFSBxBSi4AiSuAAVXAMQVoOAKgLgCFFwBEFeAzBXw
nz+lP7eiP9+iuI783db0u7aK+0yg5wqi5wJ6LtV7UL03fs8u4j3zd8nQ6b9/
F/6O7vQdvek77qbvvoq+e0767m40P9zEPGlO88qF5lUjmleqecjzdpSYty8j
///zXLUuVOtoCa274rTuTtO6k+t0O63TKbSui9G6rkrrurgiDnSiuJGL4sZF
ihs2Is5EUJwZKuLSR4pLn0Qc01McU8U9GSetKU6q4qoqDg8WcduZ4nZnEed9
Kc73U+wLnWkfOUf7SGnaR8rTvtOS9p0htO/Ifeoq7VO8r+UU+1pX2v+6in2w
oGLfVO2zp2lfHkL78ival1X7eHmx7/vRvs86oT3phPWkEz6TrgglXbGKdIVK
h/iRbmlJuqUV6RYn0jc8biKdI3URki5iHZWNdFR+0lGsu0YJ3cU6zV3oNAvS
dUuFrsuh0IGjSTcWFrqxnkJn2gldakO6lHXsTdKxD0jHOgrd60C611Ho5G6k
k98qdLVKh7NuTyDdnkq6/bnQ+WtJ5zdX5AUyj+hAeYQq7+A85bvIU24r8poU
kQedpTyoNuVLNiJvukJ51h+UZ32lPMuL8rI1Ii/jPK6syOPyUt7XSeR9qjxx
kiKv5DzUUuSh+xR56zbKb7eJPPcw5cWDRV7MefRKkUer8u6nlJ8/FXk65/WV
RF6v8gHYNwgm36Ah+QYqn4F9idHkS8SSL6HyMdj3cCLfowv5Hg/IH+GxAPkk
7Ku0EL6Kyodh3+aS8G3Y5xlPPk8j8nkqkS80W/hCKh+JfSc74TupfKpS5Gv1
Jl/rA/laKh+MfTN74Zuxz3ZE+Gzsy80TvhxzpKTrQOg6E+5UcqpC15lwraTr
gHQdCF1nws2qOFvmcl0El8scL+k6ELoOSdeB0HVIug6ErkM3wRWTrkPSdSh0
nQm3zJzzKME5k64z4aJVHLWKuyZdh6TrQOg6I9ctdB2SrgOh60y4cdJ1SLoO
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
+Orco4v3iYTLXXTLt7fzRxhxsuj3r4lw5dju2ZeSgyBT0PuCeV5sw4CDuTu0
OpsKi9f0uTMqMBjsu0YtWl02HK4O+364q2Hf2X/35KcvvWPhw7Guoz8/eAwp
1Yo0a3EwHkZnLF0+z8JocE9v/DWtrB/mSTHvm31IIvQ5W8z5+dJQsJ0Yu9Z+
1UOced5nbLcxKTC+5KuR57z8YVfxHy4H9YFQtEDpvJkMOmfSvTv9rWbEQNMp
u7ZnmR4GXvUaX7+fHAfXNkRfzmKrgyrmnYJGvn6EnfOPqXJ2fwK47M321rtS
GLjsal2gbbMgTC7yaHoug36jP8fz2p8D/zldB6tq1wG+Dv0uNtF+F/l36T6R
7hP5Pntrz4X1tecCfi56D3hRew/A74HeG77X3hvye6P3jG2094z8num7oKX2
XYC/C31H9NC+IzSh70jfHddp3x34u6/T5gm+0uYJ8jyheYWZtXmFV2leVdLm
Ia7R5iHUpXl4UJu3WFibt8DzluY5jtHmOfI8P6+tC3DW1gWuonVB6whOa+sI
eB0V1tYd0roDXne0TpHWKfA63aqtaxytrWvkdU1xAKy0OIAcB+y0uIEUN4Dj
BsUZpDgDHGfmaXEJHbW4hByXKI5BSS2OIccxintAcQ847lGcRIqTwHHSUour
SHEVOK5SHAaKw8Bx+JwWt5HiNnDcpjiPk7U4jxznaV9A2hdwDO0LDbR9BD5q
+wjyPkL7DtC+g1lp36F9CoO1fQqq0j7lq+1rSPsa8L5G+yBc1PZB4H3QQds3
gfZNMO6b2j6LtM8C77NHtH0Zi2v7MvC+PEnbx5H2ceB9nPZ9vKXt+1CM9v3m
mk5A0gnIOmGnpiuQdAWyrtih6RAgHYKsQ0i3AOkW/ES65YCmc5B0DhwgnUO6
CEkXAeuiD5/+paPwsKajIJB01HVNd+EYTXcB6y7SaUg6DVinWWu6Di9rug69
SdeRDkTSgcg6kHQjFtB0I7JuPKXpTCip6UxknUm6FMI0XYqsS0nHwjJNxyLr
WNK96KbpXmDdSzoZnTSdDKyTIzRdjY6argbW1R00HY7bNB0Ok0iHV9Z0O27V
dDuybq+n6Xzw1HQ+ss5/qeUFcEnLC8Cf8gLKI8BVyyOA8wg3Le+AilregZx3
zNHyFMip5SnIeUpbLa/BblpeA7Upr6E8CCkPgvmUB1HehJQ3QSLlTVO0PAs+
a3kWcJ5FeRlQXgacl73T8jjYpeVx0JjyuIla3geU9wHnfZQnAuWJkInyRMor
gfJK4LyypJaHIuWhsI/y0AZa3or2Wt4KnLcW0/JcoDwXGlOeO1rLi5HyYuC8
2FfLo4HyaOA82kfLu5HybuC8+4eWp0OilqfDZ8rTK2h5PY7S8nr4Rnk9+QBI
PgCcIh9gh+Yb4GbNNwD2DchnQPIZgH0G8iWQfAlgX+Kk5mPgNs3HAPYxyPdA
8j2AfQ/ySZB8EmCfJJ/mq2BHzVdB9lX2az4MVtF8GGQf5pzm22AuzbeBceTb
7NZ8Hlyn+TzQkHwe8oWQfCFgX4h8JLim+UjIPhL5TmCv+U7AvhP5VEg+Fawh
n+qy5msB+VrAvhb5YHBD88HgE/lgVzTfDMk3A2/yzU5pPhuSzwbss5Evh6D5
chBOvhz/Ofl1IPw6k+t4iN8Vfh2QXwfCrzN5LvkehF8HbcV74/fsKd6z6ruQ
X4fk14Hw65D8OhB+HVYV84T8Ouwk5pVqHqrmLfl1uFXMc9W6UK0j8utwnVh3
cp0Kvw7JrwPh1wH5dSD8OpO44a+IM+MUcamMiGPCr8N2Iu6VEnFS+HUmcVXG
YeHXmcRt8uuA/DoQfp3JvkB+HXwU+4jcd4RfZ9ynhF+H5NeB8Osgl9gHya+D
SmLf5H3WReyz5NcB+XUg/Dq4KfZx8utwm9j3ya9D8utA+HU4SOgK1iEThQ5h
3eIudAvrnMVC57AuihC6iPw6KCd0FOuuQkJ3qXQa+XVIfh0Kv85EB5Jfh6OE
biS/DsmvA+HXmejSg0LHCr/OqHuFX2eik3cpdHULhQ5n3U5+HQi/zkTnk1+H
JUReoMojuqryDspTLog8xU+R13AeRH4dCL/OmDcJvw4+iTxL5mXCr8NJIo87
q8j7VHlifkVeqcpDVXkr57mlRZ5Lfh0OEnmxKo9uqsi7OU8vIPJ08utwrMjr
VT6AtcI3YJ9ht/AZyK8D8utQ+HU4WvgY5NdhIeF7kF+H5NeB8OuQ/DoUfh2+
Fj4M+zZzhG/DPg/5dSD8OswkfCH2keyFj8S+0wfhO7FP5S58KvLr0Fb4Wiof
jH2zpsI3Y5+tivDZ2JdzEb4c+3jnhY/Hvl9V4fuxT9hE+IQqX5H8OqgvfEj2
LS8K35J9zvfC52RftI3wRdlHtRQ+Kvuu5Neh8OtgnfBpya+DV8LXZR+Y/DoQ
fh2QX4fCr4PCwmdmX3qM8KXJr0Py60D4dXha+N6FFT65ylcnvw5GCx+efXsr
4dvbKXx+VV2A/DpwFHUErjuUFHUHVZ1CVdewVNRBVHWTc4o6C9dlJou6jKzj
CL8OP4q6j6wTCb8OyK9D4deZ1KG4bnVR1K0cVHUuRV2M/DooLupokxR1N67T
kV+Hwq8zqevtVNQBdyjqhrLOKPw6Y11S+HUmdUzy64D8OhR+HYwRdVJVXZX8
OiC/DoRfZ1K35TpvAVHnJb8OS4q6MNeRw0QdmevOy0TdmevUbqJOzXVtJ1HX
Jr8OHEUdnPw6IL8OhV8HW0Wdnfw69BR1efLrkPw6FH4duoq6P/l1WFFwAuTX
YU7BFZBfB+TXofDrjNyC8OuMnIPw6/Cz4CJUHAX5dUh+HQq/zoTTkFyH8OtM
OJCSghsRfh3YC86kmOBShF9nwrH4KrgXHwUnQ34dkl+Hwq8D8utQ+HVGbkf4
dbBZcD4qLkjFEZFfB9sEd6TilFRcE/l10FFwUOTXQRXBTZFfB+TXofDrgPw6
FH6dCcfF3Nc1wX0xJ2YvODHJlQm/zoRDY26N/DoUfp2RcxN+nQkXxxwd+XXI
ft3/A3zx55o=
         "]], {}, {{}, {}}}, Axes -> True, AxesLabel -> {None, None, None}, 
      BoxRatios -> {1, 1, 0.4}, DisplayFunction -> Identity, FaceGridsStyle -> 
      Automatic, ImageSize -> {180., 166.74088966451538`}, 
      Method -> {"DefaultBoundaryStyle" -> Directive[
          GrayLevel[0.3]], 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "RotationControl" -> "Globe"}, PlotRange -> {Full, Full, All}, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, SphericalRegion -> True, 
      Ticks -> {Automatic, Automatic, Automatic}, ViewAngle -> 
      0.42769327351158737`, 
      ViewPoint -> {1.1495896048146623`, -2.1863538107685927`, 
       2.312639348156075}, 
      ViewVertical -> {-0.3180699178093293, 0.6049231603876563, 
       0.7299996557611357}], 
     FormBox[
      FormBox[
       TemplateBox[{"7", "10"}, "SwatchLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30100577`", ",", "0.22414668499999998`", ",", 
                    "0.090484535`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19699838300000003`", ",", "0.252204821`", ",", 
                    "0.33320940200000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               Graphics3DBox[
                SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                  DirectedInfinity[1]}, 
                PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
                0]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     Graphics3DBox[{
       GraphicsComplex3DBox[CompressedData["
1:eJztnV1yG1lyhdnqngYldauhBiRBECQBRRAEQRDEDlhr8AoYjvCzt4ClcCl8
9ip6CZ4/j3vGM/SDkSd8v8wTeHVH2C8Z/qb6VvGweCtv3pNXi3/+13/6lxdn
Z2f/9urs7Nuz+L9/v6/jWV/zc8OHho8Nnxg+M3xueGf40vCV4WvDN4ZvDd8Z
vjecep+K54YPDR8bPjF8Zvjc8M7wpeErw9eGbwzfGr4zfG8432vqS+7i0PCx
4RPDZ4bPDe8MXxq+Mnxt+MbwreE7w/eGc/7ge0xOvU/FseETw2eGzw3vDF8a
vjJ8bfjG8K3hO8P3hnOe5nxBzvea+pK7ODF8Zvjc8M7wpeErw9eGbwzfGr4z
fG84v4ecl8k5f/A9Jqfep+LM8LnhneFLw1eGrw3fGL41fGf43nDmHfz+kXOe
5nxBzvea+pK7ODe8M3xp+MrwteEbw7eG7wzfG878jnkGOb+HnJfJOX/wPSan
3qdiZ/jS8JXha8M3hm8N3xm+N5x5dETmdxGZd0Tk9zAi5+mInD8i8r2OSL1P
xaXhK8PXhm8M3xq+M3xvONcrzJvJmd8xzyDn95DzMjnnD77H5J3hLq4MXxu+
MXxr+M7wveFcF3J9Qs48mvkcOfMOfv/IOU9zviDvDKfep+La8I3hW8N3hu8N
5/qb60ByrleYN5Mzv2OeQc7vIedl8s5wvtfUl9zFjeFbw3eG7w1nnYPrbXKu
C7k+IWcezXyOnHkHv3/kneGcP/gek1PvU3Fr+M7wveGsJ7GuQc71N9eB5Fyv
MG8mZ37HPIO8M5zzNOcLcr7X1JfcxZ3he8NZt2P9iJx1Dq63ybku5PqEnHk0
8znyznB+Dzkvk3P+4HtMTr1Pxb3hrI+yTkfOehLrGuRcf3MdSM71CvNm8s5w
5h38/pFznuZ8Qc73mvqSu+jq1KyPUn9y1pOoPznX39SfnOsV6k/O/I76k/N7
SP3JOX9Qf/deu/2AU/Vrzj/krJty/iFnnYnzDznX5Zx/yLmO4fxDzryP8w85
v5On5m++1/w98bvK+r+rd/P7S866Kb+/5Kwz8ftL3hnO9SK/v+TMr/n9dXkH
Od9TzlPkrP/z903O+r+rjzP/JGfdlPknOetMzD/JuS5n/knOdcyp/JrvHb/T
5JynOa9xncT6P98Pctb/XT2d6y9y1k25/iLvDGf9g+svty4k53vEPJWc8y6/
6+Ss/3N+JGf9n+8TOev/rv7O+gM566asP5CzznSq/sH3gus0cs6jzGvJmXcw
D2Ddi/V/zqfkrP/z/SNn/d/V61l/I+8Md/U8/p5ZpyDnvMh1HTnzCObB5Kz/
d8fI+n9w1v+Ds/4fnPX/4Kz/B2f9v8P/7+rQ5Py9BeffU3DOc8H5/QnOvCA4
87XgzKODs/7PPI+c9X9+F8lZ/+c8Qs76/6n9ls5w/n2wfkrO7wnrTeTMv7g+
J+d6hesZ/r2y/s+8kJz1f35HyVn/P7V/SF35ezq1f8C6Njm/26wDkjPPZd2E
nOtCrjP5XWL9n/k6Oev/zG9OfXf5PSDn+8u/H3LO96e+w8yPWJ8l53qC9Sxy
rr+5/mf+xfo/11HkrP+f8nfw5+Z3mpzzBOc1cn5X+R6c2p9g3Zyc6zbWGclZ
52BdhusM1v+5vj217uJ6gJzvF/Mncs7H/N6QM3/h3yc58/1T6zCuj1n/JWc9
ifUyrqdZ/3d1B66Hyfm+cP1AzvmV+RZ5ZzjzRM6b5FxX8T07tf/Bujw563as
Y56qu7EeRM7fP9fP5Jwvud4gZ37B/Iyc+Ti/Z+Rcv/Lvn5z1nlN1ONZHXX2Z
9VBy/j5ZPyLn/Mf1NjnzBa5PyDvDue5hnkHOOgHnZXLW1fgeu3oz+bPxoz/j
9xBx0NfXD/ry+sOb+npxjj8y44/q65/e19eL83mm5nmm9fX9l/p6cT7/wjz/
or7+l66+Xpw/r+lrEMf1j6bfQZz6sC4V+rAueIwPpj9CnHqavglxXD83/RRz
N1/He8vv5aAvud5DXj+qud4rjjOtud4Tjr+ouX7vvK/x8+v3yOdhvfYY9Xvh
c5o8Qzrz+UNn5n+DvuTSmdePai6dOc605tKZ4y9qLp15X+Pbl858Hta/j/HB
5Mc96/bHKJ35/KEz1zODvuTSmdePai6dOc605tKZ4y9qLp15X+PPl858HrOu
e2B9Pp7T+POlM58/dOb6fNCXXDrz+lHNpTPHmdZcOnP8Rc2lM+9rfPiPph4h
ncEfWIeP5zQ+fOnM5w+dWW8a9CWXzrx+VHPpzHGmNZfOHH9Rc+nM+5o62iPr
7fE8rLcf4wPr7fGcxm8vnfn8oTPrp4O+5NKZ149qLp05zrTm0pnjL2ounXlf
46t/ZF09nod19WN8YF09ntP46qUznz90jueNOOhLLp15/ajm0pnjTGsunTn+
oua/8Lq4r/HPP7J+Hs/D+vkxPrB+Hs9p/PPSmc8VOrOuPOhLLp15/ajm0pnj
TGsunTn+oubSmfc1PvlH1snjeVgnP8YH1snjOY1PXjrz/qEz68SDvuTSmdeP
ai6dOc605tKZ4y9qLp15X+OHf+S48Tyshx/jA+vh8ZzGDy+deZ/QmXXfQV9y
6czrRzWXzhxnWnPpzPEXNZfOvK/xvUtnPg/vd4wPrHvHcxrfu3TmeKEz67iD
vuTSmdePai6dOc605tKZ4y9qLp15X+Nvl858Hta3j/GBzxHPafzt0pn/XejM
uuygL7l05vWjmktnjjOtuXTm+IuaS2fe1/jYpTOfh3XsY5TOfE7jY5fO/N9D
Z9ZZB33JpTOvH9VcOnOcac2lM8df1Fw6877Gry6d+TysVx+jdOZzGr/6nM8d
MXRm3XTQl1w68/pRzaUzx5nWXDpz/EXNpTPva3zp0pnPw7r0MUpnPqfxpUtn
Pn/ozBg6/+O+idL57/dtDJ3/676J0vlv902Uzn+9b6J0/vW+jaHzf943UTr/
5b6J0vk/7psonf9830Tp/Kf7JkrnP943UTr/4b6J0vn392086no46hrxzMTQ
+fB9G6Xz920MnQ+/Qwydf9fG0PnwXRul83dtDJ0P37ZROn/bxtD58AIxdH7R
xtD58E0bpfM3bQydD2dtlM4/9U2Uvj+1UTojSuc3bZTOPyKGzj+2UTr/0Ebp
/EMbpfPrNkrn122Uzq8QQ+dXbZTOL9sonV+2UTqftzF0fjrqFFHv7wjxqF8/
auOZiaHz089tDJ0PP7cxdO5/bqN0/rmNofPTW8RY571tY+jcv22jdH7bxtD5
adjG0PkwbGPo3A/bKJ0/9E2Uzh8QQ+cPbZS+H9oonRGl8/s2Suf3bZTO79so
nd8hhs7v2iid37VROr9ro3Qet1E6j9soncdtlM6f+iZK50+IofOnNkrnT22U
vtM2HkyUztM2SudpG6XzR8TQ+WMbpfPHNkrnj22UzpM2SudJG6XzpI3S+Wvf
ROn8FTF0/tpG6fy1jdL5Sxul75c29iZK5y9tlM6fEUPnz22Uzp/bKJ0/t1E6
z9oonWdtlM6zNobOvxx/joih89OijaHz46KNofNh0cbQ+WHRRr2/C8SjfvNF
G89MDJ1/mbcxdH6atzF0fpy3MXQ+zNsYOj/M2xg69/M2hs7zeRul80XfROl8
0UbpfNFG6XzRRul80UbpfIEYOl+0UfpetFE6I0rnro3SuWujdO7aKJ27Nkrn
ro3SuWujdL7smyidL9sonS/bKJ0v2yidL9sonS8RQ+fLNkrnyzZK32Ubn0yU
zss2SudlG6Xzso3SedlG6bxso3S+6psona/aKJ2v2iidr9oona/aKJ2vEEPn
qzZK56s2SudVG6Xvqo2PJkrnVRul86qN0nnVRum8aqN0vu6bKJ2v2yidr9so
na/bKJ2v2yidrxFD5+s2SufrNkrndRul87qN0nfdxoOJ0nndRum8bqN0XrdR
Ot/0TZTON22UzjdtlM43bZTON22UzjeIofNNG6XzTRul86aN0nnTRum8aaP0
3bTxwUTpvGmjdN60UTrf9k2UzrdtlM63bZTOt22UzrdtlM63iKHzbRul820b
pfO2jdJ520bpvG2jdN62Ufpu29ibKJ23bZTOd30TpfNdG6XzXRul810bpfNd
G6XzHWLofNdG6XzXRum8a6N03rVROu/aKJ13bZTOuzZK310b5yYmXy7rpfRb
05fLejWuT75c1rE5Pn25rG/j+uTLZd2bz0NfLuvhuD75clkn5/PTl8v6Oa5P
vlzW1fnzmvNGki+X+xq4Pvlyud9BfejL5T4Irk++XO6PUE9zzkby5bLOT/3p
y+X+IHjy5XJ/EDz5crk/CJ58udwfBE++XO4PgidfLvcHwZMvl/uD4MmXy/1B
9i/Rl8v9bl5PXy73uzkOfbnc7+b49OVyv5v3NedpJF8u97vBky+X+93gyZfL
/W7279GXS/8Gr6cvl/4NjkNfLv0bHJ++XPo3eF9zbkby5dK/AZ58ufRvgCdf
Lv0b7F+lL5d+JF5PXy79SByHvlz6kTg+fbn0I/G+5nyM5MulHwk8+XLpRwJP
vlz6kdi/TV8u/XW8nr5c+us4Dn259NdxfPpy6a/jfU1fevLl0l8Hnny59NeB
J18u/XVRv4vnpi/3yJMvN66nL/fIky83xqEv98iTLzfGpy/3yJMvN+5rzrtI
vtx4Hvpyjzz5cuM5zXkXyZcbz0dfLv3P4MmXS/8zePLl0v8Mnny59D+DJ18u
/c/gyZdL/zN48uXS/wyefLn0P/PvjL5c+vl5PX259PNzHPpy6efn+PTl0s/P
+5rzK5Ivl35+8OTLpZ8fPPly6efn94G+XPan8Hr6ctmfwnHoy2V/CsenL5f9
KbyvOaci+XLZnwKefLnsTwFPvlz2pzCvoS+X/Va8nr5c9ltxHPpy2W/F8enL
Zb8V72vOo0i+XPZbgSdfLvutwJMvl/1WzMfpy2X/IK+nL5f9gxyHvlz2D3J8
+nLZP8j7mnMnki+X/YPgyZfL/kHw5Mtl/yDXkfTlhr+Gvty4nr7cI0++3BiH
vtwjT77cGJ++3CNPvty4rzlfIvly43noyz3y5MuN5zTnSyRfLvxI6XwD+nLZ
F8/r6ctlnzvHoS+Xfescn75c9qHzvuYcieTLZf84ePLlsh8cPPly2d/Ncwzo
y+U5A7yevlyeG8Bx6MvlOQAcn75c9vXzvua8iOTLZT8+ePLlsr8ePPlyef7D
M66DLzfq2PTlRt2bvtyok9OXq7o6fLlRh6cvN+r2yZeLOn/4cWNfgL7c2Eeg
L1f7DvDlxj4Ffbmxr0FfbuyD0JerfRP4crXPAj+u/Dfw5cY+Dn25se9DX672
ieDLjX0l+nJjHyr5crFvFX7c2OeiLzf2xejL1T4afLmx70ZfbuzT0Zcb+3r0
5WofEL5c7RvClxv7jPTj6vcNX27sY9KXq31P+HJjn5S+3NhXTb5c7MOGHzf2
benLjX1e+nK1Lwxfbuwj05cb+8705cY+NX252teGL1f74PDlxr45fbmxz04/
bjw3fbnax4cvN/b96csNn0Dy5cJXEH7c8CHQlxu+Bfpy5XOALzd8EfTlho+C
vtzwXdCXK58GfLnydcCXGz4Q+nLDN0JfbvhM6MfV+wRfbvhY6MsN30vy5cIn
E37c8NXQlxs+HPpy5duBLzd8PvTlhi+IvtzwEdGXK98RfLnyKcGXG74m+nLD
B0Vfbvim6MuVzwp+3NCFvtzwcSVfLnxf4ccNnxh9ueEroy9XPjT4csO3Rl9u
+Nzoyw1fHH258tHBlyvfHXy54dOjLzd8ffTlhg+Qvlz5BuHLDZ8h/bjKJ+jL
hY8x/Ljhe6QvN3yS9OXKVwlfbvgw6csN3yZ9ueHzpC9XvlD4cueoi4Yft0dd
NPy4D6iLypeLumj4cR9RFw0/7hPqouHH/YV10RO+3Pjv6MuN+9CXK58wfbnx
88GXGz83fbmhE3258jnDl9ujLio/Luqi8Xt9Ql003oN4L+jLla8bvly9d/Dl
xnuafLl43yPGf09fbvzd0Jcr3zt8ufF3SV+u/PXw5cbfPX258u3Dl9ujLio/
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
JM5zCtFXkjjP6URfSeJLw1eGrw3fGG761OgrEOe58ugrSf1WPKcKfVWJ8zw8
9FUlzvMg0VeVOM9DRV9V4kvDV4avDd8YvjWcfgL0VZHTVyC/wU81p69A/IPh
nwz/WnP6CsQvDL80/Mrwa8NvDL81/K7m9BXonI6R4R8M/2T415rTVyB+Yfil
4VeGXxt+Y/it4Xc1p69A+yYfDP9k+Nea01cgfmH4peFXhl8bfmP4reF3Naev
QHnEJ8O/1py+AvELw/nv1wW/Mpz/Plhw/ntWwfnvLwXnvxcU6xP4CpTPfqk5
fQXiF4ZfGn5l+LXhN4bfGn5Xc/oKdB7UwvALwy8NvzL82vAbw28Nv6s5fQWx
LqevQPzS8CvDrw2/MfzW8Lua/1Z9Bfo5TB2GvgJxU4ehr0Dc1GHoK9B7YeoP
9BWIm/oDfQU6P8esr+krEDfra/oK5P8x60T6CsTNOpG+An0HzLqGvgLl1f8w
ffF/r/u1D9/3JY9zFJJv7fu+5m8M/1vdJxvnZCT+Y83177KzP/Svpg/0d33N
f6z5gf/eO849TOP8Wvc/Hr7ra/5DzXv+e/I4VzHxac11Hi7nh+/6mv9gOP8d
+4jvDZ8a/sXwv9R9c4dv+5q/rnmcS5T4O8M/Gv655r/Max7nnaQ+qW/7mr+u
eZy3lPg7wz8a/rnmT3PDO/Ocf677uQ4v+pq/qnmcL5X4O8M/Gv655o9zwzvD
XZ9XnO/M+t+LvuavDH9r+DvDPxr+ueaHueGd4aav6uD6qv5Y9zHFOUyJv6z5
09Bw09/0ZPqbnkx/08Pc8M5w09/0YPqbHlx/0x9Mn9E3fc1f1vwwNNz0Hx1M
/9HB9B/1c8M7w03/UW/6j3rTf9S7/qPf1/1BB9NPFOexkfdDw03fUG/6hnrT
NzSfG94ZbvqG5qZvaG76huamb2ju+oaQ10ln5HX6O0Vep/cZeZ3mAeR14m8M
R16n7wLyOvEfa868TvMz8jp9p5DXif9Yc+Z14u9rzrxOeQjyOvEfas68Tvy9
4dOa/1bzOuW9yOvEX9eceZ34O8M/Gv655szrlD8jr1Oej7xO/HXNmdeJvzP8
o+Gfa868Trwzz4m8TuusF33NX9WceZ34O8M/Gv655szrxDvD3T478jqtQ48/
b+KvDH9r+DvDPxr+uebM68Q7w82+NvM63Rd5ndb3yOvEX9aceZ242V9mXidu
9peZ14l3hpv9ZeZ14m5/GXmd6iTI68Rf1px5nbjZ/2VeJ272f5nXiXeGm/1f
5nXiZv+XeZ10QF6n/USzn8u8LjjzOnGzb8u8Ttzs2zKvE+8MN/u2zOvEzb4t
8zpxt2/73OZ1is9tXqf3dtDX/LnN6xQHfckPb2qu/m/W2QZ9yfX3zetHhj+3
eZ2+U4O+5Po5ef2o5k+uXvfc5nX67g/6kqvOyutHNX8y9bqDq9c9m7xu0Jdc
vy9eP6r5k8nrDiav611e99zmdcpLB33J4znT9aOax3OmcaY1Z36s8ReGP7d5
nfL8QV9yvc+8flRzvd/Gd0mu94XjL2ounXj9c12vi58r1eve1Dx+LnKuxzTO
tObxc6XxFzWPnyvd19Xrntu8TvnOoC+55g3j7yPXvMFxpjXX3zfHX9Rc7zXv
a+p1j6uahw6pTjXoS871v64f1Vz97hxnWvPQIY2/qHnokO5r6nWPq5of1jXX
PG98aqme9qbmmufBNc9znGnNNe9z/EXNNc/xvqZe97iq+WFd84dNzelnUp4y
6EseuqXrRzUP3dI405qrv5/jL2qufXve19TrHlc1P6xr/rCpeb+tOfM45nMp
/3Pn9ryvOfMa5jdpfHduT2fuu6w552POy+T8u+TfJ7nLj5n/pryW59i8rznz
TeZ/aXxzbg/zIOYT5Pw+87tFznk91X3B03sHfbheYP6e8mxw5sXMR8mZDzKv
SufqrGqevuesc/M5tzXnvEUd0vpoWnOuA1L+Dc78l3kkOfOyVHcH5/ec3y1y
ztP8eble4/qG6wpy5vUpPwZnvsk8LJ3Ds6k5v8/83rifK60Tzbk9XJek/QRw
5sspjwRnnsV8Ip3Ps6s513Npn4Hr1mXNmdcz3yVnPpjyHp7bs6s513NcF5Fz
ncH8m5z5KfMwcuYdfB6uN7m+Yd5PzryY+R858x3eN61D1zVn3s38kpz5FMfn
eo35O/NUcuZlHCetv7Y1Zx7H67leYH5H7vLk9D1GnsLvd+LI+1IewHWq24dF
nsg8I+3Dvqk563Vp3c19UuRT6bvO6/mdwfcgXY98lvlW2od9U3N+t/l9SuO4
fdjfaL2OeW3ah31Tc+YvzAPSONOau+8P63Vct6R9TOTXzFPT9aOaMx859T3n
d5K/D3LW67hOS/uVWB8wL0/Xj2ru8inmI3zv0/iLmqfvDHRM43BdiHVaqse9
qbnLf5knpv0AcOYv/Dsk53c7vU/grNdxPZ/2H7HOO7W+Yb7PeTyNw7wS82Ma
f1Fz5in8eyNP3238XtN9WQ84sd7lOo/fS3KuD/jdSvXBLzVPeSLnU97X7MMy
D+LfAznrdawrpXoJ6wHIS9L1XBcin0jjTGvOvJ7fS3Lms5z3yZkncn4hZx7H
98zplvph39Scf99cZ6ZxpjXndy+tN9h/2pn7LmvOPI75MTnzU+bBtk7sdOPf
semH5feQ695Uv+f+Lddv4Cl/xDqHnHk01xvkzPdP7T+wXkd9+B1gXpDqBeDM
77juJWcezfVh6ldd1ZzrlVP7UazX8e/W6ZDWR/QFoE6R8gjTD8t1A9fP5Fw/
ndpvZL0uzfvgnG/48zLvY57O+gg510OpjmD2gdO6cl1z/t74/SPnPMqfK60T
TT8s13On9udZr0v7suD8++P3PvW97mrO9dwpvwPrdczL03p2XXPOE2nfkf2w
u5r/Vut1XP+k9azph+V8yXyRnN/ttO7iOtT0w6b5GPkrOfMCjs+/Y87rzJvJ
mV+kdQjXX/x+Iu901/O7wTyF/H99b/8b7qd/Qg==
        "], {{{
           EdgeForm[], 
           Directive[
            Specularity[
             GrayLevel[1], 3], 
            RGBColor[0.880722, 0.611041, 0.142051], Lighting -> {{"Ambient", 
               RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
              "Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{2, 0, 2}]}}], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1: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
uy/WVmMpuxfWsshryKVct4oaG9k9uOYcL5/dm2uBy2X34JrhL7L7jNsZG19m
13Jf4+rJdbrm9h+i85Uy5/fRuVFZ8UfcrOB8+F10PlH+/CM6cyoH/RWdSZQb
/4zOlsqBz0T3Y5WHxyRnbz3v16pXVfD1vy6556b5pEpyX0734rLk+lE12aXJ
/T1d/0uSe24aA99GZxtl6UrJ/T3dr8rJPUDdxz3RuUsZ+3Nco+C177PoZ03Z
8oDkzKZ8cig/AwvOCf9EZypl4P2Ts5bWrH2Tc51y9yHJ/VvlBC0EypPKsSWS
c6ny7fXJvUGN1QOT86fWu4OT+9LKG99EZzzl/B3R2VJzw+7orKu6YFd0blSu
3hmdG5XDD0rOusok/0ZnYOXnv6NzoPL5f9EZWDm8tjJEwb2yG5L7nJq370yu
l9VnHphcR6tO6pdcL6ufOSC5jlbvqH9yfap+db3kWk99s7uS63H1pYfqWhfc
s+qbXBerp90ruabT3HVfch2tvuK9yXWu+o33JNe26hPentxXUf98SHJNrZ5Y
3eT6UX253sm1oXrafZLrOPW06yTXm+rXnZPc01Bvo1Ryn1/r8kXJvWLN4RWT
e7yawy9O7v1qPqmaXLOrT3hTcm9cvcTTkvcINF/dnNxDUB18Y3Jdr55qreT6
V33CM5L3CzRfnY4HFTxHXZi8Z6EMcEFyH15rd3mtowVngArJPXCtO2cn7zVo
TT8zeW9C89tZyXsTyhglk/cglDEC7lpw/bVfcn2hmu6T6HVBuat5cr9O2bVp
co9FvZYWeHPBdcEDybWz+k+DNV8UnPmv4WdewRlySnQeUwZoltzHU1bsWjyu
1KfpltzjUmbeFD2nKdO+Fp33lHVfjc6NyrcvR9dfqrOOK76PqrEe1LNXwufT
HX9acCY/Prlnpdrk6uT+pDLtVcn9TNUapZN7TaoXTk7uMSrnn5LcH1N9cXnx
PdVcVCO556kMXJOfNQVn3ROSe2Kqj07lZ0zB8+0tyf1SZeNXoutKrdEnJvcD
VXecn9wfU/1yXnI/TfPzuclzoMZqmeT+mGqWK5N7pKq/rkjunaomOim536ha
qRw/kwuu3com99lUB70UXc8qP7wRvRarHtwYvdYrg62OzgPad1iATy64xz4v
Ogeq9z49Omspn0+LzpDqbyyLrkG07zAjOlOpBzI1OtcpB86Pzlfad1gRXXdr
v2NVdJbQnsjH0Xnp//VRdM2onvni6JpRPfPnomtM5f0l0TWj+ucro7OK9kqW
R/dDtPexNLpnov2R+5P7e9q/mBmdD9UDnxudgbXXsDU6v6lu+jA6j6mW2RKd
r1SvrY3OPNpP2Rydc1RHfxSd8VTHvRidqVQTvx5dv6junh2daZWHP4jOeKrF
3ozOTqrd5kTncO0NPRudt7W3Mis6G2uPZlt0HlNduSY6U2lv6P3obKlM9xa+
quBach0uW/Ce0ejk/qf2XD6NzoSqVYcl9yG1B/FudE9YufcdfH7Befvt6H6v
svQifEjBOXlhcR9M9+W94n+7zmGv5D07Zaejk/f+lJFS8h6ics4LxfdU12oD
PqXgnN82uW+vvZgOyb137W+2S+7Va0/ttuT+vPba2if37bXXuT66B65a4Jjk
vUXlrmOT13HNIfsk72kqdxUl7zkqj8XkfUzlui/5nqsLrhd+id53UO76LXp/
U9ns9+K1W7no1+j9UOWxL6J77Krpfsa3FFzH/RS9B6Gc9lV0/1913NfF904Z
YHv0HoFqupycu5Q97k7u92rvbG/cvOAs2jF570P7y4fjbgXn6iOT+5nKn0ck
7/UoVx+WvNejGuGo5H1Y5dXOyfsm2muultzX1brWSuO+4P2mW5N7ttpr65Tc
n9dec6PkHrL2p1om78to/6tHcj9f++/1k/vG2psbkdyj1n5fw+Ses/aqRiX3
sbVveEdy/1l73F2S1yatI22S91+079ak+Dy1ZrVO3tPRHlxPPVcF7++PTO6f
a7+yQXKf+f/7gMk9be2XDU/u1Wvv8n8XPFci
              "]], 
             Polygon3DBox[CompressedData["
1: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
unJ+1q/i9xjzVyzZo+aCI5voiRNL9KpnQq9HT8ON4z16RXoCPkvPRO9Ez0Cv
SU2tV2OMVWvrSejlGBP0Koyxekt6NsZeY46xx5ij12BM0TvSwzHWGGP1nvRE
jL2H8t4XldRM1k7GOGNvv05i3x6Mn1LiEekVOafObe9OtIhz7tw75+Zq94R7
wxitd2OMNHYb042dxmRjszFXbeqeMfYaw91LxmhjuTHf2G2MNlYb09Warplr
55qrTdxj7jX3pN6VMdZYa4zSezEnWqupkcyV5lRr0Ts7ybXmXGstNZC5WA1l
LWaNpra6uErtYg1j7W7O1UtRU5mL1VTWcuZMtZaaSa90RCdaypytt6KmMpef
WsUb0CNYpY7msra0BlSLmUP11o7pJLduWUXbq4nVxsZcY6+aSG/OHGguNOfo
dZkj9OLUiOYOa1BrUTWYXmz/KrW8Nb1emTW2tbY1kt61Od/a+rlOtIBnwrPh
mVFbeuY8e54JtZ5nwLPgGVLLbQ/3K6nZ1rfWgq8q8SA2MDfBV5d4DBvCa1bJ
ZeY0a1M1hdpiu0609U7wNSWexkZ1NKRe17udaEtrOr0ua3xrve3gviU18Xp1
arBr4ds7qc30XK5v19/11BM5r6Sm1CvZCr6wPQ8rw9vAV5bUqGu7P/j/8Uo0
k9pJj+T8kppb72RbuE9JjbtuHQ/mgpKadKV2P/Vv94P7Q0/ounY/6BWNx/j4
JTHT2GnMVmtP1Uks/8/DgL/rxNtQo6iFl+lEu5hT1QLmUHOtOdTawRxgbp2S
589ZolnVrnOqY0tqXmtfPZ5R7frrdZpz1fbmcHOxMdBYaAxUy4+zrijR1Gpr
a2hr6b3b9TTn693M3YkWUCOpldT41jrmfHO/Od5aV82qdlVjWhs9Yh1T0nOw
92BNYG2gxrUWViOpldRs1s5qTLWmmsJa1j2jX3F+lb1kjjHXqNnU8kuaB0t6
EvYm3I/Wpj3b/aeGaEpyltrCHD9JSY4y9+shbNXuX3sHegDrlPRE9AbUeGo9
NZFepxpJraQG1DtTU6mt1Fzfte+zRfv79QrUYGoxc4xepJpObaeHYe9FDbRB
iUepNrLmXb/EI7IWVhOtV+JBqZXMofOV1EjmVnsiL5f0OOyV2BN6qcSDtlek
ZlQ7qin1ytQIC5TUVGoHPTe9VD1cvTg9GL0YPUG9NnsiG5Z4xPZK1Kxbtufb
+VaDqkXVqHplalC1qBpVr0vPZN0Sj+6tdr+u0a63+13PZK12/fRSrHGWK/Fc
rH2scZYp8XCsffR0XO912/1uTbh8iYa0VtTTWKXEI9Tr0BNZocRT0CvRA1m5
xHPUG7En90pJz8lenZ7QIiWeiV6RGnKhkppQbWmNuGR7Xj1/apIFSzwYtYoe
09olPSi9Jz2EhUs8Hb0Fa9Cl2vP6ZHuel2jPp+fLmn7pEk/JWl/PYdESz0Yv
wpp42RLPylp56wmT//u1+cjzNq6Np8YXe5Svl/Tk7F2q4eZsz7PxSU04d0mN
rFZUs81T4jGo5dTM85bUnGppNd9cbfxRC9rTe7ekZ2ivT007Q4kGV+saD+do
45fxTw08XYmmUxurcacq0cBqX+Oz8VKP4qauaP6JSjSstYAe0RQlmlLvSE0+
WYnGV6tbA8xU4uFYG1gj1G08tnawRh6/jcfGfzX6NCUaWu1uPDQ+29O9pI7H
8H4br42P1gSzlHiI1grWELOVeETWFvZs32vjnb1ce6xj23xn/LMn+3xJz8he
rT0SeyX2ZOx92sOwl2EPxd6lPd+3S3pY9oLtUb9R0vO0d23P+LWSnqi9ZHuo
b5X0hO2t2mN+s6RHa+/ZHvarJT1qe9v2ZOzN2EOxd2XP94WSHpm9YHtG9o7s
+djbtUaZv8STsHaxh/tOSc/Z3q49JXtL9qDshdsTfqakZ2iv2B7ccyU9Qntz
9qyfLemB2su2Z2Xvyp6VvV57TPaa7EEe1+ov9a16VP2nB7FGGw+Mt+Z8tcLJ
VbRA/zp71T3/X/3S5Cw4h87lA03mxjlz7oY2mVvnzLm7oc7ZcM+792+qcxY8
I56Vu5r8FtfUtfUMqgVOqXI2hzVZC9fQtXywyVo6Z87dkCaxxzVxbe5tsjau
qWurh9qtzcfqx/uarLVn2rNtT+74Eo/TXt3wJmvhmfRsjmhyNt2T7s27m+w9
19i1fqBOrDQmGhuH1omNK5X4z3r69rbs8ej16/nbu7LHZS9gZJ3Ybs40d9rD
sPdlz8vexsN1cpk5zFxmT8DegHrcXrA9HuuT3p3UL+pl9Yf1kvr5oTq5zxxi
LhleJ7aaM8wdw+A1Oon5xv776/TzreGs5UbVya3mVHPrg3VyjTnEXPJondxn
jjPXPVIn15mTzc0j6mgBY7qxfWCTs+GZ9mzf0yT3mkPMJYPgDzrJweZiPQK9
Aj0Cvbh+dWKNMc/Yp6ett929Ey/9yjqxTI2iVhlcRc+r/9XL9lDsJdqjtbdy
eZ3YqMZR61jzW/uf1klvrk+dWGmMNFbqieqN6rnqlfv8se15Vy/aczqpxGOw
F6XHqdepp6qXbr1p/Wi9aH3Zt07sNiYbm/XE9cb1/PXmrZmtnXt10vvR47WX
0KMT7/eyOtrMGG2svqKONjPmG/uvrRNrjenGdjW5/eOzq2h1e9QnlNTo9q6t
Gewn965SS4xsEouN4cbywU20kZpJ7aRnrHesx2tv4Lo6sdwYb6y/Hp6jkxhv
rL+6Tm4zh5nL9Hz0fuyR2Nuwx2HvRP1p7+PSOrnHnGPu0UPWS9aTtZdxVZ1c
aA4yF91Xx3tQs6hdrFnsH55VpZa5pk5uM8eaa++to23UQGohe3r29uxh+W2D
PW6/NbFnYu/75Ca1jjWNtY09d3vv9nT9tsAeqL1de4j2Rk9qUltZI1krndhk
71lzWXud1aQ2tCa0NjyzSe1mDWkt2atJLWkNaS15dpPa0ZpQPX9Gk1rLms/1
OqdJ/LamsrayZ2nv0jnYuk5P096mHo/fnvRuUltaI1ornt6k1rOGc38MqaMN
1ZRqy9MY799JTeh82kO3l24P3m9d7Hnb+7ZH7rcs9mzt3brntq0TE42Nxhh7
dUc12dueGc/OEU1isXvSvXl4k7k3Rhur/SbBbxNGd/JtiD1We632rP0Wxm8c
/NbhsU6+RfEbCL+FeKKTb4Ps2du7t/7325Njmng7xlBjqd8A+C2APXy/LfKb
Ar8tGNPJtztHNznbJ5f0V+0p21t+tJNva/wGwm8h/MbAb5lOaVL7WlObT+2p
++2GZ8xeu3Piu15ZZa5urlObqBnVjrfWqTXUDGoHPUt7l/ohepkD6mhbNbfa
+9Qmtbua1vx5T51aQM2r9r3LnN+JJlYbD66jha0RrBXsoeq36L/od+l/6cfo
p+h32cPWD9Lf0T+5o442V+Or9W+po22ssay19Fv0g/SH9FPurFMbqOnV9rfV
0f7WVNZWt9epFawJrA0G1ald1PRqe+fcuXfN7HUPrKP1rQmsDe5sopXURGoj
e/r29u2p++3QgCZaSQ2llrqjiTZSY6m19GQ8G+dVOY+eGdf2iipnSU9Ub9Sa
2m+n9Hg8++dUOa96PJ79c6uc1xvr1ALWCNYKd9epXayBrIX+D5ZfgSc=
              "]], 
             Polygon3DBox[CompressedData["
1:eJwl1nW4FGUfBuD9aAEBaRQppUvpBukSkG6QbpBukG5QWuk8xKG7u7tTpRsE
BCT97tE/nnOd575+7+w7s7Ozm7JR+8rtIoRCoVMSWaZGC4UWRgyF9sHTetMo
oVBv1ov9wuaxXOyWNGfdWD+WUv/V3CJ2gJ1lzdlNaca6sr4shT7TXDg7wi6y
1mwKW8D2RvhvL43ZDWnKurA+LLk+2txkto7tYlXYDLaUHWYXWCs2iy1jR9kl
1obNZsvZMXaZtWXT2GJ2kJ1jLdhkNp/tYSdZEzaKTWJr2U5WlU1nS9ghdp61
ZLelBevO+rNU+nVpwjqz3iyZ/ou1YWw/O8OasccykI1n01lhfYC5oWwBW8mK
s/rsK1aRVWW3vXF1WGZWnn3HbrJ6LCurwKqwW6wRK8zqsybsJavLsrBvWWV2
gzVgBVgd9j37izVkBVld1og9Z9+zQqwea8xesFosOSvEirLTrDZLwQqzYuws
q8mSsYLsG3aGVWexWRb2NdvDarA4LCvLxnazt67DLnaK/cEG6OPM/cI2sr2s
BqvGQiw5S+nfNdbOYSvYcXaFtQuuOxvGFrJVrBjrx/qy6Wwhy8v6sj5sGlvA
8rA+rDf7lc1nuVl/1o/NYGEsHxvBxrJlbCMrx35k/dlMtojlZyPZOLacbWLl
2SA2nIWx1awEa8yKsAasKXvl3IayUWwJW8dKmxvCRrLFbC0rxQazEWwRW8NK
smFsNFvK1rMybDgbw8LZBlaWjWVT2Qa2h1UP7nlWkQUPky4sKvuJ/co2sX2s
JlvCtrDL7B7rxRaxTewiu8N6sDC2kV1gt1l3tpBtYOfZLdaNLWab2SV2l/Vk
C9h6do7dZF3ZCrabXWdP2SC2iu1lN9lzNphtYkfZQ/aWjWbr2EF2l71iw9kG
dpjdZ6/ZSLaUbWVX2H3Wm61ke9gN9owNZFvYcfaYvWdj2WZ2jD1i79gYtpEd
YQ/YGzaKhbNt7Cp7wPqw5WwH+509Yv3YMrad/cYesr5sn2RnxVhpdt/9spWl
ZjlZXnaZXWRVWGPWisXUj0o+VpZVZE/NXWJVWRPWmn2sH5P8rByrxJ6Zu8Aq
s0asJYuhr7a/fewW+4sNYTslPcvLCrLfrd3O0rLcLD+7yhawqCwOS8I2szD2
EYvPPmNb2Q6WjuVhBdhvbA/LxAqwIuw628uysaKsFLvHdrEMLB8rxP5gu1lG
lp8VZtfYEZaXlWEV2J9sjXPbz26zF2yomfXsELvH/mYj2HEpyiqzmuyNtRPZ
X3rUCP99Hy/0ZzJ7qccInC1iU9gr/WMJHnGL2VT2tx5bPmJL2Es2x2usYttY
w2BG5rE1bAdrpD+X8WwuW8Yq6c/kZzaHhbOK+pPgWcQmsBmsiP5n8DxhE9lM
9o0+SV4E+xD/hsLs5VHwfWbuZzaNFdKfBs8nNonNYkWD85cJbB5bzr4LjiUT
2Xy2glXWtzrxE+wJ+8DGBb9B5I0eL7heLNzrjg/ORY8Y4d+vgtB8NoO9D+4f
icVWsJnsQ3D/BNeQrWTT2Ts9UXCt2XI2i/2jfy5x2Co2317WOfhZdoN1CZ5X
Eo3FZZ+yLebmmlvDTrNrrLOZtewAu8NesmHBeyYRWTSWgK23dh6LzGIG+2Eb
2Ss2l61m29n3wW8Lea1/ItHZ0mB/LIq5WCwx28SmsbfB8SUmW8ZmswjmorD4
bF2wZxaJRWcJ2YZgL/a8lp1h11knM2PYFLae7WbV2H7JwYqzMuyBtQdYTlaC
lWUPWVtr67HebBBLaKYNq8t6sYEsQfA7ipVjrdgPLBJrysqz1qxj8HXPmrMK
rC3rzKKwdqw+68MGs0SsO+vAxrIpLAPrxtqzMWwyS8+6snZsNJvE0rGOrBUb
zn5mX7BOrDUbwcaz1OxOMMsGsJEss97ZXBs2kk1gadhZKc1qsvqh0L8fnC7m
2rJRbCJKy85LWVabNWQR9HvBMdkgNppl1R8G58KGsnEsm97M8b5lbVgnFjn4
XLGZbBs7xOoGn182i21nh1m94PnAprMt7ACrzf6QRqwj68mSBs8Mc9PYZraf
1WLXpDHrxHqxz4PPuLkZbCs7yOqwc1KG1WIN2P/0XuZ6sqlsLsvJerDubDKb
zXKw1qwO68kGsHjsQfDesSFsLPta72muB5vC5rDs7H5wrdlgNoZ9pbcyV5v1
YD+y+Kwlq8Tas64sGrsbvO9sIBvFsuiHJQ8rzb5lT9zjHaxtyPqxoSyJmTNS
itVg9dg/5laxhCwNS88Os3AWiyVjKdgutpjFYImDZxHbzpawmOxTloztYEvZ
xywpS852squsBmvO2rE4+mWpxpqyNiyWvkLisy9ZWnbQ2uUsHvuCpWEH2EGW
i5Vk5dgjdojlZqVYefaYrWQJWGqWjh1i21galovlY1fYIhadJWRJ2Ta2jMVl
qVhqtp9tYV+yHCwPu8RWs0QsLcvAjrDN7AuWneVmF9nvrBZryTqwuPopKcGq
sTrsvbmTrDirymqzd+w1W8V2sePsh+B7R1az3ewE66ifkGKsCqvF3lp7mpVk
1Vld9oH94N5oyYaxn9iXZtqzBqwvG8ISs/XyGcvIsrAT1q5lSVh6lokdY7+x
mqwFa88+0TdJKpaN5WIXzK1jn7IMLDM7zq6w6qwZa8ti62skMUvHMrKj5jaw
pCwTy8pOso3sc5aZfcVOsQnsefB7RiKxBez/f5QrjA==
              "]]}]}, {
           EdgeForm[], 
           Directive[
            Specularity[
             GrayLevel[1], 3], 
            RGBColor[0.368417, 0.506779, 0.709798], Lighting -> {{"Ambient", 
               RGBColor[
               0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
              "Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{2, 0, 2}]}}], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1: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
NiSc86k/1iNc7+k8q2e4vtL51OHh3pP6pf8L58TqB+6bS30V7bnZdbrm2I7Z
tb/ykNrZvSzN+e2ye0qak1Wyew5aX1sru+bV3lHIrqm1p5Rl18vKkbZUdr2s
PXG/XOrP6N5l1+laC9tm9680/2tk1/uq6Wtm96m0jtrlUn9GsSK7L6HcaZvs
PpjWb1Ue9cu8RuqF82n1J2tl9+603jdU+BxI53HjwucuOosZFa6p1B/uGq7l
dDbXMVxjq5fbKVyX6lxv/3D9rDOOzuGaUOd6HcK1us4BDwjX1eoJtw/X5+oV
twjXMzp3aBmui3R2sHe4ttHZxH7h+l/nLK3CNYDOFCZkn3lpPz0Mn1TmNX5I
di9R67pduKegs5h9w/0CndG0Ddfh6p3uE+41qOfcOlxXqGfbJlxXqBbYK1xf
6eyjcbh/p7ObRuH+nc5KRoTrf/W3DwnX/OqNHxquXdUz7xKuh3V2OTzcX1B/
fli4jlIf+OBwf0F9+MPCdZT6+SPDPQj1ww8M19s6n20e7qfofKdZuM+iM6b6
4VpUPfAG4dpS5wgNw3WpzhqahHs0OntqGu5v6lxpt3AfU2dPu4d7NDoD2jNc
i+rcZ49wjaqzpIrsnpX2l0rZ/SXtR9pXlZ8XFe/C56A6Z6+T3XNTLfBfhXsK
OrfdNlzz6wy9VvgMVWfo1cNnsTp/rx0+p9T5+KYK90R0Llye3bPSnrixwj0L
nf/WDJ/L6vy9mN3L0t5XObt/qH1tu3A/QufCObs3qD00ZffEtA/+HxnA8oc=

              "]], 
             Polygon3DBox[CompressedData["
1:eJwtmnW8XNUVhd9kzss9EyAhJAQIEOJYgODuEtzdCe7uGhxKcXe3UqxClRaX
UlxKcXd3SKDf1zX/lH6/c2fyZu7de6+19oyYuPf6e/Xp6ek5l/8p/HdI09Mz
c6un5yXgkH49Pe1OT8/98CnwMnA/+F/wmfDKcIUfgU+HV4QH8foZ4f/AB8J/
g5+GD+rt6VkSvhN+CN4DXhj+B/wsfAi8NNzh/R6Fz+D1K8HrcL4DPIDzXngq
zh+Dz+J8Ffg/lfeGl4MHwetx/U7wQK5v4LuaXL8vvAT8PjwFvgLeBn4T/g6+
CN4MfhJ+Bz4ZXh1+Df4aPh/eGH4L/h6+GN4cfhv+Ab4E3gL+AP4ZvhLeFn4X
/gm+DN4K7tvJ5z+Nv3d5uBd+EP4VvBz8Otd/A1/A9ZvAb8DfwhfCm8LvwZPh
y+Gt4YbXPwz/mtevAP+xyf3Zh/PF4cL5A/CpnC8LP875W/CJnK8K/67J6/eE
F4F7uP4ez0vu1x+a3I+9OV8MbnF+L3wS50vBH3L+C3wV59vBU7gff4aPLrn+
R/iP8BEl93sA1w+Gn4X3hX/m/C/wMSV/b3/OB8HPwPvAC8NLwN/Dp8MzwrPC
r8CHwRfCl8Eb8e/fDV8EXw5vDP8Dnty3p6cPfB/XT4SHcj4b/Bp8BHwxfAW8
Cdf/E14UXgr+kfMz4d83eb734nxReBF4SfgHzs+A14QnwtNw3oYfgl/28/Sm
Pvrwfd3n81TyfD/G+ZvwCZxPgP8JPwcf2pv6uht+Bj64N9/vZL6fP8FHlfz7
P8F3wUeW3K+BXD8Efh7eH14X3hGeltf3haeFp4ef43w/eG14e7g/5wW+B34e
Pqw3z8eD8Evev97U38PwK/Ck3tRbG67wI7zfLvA78I/wpZxvCT8Fv2u/gNeA
X4W/gs+DN4Kva3K/t4Xnha9t8rxsA88Db9eknofDU8PXNPn8W8Pj4InwwfAI
eBr4eviv8HbwfPA28AHwMLgffA58I7wOPAo+C74eXgseAR8Bnw0vAU8PHwOf
By8NzwgfDZ8LLwXPAB8FnwMvCQ+xX8H94Sf4PvaCz4ZvgNfmfCR8a5P7vws8
P3xLk/rZGR4PbwnvB88CV3hv+Hh4Hnha+Ar49/Dm8BzwHvCx8Nxwf/hy+Hfw
ZvDs9gN4avjf/D17wPvAJ8Dzcj4Q3hc+EZ4Png7eCz4OHgcPgM+Fb4LXhUf7
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
xzNb0+Pp9fRk7ob0ZHozNZdZt5rxnXYyP7WkGdNn7ewYzJ7MhD9pR9OZFZuB
fdTODsNszEz0rXYyO7NSM7UX29mRmLWZsb/Rzk7N7N0M7qV2Mn2zOTPRF7rf
j1mpGe1r7WRmZrdmwB+0k7GZDbsDea77/fr8/D+TL/EMZvVqbLW2GtHsUc2n
9nu1+zyqCd9rZ0eoVtRj6DX0IO7K3AHd0a0H60lPojfR47zefX69vwPhKX1T
f9bP5/BHTTLkV9rZabS69eO//1q3vsyErur+PdaTO4mzuv3FejMDMgsyszGr
dQdzZrffuJvR07irdKel11Ezq531QGaxZlRmVXoQs1gzKrMqPZNZrpmW2ZaZ
k1mzmZHZkZ7JLNhMdlK339zV7XfHdvuF/c+dmrs1dwDuRt35uFs1k3YX5M7F
3ac7PHcxZk5XdvuJWbc7Gnd5ZtrubvRs7g7dKerl9HTuFt3p6fXcIbmrcwfh
bskdlLsoM2h3r3osd4fuuPReZlq1ZOdm1mVm0bckUzDLMEMzSzNDM8vW401V
4nH0fgvUzD5ntrN70ZrZo2ZRuywGH9PKTHI2zVXj9xcq8VuL1GgbZ5qzbaGa
2efMd/YvWDP7nbHO2rlrtMvCJXnFwjWz0Jnp7FwWPrOVmehsnL9GS6iR1Erz
1GgTNYxa5scms8cZpLb4qUmeqqZQW/wAD2+lxq31eWu0nBpHrTNDjV8eUpK3
jIf3aWXGO+tnqslXZyzZH46r0U5qMLXYfDVaQI2oVnwYXq+VHmuvnbMm/1iw
JH8dWpM/zlSyrxxdkx/MUZLfzg5vC89dkq+NqskTZi/JN+eo6c32aPPglWq0
oRpNrTa2Jt+YqySPG1OTt8xZknc+WjNr7OH28uVrtKEaUC24Wo0WViOrlVeH
b29FI6uVx3YyG+0Z9o4RNfnTmJI8ebaavHlUiV8fVtPL7en61Zlr8sKhJf56
lpo8ceaSvGxWeF14lpJ8eUwnXkUPo5cZWePvx5bkG8Nr/P/okrxgcpM87+t2
9qeP1cxOZ46z5+cm+d637ewnemry4e/b2b/0r9HOamq19Qo1WlcNrZY2k2xK
MjqzyqZm1jvz3Rf0hcfb29vZVw+oqTU1udp8mhqtbs1au4Nr8o1BJfleqcnD
JrezL5++Jg8ZXJIfdmryxFKSV05V87dY89b+ujVaTo2n1lunRpuoUdR2G9b0
bnu4Wmjqmt7hZ/KzrQc/2YomVBuqofX+m/ZGW2/A+evwNSX7l341vaa3ZJ9R
a/LKdsk+Y0jNvmH6knxzUI1WUbOYX05bk5fak+xNnzaZlc5UZ+snTWarM9PZ
+XGT2elMdDZ+1mT2OGOdtd82mdXOUGdpn5r9zo/t/D7m+yaz3hnvrP+lSd78
XTu/f5nSZD/zTTv7+e+aaAE1gFrg8yaz2pnn7PuyiRZw5jv7e2vyyint5EHT
wcvB05TklwNr9idTl+Sd7Zr87ad29mkz1uwzZij5/cQXTbSEGkGt8E0TbeBM
d7Z/3WS2q2nUNl810TZqFLVKqyb/+6Gd/aZ6cURXT6oHvYfXdOe1uzVrdlRX
f5m9PV2j3dSkalP1vnpdPa++f7bGC5ghmCU8V5MlmIGYhTxeo+3UbGo3n2mf
bT+zvw1Zs0Zbq9HV6k/VaE01o9rRe+a98zP4W6cna7SgmlRtao1Za37n/lbE
79Dv0nvurtKeM7KrN9XHa9TMdme8XsOeb+/3GTV7955576xBsz1rztqzRs3y
l6zxgnoyvdna8D9b8QR6g+drsh8zH7OfZ+B9W/FMeqcnarSrmlZta81b+9aE
Wb/3yHtlT3I3vVSNd9SD6kWtMWvNHuAu0R5gL7Dm3GVYc9aePcnd4tI1XlYP
qhe15qw9/cD4rl/RH+gX9F8+kz6b1qTZvM+sz67PrFn84jXeU0+uN7fn2fv0
b/o/e6i91Jpyt/1vrt+uFY2v1l+mxuvqsfXa9mh7tTPb375Yc9aePdzfytxd
oz3VoHqNe+D5W/Esehdr1tq1p/tbNnu6vd0adhe9RI131jPrnR+s8U56JL3S
QzWf3e9Ar7RWjbfT8+n9lqvJRsxkzGac0c5qZ/KErl+xNqwR/cyqNdmSGZFZ
kTPaWa2f089Y09a2msPfSjnTne3ONHeZagy1hj3A3y79P8MvmbFm+2oCtYEz
3l2cM9PZ6Ux197Qy//6VrWRGZkdqDrWHmsFdsDPaWe3MdBe8Yk22Y6ZjtqMm
UZuoefxtlTPaWa1mMRufUJN9mXGZdakB1YJqHLP4/2u6Eo3obuqRGq+px9Xr
3g8v34oH1gurUdQqahR3iQ/UeGM9rl53lZoszYzNrM0Z4ixxJro7UyOoFdQQ
7qbVOGodNZW73n/VeFU9tF5ajaBWUKO4a/gfPFDwbQ==
              "]], 
             Polygon3DBox[CompressedData["
1:eJwl1mWYVVUbBuCDDMMMjeQwQzN0d3e30g1KtxLSIam0pEqKASqh2AEI2Eko
XdIlIt3fva7vx/vjua93n7X3PmuvtXI/M+TpwU9EIpE9KlmomEjkWFQkciVp
JJIzSSSSLXkkkoQdYmdYPMvMUrHz7A4rzBJZSnaO3WaFWD72iA31w/P4T+xj
loKdlW/pK8jysqSxkchofcv4PraNRek7Kl/Sl4PFhT52hF1g2VlWlppdYHdZ
EZafRbPj7CrLxeJZMmOMNcZr/C/2DYvRd1q+oS8/y83SskvsPivGCrI07CK7
x4qyAiwdu8wesOKsEGvNFhpjLT/BDrMKrBCrxIaw/iw5OyVfd20iy8Vi2Rl2
kxVgeVh6doU9ZCVYYfYk+4c9YiVZkfC8nm2cMV7n+9mOMAYbz5azA2wne4KN
YkvZXrY1/L/sBbaE7WFfsQgbyRaz3ezr8H+wMexV9ifbzjK6lxtylKrASrPH
7Dl989nP7JMwLjssn3PPCSwLK88K6qvIB7N+7Ib6WT6tLyWLlkvpy6uvDO/H
erIE9kBOpWqwyiw7eyinVjVZFVaa5XNtWdaf9WLZ2D05harGKrIyLFFfOTaA
9WaZ2S05WlViZVlBlkFfXtaetWIlWTwrwrqzTqwsy8/Ks4GsDyvHCrAKbBDr
ywqxjCwf68Baszh2V45VVVkFloXdlpOryqwcy8diXRvHmrGGLDeLZplZY1aP
5WRRLCNryOqwAiwVS2AtWROWld2RY1QVVp4lshT6srHmrBHLy2JYVtaUNWDx
7L6cUlVnlVh+llJfPGvBGrM8LDnLwpqw+iwHS8oysAasdph/7KB8yjzIxjKx
wiyTvkTekbVhJVg2Vph1Yx3ZdfWT/LdrU7Bk8k31CzvLUrHkYZ6qA+wki2MZ
5ctqZ1iDWFL2KNp7Z7+xiywNi5WvqF1hHWFR7LG+q+w7dohFsyTyv+p7doQl
Z0/I19QP7BiLYUnl/9SPYc1gsSxK/kd9G75dloxF5KKeN4vnLcA7s3bsgfpT
PqwvM0sf1l21nx1nWVkGuYhrM7s2P+/E2rJiLCsryLqw9qw4i2OFWFfWgWVi
N+VkqiIrwx6qv+SjxsjCnpRvqV/ZeZaaxch31R/sH5aOpZTvq33sIMvE0sn3
1N6wfrGMLK18R/3OLrO0LIWcwb1cZ0lVeVYqrOPWpgnueUX4TbaLtdQ3nE1l
29gXYVw2iM1m37MP2UFWirVkM9jz4X2yYqwpm8IGh/tlRVkT9iIbGOYUS89K
sl6sZVi/WDpWgvVkLcJ8ZGlZcfYsax6elRVhjdlkNii8J5aTVWfDWbfwjllx
1oxNZUPCO2E5WDU2jHUN84elYcXYM6xpmGcsNSvKerBmYS6z7Kwqe551Dt8B
K8lasOnsOdaQtWG92Er2KmvOerORbDN7jzVjvdgItom9y5qynmw428jWh7nM
Hss51NOsavg2WBJ9uVhrViN8QzH/P4zkZK1Y9fCtsUdydvUUq8Yas3b6+rDV
7PUw51kJ1pxNY0NZI9aW9War2GusPmvFnmXL2VLWgLVmPdkKtizMZZbAqrDn
WBe2m+ViNdgI1p3tYblZTTaS9WAnWE3WjS1lL7KTrBbrzpaxKew0a8L6s7Vs
LjvOarCubAmbzI6x6qwLW8wmsaOsGuvMFrGJ7BRrzPqxN9jssKaxa3I6VYcV
Z2dYU30D2JtsHtvB/pXTqtqsKPubNdLXl61hc9g37KqcRtVixdhZ1kzfQPYW
m8/OseZsEHubLWCXWHv2AvuArWCHWGXWgS1g49lhVoV1ZK+wcWw7OylHVGmW
ENZY1kXfOPYJW8O2sRPyY+tGKZadNWHP6hvGN7B17AiryjqxhWwCO89asMHs
HfZK2BdYBzaKfciWs4vsKTaUrWeLwr7AOrLRbAtbyS6wlmwIW8cWhrWddWJj
2EdsFavMyrK6bCwbyaqwcqweG8deYFVZeVafjWej2JPWv1nsXXaO7QnrJJvN
3gvrMdsbzhFsPtsU1lS2n6VnL7P1YX9ku1kqNo29GfZH9itLzaazt8Leyn5h
adgM9nbYq9lvLBtbzD5i/7Ej4WzBFrDN7Ao7wOLYIraFXWNHWVo2k73DTrPf
WTr2ElvHzrA/WGY2j21kl9hfLCObw95nF9i+sG+xuWxD2L/Zn2Gf8f4Gslns
O/ZB2KPYAPYy+5ZtDmcG1odNZ9+wDeFswbqziexz9ia7wXqwSewL9hbLZ9xV
bCt7wM6FvUxff/YS28U2hf2S9WUz2A72Pkvp2slsdTg3sO/ZbX392Ey2k21k
KfRNYqvC3s++C2cBfYPZHPYD28Ji9U1kK8PZhH0b9m59Q9hc9iP7iCXqW822
sYfsPMvLVrKv2X12ltVybV3Wms1mM1hNVoe1YrPYdLaV7Zb/9Q3mZqlZPdZQ
X3s+n81idVkD1o7NYy+zOqw+a8vmspdYbVaPtWFz2ExWjVVgDdgENpq1YMPY
FLaVfc6qs4qsIZvIxrAarBJrxCaxsawSK8PqsDFsBHuKjWDT2Hb2JXuaTWEL
2e/sJ9aKTWWL2B/sZ5bg/S1ln7Ab7DjLzpaxT9lNdoLFsyXsY3adHWN52Ar2
FbvHzrBc7HX2BbvDTrH8bA3bzh6xCywHe5V9xm6xkyw3W86+ZHfZaXbVPXdm
Y9nHbDXLqe819jm7zf5m1/R1ZePZp+wN9h/rxiawz9haVpEVZpXZUDYg3DNL
xjKxRqwu+x/PNwbP
              "]]}]}, {}, {}, {}, {}, {}}, {{
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwt0UkuBEAUgOHSrbU2tTZERCSIAyAOgDgAHQegY22KjR3iADgBiQMgDoA4
AOIA5nmeZ74Wi5evVvXnVdVnBtMDOSGEMZMTMVyIhZDiCuu5wWbusJ2H7OYj
+5ibF8IwKzjBRs6wlfPs5BJ7uMZ+bnGUe5ziHff173nAh2yHjzziE4/5zBO+
8JSvPOMbz/nOC37wkp+84hev+c0b/vA2Ev4WntW/dZzkLke4yQxXmeYiOzjH
Fk6zgeMs4xAj7OW9d+nK7sM2brOJ66zjMktZq59kDUtYzWJWsYiVLGQ5C5hi
gknms5hxFlI6JOjqEGcuY4wyysj///4Coco85g==
            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0TkoB3AYBuDf330fsxSzFLMUsxRWKaxyjZJilmKWYpYi980shSS5QpKQ
3Pf1yPD19C7fW9+XW99c1RQJIbSZregQIsJXXAiZTI0PIZfZLGQ+S1nMSpaz
jjVsZSO72ME+9nCIAxzjCFe5yE2u84SHvON4TAj3nOADJ/nIKT5xms+c4Qtn
+co5vnGe71zgx18PP7nELy7zmyv84SpDVAhX+m/lfR5zjRt/+7jCYY6yn4Ps
Zi/b2ckGtrCatSxjBYtYwjwWMIs5TGYGb9w7nddM4yVTecEUnjOZZ0ziKRN5
zAQeMZ4HjOMeY7nLGO4wmtuMivz/9xcKgUg1
            "]]}, {
           GrayLevel[0.2], 
           
           Line3DBox[{1444, 753, 1443, 2448, 1683, 1445, 2449, 1684, 1446, 
            2450, 1685, 1447, 2451, 1686, 1448, 2452, 1687, 1449, 2453, 1688, 
            1450, 2454, 1689, 1451, 2455, 1690, 1452, 2456, 1691, 1453, 2457, 
            1692, 1454, 2458, 1693, 1455, 2459, 1694, 1456, 2460, 1695, 1457, 
            2461, 1696, 1458}], 
           
           Line3DBox[{1460, 2133, 2343, 1459, 769, 1461, 2462, 1697, 1462, 
            2463, 1698, 1463, 2464, 1699, 1464, 2465, 1700, 1465, 2466, 1701, 
            1466, 2467, 1702, 1467, 2468, 1703, 1468, 2469, 1704, 1469, 2470, 
            1705, 1470, 2471, 1706, 1471, 2472, 1707, 1472, 2473, 1708, 1473, 
            2474, 1709, 1474}], 
           
           Line3DBox[{1476, 2134, 2344, 1475, 2135, 2345, 1477, 785, 1478, 
            2475, 1710, 1479, 2476, 1711, 1480, 2477, 1712, 1481, 2478, 1713, 
            1482, 2479, 1714, 1483, 2480, 1715, 1484, 2481, 1716, 1485, 2482, 
            1717, 1486, 2483, 1718, 1487, 2484, 1719, 1488, 2485, 1720, 1489, 
            2486, 1721, 1490}], 
           
           Line3DBox[{1492, 2136, 2346, 1491, 2137, 2347, 1493, 2138, 2348, 
            1494, 801, 1495, 2487, 1722, 1496, 2488, 1723, 1497, 2489, 1724, 
            1498, 2490, 1725, 1499, 2491, 1726, 1500, 2492, 1727, 1501, 2493, 
            1728, 1502, 2494, 1729, 1503, 2495, 1730, 1504, 2496, 1731, 1505, 
            2497, 1732, 1506}], 
           
           Line3DBox[{1508, 2139, 2349, 1507, 2140, 2350, 1509, 2141, 2351, 
            1510, 2142, 2352, 1511, 817, 1512, 2498, 1733, 1513, 2499, 1734, 
            1514, 2500, 1735, 1515, 2501, 1736, 1516, 2502, 1737, 1517, 2503, 
            1738, 1518, 2504, 1739, 1519, 2505, 1740, 1520, 2506, 1741, 1521, 
            2507, 1742, 1522}], 
           
           Line3DBox[{1524, 2143, 2353, 1523, 2144, 2354, 1525, 2145, 2355, 
            1526, 2146, 2356, 1527, 2147, 2357, 1528, 833, 1529, 2508, 1743, 
            1530, 2509, 1744, 1531, 2510, 1745, 1532, 2511, 1746, 1533, 2512, 
            1747, 1534, 2513, 1748, 1535, 2514, 1749, 1536, 2515, 1750, 1537, 
            2516, 1751, 1538}], 
           
           Line3DBox[{1540, 2148, 2358, 1539, 2149, 2359, 1541, 2150, 2360, 
            1542, 2151, 2361, 1543, 2152, 2362, 1544, 2153, 2363, 1545, 849, 
            1546, 2517, 1752, 1547, 2518, 1753, 1548, 2519, 1754, 1549, 2520, 
            1755, 1550, 2521, 1756, 1551, 2522, 1757, 1552, 2523, 1758, 1553, 
            2524, 1759, 1554}], 
           
           Line3DBox[{1556, 2154, 2364, 1555, 2155, 2365, 1557, 2156, 2366, 
            1558, 2157, 2367, 1559, 2158, 2368, 1560, 2159, 2369, 1561, 2160, 
            2370, 1562, 865, 1563, 2525, 1760, 1564, 2526, 1761, 1565, 2527, 
            1762, 1566, 2528, 1763, 1567, 2529, 1764, 1568, 2530, 1765, 1569, 
            2531, 1766, 1570}], 
           
           Line3DBox[{1572, 2161, 2371, 1571, 2162, 2372, 1573, 2163, 2373, 
            1574, 2164, 2374, 1575, 2165, 2375, 1576, 2166, 2376, 1577, 2167, 
            2377, 1578, 2168, 2378, 1579, 881, 1580, 2532, 1767, 1581, 2533, 
            1768, 1582, 2534, 1769, 1583, 2535, 1770, 1584, 2536, 1771, 1585, 
            2537, 1772, 1586}], 
           
           Line3DBox[{1588, 2169, 2379, 1587, 2170, 2380, 1589, 2171, 2381, 
            1590, 2172, 2382, 1591, 2173, 2383, 1592, 2174, 2384, 1593, 2175, 
            2385, 1594, 2176, 2386, 1595, 2177, 2387, 1596, 897, 1597, 2538, 
            1773, 1598, 2539, 1774, 1599, 2540, 1775, 1600, 2541, 1776, 1601, 
            2542, 1777, 1602}], 
           
           Line3DBox[{1604, 2178, 2388, 1603, 2179, 2389, 1605, 2180, 2390, 
            1606, 2181, 2391, 1607, 2182, 2392, 1608, 2183, 2393, 1609, 2184, 
            2394, 1610, 2185, 2395, 1611, 2186, 2396, 1612, 2187, 2397, 1613, 
            913, 1614, 2543, 1778, 1615, 2544, 1779, 1616, 2545, 1780, 1617, 
            2546, 1781, 1618}], 
           
           Line3DBox[{1620, 2188, 2398, 1619, 2189, 2399, 1621, 2190, 2400, 
            1622, 2191, 2401, 1623, 2192, 2402, 1624, 2193, 2403, 1625, 2194, 
            2404, 1626, 2195, 2405, 1627, 2196, 2406, 1628, 2197, 2407, 1629, 
            2198, 2408, 1630, 929, 1631, 2547, 1782, 1632, 2548, 1783, 1633, 
            2549, 1784, 1634}], 
           
           Line3DBox[{1636, 2199, 2409, 1635, 2200, 2410, 1637, 2201, 2411, 
            1638, 2202, 2412, 1639, 2203, 2413, 1640, 2204, 2414, 1641, 2205, 
            2415, 1642, 2206, 2416, 1643, 2207, 2417, 1644, 2208, 2418, 1645, 
            2209, 2419, 1646, 2210, 2420, 1647, 945, 1648, 2550, 1785, 1649, 
            2551, 1786, 1650}], 
           
           Line3DBox[{1652, 2211, 2421, 1651, 2212, 2422, 1653, 2213, 2423, 
            1654, 2214, 2424, 1655, 2215, 2425, 1656, 2216, 2426, 1657, 2217, 
            2427, 1658, 2218, 2428, 1659, 2219, 2429, 1660, 2220, 2430, 1661, 
            2221, 2431, 1662, 2222, 2432, 1663, 2223, 2433, 1664, 961, 1665, 
            2552, 1787, 1666}], 
           
           Line3DBox[{1668, 2224, 2434, 1667, 2225, 2435, 1669, 2226, 2436, 
            1670, 2227, 2437, 1671, 2228, 2438, 1672, 2229, 2439, 1673, 2230, 
            2440, 1674, 2231, 2441, 1675, 2232, 2442, 1676, 2233, 2443, 1677, 
            2234, 2444, 1678, 2235, 2445, 1679, 2236, 2446, 1680, 2237, 2447, 
            1681, 977, 1682}], 
           
           Line3DBox[{1789, 1218, 1788, 2658, 2028, 1790, 2659, 2029, 1791, 
            2660, 2030, 1792, 2661, 2031, 1793, 2662, 2032, 1794, 2663, 2033, 
            1795, 2664, 2034, 1796, 2665, 2035, 1797, 2666, 2036, 1798, 2667, 
            2037, 1799, 2668, 2038, 1800, 2669, 2039, 1801, 2670, 2040, 1802, 
            2671, 2041, 1803}], 
           
           Line3DBox[{1805, 2238, 2553, 1804, 1234, 1806, 2672, 2042, 1807, 
            2673, 2043, 1808, 2674, 2044, 1809, 2675, 2045, 1810, 2676, 2046, 
            1811, 2677, 2047, 1812, 2678, 2048, 1813, 2679, 2049, 1814, 2680, 
            2050, 1815, 2681, 2051, 1816, 2682, 2052, 1817, 2683, 2053, 1818, 
            2684, 2054, 1819}], 
           
           Line3DBox[{1821, 2239, 2554, 1820, 2240, 2555, 1822, 1250, 1823, 
            2685, 2055, 1824, 2686, 2056, 1825, 2687, 2057, 1826, 2688, 2058, 
            1827, 2689, 2059, 1828, 2690, 2060, 1829, 2691, 2061, 1830, 2692, 
            2062, 1831, 2693, 2063, 1832, 2694, 2064, 1833, 2695, 2065, 1834, 
            2696, 2066, 1835}], 
           
           Line3DBox[{1837, 2241, 2556, 1836, 2242, 2557, 1838, 2243, 2558, 
            1839, 1266, 1840, 2697, 2067, 1841, 2698, 2068, 1842, 2699, 2069, 
            1843, 2700, 2070, 1844, 2701, 2071, 1845, 2702, 2072, 1846, 2703, 
            2073, 1847, 2704, 2074, 1848, 2705, 2075, 1849, 2706, 2076, 1850, 
            2707, 2077, 1851}], 
           
           Line3DBox[{1853, 2244, 2559, 1852, 2245, 2560, 1854, 2246, 2561, 
            1855, 2247, 2562, 1856, 1282, 1857, 2708, 2078, 1858, 2709, 2079, 
            1859, 2710, 2080, 1860, 2711, 2081, 1861, 2712, 2082, 1862, 2713, 
            2083, 1863, 2714, 2084, 1864, 2715, 2085, 1865, 2716, 2086, 1866, 
            2717, 2087, 1867}], 
           
           Line3DBox[{1869, 2248, 2563, 1868, 2249, 2564, 1870, 2250, 2565, 
            1871, 2251, 2566, 1872, 2252, 2567, 1873, 1298, 1874, 2718, 2088, 
            1875, 2719, 2089, 1876, 2720, 2090, 1877, 2721, 2091, 1878, 2722, 
            2092, 1879, 2723, 2093, 1880, 2724, 2094, 1881, 2725, 2095, 1882, 
            2726, 2096, 1883}], 
           
           Line3DBox[{1885, 2253, 2568, 1884, 2254, 2569, 1886, 2255, 2570, 
            1887, 2256, 2571, 1888, 2257, 2572, 1889, 2258, 2573, 1890, 1314, 
            1891, 2727, 2097, 1892, 2728, 2098, 1893, 2729, 2099, 1894, 2730, 
            2100, 1895, 2731, 2101, 1896, 2732, 2102, 1897, 2733, 2103, 1898, 
            2734, 2104, 1899}], 
           
           Line3DBox[{1901, 2259, 2574, 1900, 2260, 2575, 1902, 2261, 2576, 
            1903, 2262, 2577, 1904, 2263, 2578, 1905, 2264, 2579, 1906, 2265, 
            2580, 1907, 1330, 1908, 2735, 2105, 1909, 2736, 2106, 1910, 2737, 
            2107, 1911, 2738, 2108, 1912, 2739, 2109, 1913, 2740, 2110, 1914, 
            2741, 2111, 1915}], 
           
           Line3DBox[{1917, 2266, 2581, 1916, 2267, 2582, 1918, 2268, 2583, 
            1919, 2269, 2584, 1920, 2270, 2585, 1921, 2271, 2586, 1922, 2272, 
            2587, 1923, 2273, 2588, 1924, 1346, 1925, 2742, 2112, 1926, 2743, 
            2113, 1927, 2744, 2114, 1928, 2745, 2115, 1929, 2746, 2116, 1930, 
            2747, 2117, 1931}], 
           
           Line3DBox[{1933, 2274, 2589, 1932, 2275, 2590, 1934, 2276, 2591, 
            1935, 2277, 2592, 1936, 2278, 2593, 1937, 2279, 2594, 1938, 2280, 
            2595, 1939, 2281, 2596, 1940, 2282, 2597, 1941, 1362, 1942, 2748, 
            2118, 1943, 2749, 2119, 1944, 2750, 2120, 1945, 2751, 2121, 1946, 
            2752, 2122, 1947}], 
           
           Line3DBox[{1949, 2283, 2598, 1948, 2284, 2599, 1950, 2285, 2600, 
            1951, 2286, 2601, 1952, 2287, 2602, 1953, 2288, 2603, 1954, 2289, 
            2604, 1955, 2290, 2605, 1956, 2291, 2606, 1957, 2292, 2607, 1958, 
            1378, 1959, 2753, 2123, 1960, 2754, 2124, 1961, 2755, 2125, 1962, 
            2756, 2126, 1963}], 
           
           Line3DBox[{1965, 2293, 2608, 1964, 2294, 2609, 1966, 2295, 2610, 
            1967, 2296, 2611, 1968, 2297, 2612, 1969, 2298, 2613, 1970, 2299, 
            2614, 1971, 2300, 2615, 1972, 2301, 2616, 1973, 2302, 2617, 1974, 
            2303, 2618, 1975, 1394, 1976, 2757, 2127, 1977, 2758, 2128, 1978, 
            2759, 2129, 1979}], 
           
           Line3DBox[{1981, 2304, 2619, 1980, 2305, 2620, 1982, 2306, 2621, 
            1983, 2307, 2622, 1984, 2308, 2623, 1985, 2309, 2624, 1986, 2310, 
            2625, 1987, 2311, 2626, 1988, 2312, 2627, 1989, 2313, 2628, 1990, 
            2314, 2629, 1991, 2315, 2630, 1992, 1410, 1993, 2760, 2130, 1994, 
            2761, 2131, 1995}], 
           
           Line3DBox[{1997, 2316, 2631, 1996, 2317, 2632, 1998, 2318, 2633, 
            1999, 2319, 2634, 2000, 2320, 2635, 2001, 2321, 2636, 2002, 2322, 
            2637, 2003, 2323, 2638, 2004, 2324, 2639, 2005, 2325, 2640, 2006, 
            2326, 2641, 2007, 2327, 2642, 2008, 2328, 2643, 2009, 1426, 2010, 
            2762, 2132, 2011}], 
           
           Line3DBox[{2013, 2329, 2644, 2012, 2330, 2645, 2014, 2331, 2646, 
            2015, 2332, 2647, 2016, 2333, 2648, 2017, 2334, 2649, 2018, 2335, 
            2650, 2019, 2336, 2651, 2020, 2337, 2652, 2021, 2338, 2653, 2022, 
            2339, 2654, 2023, 2340, 2655, 2024, 2341, 2656, 2025, 2342, 2657, 
            2026, 1442, 2027}]}, {
           GrayLevel[0.2], 
           
           Line3DBox[{513, 753, 514, 2343, 768, 543, 2344, 783, 558, 2346, 
            798, 573, 2349, 813, 588, 2353, 828, 603, 2358, 843, 618, 2364, 
            858, 633, 2371, 873, 648, 2379, 888, 663, 2388, 903, 678, 2398, 
            918, 693, 2409, 933, 708, 2421, 948, 723, 2434, 963, 738}], 
           
           Line3DBox[{515, 754, 2448, 516, 769, 544, 2345, 784, 559, 2347, 
            799, 574, 2350, 814, 589, 2354, 829, 604, 2359, 844, 619, 2365, 
            859, 634, 2372, 874, 649, 2380, 889, 664, 2389, 904, 679, 2399, 
            919, 694, 2410, 934, 709, 2422, 949, 724, 2435, 964, 739}], 
           
           Line3DBox[{517, 755, 2449, 518, 770, 2462, 545, 785, 560, 2348, 
            800, 575, 2351, 815, 590, 2355, 830, 605, 2360, 845, 620, 2366, 
            860, 635, 2373, 875, 650, 2381, 890, 665, 2390, 905, 680, 2400, 
            920, 695, 2411, 935, 710, 2423, 950, 725, 2436, 965, 740}], 
           
           Line3DBox[{519, 756, 2450, 520, 771, 2463, 546, 786, 2475, 561, 
            801, 576, 2352, 816, 591, 2356, 831, 606, 2361, 846, 621, 2367, 
            861, 636, 2374, 876, 651, 2382, 891, 666, 2391, 906, 681, 2401, 
            921, 696, 2412, 936, 711, 2424, 951, 726, 2437, 966, 741}], 
           
           Line3DBox[{521, 757, 2451, 522, 772, 2464, 547, 787, 2476, 562, 
            802, 2487, 577, 817, 592, 2357, 832, 607, 2362, 847, 622, 2368, 
            862, 637, 2375, 877, 652, 2383, 892, 667, 2392, 907, 682, 2402, 
            922, 697, 2413, 937, 712, 2425, 952, 727, 2438, 967, 742}], 
           
           Line3DBox[{523, 758, 2452, 524, 773, 2465, 548, 788, 2477, 563, 
            803, 2488, 578, 818, 2498, 593, 833, 608, 2363, 848, 623, 2369, 
            863, 638, 2376, 878, 653, 2384, 893, 668, 2393, 908, 683, 2403, 
            923, 698, 2414, 938, 713, 2426, 953, 728, 2439, 968, 743}], 
           
           Line3DBox[{525, 759, 2453, 526, 774, 2466, 549, 789, 2478, 564, 
            804, 2489, 579, 819, 2499, 594, 834, 2508, 609, 849, 624, 2370, 
            864, 639, 2377, 879, 654, 2385, 894, 669, 2394, 909, 684, 2404, 
            924, 699, 2415, 939, 714, 2427, 954, 729, 2440, 969, 744}], 
           
           Line3DBox[{527, 760, 2454, 528, 775, 2467, 550, 790, 2479, 565, 
            805, 2490, 580, 820, 2500, 595, 835, 2509, 610, 850, 2517, 625, 
            865, 640, 2378, 880, 655, 2386, 895, 670, 2395, 910, 685, 2405, 
            925, 700, 2416, 940, 715, 2428, 955, 730, 2441, 970, 745}], 
           
           Line3DBox[{529, 761, 2455, 530, 776, 2468, 551, 791, 2480, 566, 
            806, 2491, 581, 821, 2501, 596, 836, 2510, 611, 851, 2518, 626, 
            866, 2525, 641, 881, 656, 2387, 896, 671, 2396, 911, 686, 2406, 
            926, 701, 2417, 941, 716, 2429, 956, 731, 2442, 971, 746}], 
           
           Line3DBox[{531, 762, 2456, 532, 777, 2469, 552, 792, 2481, 567, 
            807, 2492, 582, 822, 2502, 597, 837, 2511, 612, 852, 2519, 627, 
            867, 2526, 642, 882, 2532, 657, 897, 672, 2397, 912, 687, 2407, 
            927, 702, 2418, 942, 717, 2430, 957, 732, 2443, 972, 747}], 
           
           Line3DBox[{533, 763, 2457, 534, 778, 2470, 553, 793, 2482, 568, 
            808, 2493, 583, 823, 2503, 598, 838, 2512, 613, 853, 2520, 628, 
            868, 2527, 643, 883, 2533, 658, 898, 2538, 673, 913, 688, 2408, 
            928, 703, 2419, 943, 718, 2431, 958, 733, 2444, 973, 748}], 
           
           Line3DBox[{535, 764, 2458, 536, 779, 2471, 554, 794, 2483, 569, 
            809, 2494, 584, 824, 2504, 599, 839, 2513, 614, 854, 2521, 629, 
            869, 2528, 644, 884, 2534, 659, 899, 2539, 674, 914, 2543, 689, 
            929, 704, 2420, 944, 719, 2432, 959, 734, 2445, 974, 749}], 
           
           Line3DBox[{537, 765, 2459, 538, 780, 2472, 555, 795, 2484, 570, 
            810, 2495, 585, 825, 2505, 600, 840, 2514, 615, 855, 2522, 630, 
            870, 2529, 645, 885, 2535, 660, 900, 2540, 675, 915, 2544, 690, 
            930, 2547, 705, 945, 720, 2433, 960, 735, 2446, 975, 750}], 
           
           Line3DBox[{539, 766, 2460, 540, 781, 2473, 556, 796, 2485, 571, 
            811, 2496, 586, 826, 2506, 601, 841, 2515, 616, 856, 2523, 631, 
            871, 2530, 646, 886, 2536, 661, 901, 2541, 676, 916, 2545, 691, 
            931, 2548, 706, 946, 2550, 721, 961, 736, 2447, 976, 751}], 
           
           Line3DBox[{541, 767, 2461, 542, 782, 2474, 557, 797, 2486, 572, 
            812, 2497, 587, 827, 2507, 602, 842, 2516, 617, 857, 2524, 632, 
            872, 2531, 647, 887, 2537, 662, 902, 2542, 677, 917, 2546, 692, 
            932, 2549, 707, 947, 2551, 722, 962, 2552, 737, 977, 752}], 
           
           Line3DBox[{978, 1218, 979, 2553, 1233, 1008, 2554, 1248, 1023, 
            2556, 1263, 1038, 2559, 1278, 1053, 2563, 1293, 1068, 2568, 1308, 
            1083, 2574, 1323, 1098, 2581, 1338, 1113, 2589, 1353, 1128, 2598, 
            1368, 1143, 2608, 1383, 1158, 2619, 1398, 1173, 2631, 1413, 1188, 
            2644, 1428, 1203}], 
           
           Line3DBox[{980, 1219, 2658, 981, 1234, 1009, 2555, 1249, 1024, 
            2557, 1264, 1039, 2560, 1279, 1054, 2564, 1294, 1069, 2569, 1309, 
            1084, 2575, 1324, 1099, 2582, 1339, 1114, 2590, 1354, 1129, 2599, 
            1369, 1144, 2609, 1384, 1159, 2620, 1399, 1174, 2632, 1414, 1189, 
            2645, 1429, 1204}], 
           
           Line3DBox[{982, 1220, 2659, 983, 1235, 2672, 1010, 1250, 1025, 
            2558, 1265, 1040, 2561, 1280, 1055, 2565, 1295, 1070, 2570, 1310, 
            1085, 2576, 1325, 1100, 2583, 1340, 1115, 2591, 1355, 1130, 2600, 
            1370, 1145, 2610, 1385, 1160, 2621, 1400, 1175, 2633, 1415, 1190, 
            2646, 1430, 1205}], 
           
           Line3DBox[{984, 1221, 2660, 985, 1236, 2673, 1011, 1251, 2685, 
            1026, 1266, 1041, 2562, 1281, 1056, 2566, 1296, 1071, 2571, 1311, 
            1086, 2577, 1326, 1101, 2584, 1341, 1116, 2592, 1356, 1131, 2601, 
            1371, 1146, 2611, 1386, 1161, 2622, 1401, 1176, 2634, 1416, 1191, 
            2647, 1431, 1206}], 
           
           Line3DBox[{986, 1222, 2661, 987, 1237, 2674, 1012, 1252, 2686, 
            1027, 1267, 2697, 1042, 1282, 1057, 2567, 1297, 1072, 2572, 1312, 
            1087, 2578, 1327, 1102, 2585, 1342, 1117, 2593, 1357, 1132, 2602, 
            1372, 1147, 2612, 1387, 1162, 2623, 1402, 1177, 2635, 1417, 1192, 
            2648, 1432, 1207}], 
           
           Line3DBox[{988, 1223, 2662, 989, 1238, 2675, 1013, 1253, 2687, 
            1028, 1268, 2698, 1043, 1283, 2708, 1058, 1298, 1073, 2573, 1313, 
            1088, 2579, 1328, 1103, 2586, 1343, 1118, 2594, 1358, 1133, 2603, 
            1373, 1148, 2613, 1388, 1163, 2624, 1403, 1178, 2636, 1418, 1193, 
            2649, 1433, 1208}], 
           
           Line3DBox[{990, 1224, 2663, 991, 1239, 2676, 1014, 1254, 2688, 
            1029, 1269, 2699, 1044, 1284, 2709, 1059, 1299, 2718, 1074, 1314, 
            1089, 2580, 1329, 1104, 2587, 1344, 1119, 2595, 1359, 1134, 2604, 
            1374, 1149, 2614, 1389, 1164, 2625, 1404, 1179, 2637, 1419, 1194, 
            2650, 1434, 1209}], 
           
           Line3DBox[{992, 1225, 2664, 993, 1240, 2677, 1015, 1255, 2689, 
            1030, 1270, 2700, 1045, 1285, 2710, 1060, 1300, 2719, 1075, 1315, 
            2727, 1090, 1330, 1105, 2588, 1345, 1120, 2596, 1360, 1135, 2605, 
            1375, 1150, 2615, 1390, 1165, 2626, 1405, 1180, 2638, 1420, 1195, 
            2651, 1435, 1210}], 
           
           Line3DBox[{994, 1226, 2665, 995, 1241, 2678, 1016, 1256, 2690, 
            1031, 1271, 2701, 1046, 1286, 2711, 1061, 1301, 2720, 1076, 1316, 
            2728, 1091, 1331, 2735, 1106, 1346, 1121, 2597, 1361, 1136, 2606, 
            1376, 1151, 2616, 1391, 1166, 2627, 1406, 1181, 2639, 1421, 1196, 
            2652, 1436, 1211}], 
           
           Line3DBox[{996, 1227, 2666, 997, 1242, 2679, 1017, 1257, 2691, 
            1032, 1272, 2702, 1047, 1287, 2712, 1062, 1302, 2721, 1077, 1317, 
            2729, 1092, 1332, 2736, 1107, 1347, 2742, 1122, 1362, 1137, 2607, 
            1377, 1152, 2617, 1392, 1167, 2628, 1407, 1182, 2640, 1422, 1197, 
            2653, 1437, 1212}], 
           
           Line3DBox[{998, 1228, 2667, 999, 1243, 2680, 1018, 1258, 2692, 
            1033, 1273, 2703, 1048, 1288, 2713, 1063, 1303, 2722, 1078, 1318, 
            2730, 1093, 1333, 2737, 1108, 1348, 2743, 1123, 1363, 2748, 1138, 
            1378, 1153, 2618, 1393, 1168, 2629, 1408, 1183, 2641, 1423, 1198, 
            2654, 1438, 1213}], 
           
           Line3DBox[{1000, 1229, 2668, 1001, 1244, 2681, 1019, 1259, 2693, 
            1034, 1274, 2704, 1049, 1289, 2714, 1064, 1304, 2723, 1079, 1319, 
            2731, 1094, 1334, 2738, 1109, 1349, 2744, 1124, 1364, 2749, 1139, 
            1379, 2753, 1154, 1394, 1169, 2630, 1409, 1184, 2642, 1424, 1199, 
            2655, 1439, 1214}], 
           
           Line3DBox[{1002, 1230, 2669, 1003, 1245, 2682, 1020, 1260, 2694, 
            1035, 1275, 2705, 1050, 1290, 2715, 1065, 1305, 2724, 1080, 1320, 
            2732, 1095, 1335, 2739, 1110, 1350, 2745, 1125, 1365, 2750, 1140, 
            1380, 2754, 1155, 1395, 2757, 1170, 1410, 1185, 2643, 1425, 1200, 
            2656, 1440, 1215}], 
           
           Line3DBox[{1004, 1231, 2670, 1005, 1246, 2683, 1021, 1261, 2695, 
            1036, 1276, 2706, 1051, 1291, 2716, 1066, 1306, 2725, 1081, 1321, 
            2733, 1096, 1336, 2740, 1111, 1351, 2746, 1126, 1366, 2751, 1141, 
            1381, 2755, 1156, 1396, 2758, 1171, 1411, 2760, 1186, 1426, 1201, 
            2657, 1441, 1216}], 
           
           Line3DBox[{1006, 1232, 2671, 1007, 1247, 2684, 1022, 1262, 2696, 
            1037, 1277, 2707, 1052, 1292, 2717, 1067, 1307, 2726, 1082, 1322, 
            2734, 1097, 1337, 2741, 1112, 1352, 2747, 1127, 1367, 2752, 1142, 
            1382, 2756, 1157, 1397, 2759, 1172, 1412, 2761, 1187, 1427, 2762, 
            1202, 1442, 1217}]}, {}, {}, {}, {}, {}}}, 
        VertexNormals -> CompressedData["
1:eJzt1rEJg2AUhdFH0mUL57B4O2SEgLaO4CaSTf4+4BrOkSZgZRML5ffc5sKZ
4Gtew7O7RcTnEXGPdXM79tN7Kb9PzjnnnHPOOeecc84555xX48k555xzzjnn
nHPOOeec8+q8cM4555xzzjnnnHPOOeecc84555xzzjnnnHPOd3tyzjnnnHPO
Oeecc84555xzzjnnnHPOOeecc853e+Gcc84555xzzjnnnHPOOeecc8453/Dk
nHPOOeecc84555xzzjnnnHPOOd/wwjnnnHPOq/CzdSbnnHPOOf/Pz9aZnHPO
Oeecc84555xf2ZNzzjnnnHPOOeecc36cfwGghcjU
         "]], {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRange -> {Full, Full, All}, 
       DisplayFunction -> Identity, Axes -> True, 
       AxesLabel -> {None, None, None}, BoxRatios -> {1, 1, 0.4}, 
       DisplayFunction :> Identity, FaceGridsStyle -> Automatic, 
       Method -> {"DefaultBoundaryStyle" -> Directive[
           GrayLevel[0.3]], 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "RotationControl" -> "Globe"}, 
       PlotRange -> {{1., 16.}, {1., 16.}, {0., 16.}}, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"4", "13"}, "SwatchLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30100577`", ",", "0.22414668499999998`", ",", 
                    "0.090484535`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19699838300000003`", ",", "0.252204821`", ",", 
                    "0.33320940200000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               Graphics3DBox[
                SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                  DirectedInfinity[1]}, 
                PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
                0]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     Graphics3DBox[{
       GraphicsComplex3DBox[CompressedData["
1:eJyl3V9yXNdxx3FYsmVKlm1IoCRIAi3gEiRBEiSxA2MNWQEqVXnOFmYpXAqe
swouwf/iJI5j58Hz60p/WqcGVdHLrV9rOHPvF3fO7dPnd3ou/vlf/+lfPjo6
Ovq3z46OPj7Kf7/77Y8fj25/XD8iHn1MPPox8ehT4tFnxKPPiUdvxKMviUc/
Jx59RTz6FfHoa+LRb4lH3xBXr3h7fLTQx8Tlf4Q+JS7/I/Q5cfkfoS+Jy/8I
fUVc/kfoa+LyP0LfEJe/9/Uh3h6PF/oxcfk/Qp8Rl/8j9EY8+pK4/B+hr4jL
/xH6mrj8H6FviMvf8cP7eHW/qz0+XuhT4vI/Rp8Tl/8x+pK4/I/RV8Tlf4y+
Ji7/Y/QNcfk7TjteyN/7+hBvj6cLfUZc/o/RG/HoS+Lyf4y+Ii7/x+hr4vJ/
jL4hLn+fh47L8nf88D5e3e9qj2cLfU5c/qfoS+LyP0VfEZf/KfqauPxP0TfE
5W/e4fNP/o7Tjhfy974+xNvj+UJvxKMvicv/DH1FXP5n6Gvi8j9D3xCXv/md
eYb8fR46Lsvf8cP7eHW/qz1uC31JXP7n6Cvi8j9HXxOX/zn6hrj8N7T5nPw3
tM8/+W9oxwv5b+hDvD1eLvRz4vLf0K+Iy39DvyUu/w3t/ET+5tHmc/I37/D5
J3/HaccL+Xtfb8TVHp8v9BVx+V+ir4nL/xJ9Q1z+zgudn8jfPNp8Tv7mHT7/
5O847Xghf+/rQ7w9Xi30K+Lyf45+S1z+z9HOt+XvvND5ifzNo83n5G/e4fNP
/o7TG/Fo7+PV/a72+Gqhr4nL/wp9Q1z+1jmcb8vfeaHzE/mbR5vPyd+8w+ef
/B2nHS/k7319iLfH64V+S1z+r9DWj+RvncP5tvydFzo/kb95tPmc/M07NuLR
jsvyd/zwPl7d72qPbxf6hrj8rdtZP5K/dQ7n2/J3Xuj8RP7m0eZz8jfv8Pkn
f8dpxwv5e18f4u3xZqEP1UOt21k/kr91Dufb8nde6PxE/ubRG/Fo8wz5+zx0
XJa/44f38ep+V3u07i9vvx/WSR1vfJ5YV/J5a/7lPNx80/nKRtw81fm9eZ55
gPUwn4uOs9aPV+PIiveh+91xyHq0/H1uW7+Tv3mu9Q75Oy/ciMvfOor5tPyt
O5p/yH81LstvdV/791uNN/L3OWw9Wv7mrdbv5O88z3rHxtG6iPND+VtHNJ+W
/yrPkMfqPnW8lr/jt3/v1fNW/uah1qPl77zN+p38rXNsxOVvXdD5ofxXebPX
t7rvzD/k7zjteCd/8xfvj1W+KX/nYdaj5W/dwvrdxtE6n/UO+a/mgZ7v6j4y
n5a/4675h/zNRxwf5W/+7v20mm/J3zqE9Wj5W7fbiMt/Vdfw81f3hfND+TuO
mk/L37zD/ED+5uOOp/J3/ur9t6o3yN86nPXojeOqTuf7rf7O1jvk77jo/FD+
5hHm0/I3vzafkL/zUcdf+Vu/8X5d1dvkv6o7+/9Xfzfrd/J3nLPeIX/zAueH
8jePNp+Wf+LyT1z+ics/cfknLv/EV/Xm1VH+ics/cfknLv/E5Z+4/BOXf+Ly
d75o/i1/6yvmK/K3Hrlal3XcWa1jbRxXr3Mcsh4tf5/b1u/kb55rvUP+zgud
f8rfeon5uvytL658Bj53V+uycvX+3Yiv1ht9X5/D1qPlb95q/U7+zvOsd8jf
+ofzVflbLzS/l7919dV1+5yWv+PERlz+PlcP+R3MQ61Hy995m/U7+VvnsF4j
f+t/zm/lb518dR3mqfL3e+9zfePoc9JxUP7mlav7xuuRv/Nj66Tyt55kHU3+
K1+dde/VeTlPk7/fY/Na+fvc24jL3zzRcVP+zqsO+d2sQ1iPlr91u5VP17rb
ytfoefn3d/4sf8dL5xvyN7/YiMvffNznmfydv/r9l/+Ki3U469GrurP8/XfW
6eTv98y6hvx9LjkPlL953EZc/s57zDPkb53AcVn+1tUO+Z2tQ//9tz+uc8y/
j/45/z46x6Oud7/qr4+u+BH6hPc/IX7U9f3X/fXRFT/qevcd5/Md8aOub3/T
Xx9d8SP0Bed/Qfyo6w9bf310xY+6vid/jb4n341+T74V/Z78LHpHfhC9I5+I
vuN5Fn3H8y/6lvE3+pbxOvqc8SL6nPGldO7TR+jcn4l7fz5Cn/B677dHXdf9
86jrui8eoS96fNwPj7q+Z54z/r6Puq6/16Ou78hXxt/lUdfnjLuD8zE6nBOX
8zH6hNfL+bjr4nzcdXE9Rl/0+OB83PU988zB+bjr4nzc9R354uB83PU5z9fB
+TE6nBOX82P0Ca+X8+Oui/PjrovrY/RFjw/Oj7u+Z54/OD/uujg/7vqO5/zg
/Ljrc/KbwfkUHc6Jy/kUfcLr5XzadXE+7bq4nqIvenxwPu36njrL4Hza9Y78
aHA+7fqWPH5wPkWH6xk6nBOX8xn6hNfL+azr4nzWdXE9Q1/0+OB81vU9da7B
+azr4nzW9R3z1cH5rOvieoYO13N0OCcu53P0Ca+X83nXxfm86+J6jr7o8cH5
vOt78vHB+bzr4nze9R31gsH5vOvieo4O1w0dzonLeUOf8Ho5b10X563r4rqh
L3p8cN66Ls7o4rx1XZy3ru+o1wzOW9fFdUOH6yU6nBOX8yX6hNfL+bLr4nzZ
dXG9RF/0+OB82XVxJo8vzujifNl1cb7sujhfdl1cL9Hh+hwdzonL+Tn6hNfL
+XnXxfl518X1Ofqixwfn510X5+ddF2fmRcUZXZyfd12cn3ddXJ+jw/UKHc6J
y/kKfcLr5XzVdXG+6rq4XqEvenxwvuq6OF91XZyvui7OzDOLM7o4X3VdXK/Q
4foKHc6Jy/kV+oTXy/lV18X5VdfF9RX6oscH51ddF+dXXRfnV10X51ddF2fm
7cUZXVxfocP1Gh3Oicv5Gn3C6+V83XVxvu66uF6jL3p8cL7uujhfd12cr7su
ztddF+frroszdZDiqg5XdTgnLue36BNeL+e3XRfnt10X17foix4fnN92XZzf
dl2c33ZdnN92XZzfdl2c33ZdXK0rhesNOpwTl/MN+oTXy/mm6+J803VxvUFf
9PjgfNN1cb7pujjfdF2cb7ouzjddF+ebrovrDdp6s5z/1nVx/Z9eTy7Of+11
4+L8370+XJz/0uvAxfW/er23OP9nr+sW5//o9dvi/Odepy3O/97rscX5T73u
Wpz/2OurxfkPvY5aXH/f66Xhuvt516N+D+fdJ10X50+6Lq4/Q4fzz7oO191P
uy7OP+06XHcfd12cP+66uH6EDuePug7X3U+6Ls4/6Tpcd4v68+7XXRffxOXs
ukg4o4vrL9Hh/Muui/PnXRfnz7suzr/oujj/ouvi+hk6nD/rujh/2nVx/rTr
4ryoP9+fdF1cE4fz7UnXY30Jzvdfdl3rRV92XetCX3ZdnL/surh+gc687ouu
w/X2i66L8xddh+v9ov68W9Sfbxf15/tvui6uicv5m66L7zddu143OKOL89dd
F+evuy6uX6HD+auui/NXXRfnr7ouzov6825Rf75d1J/vv++6uCYu5++7Ls7f
d118v+va9c/B2ediOH/XdXH9Fh3O33ZdnL/tujh/23VxXtSfd4v68+2i/nz/
Q9fFNXE5/9B1cf6h6+L8m66L72+6dj15cEYX1yfocH7SdXF+0nVxftJ1cV7U
n3eL+vPtov784aLrcL1PHM7vL7oO191F1+F6d9F1cb1A7zmeX3Q91ufh/GFR
f75f1J/fL+rPu0X9+W5Rf75d1J/PF/XnD0+7Ls6Jy/lp18X5adfF+WnXxfUp
Opyfdl18n3at32FwRhfnrevivHVdnLeui/PWdXHeui7Oz7ouzonL+VnXxflZ
18X5WdfF9Rk6nJ91XZyfdV18F/Vnj8V5UX/eLerPd4v68+2i/ny+qD9/eNF1
cU5czi+6Ls4vui7OL7ouri/Q4fyi6+L8ouvivKg/3y/qzx6L86L+fLeoP98u
6s/ni/rzh5ddF+fE5fyy6+L8suvi/LLr4voSHc4vuy7OL7suzov68/2i/vx+
UX/2WJwX9efbRf35fFF//vC66+KcuJxfd12cX3ddnF93XVxfo8P5ddfF+XXX
xXlRf75f1J/fL+rPu0X92WNxXtSfzxf15w9vui7Oicv5TdfF+U3XxflN18X1
DTqc33RdnN90XZwX9ef7Rf35/aL+vFvUn+8W9WePxXlRf/7wruvinLic33Vd
nN91XZzfdV1c36HD+V3Xxfld18V5UX++X9Sf3y/qz7tF/fluUX++XdSfh68R
X+6IW3fCl1v1FHy5lcf/qr++6jK/6q+v+iO+3Jo/4MtNXF9uuOnLLZ74cms+
gy83cX25+Tvqy6367P/Tl5v31ZebuL7cnLe+3MT15YaLvty6/923c0IcX7S+
3Pxd9eXW/NZ9ET8njq9bX27uS325o65vHQ9f7rg/8anqyx33mz5YfLnj/sFn
+1Bf7vi74/vVlzv+jviK9eWOvwu+ZX25g7N1PHy5gzN1Qn25g7M+WHy5gzM+
24f6cgdnfL/6cgdnfMX6cgdnfMv6cgdn63j4cgdn6oT6cgdnfbD4cgdnfLYP
9eUOzvh+9eUOzviK9eUOzviW9eUOztbx8OUOztQJ9eUOzvpg8eUOzvhsH+rL
HZzx/erLHZzxFevLHZzxLevLHZyt4+HLHZypE+rLHZz1weLLHZzx2T7Ulzs4
4/vVlzs44yvWlzs441vWlzs4W8fDlzs4UyfUlzs4W4fElzs4U+d8qC93cMb3
qy93cMZXrC93cMa3rC93cN54Hb7cwXnjPPDlDs77+OC8jw/O+/jgjNaXOzjn
fOScz5Vz3k/OeR855/VyTlzO1vHw5Q7O1An15Q7O1iHx5Q7O1Dkf6ssdnJmH
6MsdnPEV68sdnPEt68sdnK3j4csdnKkT6ssdnK1D4ssdnKlzPtSXOzjzefpy
B2d8xfpyB2d8y/pyB2frePhyB2f9OvhyB2frkPhyB2fqnA/15Q7O+H715Q7O
zPP15Q7O+Jb15Q7O1vHw5Q7O7i/Flzs4W4fElzs4U+d8qC93cMb3qy93cOZ6
9OUOzviW9eUOztbx8OUOztQJ9eUOztYh8eUOztQ5H+rLHZzx/erLHZzxFevL
HZypo+nLHZyt4+HLHZypE+rLHZytQ+LLHZypcz7Ulzs453zknM+Vc95fznkf
OcNLX+7grI8UX+7gjE9VX+7grA8WX+7gjM/2ob7cwRnfr77cwRlfsb7cwRnf
sr7clR93cP5brzPryx2c/9rrxvpyB+e/9DqwvtzB+YAvd3D+c6/T6ssdnP/U
6676cgfnP/Q6qr5c+e58HX5cOe8+4Tzw5co5vtzBOX5dOO/2/tvB+YAvd3D+
uH+evtzB+aN+PfpyB+d9XM67Rf05vtzB+df9ffXjDs75/3L+JdeJL3dw3vtv
B+cDvtzB+Rf98/TlDs6f9evRlzs47+OD86L+HF+unOPLlfOt3yv8uHKOL1fO
8eXKOb7cwfmAL1fO8eXKOb7cwfmLfh36cuW8W9Sfbxf15/hyB+dveN98zjf9
PPTlDs6sS+nLHZz38cH5gC93cI7PVs7x68r5q349+nIH50X9+XZRf44vd3D+
nvfN53zfz0Nf7uDs9xY/7uC8jw/OB3y5g3N8tnKOX1fO3/br0Zc7OC/qz7eL
+nN8uYPzD7xvPueHfh76cgfn3/Tr1Jc7OLvu+0Bf7uAcn62c49eV85N+Pfpy
B+dF/fl2UX+OL1fO8eXKOb5cOceXK+f4cuUcX66cz83bHujLlfP9ov78flF/
3i3qz3eL+vPtov58vqg/x5c7OMcfK+en/Tz05Q7OT/t16ssdnPfxwfmAL3dw
3vrn6csdnPN5cs77yDmvl3Picn7WX1ec44+V87N+HvpyB+dn/Tr15Q7O+/jg
fMCXOzgv6s/x5Q7Oi/pzfLmD86L+HF/u4Pyiv644xx8r5xf9PPTlDs4v+nXq
yx2c9/HB+YAvd3Be1J/1LenLHZwX9ef4cgfnRf05vtzBOf5YOb/s56Evd3B+
2a9PX+7gvI8Pzgd8uYPzov783nkUdfPBeVF/ji93cF7Un+PLHZzjj5Xz634e
+nIH59f9OvXlDs77+OB8wJc7OC/qz/HlDs6L+rO+QH25g/Oi/hxf7uAcf6yc
3/TP15c7OL/p16kvd3DexwfnA77cwXlRf44vd3Be1J/vzGupyw/Oi/pzfLmD
c/yxcn7Xz0Nf7uD8rl+nvtzBeR8fnA/4cgfnRf05vtzBeVF/ji93cF7Un1e+
26FX/XStj0Q7n492/unv99in0Pze3y+xD9xGPNrnPeuyoy+U46nrWPbd8X61
7m9fE+vR9jPG1zz6Ecsfn6k+v8EfH58+qsEfn5Q+lcEfH4o+gMGfdX7XWQd/
1lFdxxr8WadynUD++sT1GctfP+/oAwt//ZKjzyb89aONPobw1++jP0P++ilc
/5a/69WuL8rf9cDRR8b7H9/96Jft/Y9vWl/suP/tF4vvcNz/9uNkXj3uf/sd
Mm8Z97/95Nx/sFhHH/e//aV4Toz73/49+PLl774H/d/y10+tv1b++lX1L8pf
P6D+MPnrt9J/I3/9LPob5K9fwPVj+bseW+MP+0LcdzHGH/YB6CMf4w8+a326
Y/zBx6oPcow/+AT1mY3xBx+WPp4x/uBz0Scxxh98BK5Dy999Nu6Tkb/7LUaf
bvjrZx99kOGvX3j0mYW/fkz9f/LX76a/Sv76ifSvyF+/xujz5fjvviX3NTn+
u6+FfRdj/HffAL72Mf7ry8Y3PMZ/fa/4Msf4r68Q39sY//Vt4Ssa47++GHwb
8ncfmPvQ5O/+obEfBv7uzxj7DeCv/334ueGvv3j4ZeGvf3P4EeGvP274veCv
/2j4aXz+sq/OfYPj+cs+Lfcpjecv+2DcBzKev+wz0Gc/nr/4uPUxj+ev3wd8
ouP5iw9RH954/uLz0uckf/cpus9T/u6Hc/+Y/N1v5P4c+bufw/0P8tcvr79c
/vqR9e/KX7+n/kj566fTfzbyn6uux75c85/EzX/cJ8c+tJH/uA+JfT4j/3Gf
x0Z8r/X9j/xH37f1YfMfnwf4Vkf+o28RX6D83UfrPmr5u79z7LeEv/vnxn42
+Ls/aewXgr/7P8Z+DPjrrx9+d3jrXx5+YvjrDx1+TfNP9yW7793803207IMd
+af7FNlnOPJP94Gxj2vkn+6zYZ/MyD/dx3BF3PxTn7j1ZPNP8yF8tPIf+7zt
UwD/sV/Z/cnwH/tB3f8J/7Hfzv118B/7mdy/BP+xX+SKOPyHH1//PbyH31l/
c8Yj+rdG22802v6Y0fZzjLb/YLT98qLt7xZtP7Jo+2dF2+8p2v5E0fbTibb/
S7T9SkrTjzV69A/Nuoj9LuObsz9jfF72E9xr+99F268t2v5i0fbDirZ/U7T9
hqLtjxNtP5daR6KParR9P6PtUxltX8Vo+wBG27cu2j5r0fYFi7aPVbR9l6Lt
ExRtX5to+5yWpi9nafpIln+Nvoflt3pKPFzoK1d+Fvqglf+Cvl3lF6DPVK1v
0xep1mPp4xNtv9HS9MeMtp9jtP0Ho+2XF21/t2j7kUXbPyvafk/R9ieKtr9n
9OhHGZ/dU+LxhdnvLz4m+9PFd2M/tfhE7P8VX4P9qrIOb3+lrCfTNzPaPo/R
9iWMto9etH3fou1TFm1frWj7QEXrbyuNH6s0/qHS+F1K488ojZ+gNOvf0R+o
w5SmDlOaOkxp6jClqcOUpg4TfU/9oTT1h9LUH0pTfyhN/SE6fiD9Qe+ZX5dm
fl2a+XX0jnliaeaJpZknRt8xrynNvCY6PoPhO9BXYB7tOri+Aucxrr/rK3Ae
7/q+vgLrWPoHNuJ5nb4CfwdZP4O+An8HWb+EvoJwWfk29BX8jv/vOri+Avm7
nq6vQP6u1+srkL9+AH0FG0f9BvoK5K+fQV+B/PVL6CuQvz4NfQXwH+vg+grg
P9bT9RXAf6zX6yuA//AD6CvY+nH4DfQVwH/4GfQVwH/4JfQVwH/4NPQVeP+7
Dq6vwPvf9XR9Bd7/rtfrK/D+1w+gr2DjqN9AX4H3v34GfQXe//ol9BV4/+vT
0FcA/7EOrq8A/mM9XV8B/Md6vb4C+A8/gL6CrR+H30BfAfyHn0FfAfyHX0Jf
AfyHT0NfgeOP6+D6Chx/XE/XV+D443q9vgLHH/0A+gq2fhx+A30Fjj/6GfQV
OP7ol9BX4PijT0NfAfzHOri+AviP9XR9BfAf6/X6CuA//AD6CrZ+HH4DfQXw
H34GfQXwH34JfQXwHz4NfQWO/66D6ytw/Hc9XV+B47/r9foKHP/1A+gr2Djq
N9BX4Pivn0FfgeO/fgl9BY7/+jT0FcB/rIPrK4D/WE/XVwD/sV6vrwD+ww+g
r4Dj8BvoK4D/8DPoK4D/8EvoK4D/8GnoK/D56zq4vgKfv66n6yvw+et6vb4C
n7/6AfQVbP04/Ab6Cnz+6mfQV+DzV7+EvgKfv/o09BXAf6yD6yuA/1hP11cA
/7Fer68A/sMPoK9g68fhN9BXAP/hZ9BXAP/hl9BXAP/h09BXYP7jOri+AvMf
19P1FZj/uF6vr8D8Rz+AvoKtH4ffQF+B+Y/PIX0F5j/6JfQVmP/o09BXAP+x
Dq6vAP5jPV1fAfzHer2+AvgPP4C+gq0fh99AXwH8h59BXwH8h19CXwH8h09D
X4H5p+vg+grMP11P11dg/ul6vb4C80/9APoKtn4cfgN9Beaf+hn0FZh/mufp
KzD/1KehrwD+Yx1cXwH8x3q6vgL4j/V6fQXwH34AfQVbPw6/gb4C+A8/g74C
+A+/hL4C+A+fhr6CjO/4CrK/UF9B9nfqK8j+Wn0F2d+sryD7y/UVZH+/voL0
V9BXkP4W+grSX0RfQfq76CtIfx19BelvpK9gl3zd30FJfy98Bdkvq68g+5X1
FWS/uL6C7NfXV3C7/eOoryD9KsbvwCW/9HfLko/iK0i/nPG7UMl38RWkX5S+
gvTr0ldQv2OMryD7vPUVZJ+9voL0OdBXcLf946ivIH0+9BWkz4q+gvS50VeQ
PkP6CtLnSV9B+mzpK0ifs/F7Ofs+c/oKqg8BvoLqA4GvYLftj/oKklfhK6jf
h8RXUL/Pia+gfh8VX0H9Pi2+gvp9YHwFRx/t4/gK0odPX0H1w8BX8H77x1Ff
QfrB6CtIPx59BemHpK8g/aj0FaQf2Phdrv31jt+R2l+vvoL0I9RXcL+/Ln0F
6X+jryD9h/QVpP+TvoL039JXkP5n+grSf05fwdHH+zi+gvRf1FeQvj76CtJX
SV9B+lrpK0hfMX0F6eumryB99fQV7PbnP35fat9XcvgK8v/1FeS69RXk76yv
IH3p9BV8vj/qK/jp/qivYN8XU19B9Q+jDlP926jDVP886jDVv5A6zG5/PvoK
0r9TX0H1k6P+UP38rD+kn6L1h/SztP6w7yeqr6D6CDK/rj6OzK936aPp/Hrf
x1RfQfWJdJ74yV47T9z3SdVXsNu/Xl9B+q3qK0h/1jrStzX/zr6t+Rz7jOa8
7Oea67D/aK7bfpnhZP/XcLVf6fid+2h+lz06f2f7yOa+sO9p7iP7dPr77qX5
Pbro3Nf2qc33wL6q+d7YB9Tfjy/9NfFofgcv2n64pTNOOG58Tjya/pil6edY
mv6Dpf1dPsbRGh/2OuNujSd7nXG64nudcT3x6PG77+kf6e+Up9/hE+LR1L2j
8xyrcWav89yr+F7nOVnx9G39oserzyi/T199Mfk99erj+IR4NHXj0hvxvU7e
UeNb8pCPbls8OnlNxfc6eVDi0cmbKp58g9+Dj/b3y0tTjy29EY+mHhudvLLG
4fR7zvUlvteVt151XXnuVdeVF1917e/cV3/NJ8SjqX+W3ohHU/8sTf2z5hF/
pN6Y/tb7eUk9j9KP+VPimfdRh4y+pw4ZfU8dMtrfoS9NHbL0RjyaOmRp6pCl
qUNG1zz1uuvMayuevtSfEk9/ZeqE0TvqhNE76oTRO+qEpakTlt6IR1MnLE2d
sDR1wtLUCaNTF6m60+97HSXx6B31vehb6nvRt9T3om+p70XfUt8rTX2v9EY8
mvpeaep7panvlaa+V5r63rn5Xeo84Upel3zRvC75pXld8lHzuuSv5nXJd83r
ymdLXpd82rwu+bd5XfJ187rk9+Z1mQ+Y12X+YF6X+YZ5XeYn5nWZz5jXZf5j
Xpf5knld5lfmdZmPmddl/jbyusz3zOsyPzSvy3zSvC7zT/O6zFfN6zK/Na/L
fJi8LvNn87rMt83rMj83r8t83rwu83/zutQLzOuqDy55XeoR5nWpX5jXpd5h
Xlf1EfK6qqeQ11X9hbyu6jXkddXfl7yu+itvPZ76kXld7Vv56LbH83chr0s9
y7wu9S/zutTLzOtSXzOvq37G5HXVT3rr8ernTV6X+qB5XdUT99db8fwdyeuq
XkleV/VN8rqqh5LXVf2UvK72bZnXpa639XjtC3NdO3Vw17VTLyavq/oyeV3V
o8nrUr82r0u927wu9XHzutTTzeuq7zV5XfUd33q8+r6T11XfffK6+t0D8rqs
N5jX1foEeV2tZ5DXZf3DvC7rJeZ1WV8xr8t6jHld9Qsnr6t+7VuPV7988rr6
vQLyuvq9CPK6+r0O13+zvkVel/Uw87qsn5nXZb3NvC7rc+Z1Wc8zr8v6n3ld
9V8nr6v+91uP1+8PkNfV7z+Q19Xvb5DX1e+fkNfV78+Q17n+eqT+e8/rfF3F
/XcnP/76I9Yhd+Z1fE7V63ifivM+Va/jfev1nFfV37yuxHn/qr953t91fW9e
x3VUvY7PrTifW/U6Prdez+fesh61I68b1826d/29WNetz2c9s7iyvndPXuf5
1PtwfonLqep1nGfFOc+q13Ge9XrOs+pvnGe9j/nx9uPnXe8P16q/eT+zX6ru
Z/fxnPB6zr/qad5/+PHtc+z51/tzPYn7d6h6HddVca6r6nVcV72e66r8iuuq
9+G6ql7HddX7c12Je531ufzdKs9x3GAfW40b7q/i96XGuMF+lBp32CdR32f9
+xc97vUm7vXW53L9ift3rnodHCoOh6rXwaFeD4eqv8Gh3gcOlV/Bod4fDonL
oT4XDpUfwqXOh/ui8hbHefYvjt/VcZxnv1eN8+xDKh7sj6l1GvdtXPS4fBKX
T30ufBKXT52PebA+Sn/3EW4Vh1vlM3Cr18Ot8iW41fvArep1cKv3h1vle3t9
b14Ht8TlVucDt8TlWOfp/thV3mZ+Z97mc5y8zDxiPMfNd8wzfF7ynHfclZvP
H79/cnPc8vspR+9H893BjTzXPHVwI980/xvcyMvMewY38gufx4MbzzHH8cGN
8czvp9+/VV4+8nfy7PG8Iy8e+ajPO/JB86rxvDNP4fk9xn2eb47j8nHccn4y
7hPmGeb94z4hHzffHfcJeaV52LhPyF98fo/7hOeY94Xj7mre4vzGecXIV83r
yY9Hnke+OfIwrtc8xeex1+vzx/nYuJ8Xv6vovMT8ftzP5svkkeN+Js8a+YT3
M8/PMX8zr2D+5Dxk5BXk9ea7I68wHyTvGc9LnvPO38b3hXmS84rxfSEfNx8d
3xfyMrmaR6zmLc5vzPs9H/Ni8z/Px3zH+dL4HjHPMM8e3yPyTa/b/GiVl5u/
m6f6/uZl5vfje0Ge63mZl63yNvM7/93BvJh8bpUvj3mJ+TJ5zGpeYl7l+Gbe
4/s4fq7mweaX47qc95A3+P6Oe6u6gvmrn+t4Yl7i5zpe+Txb1TNG3cj5B3nh
+Hs5DyY/8HzGOMZzaFU3WuXxnqfjifmZ5+l45XPd81w9V8pHl/N8YL1u3M+u
b5BHjvvZ+soi//D5vXouer6H6nXOxxzfnA94XY6fq7zQ/GmVf3hePq8eWq9b
5QtjXur+NuY5Y9xY5LWVNy3yQj/f557ff6/3UL3O6zWPW/09nPfKYTVvKR/a
Ir/3c0Z9jPFXDuYdD63XycG81ft1lb9b71jNYyt/XMzrxjhPXuDzb4zz5js8
V+RzqF436vvk737P5eO8bXV/WB9Zzf/9d+Y7Yx4It1EfIw+Q2yqPP1Svk5vz
G8dNuTmv9fu2qgfU85t63Yr36v5dfe9X4+Lq+bB6Hq6e86s8ZZVPrfK7VV65
zFsX+e+oa7ou4Tq03KyPUa8b3FyHfGC9bnAjn7VeN7iRp6/WXUY9eFFP9+/g
89B63XjekQdZrxvPuwP1uvG8I6+3Xief1Xyl3me17gKfpS/BPEgfgPeJ688P
rNeN+4R5zGrd1Hrdar1t3Cd8PxzX/H6bz1qvG/nqgXqd17uan9XnLtZNvV7v
X59/Xu/Kt+E846H1unE/f9ePYx7g/cz9Zd4z7mfGLZ9njuuH6nUr38DIK/Sf
uD5tXmFd33VK84kDz6vxfeHv47xifF/4XpqPju8L4715hs9b74vhP+B8HA/M
mz0fnzMjHyIvGN8z5i3je8R4bP46vkcL/4Tj1pg/8P4+D80LzY98DpiXj+/F
Yv3e5+rIX8mD/0+e8r9YWH9C
        "], {{{
           EdgeForm[], 
           Directive[
            Specularity[
             GrayLevel[1], 3], 
            RGBColor[0.880722, 0.611041, 0.142051], Lighting -> {{"Ambient", 
               RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
              "Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{2, 0, 2}]}}], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1: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
uy/WVmMpuxfWsshryKVct4oaG9k9uOYcL5/dm2uBy2X34JrhL7L7jNsZG19m
13Jf4+rJdbrm9h+i85Uy5/fRuVFZ8UfcrOB8+F10PlH+/CM6cyoH/RWdSZQb
/4zOlsqBz0T3Y5WHxyRnbz3v16pXVfD1vy6556b5pEpyX0734rLk+lE12aXJ
/T1d/0uSe24aA99GZxtl6UrJ/T3dr8rJPUDdxz3RuUsZ+3Nco+C177PoZ03Z
8oDkzKZ8cig/AwvOCf9EZypl4P2Ts5bWrH2Tc51y9yHJ/VvlBC0EypPKsSWS
c6ny7fXJvUGN1QOT86fWu4OT+9LKG99EZzzl/B3R2VJzw+7orKu6YFd0blSu
3hmdG5XDD0rOusok/0ZnYOXnv6NzoPL5f9EZWDm8tjJEwb2yG5L7nJq370yu
l9VnHphcR6tO6pdcL6ufOSC5jlbvqH9yfap+db3kWk99s7uS63H1pYfqWhfc
s+qbXBerp90ruabT3HVfch2tvuK9yXWu+o33JNe26hPentxXUf98SHJNrZ5Y
3eT6UX253sm1oXrafZLrOPW06yTXm+rXnZPc01Bvo1Ryn1/r8kXJvWLN4RWT
e7yawy9O7v1qPqmaXLOrT3hTcm9cvcTTkvcINF/dnNxDUB18Y3Jdr55qreT6
V33CM5L3CzRfnY4HFTxHXZi8Z6EMcEFyH15rd3mtowVngArJPXCtO2cn7zVo
TT8zeW9C89tZyXsTyhglk/cglDEC7lpw/bVfcn2hmu6T6HVBuat5cr9O2bVp
co9FvZYWeHPBdcEDybWz+k+DNV8UnPmv4WdewRlySnQeUwZoltzHU1bsWjyu
1KfpltzjUmbeFD2nKdO+Fp33lHVfjc6NyrcvR9dfqrOOK76PqrEe1LNXwufT
HX9acCY/Prlnpdrk6uT+pDLtVcn9TNUapZN7TaoXTk7uMSrnn5LcH1N9cXnx
PdVcVCO556kMXJOfNQVn3ROSe2Kqj07lZ0zB8+0tyf1SZeNXoutKrdEnJvcD
VXecn9wfU/1yXnI/TfPzuclzoMZqmeT+mGqWK5N7pKq/rkjunaomOim536ha
qRw/kwuu3com99lUB70UXc8qP7wRvRarHtwYvdYrg62OzgPad1iATy64xz4v
Ogeq9z49Omspn0+LzpDqbyyLrkG07zAjOlOpBzI1OtcpB86Pzlfad1gRXXdr
v2NVdJbQnsjH0Xnp//VRdM2onvni6JpRPfPnomtM5f0l0TWj+ucro7OK9kqW
R/dDtPexNLpnov2R+5P7e9q/mBmdD9UDnxudgbXXsDU6v6lu+jA6j6mW2RKd
r1SvrY3OPNpP2Rydc1RHfxSd8VTHvRidqVQTvx5dv6junh2daZWHP4jOeKrF
3ozOTqrd5kTncO0NPRudt7W3Mis6G2uPZlt0HlNduSY6U2lv6P3obKlM9xa+
quBach0uW/Ce0ejk/qf2XD6NzoSqVYcl9yG1B/FudE9YufcdfH7Befvt6H6v
svQifEjBOXlhcR9M9+W94n+7zmGv5D07Zaejk/f+lJFS8h6ics4LxfdU12oD
PqXgnN82uW+vvZgOyb137W+2S+7Va0/ttuT+vPba2if37bXXuT66B65a4Jjk
vUXlrmOT13HNIfsk72kqdxUl7zkqj8XkfUzlui/5nqsLrhd+id53UO76LXp/
U9ns9+K1W7no1+j9UOWxL6J77Krpfsa3FFzH/RS9B6Gc9lV0/1913NfF904Z
YHv0HoFqupycu5Q97k7u92rvbG/cvOAs2jF570P7y4fjbgXn6iOT+5nKn0ck
7/UoVx+WvNejGuGo5H1Y5dXOyfsm2muultzX1brWSuO+4P2mW5N7ttpr65Tc
n9dec6PkHrL2p1om78to/6tHcj9f++/1k/vG2psbkdyj1n5fw+Ses/aqRiX3
sbVveEdy/1l73F2S1yatI22S91+079ak+Dy1ZrVO3tPRHlxPPVcF7++PTO6f
a7+yQXKf+f/7gMk9be2XDU/u1Wvv8n8XPFci
              "]], 
             Polygon3DBox[CompressedData["
1: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
unJ+1q/i9xjzVyzZo+aCI5voiRNL9KpnQq9HT8ON4z16RXoCPkvPRO9Ez0Cv
SU2tV2OMVWvrSejlGBP0Koyxekt6NsZeY46xx5ij12BM0TvSwzHWGGP1nvRE
jL2H8t4XldRM1k7GOGNvv05i3x6Mn1LiEekVOafObe9OtIhz7tw75+Zq94R7
wxitd2OMNHYb042dxmRjszFXbeqeMfYaw91LxmhjuTHf2G2MNlYb09Warplr
55qrTdxj7jX3pN6VMdZYa4zSezEnWqupkcyV5lRr0Ts7ybXmXGstNZC5WA1l
LWaNpra6uErtYg1j7W7O1UtRU5mL1VTWcuZMtZaaSa90RCdaypytt6KmMpef
WsUb0CNYpY7msra0BlSLmUP11o7pJLduWUXbq4nVxsZcY6+aSG/OHGguNOfo
dZkj9OLUiOYOa1BrUTWYXmz/KrW8Nb1emTW2tbY1kt61Od/a+rlOtIBnwrPh
mVFbeuY8e54JtZ5nwLPgGVLLbQ/3K6nZ1rfWgq8q8SA2MDfBV5d4DBvCa1bJ
ZeY0a1M1hdpiu0609U7wNSWexkZ1NKRe17udaEtrOr0ua3xrve3gviU18Xp1
arBr4ds7qc30XK5v19/11BM5r6Sm1CvZCr6wPQ8rw9vAV5bUqGu7P/j/8Uo0
k9pJj+T8kppb72RbuE9JjbtuHQ/mgpKadKV2P/Vv94P7Q0/ounY/6BWNx/j4
JTHT2GnMVmtP1Uks/8/DgL/rxNtQo6iFl+lEu5hT1QLmUHOtOdTawRxgbp2S
589ZolnVrnOqY0tqXmtfPZ5R7frrdZpz1fbmcHOxMdBYaAxUy4+zrijR1Gpr
a2hr6b3b9TTn693M3YkWUCOpldT41jrmfHO/Od5aV82qdlVjWhs9Yh1T0nOw
92BNYG2gxrUWViOpldRs1s5qTLWmmsJa1j2jX3F+lb1kjjHXqNnU8kuaB0t6
EvYm3I/Wpj3b/aeGaEpyltrCHD9JSY4y9+shbNXuX3sHegDrlPRE9AbUeGo9
NZFepxpJraQG1DtTU6mt1Fzfte+zRfv79QrUYGoxc4xepJpObaeHYe9FDbRB
iUepNrLmXb/EI7IWVhOtV+JBqZXMofOV1EjmVnsiL5f0OOyV2BN6qcSDtlek
ZlQ7qin1ytQIC5TUVGoHPTe9VD1cvTg9GL0YPUG9NnsiG5Z4xPZK1Kxbtufb
+VaDqkXVqHplalC1qBpVr0vPZN0Sj+6tdr+u0a63+13PZK12/fRSrHGWK/Fc
rH2scZYp8XCsffR0XO912/1uTbh8iYa0VtTTWKXEI9Tr0BNZocRT0CvRA1m5
xHPUG7En90pJz8lenZ7QIiWeiV6RGnKhkppQbWmNuGR7Xj1/apIFSzwYtYoe
09olPSi9Jz2EhUs8Hb0Fa9Cl2vP6ZHuel2jPp+fLmn7pEk/JWl/PYdESz0Yv
wpp42RLPylp56wmT//u1+cjzNq6Np8YXe5Svl/Tk7F2q4eZsz7PxSU04d0mN
rFZUs81T4jGo5dTM85bUnGppNd9cbfxRC9rTe7ekZ2ivT007Q4kGV+saD+do
45fxTw08XYmmUxurcacq0cBqX+Oz8VKP4qauaP6JSjSstYAe0RQlmlLvSE0+
WYnGV6tbA8xU4uFYG1gj1G08tnawRh6/jcfGfzX6NCUaWu1uPDQ+29O9pI7H
8H4br42P1gSzlHiI1grWELOVeETWFvZs32vjnb1ce6xj23xn/LMn+3xJz8he
rT0SeyX2ZOx92sOwl2EPxd6lPd+3S3pY9oLtUb9R0vO0d23P+LWSnqi9ZHuo
b5X0hO2t2mN+s6RHa+/ZHvarJT1qe9v2ZOzN2EOxd2XP94WSHpm9YHtG9o7s
+djbtUaZv8STsHaxh/tOSc/Z3q49JXtL9qDshdsTfqakZ2iv2B7ccyU9Qntz
9qyfLemB2su2Z2Xvyp6VvV57TPaa7EEe1+ov9a16VP2nB7FGGw+Mt+Z8tcLJ
VbRA/zp71T3/X/3S5Cw4h87lA03mxjlz7oY2mVvnzLm7oc7ZcM+792+qcxY8
I56Vu5r8FtfUtfUMqgVOqXI2hzVZC9fQtXywyVo6Z87dkCaxxzVxbe5tsjau
qWurh9qtzcfqx/uarLVn2rNtT+74Eo/TXt3wJmvhmfRsjmhyNt2T7s27m+w9
19i1fqBOrDQmGhuH1omNK5X4z3r69rbs8ej16/nbu7LHZS9gZJ3Ybs40d9rD
sPdlz8vexsN1cpk5zFxmT8DegHrcXrA9HuuT3p3UL+pl9Yf1kvr5oTq5zxxi
LhleJ7aaM8wdw+A1Oon5xv776/TzreGs5UbVya3mVHPrg3VyjTnEXPJondxn
jjPXPVIn15mTzc0j6mgBY7qxfWCTs+GZ9mzf0yT3mkPMJYPgDzrJweZiPQK9
Aj0Cvbh+dWKNMc/Yp6ett929Ey/9yjqxTI2iVhlcRc+r/9XL9lDsJdqjtbdy
eZ3YqMZR61jzW/uf1klvrk+dWGmMNFbqieqN6rnqlfv8se15Vy/aczqpxGOw
F6XHqdepp6qXbr1p/Wi9aH3Zt07sNiYbm/XE9cb1/PXmrZmtnXt10vvR47WX
0KMT7/eyOtrMGG2svqKONjPmG/uvrRNrjenGdjW5/eOzq2h1e9QnlNTo9q6t
Gewn965SS4xsEouN4cbywU20kZpJ7aRnrHesx2tv4Lo6sdwYb6y/Hp6jkxhv
rL+6Tm4zh5nL9Hz0fuyR2Nuwx2HvRP1p7+PSOrnHnGPu0UPWS9aTtZdxVZ1c
aA4yF91Xx3tQs6hdrFnsH55VpZa5pk5uM8eaa++to23UQGohe3r29uxh+W2D
PW6/NbFnYu/75Ca1jjWNtY09d3vv9nT9tsAeqL1de4j2Rk9qUltZI1krndhk
71lzWXud1aQ2tCa0NjyzSe1mDWkt2atJLWkNaS15dpPa0ZpQPX9Gk1rLms/1
OqdJ/LamsrayZ2nv0jnYuk5P096mHo/fnvRuUltaI1ornt6k1rOGc38MqaMN
1ZRqy9MY799JTeh82kO3l24P3m9d7Hnb+7ZH7rcs9mzt3brntq0TE42Nxhh7
dUc12dueGc/OEU1isXvSvXl4k7k3Rhur/SbBbxNGd/JtiD1We632rP0Wxm8c
/NbhsU6+RfEbCL+FeKKTb4Ps2du7t/7325Njmng7xlBjqd8A+C2APXy/LfKb
Ar8tGNPJtztHNznbJ5f0V+0p21t+tJNva/wGwm8h/MbAb5lOaVL7WlObT+2p
++2GZ8xeu3Piu15ZZa5urlObqBnVjrfWqTXUDGoHPUt7l/ohepkD6mhbNbfa
+9Qmtbua1vx5T51aQM2r9r3LnN+JJlYbD66jha0RrBXsoeq36L/od+l/6cfo
p+h32cPWD9Lf0T+5o442V+Or9W+po22ssay19Fv0g/SH9FPurFMbqOnV9rfV
0f7WVNZWt9epFawJrA0G1ald1PRqe+fcuXfN7HUPrKP1rQmsDe5sopXURGoj
e/r29u2p++3QgCZaSQ2llrqjiTZSY6m19GQ8G+dVOY+eGdf2iipnSU9Ub9Sa
2m+n9Hg8++dUOa96PJ79c6uc1xvr1ALWCNYKd9epXayBrIX+D5ZfgSc=
              "]], 
             Polygon3DBox[CompressedData["
1:eJwl1nW4FGUfBuD9aAEBaRQppUvpBukSkG6QbpBukG5QWuk8xKG7u7tTpRsE
BCT97tE/nnOd575+7+w7s7Ozm7JR+8rtIoRCoVMSWaZGC4UWRgyF9sHTetMo
oVBv1ov9wuaxXOyWNGfdWD+WUv/V3CJ2gJ1lzdlNaca6sr4shT7TXDg7wi6y
1mwKW8D2RvhvL43ZDWnKurA+LLk+2txkto7tYlXYDLaUHWYXWCs2iy1jR9kl
1obNZsvZMXaZtWXT2GJ2kJ1jLdhkNp/tYSdZEzaKTWJr2U5WlU1nS9ghdp61
ZLelBevO+rNU+nVpwjqz3iyZ/ou1YWw/O8OasccykI1n01lhfYC5oWwBW8mK
s/rsK1aRVWW3vXF1WGZWnn3HbrJ6LCurwKqwW6wRK8zqsybsJavLsrBvWWV2
gzVgBVgd9j37izVkBVld1og9Z9+zQqwea8xesFosOSvEirLTrDZLwQqzYuws
q8mSsYLsG3aGVWexWRb2NdvDarA4LCvLxnazt67DLnaK/cEG6OPM/cI2sr2s
BqvGQiw5S+nfNdbOYSvYcXaFtQuuOxvGFrJVrBjrx/qy6Wwhy8v6sj5sGlvA
8rA+rDf7lc1nuVl/1o/NYGEsHxvBxrJlbCMrx35k/dlMtojlZyPZOLacbWLl
2SA2nIWx1awEa8yKsAasKXvl3IayUWwJW8dKmxvCRrLFbC0rxQazEWwRW8NK
smFsNFvK1rMybDgbw8LZBlaWjWVT2Qa2h1UP7nlWkQUPky4sKvuJ/co2sX2s
JlvCtrDL7B7rxRaxTewiu8N6sDC2kV1gt1l3tpBtYOfZLdaNLWab2SV2l/Vk
C9h6do7dZF3ZCrabXWdP2SC2iu1lN9lzNphtYkfZQ/aWjWbr2EF2l71iw9kG
dpjdZ6/ZSLaUbWVX2H3Wm61ke9gN9owNZFvYcfaYvWdj2WZ2jD1i79gYtpEd
YQ/YGzaKhbNt7Cp7wPqw5WwH+509Yv3YMrad/cYesr5sn2RnxVhpdt/9spWl
ZjlZXnaZXWRVWGPWisXUj0o+VpZVZE/NXWJVWRPWmn2sH5P8rByrxJ6Zu8Aq
s0asJYuhr7a/fewW+4sNYTslPcvLCrLfrd3O0rLcLD+7yhawqCwOS8I2szD2
EYvPPmNb2Q6WjuVhBdhvbA/LxAqwIuw628uysaKsFLvHdrEMLB8rxP5gu1lG
lp8VZtfYEZaXlWEV2J9sjXPbz26zF2yomfXsELvH/mYj2HEpyiqzmuyNtRPZ
X3rUCP99Hy/0ZzJ7qccInC1iU9gr/WMJHnGL2VT2tx5bPmJL2Es2x2usYttY
w2BG5rE1bAdrpD+X8WwuW8Yq6c/kZzaHhbOK+pPgWcQmsBmsiP5n8DxhE9lM
9o0+SV4E+xD/hsLs5VHwfWbuZzaNFdKfBs8nNonNYkWD85cJbB5bzr4LjiUT
2Xy2glXWtzrxE+wJ+8DGBb9B5I0eL7heLNzrjg/ORY8Y4d+vgtB8NoO9D+4f
icVWsJnsQ3D/BNeQrWTT2Ts9UXCt2XI2i/2jfy5x2Co2317WOfhZdoN1CZ5X
Eo3FZZ+yLebmmlvDTrNrrLOZtewAu8NesmHBeyYRWTSWgK23dh6LzGIG+2Eb
2Ss2l61m29n3wW8Lea1/ItHZ0mB/LIq5WCwx28SmsbfB8SUmW8ZmswjmorD4
bF2wZxaJRWcJ2YZgL/a8lp1h11knM2PYFLae7WbV2H7JwYqzMuyBtQdYTlaC
lWUPWVtr67HebBBLaKYNq8t6sYEsQfA7ipVjrdgPLBJrysqz1qxj8HXPmrMK
rC3rzKKwdqw+68MGs0SsO+vAxrIpLAPrxtqzMWwyS8+6snZsNJvE0rGOrBUb
zn5mX7BOrDUbwcaz1OxOMMsGsJEss97ZXBs2kk1gadhZKc1qsvqh0L8fnC7m
2rJRbCJKy85LWVabNWQR9HvBMdkgNppl1R8G58KGsnEsm97M8b5lbVgnFjn4
XLGZbBs7xOoGn182i21nh1m94PnAprMt7ACrzf6QRqwj68mSBs8Mc9PYZraf
1WLXpDHrxHqxz4PPuLkZbCs7yOqwc1KG1WIN2P/0XuZ6sqlsLsvJerDubDKb
zXKw1qwO68kGsHjsQfDesSFsLPta72muB5vC5rDs7H5wrdlgNoZ9pbcyV5v1
YD+y+Kwlq8Tas64sGrsbvO9sIBvFsuiHJQ8rzb5lT9zjHaxtyPqxoSyJmTNS
itVg9dg/5laxhCwNS88Os3AWiyVjKdgutpjFYImDZxHbzpawmOxTloztYEvZ
xywpS852squsBmvO2rE4+mWpxpqyNiyWvkLisy9ZWnbQ2uUsHvuCpWEH2EGW
i5Vk5dgjdojlZqVYefaYrWQJWGqWjh1i21galovlY1fYIhadJWRJ2Ta2jMVl
qVhqtp9tYV+yHCwPu8RWs0QsLcvAjrDN7AuWneVmF9nvrBZryTqwuPopKcGq
sTrsvbmTrDirymqzd+w1W8V2sePsh+B7R1az3ewE66ifkGKsCqvF3lp7mpVk
1Vld9oH94N5oyYaxn9iXZtqzBqwvG8ISs/XyGcvIsrAT1q5lSVh6lokdY7+x
mqwFa88+0TdJKpaN5WIXzK1jn7IMLDM7zq6w6qwZa8ti62skMUvHMrKj5jaw
pCwTy8pOso3sc5aZfcVOsQnsefB7RiKxBez/f5QrjA==
              "]]}]}, {
           EdgeForm[], 
           Directive[
            Specularity[
             GrayLevel[1], 3], 
            RGBColor[0.368417, 0.506779, 0.709798], Lighting -> {{"Ambient", 
               RGBColor[
               0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
              "Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{2, 0, 2}]}}], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1: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
NiSc86k/1iNc7+k8q2e4vtL51OHh3pP6pf8L58TqB+6bS30V7bnZdbrm2I7Z
tb/ykNrZvSzN+e2ye0qak1Wyew5aX1sru+bV3lHIrqm1p5Rl18vKkbZUdr2s
PXG/XOrP6N5l1+laC9tm9680/2tk1/uq6Wtm96m0jtrlUn9GsSK7L6HcaZvs
PpjWb1Ue9cu8RuqF82n1J2tl9+603jdU+BxI53HjwucuOosZFa6p1B/uGq7l
dDbXMVxjq5fbKVyX6lxv/3D9rDOOzuGaUOd6HcK1us4BDwjX1eoJtw/X5+oV
twjXMzp3aBmui3R2sHe4ttHZxH7h+l/nLK3CNYDOFCZkn3lpPz0Mn1TmNX5I
di9R67pduKegs5h9w/0CndG0Ddfh6p3uE+41qOfcOlxXqGfbJlxXqBbYK1xf
6eyjcbh/p7ObRuH+nc5KRoTrf/W3DwnX/OqNHxquXdUz7xKuh3V2OTzcX1B/
fli4jlIf+OBwf0F9+MPCdZT6+SPDPQj1ww8M19s6n20e7qfofKdZuM+iM6b6
4VpUPfAG4dpS5wgNw3WpzhqahHs0OntqGu5v6lxpt3AfU2dPu4d7NDoD2jNc
i+rcZ49wjaqzpIrsnpX2l0rZ/SXtR9pXlZ8XFe/C56A6Z6+T3XNTLfBfhXsK
OrfdNlzz6wy9VvgMVWfo1cNnsTp/rx0+p9T5+KYK90R0Llye3bPSnrixwj0L
nf/WDJ/L6vy9mN3L0t5XObt/qH1tu3A/QufCObs3qD00ZffEtA/+HxnA8oc=

              "]], 
             Polygon3DBox[CompressedData["
1:eJwtmnW8XNUVhd9kzss9EyAhJAQIEOJYgODuEtzdCe7uGhxKcXe3UqxClRaX
UlxKcXd3SKDf1zX/lH6/c2fyZu7de6+19oyYuPf6e/Xp6ek5l/8p/HdI09Mz
c6un5yXgkH49Pe1OT8/98CnwMnA/+F/wmfDKcIUfgU+HV4QH8foZ4f/AB8J/
g5+GD+rt6VkSvhN+CN4DXhj+B/wsfAi8NNzh/R6Fz+D1K8HrcL4DPIDzXngq
zh+Dz+J8Ffg/lfeGl4MHwetx/U7wQK5v4LuaXL8vvAT8PjwFvgLeBn4T/g6+
CN4MfhJ+Bz4ZXh1+Df4aPh/eGH4L/h6+GN4cfhv+Ab4E3gL+AP4ZvhLeFn4X
/gm+DN4K7tvJ5z+Nv3d5uBd+EP4VvBz8Otd/A1/A9ZvAb8DfwhfCm8LvwZPh
y+Gt4YbXPwz/mtevAP+xyf3Zh/PF4cL5A/CpnC8LP875W/CJnK8K/67J6/eE
F4F7uP4ez0vu1x+a3I+9OV8MbnF+L3wS50vBH3L+C3wV59vBU7gff4aPLrn+
R/iP8BEl93sA1w+Gn4X3hX/m/C/wMSV/b3/OB8HPwPvAC8NLwN/Dp8MzwrPC
r8CHwRfCl8Eb8e/fDV8EXw5vDP8Dnty3p6cPfB/XT4SHcj4b/Bp8BHwxfAW8
Cdf/E14UXgr+kfMz4d83eb734nxReBF4SfgHzs+A14QnwtNw3oYfgl/28/Sm
Pvrwfd3n81TyfD/G+ZvwCZxPgP8JPwcf2pv6uht+Bj64N9/vZL6fP8FHlfz7
P8F3wUeW3K+BXD8Efh7eH14X3hGeltf3haeFp4ef43w/eG14e7g/5wW+B34e
Pqw3z8eD8Evev97U38PwK/Ck3tRbG67wI7zfLvA78I/wpZxvCT8Fv2u/gNeA
X4W/gs+DN4Kva3K/t4Xnha9t8rxsA88Db9eknofDU8PXNPn8W8Pj4InwwfAI
eBr4eviv8HbwfPA28AHwMLgffA58I7wOPAo+C74eXgseAR8Bnw0vAU8PHwOf
By8NzwgfDZ8LLwXPAB8FnwMvCQ+xX8H94Sf4PvaCz4ZvgNfmfCR8a5P7vws8
P3xLk/rZGR4PbwnvB88CV3hv+Hh4Hnha+Ar49/Dm8BzwHvCx8Nxwf/hy+Hfw
ZvDs9gN4avjf/D17wPvAJ8Dzcj4Q3hc+EZ4Png7eCz4OHgcPgM+Fb4LXhUf7
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
xzNb0+Pp9fRk7ob0ZHozNZdZt5rxnXYyP7WkGdNn7ewYzJ7MhD9pR9OZFZuB
fdTODsNszEz0rXYyO7NSM7UX29mRmLWZsb/Rzk7N7N0M7qV2Mn2zOTPRF7rf
j1mpGe1r7WRmZrdmwB+0k7GZDbsDea77/fr8/D+TL/EMZvVqbLW2GtHsUc2n
9nu1+zyqCd9rZ0eoVtRj6DX0IO7K3AHd0a0H60lPojfR47zefX69vwPhKX1T
f9bP5/BHTTLkV9rZabS69eO//1q3vsyErur+PdaTO4mzuv3FejMDMgsyszGr
dQdzZrffuJvR07irdKel11Ezq531QGaxZlRmVXoQs1gzKrMqPZNZrpmW2ZaZ
k1mzmZHZkZ7JLNhMdlK339zV7XfHdvuF/c+dmrs1dwDuRt35uFs1k3YX5M7F
3ac7PHcxZk5XdvuJWbc7Gnd5ZtrubvRs7g7dKerl9HTuFt3p6fXcIbmrcwfh
bskdlLsoM2h3r3osd4fuuPReZlq1ZOdm1mVm0bckUzDLMEMzSzNDM8vW401V
4nH0fgvUzD5ntrN70ZrZo2ZRuywGH9PKTHI2zVXj9xcq8VuL1GgbZ5qzbaGa
2efMd/YvWDP7nbHO2rlrtMvCJXnFwjWz0Jnp7FwWPrOVmehsnL9GS6iR1Erz
1GgTNYxa5scms8cZpLb4qUmeqqZQW/wAD2+lxq31eWu0nBpHrTNDjV8eUpK3
jIf3aWXGO+tnqslXZyzZH46r0U5qMLXYfDVaQI2oVnwYXq+VHmuvnbMm/1iw
JH8dWpM/zlSyrxxdkx/MUZLfzg5vC89dkq+NqskTZi/JN+eo6c32aPPglWq0
oRpNrTa2Jt+YqySPG1OTt8xZknc+WjNr7OH28uVrtKEaUC24Wo0WViOrlVeH
b29FI6uVx3YyG+0Z9o4RNfnTmJI8ebaavHlUiV8fVtPL7en61Zlr8sKhJf56
lpo8ceaSvGxWeF14lpJ8eUwnXkUPo5cZWePvx5bkG8Nr/P/okrxgcpM87+t2
9qeP1cxOZ46z5+cm+d637ewnemry4e/b2b/0r9HOamq19Qo1WlcNrZY2k2xK
MjqzyqZm1jvz3Rf0hcfb29vZVw+oqTU1udp8mhqtbs1au4Nr8o1BJfleqcnD
JrezL5++Jg8ZXJIfdmryxFKSV05V87dY89b+ujVaTo2n1lunRpuoUdR2G9b0
bnu4Wmjqmt7hZ/KzrQc/2YomVBuqofX+m/ZGW2/A+evwNSX7l341vaa3ZJ9R
a/LKdsk+Y0jNvmH6knxzUI1WUbOYX05bk5fak+xNnzaZlc5UZ+snTWarM9PZ
+XGT2elMdDZ+1mT2OGOdtd82mdXOUGdpn5r9zo/t/D7m+yaz3hnvrP+lSd78
XTu/f5nSZD/zTTv7+e+aaAE1gFrg8yaz2pnn7PuyiRZw5jv7e2vyyint5EHT
wcvB05TklwNr9idTl+Sd7Zr87ad29mkz1uwzZij5/cQXTbSEGkGt8E0TbeBM
d7Z/3WS2q2nUNl810TZqFLVKqyb/+6Gd/aZ6cURXT6oHvYfXdOe1uzVrdlRX
f5m9PV2j3dSkalP1vnpdPa++f7bGC5ghmCU8V5MlmIGYhTxeo+3UbGo3n2mf
bT+zvw1Zs0Zbq9HV6k/VaE01o9rRe+a98zP4W6cna7SgmlRtao1Za37n/lbE
79Dv0nvurtKeM7KrN9XHa9TMdme8XsOeb+/3GTV7955576xBsz1rztqzRs3y
l6zxgnoyvdna8D9b8QR6g+drsh8zH7OfZ+B9W/FMeqcnarSrmlZta81b+9aE
Wb/3yHtlT3I3vVSNd9SD6kWtMWvNHuAu0R5gL7Dm3GVYc9aePcnd4tI1XlYP
qhe15qw9/cD4rl/RH+gX9F8+kz6b1qTZvM+sz67PrFn84jXeU0+uN7fn2fv0
b/o/e6i91Jpyt/1vrt+uFY2v1l+mxuvqsfXa9mh7tTPb375Yc9aePdzfytxd
oz3VoHqNe+D5W/Esehdr1tq1p/tbNnu6vd0adhe9RI131jPrnR+s8U56JL3S
QzWf3e9Ar7RWjbfT8+n9lqvJRsxkzGac0c5qZ/KErl+xNqwR/cyqNdmSGZFZ
kTPaWa2f089Y09a2msPfSjnTne3ONHeZagy1hj3A3y79P8MvmbFm+2oCtYEz
3l2cM9PZ6Ux197Qy//6VrWRGZkdqDrWHmsFdsDPaWe3MdBe8Yk22Y6ZjtqMm
UZuoefxtlTPaWa1mMRufUJN9mXGZdakB1YJqHLP4/2u6Eo3obuqRGq+px9Xr
3g8v34oH1gurUdQqahR3iQ/UeGM9rl53lZoszYzNrM0Z4ixxJro7UyOoFdQQ
7qbVOGodNZW73n/VeFU9tF5ajaBWUKO4a/gfPFDwbQ==
              "]], 
             Polygon3DBox[CompressedData["
1:eJwl1mWYVVUbBuCDDMMMjeQwQzN0d3e30g1KtxLSIam0pEqKASqh2AEI2Eko
XdIlIt3fva7vx/vjua93n7X3PmuvtXI/M+TpwU9EIpE9KlmomEjkWFQkciVp
JJIzSSSSLXkkkoQdYmdYPMvMUrHz7A4rzBJZSnaO3WaFWD72iA31w/P4T+xj
loKdlW/pK8jysqSxkchofcv4PraNRek7Kl/Sl4PFhT52hF1g2VlWlppdYHdZ
EZafRbPj7CrLxeJZMmOMNcZr/C/2DYvRd1q+oS8/y83SskvsPivGCrI07CK7
x4qyAiwdu8wesOKsEGvNFhpjLT/BDrMKrBCrxIaw/iw5OyVfd20iy8Vi2Rl2
kxVgeVh6doU9ZCVYYfYk+4c9YiVZkfC8nm2cMV7n+9mOMAYbz5azA2wne4KN
YkvZXrY1/L/sBbaE7WFfsQgbyRaz3ezr8H+wMexV9ifbzjK6lxtylKrASrPH
7Dl989nP7JMwLjssn3PPCSwLK88K6qvIB7N+7Ib6WT6tLyWLlkvpy6uvDO/H
erIE9kBOpWqwyiw7eyinVjVZFVaa5XNtWdaf9WLZ2D05harGKrIyLFFfOTaA
9WaZ2S05WlViZVlBlkFfXtaetWIlWTwrwrqzTqwsy8/Ks4GsDyvHCrAKbBDr
ywqxjCwf68Baszh2V45VVVkFloXdlpOryqwcy8diXRvHmrGGLDeLZplZY1aP
5WRRLCNryOqwAiwVS2AtWROWld2RY1QVVp4lshT6srHmrBHLy2JYVtaUNWDx
7L6cUlVnlVh+llJfPGvBGrM8LDnLwpqw+iwHS8oysAasdph/7KB8yjzIxjKx
wiyTvkTekbVhJVg2Vph1Yx3ZdfWT/LdrU7Bk8k31CzvLUrHkYZ6qA+wki2MZ
5ctqZ1iDWFL2KNp7Z7+xiywNi5WvqF1hHWFR7LG+q+w7dohFsyTyv+p7doQl
Z0/I19QP7BiLYUnl/9SPYc1gsSxK/kd9G75dloxF5KKeN4vnLcA7s3bsgfpT
PqwvM0sf1l21nx1nWVkGuYhrM7s2P+/E2rJiLCsryLqw9qw4i2OFWFfWgWVi
N+VkqiIrwx6qv+SjxsjCnpRvqV/ZeZaaxch31R/sH5aOpZTvq33sIMvE0sn3
1N6wfrGMLK18R/3OLrO0LIWcwb1cZ0lVeVYqrOPWpgnueUX4TbaLtdQ3nE1l
29gXYVw2iM1m37MP2UFWirVkM9jz4X2yYqwpm8IGh/tlRVkT9iIbGOYUS89K
sl6sZVi/WDpWgvVkLcJ8ZGlZcfYsax6elRVhjdlkNii8J5aTVWfDWbfwjllx
1oxNZUPCO2E5WDU2jHUN84elYcXYM6xpmGcsNSvKerBmYS6z7Kwqe551Dt8B
K8lasOnsOdaQtWG92Er2KmvOerORbDN7jzVjvdgItom9y5qynmw428jWh7nM
Hss51NOsavg2WBJ9uVhrViN8QzH/P4zkZK1Y9fCtsUdydvUUq8Yas3b6+rDV
7PUw51kJ1pxNY0NZI9aW9War2GusPmvFnmXL2VLWgLVmPdkKtizMZZbAqrDn
WBe2m+ViNdgI1p3tYblZTTaS9WAnWE3WjS1lL7KTrBbrzpaxKew0a8L6s7Vs
LjvOarCubAmbzI6x6qwLW8wmsaOsGuvMFrGJ7BRrzPqxN9jssKaxa3I6VYcV
Z2dYU30D2JtsHtvB/pXTqtqsKPubNdLXl61hc9g37KqcRtVixdhZ1kzfQPYW
m8/OseZsEHubLWCXWHv2AvuArWCHWGXWgS1g49lhVoV1ZK+wcWw7OylHVGmW
ENZY1kXfOPYJW8O2sRPyY+tGKZadNWHP6hvGN7B17AiryjqxhWwCO89asMHs
HfZK2BdYBzaKfciWs4vsKTaUrWeLwr7AOrLRbAtbyS6wlmwIW8cWhrWddWJj
2EdsFavMyrK6bCwbyaqwcqweG8deYFVZeVafjWej2JPWv1nsXXaO7QnrJJvN
3gvrMdsbzhFsPtsU1lS2n6VnL7P1YX9ku1kqNo29GfZH9itLzaazt8Leyn5h
adgM9nbYq9lvLBtbzD5i/7Ej4WzBFrDN7Ao7wOLYIraFXWNHWVo2k73DTrPf
WTr2ElvHzrA/WGY2j21kl9hfLCObw95nF9i+sG+xuWxD2L/Zn2Gf8f4Gslns
O/ZB2KPYAPYy+5ZtDmcG1odNZ9+wDeFswbqziexz9ia7wXqwSewL9hbLZ9xV
bCt7wM6FvUxff/YS28U2hf2S9WUz2A72Pkvp2slsdTg3sO/ZbX392Ey2k21k
KfRNYqvC3s++C2cBfYPZHPYD28Ji9U1kK8PZhH0b9m59Q9hc9iP7iCXqW822
sYfsPMvLVrKv2X12ltVybV3Wms1mM1hNVoe1YrPYdLaV7Zb/9Q3mZqlZPdZQ
X3s+n81idVkD1o7NYy+zOqw+a8vmspdYbVaPtWFz2ExWjVVgDdgENpq1YMPY
FLaVfc6qs4qsIZvIxrAarBJrxCaxsawSK8PqsDFsBHuKjWDT2Hb2JXuaTWEL
2e/sJ9aKTWWL2B/sZ5bg/S1ln7Ab7DjLzpaxT9lNdoLFsyXsY3adHWN52Ar2
FbvHzrBc7HX2BbvDTrH8bA3bzh6xCywHe5V9xm6xkyw3W86+ZHfZaXbVPXdm
Y9nHbDXLqe819jm7zf5m1/R1ZePZp+wN9h/rxiawz9haVpEVZpXZUDYg3DNL
xjKxRqwu+x/PNwbP
              "]]}]}, {}, {}, {}, {}, {}}, {{
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwt0UkuBEAUgOHSrbU2tTZERCSIAyAOgDgAHQegY22KjR3iADgBiQMgDoA4
AOIA5nmeZ74Wi5evVvXnVdVnBtMDOSGEMZMTMVyIhZDiCuu5wWbusJ2H7OYj
+5ibF8IwKzjBRs6wlfPs5BJ7uMZ+bnGUe5ziHff173nAh2yHjzziE4/5zBO+
8JSvPOMbz/nOC37wkp+84hev+c0b/vA2Ev4WntW/dZzkLke4yQxXmeYiOzjH
Fk6zgeMs4xAj7OW9d+nK7sM2brOJ66zjMktZq59kDUtYzWJWsYiVLGQ5C5hi
gknms5hxFlI6JOjqEGcuY4wyysj///4Coco85g==
            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0TkoB3AYBuDf330fsxSzFLMUsxRWKaxyjZJilmKWYpYi980shSS5QpKQ
3Pf1yPD19C7fW9+XW99c1RQJIbSZregQIsJXXAiZTI0PIZfZLGQ+S1nMSpaz
jjVsZSO72ME+9nCIAxzjCFe5yE2u84SHvON4TAj3nOADJ/nIKT5xms+c4Qtn
+co5vnGe71zgx18PP7nELy7zmyv84SpDVAhX+m/lfR5zjRt/+7jCYY6yn4Ps
Zi/b2ckGtrCatSxjBYtYwjwWMIs5TGYGb9w7nddM4yVTecEUnjOZZ0ziKRN5
zAQeMZ4HjOMeY7nLGO4wmtuMivz/9xcKgUg1
            "]]}, {
           GrayLevel[0.2], 
           
           Line3DBox[{1444, 753, 1443, 2448, 1683, 1445, 2449, 1684, 1446, 
            2450, 1685, 1447, 2451, 1686, 1448, 2452, 1687, 1449, 2453, 1688, 
            1450, 2454, 1689, 1451, 2455, 1690, 1452, 2456, 1691, 1453, 2457, 
            1692, 1454, 2458, 1693, 1455, 2459, 1694, 1456, 2460, 1695, 1457, 
            2461, 1696, 1458}], 
           
           Line3DBox[{1460, 2133, 2343, 1459, 769, 1461, 2462, 1697, 1462, 
            2463, 1698, 1463, 2464, 1699, 1464, 2465, 1700, 1465, 2466, 1701, 
            1466, 2467, 1702, 1467, 2468, 1703, 1468, 2469, 1704, 1469, 2470, 
            1705, 1470, 2471, 1706, 1471, 2472, 1707, 1472, 2473, 1708, 1473, 
            2474, 1709, 1474}], 
           
           Line3DBox[{1476, 2134, 2344, 1475, 2135, 2345, 1477, 785, 1478, 
            2475, 1710, 1479, 2476, 1711, 1480, 2477, 1712, 1481, 2478, 1713, 
            1482, 2479, 1714, 1483, 2480, 1715, 1484, 2481, 1716, 1485, 2482, 
            1717, 1486, 2483, 1718, 1487, 2484, 1719, 1488, 2485, 1720, 1489, 
            2486, 1721, 1490}], 
           
           Line3DBox[{1492, 2136, 2346, 1491, 2137, 2347, 1493, 2138, 2348, 
            1494, 801, 1495, 2487, 1722, 1496, 2488, 1723, 1497, 2489, 1724, 
            1498, 2490, 1725, 1499, 2491, 1726, 1500, 2492, 1727, 1501, 2493, 
            1728, 1502, 2494, 1729, 1503, 2495, 1730, 1504, 2496, 1731, 1505, 
            2497, 1732, 1506}], 
           
           Line3DBox[{1508, 2139, 2349, 1507, 2140, 2350, 1509, 2141, 2351, 
            1510, 2142, 2352, 1511, 817, 1512, 2498, 1733, 1513, 2499, 1734, 
            1514, 2500, 1735, 1515, 2501, 1736, 1516, 2502, 1737, 1517, 2503, 
            1738, 1518, 2504, 1739, 1519, 2505, 1740, 1520, 2506, 1741, 1521, 
            2507, 1742, 1522}], 
           
           Line3DBox[{1524, 2143, 2353, 1523, 2144, 2354, 1525, 2145, 2355, 
            1526, 2146, 2356, 1527, 2147, 2357, 1528, 833, 1529, 2508, 1743, 
            1530, 2509, 1744, 1531, 2510, 1745, 1532, 2511, 1746, 1533, 2512, 
            1747, 1534, 2513, 1748, 1535, 2514, 1749, 1536, 2515, 1750, 1537, 
            2516, 1751, 1538}], 
           
           Line3DBox[{1540, 2148, 2358, 1539, 2149, 2359, 1541, 2150, 2360, 
            1542, 2151, 2361, 1543, 2152, 2362, 1544, 2153, 2363, 1545, 849, 
            1546, 2517, 1752, 1547, 2518, 1753, 1548, 2519, 1754, 1549, 2520, 
            1755, 1550, 2521, 1756, 1551, 2522, 1757, 1552, 2523, 1758, 1553, 
            2524, 1759, 1554}], 
           
           Line3DBox[{1556, 2154, 2364, 1555, 2155, 2365, 1557, 2156, 2366, 
            1558, 2157, 2367, 1559, 2158, 2368, 1560, 2159, 2369, 1561, 2160, 
            2370, 1562, 865, 1563, 2525, 1760, 1564, 2526, 1761, 1565, 2527, 
            1762, 1566, 2528, 1763, 1567, 2529, 1764, 1568, 2530, 1765, 1569, 
            2531, 1766, 1570}], 
           
           Line3DBox[{1572, 2161, 2371, 1571, 2162, 2372, 1573, 2163, 2373, 
            1574, 2164, 2374, 1575, 2165, 2375, 1576, 2166, 2376, 1577, 2167, 
            2377, 1578, 2168, 2378, 1579, 881, 1580, 2532, 1767, 1581, 2533, 
            1768, 1582, 2534, 1769, 1583, 2535, 1770, 1584, 2536, 1771, 1585, 
            2537, 1772, 1586}], 
           
           Line3DBox[{1588, 2169, 2379, 1587, 2170, 2380, 1589, 2171, 2381, 
            1590, 2172, 2382, 1591, 2173, 2383, 1592, 2174, 2384, 1593, 2175, 
            2385, 1594, 2176, 2386, 1595, 2177, 2387, 1596, 897, 1597, 2538, 
            1773, 1598, 2539, 1774, 1599, 2540, 1775, 1600, 2541, 1776, 1601, 
            2542, 1777, 1602}], 
           
           Line3DBox[{1604, 2178, 2388, 1603, 2179, 2389, 1605, 2180, 2390, 
            1606, 2181, 2391, 1607, 2182, 2392, 1608, 2183, 2393, 1609, 2184, 
            2394, 1610, 2185, 2395, 1611, 2186, 2396, 1612, 2187, 2397, 1613, 
            913, 1614, 2543, 1778, 1615, 2544, 1779, 1616, 2545, 1780, 1617, 
            2546, 1781, 1618}], 
           
           Line3DBox[{1620, 2188, 2398, 1619, 2189, 2399, 1621, 2190, 2400, 
            1622, 2191, 2401, 1623, 2192, 2402, 1624, 2193, 2403, 1625, 2194, 
            2404, 1626, 2195, 2405, 1627, 2196, 2406, 1628, 2197, 2407, 1629, 
            2198, 2408, 1630, 929, 1631, 2547, 1782, 1632, 2548, 1783, 1633, 
            2549, 1784, 1634}], 
           
           Line3DBox[{1636, 2199, 2409, 1635, 2200, 2410, 1637, 2201, 2411, 
            1638, 2202, 2412, 1639, 2203, 2413, 1640, 2204, 2414, 1641, 2205, 
            2415, 1642, 2206, 2416, 1643, 2207, 2417, 1644, 2208, 2418, 1645, 
            2209, 2419, 1646, 2210, 2420, 1647, 945, 1648, 2550, 1785, 1649, 
            2551, 1786, 1650}], 
           
           Line3DBox[{1652, 2211, 2421, 1651, 2212, 2422, 1653, 2213, 2423, 
            1654, 2214, 2424, 1655, 2215, 2425, 1656, 2216, 2426, 1657, 2217, 
            2427, 1658, 2218, 2428, 1659, 2219, 2429, 1660, 2220, 2430, 1661, 
            2221, 2431, 1662, 2222, 2432, 1663, 2223, 2433, 1664, 961, 1665, 
            2552, 1787, 1666}], 
           
           Line3DBox[{1668, 2224, 2434, 1667, 2225, 2435, 1669, 2226, 2436, 
            1670, 2227, 2437, 1671, 2228, 2438, 1672, 2229, 2439, 1673, 2230, 
            2440, 1674, 2231, 2441, 1675, 2232, 2442, 1676, 2233, 2443, 1677, 
            2234, 2444, 1678, 2235, 2445, 1679, 2236, 2446, 1680, 2237, 2447, 
            1681, 977, 1682}], 
           
           Line3DBox[{1789, 1218, 1788, 2658, 2028, 1790, 2659, 2029, 1791, 
            2660, 2030, 1792, 2661, 2031, 1793, 2662, 2032, 1794, 2663, 2033, 
            1795, 2664, 2034, 1796, 2665, 2035, 1797, 2666, 2036, 1798, 2667, 
            2037, 1799, 2668, 2038, 1800, 2669, 2039, 1801, 2670, 2040, 1802, 
            2671, 2041, 1803}], 
           
           Line3DBox[{1805, 2238, 2553, 1804, 1234, 1806, 2672, 2042, 1807, 
            2673, 2043, 1808, 2674, 2044, 1809, 2675, 2045, 1810, 2676, 2046, 
            1811, 2677, 2047, 1812, 2678, 2048, 1813, 2679, 2049, 1814, 2680, 
            2050, 1815, 2681, 2051, 1816, 2682, 2052, 1817, 2683, 2053, 1818, 
            2684, 2054, 1819}], 
           
           Line3DBox[{1821, 2239, 2554, 1820, 2240, 2555, 1822, 1250, 1823, 
            2685, 2055, 1824, 2686, 2056, 1825, 2687, 2057, 1826, 2688, 2058, 
            1827, 2689, 2059, 1828, 2690, 2060, 1829, 2691, 2061, 1830, 2692, 
            2062, 1831, 2693, 2063, 1832, 2694, 2064, 1833, 2695, 2065, 1834, 
            2696, 2066, 1835}], 
           
           Line3DBox[{1837, 2241, 2556, 1836, 2242, 2557, 1838, 2243, 2558, 
            1839, 1266, 1840, 2697, 2067, 1841, 2698, 2068, 1842, 2699, 2069, 
            1843, 2700, 2070, 1844, 2701, 2071, 1845, 2702, 2072, 1846, 2703, 
            2073, 1847, 2704, 2074, 1848, 2705, 2075, 1849, 2706, 2076, 1850, 
            2707, 2077, 1851}], 
           
           Line3DBox[{1853, 2244, 2559, 1852, 2245, 2560, 1854, 2246, 2561, 
            1855, 2247, 2562, 1856, 1282, 1857, 2708, 2078, 1858, 2709, 2079, 
            1859, 2710, 2080, 1860, 2711, 2081, 1861, 2712, 2082, 1862, 2713, 
            2083, 1863, 2714, 2084, 1864, 2715, 2085, 1865, 2716, 2086, 1866, 
            2717, 2087, 1867}], 
           
           Line3DBox[{1869, 2248, 2563, 1868, 2249, 2564, 1870, 2250, 2565, 
            1871, 2251, 2566, 1872, 2252, 2567, 1873, 1298, 1874, 2718, 2088, 
            1875, 2719, 2089, 1876, 2720, 2090, 1877, 2721, 2091, 1878, 2722, 
            2092, 1879, 2723, 2093, 1880, 2724, 2094, 1881, 2725, 2095, 1882, 
            2726, 2096, 1883}], 
           
           Line3DBox[{1885, 2253, 2568, 1884, 2254, 2569, 1886, 2255, 2570, 
            1887, 2256, 2571, 1888, 2257, 2572, 1889, 2258, 2573, 1890, 1314, 
            1891, 2727, 2097, 1892, 2728, 2098, 1893, 2729, 2099, 1894, 2730, 
            2100, 1895, 2731, 2101, 1896, 2732, 2102, 1897, 2733, 2103, 1898, 
            2734, 2104, 1899}], 
           
           Line3DBox[{1901, 2259, 2574, 1900, 2260, 2575, 1902, 2261, 2576, 
            1903, 2262, 2577, 1904, 2263, 2578, 1905, 2264, 2579, 1906, 2265, 
            2580, 1907, 1330, 1908, 2735, 2105, 1909, 2736, 2106, 1910, 2737, 
            2107, 1911, 2738, 2108, 1912, 2739, 2109, 1913, 2740, 2110, 1914, 
            2741, 2111, 1915}], 
           
           Line3DBox[{1917, 2266, 2581, 1916, 2267, 2582, 1918, 2268, 2583, 
            1919, 2269, 2584, 1920, 2270, 2585, 1921, 2271, 2586, 1922, 2272, 
            2587, 1923, 2273, 2588, 1924, 1346, 1925, 2742, 2112, 1926, 2743, 
            2113, 1927, 2744, 2114, 1928, 2745, 2115, 1929, 2746, 2116, 1930, 
            2747, 2117, 1931}], 
           
           Line3DBox[{1933, 2274, 2589, 1932, 2275, 2590, 1934, 2276, 2591, 
            1935, 2277, 2592, 1936, 2278, 2593, 1937, 2279, 2594, 1938, 2280, 
            2595, 1939, 2281, 2596, 1940, 2282, 2597, 1941, 1362, 1942, 2748, 
            2118, 1943, 2749, 2119, 1944, 2750, 2120, 1945, 2751, 2121, 1946, 
            2752, 2122, 1947}], 
           
           Line3DBox[{1949, 2283, 2598, 1948, 2284, 2599, 1950, 2285, 2600, 
            1951, 2286, 2601, 1952, 2287, 2602, 1953, 2288, 2603, 1954, 2289, 
            2604, 1955, 2290, 2605, 1956, 2291, 2606, 1957, 2292, 2607, 1958, 
            1378, 1959, 2753, 2123, 1960, 2754, 2124, 1961, 2755, 2125, 1962, 
            2756, 2126, 1963}], 
           
           Line3DBox[{1965, 2293, 2608, 1964, 2294, 2609, 1966, 2295, 2610, 
            1967, 2296, 2611, 1968, 2297, 2612, 1969, 2298, 2613, 1970, 2299, 
            2614, 1971, 2300, 2615, 1972, 2301, 2616, 1973, 2302, 2617, 1974, 
            2303, 2618, 1975, 1394, 1976, 2757, 2127, 1977, 2758, 2128, 1978, 
            2759, 2129, 1979}], 
           
           Line3DBox[{1981, 2304, 2619, 1980, 2305, 2620, 1982, 2306, 2621, 
            1983, 2307, 2622, 1984, 2308, 2623, 1985, 2309, 2624, 1986, 2310, 
            2625, 1987, 2311, 2626, 1988, 2312, 2627, 1989, 2313, 2628, 1990, 
            2314, 2629, 1991, 2315, 2630, 1992, 1410, 1993, 2760, 2130, 1994, 
            2761, 2131, 1995}], 
           
           Line3DBox[{1997, 2316, 2631, 1996, 2317, 2632, 1998, 2318, 2633, 
            1999, 2319, 2634, 2000, 2320, 2635, 2001, 2321, 2636, 2002, 2322, 
            2637, 2003, 2323, 2638, 2004, 2324, 2639, 2005, 2325, 2640, 2006, 
            2326, 2641, 2007, 2327, 2642, 2008, 2328, 2643, 2009, 1426, 2010, 
            2762, 2132, 2011}], 
           
           Line3DBox[{2013, 2329, 2644, 2012, 2330, 2645, 2014, 2331, 2646, 
            2015, 2332, 2647, 2016, 2333, 2648, 2017, 2334, 2649, 2018, 2335, 
            2650, 2019, 2336, 2651, 2020, 2337, 2652, 2021, 2338, 2653, 2022, 
            2339, 2654, 2023, 2340, 2655, 2024, 2341, 2656, 2025, 2342, 2657, 
            2026, 1442, 2027}]}, {
           GrayLevel[0.2], 
           
           Line3DBox[{513, 753, 514, 2343, 768, 543, 2344, 783, 558, 2346, 
            798, 573, 2349, 813, 588, 2353, 828, 603, 2358, 843, 618, 2364, 
            858, 633, 2371, 873, 648, 2379, 888, 663, 2388, 903, 678, 2398, 
            918, 693, 2409, 933, 708, 2421, 948, 723, 2434, 963, 738}], 
           
           Line3DBox[{515, 754, 2448, 516, 769, 544, 2345, 784, 559, 2347, 
            799, 574, 2350, 814, 589, 2354, 829, 604, 2359, 844, 619, 2365, 
            859, 634, 2372, 874, 649, 2380, 889, 664, 2389, 904, 679, 2399, 
            919, 694, 2410, 934, 709, 2422, 949, 724, 2435, 964, 739}], 
           
           Line3DBox[{517, 755, 2449, 518, 770, 2462, 545, 785, 560, 2348, 
            800, 575, 2351, 815, 590, 2355, 830, 605, 2360, 845, 620, 2366, 
            860, 635, 2373, 875, 650, 2381, 890, 665, 2390, 905, 680, 2400, 
            920, 695, 2411, 935, 710, 2423, 950, 725, 2436, 965, 740}], 
           
           Line3DBox[{519, 756, 2450, 520, 771, 2463, 546, 786, 2475, 561, 
            801, 576, 2352, 816, 591, 2356, 831, 606, 2361, 846, 621, 2367, 
            861, 636, 2374, 876, 651, 2382, 891, 666, 2391, 906, 681, 2401, 
            921, 696, 2412, 936, 711, 2424, 951, 726, 2437, 966, 741}], 
           
           Line3DBox[{521, 757, 2451, 522, 772, 2464, 547, 787, 2476, 562, 
            802, 2487, 577, 817, 592, 2357, 832, 607, 2362, 847, 622, 2368, 
            862, 637, 2375, 877, 652, 2383, 892, 667, 2392, 907, 682, 2402, 
            922, 697, 2413, 937, 712, 2425, 952, 727, 2438, 967, 742}], 
           
           Line3DBox[{523, 758, 2452, 524, 773, 2465, 548, 788, 2477, 563, 
            803, 2488, 578, 818, 2498, 593, 833, 608, 2363, 848, 623, 2369, 
            863, 638, 2376, 878, 653, 2384, 893, 668, 2393, 908, 683, 2403, 
            923, 698, 2414, 938, 713, 2426, 953, 728, 2439, 968, 743}], 
           
           Line3DBox[{525, 759, 2453, 526, 774, 2466, 549, 789, 2478, 564, 
            804, 2489, 579, 819, 2499, 594, 834, 2508, 609, 849, 624, 2370, 
            864, 639, 2377, 879, 654, 2385, 894, 669, 2394, 909, 684, 2404, 
            924, 699, 2415, 939, 714, 2427, 954, 729, 2440, 969, 744}], 
           
           Line3DBox[{527, 760, 2454, 528, 775, 2467, 550, 790, 2479, 565, 
            805, 2490, 580, 820, 2500, 595, 835, 2509, 610, 850, 2517, 625, 
            865, 640, 2378, 880, 655, 2386, 895, 670, 2395, 910, 685, 2405, 
            925, 700, 2416, 940, 715, 2428, 955, 730, 2441, 970, 745}], 
           
           Line3DBox[{529, 761, 2455, 530, 776, 2468, 551, 791, 2480, 566, 
            806, 2491, 581, 821, 2501, 596, 836, 2510, 611, 851, 2518, 626, 
            866, 2525, 641, 881, 656, 2387, 896, 671, 2396, 911, 686, 2406, 
            926, 701, 2417, 941, 716, 2429, 956, 731, 2442, 971, 746}], 
           
           Line3DBox[{531, 762, 2456, 532, 777, 2469, 552, 792, 2481, 567, 
            807, 2492, 582, 822, 2502, 597, 837, 2511, 612, 852, 2519, 627, 
            867, 2526, 642, 882, 2532, 657, 897, 672, 2397, 912, 687, 2407, 
            927, 702, 2418, 942, 717, 2430, 957, 732, 2443, 972, 747}], 
           
           Line3DBox[{533, 763, 2457, 534, 778, 2470, 553, 793, 2482, 568, 
            808, 2493, 583, 823, 2503, 598, 838, 2512, 613, 853, 2520, 628, 
            868, 2527, 643, 883, 2533, 658, 898, 2538, 673, 913, 688, 2408, 
            928, 703, 2419, 943, 718, 2431, 958, 733, 2444, 973, 748}], 
           
           Line3DBox[{535, 764, 2458, 536, 779, 2471, 554, 794, 2483, 569, 
            809, 2494, 584, 824, 2504, 599, 839, 2513, 614, 854, 2521, 629, 
            869, 2528, 644, 884, 2534, 659, 899, 2539, 674, 914, 2543, 689, 
            929, 704, 2420, 944, 719, 2432, 959, 734, 2445, 974, 749}], 
           
           Line3DBox[{537, 765, 2459, 538, 780, 2472, 555, 795, 2484, 570, 
            810, 2495, 585, 825, 2505, 600, 840, 2514, 615, 855, 2522, 630, 
            870, 2529, 645, 885, 2535, 660, 900, 2540, 675, 915, 2544, 690, 
            930, 2547, 705, 945, 720, 2433, 960, 735, 2446, 975, 750}], 
           
           Line3DBox[{539, 766, 2460, 540, 781, 2473, 556, 796, 2485, 571, 
            811, 2496, 586, 826, 2506, 601, 841, 2515, 616, 856, 2523, 631, 
            871, 2530, 646, 886, 2536, 661, 901, 2541, 676, 916, 2545, 691, 
            931, 2548, 706, 946, 2550, 721, 961, 736, 2447, 976, 751}], 
           
           Line3DBox[{541, 767, 2461, 542, 782, 2474, 557, 797, 2486, 572, 
            812, 2497, 587, 827, 2507, 602, 842, 2516, 617, 857, 2524, 632, 
            872, 2531, 647, 887, 2537, 662, 902, 2542, 677, 917, 2546, 692, 
            932, 2549, 707, 947, 2551, 722, 962, 2552, 737, 977, 752}], 
           
           Line3DBox[{978, 1218, 979, 2553, 1233, 1008, 2554, 1248, 1023, 
            2556, 1263, 1038, 2559, 1278, 1053, 2563, 1293, 1068, 2568, 1308, 
            1083, 2574, 1323, 1098, 2581, 1338, 1113, 2589, 1353, 1128, 2598, 
            1368, 1143, 2608, 1383, 1158, 2619, 1398, 1173, 2631, 1413, 1188, 
            2644, 1428, 1203}], 
           
           Line3DBox[{980, 1219, 2658, 981, 1234, 1009, 2555, 1249, 1024, 
            2557, 1264, 1039, 2560, 1279, 1054, 2564, 1294, 1069, 2569, 1309, 
            1084, 2575, 1324, 1099, 2582, 1339, 1114, 2590, 1354, 1129, 2599, 
            1369, 1144, 2609, 1384, 1159, 2620, 1399, 1174, 2632, 1414, 1189, 
            2645, 1429, 1204}], 
           
           Line3DBox[{982, 1220, 2659, 983, 1235, 2672, 1010, 1250, 1025, 
            2558, 1265, 1040, 2561, 1280, 1055, 2565, 1295, 1070, 2570, 1310, 
            1085, 2576, 1325, 1100, 2583, 1340, 1115, 2591, 1355, 1130, 2600, 
            1370, 1145, 2610, 1385, 1160, 2621, 1400, 1175, 2633, 1415, 1190, 
            2646, 1430, 1205}], 
           
           Line3DBox[{984, 1221, 2660, 985, 1236, 2673, 1011, 1251, 2685, 
            1026, 1266, 1041, 2562, 1281, 1056, 2566, 1296, 1071, 2571, 1311, 
            1086, 2577, 1326, 1101, 2584, 1341, 1116, 2592, 1356, 1131, 2601, 
            1371, 1146, 2611, 1386, 1161, 2622, 1401, 1176, 2634, 1416, 1191, 
            2647, 1431, 1206}], 
           
           Line3DBox[{986, 1222, 2661, 987, 1237, 2674, 1012, 1252, 2686, 
            1027, 1267, 2697, 1042, 1282, 1057, 2567, 1297, 1072, 2572, 1312, 
            1087, 2578, 1327, 1102, 2585, 1342, 1117, 2593, 1357, 1132, 2602, 
            1372, 1147, 2612, 1387, 1162, 2623, 1402, 1177, 2635, 1417, 1192, 
            2648, 1432, 1207}], 
           
           Line3DBox[{988, 1223, 2662, 989, 1238, 2675, 1013, 1253, 2687, 
            1028, 1268, 2698, 1043, 1283, 2708, 1058, 1298, 1073, 2573, 1313, 
            1088, 2579, 1328, 1103, 2586, 1343, 1118, 2594, 1358, 1133, 2603, 
            1373, 1148, 2613, 1388, 1163, 2624, 1403, 1178, 2636, 1418, 1193, 
            2649, 1433, 1208}], 
           
           Line3DBox[{990, 1224, 2663, 991, 1239, 2676, 1014, 1254, 2688, 
            1029, 1269, 2699, 1044, 1284, 2709, 1059, 1299, 2718, 1074, 1314, 
            1089, 2580, 1329, 1104, 2587, 1344, 1119, 2595, 1359, 1134, 2604, 
            1374, 1149, 2614, 1389, 1164, 2625, 1404, 1179, 2637, 1419, 1194, 
            2650, 1434, 1209}], 
           
           Line3DBox[{992, 1225, 2664, 993, 1240, 2677, 1015, 1255, 2689, 
            1030, 1270, 2700, 1045, 1285, 2710, 1060, 1300, 2719, 1075, 1315, 
            2727, 1090, 1330, 1105, 2588, 1345, 1120, 2596, 1360, 1135, 2605, 
            1375, 1150, 2615, 1390, 1165, 2626, 1405, 1180, 2638, 1420, 1195, 
            2651, 1435, 1210}], 
           
           Line3DBox[{994, 1226, 2665, 995, 1241, 2678, 1016, 1256, 2690, 
            1031, 1271, 2701, 1046, 1286, 2711, 1061, 1301, 2720, 1076, 1316, 
            2728, 1091, 1331, 2735, 1106, 1346, 1121, 2597, 1361, 1136, 2606, 
            1376, 1151, 2616, 1391, 1166, 2627, 1406, 1181, 2639, 1421, 1196, 
            2652, 1436, 1211}], 
           
           Line3DBox[{996, 1227, 2666, 997, 1242, 2679, 1017, 1257, 2691, 
            1032, 1272, 2702, 1047, 1287, 2712, 1062, 1302, 2721, 1077, 1317, 
            2729, 1092, 1332, 2736, 1107, 1347, 2742, 1122, 1362, 1137, 2607, 
            1377, 1152, 2617, 1392, 1167, 2628, 1407, 1182, 2640, 1422, 1197, 
            2653, 1437, 1212}], 
           
           Line3DBox[{998, 1228, 2667, 999, 1243, 2680, 1018, 1258, 2692, 
            1033, 1273, 2703, 1048, 1288, 2713, 1063, 1303, 2722, 1078, 1318, 
            2730, 1093, 1333, 2737, 1108, 1348, 2743, 1123, 1363, 2748, 1138, 
            1378, 1153, 2618, 1393, 1168, 2629, 1408, 1183, 2641, 1423, 1198, 
            2654, 1438, 1213}], 
           
           Line3DBox[{1000, 1229, 2668, 1001, 1244, 2681, 1019, 1259, 2693, 
            1034, 1274, 2704, 1049, 1289, 2714, 1064, 1304, 2723, 1079, 1319, 
            2731, 1094, 1334, 2738, 1109, 1349, 2744, 1124, 1364, 2749, 1139, 
            1379, 2753, 1154, 1394, 1169, 2630, 1409, 1184, 2642, 1424, 1199, 
            2655, 1439, 1214}], 
           
           Line3DBox[{1002, 1230, 2669, 1003, 1245, 2682, 1020, 1260, 2694, 
            1035, 1275, 2705, 1050, 1290, 2715, 1065, 1305, 2724, 1080, 1320, 
            2732, 1095, 1335, 2739, 1110, 1350, 2745, 1125, 1365, 2750, 1140, 
            1380, 2754, 1155, 1395, 2757, 1170, 1410, 1185, 2643, 1425, 1200, 
            2656, 1440, 1215}], 
           
           Line3DBox[{1004, 1231, 2670, 1005, 1246, 2683, 1021, 1261, 2695, 
            1036, 1276, 2706, 1051, 1291, 2716, 1066, 1306, 2725, 1081, 1321, 
            2733, 1096, 1336, 2740, 1111, 1351, 2746, 1126, 1366, 2751, 1141, 
            1381, 2755, 1156, 1396, 2758, 1171, 1411, 2760, 1186, 1426, 1201, 
            2657, 1441, 1216}], 
           
           Line3DBox[{1006, 1232, 2671, 1007, 1247, 2684, 1022, 1262, 2696, 
            1037, 1277, 2707, 1052, 1292, 2717, 1067, 1307, 2726, 1082, 1322, 
            2734, 1097, 1337, 2741, 1112, 1352, 2747, 1127, 1367, 2752, 1142, 
            1382, 2756, 1157, 1397, 2759, 1172, 1412, 2761, 1187, 1427, 2762, 
            1202, 1442, 1217}]}, {}, {}, {}, {}, {}}}, 
        VertexNormals -> CompressedData["
1:eJzt1rsNg1AQBMATztwFdRBcD5RgCVJKoBPLnbwcyW24DjsgJYGAj2eT1U4F
Wz+GtqsiYrpH3H79bsb++fqUmDPv5JxzzjnnnHPOOeecc8756T0555xzzjnn
nHPOOeecc345L5xzzjnnnHPOOeecc84555xzzjnnnHPOOeec882enHPOOeec
c84555xzzjnnnHPOOeecc84555zzzV4455xzzjnnnHPOOeecc84555xzzhc8
Oeecc84555xzzjnnnHPOOeecc84XvHDOOeec80v40X4m55xzzjlf50f7mZxz
zjnnnHPOOeec/7Mn55xzzjnnnHPOOed8f/8ChJvI1A==
         "]], {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRange -> {Full, Full, All}, 
       DisplayFunction -> Identity, Axes -> True, 
       AxesLabel -> {None, None, None}, BoxRatios -> {1, 1, 0.4}, 
       DisplayFunction :> Identity, FaceGridsStyle -> Automatic, 
       Method -> {"DefaultBoundaryStyle" -> Directive[
           GrayLevel[0.3]], 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "RotationControl" -> "Globe"}, 
       PlotRange -> {{1., 16.}, {1., 16.}, {0., 16.}}, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"6", "11"}, "SwatchLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30100577`", ",", "0.22414668499999998`", ",", 
                    "0.090484535`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19699838300000003`", ",", "0.252204821`", ",", 
                    "0.33320940200000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               Graphics3DBox[
                SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                  DirectedInfinity[1]}, 
                PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
                0]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{3.8522927234152775`*^9, 3.8522929757776804`*^9},
 CellLabel->
  "Out[319]=",ExpressionUUID->"80b92b5f-a505-4921-b408-28cd72b7becb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     Graphics3DBox[{
       GraphicsComplex3DBox[CompressedData["
1:eJyN3V12XMeRLWCabt9m+0eGTNmGZJoqltAkRMEQZtA1hjsCrLtWP/cUaigY
Sj3fUWAIrR/LkvXXD8gdq88XiCXp5azcCiayouJERu7cmfXq//3X//3Pp0+e
PPn/v37y5JdP8t9//8fjzyeHx/FnA3424O8N+PmAvxjw3YDvB/xiwF8P+OWA
vx3wqwG/HvCbAZ/8nbbPZ7T1v/bvDfbng/2LwX432O8H+wvwPF8P9peD/dvB
/mqwvx7sbwb7Ka71t3Y+zwb8Pdr6X/wFeJ67Ad8P/VwM+GvwPC8H/C1t/S9+
DZ7nzYBP+SP+N64nf58Nz/do63/7fwGu/+1/P/R/AW782/8leJ5vaet/+78G
1//2P+Vp84fxL66/7dfn+YC/GPDdgO+Hv3sx4K8H/HLA34LneTXg1wN+M+DT
fBj/m6efHR63PxvsJ3+fD88Xg/1usN8P47kAN/61vxzs34Lrf8dzPdjfDPZT
3WE+MP7N02cDPsW1/tbO527A98M4Lwb8Nbj5R/wtuP4XvwbP82bAp/ou/rfu
mObDM3DzkfnjHNzvQ3/vhueetv53/K/B9b/jfwuu/x3/Nbj+d/xTHW19Z/yL
Ox+a/8XNH76H4vrbcfu8GPDXA3454G8H/GrArwf8ZsCn9Ur8bx397PC4/dlg
/95gfz7Yvxjsd4P9Hty2z9eD/eVg/3awvxrsrwf7m8F+Whf6vhr/1tFnA/4e
uP4XfwFuvhPfg6etv7XzeTngb2mnn6sBvwbP82bAp/V3/O+6cFqvnIGb/+3/
HNz4t/8duPnO/HEB7vehvy+H51va6f8K3Pi3/xtw/SHPYf1l/Is7X5n/raPP
B/zFgO8GfA+etvkjuHEdXH/br8+rAb8e8JsBn/ik+F+e49nhcfuzwX5ar5yD
W/9ovxvs9+BpX4Ab/9pfDvaTv6+G5/VgfzPYT7yd62njX57jbMCndaH1mvFv
Hb0b8D142uaD4K/BzT/iU1zrb+183gz4xI/G//J2E590Bm7+d/19Dm78u17Z
gVuPWt9dgBv/zoeX4OYj88cVuN+H/r4ZnhNPPfGn8nb6W1yeQ3+Luy7U3+L7
Abe+09/izof6W9z8ob/F9ffPjXfzkPy//tde/l//ay//r/+13w/2rhPMK9pb
h5lXtHeeM69or1+nvP5z843zsHyr86f9yP8b//YjX+D8aT/y/8a//VjvOn/a
j/y/8W8/+m+qX/T/NK9a70y8ufy//rd/+X/9b//7oX/5f+Pf/l1XWCfav5/b
+Ld/88RUp+t/ceuanzvfug6Tn5V/FJf/cj3k35X/N/7F5f/N//5d32/rJ3H9
Ma1H9b91ovy//p/qSte78uDywtrLM7rudzzy/8a/9o7L/O94XIdY12rvez/x
LvpfXP7f93BaP8krWG8a//Jw8rnyW45T/t/4d5z+ffO/45T/N/4dp/PbxC/q
f9c98jH6f+IJ5G/k//WLfOfE++/B9b/jl//X/45f/l//O375f/3/Uzy6/heX
dzT/iMvT+B6Ku679ueutPXa+H/pJ3PnE70Hc+svvWdzxTvtF+t91vPy//tde
/l//az+9t/p14hu0Mw/J/+t/7eX/9b/28v/Teznti+p/cfl/84+4/P80Dxn/
9mP8Gn/mFfkG/73zsHyx/OyUt8R/ap7/qf1//e+8Iv+v/+VNpjrMz238T3l2
4onN3/L/fq/OQ/Ly8ub2P83b8v9TnTXpXPS/uPz/tK4w//s5jC8/x/S5p/0Q
50n5Y+N/mlfFp3WY9ZHrsGnd9lN6Lv0vrzetqx2X+d94kf//qbpweu/34Prf
OnHKa1NdKd/p55SHkP+f1s3ymPKk8kTG//R3xOX/p3XO9B5PdaT1zVT3if/U
OklcXn+Ks4mHkIf7KX2u/p94pYkHmdbt0zpzWhdNdfxUd0510jSvT/PQlDen
93yKy8mPecbvPw569B/hpdP+18Pj9sFj//kDfnzncfvCY//9+v/Ph/6fY//l
A3760+P2hcf+2/V3PxjG8wH2Xz3gh5eP2xce+2/W/381jP8V9l8/4Pf7x+0L
j/0/1ucazjUUHvt/PuB3w3mHwmP/9+UHean/Bo/9dw/47XA+ovDYf7H8Npyb
KDz2Pzzgu+E8xc488hlxa35PfAb/Pw/PikN5/ee0vyau6L/iJ/jTh2fFif2/
or0+R33v9F/fb/Dv+B7pv76v4P/y8Kzvhf4Pzotf4mfHHz+f0Y6fg692+fmM
9nPsv8PPwX1/g//q4Vl+Tv+/Xe1X2C8/lJ+D+34F/+XDs/yc/n+9nvL2C7+1
zjP+g//i4bljHj3qZ+v1+Bm8/Kr9c/D1d8rP8PTlZ/Dys7z+K9pr/OVnxlN+
Bi8/+7lct6z35dZ5PuMc9Pk76+I84+dz2vFzcOe14M5fwd99eJafz7ft8vPC
j39c43+5xQ/596+2+JMV5+Xn4MZzcOeF4Ob/4CtPlp8zfv2c8f/54bmjjjzo
Z/mX+Dm4+dl90efgf1jj+hO48Rz8/TWul+B5vqK93pfyM+M/ySuZnxl/+Tn4
+h7Lz4z/4LpoxUn52fHHzzva8XNw8/OO9nPsV7v8vNu2y8+7bbv8vKP9aovn
eyw/Bzeeg5uf83fNz7Ff7+Mt6/wWz+lnxe+OddRBP2e8xjN4+VX754/j5Wf7
+eBxvPxq/6/A1+ctP/M8ub5czzvX/etZfgYvP4OXn8HLz44rfr6gHT8HNz8H
Nz8Hdx0R3HojuOuC4Nb/wVe/5eeLbbv8vJ6Hjx6e5eeF3y378vPCj8u+/Lzw
22Vffl74admXnxe+y/jiV9cN8XNw87N16HNw62f6Lz8Hf7rG/xLc+pl5rPxM
nJafF37UzzzLz8H//eFZfqb/A7zYceHlZ/9O/HxJO34Obn6+pP0ce+vn4MZz
cOvn9G/9HPv178vPl9t2+fly2y4/X27b5ef83YXfwvO2eF74IfELj7bTz65T
42fw8qv2z8Gtn6lDy8/g5Wfr1lfga34pP5NHy8/g5Wfw8rN5YtC3l5/By8/+
u/j5inb8HNz8HNz8HNz6+WrbLj8vvNXPC2/1c/pfduXnq227/Jx+zBsLb/k5
4zFvXG3b5ed8rk8enuXnhe/0s7xI/Bzc/Ow6/jm49TPrpPJzcOtn69BX4Ktu
Kj8zz5efF97yM3m0/Bz8zcOz/Eyclp/Tv/HsM36+oR0/Bzc/39B+jr318822
XX6+2bbLzze0X23xtMvPN9t2+flm2y4/32zb5eebbbv8fLNtl59vtu3y8w3t
+NVn/PzDwBsnX5g3vht44DX/tXnwnwOvm3rOuu7rgadd65O2Tvlq4F3Xerut
u78ceNTFHzUe6fOBFw0fCi96lL9Pm2f8fFx5JHVC+Tk49fMxdtZ1v9o+4+fj
4uPCg5Wfg8OTH3+57b/8/Mvts+L36cL/iZ+Dw2MfMw550V9sn/Hzkf2O8vPv
D5t2+Tc4+dln+Tlt6ufj7xZuPAdfn6/8/Nvts/ycNvzz8TcLN56Dw2/Uett1
92rLPx//beHGc3D45/Ch8qIn94sSv8GpNw7B816mzTN+Pq15Md9D/HwMvr7P
+Pmw8GP43fg59vDPp3e344+fj8Hh6w7BV5yXn9/dPuPnE7x6/HyE346fD8Hz
PcTPf962y8/Byc+H4Obn4NTPPsvP8NPl5z9tn+Vn9mfKz6suNJ5TL5qfD8HN
z8Hhn8MfySMdB/45fKi86Okv2/GUn4OTnw/Bzc/BqZ9P8PrlZ57l5+Dhg+Pn
9AP/fHp/O/7yc3Dy8yG4+Tk4/POJcwPl5/Pts/wcXD9/uG2XX4OTnw8fbtvl
59hTP59ebtvl39QX1M8+y8/sa5Wf/7pw4zk4+fmw8JafYw//fFp1fIvngX8O
Hyoveu9++PLzKTj5+S44+fkYHH7jNvjTZZf4Db7+Xvy6C5558tXjz/j5Hl46
fj6FH154/HwXPOMOr5F+lt/i59vgKy/Gz4f0s+Ikft4F188fbdvl5+Dk57vg
5Ocj9uXn4NQbB+zLz8Gtn4PDP/ssP6+2/EbW2667j9iXn/fbZ/kZ+/Lzfvss
P6/1fIvn4OTnu+Dk5/AC1s+39F9+pp/yc3Dr5+Dwz/fw+uVnnuVneOny88A/
39J/+fli+yw/B1/25ec323b5OTj5+e7Ntl1+jj31821w4zn409WOn9O/9XPs
4Z/vX2/b5d+Bf/Z5hA+Vf74NT7r6Lz8P/HP4UHnR+49X23gObn4Obn4OTv18
G5z6+RCc+nm38FY/xx7++Z59p/Jz+GH9DC9dfuZZfg6++ik/00/5OX9XP3+y
bZefg5ufg5ufg1M/336ybZefY0/9vFt4q59jD/98/3bbLj8P/PPdwlt+Hvhn
n+XngX8OHyovev+31Taeg5ufg5ufg1M/3wanfj78jXb8HNz6Of3AP9+zL1p+
vtq2y8/w0uXngX++hdcvP/MsP/s9xM+fbtvl5+Dm50+37fJz7Kmfbz/dtsuv
sad+3n26bZefYw//fH+9bZefB/757nrbLj8P/PPt9bZd/h34Z59NlysP/QR7
eT346dif/B6wV5ebz9F0ufDZsT/yvWmvLjd+bbpc+O/YH/yesVeXm++56XLh
y2OfeGm6XHj08n8+73DfiLrcE3GkvbrcvAdNlwsfX/4n7rRXl5v3suly4e/L
/8Yp9upyW55Qv48ut/KWutyMQ12u8Ub/6nKT15suN/2ryyVP2L+63KPfL/03
Xe4aT9Pl6v/0vz5v0+W673qGHbrcg34+YxzocvO51OW29zd1SfKd/EX6V5e7
/KAut71fGf+yV5ebOkhdbuomdbkt/jP+1b+63FbHeb5EXa55VXt1ueFf1OVm
vlGXm3pTXW4+v7pc9rcdT9Plmpf8XOpyzT+Oc7g3o+ly1cWow0OX2+a1hbf5
K3zgWk+oy635HV1u1oXqcrPOa7rcFSfqcls8Z/zmjYzf/J/xoyOo8Wec6HKz
HlGX29bZnn9Cl9vys+cF1eXqZ87XqstNvdp0ufGXulzWJY5fXW7Lz4y/6XLN
G4xfXW74hqbLVbe4ww5dbsvPO8aBLjfjVpfb4jl61/Au6HLLj+pyP+b/Z/zG
c8Zvfs74zc8Z/8d8vozfeM74V5yoy208aMZrPIM3Xa75Gbzpcq03wJsu1/oz
OHq6wvnexJsul7gQb7pc4k686XLVlavDQ5fb8nPW/+bn8DLWdVn3Wm8kjl0X
RGdr/R//rbhSl5t/ry43+yrqcrPPoy43+yrqcrOPpC43fL663LZP5flRdLkt
P3veWl2ufqZ/dbmtfrZ/dbnwoN4XoS73iX5mPmy63DW+pss1noMvfzZdrud+
rEvQ5bb8rC4KXW6rn6ODNZ6Tx62fkxesn+OPlQ/V5bZ4Zt5Vl1t8C7rc7E+p
y23xnP7X/rO63KYj8Hyzulzzs/bqcq2fGW/T5Vo/e7+Eulz0+94X0XS55mfw
pstdeaDpclm3iTddrucy1eGhy235OfWl+Tlxb10XHaz1RuLY+jnrEOvnfL41
j6vLbfGc8Zg38rnMz+l/8Yfqcmu/3/sllh5GXW7TeaFzVJfb8jP9NV2ufuZ9
Upfb6mfmk6bL3T88my7XeA6un1lPNF1u+NzhHgl1udknarpc7yGQb0KX2/Kz
/Be63FY/q4NFl9vqZ/nBn6nLbfHMvKsut+Vn8qC63BbPxKW63EmP2/z8Azwk
utyWN76DF0WX2+bBf8JDosttdd3XW3t1uW2d8tXWXl1uW3d/ubVXl9t4pM+H
OP3s8f2TI/GrHtd4Pq79lZN5I/su7p9kf8u67lfbftTl1r6Zulx48tLluu5e
uOvB49Nll+8dXa48duly5UV/sR2nutyTfv791k5drvk5z5Y3Eu/6eemKWjwv
3Po5eoJW10VnAP8cXW6L54XLb0Tv1dbd0eXCP0eX2+J54fLP0ePKi57Ir+py
rTeiy639PfS45ufocrOPpi43+5XqckvXoC4X/rl0ucRzdLnyddHl1j4wulz5
jehy832pyz0Qz9HlnvSz5+3V5ToPpI43P8ee+jlP58Ej6xh1ua2uo05Ul2s8
ly6X/BxdbsvPsSdvRL8oj3Qc+OfoceVFS5drPP+FfuPnhbf8vHDr5xPrP/W4
1hvR5ZbuTF0u/HPpco3n7KOTn6PLbfl54fLPpct1fRx+G74uutyTfnZ9ji7X
/Jz1Z8vP4U3088vt51SXa/2cZ6vrWC+qy23xHP2teSM8kfk5ulz45+hyWzwP
/HP0uPKi99an6HLNz9Hlmp+jy5XfiC73qC4m/VBvRJd7ch78KV1uvl90udF/
qcuNbktdbvymLjf6O3W5B+I5utyTfv5oa9d0ueTn6HLNz0fs1eVabxywV5fb
6ufYwz/n6TqldLnwG9F7ue4+Yq8uVx7pgL26XHnR0uUaz3mfyRvR5Zqf8/5b
P9/Sv7pc6+foclv9nH7gn0uXy7q78gfrwTvzCrpc+edb+leXK18XXe5RP7u/
hS7X/HzHe9V0ufp54S2e0z/1c3S5rX5O//DPqUtaPA/8c56uu0uXC/8cXW6L
54F/jh5XXrR0ucZz8p35eeEtP0dPS/0cXa71c3S51s/R5bb6OW3459LlGs/x
n3627iFPy2/cMk+qy00/6nKP+tnz9upyzc+Zj83Psad+zrxuvVG6XOrn6HJb
/Rx7+Od7vqemyzU/Z3zm54F/rnUhPFLpQeGfo8eVFy1drvGc99m8sfCWn1NP
UNeVLpfvP3Wt9XN0ua1+Tj/wz6XLNZ4zbvMzvLS6XPnn0uXCi9b6G74uutwn
+ll9GLrclp8/3Y6j6XL186fbz6ku1/p5B0/UdLn77f9PXdLieeCf76g7my4X
/jnvbYvngX9uelx5aHW6tjmv3H7vyn68J8/fB9Lee8j8PRXt94O9+hT3m7VX
n+V+nvbqE90v+Sm9s/4Pb8f9B00H/Qz73FtwBq5uz37OwT/H//bP/XpNd2L/
F+Cf43/7vwR339T+ySPVvzxo+h946Pi/3cPh/Rz4v+l5z7a4+sjWzzn491v/
t/65x1B9T+v/Avz7rf9b/5db3P3p1r/7Ud9v/d/6p+5o92WH5+C+kKbTf4Z9
9knOwLM/8x547M7Bw4++AA+fyn2RTUflOC/AvyT+HT91YY1/0C+3/dWMXx40
41dfwDmHdq+M983g/4Zzfqv6eQ+c32+Tl43/m/1usN8P47kA/3br/2bvfum3
W/+38Vxtcfezm/3NYJ/8E56T+3XaOZJn2D9dzzPw7I9N9x+fb/Hip19gH56V
+0/VBbZxss6vz+X+c8bv/n/Gz3pO/7fxu08FT9zGn3Mg3pPk/Un4v523ONvi
da52umf6fIsfiP+mF+aeWfWXbZzu53+z9X8bP+u2Gj/rMf3fxk+9q365jT/5
f7iPqp1zeoZ9/r3na7Ov632E+feeX8zn9b639LsDT17dg/v7ZO4XTfp69Vnq
utSJq09UH6PeWX0u/lNf0O4Dw/8N5z6P6sd7eal/mr33RFL/N/s9eJ7yCsHV
b+Y58MRNj5/n1WB/PdjfDPaZfxMv3N/WzuE9w/475l/vD3sPHP+3v/sC/Lut
/1v/e/B8Lvje4u9fb/HaB+D8ubrD1j/nh6v/6y3e9hnsP+cGvcfO++3wfzsP
d7bFo1OI/1s/nM+pv/sCnPq/9b/HfrVLX84+Rvzf9MjuL6HvbP2jj6z+2Q9U
f936T/2T/Md9h+2c6DPsk+fPwPG/50qbvi/rxBfgmRfUt6be3oOvdtU/qWuI
/7IPX+c+Hv5venzO99T9K+5vZ98AXaD+aPcyel8j/m+45y2/2Ob/dn7ufItH
19D0wtT/zX6P/Wq3+xiCvx7sLwd7eOOaj9ELqAdt9jeDferPzOfcD9rOMT/D
/sut/9WRjb8fcr7Fax/hBfapqz3Hxe/dtnM2F1v8RPxXP7FHZ3Eg/zedOHxy
7W+oP8L/jYf23oHPtv5v58KfYU/+V0c2/k6L97oR/+28HfvGdS/ZHvvV9vxS
9pnj/3ZeBN3QjvzT9Pjo73fEf9M7oxstP4WHgy9tOnR1eNi3cxjqnLT3HJI6
EuzbOTz36bX3HKr7oNp7Dtt9Ju29hyDP+A3+s+4PhS+t9x5+1fsZ1S3Zf91/
R//13tO/94u57976/xg8/X8Cnv65H8d9I/uPXrN4yfwuxp/BF88ZPVzhuceM
exXVG9l/9DH2Hz2H/XsvmPvlrf9PwNP/38DTP/vw9f8TJ/KQfwFPXfQhePSt
r8BXvVf1ETxq1TXwqKW3gEf13q62n+09EH8Dj75V3W70ttEpwu95P6a6sbJ/
uvCPwBffGF2O/GR0JM3e8zTRd3N/lvvKjt/7iWr/MXwQfFp0b4VH1/8ReOqY
fwfP+/IG/OnCPwbPvWqfgKe+QZfX9nEZf/R5xUMtPXv0ZPJmO88h5d5szoGF
N4u+pPDUB59s8fBmO3X03K/QeLO8L/JO7v/ne34DnvpN/Qt628Y7qf/KeD4F
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
N+eBPB+Ue77KPv60rgsvSl2XetG6rnQd1nXph7qu1uHWdcGp61Ift7oufAJ1
Xeyt60ofa12XcVLX1eeirqt746jr4s9W1yUvUtdlPWNdl3WodV3WS9Z1WYda
19X9lNR1xdNZ18UP1nX5Xqzr8t5Y12U9aV0Xf1rXZV1qXZfvi7ou6+dW1yUe
qOvq/mTruvCKfxzsreti/9fH7Vtdx+/bt/166rraf6euq3UddV3Wpa2uix+o
64pPoa5L/9Z1tX7e03/2I6jr6h71p4cNXuOkrgufZV2XcVrXpX/ruvRvXVf3
ZVLXZb6xrqt1OnVd6RCs6/I9rs/b9rut6/gd+LbvbF2Xfqjral/bui48mvva
4eP22Mdu2NdudV3eW+q64pet6xKH1HWxt66rOKSuCz/e6rrE54vH7a3r8nms
6+red+u6/PvXgz11XekBrOsSJ9R1tZ9BXVd8OHVdvb/D/q91XfK8dV3iwbou
fG6r62Ln/m9+r2DY/7Wua7yv+7/UddkPs66rfS7quuy3WddlP8m6Lvt51nXZ
r7Kuq/vXqeuyH2ZdV78/QF2X/Tbruvr9Deq67OdZ19Xvz1DXeY9r1XU5X//j
tq6r+wOzfxY8dduP1HVf0G/wr+g3+Dfbv9vuecv+n3zdO4fH7Z+Dc06p6q6/
87mCZ330zhZPPVF1auwz71LXHTgH1e77yj5lcOrmdt/Xc+ypX+XrjtR1pRf6
kbruH3xfwX/g+8r+z9PteMo+58Gp65Lfj9Z1v2N82Z/h+5IfyzgbX/fO4XH7
54/bZ5yND/zgcfu2H/OPrR8L53uvuojvvXD8XHVX1vXPsf9yO/7C/74df+GZ
V/z9N+KgcPwSPPkr/67dj7Q+V+HEc7sf6Tn2X7Oukw/0d+qebj9X6/8V9uiP
5etO1nXoP6rOIS8Vbt7IvMv5Jfm3dp90+uF++qoDvE/d95N6LJ83eOqbE3Vd
5qk76rodepd2j9DyQ+Pr1BN8sX0f3W+qc/Dwb/GDfF380O4deoU9+nL5t9PA
1929ftz+aF3H+1R1C/Nm4cyDhTOPFs78UvWYeT51lPMB55Yqz6Z/8lpw3wvv
C7qjrjPOajwrfm6p6+peGvVMn239Vjj5RL4ufit75kf5On+3oe5PeIk950PU
3dU6H77uZF2H3+TrjtR1de574OsO1HXFX6mv+4x5PPj323gr/IttHi78220e
Ljz7KS/Bv9nOL4W7Dwfe5qdvmG/4u5XvGOct8ZXP1d6374m/yW/eW+69PV/h
N+/t4T6O2p96CZ7+vbfnB/zmvToXj9uX37x3iPPXGc+tcaQumc9bfhv8U/77
Zuufwomrmj/xT+HwjIU/fXhWHkr/xFXZr7qo5rvg8DKFo4Ov/okr37N6P+mn
4sR7bz4Az+89vgSXV+V3WStO0FFUnKCjqDjx3h7PD6z+K04Yf8UJ46848d4h
9HUH5vfCmb8qjlZdVPVq7PjeC4eXFK96KP3zXlTdDc/iOGvdPnyudg+29/b8
bvu51Jm0c03GszoTzts+gXdr9/bAyxz5XNP4q+7gfGDFL9+L80bVFfET76P5
oOqKxAvjN45qXs84PX/IvT31vnBvT70v3NtT7wv39tT7wr099b5wb0+9L9zb
k/FU3bHfjqfWN/vteKr+zfPt47j1XPopnmv4u96rU+9R3r+Ptn9XHYj7u8Wb
oa+z/6qnqDOrfqd//ZT+qx/qfu/tqfci7xO/z+i9PbGvOo56bsLr71jHhP/w
96bZh5WvOw7rjDv08bX+QBdePAp1Urs/Qb6Oe0CavXwdn7fWf+r4+d0t+bqd
Ou/kMfXTWSdzfqOdo4evOzLft3P08nX8Xfdh5euOnjPJ+sPvK3mXOqPWwd6j
l3lmWBfeqbfOfOu9AOG9ON/ivmfj64iHZi9fxz0abZ9Xvm64d2CHXrnsWT9U
fjWe8/7j5+KN8HPlK+/vC9/A+CvvqQtnHdn4ujfbz1P9cN6pnTuGrzOe27lj
+brh/ICfq/rnc7X+5eucz9iHla+r/TX4OvNS1RHmjcyTfF73VeXrdpxDqHkP
3X/jjeTr+F3LGueH289b4+HceP1deP52Ple+brin6Y730fuh5OvqnJL1DnVb
O88rX0d9475q4+s8J4998zv3zdX8bJ5P/cg8KO8iX+f8UvWUeT7xRL1rndL4
ulX/yNf5XngOV77OuKz++b3I6mc4n3lPXFUdRD5p52Tl6/Cb+7Dyde33H9mH
bXzdfv3//RY/EVdlj17EfdjG1/E+uA/b4kZeid/VlEe4Jd4qr5OHC3edln44
X1R/1/VGvmd/VxNcvi79yNfVvMB8W+faqPvyueTr4gf5uuY37wOErzvoN8/D
en8u81frH74udULj67iXRHv5unaeh/E0vm44957PK1+nf6oug7+ouoC4qvfb
e3LTj/Nd5pllL19nXNXfXfbydakf5OuSZ+TrjCvzk3zdPecq23lS+Loj5wDb
vXyeh/U8G/pY+brUk42v8/2i/8bXqbNh/I2v43xm1eOchyyc+avqxPzu9H6L
+71XfcHnFZev2/Fe1N9lPe445ev8XO1+Ofi6rI8aXzfcQ3QyntUPw9edjGfP
w8LXnfhc0/hrnfTxdvw1r/K9ON/K1/k+WvfJ1/m9uD6Qr7un/vE8bOPr3mz7
8zxs4+vgkTwP2/g6eCrPw8rXpd6QhzpRj9X3ED2h52GjoyN/nKyHhr/reVX5
uqPnYdD3ytcd0cNN/dffp86sOOJzGV/GXeqxxtepa+Q8bOPrqNerv99v7Sf8
f52H/R93GOg+
        "], {{{
           RGBColor[0.880722, 0.611041, 0.142051], 
           EdgeForm[None], 
           Specularity[
            GrayLevel[1], 3], 
           StyleBox[
            GraphicsGroup3DBox[{
              Polygon3DBox[CompressedData["
1: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
uy/WVmMpuxfWsshryKVct4oaG9k9uOYcL5/dm2uBy2X34JrhL7L7jNsZG19m
13Jf4+rJdbrm9h+i85Uy5/fRuVFZ8UfcrOB8+F10PlH+/CM6cyoH/RWdSZQb
/4zOlsqBz0T3Y5WHxyRnbz3v16pXVfD1vy6556b5pEpyX0734rLk+lE12aXJ
/T1d/0uSe24aA99GZxtl6UrJ/T3dr8rJPUDdxz3RuUsZ+3Nco+C177PoZ03Z
8oDkzKZ8cig/AwvOCf9EZypl4P2Ts5bWrH2Tc51y9yHJ/VvlBC0EypPKsSWS
c6ny7fXJvUGN1QOT86fWu4OT+9LKG99EZzzl/B3R2VJzw+7orKu6YFd0blSu
3hmdG5XDD0rOusok/0ZnYOXnv6NzoPL5f9EZWDm8tjJEwb2yG5L7nJq370yu
l9VnHphcR6tO6pdcL6ufOSC5jlbvqH9yfap+db3kWk99s7uS63H1pYfqWhfc
s+qbXBerp90ruabT3HVfch2tvuK9yXWu+o33JNe26hPentxXUf98SHJNrZ5Y
3eT6UX253sm1oXrafZLrOPW06yTXm+rXnZPc01Bvo1Ryn1/r8kXJvWLN4RWT
e7yawy9O7v1qPqmaXLOrT3hTcm9cvcTTkvcINF/dnNxDUB18Y3Jdr55qreT6
V33CM5L3CzRfnY4HFTxHXZi8Z6EMcEFyH15rd3mtowVngArJPXCtO2cn7zVo
TT8zeW9C89tZyXsTyhglk/cglDEC7lpw/bVfcn2hmu6T6HVBuat5cr9O2bVp
co9FvZYWeHPBdcEDybWz+k+DNV8UnPmv4WdewRlySnQeUwZoltzHU1bsWjyu
1KfpltzjUmbeFD2nKdO+Fp33lHVfjc6NyrcvR9dfqrOOK76PqrEe1LNXwufT
HX9acCY/Prlnpdrk6uT+pDLtVcn9TNUapZN7TaoXTk7uMSrnn5LcH1N9cXnx
PdVcVCO556kMXJOfNQVn3ROSe2Kqj07lZ0zB8+0tyf1SZeNXoutKrdEnJvcD
VXecn9wfU/1yXnI/TfPzuclzoMZqmeT+mGqWK5N7pKq/rkjunaomOim536ha
qRw/kwuu3com99lUB70UXc8qP7wRvRarHtwYvdYrg62OzgPad1iATy64xz4v
Ogeq9z49Omspn0+LzpDqbyyLrkG07zAjOlOpBzI1OtcpB86Pzlfad1gRXXdr
v2NVdJbQnsjH0Xnp//VRdM2onvni6JpRPfPnomtM5f0l0TWj+ucro7OK9kqW
R/dDtPexNLpnov2R+5P7e9q/mBmdD9UDnxudgbXXsDU6v6lu+jA6j6mW2RKd
r1SvrY3OPNpP2Rydc1RHfxSd8VTHvRidqVQTvx5dv6junh2daZWHP4jOeKrF
3ozOTqrd5kTncO0NPRudt7W3Mis6G2uPZlt0HlNduSY6U2lv6P3obKlM9xa+
quBach0uW/Ce0ejk/qf2XD6NzoSqVYcl9yG1B/FudE9YufcdfH7Befvt6H6v
svQifEjBOXlhcR9M9+W94n+7zmGv5D07Zaejk/f+lJFS8h6ics4LxfdU12oD
PqXgnN82uW+vvZgOyb137W+2S+7Va0/ttuT+vPba2if37bXXuT66B65a4Jjk
vUXlrmOT13HNIfsk72kqdxUl7zkqj8XkfUzlui/5nqsLrhd+id53UO76LXp/
U9ns9+K1W7no1+j9UOWxL6J77Krpfsa3FFzH/RS9B6Gc9lV0/1913NfF904Z
YHv0HoFqupycu5Q97k7u92rvbG/cvOAs2jF570P7y4fjbgXn6iOT+5nKn0ck
7/UoVx+WvNejGuGo5H1Y5dXOyfsm2muultzX1brWSuO+4P2mW5N7ttpr65Tc
n9dec6PkHrL2p1om78to/6tHcj9f++/1k/vG2psbkdyj1n5fw+Ses/aqRiX3
sbVveEdy/1l73F2S1yatI22S91+079ak+Dy1ZrVO3tPRHlxPPVcF7++PTO6f
a7+yQXKf+f/7gMk9be2XDU/u1Wvv8n8XPFci
               "]], 
              Polygon3DBox[CompressedData["
1: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
unJ+1q/i9xjzVyzZo+aCI5voiRNL9KpnQq9HT8ON4z16RXoCPkvPRO9Ez0Cv
SU2tV2OMVWvrSejlGBP0Koyxekt6NsZeY46xx5ij12BM0TvSwzHWGGP1nvRE
jL2H8t4XldRM1k7GOGNvv05i3x6Mn1LiEekVOafObe9OtIhz7tw75+Zq94R7
wxitd2OMNHYb042dxmRjszFXbeqeMfYaw91LxmhjuTHf2G2MNlYb09Warplr
55qrTdxj7jX3pN6VMdZYa4zSezEnWqupkcyV5lRr0Ts7ybXmXGstNZC5WA1l
LWaNpra6uErtYg1j7W7O1UtRU5mL1VTWcuZMtZaaSa90RCdaypytt6KmMpef
WsUb0CNYpY7msra0BlSLmUP11o7pJLduWUXbq4nVxsZcY6+aSG/OHGguNOfo
dZkj9OLUiOYOa1BrUTWYXmz/KrW8Nb1emTW2tbY1kt61Od/a+rlOtIBnwrPh
mVFbeuY8e54JtZ5nwLPgGVLLbQ/3K6nZ1rfWgq8q8SA2MDfBV5d4DBvCa1bJ
ZeY0a1M1hdpiu0609U7wNSWexkZ1NKRe17udaEtrOr0ua3xrve3gviU18Xp1
arBr4ds7qc30XK5v19/11BM5r6Sm1CvZCr6wPQ8rw9vAV5bUqGu7P/j/8Uo0
k9pJj+T8kppb72RbuE9JjbtuHQ/mgpKadKV2P/Vv94P7Q0/ounY/6BWNx/j4
JTHT2GnMVmtP1Uks/8/DgL/rxNtQo6iFl+lEu5hT1QLmUHOtOdTawRxgbp2S
589ZolnVrnOqY0tqXmtfPZ5R7frrdZpz1fbmcHOxMdBYaAxUy4+zrijR1Gpr
a2hr6b3b9TTn693M3YkWUCOpldT41jrmfHO/Od5aV82qdlVjWhs9Yh1T0nOw
92BNYG2gxrUWViOpldRs1s5qTLWmmsJa1j2jX3F+lb1kjjHXqNnU8kuaB0t6
EvYm3I/Wpj3b/aeGaEpyltrCHD9JSY4y9+shbNXuX3sHegDrlPRE9AbUeGo9
NZFepxpJraQG1DtTU6mt1Fzfte+zRfv79QrUYGoxc4xepJpObaeHYe9FDbRB
iUepNrLmXb/EI7IWVhOtV+JBqZXMofOV1EjmVnsiL5f0OOyV2BN6qcSDtlek
ZlQ7qin1ytQIC5TUVGoHPTe9VD1cvTg9GL0YPUG9NnsiG5Z4xPZK1Kxbtufb
+VaDqkXVqHplalC1qBpVr0vPZN0Sj+6tdr+u0a63+13PZK12/fRSrHGWK/Fc
rH2scZYp8XCsffR0XO912/1uTbh8iYa0VtTTWKXEI9Tr0BNZocRT0CvRA1m5
xHPUG7En90pJz8lenZ7QIiWeiV6RGnKhkppQbWmNuGR7Xj1/apIFSzwYtYoe
09olPSi9Jz2EhUs8Hb0Fa9Cl2vP6ZHuel2jPp+fLmn7pEk/JWl/PYdESz0Yv
wpp42RLPylp56wmT//u1+cjzNq6Np8YXe5Svl/Tk7F2q4eZsz7PxSU04d0mN
rFZUs81T4jGo5dTM85bUnGppNd9cbfxRC9rTe7ekZ2ivT007Q4kGV+saD+do
45fxTw08XYmmUxurcacq0cBqX+Oz8VKP4qauaP6JSjSstYAe0RQlmlLvSE0+
WYnGV6tbA8xU4uFYG1gj1G08tnawRh6/jcfGfzX6NCUaWu1uPDQ+29O9pI7H
8H4br42P1gSzlHiI1grWELOVeETWFvZs32vjnb1ce6xj23xn/LMn+3xJz8he
rT0SeyX2ZOx92sOwl2EPxd6lPd+3S3pY9oLtUb9R0vO0d23P+LWSnqi9ZHuo
b5X0hO2t2mN+s6RHa+/ZHvarJT1qe9v2ZOzN2EOxd2XP94WSHpm9YHtG9o7s
+djbtUaZv8STsHaxh/tOSc/Z3q49JXtL9qDshdsTfqakZ2iv2B7ccyU9Qntz
9qyfLemB2su2Z2Xvyp6VvV57TPaa7EEe1+ov9a16VP2nB7FGGw+Mt+Z8tcLJ
VbRA/zp71T3/X/3S5Cw4h87lA03mxjlz7oY2mVvnzLm7oc7ZcM+792+qcxY8
I56Vu5r8FtfUtfUMqgVOqXI2hzVZC9fQtXywyVo6Z87dkCaxxzVxbe5tsjau
qWurh9qtzcfqx/uarLVn2rNtT+74Eo/TXt3wJmvhmfRsjmhyNt2T7s27m+w9
19i1fqBOrDQmGhuH1omNK5X4z3r69rbs8ej16/nbu7LHZS9gZJ3Ybs40d9rD
sPdlz8vexsN1cpk5zFxmT8DegHrcXrA9HuuT3p3UL+pl9Yf1kvr5oTq5zxxi
LhleJ7aaM8wdw+A1Oon5xv776/TzreGs5UbVya3mVHPrg3VyjTnEXPJondxn
jjPXPVIn15mTzc0j6mgBY7qxfWCTs+GZ9mzf0yT3mkPMJYPgDzrJweZiPQK9
Aj0Cvbh+dWKNMc/Yp6ett929Ey/9yjqxTI2iVhlcRc+r/9XL9lDsJdqjtbdy
eZ3YqMZR61jzW/uf1klvrk+dWGmMNFbqieqN6rnqlfv8se15Vy/aczqpxGOw
F6XHqdepp6qXbr1p/Wi9aH3Zt07sNiYbm/XE9cb1/PXmrZmtnXt10vvR47WX
0KMT7/eyOtrMGG2svqKONjPmG/uvrRNrjenGdjW5/eOzq2h1e9QnlNTo9q6t
Gewn965SS4xsEouN4cbywU20kZpJ7aRnrHesx2tv4Lo6sdwYb6y/Hp6jkxhv
rL+6Tm4zh5nL9Hz0fuyR2Nuwx2HvRP1p7+PSOrnHnGPu0UPWS9aTtZdxVZ1c
aA4yF91Xx3tQs6hdrFnsH55VpZa5pk5uM8eaa++to23UQGohe3r29uxh+W2D
PW6/NbFnYu/75Ca1jjWNtY09d3vv9nT9tsAeqL1de4j2Rk9qUltZI1krndhk
71lzWXud1aQ2tCa0NjyzSe1mDWkt2atJLWkNaS15dpPa0ZpQPX9Gk1rLms/1
OqdJ/LamsrayZ2nv0jnYuk5P096mHo/fnvRuUltaI1ornt6k1rOGc38MqaMN
1ZRqy9MY799JTeh82kO3l24P3m9d7Hnb+7ZH7rcs9mzt3brntq0TE42Nxhh7
dUc12dueGc/OEU1isXvSvXl4k7k3Rhur/SbBbxNGd/JtiD1We632rP0Wxm8c
/NbhsU6+RfEbCL+FeKKTb4Ps2du7t/7325Njmng7xlBjqd8A+C2APXy/LfKb
Ar8tGNPJtztHNznbJ5f0V+0p21t+tJNva/wGwm8h/MbAb5lOaVL7WlObT+2p
++2GZ8xeu3Piu15ZZa5urlObqBnVjrfWqTXUDGoHPUt7l/ohepkD6mhbNbfa
+9Qmtbua1vx5T51aQM2r9r3LnN+JJlYbD66jha0RrBXsoeq36L/od+l/6cfo
p+h32cPWD9Lf0T+5o442V+Or9W+po22ssay19Fv0g/SH9FPurFMbqOnV9rfV
0f7WVNZWt9epFawJrA0G1ald1PRqe+fcuXfN7HUPrKP1rQmsDe5sopXURGoj
e/r29u2p++3QgCZaSQ2llrqjiTZSY6m19GQ8G+dVOY+eGdf2iipnSU9Ub9Sa
2m+n9Hg8++dUOa96PJ79c6uc1xvr1ALWCNYKd9epXayBrIX+D5ZfgSc=
               "]], 
              Polygon3DBox[CompressedData["
1:eJwl1nW4FGUfBuD9aAEBaRQppUvpBukSkG6QbpBukG5QWuk8xKG7u7tTpRsE
BCT97tE/nnOd575+7+w7s7Ozm7JR+8rtIoRCoVMSWaZGC4UWRgyF9sHTetMo
oVBv1ov9wuaxXOyWNGfdWD+WUv/V3CJ2gJ1lzdlNaca6sr4shT7TXDg7wi6y
1mwKW8D2RvhvL43ZDWnKurA+LLk+2txkto7tYlXYDLaUHWYXWCs2iy1jR9kl
1obNZsvZMXaZtWXT2GJ2kJ1jLdhkNp/tYSdZEzaKTWJr2U5WlU1nS9ghdp61
ZLelBevO+rNU+nVpwjqz3iyZ/ou1YWw/O8OasccykI1n01lhfYC5oWwBW8mK
s/rsK1aRVWW3vXF1WGZWnn3HbrJ6LCurwKqwW6wRK8zqsybsJavLsrBvWWV2
gzVgBVgd9j37izVkBVld1og9Z9+zQqwea8xesFosOSvEirLTrDZLwQqzYuws
q8mSsYLsG3aGVWexWRb2NdvDarA4LCvLxnazt67DLnaK/cEG6OPM/cI2sr2s
BqvGQiw5S+nfNdbOYSvYcXaFtQuuOxvGFrJVrBjrx/qy6Wwhy8v6sj5sGlvA
8rA+rDf7lc1nuVl/1o/NYGEsHxvBxrJlbCMrx35k/dlMtojlZyPZOLacbWLl
2SA2nIWx1awEa8yKsAasKXvl3IayUWwJW8dKmxvCRrLFbC0rxQazEWwRW8NK
smFsNFvK1rMybDgbw8LZBlaWjWVT2Qa2h1UP7nlWkQUPky4sKvuJ/co2sX2s
JlvCtrDL7B7rxRaxTewiu8N6sDC2kV1gt1l3tpBtYOfZLdaNLWab2SV2l/Vk
C9h6do7dZF3ZCrabXWdP2SC2iu1lN9lzNphtYkfZQ/aWjWbr2EF2l71iw9kG
dpjdZ6/ZSLaUbWVX2H3Wm61ke9gN9owNZFvYcfaYvWdj2WZ2jD1i79gYtpEd
YQ/YGzaKhbNt7Cp7wPqw5WwH+509Yv3YMrad/cYesr5sn2RnxVhpdt/9spWl
ZjlZXnaZXWRVWGPWisXUj0o+VpZVZE/NXWJVWRPWmn2sH5P8rByrxJ6Zu8Aq
s0asJYuhr7a/fewW+4sNYTslPcvLCrLfrd3O0rLcLD+7yhawqCwOS8I2szD2
EYvPPmNb2Q6WjuVhBdhvbA/LxAqwIuw628uysaKsFLvHdrEMLB8rxP5gu1lG
lp8VZtfYEZaXlWEV2J9sjXPbz26zF2yomfXsELvH/mYj2HEpyiqzmuyNtRPZ
X3rUCP99Hy/0ZzJ7qccInC1iU9gr/WMJHnGL2VT2tx5bPmJL2Es2x2usYttY
w2BG5rE1bAdrpD+X8WwuW8Yq6c/kZzaHhbOK+pPgWcQmsBmsiP5n8DxhE9lM
9o0+SV4E+xD/hsLs5VHwfWbuZzaNFdKfBs8nNonNYkWD85cJbB5bzr4LjiUT
2Xy2glXWtzrxE+wJ+8DGBb9B5I0eL7heLNzrjg/ORY8Y4d+vgtB8NoO9D+4f
icVWsJnsQ3D/BNeQrWTT2Ts9UXCt2XI2i/2jfy5x2Co2317WOfhZdoN1CZ5X
Eo3FZZ+yLebmmlvDTrNrrLOZtewAu8NesmHBeyYRWTSWgK23dh6LzGIG+2Eb
2Ss2l61m29n3wW8Lea1/ItHZ0mB/LIq5WCwx28SmsbfB8SUmW8ZmswjmorD4
bF2wZxaJRWcJ2YZgL/a8lp1h11knM2PYFLae7WbV2H7JwYqzMuyBtQdYTlaC
lWUPWVtr67HebBBLaKYNq8t6sYEsQfA7ipVjrdgPLBJrysqz1qxj8HXPmrMK
rC3rzKKwdqw+68MGs0SsO+vAxrIpLAPrxtqzMWwyS8+6snZsNJvE0rGOrBUb
zn5mX7BOrDUbwcaz1OxOMMsGsJEss97ZXBs2kk1gadhZKc1qsvqh0L8fnC7m
2rJRbCJKy85LWVabNWQR9HvBMdkgNppl1R8G58KGsnEsm97M8b5lbVgnFjn4
XLGZbBs7xOoGn182i21nh1m94PnAprMt7ACrzf6QRqwj68mSBs8Mc9PYZraf
1WLXpDHrxHqxz4PPuLkZbCs7yOqwc1KG1WIN2P/0XuZ6sqlsLsvJerDubDKb
zXKw1qwO68kGsHjsQfDesSFsLPta72muB5vC5rDs7H5wrdlgNoZ9pbcyV5v1
YD+y+Kwlq8Tas64sGrsbvO9sIBvFsuiHJQ8rzb5lT9zjHaxtyPqxoSyJmTNS
itVg9dg/5laxhCwNS88Os3AWiyVjKdgutpjFYImDZxHbzpawmOxTloztYEvZ
xywpS852squsBmvO2rE4+mWpxpqyNiyWvkLisy9ZWnbQ2uUsHvuCpWEH2EGW
i5Vk5dgjdojlZqVYefaYrWQJWGqWjh1i21galovlY1fYIhadJWRJ2Ta2jMVl
qVhqtp9tYV+yHCwPu8RWs0QsLcvAjrDN7AuWneVmF9nvrBZryTqwuPopKcGq
sTrsvbmTrDirymqzd+w1W8V2sePsh+B7R1az3ewE66ifkGKsCqvF3lp7mpVk
1Vld9oH94N5oyYaxn9iXZtqzBqwvG8ISs/XyGcvIsrAT1q5lSVh6lokdY7+x
mqwFa88+0TdJKpaN5WIXzK1jn7IMLDM7zq6w6qwZa8ti62skMUvHMrKj5jaw
pCwTy8pOso3sc5aZfcVOsQnsefB7RiKxBez/f5QrjA==
               "]]}], Lighting -> {{"Ambient", 
               RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
              "Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{2, 0, 2}]}}]}, {
           RGBColor[0.368417, 0.506779, 0.709798], 
           EdgeForm[None], 
           Specularity[
            GrayLevel[1], 3], 
           StyleBox[
            GraphicsGroup3DBox[{
              Polygon3DBox[CompressedData["
1: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
NiSc86k/1iNc7+k8q2e4vtL51OHh3pP6pf8L58TqB+6bS30V7bnZdbrm2I7Z
tb/ykNrZvSzN+e2ye0qak1Wyew5aX1sru+bV3lHIrqm1p5Rl18vKkbZUdr2s
PXG/XOrP6N5l1+laC9tm9680/2tk1/uq6Wtm96m0jtrlUn9GsSK7L6HcaZvs
PpjWb1Ue9cu8RuqF82n1J2tl9+603jdU+BxI53HjwucuOosZFa6p1B/uGq7l
dDbXMVxjq5fbKVyX6lxv/3D9rDOOzuGaUOd6HcK1us4BDwjX1eoJtw/X5+oV
twjXMzp3aBmui3R2sHe4ttHZxH7h+l/nLK3CNYDOFCZkn3lpPz0Mn1TmNX5I
di9R67pduKegs5h9w/0CndG0Ddfh6p3uE+41qOfcOlxXqGfbJlxXqBbYK1xf
6eyjcbh/p7ObRuH+nc5KRoTrf/W3DwnX/OqNHxquXdUz7xKuh3V2OTzcX1B/
fli4jlIf+OBwf0F9+MPCdZT6+SPDPQj1ww8M19s6n20e7qfofKdZuM+iM6b6
4VpUPfAG4dpS5wgNw3WpzhqahHs0OntqGu5v6lxpt3AfU2dPu4d7NDoD2jNc
i+rcZ49wjaqzpIrsnpX2l0rZ/SXtR9pXlZ8XFe/C56A6Z6+T3XNTLfBfhXsK
OrfdNlzz6wy9VvgMVWfo1cNnsTp/rx0+p9T5+KYK90R0Llye3bPSnrixwj0L
nf/WDJ/L6vy9mN3L0t5XObt/qH1tu3A/QufCObs3qD00ZffEtA/+HxnA8oc=

               "]], 
              Polygon3DBox[CompressedData["
1:eJwtmnW8XNUVhd9kzss9EyAhJAQIEOJYgODuEtzdCe7uGhxKcXe3UqxClRaX
UlxKcXd3SKDf1zX/lH6/c2fyZu7de6+19oyYuPf6e/Xp6ek5l/8p/HdI09Mz
c6un5yXgkH49Pe1OT8/98CnwMnA/+F/wmfDKcIUfgU+HV4QH8foZ4f/AB8J/
g5+GD+rt6VkSvhN+CN4DXhj+B/wsfAi8NNzh/R6Fz+D1K8HrcL4DPIDzXngq
zh+Dz+J8Ffg/lfeGl4MHwetx/U7wQK5v4LuaXL8vvAT8PjwFvgLeBn4T/g6+
CN4MfhJ+Bz4ZXh1+Df4aPh/eGH4L/h6+GN4cfhv+Ab4E3gL+AP4ZvhLeFn4X
/gm+DN4K7tvJ5z+Nv3d5uBd+EP4VvBz8Otd/A1/A9ZvAb8DfwhfCm8LvwZPh
y+Gt4YbXPwz/mtevAP+xyf3Zh/PF4cL5A/CpnC8LP875W/CJnK8K/67J6/eE
F4F7uP4ez0vu1x+a3I+9OV8MbnF+L3wS50vBH3L+C3wV59vBU7gff4aPLrn+
R/iP8BEl93sA1w+Gn4X3hX/m/C/wMSV/b3/OB8HPwPvAC8NLwN/Dp8MzwrPC
r8CHwRfCl8Eb8e/fDV8EXw5vDP8Dnty3p6cPfB/XT4SHcj4b/Bp8BHwxfAW8
Cdf/E14UXgr+kfMz4d83eb734nxReBF4SfgHzs+A14QnwtNw3oYfgl/28/Sm
Pvrwfd3n81TyfD/G+ZvwCZxPgP8JPwcf2pv6uht+Bj64N9/vZL6fP8FHlfz7
P8F3wUeW3K+BXD8Efh7eH14X3hGeltf3haeFp4ef43w/eG14e7g/5wW+B34e
Pqw3z8eD8Evev97U38PwK/Ck3tRbG67wI7zfLvA78I/wpZxvCT8Fv2u/gNeA
X4W/gs+DN4Kva3K/t4Xnha9t8rxsA88Db9eknofDU8PXNPn8W8Pj4InwwfAI
eBr4eviv8HbwfPA28AHwMLgffA58I7wOPAo+C74eXgseAR8Bnw0vAU8PHwOf
By8NzwgfDZ8LLwXPAB8FnwMvCQ+xX8H94Sf4PvaCz4ZvgNfmfCR8a5P7vws8
P3xLk/rZGR4PbwnvB88CV3hv+Hh4Hnha+Ar49/Dm8BzwHvCx8Nxwf/hy+Hfw
ZvDs9gN4avjf/D17wPvAJ8Dzcj4Q3hc+EZ4Png7eCz4OHgcPgM+Fb4LXhUf7
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
xzNb0+Pp9fRk7ob0ZHozNZdZt5rxnXYyP7WkGdNn7ewYzJ7MhD9pR9OZFZuB
fdTODsNszEz0rXYyO7NSM7UX29mRmLWZsb/Rzk7N7N0M7qV2Mn2zOTPRF7rf
j1mpGe1r7WRmZrdmwB+0k7GZDbsDea77/fr8/D+TL/EMZvVqbLW2GtHsUc2n
9nu1+zyqCd9rZ0eoVtRj6DX0IO7K3AHd0a0H60lPojfR47zefX69vwPhKX1T
f9bP5/BHTTLkV9rZabS69eO//1q3vsyErur+PdaTO4mzuv3FejMDMgsyszGr
dQdzZrffuJvR07irdKel11Ezq531QGaxZlRmVXoQs1gzKrMqPZNZrpmW2ZaZ
k1mzmZHZkZ7JLNhMdlK339zV7XfHdvuF/c+dmrs1dwDuRt35uFs1k3YX5M7F
3ac7PHcxZk5XdvuJWbc7Gnd5ZtrubvRs7g7dKerl9HTuFt3p6fXcIbmrcwfh
bskdlLsoM2h3r3osd4fuuPReZlq1ZOdm1mVm0bckUzDLMEMzSzNDM8vW401V
4nH0fgvUzD5ntrN70ZrZo2ZRuywGH9PKTHI2zVXj9xcq8VuL1GgbZ5qzbaGa
2efMd/YvWDP7nbHO2rlrtMvCJXnFwjWz0Jnp7FwWPrOVmehsnL9GS6iR1Erz
1GgTNYxa5scms8cZpLb4qUmeqqZQW/wAD2+lxq31eWu0nBpHrTNDjV8eUpK3
jIf3aWXGO+tnqslXZyzZH46r0U5qMLXYfDVaQI2oVnwYXq+VHmuvnbMm/1iw
JH8dWpM/zlSyrxxdkx/MUZLfzg5vC89dkq+NqskTZi/JN+eo6c32aPPglWq0
oRpNrTa2Jt+YqySPG1OTt8xZknc+WjNr7OH28uVrtKEaUC24Wo0WViOrlVeH
b29FI6uVx3YyG+0Z9o4RNfnTmJI8ebaavHlUiV8fVtPL7en61Zlr8sKhJf56
lpo8ceaSvGxWeF14lpJ8eUwnXkUPo5cZWePvx5bkG8Nr/P/okrxgcpM87+t2
9qeP1cxOZ46z5+cm+d637ewnemry4e/b2b/0r9HOamq19Qo1WlcNrZY2k2xK
MjqzyqZm1jvz3Rf0hcfb29vZVw+oqTU1udp8mhqtbs1au4Nr8o1BJfleqcnD
JrezL5++Jg8ZXJIfdmryxFKSV05V87dY89b+ujVaTo2n1lunRpuoUdR2G9b0
bnu4Wmjqmt7hZ/KzrQc/2YomVBuqofX+m/ZGW2/A+evwNSX7l341vaa3ZJ9R
a/LKdsk+Y0jNvmH6knxzUI1WUbOYX05bk5fak+xNnzaZlc5UZ+snTWarM9PZ
+XGT2elMdDZ+1mT2OGOdtd82mdXOUGdpn5r9zo/t/D7m+yaz3hnvrP+lSd78
XTu/f5nSZD/zTTv7+e+aaAE1gFrg8yaz2pnn7PuyiRZw5jv7e2vyyint5EHT
wcvB05TklwNr9idTl+Sd7Zr87ad29mkz1uwzZij5/cQXTbSEGkGt8E0TbeBM
d7Z/3WS2q2nUNl810TZqFLVKqyb/+6Gd/aZ6cURXT6oHvYfXdOe1uzVrdlRX
f5m9PV2j3dSkalP1vnpdPa++f7bGC5ghmCU8V5MlmIGYhTxeo+3UbGo3n2mf
bT+zvw1Zs0Zbq9HV6k/VaE01o9rRe+a98zP4W6cna7SgmlRtao1Za37n/lbE
79Dv0nvurtKeM7KrN9XHa9TMdme8XsOeb+/3GTV7955576xBsz1rztqzRs3y
l6zxgnoyvdna8D9b8QR6g+drsh8zH7OfZ+B9W/FMeqcnarSrmlZta81b+9aE
Wb/3yHtlT3I3vVSNd9SD6kWtMWvNHuAu0R5gL7Dm3GVYc9aePcnd4tI1XlYP
qhe15qw9/cD4rl/RH+gX9F8+kz6b1qTZvM+sz67PrFn84jXeU0+uN7fn2fv0
b/o/e6i91Jpyt/1vrt+uFY2v1l+mxuvqsfXa9mh7tTPb375Yc9aePdzfytxd
oz3VoHqNe+D5W/Esehdr1tq1p/tbNnu6vd0adhe9RI131jPrnR+s8U56JL3S
QzWf3e9Ar7RWjbfT8+n9lqvJRsxkzGac0c5qZ/KErl+xNqwR/cyqNdmSGZFZ
kTPaWa2f089Y09a2msPfSjnTne3ONHeZagy1hj3A3y79P8MvmbFm+2oCtYEz
3l2cM9PZ6Ux197Qy//6VrWRGZkdqDrWHmsFdsDPaWe3MdBe8Yk22Y6ZjtqMm
UZuoefxtlTPaWa1mMRufUJN9mXGZdakB1YJqHLP4/2u6Eo3obuqRGq+px9Xr
3g8v34oH1gurUdQqahR3iQ/UeGM9rl53lZoszYzNrM0Z4ixxJro7UyOoFdQQ
7qbVOGodNZW73n/VeFU9tF5ajaBWUKO4a/gfPFDwbQ==
               "]], 
              Polygon3DBox[CompressedData["
1:eJwl1mWYVVUbBuCDDMMMjeQwQzN0d3e30g1KtxLSIam0pEqKASqh2AEI2Eko
XdIlIt3fva7vx/vjua93n7X3PmuvtXI/M+TpwU9EIpE9KlmomEjkWFQkciVp
JJIzSSSSLXkkkoQdYmdYPMvMUrHz7A4rzBJZSnaO3WaFWD72iA31w/P4T+xj
loKdlW/pK8jysqSxkchofcv4PraNRek7Kl/Sl4PFhT52hF1g2VlWlppdYHdZ
EZafRbPj7CrLxeJZMmOMNcZr/C/2DYvRd1q+oS8/y83SskvsPivGCrI07CK7
x4qyAiwdu8wesOKsEGvNFhpjLT/BDrMKrBCrxIaw/iw5OyVfd20iy8Vi2Rl2
kxVgeVh6doU9ZCVYYfYk+4c9YiVZkfC8nm2cMV7n+9mOMAYbz5azA2wne4KN
YkvZXrY1/L/sBbaE7WFfsQgbyRaz3ezr8H+wMexV9ifbzjK6lxtylKrASrPH
7Dl989nP7JMwLjssn3PPCSwLK88K6qvIB7N+7Ib6WT6tLyWLlkvpy6uvDO/H
erIE9kBOpWqwyiw7eyinVjVZFVaa5XNtWdaf9WLZ2D05harGKrIyLFFfOTaA
9WaZ2S05WlViZVlBlkFfXtaetWIlWTwrwrqzTqwsy8/Ks4GsDyvHCrAKbBDr
ywqxjCwf68Baszh2V45VVVkFloXdlpOryqwcy8diXRvHmrGGLDeLZplZY1aP
5WRRLCNryOqwAiwVS2AtWROWld2RY1QVVp4lshT6srHmrBHLy2JYVtaUNWDx
7L6cUlVnlVh+llJfPGvBGrM8LDnLwpqw+iwHS8oysAasdph/7KB8yjzIxjKx
wiyTvkTekbVhJVg2Vph1Yx3ZdfWT/LdrU7Bk8k31CzvLUrHkYZ6qA+wki2MZ
5ctqZ1iDWFL2KNp7Z7+xiywNi5WvqF1hHWFR7LG+q+w7dohFsyTyv+p7doQl
Z0/I19QP7BiLYUnl/9SPYc1gsSxK/kd9G75dloxF5KKeN4vnLcA7s3bsgfpT
PqwvM0sf1l21nx1nWVkGuYhrM7s2P+/E2rJiLCsryLqw9qw4i2OFWFfWgWVi
N+VkqiIrwx6qv+SjxsjCnpRvqV/ZeZaaxch31R/sH5aOpZTvq33sIMvE0sn3
1N6wfrGMLK18R/3OLrO0LIWcwb1cZ0lVeVYqrOPWpgnueUX4TbaLtdQ3nE1l
29gXYVw2iM1m37MP2UFWirVkM9jz4X2yYqwpm8IGh/tlRVkT9iIbGOYUS89K
sl6sZVi/WDpWgvVkLcJ8ZGlZcfYsax6elRVhjdlkNii8J5aTVWfDWbfwjllx
1oxNZUPCO2E5WDU2jHUN84elYcXYM6xpmGcsNSvKerBmYS6z7Kwqe551Dt8B
K8lasOnsOdaQtWG92Er2KmvOerORbDN7jzVjvdgItom9y5qynmw428jWh7nM
Hss51NOsavg2WBJ9uVhrViN8QzH/P4zkZK1Y9fCtsUdydvUUq8Yas3b6+rDV
7PUw51kJ1pxNY0NZI9aW9War2GusPmvFnmXL2VLWgLVmPdkKtizMZZbAqrDn
WBe2m+ViNdgI1p3tYblZTTaS9WAnWE3WjS1lL7KTrBbrzpaxKew0a8L6s7Vs
LjvOarCubAmbzI6x6qwLW8wmsaOsGuvMFrGJ7BRrzPqxN9jssKaxa3I6VYcV
Z2dYU30D2JtsHtvB/pXTqtqsKPubNdLXl61hc9g37KqcRtVixdhZ1kzfQPYW
m8/OseZsEHubLWCXWHv2AvuArWCHWGXWgS1g49lhVoV1ZK+wcWw7OylHVGmW
ENZY1kXfOPYJW8O2sRPyY+tGKZadNWHP6hvGN7B17AiryjqxhWwCO89asMHs
HfZK2BdYBzaKfciWs4vsKTaUrWeLwr7AOrLRbAtbyS6wlmwIW8cWhrWddWJj
2EdsFavMyrK6bCwbyaqwcqweG8deYFVZeVafjWej2JPWv1nsXXaO7QnrJJvN
3gvrMdsbzhFsPtsU1lS2n6VnL7P1YX9ku1kqNo29GfZH9itLzaazt8Leyn5h
adgM9nbYq9lvLBtbzD5i/7Ej4WzBFrDN7Ao7wOLYIraFXWNHWVo2k73DTrPf
WTr2ElvHzrA/WGY2j21kl9hfLCObw95nF9i+sG+xuWxD2L/Zn2Gf8f4Gslns
O/ZB2KPYAPYy+5ZtDmcG1odNZ9+wDeFswbqziexz9ia7wXqwSewL9hbLZ9xV
bCt7wM6FvUxff/YS28U2hf2S9WUz2A72Pkvp2slsdTg3sO/ZbX392Ey2k21k
KfRNYqvC3s++C2cBfYPZHPYD28Ji9U1kK8PZhH0b9m59Q9hc9iP7iCXqW822
sYfsPMvLVrKv2X12ltVybV3Wms1mM1hNVoe1YrPYdLaV7Zb/9Q3mZqlZPdZQ
X3s+n81idVkD1o7NYy+zOqw+a8vmspdYbVaPtWFz2ExWjVVgDdgENpq1YMPY
FLaVfc6qs4qsIZvIxrAarBJrxCaxsawSK8PqsDFsBHuKjWDT2Hb2JXuaTWEL
2e/sJ9aKTWWL2B/sZ5bg/S1ln7Ab7DjLzpaxT9lNdoLFsyXsY3adHWN52Ar2
FbvHzrBc7HX2BbvDTrH8bA3bzh6xCywHe5V9xm6xkyw3W86+ZHfZaXbVPXdm
Y9nHbDXLqe819jm7zf5m1/R1ZePZp+wN9h/rxiawz9haVpEVZpXZUDYg3DNL
xjKxRqwu+x/PNwbP
               "]]}], Lighting -> {{"Ambient", 
               RGBColor[
               0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
              "Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {{
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwt0UkuBEAUgOHSrbU2tTZERCSIAyAOgDgAHQegY22KjR3iADgBiQMgDoA4
AOIA5nmeZ74Wi5evVvXnVdVnBtMDOSGEMZMTMVyIhZDiCuu5wWbusJ2H7OYj
+5ibF8IwKzjBRs6wlfPs5BJ7uMZ+bnGUe5ziHff173nAh2yHjzziE4/5zBO+
8JSvPOMbz/nOC37wkp+84hev+c0b/vA2Ev4WntW/dZzkLke4yQxXmeYiOzjH
Fk6zgeMs4xAj7OW9d+nK7sM2brOJ66zjMktZq59kDUtYzWJWsYiVLGQ5C5hi
gknms5hxFlI6JOjqEGcuY4wyysj///4Coco85g==
            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0TkoB3AYBuDf330fsxSzFLMUsxRWKaxyjZJilmKWYpYi980shSS5QpKQ
3Pf1yPD19C7fW9+XW99c1RQJIbSZregQIsJXXAiZTI0PIZfZLGQ+S1nMSpaz
jjVsZSO72ME+9nCIAxzjCFe5yE2u84SHvON4TAj3nOADJ/nIKT5xms+c4Qtn
+co5vnGe71zgx18PP7nELy7zmyv84SpDVAhX+m/lfR5zjRt/+7jCYY6yn4Ps
Zi/b2ckGtrCatSxjBYtYwjwWMIs5TGYGb9w7nddM4yVTecEUnjOZZ0ziKRN5
zAQeMZ4HjOMeY7nLGO4wmtuMivz/9xcKgUg1
            "]]}, {
           GrayLevel[0.2], 
           
           Line3DBox[{1444, 753, 1443, 2448, 1683, 1445, 2449, 1684, 1446, 
            2450, 1685, 1447, 2451, 1686, 1448, 2452, 1687, 1449, 2453, 1688, 
            1450, 2454, 1689, 1451, 2455, 1690, 1452, 2456, 1691, 1453, 2457, 
            1692, 1454, 2458, 1693, 1455, 2459, 1694, 1456, 2460, 1695, 1457, 
            2461, 1696, 1458}], 
           
           Line3DBox[{1460, 2133, 2343, 1459, 769, 1461, 2462, 1697, 1462, 
            2463, 1698, 1463, 2464, 1699, 1464, 2465, 1700, 1465, 2466, 1701, 
            1466, 2467, 1702, 1467, 2468, 1703, 1468, 2469, 1704, 1469, 2470, 
            1705, 1470, 2471, 1706, 1471, 2472, 1707, 1472, 2473, 1708, 1473, 
            2474, 1709, 1474}], 
           
           Line3DBox[{1476, 2134, 2344, 1475, 2135, 2345, 1477, 785, 1478, 
            2475, 1710, 1479, 2476, 1711, 1480, 2477, 1712, 1481, 2478, 1713, 
            1482, 2479, 1714, 1483, 2480, 1715, 1484, 2481, 1716, 1485, 2482, 
            1717, 1486, 2483, 1718, 1487, 2484, 1719, 1488, 2485, 1720, 1489, 
            2486, 1721, 1490}], 
           
           Line3DBox[{1492, 2136, 2346, 1491, 2137, 2347, 1493, 2138, 2348, 
            1494, 801, 1495, 2487, 1722, 1496, 2488, 1723, 1497, 2489, 1724, 
            1498, 2490, 1725, 1499, 2491, 1726, 1500, 2492, 1727, 1501, 2493, 
            1728, 1502, 2494, 1729, 1503, 2495, 1730, 1504, 2496, 1731, 1505, 
            2497, 1732, 1506}], 
           
           Line3DBox[{1508, 2139, 2349, 1507, 2140, 2350, 1509, 2141, 2351, 
            1510, 2142, 2352, 1511, 817, 1512, 2498, 1733, 1513, 2499, 1734, 
            1514, 2500, 1735, 1515, 2501, 1736, 1516, 2502, 1737, 1517, 2503, 
            1738, 1518, 2504, 1739, 1519, 2505, 1740, 1520, 2506, 1741, 1521, 
            2507, 1742, 1522}], 
           
           Line3DBox[{1524, 2143, 2353, 1523, 2144, 2354, 1525, 2145, 2355, 
            1526, 2146, 2356, 1527, 2147, 2357, 1528, 833, 1529, 2508, 1743, 
            1530, 2509, 1744, 1531, 2510, 1745, 1532, 2511, 1746, 1533, 2512, 
            1747, 1534, 2513, 1748, 1535, 2514, 1749, 1536, 2515, 1750, 1537, 
            2516, 1751, 1538}], 
           
           Line3DBox[{1540, 2148, 2358, 1539, 2149, 2359, 1541, 2150, 2360, 
            1542, 2151, 2361, 1543, 2152, 2362, 1544, 2153, 2363, 1545, 849, 
            1546, 2517, 1752, 1547, 2518, 1753, 1548, 2519, 1754, 1549, 2520, 
            1755, 1550, 2521, 1756, 1551, 2522, 1757, 1552, 2523, 1758, 1553, 
            2524, 1759, 1554}], 
           
           Line3DBox[{1556, 2154, 2364, 1555, 2155, 2365, 1557, 2156, 2366, 
            1558, 2157, 2367, 1559, 2158, 2368, 1560, 2159, 2369, 1561, 2160, 
            2370, 1562, 865, 1563, 2525, 1760, 1564, 2526, 1761, 1565, 2527, 
            1762, 1566, 2528, 1763, 1567, 2529, 1764, 1568, 2530, 1765, 1569, 
            2531, 1766, 1570}], 
           
           Line3DBox[{1572, 2161, 2371, 1571, 2162, 2372, 1573, 2163, 2373, 
            1574, 2164, 2374, 1575, 2165, 2375, 1576, 2166, 2376, 1577, 2167, 
            2377, 1578, 2168, 2378, 1579, 881, 1580, 2532, 1767, 1581, 2533, 
            1768, 1582, 2534, 1769, 1583, 2535, 1770, 1584, 2536, 1771, 1585, 
            2537, 1772, 1586}], 
           
           Line3DBox[{1588, 2169, 2379, 1587, 2170, 2380, 1589, 2171, 2381, 
            1590, 2172, 2382, 1591, 2173, 2383, 1592, 2174, 2384, 1593, 2175, 
            2385, 1594, 2176, 2386, 1595, 2177, 2387, 1596, 897, 1597, 2538, 
            1773, 1598, 2539, 1774, 1599, 2540, 1775, 1600, 2541, 1776, 1601, 
            2542, 1777, 1602}], 
           
           Line3DBox[{1604, 2178, 2388, 1603, 2179, 2389, 1605, 2180, 2390, 
            1606, 2181, 2391, 1607, 2182, 2392, 1608, 2183, 2393, 1609, 2184, 
            2394, 1610, 2185, 2395, 1611, 2186, 2396, 1612, 2187, 2397, 1613, 
            913, 1614, 2543, 1778, 1615, 2544, 1779, 1616, 2545, 1780, 1617, 
            2546, 1781, 1618}], 
           
           Line3DBox[{1620, 2188, 2398, 1619, 2189, 2399, 1621, 2190, 2400, 
            1622, 2191, 2401, 1623, 2192, 2402, 1624, 2193, 2403, 1625, 2194, 
            2404, 1626, 2195, 2405, 1627, 2196, 2406, 1628, 2197, 2407, 1629, 
            2198, 2408, 1630, 929, 1631, 2547, 1782, 1632, 2548, 1783, 1633, 
            2549, 1784, 1634}], 
           
           Line3DBox[{1636, 2199, 2409, 1635, 2200, 2410, 1637, 2201, 2411, 
            1638, 2202, 2412, 1639, 2203, 2413, 1640, 2204, 2414, 1641, 2205, 
            2415, 1642, 2206, 2416, 1643, 2207, 2417, 1644, 2208, 2418, 1645, 
            2209, 2419, 1646, 2210, 2420, 1647, 945, 1648, 2550, 1785, 1649, 
            2551, 1786, 1650}], 
           
           Line3DBox[{1652, 2211, 2421, 1651, 2212, 2422, 1653, 2213, 2423, 
            1654, 2214, 2424, 1655, 2215, 2425, 1656, 2216, 2426, 1657, 2217, 
            2427, 1658, 2218, 2428, 1659, 2219, 2429, 1660, 2220, 2430, 1661, 
            2221, 2431, 1662, 2222, 2432, 1663, 2223, 2433, 1664, 961, 1665, 
            2552, 1787, 1666}], 
           
           Line3DBox[{1668, 2224, 2434, 1667, 2225, 2435, 1669, 2226, 2436, 
            1670, 2227, 2437, 1671, 2228, 2438, 1672, 2229, 2439, 1673, 2230, 
            2440, 1674, 2231, 2441, 1675, 2232, 2442, 1676, 2233, 2443, 1677, 
            2234, 2444, 1678, 2235, 2445, 1679, 2236, 2446, 1680, 2237, 2447, 
            1681, 977, 1682}], 
           
           Line3DBox[{1789, 1218, 1788, 2658, 2028, 1790, 2659, 2029, 1791, 
            2660, 2030, 1792, 2661, 2031, 1793, 2662, 2032, 1794, 2663, 2033, 
            1795, 2664, 2034, 1796, 2665, 2035, 1797, 2666, 2036, 1798, 2667, 
            2037, 1799, 2668, 2038, 1800, 2669, 2039, 1801, 2670, 2040, 1802, 
            2671, 2041, 1803}], 
           
           Line3DBox[{1805, 2238, 2553, 1804, 1234, 1806, 2672, 2042, 1807, 
            2673, 2043, 1808, 2674, 2044, 1809, 2675, 2045, 1810, 2676, 2046, 
            1811, 2677, 2047, 1812, 2678, 2048, 1813, 2679, 2049, 1814, 2680, 
            2050, 1815, 2681, 2051, 1816, 2682, 2052, 1817, 2683, 2053, 1818, 
            2684, 2054, 1819}], 
           
           Line3DBox[{1821, 2239, 2554, 1820, 2240, 2555, 1822, 1250, 1823, 
            2685, 2055, 1824, 2686, 2056, 1825, 2687, 2057, 1826, 2688, 2058, 
            1827, 2689, 2059, 1828, 2690, 2060, 1829, 2691, 2061, 1830, 2692, 
            2062, 1831, 2693, 2063, 1832, 2694, 2064, 1833, 2695, 2065, 1834, 
            2696, 2066, 1835}], 
           
           Line3DBox[{1837, 2241, 2556, 1836, 2242, 2557, 1838, 2243, 2558, 
            1839, 1266, 1840, 2697, 2067, 1841, 2698, 2068, 1842, 2699, 2069, 
            1843, 2700, 2070, 1844, 2701, 2071, 1845, 2702, 2072, 1846, 2703, 
            2073, 1847, 2704, 2074, 1848, 2705, 2075, 1849, 2706, 2076, 1850, 
            2707, 2077, 1851}], 
           
           Line3DBox[{1853, 2244, 2559, 1852, 2245, 2560, 1854, 2246, 2561, 
            1855, 2247, 2562, 1856, 1282, 1857, 2708, 2078, 1858, 2709, 2079, 
            1859, 2710, 2080, 1860, 2711, 2081, 1861, 2712, 2082, 1862, 2713, 
            2083, 1863, 2714, 2084, 1864, 2715, 2085, 1865, 2716, 2086, 1866, 
            2717, 2087, 1867}], 
           
           Line3DBox[{1869, 2248, 2563, 1868, 2249, 2564, 1870, 2250, 2565, 
            1871, 2251, 2566, 1872, 2252, 2567, 1873, 1298, 1874, 2718, 2088, 
            1875, 2719, 2089, 1876, 2720, 2090, 1877, 2721, 2091, 1878, 2722, 
            2092, 1879, 2723, 2093, 1880, 2724, 2094, 1881, 2725, 2095, 1882, 
            2726, 2096, 1883}], 
           
           Line3DBox[{1885, 2253, 2568, 1884, 2254, 2569, 1886, 2255, 2570, 
            1887, 2256, 2571, 1888, 2257, 2572, 1889, 2258, 2573, 1890, 1314, 
            1891, 2727, 2097, 1892, 2728, 2098, 1893, 2729, 2099, 1894, 2730, 
            2100, 1895, 2731, 2101, 1896, 2732, 2102, 1897, 2733, 2103, 1898, 
            2734, 2104, 1899}], 
           
           Line3DBox[{1901, 2259, 2574, 1900, 2260, 2575, 1902, 2261, 2576, 
            1903, 2262, 2577, 1904, 2263, 2578, 1905, 2264, 2579, 1906, 2265, 
            2580, 1907, 1330, 1908, 2735, 2105, 1909, 2736, 2106, 1910, 2737, 
            2107, 1911, 2738, 2108, 1912, 2739, 2109, 1913, 2740, 2110, 1914, 
            2741, 2111, 1915}], 
           
           Line3DBox[{1917, 2266, 2581, 1916, 2267, 2582, 1918, 2268, 2583, 
            1919, 2269, 2584, 1920, 2270, 2585, 1921, 2271, 2586, 1922, 2272, 
            2587, 1923, 2273, 2588, 1924, 1346, 1925, 2742, 2112, 1926, 2743, 
            2113, 1927, 2744, 2114, 1928, 2745, 2115, 1929, 2746, 2116, 1930, 
            2747, 2117, 1931}], 
           
           Line3DBox[{1933, 2274, 2589, 1932, 2275, 2590, 1934, 2276, 2591, 
            1935, 2277, 2592, 1936, 2278, 2593, 1937, 2279, 2594, 1938, 2280, 
            2595, 1939, 2281, 2596, 1940, 2282, 2597, 1941, 1362, 1942, 2748, 
            2118, 1943, 2749, 2119, 1944, 2750, 2120, 1945, 2751, 2121, 1946, 
            2752, 2122, 1947}], 
           
           Line3DBox[{1949, 2283, 2598, 1948, 2284, 2599, 1950, 2285, 2600, 
            1951, 2286, 2601, 1952, 2287, 2602, 1953, 2288, 2603, 1954, 2289, 
            2604, 1955, 2290, 2605, 1956, 2291, 2606, 1957, 2292, 2607, 1958, 
            1378, 1959, 2753, 2123, 1960, 2754, 2124, 1961, 2755, 2125, 1962, 
            2756, 2126, 1963}], 
           
           Line3DBox[{1965, 2293, 2608, 1964, 2294, 2609, 1966, 2295, 2610, 
            1967, 2296, 2611, 1968, 2297, 2612, 1969, 2298, 2613, 1970, 2299, 
            2614, 1971, 2300, 2615, 1972, 2301, 2616, 1973, 2302, 2617, 1974, 
            2303, 2618, 1975, 1394, 1976, 2757, 2127, 1977, 2758, 2128, 1978, 
            2759, 2129, 1979}], 
           
           Line3DBox[{1981, 2304, 2619, 1980, 2305, 2620, 1982, 2306, 2621, 
            1983, 2307, 2622, 1984, 2308, 2623, 1985, 2309, 2624, 1986, 2310, 
            2625, 1987, 2311, 2626, 1988, 2312, 2627, 1989, 2313, 2628, 1990, 
            2314, 2629, 1991, 2315, 2630, 1992, 1410, 1993, 2760, 2130, 1994, 
            2761, 2131, 1995}], 
           
           Line3DBox[{1997, 2316, 2631, 1996, 2317, 2632, 1998, 2318, 2633, 
            1999, 2319, 2634, 2000, 2320, 2635, 2001, 2321, 2636, 2002, 2322, 
            2637, 2003, 2323, 2638, 2004, 2324, 2639, 2005, 2325, 2640, 2006, 
            2326, 2641, 2007, 2327, 2642, 2008, 2328, 2643, 2009, 1426, 2010, 
            2762, 2132, 2011}], 
           
           Line3DBox[{2013, 2329, 2644, 2012, 2330, 2645, 2014, 2331, 2646, 
            2015, 2332, 2647, 2016, 2333, 2648, 2017, 2334, 2649, 2018, 2335, 
            2650, 2019, 2336, 2651, 2020, 2337, 2652, 2021, 2338, 2653, 2022, 
            2339, 2654, 2023, 2340, 2655, 2024, 2341, 2656, 2025, 2342, 2657, 
            2026, 1442, 2027}]}, {
           GrayLevel[0.2], 
           
           Line3DBox[{513, 753, 514, 2343, 768, 543, 2344, 783, 558, 2346, 
            798, 573, 2349, 813, 588, 2353, 828, 603, 2358, 843, 618, 2364, 
            858, 633, 2371, 873, 648, 2379, 888, 663, 2388, 903, 678, 2398, 
            918, 693, 2409, 933, 708, 2421, 948, 723, 2434, 963, 738}], 
           
           Line3DBox[{515, 754, 2448, 516, 769, 544, 2345, 784, 559, 2347, 
            799, 574, 2350, 814, 589, 2354, 829, 604, 2359, 844, 619, 2365, 
            859, 634, 2372, 874, 649, 2380, 889, 664, 2389, 904, 679, 2399, 
            919, 694, 2410, 934, 709, 2422, 949, 724, 2435, 964, 739}], 
           
           Line3DBox[{517, 755, 2449, 518, 770, 2462, 545, 785, 560, 2348, 
            800, 575, 2351, 815, 590, 2355, 830, 605, 2360, 845, 620, 2366, 
            860, 635, 2373, 875, 650, 2381, 890, 665, 2390, 905, 680, 2400, 
            920, 695, 2411, 935, 710, 2423, 950, 725, 2436, 965, 740}], 
           
           Line3DBox[{519, 756, 2450, 520, 771, 2463, 546, 786, 2475, 561, 
            801, 576, 2352, 816, 591, 2356, 831, 606, 2361, 846, 621, 2367, 
            861, 636, 2374, 876, 651, 2382, 891, 666, 2391, 906, 681, 2401, 
            921, 696, 2412, 936, 711, 2424, 951, 726, 2437, 966, 741}], 
           
           Line3DBox[{521, 757, 2451, 522, 772, 2464, 547, 787, 2476, 562, 
            802, 2487, 577, 817, 592, 2357, 832, 607, 2362, 847, 622, 2368, 
            862, 637, 2375, 877, 652, 2383, 892, 667, 2392, 907, 682, 2402, 
            922, 697, 2413, 937, 712, 2425, 952, 727, 2438, 967, 742}], 
           
           Line3DBox[{523, 758, 2452, 524, 773, 2465, 548, 788, 2477, 563, 
            803, 2488, 578, 818, 2498, 593, 833, 608, 2363, 848, 623, 2369, 
            863, 638, 2376, 878, 653, 2384, 893, 668, 2393, 908, 683, 2403, 
            923, 698, 2414, 938, 713, 2426, 953, 728, 2439, 968, 743}], 
           
           Line3DBox[{525, 759, 2453, 526, 774, 2466, 549, 789, 2478, 564, 
            804, 2489, 579, 819, 2499, 594, 834, 2508, 609, 849, 624, 2370, 
            864, 639, 2377, 879, 654, 2385, 894, 669, 2394, 909, 684, 2404, 
            924, 699, 2415, 939, 714, 2427, 954, 729, 2440, 969, 744}], 
           
           Line3DBox[{527, 760, 2454, 528, 775, 2467, 550, 790, 2479, 565, 
            805, 2490, 580, 820, 2500, 595, 835, 2509, 610, 850, 2517, 625, 
            865, 640, 2378, 880, 655, 2386, 895, 670, 2395, 910, 685, 2405, 
            925, 700, 2416, 940, 715, 2428, 955, 730, 2441, 970, 745}], 
           
           Line3DBox[{529, 761, 2455, 530, 776, 2468, 551, 791, 2480, 566, 
            806, 2491, 581, 821, 2501, 596, 836, 2510, 611, 851, 2518, 626, 
            866, 2525, 641, 881, 656, 2387, 896, 671, 2396, 911, 686, 2406, 
            926, 701, 2417, 941, 716, 2429, 956, 731, 2442, 971, 746}], 
           
           Line3DBox[{531, 762, 2456, 532, 777, 2469, 552, 792, 2481, 567, 
            807, 2492, 582, 822, 2502, 597, 837, 2511, 612, 852, 2519, 627, 
            867, 2526, 642, 882, 2532, 657, 897, 672, 2397, 912, 687, 2407, 
            927, 702, 2418, 942, 717, 2430, 957, 732, 2443, 972, 747}], 
           
           Line3DBox[{533, 763, 2457, 534, 778, 2470, 553, 793, 2482, 568, 
            808, 2493, 583, 823, 2503, 598, 838, 2512, 613, 853, 2520, 628, 
            868, 2527, 643, 883, 2533, 658, 898, 2538, 673, 913, 688, 2408, 
            928, 703, 2419, 943, 718, 2431, 958, 733, 2444, 973, 748}], 
           
           Line3DBox[{535, 764, 2458, 536, 779, 2471, 554, 794, 2483, 569, 
            809, 2494, 584, 824, 2504, 599, 839, 2513, 614, 854, 2521, 629, 
            869, 2528, 644, 884, 2534, 659, 899, 2539, 674, 914, 2543, 689, 
            929, 704, 2420, 944, 719, 2432, 959, 734, 2445, 974, 749}], 
           
           Line3DBox[{537, 765, 2459, 538, 780, 2472, 555, 795, 2484, 570, 
            810, 2495, 585, 825, 2505, 600, 840, 2514, 615, 855, 2522, 630, 
            870, 2529, 645, 885, 2535, 660, 900, 2540, 675, 915, 2544, 690, 
            930, 2547, 705, 945, 720, 2433, 960, 735, 2446, 975, 750}], 
           
           Line3DBox[{539, 766, 2460, 540, 781, 2473, 556, 796, 2485, 571, 
            811, 2496, 586, 826, 2506, 601, 841, 2515, 616, 856, 2523, 631, 
            871, 2530, 646, 886, 2536, 661, 901, 2541, 676, 916, 2545, 691, 
            931, 2548, 706, 946, 2550, 721, 961, 736, 2447, 976, 751}], 
           Line3DBox[{541, 767, 2461, 542, 782, 2474, 557, 797, 2486, 572, 
            812, 2497, 587, 827, 2507, 602, 842, 2516, 617, 857, 2524, 632, 
            872, 2531, 647, 887, 2537, 662, 902, 2542, 677, 917, 2546, 692, 
            932, 2549, 707, 947, 2551, 722, 962, 2552, 737, 977, 752}], 
           
           Line3DBox[{978, 1218, 979, 2553, 1233, 1008, 2554, 1248, 1023, 
            2556, 1263, 1038, 2559, 1278, 1053, 2563, 1293, 1068, 2568, 1308, 
            1083, 2574, 1323, 1098, 2581, 1338, 1113, 2589, 1353, 1128, 2598, 
            1368, 1143, 2608, 1383, 1158, 2619, 1398, 1173, 2631, 1413, 1188, 
            2644, 1428, 1203}], 
           
           Line3DBox[{980, 1219, 2658, 981, 1234, 1009, 2555, 1249, 1024, 
            2557, 1264, 1039, 2560, 1279, 1054, 2564, 1294, 1069, 2569, 1309, 
            1084, 2575, 1324, 1099, 2582, 1339, 1114, 2590, 1354, 1129, 2599, 
            1369, 1144, 2609, 1384, 1159, 2620, 1399, 1174, 2632, 1414, 1189, 
            2645, 1429, 1204}], 
           
           Line3DBox[{982, 1220, 2659, 983, 1235, 2672, 1010, 1250, 1025, 
            2558, 1265, 1040, 2561, 1280, 1055, 2565, 1295, 1070, 2570, 1310, 
            1085, 2576, 1325, 1100, 2583, 1340, 1115, 2591, 1355, 1130, 2600, 
            1370, 1145, 2610, 1385, 1160, 2621, 1400, 1175, 2633, 1415, 1190, 
            2646, 1430, 1205}], 
           
           Line3DBox[{984, 1221, 2660, 985, 1236, 2673, 1011, 1251, 2685, 
            1026, 1266, 1041, 2562, 1281, 1056, 2566, 1296, 1071, 2571, 1311, 
            1086, 2577, 1326, 1101, 2584, 1341, 1116, 2592, 1356, 1131, 2601, 
            1371, 1146, 2611, 1386, 1161, 2622, 1401, 1176, 2634, 1416, 1191, 
            2647, 1431, 1206}], 
           
           Line3DBox[{986, 1222, 2661, 987, 1237, 2674, 1012, 1252, 2686, 
            1027, 1267, 2697, 1042, 1282, 1057, 2567, 1297, 1072, 2572, 1312, 
            1087, 2578, 1327, 1102, 2585, 1342, 1117, 2593, 1357, 1132, 2602, 
            1372, 1147, 2612, 1387, 1162, 2623, 1402, 1177, 2635, 1417, 1192, 
            2648, 1432, 1207}], 
           
           Line3DBox[{988, 1223, 2662, 989, 1238, 2675, 1013, 1253, 2687, 
            1028, 1268, 2698, 1043, 1283, 2708, 1058, 1298, 1073, 2573, 1313, 
            1088, 2579, 1328, 1103, 2586, 1343, 1118, 2594, 1358, 1133, 2603, 
            1373, 1148, 2613, 1388, 1163, 2624, 1403, 1178, 2636, 1418, 1193, 
            2649, 1433, 1208}], 
           
           Line3DBox[{990, 1224, 2663, 991, 1239, 2676, 1014, 1254, 2688, 
            1029, 1269, 2699, 1044, 1284, 2709, 1059, 1299, 2718, 1074, 1314, 
            1089, 2580, 1329, 1104, 2587, 1344, 1119, 2595, 1359, 1134, 2604, 
            1374, 1149, 2614, 1389, 1164, 2625, 1404, 1179, 2637, 1419, 1194, 
            2650, 1434, 1209}], 
           
           Line3DBox[{992, 1225, 2664, 993, 1240, 2677, 1015, 1255, 2689, 
            1030, 1270, 2700, 1045, 1285, 2710, 1060, 1300, 2719, 1075, 1315, 
            2727, 1090, 1330, 1105, 2588, 1345, 1120, 2596, 1360, 1135, 2605, 
            1375, 1150, 2615, 1390, 1165, 2626, 1405, 1180, 2638, 1420, 1195, 
            2651, 1435, 1210}], 
           
           Line3DBox[{994, 1226, 2665, 995, 1241, 2678, 1016, 1256, 2690, 
            1031, 1271, 2701, 1046, 1286, 2711, 1061, 1301, 2720, 1076, 1316, 
            2728, 1091, 1331, 2735, 1106, 1346, 1121, 2597, 1361, 1136, 2606, 
            1376, 1151, 2616, 1391, 1166, 2627, 1406, 1181, 2639, 1421, 1196, 
            2652, 1436, 1211}], 
           
           Line3DBox[{996, 1227, 2666, 997, 1242, 2679, 1017, 1257, 2691, 
            1032, 1272, 2702, 1047, 1287, 2712, 1062, 1302, 2721, 1077, 1317, 
            2729, 1092, 1332, 2736, 1107, 1347, 2742, 1122, 1362, 1137, 2607, 
            1377, 1152, 2617, 1392, 1167, 2628, 1407, 1182, 2640, 1422, 1197, 
            2653, 1437, 1212}], 
           
           Line3DBox[{998, 1228, 2667, 999, 1243, 2680, 1018, 1258, 2692, 
            1033, 1273, 2703, 1048, 1288, 2713, 1063, 1303, 2722, 1078, 1318, 
            2730, 1093, 1333, 2737, 1108, 1348, 2743, 1123, 1363, 2748, 1138, 
            1378, 1153, 2618, 1393, 1168, 2629, 1408, 1183, 2641, 1423, 1198, 
            2654, 1438, 1213}], 
           
           Line3DBox[{1000, 1229, 2668, 1001, 1244, 2681, 1019, 1259, 2693, 
            1034, 1274, 2704, 1049, 1289, 2714, 1064, 1304, 2723, 1079, 1319, 
            2731, 1094, 1334, 2738, 1109, 1349, 2744, 1124, 1364, 2749, 1139, 
            1379, 2753, 1154, 1394, 1169, 2630, 1409, 1184, 2642, 1424, 1199, 
            2655, 1439, 1214}], 
           
           Line3DBox[{1002, 1230, 2669, 1003, 1245, 2682, 1020, 1260, 2694, 
            1035, 1275, 2705, 1050, 1290, 2715, 1065, 1305, 2724, 1080, 1320, 
            2732, 1095, 1335, 2739, 1110, 1350, 2745, 1125, 1365, 2750, 1140, 
            1380, 2754, 1155, 1395, 2757, 1170, 1410, 1185, 2643, 1425, 1200, 
            2656, 1440, 1215}], 
           
           Line3DBox[{1004, 1231, 2670, 1005, 1246, 2683, 1021, 1261, 2695, 
            1036, 1276, 2706, 1051, 1291, 2716, 1066, 1306, 2725, 1081, 1321, 
            2733, 1096, 1336, 2740, 1111, 1351, 2746, 1126, 1366, 2751, 1141, 
            1381, 2755, 1156, 1396, 2758, 1171, 1411, 2760, 1186, 1426, 1201, 
            2657, 1441, 1216}], 
           
           Line3DBox[{1006, 1232, 2671, 1007, 1247, 2684, 1022, 1262, 2696, 
            1037, 1277, 2707, 1052, 1292, 2717, 1067, 1307, 2726, 1082, 1322, 
            2734, 1097, 1337, 2741, 1112, 1352, 2747, 1127, 1367, 2752, 1142, 
            1382, 2756, 1157, 1397, 2759, 1172, 1412, 2761, 1187, 1427, 2762, 
            1202, 1442, 1217}]}, {}, {}, {}, {}, {}}}, 
        VertexNormals -> CompressedData["
1:eJzs3XdQlUneNn7FNGbFhIKK2TERzIpe5oCIWcwoZsWEioIZFSMmzBEFBcyK
ART9IlFFcs4nB6I5h/fsPt3nV29b/Ha36rVmZp/Zf7p2SpsbvOlzne7PfZ1m
DsvGzjUoU6bM8yplypTTjehQbfkj00z6v8d8TF9wsurZXdFoZDEu7sX5XCrI
HjnapU8BjvTIWuc6JoH4ONTDMm7xgaK///y/+PNl2P9iem+ad9ZLRWzU/30+
H5/HVbE8PtUkifj41vy48f6yRfAPloS4DrpJFP1pkuMmOfVSPF+XZq2F65tO
8XMeRsGlW+cvoRsl1HBgg2/rIvL1X/f//t/L/3Xzd3/YtH6rTbnER4tmNVbu
8FGX+u8Vwv6+H5uPz3Pzhm9QvlMu8XFakMJ1/lU1Chf3bWJ7KBvu5c8V2UFB
bMTv42o4DN2YjoOkiexeEkdtJx+93mZN4f+6+dW/t/R98OMZ7eyckOO5Q0Mu
GZXcAjbKS73/+X3A7wt+P/DrE64XETWqzZ+1kIiPKlXMnsCtJTB2rN3iyOJU
3Fmy8+ktQw0NHfRR9VuWFOH9PJO/xqfROrt7Z0+fVtOHqcvfJpeXIbvxxqTe
NeRUeekUP/f+UmL/HzZ2Q0OOtshEu4Bv+2dtzqNKr1vY2pzQYLWdxqf73gwk
x1dbmzQwADbjFHcu9yn6013/f3r/8980m7QJslfl1lvx3zt+H/D7gt8P/Pr4
9fLrnNgretfvjaXExx5tI93rlCjgYS97QgOuoHbF/Opu9lo6MrR15jlHOVK+
9RnrbPuCrO4anHaYpiSbwsiR80NUCHi7cH/AfCn8tDsf9iY5pWdurDHZUgYf
xXTVsfFSWNWx1tydEEu1cp7FjojT/umu/z+9///j9ZPdB2HsvuD3A78+fr38
Ov/T+Svmttk82iEX7zZFRNzbnkt5n2033riiRqu6JTtqlM1Da7nvu9ujHmFv
ygAUhPz5rv9Xr/9V2O9bFvv9YyP4fcDvC34//KfzLwxKDN91SIahbV6UabVF
TkO2FGu/D5WiQ9Wok/0yZWhrWXLl/ZQYulJE2b9Ha/501/+r13++Lo9k6zRf
n33ZenGbrR983XjD7uPy7L7m9zP/+S5gP2/+cz4VIpnTZdkRHGPjgIfexQu+
lsD18Yqomv3ykGkdvyXPXEuPn310NTFOx/r6fRNLnifR92lVul2ZkU9rCquN
OzEzFx2G1113ykdCTrOi8u5+VZF5P0nHcodysMSu+0rPSilkHpJYeeJJ3Tx5
q0oca0rg0mXIjN2jpBTZv/qodxeUVHWMhf2xspI/3frPX//46yF/HezD1mW+
Thuy9ZmvF3z94OsGv4/5fc3v5wz28+U/b/5zfttl0ImSoTLi47rUTys8smQ4
uW9Dzj2zezBf0zNvZ3E+mT9snv2qhhSNgtoPqLsxih7M6P3b2jsaWp7/ySl/
rRzyLstPTLELwMc2ZsYn1uTTMa3Bg0OJUvTauMVu55unVHDi+5wjiWoaOiCw
08Blf8L1/xfnZ34f8/ua388W7Od7mv28LdjP+c92/X/1/M/Xi45s/ejM1g1+
H/P7ehm7n/9s1/9Xz/9mbF3m6zRfn/l6wdcPvm782a7/r57/+esffz3kr4N8
XebrNF+f/2zX/1fP/3/1+f/q+f+vPn9p9z/fD+W/r3xftLR/L/73+Xx8nr//
/P//ny9tn5/9f2HU7/8TW58g7G/rR2E//O8/X8qfF+9vYf9fP5+w/utHYX0D
W98g5GdiuQP/Zn7+XzM/+z3Rj8L6/9O/F1vfwNY3COubfhTysz43C/mZWO6A
kJ//18zP1iO+PkHIPz/d//w+4PeFkJ9/ul6Wm/WjkJ+J5TsI+RksP0PIz2D5
GcL+P7F9Jgj7/8T2P0jY///TXP9/ev8L+TlYyM/6+0LIz/rrFfKzfhTyM7F8
ByE/89wBYf+f2P4/hP1/Yvv/KGX//w+//v/0/v+P1092H7D8DCE/669XyM//
9vxs/5/Y/j+E/X9i+3kk7P//aa7/V6//LD+D52YhP+vvCyE//9vzs/1/YvvT
EPb/ie2bQtj//9Nc/69e//m6zPb/Sdj/B9v/J2H/H2z/n4T9f7D9fxL2/4nt
/5Ow/09s/x/C/j/fN4Ww/8/38yDs/4Pt/0PY/+f7HxD2//806z9//eOvh8L+
v36dFvb/ia8fwv6//r4W9v/1P29h/18/Cvv/xPb/Iez/831TCPv/xPbzIOz/
830mCPv/f571/xfnZ34f8/ta2P8H2/8nYf//T3P9f/X8z9cLtv8PYf9ff18L
+/9/muv/q+d/tv+vX6eF/X/9+iHs//9prv+vnv/56x9/PRT2//XrdCn7/3/4
9f/V8/9fff6/ev7/q89f2v3P90H576uw///Tvxf/+3w+YT/87z9fyp8vbZ/f
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
Cu+tIQe1ge3xSYpfvj6X9v6itPcRpb1fKG19/tK/xyD31VK66DDIMso2j0bX
O1xhbKQSZ4/MWxzUuYDsNt5Kl9d9RC/mPKpWZrUERk5Nw31lCjK6mOLt7nuP
bJ42XNyirqbU9bm0fF5aDi8tb//q9flX5+fIWy1t/YrldPzds0FmIyV0uvvA
uxE/ZBjbNH2owyAN3ah4LFWjTaWJu6XK2UuleLd4Z/feF1TUOd6x/LaiEGo7
ZM65sB6qv/Pzv8jP5zYPeTvSQE0HZLv7nkMWHW27zSjBUwrDmZrJt47nk8Qr
yKrFnhCCfUhTd1spXlo51VGdV9GpAdnTbDuH4GPjrHER/VV/5+d/kZ+/enTr
bH4sjxa1ntrc7rGcpDnu5VuekeP1AOXVuq3VtPqR7+ETX9JolYtNmNM+GY61
cD+euS+H2q3qu2HGu8e0v9ylr82aFP6dn/9FfjYb2XDxj525JLerMsZ0gYTG
aEZiUpoK95a4+FStpyUPm4zTq1ThtGXQb54tOsixuX9q2XdH5WQQPuF6sxkP
yaHuw03Ghtq/8/O/yM81UzxaTHaS0OL808OeOEupciLyvDsq8aRGUPKih3Jq
Xf67i8+dTJr/MfTKo2lKfJ+kyuhyQUFmxn0/LD8QRtGmSw2NPqj/dPl5WP1n
tWZd172uJ56IG5CcTfOvXyz2iVSj2oIqjorjarpmcXeZ3ZVYojZnU2Z0VaC4
n8kG5x5SKmye3dHxaBY5/Fi4dEZHNeKuvf9w9IiKNsVpW0ZfTqDAHW82FUgU
WPTttw2jNsuobsP5K+O3ZtDB6Nry+CgVvqUYrqm+SUkrv6XZff6URHcNAyJm
bFJi45epuVsfySlMa9fDeEoalaQ+NkkercKlvXdXdLZTUKXCljYv+6SS92TP
Z2VrqlDktTKqdZGCPM82D7nROIXOVSxY1fyZEt22jjm31FROjcvX2Hh0RTqN
6tDcec0+FR5XsjQ6W01FqU0Kk1cnJdKYaR9PKS2U6NvJb4l7jpQiO44a0P9A
JnW/9PHqi68qSKuZ+D9uqCb7jWN3+GyOp9GDz3/y36vAyHeTr207qPt3kvU5
JzmSTcGShpW2TFbjzItrX06+V9PsROcOm+OjactvVhk/flNguuUZ3xcHk4iP
mWbbrJwzC7E40ztFs++M7vupafKpjpwmX3tecOmq7vV69MINNs0eYEfJ9nXf
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
qKHGAc0rNm/tBbdK886V8VX88vXZZLPtCK9rEhpkNHvljz3xSDz3uHNSxXw8
uJ5WdWhZFVnv6hP+rE4Scu5Y9B1ppsQ0ye7dSd1lZPI4tfVElwS8utr2N494
DXyqdXU4c0tB30YuCDQun4aePb/7LnNXwuWLYm2SYTStY2OftpRduLMYP+yt
GwzpK4VsQbVpU3apaNoq2+kGR3LgUtZiz5j2sRhr6h5sniyjenUMC01DNHgy
5nuWv2797N+vdp/KnVKo3ezonVOyVXCf2rvTzFrZdGKE0pXSZPRsSm7vmg+U
KGd1ceiWEVKabz94QIzu7x38vtG/eIwMHUfMDIzvoKBAZ5dn598n09Nlht6p
21S/fH3WbuxibJF6na5PGPTSemoWdl8PqO2UU4g535qb+M5PorFl2llbzpVg
b4depyvc0+LJudcDZi4kKvvp7p5VtlLsGP0tPMsrH5s+NpjzMSaZMp0rHqro
rVsPdtVynX1Mg+e71heNU6io8GvX8BY1pBhk7W84qiAbyoHNfFZrkkjFxmtX
Jm4KDS5EdHFwqw3rk9FO47s2yDOfLF0dRsa2z0Fi4pC0ovR4qvpw6sh2WVrS
xrbbWzZXAj+v7fKz1qlkdrCj/KWxlszMm1avu1CCLZ4vP1q+T6QJt4dYre2n
pRonNDYvukvRxZp+OzYmm7btWnFkvYGa9mwd/+pTK+kvX5+ndYweNUESjMN5
841XNk2nTQcCDCcsLoJ8moX9niOecGwxv9rRj0GwmGZ1qldyCQJU5+4Mckqi
5XI8kdTzoa656aNrORfD9sfzAwUjlqHh2qpNB1rFknKVpHJjoxKsuLFjodlN
3fuXaT65854GQTqkIPymrRpzh1ZppbidT816olXnjEScj7jY4lliDurteW5/
PSuH+Fj7YhuvD1U1qKA+Ua7SiXN4ajJ2ZdE+DY06Mn62eoMCFSt2POr64RbV
2v12+MtwFR2OPpU+zF6FNy5Tu02KuIExd77P+BispIGb609pOk/3fs085pBl
tRfUa3bQFN8zSjqvjXc6vePXr8+/Oj+fqLxhnmdADlWMXGj5raecVlW9EaxN
UqDcVONqe321tKBkxbsf1+PofT/llTcLpBiR45oxzFiju58+3j+aegTubsOf
H/xN+Xd+/hf52d/vottrDyUtXn/D6FtwBjXYbFTQMF0Ot+QOKqPPWjpwq8qc
TfIY8h28cftjUykyendV9opVUvphF7erc4/Rx3nnPt5ZoP47P/+L/Jwetvvg
tz0KSr5Yr2nhGCmV+zZ2pb+9FBr3/A9VUzW0v8/wZfVS4+lxA8RcniiDkek8
n1qpEmrleTx90Ck/LPLfA/v2BX/n53+Rn9+/7dpjnIWUvidqlhxLk9DTN87J
yfWVcErYHbszQEPawKMPaV48rbxgtfP9GRmWW74eadxTRud9DOaTNI48jlft
aldb+3d+/hf5+f66J465+Sm06clJpzkaOVU5M7jeCd3rTscpMz13eamoT+Gq
UbsaJVFh75yK1lsVGBi3T7vtNzW9W94h5lTULCQVHJY/76b60+Vn56DR7Qoj
c4iPV9s+eptopMHFMJXZpjIaMrzjF52SE0Utzl7y/N1WgdRZlqsy1+cSH11N
m94ue0kN103bNpz4XU2h4/O+1fVPIlztUmAZIUfvRpttH0+W0pJafbY7Xs0g
/z1155p7qRFb/VDbAxkqen/jfrrUJYxG/mbaoXyuEilhyuovXHKJjwvyy2d+
8lWjsK/NsdsrldQprGxs/z6ZFBdUq2DHczkGPh/1eGCRjCxur1U+80yhY92y
1JOXq7F4+exsz8NKypBkVTd6+Ygijyyb7jRe998NV8175JxLfKxoOiPulb8a
c1QVLxiuklPLw0NyvXpLKPTwdIOMPXK0WTuyR5a9guR+hf13TEmg9Pf79mxr
qEbg7SE1hndTkG0D281TEu/Q0ZPRh75e0WBAgd2pjha5xEfPLnPdpqaqucsl
5nIhuFywcxYILhfM5UJwuWDnLxBcLjGXC8HlEjs3h+BywVwuBJdL7Dwdgssl
5nIhuFz9KLhcMJcLweWCne9AcLnEXC4El0vM5UJwuWAuF4LLJeZyIbhcMJcL
weXqR8HlEnO5EFwu2PkRBJcL5nIhuFxi5/4QXC4xlwvB5RLzABBcLpjLheBy
9aPgcom5XAguF+x8CoLLBXO5EFwu2LkVhHMrsHMrCOdWYOdWEFwBMVcAwRUQ
cwUQXAGYK4DgCsDOrSC4XGIuF4LLJeZyIbhcMJcLweWCnVtBcAVgrgCCKyDm
CiC4AmKuAIIrADu3gnBuBXZuBcEVgLkCElwBmCsgwRWAuQIIroCYK4DgCsBc
AQRXAOYKILhcMJcLweUSc7kQXC6YyyXB5YK5AhJcAZgrIMEVgLkCCK6AmCuA
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
vlfe/8p9Ke+P5n3SY5lX533H+v5j5qtL+7r/rfPz/lbe58q96EnWR9yP9RNz
/8w/n4l/XhN/Hpz36vKeXe54h7Oe7hmst3s1ey6A90rznmnu2Ev7uv+t8/Oe
XN6by13urnVp9af6+1LBzYCdF6zlNKlmv8pf12tx7qC/9KBlOLwnne6zpZmE
xpmOaPOqfQFaOI58azd7L5xPnmj63fMcDQy5azDmSwnGSS+PnVMmifgoKy6X
/4/zL8mgBQ9GnfClEbeKlvTXzT/zZpn54zdosaLJsw4VWoZj1dGr6z81lVAL
e5tl7h0L8KiPxdmiR3vR/JTb5Scfz9Foz7eFlrr5DwQcL/OPefkYXCWnvEo3
f+GK6HHbjvmS8nDrg9108/vWuTVshm7+Q58+T+7QOhy/xw126Wwqoe89Tmy0
1s3/cdK1yAT3vSg4nr1h1cNzdLlJyuDBuvktd8za9Y95+bhP3Tj9H9efVcll
aA0fX9rd89RqN938C1u87tVQN3+j40OkoyJziI8XvQrdOjfU4Nri8AbFmelY
5r24r4WrggblrvT83l2Jbi7tb3lVS8PCqREOv/dIpIndWl8PX1KI1cfmm3rP
l5LL9HG5+VWu0bgGNw8cfZ4Pywkm3mntcoiPZUMdd+1Zo0HVsS5HjjxNx/QM
m9oN1imoSd403w1WShyYOcn9RJU0RJb73H9A70Sy93dOuK6bv9g/3s3fXkr7
gvo1Of3tKi3wHn8yIS4foasDz03TzcvHoiKDrGTd/D36dxxzUTe/aaW2I+vr
5pdXmR/jopv/Y173lcOqpqFMz6fNuvdKpEtZcRb3dPMvjnt9kHTX38fszvhG
VXXXf/SxbKvu+i8+v3whpr3u58LGeq+nKj46a7B/1IdzIdlR9KlPu649y2jo
tnrypQO618ebu0JGr/NKw4yX1mf7LVDT1ed2/lMmyVAjJ8DQqEYcPTjsHda/
u4rKWvZPNLihxPlM1UTJbjlVbtx84evROSTL3DJx4RUFzE+mPB0dEwfFdxuV
c5CEuu8eNP2jUT6ufm5jf39ZFqp5Z8482v0WXXZs8MI9uRBbXR6Mf9AqTXd/
vqn+PvcBFu1sNz7Xpwixk617LjygIK/IcrsHxKfi5PrgDbkBSqjkKYqOZZ4R
H5tU7z1m2JNibC5zPlylu/55uacvldNd//7XLzO2665/8uy+hWZRsXTN7euz
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
cAXEXAEJrgDMFZDgCsBcAQmuQD8KroCYK4DgCsBcAQRXAOYKILgCMFcAwRUQ
cwUQXAExVwDBFYC5AgiuAMwVQHAFYK4AgisAcwUkuAL9KLgCMFcAwRWAuQII
roCYK4DgCoi5AgiuAMwVkOAK9KPgCsBcAQRXAOYKILgCMFcAwRXoR8EVgLkC
CK6AmCuA4AqIuQIIrgDMFUBwBWCuAIIrAHMFEFwBmCuA4ArAXAEEV6AfBVdA
zBVAcAVgrgCCKwBzBRBcAZgrgOAKwFwBBFcA5goguAIwVwDBFRBzBRBcAZgr
gOAKiLkCCK4AzBVAcAXEXAEEVwDmCiC4AmKuAIIrIOYKILgCMFcAwRXoR8EV
gLkCCK6AmCuA4AqIuQIIrgDMFUBwBfpRcAXEXAEEVwDmCiC4AjBXAMEVEHMF
EFwBmCuA4ArAXAG4K/B75X2taV05nRzrMb3PqTM04e3uu+5XtWin2Hf0471c
OrysVeDJ3g8QF1Y0O1RagJzqNZSx+xRUprt1vNnXVFhuqbv/ub8SZ3uVK4md
QnT/0vpzJWZX8fTggrKxd0vwpckhuz1LkmlvpHWV+4dSUFyt8fFY3etCpeqf
t1p2UpP316FXcyqkY+qKWx0+b5ah2qF6g/vtSyQ+jvX5PPAfva87im7vqL7f
l4Lsxt/zscqmJzeukvJaIR7NXbq9+3cF7e07acvE/uE0LO91ut0ZNbanGha/
7q4l3zdbHN7khKLnwB5r65jKUbNXWId1LWU0WPL7hX3NLmJf2Y2DbozLx9SG
LjZrNmQSH6VW16wUr7RY2sDrundJGl3wf+fwNE1O2Y9vvzike3/72ONq9tYJ
KprUuPryaZIE6uP7OKZFIyX8I7rVbqNR0tDU461sXQ9Tv7bBvVuOUWNs6KhZ
fkZZtPT9iO4lpntpy5VLJne/FqL34+SNKX4K2mX0JvByVgz6fRu55OMg3e9H
hYdV1gySUupIu8DxoedxpP5YS9OCfCwt96PWMh8VjR1sUTk/+g7623yOXuys
wt3qB2e0+11ON9dWz6injYLce3fy74UanNzg/uryEwXlOUgWZK5PBiZJt+43
UuHOMf85o+/G0dNB2g02W4Ixo6bxrDovirFTvb3S/dh0svGUeHRanYibnU9L
VpUvRK5P83ENcxJpVoHfzKC+Obji2qjcb1n52KZ61/zT/jRqWVCp+EJwLlqP
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

         "]], {}, {{}, {}}}, Axes -> True, AxesLabel -> {None, None, None}, 
      BoxRatios -> {1, 1, 0.4}, DisplayFunction -> Identity, FaceGridsStyle -> 
      Automatic, ImageSize -> {180., 166.74088966451538`}, 
      Method -> {"DefaultBoundaryStyle" -> Directive[
          GrayLevel[0.3]], 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "RotationControl" -> "Globe"}, PlotRange -> {Full, Full, All}, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, SphericalRegion -> True, 
      Ticks -> {Automatic, Automatic, Automatic}, ViewAngle -> 
      0.42769327351158737`, 
      ViewPoint -> {1.5883073721897258`, -2.6217306040500636`, 
       1.4331114161973075`}, 
      ViewVertical -> {-0.21945012390373375`, 0.36223410907411685`, 
       0.9058852539598582}], 
     FormBox[
      FormBox[
       TemplateBox[{"2", "15"}, "SwatchLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30100577`", ",", "0.22414668499999998`", ",", 
                    "0.090484535`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19699838300000003`", ",", "0.252204821`", ",", 
                    "0.33320940200000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               Graphics3DBox[
                SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                  DirectedInfinity[1]}, 
                PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
                0]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     Graphics3DBox[{
       GraphicsComplex3DBox[CompressedData["
1:eJyN3V2SXMeRJeAS2BSgn0aXBIgNQaC66goEiyAEYgfKNfQKysZsnmcLuZRa
Sj7PKmoJon4oaUS15gFx3Ox+nm4lvFyLU47Iez3jenicOOF5/b/+z3//70cX
Fxf/98cXF59c5N/vf3f+enE4334CnvYleNrPwdN+AZ72K/C0r8DT3sDTfg2e
9hvwtG/A034LnvY78LTfg6f9Adx2/PvQ9QntS67iz8FfcBV/BX7FVXwDf81V
/A34DVfxt+DvuIq/B//AVdxxrH8d39pNf9f/wePfF+BX/F37q8F+A49/X4Pf
8Hftbwb7t+Dx7zvwD/xd+w+DvfFiGseTfx+6Pqcdv70Y8FcDfjXgG3j89nrA
3wz4zYC/BY/f3g34+wH/MODGZeOF8foJuP4KfkXb64uh/Qrc8W//G3j89Ro8
/noDHn/dgMc/b8GN//b/Htzxb//Of1Nc1v9pOy7F9e9DV+OT4198A48fXg/4
G/D44WbA34Ib/8Xfgzv+xc0znP+m+Kv95WDvONa/2ms3/V3/B8/zvwbP874Z
7G8G+7eD/bvB/v1g/2GwN5+b8oxp/pvi8hQvpnE8+feh60Y7z/V6wN8M+M2A
vx3wdwP+fsA/DLh5c64XtM0ngjufBTeeBvd9Du54Cu7zBP9A2+vrof0G3Pxn
o/0W3Pi/0X4P7vjfaLs+mfJm/Z+2eYP4c3DjpvgrcMeN+Dbc53Q1PzX/EXc+
N/6LG/8c/+KuA12fTPmx9peD/XNw56fgxkftrwb7bbgf/W3+6dW/63/vx/nc
+KO98U//P7QOnNYnU96s/9M2DxB/NeBXA74NnzuNb/370PUtbeO/uPO5419c
XsP1tvHuCbjrjeDmu/b/grbxx/6vwPW//b+m7Xi1f/3t/Ov13dB+D+74t3/5
o4nX0P9pu64Td30y5c36336uBnwb+pni9Rvajktx/fvQ1fjk+BeXp5M/mvgL
7S8He9eBxv8pP9b+arDfBvvXg71x2fE/jVft9bfxx6t/n/jQiaeb+KOJ15jW
29M6cFqfTHnzlM9NecY0/01xeYoX0zie/PvQVd5f//t+yP/LQzmfyP+7zjf/
kv93HTWtV1xHyv+bV8m7yP87b8lTyv8bF+T1J39rZ/wRl5+WHxSXz5N/EZf/
2NbVdfnGVb7EdYz+l18079P/8vHOk/rf8TuNa7+/qV95cO0vB3v5f3kx19Py
/45/7Tdw13XytfL/jn/tfW7zEuPBNE6N3/rf/FH+3/sQvxxw+f9tXeX/g8vn
BZdn2rgGd70t7nrR8S/u8z0Ud81HHP/ixrvpPXTcPPScG237l/83/ti/fN7G
1e9Z/t91u3HR9eI0jxn/7V/+3/Fv/85Dxkdx39uN+xKX/zf+i8tPpx95042r
8WyKc37+Q3mB60Xjrrj5teNf3Pxgmrc2Pkf7y8Fe/l+/aC/v7/jX3v8nb2g+
Nc3z8v/6X3vXi8Yf7c2v9f+kJ5j2uaf912lfcNqvmvZRJn5f3L8/lLfK/zv+
xeX/jf/irhcd/+Lm01OeZ14SfJpHjfsbdsYR36vg0ziY1gHm/8HNP4Ob/wR3
/g1u/A9u/Anu+A+u/31fp/fY+PrQvOc8+lCeaNx5aF21gfv/xeWnzQvE5fOM
/+LyH45/cd/LaV005RGOf+3Nb6Z5fVqnOv6134b7kf/3PrSXn9b/3o98nvFH
e/kP/W/+NeVl8v+Of3HH10Prfvl/x7/4NnzutA837Q9N+xby/8Z/cfk8x7+4
88zEI7jufWidNvEoxn/7l/93/Nv/NvQv/+97a//y/9O+iPF/0sfZv3ye/nc9
Pa2zjX8P8VLy/8Z/cfl/x7/4NvQj/6//7Uf+f9Lb+vzi8tOOf3Hfm4l3m3g+
x7/28v/Gf+3l/x3/2m+Dvfy/85z28v/6X/uH9M6TDlf7h/TQ4vL/jn/xh/R2
4g/pk8S3AX9IZyD+0L7stF847WM9tL8S/J+/O9/+J99Dro/5/4/BY/f04/X4
dG9/FPf9eUb/z8Bj/9nH6+mzvf1JnPft+JL7eQke+88/Xg+/3tunXbjv5zX3
fw3Ouup+29vfi/M+n8hfT+LL/vjFx+sd+Vbad+Zna/wdyQ+O4rH/6uP1lvks
7VvnvzVeD8Tfg3juf7WviBdpX03xJeN2xYnjfyw84zPx40fr70/3eLWfYf/L
j9caVws/rXFQ4yf9OH6e0L7e4xe/+Xit733h9+t7OrHOOXz58Vrf45N9u76v
3I/f18Jvlx8PzKOnbz5ey89PaMfP8u6PD2fx8qv2z2iv+Ft+htcpP4OXX+WB
rsGXH8vPrBvKz+DlZ/DyM/nvrfniGp/lZ/Dyq/NY/LzmsdN/Ljx+XvjxV+v6
dI8f/mu1n+3xi9VP+fn5vl1+fr5vl5+f077e4xcr/pSfF36//HJinX9afrlj
/Xm3/FJ+zv0svPz8fN8uPz/ft8vPz2nHz/Lij2kvf5af5RGfgS+/lZ/pv/wc
3Lhh/9fgy1/lZ/L68nM+77cfr3eu/9d4Kz8HX3Gg/Ez/5ef0r5/Ns+LnvOcZ
n/Hzwo+5Pt3jbTwnX1t+Kz+nf+Nz+tXPr2hf7/GLFW/Lzwu/X895guc6LL+V
nxfexnPuRz8vvMXnPJfx+RXt+Fne+vHhLF5+1v7Zebz8bD8vz+PlV/u/pr38
Un4m7y4/g5efwcvP4OVn8PIzePnVdUD8vO73fs3j5eeFn1Y8LD8v/G6Nq/Lz
wjNfl58Xfvv1+vvLPX5Y73X5eeFXa5yUnxee/K38vO3b5Wfa5edt3y4/b/t2
+Xnbt8vP275dft5ox8/yyo/37ePyZ/lZHu4Z+PJn+Rneovyc/vM+/hr7jIdr
8PW85Wfu/0S75e3cf/k5uHkd919+Tv/62fuPnzOvZHzGzws/5Ht/usfbeI5d
5qPP9vjtGp/l5+S7+nnhbTzHT+t7LD/n/s2fc//mz6yLys9p6+fcv/E5n2d8
fkM7fpb3fXw4i5eftX9GO/PRZ+CJhy/P4+VneYhr8PWc5Wfu5+T7Zv7sc/k8
5s/e56B7L796//Fz3sM1TsrPyUdX/Cw/L/wu4+3ZHj8aN3LfxufEO+Pzwtt4
znMv+/Jz7t/8OW3z59y/+Ubu3/wZv5efaZef39KOn+VlH+/byXPKz/JYz8CX
H8rP9F9+Ttu4Yf/X4Mu+/Ez/J+cD82f6P/KetPyZ/g8+j372/uPn3HfGT/yc
58/3/nSPt/EcO+NGxofxOXb6ObyM4znPsfDyc+7f/Dn9mj/n/h3Paevn3L/x
OZ9nfJZXip/lTR8fzuLlZ+2fncfLz/bz8jxefrb/6/N4+dnPHXTp5Wfvx3hq
/ux9Drr08qv3L9+ca/z8P6stb/yPPZ9cfv5+2csD/33PD5ef/9+ydz34tz3f
W37+K/n+ul78Zc/flp+/W/dpXvfnPR9bfv7T6t984497frX8/IfVv3Hj2z1f
Gr8e41d5Ua7F0/9w4fJ1weFFj5+u6/Jn+fnTfTt+Pf7b+rvrweDwosdP1uct
f5afP9m3y6+P1t/NNxZuXnf8werH+PyDfTt+PQ78c3jnxj+nDS/a9kXiZ/iP
8vO/r7b8xsJddx9/um+XnxcuL3r8yWqbPy/cvO74Y9rx88LNL46Lf2/xeeHG
jePAP5+Wn47wosfg2d9ZfjzEr2t8tv2lda19pJ/TT67BiRuHhbfxHBxe9PSz
dc16P+u0hR+Sx2XdsvBj/Bg//2zfjp9Pa5xlPo2fjwt3HjwM/HN4Z/nn8ju8
6GHhja+LPbyo1/Jz4rd+/mzfLj+zviw//2K1yZ+PCzevOyy85RsLN687Dfzz
MXw1ceMw8M+n8PjwosXvw/MfVrvxdcHhRU/xK/HZa/lZPi9+Dg4vesp8kLw9
fg7OOuWw8JZvLNy87vRi30/5+cW+XX4e+OfwzvLP5Xd40YzjNp6xLz//en8t
/8KDup/cxjPr8vLz+v7Mn/O9mtcdFt7GM/bl54F/PqKPKD8P/PP9eo4TvOhp
4Qd40buFH5MnJY4HX+Mtfr5NP5nfM37zuQuPX6/i1xVv2/78utY+fL5X4sYp
3x/j+S7jJnxC7is46+7b9EN8PuRzic9XA/8c3ln+OX6XF71buHzdMf8ffuN2
4fIbh/TPevBq4W09mP7hRb2Wn1fb/Plu27fLzws3f77d9u3yc/onblxt+3b5
OXknvGjlo47n1Zavy/PIi96mn7yn8fPC5ZGu0r/rweDwovfxK/mz1/LzwD8f
E2/0c/ohPh9e79vl54F/Du8s/1x+hxfNOG7jOW34jduFy2+EF3bdfbXwNp5j
Dy+avNn8+QQPqh6njWf4vPLzwD8fWMeXnwf++T55J7xo8tEDvOjdwvO+l5+/
2l/Lz/YTP8fOuJG47HgODi96H96Z/LniPvnzXfxK/uy1/Jx+jM/5XOPzwD+H
d5Z/jt/lRe8WLl8X3lleNHG5xee09fPC23hO//CiyZvNnzMvmj/fDfxz/G7+
7LX8nP6NGwP/fB+/wItWPup4Xm35upq/jRvpx/j8W67xs/3Hz8HhRe8zH5A/
J56aP98N/HP8Zf58Sz/q71p8Hvjn8M7yz+V3eNGM4zaesS8/f7O/lp+xLz9/
s7+Wn7EvPw/8c75X8+eM4zaesS8/D/zzAXv1jI1//v15Hu9CfTq63OJT0OVW
3Hu6t78V9/wHutwj+UzZk5+rO2263Mx36HJrPYMuN/mputx8r02Xu/B/WZe7
8mt1uem36XLDy6HLzX2ry826Vl1u/NJ0ueEPPLfzDDz2i2dSl5vvtelyoyf1
XMRj8Ngv3lddbsZl0+WqKw+Pl/tAl1vz4dM9fus4jK41eSy63KwP1OUeHD/R
2S77psv1e08/Weejyw2fpC63eC10ueHt1OVmf0Ndbvh+dblt/wQ9atPl+r5r
ry438VFd7rb6UZe78KbLXXjT5UZPt4FHHzrUmWi6XN8X9MZNl2u8BG+6XMdz
eLzcB7rcrHvU5WY9qi73aJzkOdXlxi/qctt4ji73JX/P5/5031/Zf7r//ML/
zjwQ/Pv9fFL9h0ezbsbyl7rcNp49L4suN+v+pstdeNPlGjfoX11um3fsX13u
ujZdbuKBdSAefbw2Xa7zbfC/4mf6V5fb4rZ1MNDlhv9Ql1t8EvtSbTxH17rs
1eW2+BzdrH42LqjL/Yy/B//bPo8o/Lt9PlK44zn4n/BzcONzcONzcMez9QzU
5S686XJjry534U2Xm37k8RfedLnpX12ucYU6Ek2XS94n3nS55KHiTZdrfLau
Bbrc8NPqcrNvoC43+znqcjNfq8vN/qe63OxLq8uNXqDpclf+pi43/19dbj5P
XW7LN9Lfeh51uS0+x974HNzx7HuGLjf7Zk2Xq5+DZz5Sl5s8C11u5p2myzXf
J49oulzz+VzN27n/pss1D/f8lvUrjM/eP7rcA/NnzVtrf1VdbhvPeY71uepy
o09Rlxu9jLrcNp6Dr+9RXW7Ln3P/5s/kQ+pyW/4c3Pgc3Pgc3PFsXqMul7ym
2avLvdg/h3UYmi6XdWer26Au13UM99N0uebPPpe6XPNn71NdrvHZ+0eXG32H
utzobtTlRg+lLjd6E3W5LT7H3vgc3PEcfOmS1OW2/Dn25s/BzTeCmz+zTlOX
2+JzcMez60h0uclzmi7Xc9jBlx+aLtf4HNz4bP/qctf70nS55s/BH328Nl2u
+UZw82f6V5fb4rP3jy43+jt1udEzqstt4zn493t+qHDjc3Djc3DHc/C/7vmz
ws2fg5s/B3c8Bzd/Dm58Dm58lvdUl2sdAvCmy3U8gzddrvEZvOlyHc/gTZdr
/gzedLmOZ/CmyzU+gzdd7lAHouzQ5TY++R/ch7pc+eG/759TXW5bd/8NP6rL
lb/9y/57Upfb8ro/78dB0+Wa1/1xP87U5ba48e15/0aXeyCuy8M2Xa5+Xri8
aHS5pddAlyuPdIz+dltXdbnwotHlZj2lLtd1yvHR+rv5RnDyuuhyc7/qcp0H
jwP/HD1u45+jy2U8N95cXS68aHS5jd+ILnfh6nLbeI4uF/4jutyWP0eXK19I
PtR0ueR10eW2+BycuFF5G+M5utzSI6DLrf0ddLmlP0KPm/tWl+s+UXS58kil
y93WVV0uvGh0uaWTRZeb8aIut84poMt13R1dbuKQulznwcPAP0ePK/9c68D1
POpyG18XXS5xw30pdbnG54N8nLpceNHocs2fsw68eLT//OhyW74RnLzuNPDP
0eUanw8D/xxdbvRi6nLl+UuXG3t0ufKi0eUan91HbLrc9K8ul+8hutzES3W5
rlNKl2u+EZy8Lrpc43PmA+PzYeCfo8eVfy5d7sLV5bbxjL26XOPzEX5OPW4b
z8N+S3S55s+lyyWviy63jWfs1eUan0uXS3w+DPxzdLlH+LrocjMu1OVWnECX
m/dPXa7nMKLLrTitLjfx+F/U5WZeVZeb51GXe/FofT66XNfd0eUan6PLNT5f
Dfxz9Ljyz6WHhheNLle+ruZFeNHocuU3Ekdcd0eX29aDweFF1VWoyzV/zntl
vlG6XPLnvLfG54qzxOeKC47n6Gnh60qPC89fulz9HBxeNLrcWpegy5VHKl2u
68Hg5H3R5Zo/m980XS75c3S55s/R5RqfM28Zn0uX63he6zf559LlMt9Gj9vG
c+zhRaPLld8oXS7r7uhy23gODi8aPa75c+lyyZ/VLTVdLvlzdLnG58qDrWM3
8M/R5VbejS631lXocmudjS7Xfatb+0GXK49UulzHc3B40ehyzZ+jyzV/ji7X
/FmdmbrcFp+DG58H/jl6XPnn0kPDi0aXK19Xulx40dLjGp9jb3wO7ngODi8a
Pa75c3S5F4/WfaPLNd8oXS75s7pAdbktPg/8c3S5xYugy5XnL12uerfg8KLR
5bb4HNz4bP/qcuFF7+Eb1OWaP98N/HN0uebPt/SjHrfF54F/Lj0u/HPpcuFF
S4/reMZeXW6Lz9iry23jGXt1uebPpcu1junAPx+xV5fb4jP2ox73YmhP9XPh
R+o8+OUeb7+fxPq+9DrqocjvT5xHHPUm5Ke13+x+PvNTnce5wd59LOJr7Ze4
H6V+H7124/utQ4yOWd607XdlPr0E1/+s71s9yPiZvL7WU1O9vW2PJz+1nlnl
R/A6lUfc7PHmf+MrcaTeb3h99eltXyU6bHWjU33nJ4fz+OX5dtMLxs/qdOLP
V4P9VNdw2+N1XkydJjqDZn8z2DNfVnyFv7ceerOf6spk/IfnQGff6hk8oR3+
xnoe/u6avOALcHR7hYe3mOpHbnu88tPX2CdueA5YnYH7pfD0R+NP7PNevMfe
8e8+oToOeKxWfxz9d/in+L/p9ajD6+e0z6UuSPU/1enc9njy06bvRjfT5n/4
eH/fovXPOVfjf+t/qpOU+JPxB0/W6rmjRyge7hI7/N/6sV5v+nmFPeN/0l22
/NR9DPRJxQOjp2n70m/3+IH43/p/v8c9/9T6X/5vutGpPv6Tw3n8kjb+b/Yv
BvtXg/1Ud3bb45WfqqPP874Z7G8G+7eD/bvB/v1gP9X9SvxXNzqda3pCG56v
6SKfgyc/eQGuflrexXoh6lDlD16Dq+dzHXwDri7K9dw7cPUlw3nBpuNQlwRP
Jm868U9Nf4r+zvV9O0+A7rytn9RB5P65P5+jPRd1dO7JP9v9W9cBfVW7//fD
/U917DL/Ui93/D0M9GLFI8JLTXrJWt/DyxYPgV641sFXe1z/t/uU781zUT/g
QP7Z7t/z2ejY2v2/3+Oer233v/zfdKPT74s8OZzHL4d+5F85r9L0UK8G+6vB
fhvuh7oX5v/N/mawt94AesF2P+8H+w+DffKffB68bONNn+zblW9fYud5LXmU
F9hnnLzCnvHfdGob9ujm23NZDyO4/1+9rPf/DnvWv+3+rUeF/5tudPr9myf7
dvFP6qnTP3XEPN/VPvcV9oz/1v829P966P8N9uSfrf+hnkP6a/2/H/rnPH3L
P/N94v/Gm6LnLR70Ejv83/qhvtgR/7f+qQ+l/1v/1Mc54v/W/80eb/mn/dM+
4v/W/4c9rv8n3WjjTZ8czuOXQz/PB/sXg/2rwf5qsN8G+9eD/ZvB/mawfzvY
vxvs3w/2H863oxMtXtQ6o/DM0eEVbh1H6zv+Cnvr5MEzR0dS+FpfFK9sfbIv
sLfOk/WfvsLeOjrW1/kt9tYpkWe2PmvmxWd7vNbN/v5S6l7+CvuhjmPlhdd7
PDoC6+RVvbsv9njV76I+VuWFX+3x8ADWecp8Vzyx9XKsL564EL4s/OTiPQ6c
P6u6if4+1dX+79pXHcDwxsmPfrPHq+6Xv69ys/97s/9qjydPuKP+RNWt8fcB
Puz/3vhbdFLFl/4KPHyRdSWTP13v8arjp0429/0F9u/2/6/Vff8K+/jla+zz
/L/FPv1YVz7rB+q8hh+r+pjwltGNBc9+fnROrd6VetXkE9aJTD0h6pPlvUh/
rX/qbFX/32CfcWA95ozz6z1e9cnUe2Y+/mKPV12pL/d4vY9f7fHc54F6YNW/
9djSv/X+Mw+lzmb4qPV50ZO1OkxfYJ9+vhzsvxrsvx7s/T2ND/u/Nz4t74v8
0hfgGfdfgicPsm5o3oevwd/zd/kl61SF74CHSZy/H3iY6GzKPr/rNPAw0TGU
ferpDTzMCf6h5hf4h+hBTvAPiRdVv8x6ZvAPFVdZX0efUnXlrMs1rK/r79gf
WSfm+6h4yXqw4hzrweg2Sp+b9rCuyf7qlFe3c4RTfSV0BaW7UVfAur7srTPC
+XJ1BaW7VFcQfNvjpXdVVxAcXUHpCdUV+PvxyUvz/OoKgqvbiB5GXYG/N528
iPpZlUcN52grr1JXoP/Tj/Vf8rnbak96YXUFG9f0k37RFdQ5ieG8SNMV6P/g
OXeFrqDOyaErqN/xUFeA/9s576l+GboC6zq1ftAV1HmBof6HuoKyV1ew7a/B
S+861H9SV3Bi/Dd7z1lGr6WugN8Bb/bqChz/yd/Q27Z6c+gKKu9UVzDU+Tga
f2KfftAVHB3/1mXZwHPuSl1BztWhK7jIeUp1BVMdxJyfU1eQ85HoCkqXq64A
/7c6HFN9QHQF0d03XUFwdAXWmWqfi66g+ldXsO2vlefHP+oKMm6sc/bnvY7M
+pHqCo74v/WPrqD6V1dg/Eme/Jv931s9R3QFdd5CXcG2rugKrP/VPhddwYHx
3/rfwJfeVV1BjcPhvHXTFeD/1j+6guofXUH1r64A/7c6SVP9TXQFhasrCP58
sFdXEPzVYK+uYNtfC4/eVV3B7/f+b/bqCvB/s1dXQPxv9uoKjP/W/fpXdQXW
ebROm7oCf/fa+nnqCtQxWddwA885MnUFuT91BZkX1BXkOdUVJM6rK7Aur/UJ
1BXg/xpnnOfzHJa6gpxnabqC5/tr8JwXaLqCPK919/621xEXnvvfuB/qcLXn
Yj1b96+ugPyn3b+6AuJ/u391Bc6/1Psa6xGjK6jzyuoK8H/hS+evruDi0bpa
h+y7vf+tN6yuwPpo7blY19f9qyvA/+3+WdfX/buu/4751/tXV/B8/3fPYakr
sC5t68d6V3/f6+jvyLfUFZS9ugL83+5HXQH5f7NXV4D/2/3IexD/m726AvOf
xL+f7//e6n2jK6h8W12Buu7g3+/9X/hf9/5v9VfUFeD/dp/qCvJc6Arq/tUV
5P7li77f+7/dv3zRn/b+b/evruDJ/u+ew2p1sdd5lqYrSP/oCqyT2z4XXUH1
r64A/7f+1RWQ/7f+1RWQ/7T+1RUQ/1v/6grMP6n31eonca6k1ftRV4D/Wz/o
Cupz0RVU/+oK8H/rH11B9Y+uoPpXV2D+af/qDNK/POcf9v5v/asrCG6dKuvI
i6srwP/NXl0B8b/ZqyvA/81eXQH5f7NXV4D/m726AuJ/s1dXkPiOriB8vrqC
8MzqCnIuSV1BeGZ1BTnfr64gPLO6gpyrUlcQnlldQeoAqCsIz6yuIOfC1BWE
Z1ZXkPGsrqB4ZnUF8Se6gsq//F3NbV3RFVSdGXUFy15dQf3uIrqCqteBrqDq
D6grSP6KriA8gLqCzHfqCur8rLqCxFl0BVVfCF1B+NimKwj+X+ft1RVkn15d
QfjYpisI/uVgj64geYK6gvCxTVeQfPeb8/ZNV5DvD11B8UjqCrb1d3QFVYdE
XcFaZ6krSJxvuoLkkegK6vdp1RWsdbS6gvit6QqyHkNXEH5MXUF4S3UFeQ/V
FYRXVFcQ/kpdQXhFdQV5L9QVVP/oCqp/dAV1zlpdwXoudQXWP5OXU1dQ5+LV
FeR9RFdQdSHQFVT/6Aqqf3UFmdfVFaz7V1cQ/qrpCtLPl4O9uoLYfz3YqyuI
/Tfn7ZuuIOsFdQXhK9QVJF9VVxB+SV1B+CV1BVl3qCsIfwQPkzivrqDqt8HD
pI6HuoKqXygPs+K8uoI616+uIPOL/EN0jPIPj1Zb/iH1LOUfElddX0e3Nayv
m64g/Qzr66YrWN+LuoKqK+I6Mes91zXrudQVVB0D8+3kgdl39bz8+n/t9+d/
uG/XeKauTPGxyfc9X/wUnN/ZaL/3/Sntz9f13/d4xfefY2/dWM9pfrq3sy6n
eq2jv/ue+/Hz0v8a155DPP7bvl39//Rw1v7w8/P2eS+b/cvz9hUPPCeYuOJ5
wJ+C572xHlvi2mfgeQ9egife+bvWGe9/2fPbFVc+2berjtdP9njiV+p1qoOq
332PfeLIL7HPfPw59olf8N5VX+c7+GHqgbVzXj+hHb7pZ3u81l+/2OP1u5S/
3OOJg6WvRE91gjcuvf+2x+v+/7znXa3b67mn5DXapy6qOq4Dv/OQeHqwHnP4
gs/P29/Bx9bvkG7n7+dOPtZ47Pmj9bzt/NGP93jtD/0M+/z9F7QzT/8S++Cf
Yx/eEP6z5o8N++Rt8J+l75X/zP3/cc83Ft/2g327xtuP9njmpxM8ZPK/Ezyk
9UPt/zScb7qFh0z/WefZ/y08ZOn0hvNNt/CQdS7yD3s+sM7RLP+0czc/op3v
EZ4w6+EjPGHlDfCE9Xd5wrwv8ITpP7yL/R+IC3WVJ0z/8ITVPzxh+efbPY+X
63E4T3SE38v1IL+X+xnODR2Gc0OH4dzQlfxe+LJtsB/ODV29GeyHc0Ph1Zr9
dG6IvO5IPqguruV1sTevy3xNXlfzgnld5hnyuorH5HW1LiWvS7w2r6t5jLyu
eAryurI3r1v9m9fV/ZDXVf/kdZWfmNcFJ6+rdZV5XfDPBnvzuoW3vC75nnld
/p95XfJw8zrqRjc9hnld7Mzrsl9JXlf5MHld1WUlr6v6nOR1VU+SvK7qH5LX
Fd9IXle/I6GeIXX6yetqXUNeV+PLvC77neR1dV6PvO7i0cLJ62p8m9eFB1MP
EF55A8/9k9fV+ml9vvvO5nX1HpPXJS6Y1yUutLwu/NLn5+3N6y5yf9v5+2l5
XcaheV3G/eqv7f+a113u/972l83r8n6S19X+r3ld9l/c1w7/uYEnfrmvnfsz
r8v9k9fVep+8rsYbeV3mFfO6ek+G/WXzuuJnhv1l87r0b15X85v7y+FJhv1l
87rSpZDX1fxHXlc8inldvkf3f/+w34+yf/O6ms/N6/K+uP+b+97O929eV/tI
5nXp3/3f9O/+b/xDXlf7ZsN+rnld7csN+7bmdWU/7Nua19W+4rBva15X9sO+
rXld2Q/7tuZ1ZT/t22YfUb4ufs17y/5iw9OPfF36ha87mtdZVzTzMfuUJ/KX
eu+Ds/9U/WQ+ynPJp3numvMYra7as/P2jR9M/xlH4RPZTy2c5yrejecS1y/V
D3md+9+Nr8v3BV9X35d83TNw97Hg644DX3eY+Lqcn1/3V/vx6z6DV/7/FJz9
wuC1Lud3S27ZZwpe6zvy5iv2P+o+rSMg38V+/In7b3WW+B2jE/t8ja9jfXJi
n6nVWbrGnn2Xdv//3Od19+zfF85zFS/G9xL8in3K4Lfs54nnuaofvpf63NRt
2M7f54m8Tj1H4+sSN+S7nu5xz/OUPedJ2vnQl9jzvK1e0DX27JN5/yfyutz/
nXkd5yHz/tyjw7hl/pEXuGN/3X7qfHv4Md7H6ofxXJ/L91795Nzxxueyz1f9
hNclr6vzvOR19+YL8lGc5zygt2jnc59hz3vR+LqX2BOvWv/X5+1rPUz/8vgH
/NP4RvK64ksnvo7zxvfodYLfMq6CO64KDz/8Gf3wftXn4rfixRhX4s4TdZ6d
vC6fe0de57jyuXyv6nw3eZ1+q3mefddWHx59XfK3msep21PzeOxXnlPzuPXh
0dd5fsO6PTU/5T7XvFPrber2HMkXEt9uiVuJMwfG3dH8mLo95bfEe/0Wf4dP
If89kI+1ddev9/jJfCj9L/+U35hvGy/DflTlTcb33I9+4/1r67pv9n+veSBt
6/aYJyf+RT/3EnvOv7W66+rr1J0k74iOyvPR1n3AvuZFeGx5gbynFddij/5V
+xonye+yPnq5x9s4yfzg+4VOr8aJvwdJ/p58ssZJ4mjySfLQvC+35DXt/cp9
rn6uGBcV99DXGU9avXH0dZ7vsq5O5bUZd8xfra6O54KJw/Z/MI8jnti/8cA4
Wd9/6pJte/yK+aX64bkqb+K56j3juSq/Tn5lfuF+WtZJ+V7V16Hrsk5O5RXU
1am8AvvKK7CvvAL7yj+s2+M8zzxe6zny5Bp36reyzki+yrnO9r4kP8XP5T/8
XHkHfqtxwfyoXuXI9+D8qF7l4LrBPCP2yVOYf5yXa5zyuZUf4YcaF8SNytMZ
D/U9EJ+b3kN9HeNB+3ov4j/6qfHIPFj3xTis/vCnegDn26b7dx8Wvu6K+bvh
8nXq79mHbXwd+Vnl1+QZ8ivydeHZ5euuPF/hPil8Xc4bNL6O/rWXr6v+4evC
25rPZX9Ivs7nEpevq37g6+pz5eusy8M+bOPr/N0U9mEbX+fvT7AP2/g66j1V
vKeukPOzfJ2/2ziNm8KzfwZf5/dXOL8LVvdJHau2j+n5Ge6/nV+Gr8v+TdMZ
PNrff+HZB5Kvoz6C+gP5ugt475pXqQ9VOM9VcZ3nqvwi+9PWeeH32sTl6/xe
qv+ck9rO36d8nb+n3fZh4etqH1O+jrpChf9w/7xNdw1fl33YxtfxPdp/4+v8
/Xnuv/F1jOead6L/h69z/iic3+mzH/k630f1fPJ1fu9l/+jjVb7O350sfI1D
+Tp/p6/w1GeAr4v/5euyb9v4OupVFc570fZh4euir2p8HeNEe/m6Gp/uw+Kf
to/sPux3+3HT/GN9QH7/sXD0YYUzrgpH11U48aRw9FKFM67E5ev8/Uc/V77O
ceVzydf5+4+T3+o99Ny5dRfl6zwnxnlY+bo65whfV/mGfJ26Jc7Dytf5O92e
h218Hb/T7XlY+bqMw3be+Nv9eKvxqN8yD7hfSZ4iX3fSb5k/l33j68w/yIvl
647Oo4lDzjfpn9/ddhw1Hcl3vLfB/7F/H+XTzNeSxza+buHydZUPy9dR98fz
rY2vo66K9o2vQz/k+dbG13H+X3v5uivPNybvc5xk/lzP2fg681e+B/m65JPy
dZkHm25svS/yde39iv3qR76u4p51tnneVsdPvo46UJ5Xla+7eLT6g6+reUG+
jt+Vtn/5OuOJ/cvXGSfr+3d9QtxtOs4f7J+rcJ6rcH7Hud4/dGNl/z+M5+DJ
f+TrqNvl+dPG11EvSfvG11FfRvvG1/E+ai9fl3WcfF3WR/J1WV/I17X3JfaP
Drv7LHv8XDh+q/tlflSH3Pg65kd1yPJ1jmd1yPJ1zsvlP+aXGr+f7D+37Ikb
hTOe63sgPjcd73AeVr4u9vJ1lR96HpZ5sHDmhfr+8ac6z7Y/9u3v/j+zBOg+

        "], {{{
           RGBColor[0.880722, 0.611041, 0.142051], 
           EdgeForm[None], 
           Specularity[
            GrayLevel[1], 3], 
           StyleBox[
            GraphicsGroup3DBox[{
              Polygon3DBox[CompressedData["
1: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
uy/WVmMpuxfWsshryKVct4oaG9k9uOYcL5/dm2uBy2X34JrhL7L7jNsZG19m
13Jf4+rJdbrm9h+i85Uy5/fRuVFZ8UfcrOB8+F10PlH+/CM6cyoH/RWdSZQb
/4zOlsqBz0T3Y5WHxyRnbz3v16pXVfD1vy6556b5pEpyX0734rLk+lE12aXJ
/T1d/0uSe24aA99GZxtl6UrJ/T3dr8rJPUDdxz3RuUsZ+3Nco+C177PoZ03Z
8oDkzKZ8cig/AwvOCf9EZypl4P2Ts5bWrH2Tc51y9yHJ/VvlBC0EypPKsSWS
c6ny7fXJvUGN1QOT86fWu4OT+9LKG99EZzzl/B3R2VJzw+7orKu6YFd0blSu
3hmdG5XDD0rOusok/0ZnYOXnv6NzoPL5f9EZWDm8tjJEwb2yG5L7nJq370yu
l9VnHphcR6tO6pdcL6ufOSC5jlbvqH9yfap+db3kWk99s7uS63H1pYfqWhfc
s+qbXBerp90ruabT3HVfch2tvuK9yXWu+o33JNe26hPentxXUf98SHJNrZ5Y
3eT6UX253sm1oXrafZLrOPW06yTXm+rXnZPc01Bvo1Ryn1/r8kXJvWLN4RWT
e7yawy9O7v1qPqmaXLOrT3hTcm9cvcTTkvcINF/dnNxDUB18Y3Jdr55qreT6
V33CM5L3CzRfnY4HFTxHXZi8Z6EMcEFyH15rd3mtowVngArJPXCtO2cn7zVo
TT8zeW9C89tZyXsTyhglk/cglDEC7lpw/bVfcn2hmu6T6HVBuat5cr9O2bVp
co9FvZYWeHPBdcEDybWz+k+DNV8UnPmv4WdewRlySnQeUwZoltzHU1bsWjyu
1KfpltzjUmbeFD2nKdO+Fp33lHVfjc6NyrcvR9dfqrOOK76PqrEe1LNXwufT
HX9acCY/Prlnpdrk6uT+pDLtVcn9TNUapZN7TaoXTk7uMSrnn5LcH1N9cXnx
PdVcVCO556kMXJOfNQVn3ROSe2Kqj07lZ0zB8+0tyf1SZeNXoutKrdEnJvcD
VXecn9wfU/1yXnI/TfPzuclzoMZqmeT+mGqWK5N7pKq/rkjunaomOim536ha
qRw/kwuu3com99lUB70UXc8qP7wRvRarHtwYvdYrg62OzgPad1iATy64xz4v
Ogeq9z49Omspn0+LzpDqbyyLrkG07zAjOlOpBzI1OtcpB86Pzlfad1gRXXdr
v2NVdJbQnsjH0Xnp//VRdM2onvni6JpRPfPnomtM5f0l0TWj+ucro7OK9kqW
R/dDtPexNLpnov2R+5P7e9q/mBmdD9UDnxudgbXXsDU6v6lu+jA6j6mW2RKd
r1SvrY3OPNpP2Rydc1RHfxSd8VTHvRidqVQTvx5dv6junh2daZWHP4jOeKrF
3ozOTqrd5kTncO0NPRudt7W3Mis6G2uPZlt0HlNduSY6U2lv6P3obKlM9xa+
quBach0uW/Ce0ejk/qf2XD6NzoSqVYcl9yG1B/FudE9YufcdfH7Befvt6H6v
svQifEjBOXlhcR9M9+W94n+7zmGv5D07Zaejk/f+lJFS8h6ics4LxfdU12oD
PqXgnN82uW+vvZgOyb137W+2S+7Va0/ttuT+vPba2if37bXXuT66B65a4Jjk
vUXlrmOT13HNIfsk72kqdxUl7zkqj8XkfUzlui/5nqsLrhd+id53UO76LXp/
U9ns9+K1W7no1+j9UOWxL6J77Krpfsa3FFzH/RS9B6Gc9lV0/1913NfF904Z
YHv0HoFqupycu5Q97k7u92rvbG/cvOAs2jF570P7y4fjbgXn6iOT+5nKn0ck
7/UoVx+WvNejGuGo5H1Y5dXOyfsm2muultzX1brWSuO+4P2mW5N7ttpr65Tc
n9dec6PkHrL2p1om78to/6tHcj9f++/1k/vG2psbkdyj1n5fw+Ses/aqRiX3
sbVveEdy/1l73F2S1yatI22S91+079ak+Dy1ZrVO3tPRHlxPPVcF7++PTO6f
a7+yQXKf+f/7gMk9be2XDU/u1Wvv8n8XPFci
               "]], 
              Polygon3DBox[CompressedData["
1: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
unJ+1q/i9xjzVyzZo+aCI5voiRNL9KpnQq9HT8ON4z16RXoCPkvPRO9Ez0Cv
SU2tV2OMVWvrSejlGBP0Koyxekt6NsZeY46xx5ij12BM0TvSwzHWGGP1nvRE
jL2H8t4XldRM1k7GOGNvv05i3x6Mn1LiEekVOafObe9OtIhz7tw75+Zq94R7
wxitd2OMNHYb042dxmRjszFXbeqeMfYaw91LxmhjuTHf2G2MNlYb09Warplr
55qrTdxj7jX3pN6VMdZYa4zSezEnWqupkcyV5lRr0Ts7ybXmXGstNZC5WA1l
LWaNpra6uErtYg1j7W7O1UtRU5mL1VTWcuZMtZaaSa90RCdaypytt6KmMpef
WsUb0CNYpY7msra0BlSLmUP11o7pJLduWUXbq4nVxsZcY6+aSG/OHGguNOfo
dZkj9OLUiOYOa1BrUTWYXmz/KrW8Nb1emTW2tbY1kt61Od/a+rlOtIBnwrPh
mVFbeuY8e54JtZ5nwLPgGVLLbQ/3K6nZ1rfWgq8q8SA2MDfBV5d4DBvCa1bJ
ZeY0a1M1hdpiu0609U7wNSWexkZ1NKRe17udaEtrOr0ua3xrve3gviU18Xp1
arBr4ds7qc30XK5v19/11BM5r6Sm1CvZCr6wPQ8rw9vAV5bUqGu7P/j/8Uo0
k9pJj+T8kppb72RbuE9JjbtuHQ/mgpKadKV2P/Vv94P7Q0/ounY/6BWNx/j4
JTHT2GnMVmtP1Uks/8/DgL/rxNtQo6iFl+lEu5hT1QLmUHOtOdTawRxgbp2S
589ZolnVrnOqY0tqXmtfPZ5R7frrdZpz1fbmcHOxMdBYaAxUy4+zrijR1Gpr
a2hr6b3b9TTn693M3YkWUCOpldT41jrmfHO/Od5aV82qdlVjWhs9Yh1T0nOw
92BNYG2gxrUWViOpldRs1s5qTLWmmsJa1j2jX3F+lb1kjjHXqNnU8kuaB0t6
EvYm3I/Wpj3b/aeGaEpyltrCHD9JSY4y9+shbNXuX3sHegDrlPRE9AbUeGo9
NZFepxpJraQG1DtTU6mt1Fzfte+zRfv79QrUYGoxc4xepJpObaeHYe9FDbRB
iUepNrLmXb/EI7IWVhOtV+JBqZXMofOV1EjmVnsiL5f0OOyV2BN6qcSDtlek
ZlQ7qin1ytQIC5TUVGoHPTe9VD1cvTg9GL0YPUG9NnsiG5Z4xPZK1Kxbtufb
+VaDqkXVqHplalC1qBpVr0vPZN0Sj+6tdr+u0a63+13PZK12/fRSrHGWK/Fc
rH2scZYp8XCsffR0XO912/1uTbh8iYa0VtTTWKXEI9Tr0BNZocRT0CvRA1m5
xHPUG7En90pJz8lenZ7QIiWeiV6RGnKhkppQbWmNuGR7Xj1/apIFSzwYtYoe
09olPSi9Jz2EhUs8Hb0Fa9Cl2vP6ZHuel2jPp+fLmn7pEk/JWl/PYdESz0Yv
wpp42RLPylp56wmT//u1+cjzNq6Np8YXe5Svl/Tk7F2q4eZsz7PxSU04d0mN
rFZUs81T4jGo5dTM85bUnGppNd9cbfxRC9rTe7ekZ2ivT007Q4kGV+saD+do
45fxTw08XYmmUxurcacq0cBqX+Oz8VKP4qauaP6JSjSstYAe0RQlmlLvSE0+
WYnGV6tbA8xU4uFYG1gj1G08tnawRh6/jcfGfzX6NCUaWu1uPDQ+29O9pI7H
8H4br42P1gSzlHiI1grWELOVeETWFvZs32vjnb1ce6xj23xn/LMn+3xJz8he
rT0SeyX2ZOx92sOwl2EPxd6lPd+3S3pY9oLtUb9R0vO0d23P+LWSnqi9ZHuo
b5X0hO2t2mN+s6RHa+/ZHvarJT1qe9v2ZOzN2EOxd2XP94WSHpm9YHtG9o7s
+djbtUaZv8STsHaxh/tOSc/Z3q49JXtL9qDshdsTfqakZ2iv2B7ccyU9Qntz
9qyfLemB2su2Z2Xvyp6VvV57TPaa7EEe1+ov9a16VP2nB7FGGw+Mt+Z8tcLJ
VbRA/zp71T3/X/3S5Cw4h87lA03mxjlz7oY2mVvnzLm7oc7ZcM+792+qcxY8
I56Vu5r8FtfUtfUMqgVOqXI2hzVZC9fQtXywyVo6Z87dkCaxxzVxbe5tsjau
qWurh9qtzcfqx/uarLVn2rNtT+74Eo/TXt3wJmvhmfRsjmhyNt2T7s27m+w9
19i1fqBOrDQmGhuH1omNK5X4z3r69rbs8ej16/nbu7LHZS9gZJ3Ybs40d9rD
sPdlz8vexsN1cpk5zFxmT8DegHrcXrA9HuuT3p3UL+pl9Yf1kvr5oTq5zxxi
LhleJ7aaM8wdw+A1Oon5xv776/TzreGs5UbVya3mVHPrg3VyjTnEXPJondxn
jjPXPVIn15mTzc0j6mgBY7qxfWCTs+GZ9mzf0yT3mkPMJYPgDzrJweZiPQK9
Aj0Cvbh+dWKNMc/Yp6ett929Ey/9yjqxTI2iVhlcRc+r/9XL9lDsJdqjtbdy
eZ3YqMZR61jzW/uf1klvrk+dWGmMNFbqieqN6rnqlfv8se15Vy/aczqpxGOw
F6XHqdepp6qXbr1p/Wi9aH3Zt07sNiYbm/XE9cb1/PXmrZmtnXt10vvR47WX
0KMT7/eyOtrMGG2svqKONjPmG/uvrRNrjenGdjW5/eOzq2h1e9QnlNTo9q6t
Gewn965SS4xsEouN4cbywU20kZpJ7aRnrHesx2tv4Lo6sdwYb6y/Hp6jkxhv
rL+6Tm4zh5nL9Hz0fuyR2Nuwx2HvRP1p7+PSOrnHnGPu0UPWS9aTtZdxVZ1c
aA4yF91Xx3tQs6hdrFnsH55VpZa5pk5uM8eaa++to23UQGohe3r29uxh+W2D
PW6/NbFnYu/75Ca1jjWNtY09d3vv9nT9tsAeqL1de4j2Rk9qUltZI1krndhk
71lzWXud1aQ2tCa0NjyzSe1mDWkt2atJLWkNaS15dpPa0ZpQPX9Gk1rLms/1
OqdJ/LamsrayZ2nv0jnYuk5P096mHo/fnvRuUltaI1ornt6k1rOGc38MqaMN
1ZRqy9MY799JTeh82kO3l24P3m9d7Hnb+7ZH7rcs9mzt3brntq0TE42Nxhh7
dUc12dueGc/OEU1isXvSvXl4k7k3Rhur/SbBbxNGd/JtiD1We632rP0Wxm8c
/NbhsU6+RfEbCL+FeKKTb4Ps2du7t/7325Njmng7xlBjqd8A+C2APXy/LfKb
Ar8tGNPJtztHNznbJ5f0V+0p21t+tJNva/wGwm8h/MbAb5lOaVL7WlObT+2p
++2GZ8xeu3Piu15ZZa5urlObqBnVjrfWqTXUDGoHPUt7l/ohepkD6mhbNbfa
+9Qmtbua1vx5T51aQM2r9r3LnN+JJlYbD66jha0RrBXsoeq36L/od+l/6cfo
p+h32cPWD9Lf0T+5o442V+Or9W+po22ssay19Fv0g/SH9FPurFMbqOnV9rfV
0f7WVNZWt9epFawJrA0G1ald1PRqe+fcuXfN7HUPrKP1rQmsDe5sopXURGoj
e/r29u2p++3QgCZaSQ2llrqjiTZSY6m19GQ8G+dVOY+eGdf2iipnSU9Ub9Sa
2m+n9Hg8++dUOa96PJ79c6uc1xvr1ALWCNYKd9epXayBrIX+D5ZfgSc=
               "]], 
              Polygon3DBox[CompressedData["
1:eJwl1nW4FGUfBuD9aAEBaRQppUvpBukSkG6QbpBukG5QWuk8xKG7u7tTpRsE
BCT97tE/nnOd575+7+w7s7Ozm7JR+8rtIoRCoVMSWaZGC4UWRgyF9sHTetMo
oVBv1ov9wuaxXOyWNGfdWD+WUv/V3CJ2gJ1lzdlNaca6sr4shT7TXDg7wi6y
1mwKW8D2RvhvL43ZDWnKurA+LLk+2txkto7tYlXYDLaUHWYXWCs2iy1jR9kl
1obNZsvZMXaZtWXT2GJ2kJ1jLdhkNp/tYSdZEzaKTWJr2U5WlU1nS9ghdp61
ZLelBevO+rNU+nVpwjqz3iyZ/ou1YWw/O8OasccykI1n01lhfYC5oWwBW8mK
s/rsK1aRVWW3vXF1WGZWnn3HbrJ6LCurwKqwW6wRK8zqsybsJavLsrBvWWV2
gzVgBVgd9j37izVkBVld1og9Z9+zQqwea8xesFosOSvEirLTrDZLwQqzYuws
q8mSsYLsG3aGVWexWRb2NdvDarA4LCvLxnazt67DLnaK/cEG6OPM/cI2sr2s
BqvGQiw5S+nfNdbOYSvYcXaFtQuuOxvGFrJVrBjrx/qy6Wwhy8v6sj5sGlvA
8rA+rDf7lc1nuVl/1o/NYGEsHxvBxrJlbCMrx35k/dlMtojlZyPZOLacbWLl
2SA2nIWx1awEa8yKsAasKXvl3IayUWwJW8dKmxvCRrLFbC0rxQazEWwRW8NK
smFsNFvK1rMybDgbw8LZBlaWjWVT2Qa2h1UP7nlWkQUPky4sKvuJ/co2sX2s
JlvCtrDL7B7rxRaxTewiu8N6sDC2kV1gt1l3tpBtYOfZLdaNLWab2SV2l/Vk
C9h6do7dZF3ZCrabXWdP2SC2iu1lN9lzNphtYkfZQ/aWjWbr2EF2l71iw9kG
dpjdZ6/ZSLaUbWVX2H3Wm61ke9gN9owNZFvYcfaYvWdj2WZ2jD1i79gYtpEd
YQ/YGzaKhbNt7Cp7wPqw5WwH+509Yv3YMrad/cYesr5sn2RnxVhpdt/9spWl
ZjlZXnaZXWRVWGPWisXUj0o+VpZVZE/NXWJVWRPWmn2sH5P8rByrxJ6Zu8Aq
s0asJYuhr7a/fewW+4sNYTslPcvLCrLfrd3O0rLcLD+7yhawqCwOS8I2szD2
EYvPPmNb2Q6WjuVhBdhvbA/LxAqwIuw628uysaKsFLvHdrEMLB8rxP5gu1lG
lp8VZtfYEZaXlWEV2J9sjXPbz26zF2yomfXsELvH/mYj2HEpyiqzmuyNtRPZ
X3rUCP99Hy/0ZzJ7qccInC1iU9gr/WMJHnGL2VT2tx5bPmJL2Es2x2usYttY
w2BG5rE1bAdrpD+X8WwuW8Yq6c/kZzaHhbOK+pPgWcQmsBmsiP5n8DxhE9lM
9o0+SV4E+xD/hsLs5VHwfWbuZzaNFdKfBs8nNonNYkWD85cJbB5bzr4LjiUT
2Xy2glXWtzrxE+wJ+8DGBb9B5I0eL7heLNzrjg/ORY8Y4d+vgtB8NoO9D+4f
icVWsJnsQ3D/BNeQrWTT2Ts9UXCt2XI2i/2jfy5x2Co2317WOfhZdoN1CZ5X
Eo3FZZ+yLebmmlvDTrNrrLOZtewAu8NesmHBeyYRWTSWgK23dh6LzGIG+2Eb
2Ss2l61m29n3wW8Lea1/ItHZ0mB/LIq5WCwx28SmsbfB8SUmW8ZmswjmorD4
bF2wZxaJRWcJ2YZgL/a8lp1h11knM2PYFLae7WbV2H7JwYqzMuyBtQdYTlaC
lWUPWVtr67HebBBLaKYNq8t6sYEsQfA7ipVjrdgPLBJrysqz1qxj8HXPmrMK
rC3rzKKwdqw+68MGs0SsO+vAxrIpLAPrxtqzMWwyS8+6snZsNJvE0rGOrBUb
zn5mX7BOrDUbwcaz1OxOMMsGsJEss97ZXBs2kk1gadhZKc1qsvqh0L8fnC7m
2rJRbCJKy85LWVabNWQR9HvBMdkgNppl1R8G58KGsnEsm97M8b5lbVgnFjn4
XLGZbBs7xOoGn182i21nh1m94PnAprMt7ACrzf6QRqwj68mSBs8Mc9PYZraf
1WLXpDHrxHqxz4PPuLkZbCs7yOqwc1KG1WIN2P/0XuZ6sqlsLsvJerDubDKb
zXKw1qwO68kGsHjsQfDesSFsLPta72muB5vC5rDs7H5wrdlgNoZ9pbcyV5v1
YD+y+Kwlq8Tas64sGrsbvO9sIBvFsuiHJQ8rzb5lT9zjHaxtyPqxoSyJmTNS
itVg9dg/5laxhCwNS88Os3AWiyVjKdgutpjFYImDZxHbzpawmOxTloztYEvZ
xywpS852squsBmvO2rE4+mWpxpqyNiyWvkLisy9ZWnbQ2uUsHvuCpWEH2EGW
i5Vk5dgjdojlZqVYefaYrWQJWGqWjh1i21galovlY1fYIhadJWRJ2Ta2jMVl
qVhqtp9tYV+yHCwPu8RWs0QsLcvAjrDN7AuWneVmF9nvrBZryTqwuPopKcGq
sTrsvbmTrDirymqzd+w1W8V2sePsh+B7R1az3ewE66ifkGKsCqvF3lp7mpVk
1Vld9oH94N5oyYaxn9iXZtqzBqwvG8ISs/XyGcvIsrAT1q5lSVh6lokdY7+x
mqwFa88+0TdJKpaN5WIXzK1jn7IMLDM7zq6w6qwZa8ti62skMUvHMrKj5jaw
pCwTy8pOso3sc5aZfcVOsQnsefB7RiKxBez/f5QrjA==
               "]]}], Lighting -> {{"Ambient", 
               RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
              "Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{2, 0, 2}]}}]}, {
           RGBColor[0.368417, 0.506779, 0.709798], 
           EdgeForm[None], 
           Specularity[
            GrayLevel[1], 3], 
           StyleBox[
            GraphicsGroup3DBox[{
              Polygon3DBox[CompressedData["
1:eJwt2XW81MUXxvG93B2GeyjBQuSntGCRYhAC0l2CKCGIgh2IgBgoiIqiIIqA
gd3djWJjC3Y3IoqtSP0+z+vZP5Z9M3fv3t3vd+bMOWcajD9xyAmVCoXCA/xT
zvPKKBQWpkJhWJVCYXQuFMaVFQpv4PF4Im7Iz47HJ+NVjJ+AJ+P38Bh8BH4L
H46PxO/gcfgo/C4ehcfjN/FYPAG/jU/Gp+EP8Yn4VPw+Pg6fglfjAXgoXokH
4YPx63gwHo5r89lOwlPwB4x3xF3wC7gTPgi/hDvgrvhFfCDuhl/GnXF3XIn3
GYiH4dcYr4Zr6/MXC4U9cWu8gvGX8eu4agXvhVfiCvwsfhEX8Qv4VVwFv4Lf
wOfy/m/gd3A1xl/Cr+HAT+EVuAwvxy/gclwd18LP8Hefwy/hxPjz+BWccQvc
Fv/O59wbt8HP8/q9cCv8HF6BX8aVef0uuBH+mtf/DzfAy3lNPdwQP4sn42m4
NZ/5FDwVf8R4PzwEv4r748H4Fbypsq/VCt6zQfLrOxc9b/Q+XfB++CzcS383
ef500LXFs3BffX58Hu6P98KzcT88Ht+JT8F74HNxHzwB341PxfWT59KBeJfk
udQR74vPxD1xO3wG7oHb4On4ILxr8vzphPfHZ+PeRd97XavfWCTvFH19fsX1
kudne8Za4Dl4AD4K34tPw0fie/AUfAS+C0/Gw/G1+ChcPXld7IlrJq+LvYue
01p3rfAIvAxPxD9yzX/BTbmPa/F6fAM/v57HVt07XvMJ47+WeS3XSl6DLRnf
JnlttsA1ktfsXrgseU3VL3oNaE01wIXktbAr3lr0GtyF5y1Fz4H/6ZnXLMXj
8cH4GnwkHoavxhP0e/gqfAR+iM/2ON7MZ3sQP4Y34Qfwo3gjfhg/gbfga/GN
+Ge8EC/GP+LL8RK8Fl+R/Rn0Wa7GN+B1jG9mTpaV5uQ1jF+Pf2K8Lz4c74Z/
woVKvoZ98FhdW8aX4ZvwL/h6fIvuO74J347/wDfjO/Cf+DJ8JV6Dr8M34/X4
Rnyb1ia+Ad+quYRvyZ7Pmtd34/vxX4zfhR/Af+PeeAxugnvh0bgxHoon4WZ4
Uvbc3gcfnb2+2uER+DjNK3wwPgbvjidmz/+2+Cg8A7fBx2TP+X3xcHws3gMf
i2fi/fD+eADeGXfFIzQf8EH4EM0T3BOPwo3wMHw0bo6HlPYRzevu+FDNMcbb
40GaS/gAPBDXw93wSM1J3KUU5zU3e+DDcEPGF+BF+Afclp+djrtxr+czfgX+
nvGzsmPLp3gN/lnXk7XzHV6r98Hf4DX6W/hz/I2+I/4Br9M1x9/iH/WZ8ff4
J31H/Cn+GtfFb+JVuAZ+F3+g74u/xj/o+uAv8Xf6vvhp/Bwu4Efwk3grn/MZ
/Ly+L+Nf4G91TfCj+CnFQL7r6/hdXJ3x+/Ej+D9+9yv8ve4L42/h1bgmfge/
j2vht/F7eBu8Cn+It8WX4svxd7zPPLwAf40vxpfhb/AleCH+Fp+Lz8df4nOy
Y+AXeGZ2DP8cn50dwz/DZ+Jz8Md4Fr4Af4Vn4wtxV8VL/CD+h/H38Sd4Bz7b
avwR3g5/hr/CO+GP8Of4Mn73Q/wZrsP4B/hTvCP+S3sATjzfx/jDeAPv/x7+
GG/Pa87I3lM+YfzI7LnUGu+TvEa687u98KX4EPwfjw44eN4uef43xjskz+2m
eLfkNbgv/o5HU61x9o5yzWNd81K8Ve5RG3+v39Ha5zVFxnvq+zJ2Hd6Cl+s9
ktdmO9xMOZnWJt4dn4gPwNsnr50m2ruSY0Ub3CQ5DuyDv9X/Fbv4Wz/ovXTN
8RrcHP+LGyev37Yawyfg/fE3PBorBvKayoz31j1ibBOPTrha0TFX+cAqXnNI
ckybytgs/CZeWHTM1f71AB6ZfN+nlfYUxcaTi6WcSfcXD0qOvSfigclx9QS8
kUdHXJXnqqkUo3AF7qd5grPiu+YDTriX7jvezONArSOeg/H+Wst42+T41qi0
Fyv+NCw6H1I+0xVXS6V4havgvpp7eKfkWN0c10mOh83wjsmxazf8mv6e1hHX
Z6U+q9YaflXvpTWFX8aVFbvwK/oOWlP4Df1tvAa/pO+jNVXua6797l38Ii7i
D/Hzmmd4Nf4E76yYiT9THoZ/KnfuqByyEs9/8NgHl/P8t/I2XJnnT3nUwz/y
+nXKz/Am/LPyNrwZ/6R8Dm/Ea5WrKS7hX5Qn4S34BVyO38ev654pVuM3lQ/h
tfgL5WR4Pd6A2+MKnv/lcQCuwvM/ytVw5vlz5Xz4Z16/c/I+vkfROa7yt98Z
r5u8n+5edF6q/ah1KcfTXH2P1/yotaT4gN9WToZ/wR/o/im+4fe0xhQr8Me4
rmIm/lD3WzENf6R5oJiJ31dcUAzEqzS38Af4LeVheB1erTiCP8KDk/OKkxg7
FD+Ep+PDkmPX6XhUcsyfgY9PrgUuxscl5/kX4ROTa5NL8NTkvWkRPiG5NpmH
pyXvEVfi05L3lCvwOcmx9Dp8dnIcvra0HhVvr8cnJdcvl+KTk2ui+XgR/hM/
jJfgf/Bj+Ar8B36o6D1M63oBvhL/hR/B5yfvd7fgxfhv/Cg+Nrn2mYvPS95z
b8Izk+P8MnxWcjy/Bk9P3uMW4/VF1301eP616HqwJs+/FV0DblN07fsFvlE/
x3PxUP0cX4SHFb0/aZ8agnviS/AI3B1fjA8ueh0pntfi+auia7ECz18WXT9u
5f7OSM4NljJ2evK+vASfmbzHXY3PSN6XryrFHP3dwbhV8r45qOg9T/fihtI8
1/ot47ll8r48EC/F/+LHcQ88Dw/HV+P/8JP4WrwJP407JedUo3GH5HzgMK2/
5H3/UK2/5HxgZOk+Kic5F3dMzrtG4Sl4OT4P903OpY9RrE3Ok8fgU/EzeDbu
l5wzH4sHJOfJxxedH+v9z8ETk2vkOXg2fgtfjvsn5+fH4dHJdcQZeExyfXEm
HpecX83EhyfXF2fjscn1yFl4Mn4az8K9k+uISbhPcg1yNJ6bnMvdji9MzrVu
wxck53W34ouS88k7SvdIe9z9eE5ybnkzvhz/jh/E1+CN+Cl8Fd6An8AXJ+ec
d+JLknPOu/GC5BrwvtKcVO0zDndJrokOx52Ta6WxeFJyPnk+Pjq5t3ABPia5
X3Ehnp+cG9+LL03Oe+/B85Lz5LvwMrwZP4OPKPUHFEfvzY5R/5IvjczOE/bG
u2fvrbVwy+x1ofXROpdyG+VXubQvK4fPpVwC74E749q4VS7lS7hNLu3duG72
npLwQ+H+QifVleGavyO+L1wbHIDvDOdkqpXuCudPqpWaZ+ct2+D7wzlfe/xI
OBZ0Vn0a7h10UH0a7hEciB8Nx4gu+O5wnqQaqll2TlIT74xb4srKLcN79nrV
beFcKjM+I7yH6bucHt6bi3h6eN8tx7eFczLlpVPDe08Znhbe1yvhO8I5ouq7
KdlxbP8qzrVU5z7H6xow3o7xKozXz97r9Rl2zY4hiiW7Zee3NRhvmJ0/V+Am
2ftvNdw0e1+ujhtn78VVcaPsnCHwodl5aQt8b7jnos/zWDhudsVbK9xTUL9u
S4XjsvpX5eH+iPpLxXDPQn2nFO6VqB9YCPcm1NOLcN9HfciKcI9J/caycC9D
PcBK4X6H+n5Vw30f9SF3Csc+1Sw7h9eP6pq64ZiluqZKuO+jvuiO4fiourJG
uCelvmidcBxUvbO5wvuNeobVwv0p9UUrh3sx6jHmcI9G/czx4VxtHdfs5XAM
Hcz4K+G8eYg+Z3aupbnxQrjfNAC/FI6ng/CT4VqlO34xHNcG4sfDe8BB+Inw
HtYNnxHOtzQ/bw/XCeoJPBfuW/XFK8K9tn54Qji//IXPckQ4n/tZNWu459Wf
1zwb7lv1UT0b7g31wsvD/a/e+Klwb6gHfjrcM+qpmj1cn2h+3hquYVqplgzX
UZqHj2fXEfpeT+K3y3ytnsjeF3QdHsvOMbRHvRreM4Yy/mqpZlQuc352n0rr
9+PsWK2YvTI7H9A1fw1/WebfvSxc56hHcWk4N91JdXE4N62DLwzn0IpXc7J7
X4oh88N1Y118RbjGU8/k8nBNqF7KgnA9ox7LwnB9ot7IedlxXvH+guw+m9bO
hdm9RN3TK7N7jLqei0r9JdVSt2fvs7p3d+JnyzxnFmf3TnXNl2b3LXVflmT3
LXW/rsL3lfk+nlqq05WPzOWz/Vl0DL8je6/Xfb+11KPQvj0tO99QzJyb3cPU
fLsIX1fm+Xlb9p6rOTY1O49S7J2enV8php+WnYMphs/A88sce0/PrscV83cI
5yiq3y8K1/zaI+aF6wTtLxPDddRv/N5R4frqV/W6wnXIX/i4cH31Nz4+XJP8
gyeFa7Pf8SnhGmATPjmcu29Urytcy/2BjwnXeH/iyeEaYLN6DOEaW/FzVrje
UPycHa6XFG9PCtcJ/6lfEq7PFVdPC9cVBTwz3C9QjD01XJ9s4fVTwnXIVu3D
4RrjX8XgcD2zQb2ZcJ2mvemGcF2qPuFN4dpVe/ct4TqqJb45XDspht8Yrmn3
0nwL1//q4y0J18Dq+y0K19jq3V0Qrv20j18crie1v18f7pWox7gs3ENRn3Bx
uFZXf+/8cG2p/GFOuObUHn1duMehfua14VpdvdCrw/W/+rfXhOtz9XiXhnsB
6p1eFa7z1VPdPpzLqh91T7iHoj7noHC+pb7QgHAepv5Yn3Cep35a73Ctol5f
r3Bup17cwHDOpD5V33COqD5b/3BeqH7gruGcWD20fuGcUn25XcK5pvpsB4Xr
GZ0fdQ/XOTonGh3OF9W3HBPO3dWHHBvOz9Sr7Bau2XQmNTScL6onNjic26mf
NiSc86k/1iNc7+k8q2e4vtL51OHh3pP6pf8L58TqB+6bS30V7bnZdbrm2I7Z
tb/ykNrZvSzN+e2ye0qak1Wyew5aX1sru+bV3lHIrqm1p5Rl18vKkbZUdr2s
PXG/XOrP6N5l1+laC9tm9680/2tk1/uq6Wtm96m0jtrlUn9GsSK7L6HcaZvs
PpjWb1Ue9cu8RuqF82n1J2tl9+603jdU+BxI53HjwucuOosZFa6p1B/uGq7l
dDbXMVxjq5fbKVyX6lxv/3D9rDOOzuGaUOd6HcK1us4BDwjX1eoJtw/X5+oV
twjXMzp3aBmui3R2sHe4ttHZxH7h+l/nLK3CNYDOFCZkn3lpPz0Mn1TmNX5I
di9R67pduKegs5h9w/0CndG0Ddfh6p3uE+41qOfcOlxXqGfbJlxXqBbYK1xf
6eyjcbh/p7ObRuH+nc5KRoTrf/W3DwnX/OqNHxquXdUz7xKuh3V2OTzcX1B/
fli4jlIf+OBwf0F9+MPCdZT6+SPDPQj1ww8M19s6n20e7qfofKdZuM+iM6b6
4VpUPfAG4dpS5wgNw3WpzhqahHs0OntqGu5v6lxpt3AfU2dPu4d7NDoD2jNc
i+rcZ49wjaqzpIrsnpX2l0rZ/SXtR9pXlZ8XFe/C56A6Z6+T3XNTLfBfhXsK
OrfdNlzz6wy9VvgMVWfo1cNnsTp/rx0+p9T5+KYK90R0Llye3bPSnrixwj0L
nf/WDJ/L6vy9mN3L0t5XObt/qH1tu3A/QufCObs3qD00ZffEtA/+HxnA8oc=

               "]], 
              Polygon3DBox[CompressedData["
1:eJwtmnW8XNUVhd9kzss9EyAhJAQIEOJYgODuEtzdCe7uGhxKcXe3UqxClRaX
UlxKcXd3SKDf1zX/lH6/c2fyZu7de6+19oyYuPf6e/Xp6ek5l/8p/HdI09Mz
c6un5yXgkH49Pe1OT8/98CnwMnA/+F/wmfDKcIUfgU+HV4QH8foZ4f/AB8J/
g5+GD+rt6VkSvhN+CN4DXhj+B/wsfAi8NNzh/R6Fz+D1K8HrcL4DPIDzXngq
zh+Dz+J8Ffg/lfeGl4MHwetx/U7wQK5v4LuaXL8vvAT8PjwFvgLeBn4T/g6+
CN4MfhJ+Bz4ZXh1+Df4aPh/eGH4L/h6+GN4cfhv+Ab4E3gL+AP4ZvhLeFn4X
/gm+DN4K7tvJ5z+Nv3d5uBd+EP4VvBz8Otd/A1/A9ZvAb8DfwhfCm8LvwZPh
y+Gt4YbXPwz/mtevAP+xyf3Zh/PF4cL5A/CpnC8LP875W/CJnK8K/67J6/eE
F4F7uP4ez0vu1x+a3I+9OV8MbnF+L3wS50vBH3L+C3wV59vBU7gff4aPLrn+
R/iP8BEl93sA1w+Gn4X3hX/m/C/wMSV/b3/OB8HPwPvAC8NLwN/Dp8MzwrPC
r8CHwRfCl8Eb8e/fDV8EXw5vDP8Dnty3p6cPfB/XT4SHcj4b/Bp8BHwxfAW8
Cdf/E14UXgr+kfMz4d83eb734nxReBF4SfgHzs+A14QnwtNw3oYfgl/28/Sm
Pvrwfd3n81TyfD/G+ZvwCZxPgP8JPwcf2pv6uht+Bj64N9/vZL6fP8FHlfz7
P8F3wUeW3K+BXD8Efh7eH14X3hGeltf3haeFp4ef43w/eG14e7g/5wW+B34e
Pqw3z8eD8Evev97U38PwK/Ck3tRbG67wI7zfLvA78I/wpZxvCT8Fv2u/gNeA
X4W/gs+DN4Kva3K/t4Xnha9t8rxsA88Db9eknofDU8PXNPn8W8Pj4InwwfAI
eBr4eviv8HbwfPA28AHwMLgffA58I7wOPAo+C74eXgseAR8Bnw0vAU8PHwOf
By8NzwgfDZ8LLwXPAB8FnwMvCQ+xX8H94Sf4PvaCz4ZvgNfmfCR8a5P7vws8
P3xLk/rZGR4PbwnvB88CV3hv+Hh4Hnha+Ar49/Dm8BzwHvCx8Nxwf/hy+Hfw
ZvDs9gN4avjf/D17wPvAJ8Dzcj4Q3hc+EZ4Png7eCz4OHgcPgM+Fb4LXhUf7
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
xzNb0+Pp9fRk7ob0ZHozNZdZt5rxnXYyP7WkGdNn7ewYzJ7MhD9pR9OZFZuB
fdTODsNszEz0rXYyO7NSM7UX29mRmLWZsb/Rzk7N7N0M7qV2Mn2zOTPRF7rf
j1mpGe1r7WRmZrdmwB+0k7GZDbsDea77/fr8/D+TL/EMZvVqbLW2GtHsUc2n
9nu1+zyqCd9rZ0eoVtRj6DX0IO7K3AHd0a0H60lPojfR47zefX69vwPhKX1T
f9bP5/BHTTLkV9rZabS69eO//1q3vsyErur+PdaTO4mzuv3FejMDMgsyszGr
dQdzZrffuJvR07irdKel11Ezq531QGaxZlRmVXoQs1gzKrMqPZNZrpmW2ZaZ
k1mzmZHZkZ7JLNhMdlK339zV7XfHdvuF/c+dmrs1dwDuRt35uFs1k3YX5M7F
3ac7PHcxZk5XdvuJWbc7Gnd5ZtrubvRs7g7dKerl9HTuFt3p6fXcIbmrcwfh
bskdlLsoM2h3r3osd4fuuPReZlq1ZOdm1mVm0bckUzDLMEMzSzNDM8vW401V
4nH0fgvUzD5ntrN70ZrZo2ZRuywGH9PKTHI2zVXj9xcq8VuL1GgbZ5qzbaGa
2efMd/YvWDP7nbHO2rlrtMvCJXnFwjWz0Jnp7FwWPrOVmehsnL9GS6iR1Erz
1GgTNYxa5scms8cZpLb4qUmeqqZQW/wAD2+lxq31eWu0nBpHrTNDjV8eUpK3
jIf3aWXGO+tnqslXZyzZH46r0U5qMLXYfDVaQI2oVnwYXq+VHmuvnbMm/1iw
JH8dWpM/zlSyrxxdkx/MUZLfzg5vC89dkq+NqskTZi/JN+eo6c32aPPglWq0
oRpNrTa2Jt+YqySPG1OTt8xZknc+WjNr7OH28uVrtKEaUC24Wo0WViOrlVeH
b29FI6uVx3YyG+0Z9o4RNfnTmJI8ebaavHlUiV8fVtPL7en61Zlr8sKhJf56
lpo8ceaSvGxWeF14lpJ8eUwnXkUPo5cZWePvx5bkG8Nr/P/okrxgcpM87+t2
9qeP1cxOZ46z5+cm+d637ewnemry4e/b2b/0r9HOamq19Qo1WlcNrZY2k2xK
MjqzyqZm1jvz3Rf0hcfb29vZVw+oqTU1udp8mhqtbs1au4Nr8o1BJfleqcnD
JrezL5++Jg8ZXJIfdmryxFKSV05V87dY89b+ujVaTo2n1lunRpuoUdR2G9b0
bnu4Wmjqmt7hZ/KzrQc/2YomVBuqofX+m/ZGW2/A+evwNSX7l341vaa3ZJ9R
a/LKdsk+Y0jNvmH6knxzUI1WUbOYX05bk5fak+xNnzaZlc5UZ+snTWarM9PZ
+XGT2elMdDZ+1mT2OGOdtd82mdXOUGdpn5r9zo/t/D7m+yaz3hnvrP+lSd78
XTu/f5nSZD/zTTv7+e+aaAE1gFrg8yaz2pnn7PuyiRZw5jv7e2vyyint5EHT
wcvB05TklwNr9idTl+Sd7Zr87ad29mkz1uwzZij5/cQXTbSEGkGt8E0TbeBM
d7Z/3WS2q2nUNl810TZqFLVKqyb/+6Gd/aZ6cURXT6oHvYfXdOe1uzVrdlRX
f5m9PV2j3dSkalP1vnpdPa++f7bGC5ghmCU8V5MlmIGYhTxeo+3UbGo3n2mf
bT+zvw1Zs0Zbq9HV6k/VaE01o9rRe+a98zP4W6cna7SgmlRtao1Za37n/lbE
79Dv0nvurtKeM7KrN9XHa9TMdme8XsOeb+/3GTV7955576xBsz1rztqzRs3y
l6zxgnoyvdna8D9b8QR6g+drsh8zH7OfZ+B9W/FMeqcnarSrmlZta81b+9aE
Wb/3yHtlT3I3vVSNd9SD6kWtMWvNHuAu0R5gL7Dm3GVYc9aePcnd4tI1XlYP
qhe15qw9/cD4rl/RH+gX9F8+kz6b1qTZvM+sz67PrFn84jXeU0+uN7fn2fv0
b/o/e6i91Jpyt/1vrt+uFY2v1l+mxuvqsfXa9mh7tTPb375Yc9aePdzfytxd
oz3VoHqNe+D5W/Esehdr1tq1p/tbNnu6vd0adhe9RI131jPrnR+s8U56JL3S
QzWf3e9Ar7RWjbfT8+n9lqvJRsxkzGac0c5qZ/KErl+xNqwR/cyqNdmSGZFZ
kTPaWa2f089Y09a2msPfSjnTne3ONHeZagy1hj3A3y79P8MvmbFm+2oCtYEz
3l2cM9PZ6Ux197Qy//6VrWRGZkdqDrWHmsFdsDPaWe3MdBe8Yk22Y6ZjtqMm
UZuoefxtlTPaWa1mMRufUJN9mXGZdakB1YJqHLP4/2u6Eo3obuqRGq+px9Xr
3g8v34oH1gurUdQqahR3iQ/UeGM9rl53lZoszYzNrM0Z4ixxJro7UyOoFdQQ
7qbVOGodNZW73n/VeFU9tF5ajaBWUKO4a/gfPFDwbQ==
               "]], 
              Polygon3DBox[CompressedData["
1:eJwl1mWYVVUbBuCDDMMMjeQwQzN0d3e30g1KtxLSIam0pEqKASqh2AEI2Eko
XdIlIt3fva7vx/vjua93n7X3PmuvtXI/M+TpwU9EIpE9KlmomEjkWFQkciVp
JJIzSSSSLXkkkoQdYmdYPMvMUrHz7A4rzBJZSnaO3WaFWD72iA31w/P4T+xj
loKdlW/pK8jysqSxkchofcv4PraNRek7Kl/Sl4PFhT52hF1g2VlWlppdYHdZ
EZafRbPj7CrLxeJZMmOMNcZr/C/2DYvRd1q+oS8/y83SskvsPivGCrI07CK7
x4qyAiwdu8wesOKsEGvNFhpjLT/BDrMKrBCrxIaw/iw5OyVfd20iy8Vi2Rl2
kxVgeVh6doU9ZCVYYfYk+4c9YiVZkfC8nm2cMV7n+9mOMAYbz5azA2wne4KN
YkvZXrY1/L/sBbaE7WFfsQgbyRaz3ezr8H+wMexV9ifbzjK6lxtylKrASrPH
7Dl989nP7JMwLjssn3PPCSwLK88K6qvIB7N+7Ib6WT6tLyWLlkvpy6uvDO/H
erIE9kBOpWqwyiw7eyinVjVZFVaa5XNtWdaf9WLZ2D05harGKrIyLFFfOTaA
9WaZ2S05WlViZVlBlkFfXtaetWIlWTwrwrqzTqwsy8/Ks4GsDyvHCrAKbBDr
ywqxjCwf68Baszh2V45VVVkFloXdlpOryqwcy8diXRvHmrGGLDeLZplZY1aP
5WRRLCNryOqwAiwVS2AtWROWld2RY1QVVp4lshT6srHmrBHLy2JYVtaUNWDx
7L6cUlVnlVh+llJfPGvBGrM8LDnLwpqw+iwHS8oysAasdph/7KB8yjzIxjKx
wiyTvkTekbVhJVg2Vph1Yx3ZdfWT/LdrU7Bk8k31CzvLUrHkYZ6qA+wki2MZ
5ctqZ1iDWFL2KNp7Z7+xiywNi5WvqF1hHWFR7LG+q+w7dohFsyTyv+p7doQl
Z0/I19QP7BiLYUnl/9SPYc1gsSxK/kd9G75dloxF5KKeN4vnLcA7s3bsgfpT
PqwvM0sf1l21nx1nWVkGuYhrM7s2P+/E2rJiLCsryLqw9qw4i2OFWFfWgWVi
N+VkqiIrwx6qv+SjxsjCnpRvqV/ZeZaaxch31R/sH5aOpZTvq33sIMvE0sn3
1N6wfrGMLK18R/3OLrO0LIWcwb1cZ0lVeVYqrOPWpgnueUX4TbaLtdQ3nE1l
29gXYVw2iM1m37MP2UFWirVkM9jz4X2yYqwpm8IGh/tlRVkT9iIbGOYUS89K
sl6sZVi/WDpWgvVkLcJ8ZGlZcfYsax6elRVhjdlkNii8J5aTVWfDWbfwjllx
1oxNZUPCO2E5WDU2jHUN84elYcXYM6xpmGcsNSvKerBmYS6z7Kwqe551Dt8B
K8lasOnsOdaQtWG92Er2KmvOerORbDN7jzVjvdgItom9y5qynmw428jWh7nM
Hss51NOsavg2WBJ9uVhrViN8QzH/P4zkZK1Y9fCtsUdydvUUq8Yas3b6+rDV
7PUw51kJ1pxNY0NZI9aW9War2GusPmvFnmXL2VLWgLVmPdkKtizMZZbAqrDn
WBe2m+ViNdgI1p3tYblZTTaS9WAnWE3WjS1lL7KTrBbrzpaxKew0a8L6s7Vs
LjvOarCubAmbzI6x6qwLW8wmsaOsGuvMFrGJ7BRrzPqxN9jssKaxa3I6VYcV
Z2dYU30D2JtsHtvB/pXTqtqsKPubNdLXl61hc9g37KqcRtVixdhZ1kzfQPYW
m8/OseZsEHubLWCXWHv2AvuArWCHWGXWgS1g49lhVoV1ZK+wcWw7OylHVGmW
ENZY1kXfOPYJW8O2sRPyY+tGKZadNWHP6hvGN7B17AiryjqxhWwCO89asMHs
HfZK2BdYBzaKfciWs4vsKTaUrWeLwr7AOrLRbAtbyS6wlmwIW8cWhrWddWJj
2EdsFavMyrK6bCwbyaqwcqweG8deYFVZeVafjWej2JPWv1nsXXaO7QnrJJvN
3gvrMdsbzhFsPtsU1lS2n6VnL7P1YX9ku1kqNo29GfZH9itLzaazt8Leyn5h
adgM9nbYq9lvLBtbzD5i/7Ej4WzBFrDN7Ao7wOLYIraFXWNHWVo2k73DTrPf
WTr2ElvHzrA/WGY2j21kl9hfLCObw95nF9i+sG+xuWxD2L/Zn2Gf8f4Gslns
O/ZB2KPYAPYy+5ZtDmcG1odNZ9+wDeFswbqziexz9ia7wXqwSewL9hbLZ9xV
bCt7wM6FvUxff/YS28U2hf2S9WUz2A72Pkvp2slsdTg3sO/ZbX392Ey2k21k
KfRNYqvC3s++C2cBfYPZHPYD28Ji9U1kK8PZhH0b9m59Q9hc9iP7iCXqW822
sYfsPMvLVrKv2X12ltVybV3Wms1mM1hNVoe1YrPYdLaV7Zb/9Q3mZqlZPdZQ
X3s+n81idVkD1o7NYy+zOqw+a8vmspdYbVaPtWFz2ExWjVVgDdgENpq1YMPY
FLaVfc6qs4qsIZvIxrAarBJrxCaxsawSK8PqsDFsBHuKjWDT2Hb2JXuaTWEL
2e/sJ9aKTWWL2B/sZ5bg/S1ln7Ab7DjLzpaxT9lNdoLFsyXsY3adHWN52Ar2
FbvHzrBc7HX2BbvDTrH8bA3bzh6xCywHe5V9xm6xkyw3W86+ZHfZaXbVPXdm
Y9nHbDXLqe819jm7zf5m1/R1ZePZp+wN9h/rxiawz9haVpEVZpXZUDYg3DNL
xjKxRqwu+x/PNwbP
               "]]}], Lighting -> {{"Ambient", 
               RGBColor[
               0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
              "Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {{
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwt0UkuBEAUgOHSrbU2tTZERCSIAyAOgDgAHQegY22KjR3iADgBiQMgDoA4
AOIA5nmeZ74Wi5evVvXnVdVnBtMDOSGEMZMTMVyIhZDiCuu5wWbusJ2H7OYj
+5ibF8IwKzjBRs6wlfPs5BJ7uMZ+bnGUe5ziHff173nAh2yHjzziE4/5zBO+
8JSvPOMbz/nOC37wkp+84hev+c0b/vA2Ev4WntW/dZzkLke4yQxXmeYiOzjH
Fk6zgeMs4xAj7OW9d+nK7sM2brOJ66zjMktZq59kDUtYzWJWsYiVLGQ5C5hi
gknms5hxFlI6JOjqEGcuY4wyysj///4Coco85g==
            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0TkoB3AYBuDf330fsxSzFLMUsxRWKaxyjZJilmKWYpYi980shSS5QpKQ
3Pf1yPD19C7fW9+XW99c1RQJIbSZregQIsJXXAiZTI0PIZfZLGQ+S1nMSpaz
jjVsZSO72ME+9nCIAxzjCFe5yE2u84SHvON4TAj3nOADJ/nIKT5xms+c4Qtn
+co5vnGe71zgx18PP7nELy7zmyv84SpDVAhX+m/lfR5zjRt/+7jCYY6yn4Ps
Zi/b2ckGtrCatSxjBYtYwjwWMIs5TGYGb9w7nddM4yVTecEUnjOZZ0ziKRN5
zAQeMZ4HjOMeY7nLGO4wmtuMivz/9xcKgUg1
            "]]}, {
           GrayLevel[0.2], 
           
           Line3DBox[{1444, 753, 1443, 2448, 1683, 1445, 2449, 1684, 1446, 
            2450, 1685, 1447, 2451, 1686, 1448, 2452, 1687, 1449, 2453, 1688, 
            1450, 2454, 1689, 1451, 2455, 1690, 1452, 2456, 1691, 1453, 2457, 
            1692, 1454, 2458, 1693, 1455, 2459, 1694, 1456, 2460, 1695, 1457, 
            2461, 1696, 1458}], 
           
           Line3DBox[{1460, 2133, 2343, 1459, 769, 1461, 2462, 1697, 1462, 
            2463, 1698, 1463, 2464, 1699, 1464, 2465, 1700, 1465, 2466, 1701, 
            1466, 2467, 1702, 1467, 2468, 1703, 1468, 2469, 1704, 1469, 2470, 
            1705, 1470, 2471, 1706, 1471, 2472, 1707, 1472, 2473, 1708, 1473, 
            2474, 1709, 1474}], 
           
           Line3DBox[{1476, 2134, 2344, 1475, 2135, 2345, 1477, 785, 1478, 
            2475, 1710, 1479, 2476, 1711, 1480, 2477, 1712, 1481, 2478, 1713, 
            1482, 2479, 1714, 1483, 2480, 1715, 1484, 2481, 1716, 1485, 2482, 
            1717, 1486, 2483, 1718, 1487, 2484, 1719, 1488, 2485, 1720, 1489, 
            2486, 1721, 1490}], 
           
           Line3DBox[{1492, 2136, 2346, 1491, 2137, 2347, 1493, 2138, 2348, 
            1494, 801, 1495, 2487, 1722, 1496, 2488, 1723, 1497, 2489, 1724, 
            1498, 2490, 1725, 1499, 2491, 1726, 1500, 2492, 1727, 1501, 2493, 
            1728, 1502, 2494, 1729, 1503, 2495, 1730, 1504, 2496, 1731, 1505, 
            2497, 1732, 1506}], 
           
           Line3DBox[{1508, 2139, 2349, 1507, 2140, 2350, 1509, 2141, 2351, 
            1510, 2142, 2352, 1511, 817, 1512, 2498, 1733, 1513, 2499, 1734, 
            1514, 2500, 1735, 1515, 2501, 1736, 1516, 2502, 1737, 1517, 2503, 
            1738, 1518, 2504, 1739, 1519, 2505, 1740, 1520, 2506, 1741, 1521, 
            2507, 1742, 1522}], 
           
           Line3DBox[{1524, 2143, 2353, 1523, 2144, 2354, 1525, 2145, 2355, 
            1526, 2146, 2356, 1527, 2147, 2357, 1528, 833, 1529, 2508, 1743, 
            1530, 2509, 1744, 1531, 2510, 1745, 1532, 2511, 1746, 1533, 2512, 
            1747, 1534, 2513, 1748, 1535, 2514, 1749, 1536, 2515, 1750, 1537, 
            2516, 1751, 1538}], 
           
           Line3DBox[{1540, 2148, 2358, 1539, 2149, 2359, 1541, 2150, 2360, 
            1542, 2151, 2361, 1543, 2152, 2362, 1544, 2153, 2363, 1545, 849, 
            1546, 2517, 1752, 1547, 2518, 1753, 1548, 2519, 1754, 1549, 2520, 
            1755, 1550, 2521, 1756, 1551, 2522, 1757, 1552, 2523, 1758, 1553, 
            2524, 1759, 1554}], 
           
           Line3DBox[{1556, 2154, 2364, 1555, 2155, 2365, 1557, 2156, 2366, 
            1558, 2157, 2367, 1559, 2158, 2368, 1560, 2159, 2369, 1561, 2160, 
            2370, 1562, 865, 1563, 2525, 1760, 1564, 2526, 1761, 1565, 2527, 
            1762, 1566, 2528, 1763, 1567, 2529, 1764, 1568, 2530, 1765, 1569, 
            2531, 1766, 1570}], 
           
           Line3DBox[{1572, 2161, 2371, 1571, 2162, 2372, 1573, 2163, 2373, 
            1574, 2164, 2374, 1575, 2165, 2375, 1576, 2166, 2376, 1577, 2167, 
            2377, 1578, 2168, 2378, 1579, 881, 1580, 2532, 1767, 1581, 2533, 
            1768, 1582, 2534, 1769, 1583, 2535, 1770, 1584, 2536, 1771, 1585, 
            2537, 1772, 1586}], 
           
           Line3DBox[{1588, 2169, 2379, 1587, 2170, 2380, 1589, 2171, 2381, 
            1590, 2172, 2382, 1591, 2173, 2383, 1592, 2174, 2384, 1593, 2175, 
            2385, 1594, 2176, 2386, 1595, 2177, 2387, 1596, 897, 1597, 2538, 
            1773, 1598, 2539, 1774, 1599, 2540, 1775, 1600, 2541, 1776, 1601, 
            2542, 1777, 1602}], 
           
           Line3DBox[{1604, 2178, 2388, 1603, 2179, 2389, 1605, 2180, 2390, 
            1606, 2181, 2391, 1607, 2182, 2392, 1608, 2183, 2393, 1609, 2184, 
            2394, 1610, 2185, 2395, 1611, 2186, 2396, 1612, 2187, 2397, 1613, 
            913, 1614, 2543, 1778, 1615, 2544, 1779, 1616, 2545, 1780, 1617, 
            2546, 1781, 1618}], 
           
           Line3DBox[{1620, 2188, 2398, 1619, 2189, 2399, 1621, 2190, 2400, 
            1622, 2191, 2401, 1623, 2192, 2402, 1624, 2193, 2403, 1625, 2194, 
            2404, 1626, 2195, 2405, 1627, 2196, 2406, 1628, 2197, 2407, 1629, 
            2198, 2408, 1630, 929, 1631, 2547, 1782, 1632, 2548, 1783, 1633, 
            2549, 1784, 1634}], 
           
           Line3DBox[{1636, 2199, 2409, 1635, 2200, 2410, 1637, 2201, 2411, 
            1638, 2202, 2412, 1639, 2203, 2413, 1640, 2204, 2414, 1641, 2205, 
            2415, 1642, 2206, 2416, 1643, 2207, 2417, 1644, 2208, 2418, 1645, 
            2209, 2419, 1646, 2210, 2420, 1647, 945, 1648, 2550, 1785, 1649, 
            2551, 1786, 1650}], 
           
           Line3DBox[{1652, 2211, 2421, 1651, 2212, 2422, 1653, 2213, 2423, 
            1654, 2214, 2424, 1655, 2215, 2425, 1656, 2216, 2426, 1657, 2217, 
            2427, 1658, 2218, 2428, 1659, 2219, 2429, 1660, 2220, 2430, 1661, 
            2221, 2431, 1662, 2222, 2432, 1663, 2223, 2433, 1664, 961, 1665, 
            2552, 1787, 1666}], 
           
           Line3DBox[{1668, 2224, 2434, 1667, 2225, 2435, 1669, 2226, 2436, 
            1670, 2227, 2437, 1671, 2228, 2438, 1672, 2229, 2439, 1673, 2230, 
            2440, 1674, 2231, 2441, 1675, 2232, 2442, 1676, 2233, 2443, 1677, 
            2234, 2444, 1678, 2235, 2445, 1679, 2236, 2446, 1680, 2237, 2447, 
            1681, 977, 1682}], 
           
           Line3DBox[{1789, 1218, 1788, 2658, 2028, 1790, 2659, 2029, 1791, 
            2660, 2030, 1792, 2661, 2031, 1793, 2662, 2032, 1794, 2663, 2033, 
            1795, 2664, 2034, 1796, 2665, 2035, 1797, 2666, 2036, 1798, 2667, 
            2037, 1799, 2668, 2038, 1800, 2669, 2039, 1801, 2670, 2040, 1802, 
            2671, 2041, 1803}], 
           
           Line3DBox[{1805, 2238, 2553, 1804, 1234, 1806, 2672, 2042, 1807, 
            2673, 2043, 1808, 2674, 2044, 1809, 2675, 2045, 1810, 2676, 2046, 
            1811, 2677, 2047, 1812, 2678, 2048, 1813, 2679, 2049, 1814, 2680, 
            2050, 1815, 2681, 2051, 1816, 2682, 2052, 1817, 2683, 2053, 1818, 
            2684, 2054, 1819}], 
           
           Line3DBox[{1821, 2239, 2554, 1820, 2240, 2555, 1822, 1250, 1823, 
            2685, 2055, 1824, 2686, 2056, 1825, 2687, 2057, 1826, 2688, 2058, 
            1827, 2689, 2059, 1828, 2690, 2060, 1829, 2691, 2061, 1830, 2692, 
            2062, 1831, 2693, 2063, 1832, 2694, 2064, 1833, 2695, 2065, 1834, 
            2696, 2066, 1835}], 
           
           Line3DBox[{1837, 2241, 2556, 1836, 2242, 2557, 1838, 2243, 2558, 
            1839, 1266, 1840, 2697, 2067, 1841, 2698, 2068, 1842, 2699, 2069, 
            1843, 2700, 2070, 1844, 2701, 2071, 1845, 2702, 2072, 1846, 2703, 
            2073, 1847, 2704, 2074, 1848, 2705, 2075, 1849, 2706, 2076, 1850, 
            2707, 2077, 1851}], 
           
           Line3DBox[{1853, 2244, 2559, 1852, 2245, 2560, 1854, 2246, 2561, 
            1855, 2247, 2562, 1856, 1282, 1857, 2708, 2078, 1858, 2709, 2079, 
            1859, 2710, 2080, 1860, 2711, 2081, 1861, 2712, 2082, 1862, 2713, 
            2083, 1863, 2714, 2084, 1864, 2715, 2085, 1865, 2716, 2086, 1866, 
            2717, 2087, 1867}], 
           
           Line3DBox[{1869, 2248, 2563, 1868, 2249, 2564, 1870, 2250, 2565, 
            1871, 2251, 2566, 1872, 2252, 2567, 1873, 1298, 1874, 2718, 2088, 
            1875, 2719, 2089, 1876, 2720, 2090, 1877, 2721, 2091, 1878, 2722, 
            2092, 1879, 2723, 2093, 1880, 2724, 2094, 1881, 2725, 2095, 1882, 
            2726, 2096, 1883}], 
           
           Line3DBox[{1885, 2253, 2568, 1884, 2254, 2569, 1886, 2255, 2570, 
            1887, 2256, 2571, 1888, 2257, 2572, 1889, 2258, 2573, 1890, 1314, 
            1891, 2727, 2097, 1892, 2728, 2098, 1893, 2729, 2099, 1894, 2730, 
            2100, 1895, 2731, 2101, 1896, 2732, 2102, 1897, 2733, 2103, 1898, 
            2734, 2104, 1899}], 
           
           Line3DBox[{1901, 2259, 2574, 1900, 2260, 2575, 1902, 2261, 2576, 
            1903, 2262, 2577, 1904, 2263, 2578, 1905, 2264, 2579, 1906, 2265, 
            2580, 1907, 1330, 1908, 2735, 2105, 1909, 2736, 2106, 1910, 2737, 
            2107, 1911, 2738, 2108, 1912, 2739, 2109, 1913, 2740, 2110, 1914, 
            2741, 2111, 1915}], 
           
           Line3DBox[{1917, 2266, 2581, 1916, 2267, 2582, 1918, 2268, 2583, 
            1919, 2269, 2584, 1920, 2270, 2585, 1921, 2271, 2586, 1922, 2272, 
            2587, 1923, 2273, 2588, 1924, 1346, 1925, 2742, 2112, 1926, 2743, 
            2113, 1927, 2744, 2114, 1928, 2745, 2115, 1929, 2746, 2116, 1930, 
            2747, 2117, 1931}], 
           
           Line3DBox[{1933, 2274, 2589, 1932, 2275, 2590, 1934, 2276, 2591, 
            1935, 2277, 2592, 1936, 2278, 2593, 1937, 2279, 2594, 1938, 2280, 
            2595, 1939, 2281, 2596, 1940, 2282, 2597, 1941, 1362, 1942, 2748, 
            2118, 1943, 2749, 2119, 1944, 2750, 2120, 1945, 2751, 2121, 1946, 
            2752, 2122, 1947}], 
           
           Line3DBox[{1949, 2283, 2598, 1948, 2284, 2599, 1950, 2285, 2600, 
            1951, 2286, 2601, 1952, 2287, 2602, 1953, 2288, 2603, 1954, 2289, 
            2604, 1955, 2290, 2605, 1956, 2291, 2606, 1957, 2292, 2607, 1958, 
            1378, 1959, 2753, 2123, 1960, 2754, 2124, 1961, 2755, 2125, 1962, 
            2756, 2126, 1963}], 
           
           Line3DBox[{1965, 2293, 2608, 1964, 2294, 2609, 1966, 2295, 2610, 
            1967, 2296, 2611, 1968, 2297, 2612, 1969, 2298, 2613, 1970, 2299, 
            2614, 1971, 2300, 2615, 1972, 2301, 2616, 1973, 2302, 2617, 1974, 
            2303, 2618, 1975, 1394, 1976, 2757, 2127, 1977, 2758, 2128, 1978, 
            2759, 2129, 1979}], 
           
           Line3DBox[{1981, 2304, 2619, 1980, 2305, 2620, 1982, 2306, 2621, 
            1983, 2307, 2622, 1984, 2308, 2623, 1985, 2309, 2624, 1986, 2310, 
            2625, 1987, 2311, 2626, 1988, 2312, 2627, 1989, 2313, 2628, 1990, 
            2314, 2629, 1991, 2315, 2630, 1992, 1410, 1993, 2760, 2130, 1994, 
            2761, 2131, 1995}], 
           
           Line3DBox[{1997, 2316, 2631, 1996, 2317, 2632, 1998, 2318, 2633, 
            1999, 2319, 2634, 2000, 2320, 2635, 2001, 2321, 2636, 2002, 2322, 
            2637, 2003, 2323, 2638, 2004, 2324, 2639, 2005, 2325, 2640, 2006, 
            2326, 2641, 2007, 2327, 2642, 2008, 2328, 2643, 2009, 1426, 2010, 
            2762, 2132, 2011}], 
           
           Line3DBox[{2013, 2329, 2644, 2012, 2330, 2645, 2014, 2331, 2646, 
            2015, 2332, 2647, 2016, 2333, 2648, 2017, 2334, 2649, 2018, 2335, 
            2650, 2019, 2336, 2651, 2020, 2337, 2652, 2021, 2338, 2653, 2022, 
            2339, 2654, 2023, 2340, 2655, 2024, 2341, 2656, 2025, 2342, 2657, 
            2026, 1442, 2027}]}, {
           GrayLevel[0.2], 
           
           Line3DBox[{513, 753, 514, 2343, 768, 543, 2344, 783, 558, 2346, 
            798, 573, 2349, 813, 588, 2353, 828, 603, 2358, 843, 618, 2364, 
            858, 633, 2371, 873, 648, 2379, 888, 663, 2388, 903, 678, 2398, 
            918, 693, 2409, 933, 708, 2421, 948, 723, 2434, 963, 738}], 
           
           Line3DBox[{515, 754, 2448, 516, 769, 544, 2345, 784, 559, 2347, 
            799, 574, 2350, 814, 589, 2354, 829, 604, 2359, 844, 619, 2365, 
            859, 634, 2372, 874, 649, 2380, 889, 664, 2389, 904, 679, 2399, 
            919, 694, 2410, 934, 709, 2422, 949, 724, 2435, 964, 739}], 
           
           Line3DBox[{517, 755, 2449, 518, 770, 2462, 545, 785, 560, 2348, 
            800, 575, 2351, 815, 590, 2355, 830, 605, 2360, 845, 620, 2366, 
            860, 635, 2373, 875, 650, 2381, 890, 665, 2390, 905, 680, 2400, 
            920, 695, 2411, 935, 710, 2423, 950, 725, 2436, 965, 740}], 
           
           Line3DBox[{519, 756, 2450, 520, 771, 2463, 546, 786, 2475, 561, 
            801, 576, 2352, 816, 591, 2356, 831, 606, 2361, 846, 621, 2367, 
            861, 636, 2374, 876, 651, 2382, 891, 666, 2391, 906, 681, 2401, 
            921, 696, 2412, 936, 711, 2424, 951, 726, 2437, 966, 741}], 
           
           Line3DBox[{521, 757, 2451, 522, 772, 2464, 547, 787, 2476, 562, 
            802, 2487, 577, 817, 592, 2357, 832, 607, 2362, 847, 622, 2368, 
            862, 637, 2375, 877, 652, 2383, 892, 667, 2392, 907, 682, 2402, 
            922, 697, 2413, 937, 712, 2425, 952, 727, 2438, 967, 742}], 
           Line3DBox[{523, 758, 2452, 524, 773, 2465, 548, 788, 2477, 563, 
            803, 2488, 578, 818, 2498, 593, 833, 608, 2363, 848, 623, 2369, 
            863, 638, 2376, 878, 653, 2384, 893, 668, 2393, 908, 683, 2403, 
            923, 698, 2414, 938, 713, 2426, 953, 728, 2439, 968, 743}], 
           
           Line3DBox[{525, 759, 2453, 526, 774, 2466, 549, 789, 2478, 564, 
            804, 2489, 579, 819, 2499, 594, 834, 2508, 609, 849, 624, 2370, 
            864, 639, 2377, 879, 654, 2385, 894, 669, 2394, 909, 684, 2404, 
            924, 699, 2415, 939, 714, 2427, 954, 729, 2440, 969, 744}], 
           
           Line3DBox[{527, 760, 2454, 528, 775, 2467, 550, 790, 2479, 565, 
            805, 2490, 580, 820, 2500, 595, 835, 2509, 610, 850, 2517, 625, 
            865, 640, 2378, 880, 655, 2386, 895, 670, 2395, 910, 685, 2405, 
            925, 700, 2416, 940, 715, 2428, 955, 730, 2441, 970, 745}], 
           
           Line3DBox[{529, 761, 2455, 530, 776, 2468, 551, 791, 2480, 566, 
            806, 2491, 581, 821, 2501, 596, 836, 2510, 611, 851, 2518, 626, 
            866, 2525, 641, 881, 656, 2387, 896, 671, 2396, 911, 686, 2406, 
            926, 701, 2417, 941, 716, 2429, 956, 731, 2442, 971, 746}], 
           
           Line3DBox[{531, 762, 2456, 532, 777, 2469, 552, 792, 2481, 567, 
            807, 2492, 582, 822, 2502, 597, 837, 2511, 612, 852, 2519, 627, 
            867, 2526, 642, 882, 2532, 657, 897, 672, 2397, 912, 687, 2407, 
            927, 702, 2418, 942, 717, 2430, 957, 732, 2443, 972, 747}], 
           
           Line3DBox[{533, 763, 2457, 534, 778, 2470, 553, 793, 2482, 568, 
            808, 2493, 583, 823, 2503, 598, 838, 2512, 613, 853, 2520, 628, 
            868, 2527, 643, 883, 2533, 658, 898, 2538, 673, 913, 688, 2408, 
            928, 703, 2419, 943, 718, 2431, 958, 733, 2444, 973, 748}], 
           
           Line3DBox[{535, 764, 2458, 536, 779, 2471, 554, 794, 2483, 569, 
            809, 2494, 584, 824, 2504, 599, 839, 2513, 614, 854, 2521, 629, 
            869, 2528, 644, 884, 2534, 659, 899, 2539, 674, 914, 2543, 689, 
            929, 704, 2420, 944, 719, 2432, 959, 734, 2445, 974, 749}], 
           
           Line3DBox[{537, 765, 2459, 538, 780, 2472, 555, 795, 2484, 570, 
            810, 2495, 585, 825, 2505, 600, 840, 2514, 615, 855, 2522, 630, 
            870, 2529, 645, 885, 2535, 660, 900, 2540, 675, 915, 2544, 690, 
            930, 2547, 705, 945, 720, 2433, 960, 735, 2446, 975, 750}], 
           
           Line3DBox[{539, 766, 2460, 540, 781, 2473, 556, 796, 2485, 571, 
            811, 2496, 586, 826, 2506, 601, 841, 2515, 616, 856, 2523, 631, 
            871, 2530, 646, 886, 2536, 661, 901, 2541, 676, 916, 2545, 691, 
            931, 2548, 706, 946, 2550, 721, 961, 736, 2447, 976, 751}], 
           
           Line3DBox[{541, 767, 2461, 542, 782, 2474, 557, 797, 2486, 572, 
            812, 2497, 587, 827, 2507, 602, 842, 2516, 617, 857, 2524, 632, 
            872, 2531, 647, 887, 2537, 662, 902, 2542, 677, 917, 2546, 692, 
            932, 2549, 707, 947, 2551, 722, 962, 2552, 737, 977, 752}], 
           
           Line3DBox[{978, 1218, 979, 2553, 1233, 1008, 2554, 1248, 1023, 
            2556, 1263, 1038, 2559, 1278, 1053, 2563, 1293, 1068, 2568, 1308, 
            1083, 2574, 1323, 1098, 2581, 1338, 1113, 2589, 1353, 1128, 2598, 
            1368, 1143, 2608, 1383, 1158, 2619, 1398, 1173, 2631, 1413, 1188, 
            2644, 1428, 1203}], 
           
           Line3DBox[{980, 1219, 2658, 981, 1234, 1009, 2555, 1249, 1024, 
            2557, 1264, 1039, 2560, 1279, 1054, 2564, 1294, 1069, 2569, 1309, 
            1084, 2575, 1324, 1099, 2582, 1339, 1114, 2590, 1354, 1129, 2599, 
            1369, 1144, 2609, 1384, 1159, 2620, 1399, 1174, 2632, 1414, 1189, 
            2645, 1429, 1204}], 
           
           Line3DBox[{982, 1220, 2659, 983, 1235, 2672, 1010, 1250, 1025, 
            2558, 1265, 1040, 2561, 1280, 1055, 2565, 1295, 1070, 2570, 1310, 
            1085, 2576, 1325, 1100, 2583, 1340, 1115, 2591, 1355, 1130, 2600, 
            1370, 1145, 2610, 1385, 1160, 2621, 1400, 1175, 2633, 1415, 1190, 
            2646, 1430, 1205}], 
           
           Line3DBox[{984, 1221, 2660, 985, 1236, 2673, 1011, 1251, 2685, 
            1026, 1266, 1041, 2562, 1281, 1056, 2566, 1296, 1071, 2571, 1311, 
            1086, 2577, 1326, 1101, 2584, 1341, 1116, 2592, 1356, 1131, 2601, 
            1371, 1146, 2611, 1386, 1161, 2622, 1401, 1176, 2634, 1416, 1191, 
            2647, 1431, 1206}], 
           
           Line3DBox[{986, 1222, 2661, 987, 1237, 2674, 1012, 1252, 2686, 
            1027, 1267, 2697, 1042, 1282, 1057, 2567, 1297, 1072, 2572, 1312, 
            1087, 2578, 1327, 1102, 2585, 1342, 1117, 2593, 1357, 1132, 2602, 
            1372, 1147, 2612, 1387, 1162, 2623, 1402, 1177, 2635, 1417, 1192, 
            2648, 1432, 1207}], 
           
           Line3DBox[{988, 1223, 2662, 989, 1238, 2675, 1013, 1253, 2687, 
            1028, 1268, 2698, 1043, 1283, 2708, 1058, 1298, 1073, 2573, 1313, 
            1088, 2579, 1328, 1103, 2586, 1343, 1118, 2594, 1358, 1133, 2603, 
            1373, 1148, 2613, 1388, 1163, 2624, 1403, 1178, 2636, 1418, 1193, 
            2649, 1433, 1208}], 
           
           Line3DBox[{990, 1224, 2663, 991, 1239, 2676, 1014, 1254, 2688, 
            1029, 1269, 2699, 1044, 1284, 2709, 1059, 1299, 2718, 1074, 1314, 
            1089, 2580, 1329, 1104, 2587, 1344, 1119, 2595, 1359, 1134, 2604, 
            1374, 1149, 2614, 1389, 1164, 2625, 1404, 1179, 2637, 1419, 1194, 
            2650, 1434, 1209}], 
           
           Line3DBox[{992, 1225, 2664, 993, 1240, 2677, 1015, 1255, 2689, 
            1030, 1270, 2700, 1045, 1285, 2710, 1060, 1300, 2719, 1075, 1315, 
            2727, 1090, 1330, 1105, 2588, 1345, 1120, 2596, 1360, 1135, 2605, 
            1375, 1150, 2615, 1390, 1165, 2626, 1405, 1180, 2638, 1420, 1195, 
            2651, 1435, 1210}], 
           
           Line3DBox[{994, 1226, 2665, 995, 1241, 2678, 1016, 1256, 2690, 
            1031, 1271, 2701, 1046, 1286, 2711, 1061, 1301, 2720, 1076, 1316, 
            2728, 1091, 1331, 2735, 1106, 1346, 1121, 2597, 1361, 1136, 2606, 
            1376, 1151, 2616, 1391, 1166, 2627, 1406, 1181, 2639, 1421, 1196, 
            2652, 1436, 1211}], 
           
           Line3DBox[{996, 1227, 2666, 997, 1242, 2679, 1017, 1257, 2691, 
            1032, 1272, 2702, 1047, 1287, 2712, 1062, 1302, 2721, 1077, 1317, 
            2729, 1092, 1332, 2736, 1107, 1347, 2742, 1122, 1362, 1137, 2607, 
            1377, 1152, 2617, 1392, 1167, 2628, 1407, 1182, 2640, 1422, 1197, 
            2653, 1437, 1212}], 
           
           Line3DBox[{998, 1228, 2667, 999, 1243, 2680, 1018, 1258, 2692, 
            1033, 1273, 2703, 1048, 1288, 2713, 1063, 1303, 2722, 1078, 1318, 
            2730, 1093, 1333, 2737, 1108, 1348, 2743, 1123, 1363, 2748, 1138, 
            1378, 1153, 2618, 1393, 1168, 2629, 1408, 1183, 2641, 1423, 1198, 
            2654, 1438, 1213}], 
           
           Line3DBox[{1000, 1229, 2668, 1001, 1244, 2681, 1019, 1259, 2693, 
            1034, 1274, 2704, 1049, 1289, 2714, 1064, 1304, 2723, 1079, 1319, 
            2731, 1094, 1334, 2738, 1109, 1349, 2744, 1124, 1364, 2749, 1139, 
            1379, 2753, 1154, 1394, 1169, 2630, 1409, 1184, 2642, 1424, 1199, 
            2655, 1439, 1214}], 
           
           Line3DBox[{1002, 1230, 2669, 1003, 1245, 2682, 1020, 1260, 2694, 
            1035, 1275, 2705, 1050, 1290, 2715, 1065, 1305, 2724, 1080, 1320, 
            2732, 1095, 1335, 2739, 1110, 1350, 2745, 1125, 1365, 2750, 1140, 
            1380, 2754, 1155, 1395, 2757, 1170, 1410, 1185, 2643, 1425, 1200, 
            2656, 1440, 1215}], 
           
           Line3DBox[{1004, 1231, 2670, 1005, 1246, 2683, 1021, 1261, 2695, 
            1036, 1276, 2706, 1051, 1291, 2716, 1066, 1306, 2725, 1081, 1321, 
            2733, 1096, 1336, 2740, 1111, 1351, 2746, 1126, 1366, 2751, 1141, 
            1381, 2755, 1156, 1396, 2758, 1171, 1411, 2760, 1186, 1426, 1201, 
            2657, 1441, 1216}], 
           
           Line3DBox[{1006, 1232, 2671, 1007, 1247, 2684, 1022, 1262, 2696, 
            1037, 1277, 2707, 1052, 1292, 2717, 1067, 1307, 2726, 1082, 1322, 
            2734, 1097, 1337, 2741, 1112, 1352, 2747, 1127, 1367, 2752, 1142, 
            1382, 2756, 1157, 1397, 2759, 1172, 1412, 2761, 1187, 1427, 2762, 
            1202, 1442, 1217}]}, {}, {}, {}, {}, {}}}, 
        VertexNormals -> CompressedData["
1:eJzs3XVUldvePny7E1uwOxFsBC8DCzuxUSxUFBVFwcTAxMIuUFBEMRET/dKo
SHevXou2O961z5lzveM3fXnPs8f4Obb7PHv/M8ceQyc3eDPXteb83NdqYW03
YUGZUqVKPa9SqlRZ7YjO1VY8bp5O/+eYh13d47LcdmpI3aG198Mfz8gxreJW
v01y9H7UrH6bzdnER6MWNex3eqn/+fP/4c9H9du88JyHikqx/9j/g/99Ph+f
5+YN7wd5q7KJjzMfKJwW+aoRFPlpqu1mOfkGSAKdzG9SP8Xz9SkWuTD1L3PG
eqaSkr6ZTXAY84JGFYSPXhSoQuXl0y+7DJRSZpNNCf1qyPn4v27+o30y1juN
jyM+DnM1jll6sLDEf68r7O/z+UzYPE6KFbHJBgnEx7fdTugfKF2I2hXyqm+1
yiVXK1kQDbqKo8PaprvbyuFkeffcmTNqChnglvg1NoU+zFjxNrGc7H/d/I2N
Jsa8OJ9Ns2xOVT23OxL5maPHOZrll3j/8/uA3xf8fuDXx6+XX+cUk8jdHZpI
iY+924e71ClW4M6yXU9v6WlI37Z2q6NLkzHM/KOqUoYUh0gT3rs4hjpMrGE9
bFMq2k87dr3d2gLw389RKZNlr8puCPj3/71E/snv84/Gq8lkk7PlrjdPadig
+10H2ykQNrD62HcXlOTYY+jsPWOlVG28kdXx0pLf7vr/7P2fwX7fqrDfP/b/
4PfBenZf8PuhMbs+P3a9/DqDalRbNHcx0TM2KlVRe+9vK4ZLOfdCSyioYGn/
pmMOZ/L/h2Ov7l+CN0nI6U3X2PmPItBocINv68Py8LGdof7JtXkk77Hi5HRL
PxzPLfPwcLwURoHxlaecyiVby972bhWT6HHO6mLbmpLf7vr/7P3/Z9c3fh/w
+4LfD8L1Eb/OPzv/w9n9Kq27o6FGDzoNqrspguzyPq3KWyfHqrkROf5fVdR5
RN31p70k1G2ApEvZw1m/3fX/6vW/1P/nfy/B7wN+X/D74c/O321t35xdRXl0
av/GrLuGd9HtUcvMVzWk+D6zSq+rs/NoQ/3+8cXPE8ihoNrEk3Oyf7vr/9Xr
P1+X+TrN12e+XvD1g68b/D7m9zW/n3U/X/bz5j/ntz3MTxYPkxEf1yd/Wuma
IUOaRaxzTrdccnqyMqLmgBw8fvbRyUBfux4bF199Pz2KOleNODUgXYarhZTZ
IVKDtnLvd7fHPka7usU7a5TOwb6kQcgPzIdZHQuN/+Ro8lLMUh2fJIVe1rPo
kTG5SIytti5hsB/WWGq8eu9Lw6iJijtXzAp/u/Wfv/6Fs9fDqux1cBlbl7ux
dfoJW5/5esHXj+5s3XBi9zG/r9ey+5n/fPnP+wn7OR8PlMzvYXcUe9g46JFn
kc3XYgxr96JUG2c5LX4QH7r7sAxDnYtyvw+T4s3msLC7O7KpQna7LeOss5Hz
ecymG1fVuJy761E/ktOtt4sP+C2SIi19U41pxjJ09Pt2YO6WHBprOSzwWKt0
VHzdasyok5rfbv3/1fmZ38f8vub38yL28+U/b/5z/t2u/++e/9uw9YKvH3zd
4PfxO3Zf8/v5d7v+v3v+5+syX6f5+szXC75+pLJ143e7/r97/uevf/z1kL8O
8nW5E1un+fr8u13/3z3//93n/7vn/7/7/CXd//wr8f1Rvi9a0r8X//t8Pj7P
P3/+///Pl7TPz/5fGHX7/3x9grC/rRuF/fB//nwJf57f18L9rvv7fD5h/deN
wvoGtr5ByM88d0DIz+C5WcjP/2vmZ78nulFY/3/692Lrm24+YX3TjUJ+5vmO
hPzMcweE/Py/Zn62HvH1iYT889P9z+8Dfl8I+Zn49Qr5WTcK+RksP5OQn3nu
oBLysyl/HWT7SnyfCcL+P9//gLD//9tc/5+9/3leZvkZQn4Gy88Q8jOx/Awh
P4PlZwj5mec7EvIzzx0k7P/z/TwS9v/B9v8h7P//Ntf/Z+//P7u+8fuA3xdC
ftZdn5Cf/8fzs31Svm8KYf+f7+dB2P//ba7/V6///yE/E78vhPz8P56f7Ufz
/WkS9v/B9v8h7P//Ntf/q9d/vi7zdVrY/ye+fgj7/7r7Wtj/J/7zFvb/daOw
/8/3p0nY/+f7piTs/xPb/ydh/5/vM5Gw/09s/4OE/f/fZv3nr39s/x/C/j/Y
/j+E/X/d+iHs/+vua2H/n/jPW9j/J7b/T8L+P9j+Pwn7/3zflIT9f76fR8L+
P99nImH//7dZ/391fub3Mb+vhf1/4j9vYf//t7n+v3v+Z/v/xNcPYf+f2P4/
hP3/3+b6/+75n6/LfJ0W9v+Jrx/C/v9vc/1/9/zPX//466Gw/09s/x/C/v9v
c/1/9/z/d5//757//+7zl3T/86/E90OF/f+f/r343+fzCfvh//z5Ev58Sfv8
Z19c+3LqvZrmxjt03hIbSc6VTNN+VFKgs4FfYujWLFpS623Q/fAcsszNzbm+
S43R76Zd235IQv4yM3fJ0UwKkDSq6DxNjcJt5p9Kd5RTgKOba5Owx1RU+LbT
m+m5kFYz8HnSSE1Wmybs9NoSS+OGnP/ks08BzURNTPvaShr/KaCAjj2ld72m
j65loYZZ18vLXLKkFN5l7KCBB9Op96WPvi+07w/23em2+/wRGSV0Kl/r5gQJ
rd1a2H/QGAWoonHDc9VUlNy0IHFNQjxNmPnxtNJIiZE9i0rNTM+hH1LP4OCN
ErrjevJ9vYkq9No23n15czk1KVdj07GVqTS2c0uHtftVsLtFbzRjZDRX+v3G
7oMvyPRqnp75wFwUethHtC1UkNu5loE3miSRe4X81S2fKfF9qiqtxwUFddPv
/2HFwRB60Xy5XsMPalza57+yu6WCKhW0HvXSLJk8p7k9K11ThcAaDxKXPJJT
+3LfHb3upNOij8FXH2tzwaYvM7K3PZZTcK5lH/3pKVSc/MQgcZwKNZNcW01b
JaGleWeGBzlIqXI8cjy7KPEtSW9t9c1KWv0txfLzpwTy1/MLm71ZidlnS63S
7y2l5T7q6jcqJlHPsBnvBqdosORbpY1jt8iobqNF9rHb0uhwZG15bIQKz+/1
bXupnYIiDDVWt74E0AfbTos/HdMg5tr7D8eOqmhzTG7ryCtxdH/nm835EgVG
XvV7f+GKguYtamp5Z10ines9/H4tQxWKBhhsdOgjpYKWmV1sj2WQ9Y/Fy2d3
UcO4eat9HwoktM+1bf0l82Vk4To4susXOarZVLFVnFDTdSN/O8ur0UTtziXN
7qlA2dGzou6l5VDDYefbGq7IIJvLTRKTmmswvP6zWnOv59C4+JMxgxIzadH1
i0Ve4Wq07rPQ/F2ejKbHjHPZed2PsKFJQZ1buTAf0d6zVOl7dPpeTBkjSzlN
7DJDFTUpF2vHrdd7Pi+Ojry7F/YkMolSFONq+UQVIHP6hHsr+qnpW7WrmoTK
e2lbZPW1zqVUmFwvbPPu9RoavX237/FxcdTe5FXg69syVN0W2cXzfjzVnPwh
5/1gGVUOdB5V3VWDizv8D6xxiqTw2zULBzXKoLv6zy2rdizAloHJpd8dk1Op
0MnXW8x+RNZ1H23W18vF3WWOXlXr5dL+UWlnVqtCydm8klurznIYjm609Meu
bFJYVhnf3EZC4zWjMTVFBYeorTMMo0PIJ3afx+F6EtoYvC7YvXc+rAwefcvf
nU1uDSbtUC9/Rub3Fs2Pmp+PXLt2ncrPzaUJd84fd/K9SjbVR6yqtUSOgolm
YXMcFDQ0z/bhTFkG1bLIez95iAID2w/PaVnmPhUONYsxsJVR8J1BZRt8z8Wj
2WfHDyuTSPpu1Sq49owj68RGtjXaFaKfWfC8nC4vqEqG/paFh5W0cODK+JAD
KuSljFlkutUNZ5aelmWXyaUz68aVOfdGDqNjmSZb9TKpJu53rDZcTg0ftrJ9
NVkJ29TAKUmTNPQm4OsM5+9BKHP2WXNPCwWq9Vzwwq1xBhmVXmXzOikVZxfu
fP3EKA8/aqVdPXriPu3WxHvPzwpGlw29qvXdUozjrVxOpO/Pos6r+2+c/e4J
HSh76WuLpgV4PUjpW7etmtY89j5y8ksKrXEcFbJqvwyfXXt173Y8h5a0ndHS
8omcpFku5VqflUMybXiH+55PqKYyZPi11mpqW9ere06IEvpXes4xcw6iNQVr
ly6Xqil/x/p0z1QFPGrZ1rTao6Do8DJX7TKTqF+77wa5H5QI3xnpN+yKkr5a
fgh7uTYFRw8n3um9VIEuL9T9J494QQF5fjtL3U7C6Lwz5ccPLsSh7k2eWi84
RCfYuLp/g6sXvhVjdudl1yKSZTTCe479nLZSWlOnzSezWXJ8u3lobK1HaTT2
0drgcUUqGj+moKi1mQzhH3xXzLnyAu6lD3ZaWCqXErbuk573kuFT/YavRoTY
0/M6hq7pqxJo3+e0URs3FOH751mb2tlLaFnOhXaRV+Ix6FRo27KxuUgc2vVH
YEcZuX7v1qfWwnh4PfnSa8gNDV6arqqjOq+i04MyZ47pHoiPTTImhg1UQW+O
ZtqtE3kk8Xhg2mpvIMEqsJnLGCnctwx9O7qMmg7J9vR3RwYdbb+9YZybFFeu
S791d5VQHw+Xwy/S5GRmkC5tnS2DZeTaa81kIVT1e6NG43rl0o/Za9o8ri3H
jddnBpRpEotIt7gPxt4KqnJp7CyfOmpY93/6dO2xKKpkv3LZw8mHyPjU08ZF
zYsRrRp3LipXTtnyRqkffNKxrs8JuayHEl37p1w0tpVQFa83Kx98jMDi4ctN
nKLySny9K+l1bVzsptOFSyIxuVXLm6PyoqiH2VXrFdOKYNN147b+LTLhfatF
wr09Uir67FKzepgKz+pEGG++8Zx2mY+XzLkiI/+W6n76zXJLfN15t3RX734X
VNQ91rbc9sJAaj90vntIHxUmNEsdZm2uoWsVjidrcpNpyh6pct5yKSJutR5z
uUhOx989MzccLaEzvQf7h/2Qlfi68M3r+LFkvyRyXdXObJ5XELmWmdjbIaIQ
77aqGwyvlo4L2Rstqh5Mpo6Ry6eX/5CH+R5fBm2Pj8cimrXTIFhBTa9tieni
oCpx3f6/tT7ftD1k077+NeJj3+M28duVxRjVsXqSanYwkq/3nXdidxptzVPn
fP9cgNJZt8seWOqKldv2N5bckVFp0xi9Ze9yS1yfG65qFuotU1Dji0meLt53
adTTRktb1dXg3NGFSx90z6epm26lyus+phfzH1crtUaCrwP7mLuskZK3tblx
xBjt61K9I+UnhCtLXJ8XTRvr0DjhOfGxTdzK+28OFOGha22D3ZsuQ/Fs/fEF
FYLoTLnvpQKvFePbxI7LRmUEocbRup2ntpPSuU4uXZy88n75+tzlXPCQT/VD
KMXWLyK0n4as1WXGnJiqgDRh5qpuc7agv2xv62vl8uiy+414Lw8ZQuwOGJuv
fUjj7hnUcF+dSxfdd0+bqi/H8VcVXYdM2E87c5StWs/Io969Cg/NaS1D6a9j
23VekECf59TyyDqupvNG0yOHTpDjo3m9LjWq5ZH754p6tR18qKfBihGjd8hQ
LmH71PJbZRTS9pr5XO3fP2lXtlXXMBkGxToPudr8Idl3rOvQXC5F5DHXfRUm
58HsWMSR7dPssWNt094PRktw4Iw0snBXPtaW8gqtfyKURk03rNtqvgSln1zx
av8jD2f04rLeXnaFS1aASfT+NHR6+LDu1smFv3x9Pn7FpXukpYS6HQ18tKC2
igaPGnoqaZkEnxzPpfU4lEqr4ko/2xaoobkX7caubqV9v9VSP9/qZBYd63Uq
7lS+mhzvr41O3JaNph6bZo0sl0Yxla97zjDPpXUzVpu/G5IN1eoagw1Xh2Bg
1MecupULaMnl6n2MhmfBqEvN7mE3EnDbduC6r+5Z9Pryo+ZDT+XBKqHfpgGu
8fRpz+5rx6YkwMOr1YbhNQuRPvFBlH5NGbVJiq9dZ5UUVaYstZ2TLIfnoTbr
9wZLqO2e2DYP3uTgg1/0dKf6KtRZ3KqjgVRGt9uqq261kyBU1f3LqWI5onvW
MS7y0v4+xK2aV/5aOja3jGuZn67+5etzSe8vSnofUdL7hZLW51PGH51m0R1Y
tbb43KjhM9paq+upvUOK0XZm7RAfYzkWOA/q13ZPBg037blzxFElNrdpu8Hk
XRACnnWsUl+joGUSH5Pt0eoS1+eS8nlJObykvP2r1+dfnZ/rnrqWouoVinOP
Em0zpLdp4sEsv5Nbi2GzcLq6fGMJWjfs5k+Tn9JDk6MJbz7lYfTn9ylPM2Mw
svRah9PRUhq2rGFi7Kzcf/Lzf8jPR8af6dhrcyLcSjvtHfUyiBw7VX/b9Esh
Gk8ZMH50vBQdZrpsXFU1k1o+LWP32U2FnW0a3Q+rHIWM8XFbanVVkfPh62Mk
CuU/+fk/5OcToQ0CatSYQLmu3zqUeRqE52N+/Dh4sxhPem9dNa1iBqqdrL43
SBNJEXl+uw+1K8Aso+Iyc4ZeIEn3u2++l5dTppHdydA7uf/k5/+Qny9ULzT+
Me86VX9VxbWe+ik56rXp82RSMc51H7t9+PAMtIgIHb28Yhad//KUNlXNhduF
PrvvSi8DX5rMyFmsINWaVRfrntD8k5//Q36eFn+46rRmQcTHO3kfBtexLcb3
lPwJspD7CHWWtjzZK44aZmvK979ShDuXz1SyD/ZDot3Q2G0fpXQz71JL75l5
v11+1qtWF4HWsdSof4Py28wSaMFbumK+sBDjCjdJveuGImPnm3fKZVmULyl7
qunHfDR83UJqtSmCbLuElO40KJFWL5B5a7T3w/Q7cYXHvO/jU47t4tc1M+n0
1INnmp4owLzxk6Zvmkd0a/LcugEdk0lSXPZ8mZBC+FgXzrdefx52E68vaLAn
nZoGnp7es1EhCu8um98r5Tp1vjJi2ZEfKdRyb6txfU8Vov6nxXYuDmfpyOXs
ScMkqZQZHHOi87pCbGxxpE+ziQvhP633wVkP0mhI0qB5+qML0VthcPa93T26
V/7yukYNUyjgxSr3jn6FaBn+uaNVwE1UulrGImp8Bi2unVgQlFmAPdON+l9w
D6ERBg+2LO+TROsPf/+Y8awQNTu27zHRNBCvohrPqB+aSUlTaz0IGFmA76n+
C15bRFJrTzPD4uEJ9G3Rd9MVjwvR5D0Z58SGw9bUfaChfzbR4pmN923Mx6B8
y9NdjLKJj249FmydkazG/dtDa4zopaBxDcZsmR5/h46dijz89aoG7daN7pNh
pSD55YKBO6fHUer7/Xu3N1JjnqrCBb3Vcmp9ZGi2Rz8JhRyZVSZtrxxL9VYv
fOyQTXys0Hx2zCsfNWxXzMt0O6KkTElG9YYvH1P4UbtZqyapMfj52CeDC2Vk
dHud8plbEh3vlaGetkKN/P6jjt+2V5JhSOnogWbpFPugVv7O53IkhSirv3DM
Jj7a5JVL/+StzbfVD7c/mKaidzfupUodQ2h0peady2Ur0a/xljFPpmnXk1pm
O2x908hnb90F3TzUcNq8fePJDmoKnpTzra5PAsG3R75xmBzJc41Xp2/IJj46
NW92u/QlNS6GqAw3l9JQnTuXI5OyIqjVuUtuHbQ51uHBuI4F4VnER9/2j9/G
N9RgSs0Z2fI9t8k3tHLukgw5vbw9LXLXVw0aTv/iEHM+kfg4cqfPx4brC+Dp
Wsmgi62G9P1aVmjZ1gNbKy50L+WtQLdbpfWN26vpTY5sYq8tSeRz/dG2QAtt
zrcNLJ/0IZL6TC2d0rZYTjXrWnsNqazBiwWFl46fTSE+Xrx48nXbUdp/95j9
udsrqclrReeo0xFzkZB/RP68lwpdps9x2+2hIrOC1WN3N06ggn5ZFSy2KXBn
fZBtdl4SbQk6tWq+Rk5Vzg6pd3KnCosPtA4uckonPur372ti+CYXbx1W1Di2
Q0lzrWofafjqNA2yvD1z0hU1ljk/OP6ogoraLjDqs+diLKV4Zradc1WJOj07
15EuzKJqCzKt+u+WU5heQkCHiwqY9PWd1rdLFvHRYHFo2eYOGtTYMjEkwkJO
9y7m62294U3ztl5unb4hFzUV4VLpimgySviqjqiipHPTY7+aS1RYkmGan5Xj
iUblLqWdJQ3d+3ywiw0UeLSuel+z+BziY3OTXV8iA1WoUnat7PIZDd1ommex
LD4O7+tsCZpnI8OT0fcC8/0z6dTV/fGTPoRi0f6XM5Y3KcCgpcVOA26fpPCW
7SpveRFNFbuu7nSlWjFWGL8erd9XRue9yiwiaQy5nqja07J2LlbG7Yne5aeh
/PvHHtHCWLK/YLrr/VkZ3r/t2WeikZS+x2uWHU+R0NM3DomJ9ZU43TA45tOS
I7Sg6Uq3Yo2Svo3JMVw6To23TrPXmY5KJT4W2ww/3kD7/nqr3psdLtr3pVtb
WMa8dAjEZdfW+a+074t884edrz9SRT79m9dvFxdDKW99GqbvUiL54fyGqtbX
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
2NF/t/WRfCnin2+rOHx7HOmNbfU6r3wunlt518qfGoGJ7ScVDeshJz0ry2Nt
CzT/5Of/kJ9rRNa6X84qCpkbHaLz2lyCvoOseHeTYjw0kF24+yAbC/Ni49yO
ptCI0NtX5jrmotO18AkVTHyhFzP8/lsvFU3ZlJx3fo/qn/z8H/Jzs7TTUz50
2EUryxTc/bD6Fr18h8YzC4px9tTO3FlDszAjamH3gFEJVBzve6ReWB5eHnju
2fz0CUysVcvoxxApmRwOc+hWmPdPfv4P+XnptBYmOWXjaeozqcu5mueoTOPm
xnVvFcF6UP/0pBXxaJ1WbqlbYiplB54IyylbgHK+545WuxiF/SbDeu66rKBL
O6KUJ0eof7v8/E1i43S2Rzzx8bXx6n7SkYUoPPvwRfceEZiwslOTVWk59PTJ
unzv1tp/l1N2RgMvxxEfzdyKl9x1KMTjULOzrQeG4Yj/sFQ3rxT6ktZu9o+B
hWh72DjCWR1I9oORtkydTOEai+S9Rwqxe0yVUQ7eAbBv1nJ2g3pScj0YZdEh
Pg9hG/vJtuvHEx8Hrdlb0XtiIY77/2g+0z0AAWWfRQcmx1A/f03Q+mdFaHt7
jG13lSt9ab60/sjaGVQ/60iN8d8L8Kpu/u6M3hfx0WV7r6xWMroTPr1LlUl5
cJr6sD72xxMfU4MbePkbFuLSjAkbMqb4ovHrO2sauxA1nnL+1I87xQgbt3jj
qBYPsbN4x/pvftmUUr6GxQdZPmzSPZM0+8+S57SaBp/qyGnqtef5l3xzMcv4
rPeLQwnEx3TD7aYO6QXc5YK5XAguF+ycBYLLBXO5EFwu2PkLBJcL5nIhuFyw
c3MILhfM5UJwuWDn6RBcLpjLheBywc7ZIbhcMJcLweWCne9AcLlgLheCywVz
uRBcLpjLheBywVwuBJcL5nIhuFwwlwvB5YK5XAguF+z8CILLBXO5EFwu2Lk/
BJcL5nIhuFwwDwDB5YK5XAguF8wJQHC5YC4XgssFO5+C4HLBXC4Elwt2bgXh
3Ars3ArCuRXYuRUEVwDmCiC4AjBXAMEVgLkCCK4A7NwKgssFc7kQXC6Yy4Xg
csFcLgSXC3ZuBcEVgLkCCK4AzBVAcAVgrgCCKwA7t4JwbgV2bgXBFYC5Agiu
gJgrgOAKwFwBBFcA5gpIcAVgroAEVwDmCkhwuWAuF4LLBXO5EFwumMuF4HLB
XAEEVwDmCiC4AjBXAMEVgLkCElwBmCsgwRWAuQIIrgDMFUBwBWCuAIIrIOYK
ILgCMFcAwRWAuQISXAGYKyDB5YK5XBJcLpjLheBywVwuBJcL5goguAIwVwDB
FRBzBRBcAZgrgOAKwFwBCa4AzBWQ4Ap+er0r6XWNuQJirgCCKyDmCiC4AjBX
AMEV/PS6w1wumMuF4HLBXC4ElwvmciG43J9eF5grAHMFEFwBMVcAwRUQcwUQ
XMFP6/b/rfWZeQLdKLgCYq4Agisg5goguIKf1mfmcsFcLgSXC+ZyIbhcMJcL
weX+tD4zT6AbBVdAzBVAcAXEXAEEV/DL1mfmcsFcLgSXS8zlQnC5YC4XgssF
c7kQXC6Yy4XgcsFcLgSXC+ZySXC5YC6XBJdLzOWS4HLBXC4JLpeYyyXB5f6y
9Zm5XDCXC8HlgrlcCC4XzOVCcLlgLheCyyXmciG4XGIuF4LLBXO5JLhcMJdL
gssFc7kkuFwwl0uCywVzuSS43F+2Ppf0/qKk9xElvV8oaX1mLpeYy4Xgcom5
XAgul5jLheByf1qfS8rnJeXwkvL2r16ff3V+Zi6XmMuF4HKJuVwILpeYy4Xg
cv/JzyXkZ+ZyiblcCC6XmMuF4HKJuVwILvef/FxCfmYuF8zlkuByiblcCC4X
zOVCcLn/5OcS1mfmcsFcLgSXS8zlQnC5xFwuBJf7T34uYX1mHlc3Ci6XmMuF
4HKJuVwILve3yc/M5YK5XAgul5jLheBywVwuBJdLzOVCcLlgLheCyyXmciG4
XDCXC8HlgrlcCC6XmMuF4HLBXC4El0vM5UJwuWAuF4LLJeZyIbhcMJcLweUS
c7kQXK5uFFwumMuF4HLBXC4ElwvmciG4XN0ouFwwlwvB5YK5XAguF8zlQnC5
ulFwuWAuF4LLBXO5EFwumMuF4HJ1o+BywVwuBJerGwWXC3ZuBeHcSjcKrgDM
FZDgCsBcAQRXAOYKILgC3Si4XDCXS4LLBXO5EFwumMuF4HJ1o+AKwFwBBFcA
5goguAIwVwDBFehG4dwK7NwKgisAcwUQXAExVwDBFehGwRWAuQISXAGYKyDB
FYC5AgguF8zlQnC5YC4XgssFc7kQXC6YK4DgCnSj4ArAXAEJrgDMFUBwBWCu
AIIr0I2CKwBzBRBcAZgrgOAKiLkCCK4AzBVAcAVgroAEVwDmCkhwuWAulwSX
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
lq18ZJLfblox3P7d86gnVPZShGliSDEC/Nt0GnQ5jvhot8Wg+R/naC1v6vfq
M1hJYwc1PzpdPwP9Q6udf+8nx54zFXJ7VMii3cmWp04tiIZ92cSaPbW/1/0v
KRLvLVdS8JVxbT9PuAHre577Ha+rUdP14qm+A3Jpc9Jj68y38SS/0HGVSx8p
Kl6PT/jyUE6Wk58v3TZSSosXe254OF6G4cHdhjbYlEQtx/peDmynprzZDYpy
Rsrhqx5lHfI8DhGf1wxeflZDc+YdG9FrsQzNusb6TPSIplZsfBKQYx5iUIQG
NnsV9trrH3grf3xp7fV3q6BfkKi9/oKvozv31V7/lxnWj9y01+/3bfLiHtrr
j72VXTzmRAohwLNUk15h8O2yqssn80KYtDXKuj1bQQ8DNx+UHHiAMgPNPO6t
0+BN6Yljj5GKFl+bffHzzVu078gyy1MLVIiaV96+Vutc2qOYL/fQS6ZpL2c9
3K/Ni6UvzD/7RSKjZqFvBo+tnElpdo5VJtxRYuvq9/sUxXJShW5c+kr7Omi/
Q6/4YhkNuv8w3dCsfAhanwpcGOWYRYsTx0SklNL+Pra7czHnYTpWh6/Z0Wab
kmyudhw4/4AcT6yerDrROJX4aOC9zHFMPe37uMmnl8+3UpDEOah8naAHSGyU
sGLyWg384id9+V6UTLWyi5MDowKpt3LPvB9uhThSN+uDkauGBjW+t6SavTtq
TT06qvIWBQ6dfHjje3ouIXB00+qpsXTfpvHWDdkSnNH+4gQdTyLbBn5n69+T
07EZg0x8w1UYunXM5SUXUoiPV9+Er6hlkY8g22ahknUxVOm02VC9Qaeov8kA
p4DSxRhufMkhIC0W41uPTBlSlE7ktCtlT0Q+Lqyw7tfXJAi5GyqNObReQS08
Tm4430ODNcePbYr0SCE+3rX6aBiqnX/MvoMVk+pp8+tr95abTgdglsW54/K4
PKyOeblw+ZE8GmvaYjPZJ6Lly0FJMw2zsOhqrcTHkJPx/G/rL2RHonuniE6L
te/r76xYGWbeygvy1e4jHocfpU7O5B79oRh1F40NHXErnt7d6dsk+0c4Rt1v
OnpEzSLU7TTh0uuKlxCwre76ob2j8H1YTPi7ZtocPt/Sw//WdWo5pcfIm7fP
Ut+NlyfFFhZD3ry+vPLSc3Q3+Pr2yybxFLJ540DV5SJUSS2c76IfT3zMKu5w
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
xoR8mCzD45un776xjCZpm1ltA97mUo1afeP0DKRossPhatjNGGo3LuTzQ+9c
MiiYrnSykWL4+VJXy8vioedhkG1xO4/mDTJuOC0mCx00sj/6eYmP/kEV/tXT
e7WeS3y1XDl5j917bVRcEsV6ZBX1dlVh6bPoaEu1hCxaFx92aSCl4/pbdhs1
U2JG9IA1+eOltL/jCf/YvQrqHe/YIcdKip5H6xnqh6XReRebfKcdStqw7KCx
d7Ycs/v1rrVjkJw2d49v32JcFnXbsPNH12IFmpztdcLa5Qm2bHo+LHOyki5H
WJim7FGjW0jM0M01pOjd7uaaK3IVjS9j9uBAQSbGjq0RsX9tCO16GtKnKFVF
qycGO0VnK3EnvnQf+dp04qPvoXUJ2p8TcgIM5+TmKcm65tCbI82P0Izqc1qe
GKOGjePdzdOnqAg2J/o/l8dRt6N1j7o0VML/wIP+O2+lkLf3hQZN0+V0NtSh
Yq/mKvgMazZlqkM68XHo02YtXN7lYtFTyePq955TgE+pEbmznfFqRl/ZiJHF
gGWv1X0uSGGTMrDK1bhEWjW1cinD49p8vz3/a4AkGaeN7yD4toLmNKrtG7Rf
iZWeZZan+aSRVZbz/ufTpdTtk3peUw81Whz+lu2WdJp+tEZSuZ1K+rSnbXIN
7e9vg0lOb2paphIfE6zKpvX6nIcvG+Ynr++dSwsbl3pw43Uw1j07tMmmmRyd
pFUeDLuoIMWVExe+bgmiBY279VdV1+Z+A69B87t5U27wZVvDyAx6Os7UKf1Z
AbLPdTOY4nma1LJu+18sSyB/5E8Y7FSE8xWrtlw7TYrXfa2aT3kQSNbzDC4G
HsiDTcbhnq27x+F6drdxSnMZ1W4pfd49QQPp54nJz6Snac1Lw4bWLkr6emDV
SHft9Yc+TC5342YChUrKjk5up6bZz0cOtQqTQ337XKfwS7HUd2VF22oVVdS6
xbCRcVeUaBGYWLbJtkDsCTp8aZR5Lo2x3Rh7zFiOe/V2PYm+nUn32Wg3aeLl
ptr3UfVNXj863UVNrSo+cJVVSIX5hPDZ1s7a9zVn5QNvOybS6dUfli3dk4Tv
fqGGRtrXhaqZo9pcGfEQnSfXr3Uj3g0jwuvL2yYUY/3uNwbp8yQIfOEfvEj7
c/CeFFc+0j8Xuxteub5vWxyWtX1ZZUlLFVlLlzx9ba1EwH7DK39cv2f0on1/
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
rXU/0k5Bi7+YLTN7rUY7yYdq5wf6UcE4p2nHfBS0MuLTCPU4DT4MXVWqszKc
DsR0H/FssYSW7JtX+C0rDye6BsR8muSPE8bX9xf4y6muNDljeO1ceJzythnV
ypdilM5dCuurqL656dZv9dRQ2d93P93ICftbrzZ55a+mtXZIqbdRiUZdgquE
30in0i3bN5n2Wk5ut6YvLd9JifeTc668HfuMNHXrphzfoaG1d+2WeGjzcKlr
0ljnqUkU/rRcpwNBarJ4OvCknjbX+cZN6ri+5zPafi+p1ZeIXHrVzm7MbYkU
kzPbthnSKp5Wpt4df9AqlwJr2lSUDZIi0Kp+5EHHSNpzJnVXVP08qj3p4YmA
nlIsHWlSOmVBLFpNt/YeG51HrtdHN1qWnY2r6y531jeR0oVqGbRpgoTuDz9U
cfVaJYpO7s2uOFRKu058bXlxdyaNTzpZtnqaCmO3WL5olSwjw+ujo98bSyjo
vcyqWycFOoWZ9bQ8m01fY0072nxQUtDLxxFXXKS409Y0eFlqJrkOV3s/TFPQ
++eGp5xd5Hg6YaxFGUMZHVCZtH5cNYf+n67sNKzm9I0D+CBEKktCSJZkaiTU
EI1vyFLKrjBGKyY7WeM/WUoM1YRRQigiZIs2y92mfSHt69k7p1MdESbC/7iu
Z+bF8+p+fX7XvXyfzylR6YzvOkcK+eNri6fPLEC485kTCdZSihretU+uUAbp
+L7xC08KkDHQL/hqvZTqqrZmGf0hwOpBPX/68vE15STM+apfIaRWh5Sg8ZFy
KAOtpy/8pYH6rTbdmXoxjyZX+UR1jFBCP1Q6QbNYRivf6p6JeptArudWBCbM
kmGz3ecZK7pIyXCSr+9g2xradm20b1SLGHtu0KQffyunToOhEUv/FtG0axLH
g4GNOLTxdnlInzr6dbSNcW+tUnq4ZHtV+YMm9J8xPt7M9Qr2nNPAnMgoumso
qPX8oMJUw8cPUxKF2FJ5rMvOXpXkF/jTar8c9b1+/o2sMkrgtqKiVlgioTDp
do1KbxlOHJ15ZYogjV6MTVMUdYipTfB41PNwOSaNs/XZ4/uCho9oOPi/4wKq
9+vSJlL3bbk0xDvDWErXY8qMQ7bm0bOnLlSv3wjVksIRnw4qyHK89rV86xh6
FH3BaLWjGOEHd0xaa1RFpsGVqU5uLymqoPBLnl0zzFMar3z48pwSPRbKpu4u
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
OvJ47lN8zluC4alh1tX56TTwYd2Rul4ist83O/FC1yZkze97pziunKY98j1U
KCwiFd5e0FE0w8E/VdRTne/1ZCMmTnMshrSu1wRLpQjm0fVz6mxryaYqqKJk
+UtsWa9xRkOd27clbzPwuXaPRkvObcxdeZPq7F7N0FHn7QPXJ61fslxAqk2/
lF29mEWeqUs3SVqbsO3sVp3SrEbaUnM4wtK8jKx/nhe95ZIINu9CnP3nCyjf
8V3MYnVff14cPEV3lAQZKp1Kk26J1Hvw+Sm/F8nox/vDrPRnq7/bq3Xei9Tf
7UL/S/bnzaQ0+/abpJ06jUjSiSn6xVZGRpPtX4S6FtLCP/P3Ts2XYi2cCkV/
yyhc2jx1WG4hNtQXH1zkLcW4yVE7513MpSqf7Q9vnMtE6fwHk3e1tGJSYdiI
O60PyZJVLbs+l/ur91X87Z7n+1yV0BPth9eezKuC5oDf/shsk6Bgw8iKTRPr
ya/9mef7319hX8TWy4nlTWgc995r0T4x1YUnuA/Ve4yrETNChs5SoKSP9POx
XAW5yYdudR+vviOR9p/GNwjhVpbkfVaddwe5XfngeKGekhJqXVwChZge/XTe
apsasst9fU/VTUqyTM+5Zs1idH998kVXrxsU1bPEyE+dywyMDgy5uECM9Ve3
ix5onkHB2qKdJvlisrf0+9JztAJh5wbd3zurmtJPX7hbm/ME2w2WSs6o7/iU
nwIu6ajvVplo1dPcgdVwDRs9dtTdRjwrizJfs7yKJkRbTd1zJh3jk83sz2i0
YHBsUdAoJwkd+rSj6n/VD+E5M2DOSfW8mxon+ov7y6h442Kt5me36fStxoPL
DdTvUJn7uB5eCqrbQXsy/3lFoZOSLm2bJ8Qp07+jjRok9O2vNudjFbW0omuv
/H6HxVjstD/bJ1REz0dEJ8cfKKeKlqq1s482IkH3lsjj80sKIWOd3nWV6n7c
mpFv0wzN/YfL5fVVuOQoHDf4toB+tJvxxxhdOd7+sNYtYsgzFEjmZQ8xU++P
v/qdLHFV4oc9UalmY8U0NyFv909DMqjzTUHQcfVd1lhrNcpihIiM3Xr/WO+8
El9cuzXmujahh9HJTYMfNNKmxdKfNUbvxfavqxZ///+h4tqN7TWDmuitwG7D
K5980v+j0CjBUv27WjuX3jrSQCOW3477fYCIbJYvm5tlIcXjFF2dp5qlVHKL
+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
1+Ffr/s/yaX2ew==
         "]], {}, {{}, {}}}, Axes -> True, AxesLabel -> {None, None, None}, 
      BoxRatios -> {1, 1, 0.4}, DisplayFunction -> Identity, FaceGridsStyle -> 
      Automatic, ImageSize -> {180., 166.74088966451538`}, 
      Method -> {"DefaultBoundaryStyle" -> Directive[
          GrayLevel[0.3]], 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "RotationControl" -> "Globe"}, PlotRange -> {Full, Full, All}, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, SphericalRegion -> True, 
      Ticks -> {Automatic, Automatic, Automatic}, ViewAngle -> 
      0.42769327351158737`, 
      ViewPoint -> {-2.7180894178863606`, 
       1.067126525000134, -1.7097458571423245`}, 
      ViewVertical -> {
       0.4703274267967081, -0.1846513471069363, -0.8629576997827768}], 
     FormBox[
      FormBox[
       TemplateBox[{"8", "9"}, "SwatchLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30100577`", ",", "0.22414668499999998`", ",", 
                    "0.090484535`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19699838300000003`", ",", "0.252204821`", ",", 
                    "0.33320940200000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               Graphics3DBox[
                SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                  DirectedInfinity[1]}, 
                PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
                0]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     Graphics3DBox[{
       GraphicsComplex3DBox[CompressedData["
1:eJyN3VF2XMdxBmCaji3YcRhahBSKgmxgRFEQREHcQWYNWQFOzslztjBLwVLm
OavAEmJZtmWbsvOA/uvkfoU6MF/uuT+KPX1r6lZX//13z8V//vd//NfTJ0+e
/M8vnzz56ZP8+99/f/j6ZP8wfjLgzwf8dMBfDvjZgJ8P+G7AXw/4mwG/HPCr
AX874NcD/m7A9fd01f/+/flgfzrYvxzszwb788F+N9i/5l7/a3852F8N9m8H
++vB/t1gr1/1r7hX41/8FDzXlwN+xr3xL74b2nk94G+4N/7Fr8BzfTvg19wb
/4/lD+NYv548YmceOh3+/pJ7/W/75+D63/Zfc6//bf8SXP/b/lvu9b/tvwOf
8rT5QvxkwJ8PuFfzv/jZgJ8P+G74nNcD/mbALwf8invzv/j1gL8bcP1hXtZP
5g/jWPtTcNt1HD4b7M8H+93Q3mvu9b/2l4P9Fbj53/5cD/bvBnuf2/FP3Dxh
/Iufgvv9Te1aB50P+G74f68H/A33xr/4Fbj5X/wa3Ph/rL6zzvC5T8CNf/PE
KbjviePqGbj9sA7dDX9/zb3+t/+X4Prf/r8F1//2/x34VEfn+mT/MH4y4M8H
/HTAXw742YCfD7hX63/xNwN+OeBXA/52wK8H/N2A21/rZp/D+s46Q3vHQ/Oy
9uYP41j7Hbj9dh72ZrC/HOyvBvu3g/31YP9usLdfzk/EreN26/p8wB33HP/E
zRNp53zAd+DGx9Rv58GXA34Fbv4XvwY3/h+bfzsPtF8n4Ma/77Hjm3WG7Z+B
G/+2vwP3PXRe9Qbc55SHuAI3/9v+Nbjx/xjP4Xxb/GTAnw+449huXV8O+NmA
nw/4Dtx8J/5mwC8H3Ocx/4tfD/i7Abc9eQ0/x/fPeaD2p+Dmf8exs8H+fLDf
gTuuOE96M9hfDvZX4PpFHu56sH832Pv/5I/Efc+Mf/FTcPO/+Bn4bl3PB3wH
7vgt/gbc+Be/Ajf+Jr/Ig74bcP8uT+f/OwE3/n3PTsHN/45LZ+DGv3XcDtw6
yXnPG3DjX57gCtz3XF7tGlw/PsZDTzzpxN9NvNLEd0zz8Gl+OM1bpnp6qvOm
+mMaF6d8PeWRKb4nv3tvvpn4a/npx/g++bzH+BH5j8fmk7vBfqq/ra8fq1es
Rx7L71P+nt4H+X/bfYzvNv7F5e0c9x7jU4x/8d3Qjvz/VK8b/+KP1R2PjQfG
v7j8v9+3+U7+3/h3HJCfk0+0ffl/49/2d0P7zkv0v+1b3+t/25/qPv1h/Nu+
/L/vobj8v/1+jE83/4vLPxr/4rvhc+X/nedN88LH5gPmf3HrJ+NfXP7f/Gh9
IH9sPGkv/2/+tw6S/zf+td8N/XGeof+1n+blvq/mf/vj8xn/2sv/O26JyxMb
/+Ly//ZbXL7e+BffDf2U/5cPsp/y//rfftpf84/9NL70v/yuvLv+lw+T/9f/
8gfy/z6P8y35ff1v/yfeVP7f+Lf/8v/mf/tvf41/+z+tY8j/W3+Iy/+br8Xl
/41vcf07rQdY/4vLn1r/iMs3mf/FnZ8b/+Ly/9bfxpH8rvWK9vJh5vdpnUr7
aV1rB2797zzY8cH6R3vrKfO/9n6+8a+9/L/zInF5XONf/LF1b/FpndB8of/l
1cw31p/yEI7P+t92bM/8Yzt+//rffC0vrv8dr56D6/+pHrJ9xz/j3/Z34Mar
vKb53viXB5L/N//bvu0Z/7Y/6Yzk/53fTrok8WkdW/7f/CPu+Kf/9ZP8v/Et
rn+9l4eTZzf/iPt96n/nt/Lc+n+aD2sv/2/+t46Y6lHrDP1vfMv/6//pfdDe
eDf/y4P6d+Nf+8d0o+LyrMa/uPy/+V9c/t/4F9+BO+6Ky/8b/+Ly//p98rd+
9/v5R/lQeTv5I+NfnsP5tvnfeaHzE+PfOnoHnnvrDP3veGhe1v/mD+N4ivfp
e8j178M6wN/5Hn637j/YP2wfPPZ/u8cPzx62Lzz2v19/fzG0/wL79/f48eOH
7QuP/R/W574a+vMK+7/c4/vfPGxfeOz/tP5+MfT/Avsf7vG73cP2hcf+z+u5
Bv1K4bH/4z1+O+gtCo/9X5cfBn1A4bH//h6/GdazC4/9j8tvw/pr4bH/7h4/
H9YLz83Liddc5ek/4P574tB1rRfg/3R/rbii/Yqf4O+JE9u/AF/PUd877df3
G/zp/bW+R9qv7yv4D3wvtL+3nvj5/bX8bP/j55VnD/o5+fcn6+/PwH3fg//y
/lp+TvsLLz/H/qer/78B930Mvr7H8nPa/9X6XHn7n91fy8/BfV+Cv8fPaX89
/976bPnr3LrBeJZH/2D/IF5+1v4F9yveys+s05afwcvPrutegK94KD/Tn/Iz
ePnZ53L+tvxUfrafgz6//Gz/4+dVB+z188IP/7auz7b4UT+nnljvUfk5uONR
cMed4MZz8BW35ef0f31e+Tn9/+j+egvvkP6Vn9P+r++v5efg5vPg5u3gxrM8
9wfcr36Wn10XegGe9/djcPNzcPOzuoML8BVv5Wf6f5Qv++T+Wn6m/+Xn4B/e
X8vP9H/vfMz8bP/j51Wn7vXzwg+Ji2dbvMVz6t0VD+XntGN+jr35ObjxHHz5
ofyc/q//f4R/zOfdwou1eE7763lu4BFafo69+Tm48Zz+5vrB/kG8/Kz9i4fx
8rPtvHoYLz/b/gX36/u90856Erz8DF5+Bi8/g5efwcvP4OXn1a/z/D1+Xvjx
8/tr+XnhN7F/scUPy778vPDbZV9+Xvh+2ZefF15+vNjiTz7m78Gt53O1bg9u
vRHcOjy4+Tm4+Tm48SxP/MH2/rCep/xsXLwA/+L+Wn6m/fJz7vWz7V+ArzxW
fqYuPjr/fnp/vfU5jefg1s+0v5fPMj87D4uf1+ec6+eF7xOnz7Z4i+eFH1Y7
5eeF3+rnhccv5eeFt3iOP17x93yu9XPsrZ+DG8+5Wj+nffNz7M3PwY1nedwP
9g/i5WftX3CffPMx+G618+phvPxsXrwAX+N1+Zk6t/wMXn4GLz8zL7nxOc3P
4OVn5/3x8/p/5/p54cevV3+ebfEb/bzwg3lj4S0/L7zl54W3eM7z/Ya/px3r
5/TH+jnPZb2R9q2fg5ufczU/Bzee5Vk/2N4fjGe/txfgX26fw3W88nPa18+O
2xfgq24qP1O3lp+DWz8zbys/B7d+hrcoPwc3P8szxc/vsIuf323bLT+/ox8v
tnj6XX5eeMvPC2/5eeEtnt9t7+vv6af1c/pj/ZzPNZ7TvvVz2jE/x978LO/s
VT558ciNT/5x4IfX+NH44b8OfO+ab7d5958H/nbVAY2//dPW/kg91+q6Pwz8
6qrnWl33+639nnzR8sbv6P/y72H5NdcnXuHnDz/n8+Pn4PCih59xjZ9/tm0/
fj6s/9/mg8HhRQ8/3V7Lzz/dtl/v09OFW28Ep647/GR7LT//ZNt+/HwY+OfD
vy5cXjQ4vGhbJ4mfg8OLHv5l2375OTjz7tRnLZ6Dw4se/nnbfvk5OHVd5v8t
noNT1x1+sW2//BycvFH8MvF8XH7KNf/vkPt1rfwU+19v/+66U/x8XONKfa/L
z4fg8Ej74MZzcHjR9KOuqffTv9Xv+Hm/8HqP4+fYM+8+hn9e31uNV+GZGQf3
A/98XLyn/HPxofCie+3j3+Dwoq7jlZ+Dk5/3rvvFz8HhRY8fbftTfv5oey0/
Y19+Dk5ddxz450Nw8vN+4J+Pn+431/Jz7uH597HXz7GHFz3Gr+Rn10XLz8GN
Z9Zhys+fcI2fP9n2v/wcO+uN2FPXHcNXkp/DY5qf9wP/fPztwuFFD7/dtld+
jr1+Dg4vemTdr/wcnPzc1pnj5+DwosfPtv0vP3+2/bzyc+yN5+DUdceBfz7g
r/LzwD/fpR692P6/47o/5Jo8F3v42gM8cfx8s/Ajz72P/XoP4t/z2CcPXXBl
/T39qHEm8376Fz/fxj55OvwFOtH4+Sb8M/l5H3vy8/nAP9+t+Zj8c/hQedFb
7ePnz7fX8jP25efPucbPth//BocXVQdRfg5O/XyLffk5OPXzDfbl5+Dk53Ps
y8+Lj8i1/Jz79f/Kz1/w+fFz7OE3br7YXsvPtF9+Tn/Sfvwce3jRu+QJ6md1
JeXngX8+BKd+vkn75Oc97ZefB/75bvER8s/HL7ftlZ9jv56z/LxwedEb2i8/
hwdh3n1u+/FzcHjRu4F/PganflanU34OTv18M/DPe/xVfh7457uv9ptr+Xnd
H3KNn2Of8ePF1s51q5vYJ6/Ez2nXvBH71U75Oe3Di6Yf1s/H9I/6+TZ+pX5W
91R+zt/Nz7E3Pw/8893iPeWfw4fKi95qHz/HzrwR+936e/y88JafsS8/B4cX
vRv452Pmc9TPtwP/HF7S+lkdWfk5uPl54J/vvtlvruXn3MOL3n7D58fPsYcX
vYm9+Tn2u3UfP6c/Cy8/xx5e9C58MvXzET1L+Xngnw+xp36+SR1nfkaXV34e
+Oe7bxcOL3r8dtte+Tn2+vnbbb/Lz7E3Py+85efY79Y1fv52e19+HvjnY/gG
6ufbgX8+BKd+vhn45z3+Kj9P/LP6aHS59T2oy4V/jX0+v/FN8Lixr+9NXS58
cOzjj6bLhVeOfb7npsuFny69WuYbzpfguWN/zvff+q8ud9k3Xa68e/yf5x3O
G1GXm/htulzWAcr/+b7U5bKeUP5f7TddrusS8X/8OZxnoi4373eLV9dJnnCv
LjftosutfKAu13gLvvJo0+Um/6DLPRg/tq8ud9k3XW7yLrrcjBtNl+v3Fdzv
i/bV5SavN12u+SG8TMZzdLkZD9Xltvc9/GHqFHS5qTvU5WY8VJfb3sfwjY6T
6X/4CHS5GQ/V5bb3Jf1fuLrc3KvL3evn59yry0WPIN50udTP7hNqulzzIXjT
5RrP7ANrulz0IOJNl2vdzD6/pss1n4A3Xa7xnHls5lvocjPvUZdb80J0uQfq
puBtPIo+1ryx8BbP4RvXe6EuN/NCdbmZd6rLrfUVdLmZb6nLbfk8/Tdvv+Re
XW76hy635tPqco3n4OYN9heqy2352f1Y6nLX8zddrrxG2l91e9PlGs/B9TP9
V5fb8rP9R5dbvB263PBJ6nJbPIc/XP1Ul9vyc/S05ueFt3gO3+i8nHmLutzc
q8tt8Xy+vVeX2/Lz+fZeXW6LZ/rbdLnof5u9ulz459aOulz0y619dbnq73K1
ngRvulzrDfCmyzU/gzddrvGc9y3rIehys26gLrfWVdDlZl1CXW7WVdTlZt1D
XW7dq8td75G63FbPpx3r9sS39Ub6Y10XHbL5Oc9lfn7NvbrcjDPocrMe1XS5
xnPw5cemy804gy73iX62fXW569p0udbPyQvWz+iSmi5XP9O+utyWn92Piy63
1onQ5WY9Vl1ui+f0d7WjLrd4G3S5xXegy23xnPZdB0gesX7O51o/p84znuE5
1OW2/Hy5vVeX2+LZ8yLU5bJ/rtmryw2foy7X/AzedLnGM+9x0+VaP4M3Xa71
Bjrcpss1P4M3Xa7xnHor+iN0udHdqMute3S5T1i3r/fZ/Jx2zBtvuVeXu+oi
dbmtfk471s/Et7rcVj9Hh2x+znOZn41vdbnhk9DlZj2i6XKN5+DqY6jf1eW2
/Ex91HS5u/tr0+VaPycvWD/zfjddrn7Gf+pyW36edKPeo8stPQe63BbP8Erq
clt+Zh6uLrfF8yO63FY/U+epy23xzLioLrflZ/KIutwWz/obXW7jk3/EHl1u
44f/Cp+JLrfNu/9M++py5W//tLVXl9vquj/QH3S5ra77/dZeXW7LG797OH6z
HlnrLepyid/DWndsfF10ufCi0Xtlvajpconfw9KDtvlgdLnwotETZL2r6XKN
36fr3npj4dZ1Wa/Kel3T5RK/h4F/rvFPPy9cXtT8oS5XXrR0ufp54c67S5dr
PAeHFy1drvXzwq3rSpdrPGe/LnVd6XLNz7/Y3jddLvEcvVSth6PLrfUzdLlZ
/2+6XPJxdLnVD3S58kjR5bZ4ji4XXjR6gvRHXW7WsdXl5v1tulzycXS5WYdX
l+s4GF2u8VzzE/28cHnRvfbocuVFHQ/V5Zqf99g3XS68aOlyqZ+jJ7Cu22Ov
Lte67jjwz9Hlmp/3A/8cPW7pldTlGs8Lb3xd7Mkb0eWan6071OW2eGZ+oy43
erGmy2Wesmf/VdPl6ufw1eTn0uWSn/cD/1z8kX5euLxozbeN5/Ag8KJH5h/q
cs3P1ndNlwsvWrpc6ufMf6zrSpdrPH+2vW+6XPJz+DXz837gn6PHPYcXLV0u
vGh0udHPNl3ubv1/dLnRgarLPcDPpd3SqanLpV6OLvecvHGET1aXm3zedLnM
u6PLNT9Hl2t+Ph/45+L39XP8Ai96qz26XHnRG+zV5TrvPrd9dbnwos5X1OVa
P99iry7X+vkGe3W55udz7NXl7uFFS5drPMcevq50ufCi0XslLzZdLjxS8myb
D8YeXjS6XOtn54Xqcq2fS5ern2NPft7TvrrcFs8Zz/Rz1gXhRWv8M56Dw4ve
0L66XOfd57avLhde9A5+SF2u9bPzb3W51s83tK8u1/x8Tvvqcms/Frrc1JXq
cmv/mbpc903EPvkHXa48UvJmi+fYw4tGl2v9HF2u9XN0udbP8hzqclt+Rv+o
LrfFc/Qx+jk4vOit9uhy5UVLl2t+zrqsfsa+6XLhRe8G/jm6XOvn24F/rvMC
qOvkk9Tltvw88M/R4x7gRUuXC89/qz5JXS7zk+hyW35GZ6sut8UzOl51udbP
pcu13hj459Ll6ufYm5/h7dTltnjOfEA/oxNtulzjGV6p6XLNz+hmmi7XeH5M
l8v4l3mm9XPpco1nxsWmyzU/w/s3XW7i2f3e07m56h3F3Wfr7zBp7z5Gf7dG
e/eJ+Tsf2rsPx99F0N59Dp4jr706cs/dnvhm7V1XCd/puRGe95r77/C/umnP
fURn1j7Xc/W+w/+2vxvaV2+V9j0X6jv8b/ueu+M6n+1fg3+H/20/OmP1uZ4b
wd/b+oDruvi/teM5hflcdSU/bv3f2t8N7XvOVtpXV/jj1v+tffaXjOup6Iun
9ZPWfuI/PMeH/F3e9IT78JGuN+be/c05T+UleNZbzsC/J/7dN7ADV/fjc70B
T//le9J/z915T/6x/9fg3xP/9v+Rc3Mbb3qyfxh/zr3n47o+xjmt5v9mr04N
/7f+eJ4Zv1vT7C8H+yvwv2793/rzyHpgs0/+Cc/5yfbvjTc92d6HV678o576
FDzrY663P11X5k913o96E/OP/XzNfZ6L/U8H+W/7fwWe/rself6zflL9dz0W
/0/n5jbe9GR7vyf+m279dIvX+thL7Mn/bX1YXQ/+b/1UL8jvMLX+q8fC/63/
6l3I/9P6dut/8r/6XM+NcB+LvPVzcM9Xdj3hJbi/l+E6j/W+vwPn+ttr8PRP
Pjj+vATPc16BZ736LXj8eA3+A/nffWOe07/b/r3xpif7h/Hn3Od6Oth7vmmu
7ocO7nl7XJs+Ql0b9X+zV6dM/dPs3XdC/p/0Gs0+42/y5efbvzfe9GR7H168
xl/11O5vZp9G+1z2j1b76OD1f9NH+Hnvt/4v/C9b/7d9h+o90756gfeMv7av
Xgb/T+fmNt70ZHtf6wPPsQvu/uZhP0x97tnQPvsN9H/TR6i3ov5v+iB1nfi/
ta/elvw/6Y9a+6l/kv++3P698aYn2/ta33iOHfu+2vkTL7FPO2fYux7l/oMd
eOr51+DJ864/Z97qcyafX4Hj/8LRMRX+nvonOP6fzs1tvOnJ/mGc/Yee19vW
x15iH/xssD8f7HdbvPQRr7Gn/m/26g2n/X+/3+b/ti9ZXTl6umaf+jPf53Ru
BPtmc3+Ev2966tMtvif/1+fuFs66+5H4b/tpdrTD77CWfep81o0O6Hfafkr1
ntHH6Zfvt/4v/G9b/xeO/5s+13Mjgp9s78+J/6ZbP8We/NP2bZxhv1u46/G7
7bXpI1zvpP5v+iDXk/B/08fJ15P/J32o++yjEx3PG4UvrXMxp/Mctf90sP/t
w/Z1rtt0Hpn2Xwz2Xw72Xw32Xw/23wz23z5s/8T9EIv/rPND4UsP7gdSB+Y5
uu6Hiy6Y8/DSfuUP2i8dA+1n3b21z3lO1b7nAbgOZ/ueL7Laj16zeM6cj+Tv
IyX/oguo82fcr5Y6knMB0370MbZ/iy6s9MLuV077nGtV7Xs+fdpXF5z2Pa8i
cZU4kYf8FDzzTfeNRW+O3qrqts/B1a/Ao5beAh71oN42cfs1ePT734Cv/rte
mP4f0dGE34sOT36vznMM35hzoj7HPnUS52CpI2n26AGTT2/cp57+eL7I6n/W
Qdu5te5/yj6DC/Dlp9JpwQfuOV+q6hJ0MKWT/Qr76CPd/734wKyLt3NfPf9g
9T/6vDpHPnrtz7d4jcfon0p/+iX2Ge/Rl5T++mvsU0+oo8/+g2+xz/uY90Xe
6Qvw8E5fgmc+8hV4xvGvwTO/+Aacc4bkne7kYRYfEt2SfEh0Ns1eHib28jCx
l4dJ/h/4h+h45BOiO5F/OMo/pP2Bf4geqOa/a9yOfqXxC+otst/F+XXe02Ge
eBjmieoJ6jxG5zVr/hKdQTvXbqq31RW82/6/4K1+FFdXkHZOB3t1BbE/G+zV
FcR+N9irK4j9m8FeXUHsrwZ7dQWxvx7sp32E6AoOznsW7ryy6WvUFeh/20FX
UJ+LruCojsb2d0P76ujZD9/aV1eg/20fXUG1j66g2ldXgP9dL1dXIK9SOPHf
9m2hK/DcnPa56ApuiP/W/m5oX10B/m/tqyvA/619dQXup7V9dQXGf+q3jHPo
Ctr5ZepMp3356AoO5p/YJ07QFRyMf/fv7rCX1/S50BVU/9UVyM/Zf3UFnotp
/9UV4H/X19UVOO41XF1B2kFXcIv/3eelruCW+G/2u6E/6grSnzeDvbqC2KMr
uMX/rT/Xg726AvNP6urUhegK2nl/6NObrgD/Vzvk//rc1Ivqsol/94WpK/D8
mvZc6Aqq/+oK8H/rv/uo0n90BXviv/VfXQF1YnDXVQsn/j03RV3BHfnfcynU
FdwR/21f2A779FNdAefdtP6rK8D/rf/qCsj/rf/qCsz/nkf1j+oKWFdt5y2p
K+B8+nZukLqCaZ+H60vDvoR2jou6gszf1BW4PqBOXF2BvLh6Z3UF+N/1e3UF
zoMbrq4g7ZwO9uoKYn822KsriP1ui5fu2/ks9X+zdz5L/dPsnc+S/5u9ugLH
X84fU1egrsz9nU1XgP9bO+gK6nOH33VpugL8XzqExKf7UFk/UV/fdAX4v7XP
vP5A/Lf21RXgf9f71RWoqyyc+PfcQXUFnvvZPhddwZH4b+3vtnjt+1FXQP1f
9sS/+87UFVT76grI/619dQXWP8l/8prWxegKSq+ormD63fvw4+oKPA80OPFf
OP4vHQL5v+zjt2lfjroC1ifLHv+XvfUP+1GargD/qw9QV+C6RMPVFaDrrvOA
st6groD83+zVFeD/4LXvU10B9X+zV1dA/VP25H/3qakruCX+mz26gvrdRXQF
7ivxfJSmK8D/tY6fdSB0BU/4XTL39zddAf4vHULqK3QFtQ6ErmBv/cn7oK7g
SP6v9pn/ur+q6Qrwf/F0qUfRFbivqtbZs46rrgD/Bz+Sfxofiq7gSPw3PnS3
xWv9W10B9X/ZE/+ND0VXcEf+aXwouoI74l8+VF1B8yt8qbqC5lftPx3s1RWk
Prt42L7pCmL/xWCvriD2Xw326gpi/81gr64g8YyuIPynuoJab0BX0PKE54Ch
K0j76grqPB90BS1P0L66gmofXUG1j66g5QnbR1dQvxuDrqDW/9QVJK943kDW
BdUVpO5BV5D2m64gdRW6grTfdAVpH11BtT/87r26gmpfXUHiCl1B1RXqCuJf
z7dIu+oKUkegK2i6UXhUdQX1e2HqChK36ApqXU1dQfqJriD36grC7zVdQcZ7
dAVZb266gtQf6AqqjlZXEHt0Bdmf3XQF6Q+6gvS/6QriN3QF4dPUFeT7UldQ
8zZ1BbH3fI2s06MryLqpuoLwgU1XkPHe/eE5NwBdQZ3ToK4g4yi6gtw3XUHa
QVeQ+6YryDiKriD3TVeQ91FdQeJeXUHqTXUFeR/UFbzl7/JO6gqSB9QV5DxM
eJg8T9MVZLy7HOzVFcT+7WCvriD5f+Af1BUkP6grSJw1XUHaH/gHdQUZx5uu
IPmZ+XXdqyvIezrME5uuIO/JME9UV5DxoOkK8n5N9Xb0Be4H/3G7rlrz+egc
0bmVfs19uz/nPrqaZ+DR+Uf/hS4reg11XDlPU/uc/6iOK/qRtr+S37suPvpf
tnj9HviH2Mcfngec/ZV/3q5TFH+x9CPqoLIvUB1Uzu9RB5V9h21fJedtRAdV
ukJ5+3/iPvOXX4Hzu9Ntn+DH4K+4uk/Qc1by/6M/2q373fY53NcWnab28ZP2
OV+y2X8y2H/2sP0dvHfNc/645Yeb7sn9X/+8xWuc5vdL63eYP9rintto+54z
mPaP8sb53fgdeOLnD1vetfiyp/sNXr+D+cstXnzEr7d45m97fi+0+AjOnaxz
1z57uP1b+Nh8f9kH1nRi8LHJO6W3lf97yn3G719u8aqP+d3v+t4/wj79+gT7
tPMZ9omHgf/MfhT3VR3kP3+1/fy2ryr6NXQPGQfcx5TzgrXP+bbBU08c4SHr
fYSHzD6m49nD9jfwkHk/8//cl3QDD1n9eDPYw0Mmv5T+3f00/J5q1Xucm1y/
8wtPWPOmYf/RQZ5wPafnfmaev4cnzHxvvwNPu+4/Sj+G/Uc5Z63so2ee9h/9
Dh4vdQ+8X50TBr9X/CP8Xp2TB79X+QR+r86JhN8r/g5+r85J3WGf/w+/V+cE
U18W/wi/Vzpq+L3iN+H3qs6hrit/W9fle6OuC89gXdfygbop6rqa51vXJW9R
11Xeta5LfqCuy/Nb19V4ZV2X/lPX1fyWuq7qdeq60rdY1+V9pK7LPLTVdXlP
qOtqXmpdl/fec9Tyff2jdd1uXa3rMl+1ros/res4D7XpNKzrMj5a12Wcoq6r
utW6LvXKrx+2b3Vd7D8Z7K3rUs9R19V+Q+q6ii/rutTP1HWpw6zralynrqt4
tK6L36jr6p66LuO9dV2t11vXZf316X6D1zmK1nUZV6jrkk9bXZfxhbou962u
Sz1HXRc+qNV1mY97LiD7XNv69dP9Fk/cU9fVurZ1Xb536rriZ63rEj/UdXU/
7Je3rqs6YVjXtq6rdW3ruqzTU9fVvN+6LroW6rrktVbXJS6p68LLt7ou9Rt1
XfjBVtelPqOuCy/f6rrYU9fV701Q1xVPYl2X9UTqujon1vXfxM2w/tvqusTB
sP7b6rrc77Z41nVaXZfxaFj/ta4rPnla/7Wui46Eui73ra6Lv6jrct/quviL
ui73ra5LPUddV/c77FPPUdfVvXVd6jnqurq3rks9R11XdQ6/Z5W6rfZ5w9eV
Xd5b9xGlLv9wa1/1G+dI13mv7CNq57xl3U6+7tn+YXvOka1599+3dV3GhXqu
5M3k2Wdb/Oi+gthnPKauS92Wz23nfaWeznlfrDu2875eYI/+Xr7O83EPT7f9
SR3l7zIEr3WgZ1v8yH6JqsfC81DXeU5ytZ/5HXVd/U7L36nrcl39bHzds/3D
9i8etk8/Gx/46mH7prfOlXOF7X+dI8y6eNVdrAcHzzhU8Zz8yj6HI3nEeUvG
9apP1cleYP9vPE/wp9vnaucjreeyjqp5oOcjvdjit8M6qPsHqn307q39iy2+
p15v+1vk63h/Mz7V7wAkb2Q+6bkA1A1t3svzBr9l3bTGRZ43uN9jtf/p9u/V
Drrhss+5BNZ15M92jlD2tcvXPds/bP8Ce+JZ/i1+kK+LH9q5Qxdb/Ii+XP7t
SF13RL+r/YG6zvErdcst/qk6B31G8Bv8Y31VeT7jOevuVXexnh3cOKn+kNeq
TsvvZQznBd1S1xnH1X7OVaCus36Qr4vfXDctvQt8XfxWdQ76Cfm6+K3ax2/y
dTVeUtfVfB6+7khd57xUvu5AXZc66sa6Dj1o1b2p3zy352/Uc8G/29Zthb+n
Dgv+/bZ+Kvwv1DfB/7itMwr/gXEdvMZF2nF/fvF0l+Dfk6d4rr3173eD7lO/
eW655/as8aL85rk9r8B/wG+277k97tvxXJ3XD9vfMj7XuUOX4D/gN9pv89X1
vOe8r/qn/Lf4Duv3ms++Al/819469Putfwpf/bEebHxZ8JzbwP7oOmfmEvz9
1j+F5/c23R9N/rKdihPPveHclhYnnh+uvo79WuoojtQj4WcrTjy3Z9iP4XjV
3i/6X3HiuUOe20M+KZz3ovDFO1vXP3E9O3HH+CVe9VzaYfwq/Ift89rPWncZ
nqudg+25PeyvU2fS+GLXPdSZuN+W8aWd28N+2yfyLEP/K04/3Pa/nttzbPFH
1RVph/77HlRdETzng7lflfexcMcjzu2p94Vze+p94dyeel/Yv1rvC+so9b5w
bk+9L5zb0+ZvjI+Fk+cLZ3wUb/Ui8Tx9rufq1HsUnPFFHUi9R9jXezS0X98D
+blw+FPHw6r/guMfz+2Rr3Qc9NyeVt/jzwmvuMj6K3zdDXVMO5cDvq6dVxhe
xDog8w/05TVfZz9DOz8Bvs7xtdnD1936XJn/sX+g8hv6+Moj6sX5PTT5ujs+
t+2jh6+74bnaPnr4ujt0267Dytfd+H2FZ7IuzHi42/an+A909jXOeF5G5s3q
tpPXzcuZD7HvxXVP+TrruWb/4mH7xtdxPoX2ja9jP3/N2+h/1Quei5Q4oP81
jrH/ocZneNFqP+sy6gx+u+2/46R83Z68X3wG8dP2HcPXZd268XV8L2XPeS5t
nZfxPM/b+Dq+F/V4ja9jnKhxz7yR8Sd8LHzdgfOYqr5gf4vrqvIcR89VSfs8
b6tf4OsOjOs1bvu78Gkn+33g68yfbX8ufJ2/H9XsrbOIZ9dV5ev2xHPbzwtf
l3zV+DrqCddhG1+HvrLsGb9qPF/zuDbfzTo9fJ3jojo3+bp6v+TryFetboWv
S56Xr7uhDnMfrnydcVOfy+9FVj047EtMvdrmu9FFydcRV1XfZb4mX8f7Vfac
m9P2ycLX3Zn3WYeVr0v+aXwdcVXtu97POqx83Q11WsWjfEHGJc+9TZ5znhnc
81XTjvOffK77eVJ3ZH/N7mFcvs7f6fZz5ev8nW6fS77O34Ed/eZ5gPJ1nrcr
Ty9f574s27cuc77kflX5Ouch7ue1TtdvtN/4uuwvg6/TPzUeWCen3mE/XuVF
z8lNO/invp9lL19X9Tl83dG8lXbwT30u86tqx3UI8rp8XXu/3E8qX2eceC6f
fJ3zbeqOxtet/CxfV3ot+bphfam9X/Rfvs58UvUs+aRwnrf8t75f+bqMU/J1
/q60uHydvytdn5vvBb7OfDI9VztfTr4OPsW6vvF1PFfTD8vX8VxtP6x5K+tU
xKn9rzj9atv/+j6zr4d5iPV3+Yn+W//K1+V9t+7xfax+Oh6xH7bxdfJB7Idt
fJ3vC/thG1+Hn90PK1/n+FjvAXms4og8Ly5fZzxPn+t+1ZZv+Fz1vW0c8z0a
2q94Jz9Xv4gH61b5Ov3jftjG1zEOuh9Wvk5/Tvj/2w/7f2+nkSE=
        "], {{{
           RGBColor[0.880722, 0.611041, 0.142051], 
           EdgeForm[None], 
           Specularity[
            GrayLevel[1], 3], 
           StyleBox[
            GraphicsGroup3DBox[{
              Polygon3DBox[CompressedData["
1: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
uy/WVmMpuxfWsshryKVct4oaG9k9uOYcL5/dm2uBy2X34JrhL7L7jNsZG19m
13Jf4+rJdbrm9h+i85Uy5/fRuVFZ8UfcrOB8+F10PlH+/CM6cyoH/RWdSZQb
/4zOlsqBz0T3Y5WHxyRnbz3v16pXVfD1vy6556b5pEpyX0734rLk+lE12aXJ
/T1d/0uSe24aA99GZxtl6UrJ/T3dr8rJPUDdxz3RuUsZ+3Nco+C177PoZ03Z
8oDkzKZ8cig/AwvOCf9EZypl4P2Ts5bWrH2Tc51y9yHJ/VvlBC0EypPKsSWS
c6ny7fXJvUGN1QOT86fWu4OT+9LKG99EZzzl/B3R2VJzw+7orKu6YFd0blSu
3hmdG5XDD0rOusok/0ZnYOXnv6NzoPL5f9EZWDm8tjJEwb2yG5L7nJq370yu
l9VnHphcR6tO6pdcL6ufOSC5jlbvqH9yfap+db3kWk99s7uS63H1pYfqWhfc
s+qbXBerp90ruabT3HVfch2tvuK9yXWu+o33JNe26hPentxXUf98SHJNrZ5Y
3eT6UX253sm1oXrafZLrOPW06yTXm+rXnZPc01Bvo1Ryn1/r8kXJvWLN4RWT
e7yawy9O7v1qPqmaXLOrT3hTcm9cvcTTkvcINF/dnNxDUB18Y3Jdr55qreT6
V33CM5L3CzRfnY4HFTxHXZi8Z6EMcEFyH15rd3mtowVngArJPXCtO2cn7zVo
TT8zeW9C89tZyXsTyhglk/cglDEC7lpw/bVfcn2hmu6T6HVBuat5cr9O2bVp
co9FvZYWeHPBdcEDybWz+k+DNV8UnPmv4WdewRlySnQeUwZoltzHU1bsWjyu
1KfpltzjUmbeFD2nKdO+Fp33lHVfjc6NyrcvR9dfqrOOK76PqrEe1LNXwufT
HX9acCY/Prlnpdrk6uT+pDLtVcn9TNUapZN7TaoXTk7uMSrnn5LcH1N9cXnx
PdVcVCO556kMXJOfNQVn3ROSe2Kqj07lZ0zB8+0tyf1SZeNXoutKrdEnJvcD
VXecn9wfU/1yXnI/TfPzuclzoMZqmeT+mGqWK5N7pKq/rkjunaomOim536ha
qRw/kwuu3com99lUB70UXc8qP7wRvRarHtwYvdYrg62OzgPad1iATy64xz4v
Ogeq9z49Omspn0+LzpDqbyyLrkG07zAjOlOpBzI1OtcpB86Pzlfad1gRXXdr
v2NVdJbQnsjH0Xnp//VRdM2onvni6JpRPfPnomtM5f0l0TWj+ucro7OK9kqW
R/dDtPexNLpnov2R+5P7e9q/mBmdD9UDnxudgbXXsDU6v6lu+jA6j6mW2RKd
r1SvrY3OPNpP2Rydc1RHfxSd8VTHvRidqVQTvx5dv6junh2daZWHP4jOeKrF
3ozOTqrd5kTncO0NPRudt7W3Mis6G2uPZlt0HlNduSY6U2lv6P3obKlM9xa+
quBach0uW/Ce0ejk/qf2XD6NzoSqVYcl9yG1B/FudE9YufcdfH7Befvt6H6v
svQifEjBOXlhcR9M9+W94n+7zmGv5D07Zaejk/f+lJFS8h6ics4LxfdU12oD
PqXgnN82uW+vvZgOyb137W+2S+7Va0/ttuT+vPba2if37bXXuT66B65a4Jjk
vUXlrmOT13HNIfsk72kqdxUl7zkqj8XkfUzlui/5nqsLrhd+id53UO76LXp/
U9ns9+K1W7no1+j9UOWxL6J77Krpfsa3FFzH/RS9B6Gc9lV0/1913NfF904Z
YHv0HoFqupycu5Q97k7u92rvbG/cvOAs2jF570P7y4fjbgXn6iOT+5nKn0ck
7/UoVx+WvNejGuGo5H1Y5dXOyfsm2muultzX1brWSuO+4P2mW5N7ttpr65Tc
n9dec6PkHrL2p1om78to/6tHcj9f++/1k/vG2psbkdyj1n5fw+Ses/aqRiX3
sbVveEdy/1l73F2S1yatI22S91+079ak+Dy1ZrVO3tPRHlxPPVcF7++PTO6f
a7+yQXKf+f/7gMk9be2XDU/u1Wvv8n8XPFci
               "]], 
              Polygon3DBox[CompressedData["
1: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
unJ+1q/i9xjzVyzZo+aCI5voiRNL9KpnQq9HT8ON4z16RXoCPkvPRO9Ez0Cv
SU2tV2OMVWvrSejlGBP0Koyxekt6NsZeY46xx5ij12BM0TvSwzHWGGP1nvRE
jL2H8t4XldRM1k7GOGNvv05i3x6Mn1LiEekVOafObe9OtIhz7tw75+Zq94R7
wxitd2OMNHYb042dxmRjszFXbeqeMfYaw91LxmhjuTHf2G2MNlYb09Warplr
55qrTdxj7jX3pN6VMdZYa4zSezEnWqupkcyV5lRr0Ts7ybXmXGstNZC5WA1l
LWaNpra6uErtYg1j7W7O1UtRU5mL1VTWcuZMtZaaSa90RCdaypytt6KmMpef
WsUb0CNYpY7msra0BlSLmUP11o7pJLduWUXbq4nVxsZcY6+aSG/OHGguNOfo
dZkj9OLUiOYOa1BrUTWYXmz/KrW8Nb1emTW2tbY1kt61Od/a+rlOtIBnwrPh
mVFbeuY8e54JtZ5nwLPgGVLLbQ/3K6nZ1rfWgq8q8SA2MDfBV5d4DBvCa1bJ
ZeY0a1M1hdpiu0609U7wNSWexkZ1NKRe17udaEtrOr0ua3xrve3gviU18Xp1
arBr4ds7qc30XK5v19/11BM5r6Sm1CvZCr6wPQ8rw9vAV5bUqGu7P/j/8Uo0
k9pJj+T8kppb72RbuE9JjbtuHQ/mgpKadKV2P/Vv94P7Q0/ounY/6BWNx/j4
JTHT2GnMVmtP1Uks/8/DgL/rxNtQo6iFl+lEu5hT1QLmUHOtOdTawRxgbp2S
589ZolnVrnOqY0tqXmtfPZ5R7frrdZpz1fbmcHOxMdBYaAxUy4+zrijR1Gpr
a2hr6b3b9TTn693M3YkWUCOpldT41jrmfHO/Od5aV82qdlVjWhs9Yh1T0nOw
92BNYG2gxrUWViOpldRs1s5qTLWmmsJa1j2jX3F+lb1kjjHXqNnU8kuaB0t6
EvYm3I/Wpj3b/aeGaEpyltrCHD9JSY4y9+shbNXuX3sHegDrlPRE9AbUeGo9
NZFepxpJraQG1DtTU6mt1Fzfte+zRfv79QrUYGoxc4xepJpObaeHYe9FDbRB
iUepNrLmXb/EI7IWVhOtV+JBqZXMofOV1EjmVnsiL5f0OOyV2BN6qcSDtlek
ZlQ7qin1ytQIC5TUVGoHPTe9VD1cvTg9GL0YPUG9NnsiG5Z4xPZK1Kxbtufb
+VaDqkXVqHplalC1qBpVr0vPZN0Sj+6tdr+u0a63+13PZK12/fRSrHGWK/Fc
rH2scZYp8XCsffR0XO912/1uTbh8iYa0VtTTWKXEI9Tr0BNZocRT0CvRA1m5
xHPUG7En90pJz8lenZ7QIiWeiV6RGnKhkppQbWmNuGR7Xj1/apIFSzwYtYoe
09olPSi9Jz2EhUs8Hb0Fa9Cl2vP6ZHuel2jPp+fLmn7pEk/JWl/PYdESz0Yv
wpp42RLPylp56wmT//u1+cjzNq6Np8YXe5Svl/Tk7F2q4eZsz7PxSU04d0mN
rFZUs81T4jGo5dTM85bUnGppNd9cbfxRC9rTe7ekZ2ivT007Q4kGV+saD+do
45fxTw08XYmmUxurcacq0cBqX+Oz8VKP4qauaP6JSjSstYAe0RQlmlLvSE0+
WYnGV6tbA8xU4uFYG1gj1G08tnawRh6/jcfGfzX6NCUaWu1uPDQ+29O9pI7H
8H4br42P1gSzlHiI1grWELOVeETWFvZs32vjnb1ce6xj23xn/LMn+3xJz8he
rT0SeyX2ZOx92sOwl2EPxd6lPd+3S3pY9oLtUb9R0vO0d23P+LWSnqi9ZHuo
b5X0hO2t2mN+s6RHa+/ZHvarJT1qe9v2ZOzN2EOxd2XP94WSHpm9YHtG9o7s
+djbtUaZv8STsHaxh/tOSc/Z3q49JXtL9qDshdsTfqakZ2iv2B7ccyU9Qntz
9qyfLemB2su2Z2Xvyp6VvV57TPaa7EEe1+ov9a16VP2nB7FGGw+Mt+Z8tcLJ
VbRA/zp71T3/X/3S5Cw4h87lA03mxjlz7oY2mVvnzLm7oc7ZcM+792+qcxY8
I56Vu5r8FtfUtfUMqgVOqXI2hzVZC9fQtXywyVo6Z87dkCaxxzVxbe5tsjau
qWurh9qtzcfqx/uarLVn2rNtT+74Eo/TXt3wJmvhmfRsjmhyNt2T7s27m+w9
19i1fqBOrDQmGhuH1omNK5X4z3r69rbs8ej16/nbu7LHZS9gZJ3Ybs40d9rD
sPdlz8vexsN1cpk5zFxmT8DegHrcXrA9HuuT3p3UL+pl9Yf1kvr5oTq5zxxi
LhleJ7aaM8wdw+A1Oon5xv776/TzreGs5UbVya3mVHPrg3VyjTnEXPJondxn
jjPXPVIn15mTzc0j6mgBY7qxfWCTs+GZ9mzf0yT3mkPMJYPgDzrJweZiPQK9
Aj0Cvbh+dWKNMc/Yp6ett929Ey/9yjqxTI2iVhlcRc+r/9XL9lDsJdqjtbdy
eZ3YqMZR61jzW/uf1klvrk+dWGmMNFbqieqN6rnqlfv8se15Vy/aczqpxGOw
F6XHqdepp6qXbr1p/Wi9aH3Zt07sNiYbm/XE9cb1/PXmrZmtnXt10vvR47WX
0KMT7/eyOtrMGG2svqKONjPmG/uvrRNrjenGdjW5/eOzq2h1e9QnlNTo9q6t
Gewn965SS4xsEouN4cbywU20kZpJ7aRnrHesx2tv4Lo6sdwYb6y/Hp6jkxhv
rL+6Tm4zh5nL9Hz0fuyR2Nuwx2HvRP1p7+PSOrnHnGPu0UPWS9aTtZdxVZ1c
aA4yF91Xx3tQs6hdrFnsH55VpZa5pk5uM8eaa++to23UQGohe3r29uxh+W2D
PW6/NbFnYu/75Ca1jjWNtY09d3vv9nT9tsAeqL1de4j2Rk9qUltZI1krndhk
71lzWXud1aQ2tCa0NjyzSe1mDWkt2atJLWkNaS15dpPa0ZpQPX9Gk1rLms/1
OqdJ/LamsrayZ2nv0jnYuk5P096mHo/fnvRuUltaI1ornt6k1rOGc38MqaMN
1ZRqy9MY799JTeh82kO3l24P3m9d7Hnb+7ZH7rcs9mzt3brntq0TE42Nxhh7
dUc12dueGc/OEU1isXvSvXl4k7k3Rhur/SbBbxNGd/JtiD1We632rP0Wxm8c
/NbhsU6+RfEbCL+FeKKTb4Ps2du7t/7325Njmng7xlBjqd8A+C2APXy/LfKb
Ar8tGNPJtztHNznbJ5f0V+0p21t+tJNva/wGwm8h/MbAb5lOaVL7WlObT+2p
++2GZ8xeu3Piu15ZZa5urlObqBnVjrfWqTXUDGoHPUt7l/ohepkD6mhbNbfa
+9Qmtbua1vx5T51aQM2r9r3LnN+JJlYbD66jha0RrBXsoeq36L/od+l/6cfo
p+h32cPWD9Lf0T+5o442V+Or9W+po22ssay19Fv0g/SH9FPurFMbqOnV9rfV
0f7WVNZWt9epFawJrA0G1ald1PRqe+fcuXfN7HUPrKP1rQmsDe5sopXURGoj
e/r29u2p++3QgCZaSQ2llrqjiTZSY6m19GQ8G+dVOY+eGdf2iipnSU9Ub9Sa
2m+n9Hg8++dUOa96PJ79c6uc1xvr1ALWCNYKd9epXayBrIX+D5ZfgSc=
               "]], 
              Polygon3DBox[CompressedData["
1:eJwl1nW4FGUfBuD9aAEBaRQppUvpBukSkG6QbpBukG5QWuk8xKG7u7tTpRsE
BCT97tE/nnOd575+7+w7s7Ozm7JR+8rtIoRCoVMSWaZGC4UWRgyF9sHTetMo
oVBv1ov9wuaxXOyWNGfdWD+WUv/V3CJ2gJ1lzdlNaca6sr4shT7TXDg7wi6y
1mwKW8D2RvhvL43ZDWnKurA+LLk+2txkto7tYlXYDLaUHWYXWCs2iy1jR9kl
1obNZsvZMXaZtWXT2GJ2kJ1jLdhkNp/tYSdZEzaKTWJr2U5WlU1nS9ghdp61
ZLelBevO+rNU+nVpwjqz3iyZ/ou1YWw/O8OasccykI1n01lhfYC5oWwBW8mK
s/rsK1aRVWW3vXF1WGZWnn3HbrJ6LCurwKqwW6wRK8zqsybsJavLsrBvWWV2
gzVgBVgd9j37izVkBVld1og9Z9+zQqwea8xesFosOSvEirLTrDZLwQqzYuws
q8mSsYLsG3aGVWexWRb2NdvDarA4LCvLxnazt67DLnaK/cEG6OPM/cI2sr2s
BqvGQiw5S+nfNdbOYSvYcXaFtQuuOxvGFrJVrBjrx/qy6Wwhy8v6sj5sGlvA
8rA+rDf7lc1nuVl/1o/NYGEsHxvBxrJlbCMrx35k/dlMtojlZyPZOLacbWLl
2SA2nIWx1awEa8yKsAasKXvl3IayUWwJW8dKmxvCRrLFbC0rxQazEWwRW8NK
smFsNFvK1rMybDgbw8LZBlaWjWVT2Qa2h1UP7nlWkQUPky4sKvuJ/co2sX2s
JlvCtrDL7B7rxRaxTewiu8N6sDC2kV1gt1l3tpBtYOfZLdaNLWab2SV2l/Vk
C9h6do7dZF3ZCrabXWdP2SC2iu1lN9lzNphtYkfZQ/aWjWbr2EF2l71iw9kG
dpjdZ6/ZSLaUbWVX2H3Wm61ke9gN9owNZFvYcfaYvWdj2WZ2jD1i79gYtpEd
YQ/YGzaKhbNt7Cp7wPqw5WwH+509Yv3YMrad/cYesr5sn2RnxVhpdt/9spWl
ZjlZXnaZXWRVWGPWisXUj0o+VpZVZE/NXWJVWRPWmn2sH5P8rByrxJ6Zu8Aq
s0asJYuhr7a/fewW+4sNYTslPcvLCrLfrd3O0rLcLD+7yhawqCwOS8I2szD2
EYvPPmNb2Q6WjuVhBdhvbA/LxAqwIuw628uysaKsFLvHdrEMLB8rxP5gu1lG
lp8VZtfYEZaXlWEV2J9sjXPbz26zF2yomfXsELvH/mYj2HEpyiqzmuyNtRPZ
X3rUCP99Hy/0ZzJ7qccInC1iU9gr/WMJHnGL2VT2tx5bPmJL2Es2x2usYttY
w2BG5rE1bAdrpD+X8WwuW8Yq6c/kZzaHhbOK+pPgWcQmsBmsiP5n8DxhE9lM
9o0+SV4E+xD/hsLs5VHwfWbuZzaNFdKfBs8nNonNYkWD85cJbB5bzr4LjiUT
2Xy2glXWtzrxE+wJ+8DGBb9B5I0eL7heLNzrjg/ORY8Y4d+vgtB8NoO9D+4f
icVWsJnsQ3D/BNeQrWTT2Ts9UXCt2XI2i/2jfy5x2Co2317WOfhZdoN1CZ5X
Eo3FZZ+yLebmmlvDTrNrrLOZtewAu8NesmHBeyYRWTSWgK23dh6LzGIG+2Eb
2Ss2l61m29n3wW8Lea1/ItHZ0mB/LIq5WCwx28SmsbfB8SUmW8ZmswjmorD4
bF2wZxaJRWcJ2YZgL/a8lp1h11knM2PYFLae7WbV2H7JwYqzMuyBtQdYTlaC
lWUPWVtr67HebBBLaKYNq8t6sYEsQfA7ipVjrdgPLBJrysqz1qxj8HXPmrMK
rC3rzKKwdqw+68MGs0SsO+vAxrIpLAPrxtqzMWwyS8+6snZsNJvE0rGOrBUb
zn5mX7BOrDUbwcaz1OxOMMsGsJEss97ZXBs2kk1gadhZKc1qsvqh0L8fnC7m
2rJRbCJKy85LWVabNWQR9HvBMdkgNppl1R8G58KGsnEsm97M8b5lbVgnFjn4
XLGZbBs7xOoGn182i21nh1m94PnAprMt7ACrzf6QRqwj68mSBs8Mc9PYZraf
1WLXpDHrxHqxz4PPuLkZbCs7yOqwc1KG1WIN2P/0XuZ6sqlsLsvJerDubDKb
zXKw1qwO68kGsHjsQfDesSFsLPta72muB5vC5rDs7H5wrdlgNoZ9pbcyV5v1
YD+y+Kwlq8Tas64sGrsbvO9sIBvFsuiHJQ8rzb5lT9zjHaxtyPqxoSyJmTNS
itVg9dg/5laxhCwNS88Os3AWiyVjKdgutpjFYImDZxHbzpawmOxTloztYEvZ
xywpS852squsBmvO2rE4+mWpxpqyNiyWvkLisy9ZWnbQ2uUsHvuCpWEH2EGW
i5Vk5dgjdojlZqVYefaYrWQJWGqWjh1i21galovlY1fYIhadJWRJ2Ta2jMVl
qVhqtp9tYV+yHCwPu8RWs0QsLcvAjrDN7AuWneVmF9nvrBZryTqwuPopKcGq
sTrsvbmTrDirymqzd+w1W8V2sePsh+B7R1az3ewE66ifkGKsCqvF3lp7mpVk
1Vld9oH94N5oyYaxn9iXZtqzBqwvG8ISs/XyGcvIsrAT1q5lSVh6lokdY7+x
mqwFa88+0TdJKpaN5WIXzK1jn7IMLDM7zq6w6qwZa8ti62skMUvHMrKj5jaw
pCwTy8pOso3sc5aZfcVOsQnsefB7RiKxBez/f5QrjA==
               "]]}], Lighting -> {{"Ambient", 
               RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
              "Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{2, 0, 2}]}}]}, {
           RGBColor[0.368417, 0.506779, 0.709798], 
           EdgeForm[None], 
           Specularity[
            GrayLevel[1], 3], 
           StyleBox[
            GraphicsGroup3DBox[{
              Polygon3DBox[CompressedData["
1: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
NiSc86k/1iNc7+k8q2e4vtL51OHh3pP6pf8L58TqB+6bS30V7bnZdbrm2I7Z
tb/ykNrZvSzN+e2ye0qak1Wyew5aX1sru+bV3lHIrqm1p5Rl18vKkbZUdr2s
PXG/XOrP6N5l1+laC9tm9680/2tk1/uq6Wtm96m0jtrlUn9GsSK7L6HcaZvs
PpjWb1Ue9cu8RuqF82n1J2tl9+603jdU+BxI53HjwucuOosZFa6p1B/uGq7l
dDbXMVxjq5fbKVyX6lxv/3D9rDOOzuGaUOd6HcK1us4BDwjX1eoJtw/X5+oV
twjXMzp3aBmui3R2sHe4ttHZxH7h+l/nLK3CNYDOFCZkn3lpPz0Mn1TmNX5I
di9R67pduKegs5h9w/0CndG0Ddfh6p3uE+41qOfcOlxXqGfbJlxXqBbYK1xf
6eyjcbh/p7ObRuH+nc5KRoTrf/W3DwnX/OqNHxquXdUz7xKuh3V2OTzcX1B/
fli4jlIf+OBwf0F9+MPCdZT6+SPDPQj1ww8M19s6n20e7qfofKdZuM+iM6b6
4VpUPfAG4dpS5wgNw3WpzhqahHs0OntqGu5v6lxpt3AfU2dPu4d7NDoD2jNc
i+rcZ49wjaqzpIrsnpX2l0rZ/SXtR9pXlZ8XFe/C56A6Z6+T3XNTLfBfhXsK
OrfdNlzz6wy9VvgMVWfo1cNnsTp/rx0+p9T5+KYK90R0Llye3bPSnrixwj0L
nf/WDJ/L6vy9mN3L0t5XObt/qH1tu3A/QufCObs3qD00ZffEtA/+HxnA8oc=

               "]], 
              Polygon3DBox[CompressedData["
1:eJwtmnW8XNUVhd9kzss9EyAhJAQIEOJYgODuEtzdCe7uGhxKcXe3UqxClRaX
UlxKcXd3SKDf1zX/lH6/c2fyZu7de6+19oyYuPf6e/Xp6ek5l/8p/HdI09Mz
c6un5yXgkH49Pe1OT8/98CnwMnA/+F/wmfDKcIUfgU+HV4QH8foZ4f/AB8J/
g5+GD+rt6VkSvhN+CN4DXhj+B/wsfAi8NNzh/R6Fz+D1K8HrcL4DPIDzXngq
zh+Dz+J8Ffg/lfeGl4MHwetx/U7wQK5v4LuaXL8vvAT8PjwFvgLeBn4T/g6+
CN4MfhJ+Bz4ZXh1+Df4aPh/eGH4L/h6+GN4cfhv+Ab4E3gL+AP4ZvhLeFn4X
/gm+DN4K7tvJ5z+Nv3d5uBd+EP4VvBz8Otd/A1/A9ZvAb8DfwhfCm8LvwZPh
y+Gt4YbXPwz/mtevAP+xyf3Zh/PF4cL5A/CpnC8LP875W/CJnK8K/67J6/eE
F4F7uP4ez0vu1x+a3I+9OV8MbnF+L3wS50vBH3L+C3wV59vBU7gff4aPLrn+
R/iP8BEl93sA1w+Gn4X3hX/m/C/wMSV/b3/OB8HPwPvAC8NLwN/Dp8MzwrPC
r8CHwRfCl8Eb8e/fDV8EXw5vDP8Dnty3p6cPfB/XT4SHcj4b/Bp8BHwxfAW8
Cdf/E14UXgr+kfMz4d83eb734nxReBF4SfgHzs+A14QnwtNw3oYfgl/28/Sm
Pvrwfd3n81TyfD/G+ZvwCZxPgP8JPwcf2pv6uht+Bj64N9/vZL6fP8FHlfz7
P8F3wUeW3K+BXD8Efh7eH14X3hGeltf3haeFp4ef43w/eG14e7g/5wW+B34e
Pqw3z8eD8Evev97U38PwK/Ck3tRbG67wI7zfLvA78I/wpZxvCT8Fv2u/gNeA
X4W/gs+DN4Kva3K/t4Xnha9t8rxsA88Db9eknofDU8PXNPn8W8Pj4InwwfAI
eBr4eviv8HbwfPA28AHwMLgffA58I7wOPAo+C74eXgseAR8Bnw0vAU8PHwOf
By8NzwgfDZ8LLwXPAB8FnwMvCQ+xX8H94Sf4PvaCz4ZvgNfmfCR8a5P7vws8
P3xLk/rZGR4PbwnvB88CV3hv+Hh4Hnha+Ar49/Dm8BzwHvCx8Nxwf/hy+Hfw
ZvDs9gN4avjf/D17wPvAJ8Dzcj4Q3hc+EZ4Png7eCz4OHgcPgM+Fb4LXhUf7
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
xzNb0+Pp9fRk7ob0ZHozNZdZt5rxnXYyP7WkGdNn7ewYzJ7MhD9pR9OZFZuB
fdTODsNszEz0rXYyO7NSM7UX29mRmLWZsb/Rzk7N7N0M7qV2Mn2zOTPRF7rf
j1mpGe1r7WRmZrdmwB+0k7GZDbsDea77/fr8/D+TL/EMZvVqbLW2GtHsUc2n
9nu1+zyqCd9rZ0eoVtRj6DX0IO7K3AHd0a0H60lPojfR47zefX69vwPhKX1T
f9bP5/BHTTLkV9rZabS69eO//1q3vsyErur+PdaTO4mzuv3FejMDMgsyszGr
dQdzZrffuJvR07irdKel11Ezq531QGaxZlRmVXoQs1gzKrMqPZNZrpmW2ZaZ
k1mzmZHZkZ7JLNhMdlK339zV7XfHdvuF/c+dmrs1dwDuRt35uFs1k3YX5M7F
3ac7PHcxZk5XdvuJWbc7Gnd5ZtrubvRs7g7dKerl9HTuFt3p6fXcIbmrcwfh
bskdlLsoM2h3r3osd4fuuPReZlq1ZOdm1mVm0bckUzDLMEMzSzNDM8vW401V
4nH0fgvUzD5ntrN70ZrZo2ZRuywGH9PKTHI2zVXj9xcq8VuL1GgbZ5qzbaGa
2efMd/YvWDP7nbHO2rlrtMvCJXnFwjWz0Jnp7FwWPrOVmehsnL9GS6iR1Erz
1GgTNYxa5scms8cZpLb4qUmeqqZQW/wAD2+lxq31eWu0nBpHrTNDjV8eUpK3
jIf3aWXGO+tnqslXZyzZH46r0U5qMLXYfDVaQI2oVnwYXq+VHmuvnbMm/1iw
JH8dWpM/zlSyrxxdkx/MUZLfzg5vC89dkq+NqskTZi/JN+eo6c32aPPglWq0
oRpNrTa2Jt+YqySPG1OTt8xZknc+WjNr7OH28uVrtKEaUC24Wo0WViOrlVeH
b29FI6uVx3YyG+0Z9o4RNfnTmJI8ebaavHlUiV8fVtPL7en61Zlr8sKhJf56
lpo8ceaSvGxWeF14lpJ8eUwnXkUPo5cZWePvx5bkG8Nr/P/okrxgcpM87+t2
9qeP1cxOZ46z5+cm+d637ewnemry4e/b2b/0r9HOamq19Qo1WlcNrZY2k2xK
MjqzyqZm1jvz3Rf0hcfb29vZVw+oqTU1udp8mhqtbs1au4Nr8o1BJfleqcnD
JrezL5++Jg8ZXJIfdmryxFKSV05V87dY89b+ujVaTo2n1lunRpuoUdR2G9b0
bnu4Wmjqmt7hZ/KzrQc/2YomVBuqofX+m/ZGW2/A+evwNSX7l341vaa3ZJ9R
a/LKdsk+Y0jNvmH6knxzUI1WUbOYX05bk5fak+xNnzaZlc5UZ+snTWarM9PZ
+XGT2elMdDZ+1mT2OGOdtd82mdXOUGdpn5r9zo/t/D7m+yaz3hnvrP+lSd78
XTu/f5nSZD/zTTv7+e+aaAE1gFrg8yaz2pnn7PuyiRZw5jv7e2vyyint5EHT
wcvB05TklwNr9idTl+Sd7Zr87ad29mkz1uwzZij5/cQXTbSEGkGt8E0TbeBM
d7Z/3WS2q2nUNl810TZqFLVKqyb/+6Gd/aZ6cURXT6oHvYfXdOe1uzVrdlRX
f5m9PV2j3dSkalP1vnpdPa++f7bGC5ghmCU8V5MlmIGYhTxeo+3UbGo3n2mf
bT+zvw1Zs0Zbq9HV6k/VaE01o9rRe+a98zP4W6cna7SgmlRtao1Za37n/lbE
79Dv0nvurtKeM7KrN9XHa9TMdme8XsOeb+/3GTV7955576xBsz1rztqzRs3y
l6zxgnoyvdna8D9b8QR6g+drsh8zH7OfZ+B9W/FMeqcnarSrmlZta81b+9aE
Wb/3yHtlT3I3vVSNd9SD6kWtMWvNHuAu0R5gL7Dm3GVYc9aePcnd4tI1XlYP
qhe15qw9/cD4rl/RH+gX9F8+kz6b1qTZvM+sz67PrFn84jXeU0+uN7fn2fv0
b/o/e6i91Jpyt/1vrt+uFY2v1l+mxuvqsfXa9mh7tTPb375Yc9aePdzfytxd
oz3VoHqNe+D5W/Esehdr1tq1p/tbNnu6vd0adhe9RI131jPrnR+s8U56JL3S
QzWf3e9Ar7RWjbfT8+n9lqvJRsxkzGac0c5qZ/KErl+xNqwR/cyqNdmSGZFZ
kTPaWa2f089Y09a2msPfSjnTne3ONHeZagy1hj3A3y79P8MvmbFm+2oCtYEz
3l2cM9PZ6Ux197Qy//6VrWRGZkdqDrWHmsFdsDPaWe3MdBe8Yk22Y6ZjtqMm
UZuoefxtlTPaWa1mMRufUJN9mXGZdakB1YJqHLP4/2u6Eo3obuqRGq+px9Xr
3g8v34oH1gurUdQqahR3iQ/UeGM9rl53lZoszYzNrM0Z4ixxJro7UyOoFdQQ
7qbVOGodNZW73n/VeFU9tF5ajaBWUKO4a/gfPFDwbQ==
               "]], 
              Polygon3DBox[CompressedData["
1:eJwl1mWYVVUbBuCDDMMMjeQwQzN0d3e30g1KtxLSIam0pEqKASqh2AEI2Eko
XdIlIt3fva7vx/vjua93n7X3PmuvtXI/M+TpwU9EIpE9KlmomEjkWFQkciVp
JJIzSSSSLXkkkoQdYmdYPMvMUrHz7A4rzBJZSnaO3WaFWD72iA31w/P4T+xj
loKdlW/pK8jysqSxkchofcv4PraNRek7Kl/Sl4PFhT52hF1g2VlWlppdYHdZ
EZafRbPj7CrLxeJZMmOMNcZr/C/2DYvRd1q+oS8/y83SskvsPivGCrI07CK7
x4qyAiwdu8wesOKsEGvNFhpjLT/BDrMKrBCrxIaw/iw5OyVfd20iy8Vi2Rl2
kxVgeVh6doU9ZCVYYfYk+4c9YiVZkfC8nm2cMV7n+9mOMAYbz5azA2wne4KN
YkvZXrY1/L/sBbaE7WFfsQgbyRaz3ezr8H+wMexV9ifbzjK6lxtylKrASrPH
7Dl989nP7JMwLjssn3PPCSwLK88K6qvIB7N+7Ib6WT6tLyWLlkvpy6uvDO/H
erIE9kBOpWqwyiw7eyinVjVZFVaa5XNtWdaf9WLZ2D05harGKrIyLFFfOTaA
9WaZ2S05WlViZVlBlkFfXtaetWIlWTwrwrqzTqwsy8/Ks4GsDyvHCrAKbBDr
ywqxjCwf68Baszh2V45VVVkFloXdlpOryqwcy8diXRvHmrGGLDeLZplZY1aP
5WRRLCNryOqwAiwVS2AtWROWld2RY1QVVp4lshT6srHmrBHLy2JYVtaUNWDx
7L6cUlVnlVh+llJfPGvBGrM8LDnLwpqw+iwHS8oysAasdph/7KB8yjzIxjKx
wiyTvkTekbVhJVg2Vph1Yx3ZdfWT/LdrU7Bk8k31CzvLUrHkYZ6qA+wki2MZ
5ctqZ1iDWFL2KNp7Z7+xiywNi5WvqF1hHWFR7LG+q+w7dohFsyTyv+p7doQl
Z0/I19QP7BiLYUnl/9SPYc1gsSxK/kd9G75dloxF5KKeN4vnLcA7s3bsgfpT
PqwvM0sf1l21nx1nWVkGuYhrM7s2P+/E2rJiLCsryLqw9qw4i2OFWFfWgWVi
N+VkqiIrwx6qv+SjxsjCnpRvqV/ZeZaaxch31R/sH5aOpZTvq33sIMvE0sn3
1N6wfrGMLK18R/3OLrO0LIWcwb1cZ0lVeVYqrOPWpgnueUX4TbaLtdQ3nE1l
29gXYVw2iM1m37MP2UFWirVkM9jz4X2yYqwpm8IGh/tlRVkT9iIbGOYUS89K
sl6sZVi/WDpWgvVkLcJ8ZGlZcfYsax6elRVhjdlkNii8J5aTVWfDWbfwjllx
1oxNZUPCO2E5WDU2jHUN84elYcXYM6xpmGcsNSvKerBmYS6z7Kwqe551Dt8B
K8lasOnsOdaQtWG92Er2KmvOerORbDN7jzVjvdgItom9y5qynmw428jWh7nM
Hss51NOsavg2WBJ9uVhrViN8QzH/P4zkZK1Y9fCtsUdydvUUq8Yas3b6+rDV
7PUw51kJ1pxNY0NZI9aW9War2GusPmvFnmXL2VLWgLVmPdkKtizMZZbAqrDn
WBe2m+ViNdgI1p3tYblZTTaS9WAnWE3WjS1lL7KTrBbrzpaxKew0a8L6s7Vs
LjvOarCubAmbzI6x6qwLW8wmsaOsGuvMFrGJ7BRrzPqxN9jssKaxa3I6VYcV
Z2dYU30D2JtsHtvB/pXTqtqsKPubNdLXl61hc9g37KqcRtVixdhZ1kzfQPYW
m8/OseZsEHubLWCXWHv2AvuArWCHWGXWgS1g49lhVoV1ZK+wcWw7OylHVGmW
ENZY1kXfOPYJW8O2sRPyY+tGKZadNWHP6hvGN7B17AiryjqxhWwCO89asMHs
HfZK2BdYBzaKfciWs4vsKTaUrWeLwr7AOrLRbAtbyS6wlmwIW8cWhrWddWJj
2EdsFavMyrK6bCwbyaqwcqweG8deYFVZeVafjWej2JPWv1nsXXaO7QnrJJvN
3gvrMdsbzhFsPtsU1lS2n6VnL7P1YX9ku1kqNo29GfZH9itLzaazt8Leyn5h
adgM9nbYq9lvLBtbzD5i/7Ej4WzBFrDN7Ao7wOLYIraFXWNHWVo2k73DTrPf
WTr2ElvHzrA/WGY2j21kl9hfLCObw95nF9i+sG+xuWxD2L/Zn2Gf8f4Gslns
O/ZB2KPYAPYy+5ZtDmcG1odNZ9+wDeFswbqziexz9ia7wXqwSewL9hbLZ9xV
bCt7wM6FvUxff/YS28U2hf2S9WUz2A72Pkvp2slsdTg3sO/ZbX392Ey2k21k
KfRNYqvC3s++C2cBfYPZHPYD28Ji9U1kK8PZhH0b9m59Q9hc9iP7iCXqW822
sYfsPMvLVrKv2X12ltVybV3Wms1mM1hNVoe1YrPYdLaV7Zb/9Q3mZqlZPdZQ
X3s+n81idVkD1o7NYy+zOqw+a8vmspdYbVaPtWFz2ExWjVVgDdgENpq1YMPY
FLaVfc6qs4qsIZvIxrAarBJrxCaxsawSK8PqsDFsBHuKjWDT2Hb2JXuaTWEL
2e/sJ9aKTWWL2B/sZ5bg/S1ln7Ab7DjLzpaxT9lNdoLFsyXsY3adHWN52Ar2
FbvHzrBc7HX2BbvDTrH8bA3bzh6xCywHe5V9xm6xkyw3W86+ZHfZaXbVPXdm
Y9nHbDXLqe819jm7zf5m1/R1ZePZp+wN9h/rxiawz9haVpEVZpXZUDYg3DNL
xjKxRqwu+x/PNwbP
               "]]}], Lighting -> {{"Ambient", 
               RGBColor[
               0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
              "Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {{
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwt0UkuBEAUgOHSrbU2tTZERCSIAyAOgDgAHQegY22KjR3iADgBiQMgDoA4
AOIA5nmeZ74Wi5evVvXnVdVnBtMDOSGEMZMTMVyIhZDiCuu5wWbusJ2H7OYj
+5ibF8IwKzjBRs6wlfPs5BJ7uMZ+bnGUe5ziHff173nAh2yHjzziE4/5zBO+
8JSvPOMbz/nOC37wkp+84hev+c0b/vA2Ev4WntW/dZzkLke4yQxXmeYiOzjH
Fk6zgeMs4xAj7OW9d+nK7sM2brOJ66zjMktZq59kDUtYzWJWsYiVLGQ5C5hi
gknms5hxFlI6JOjqEGcuY4wyysj///4Coco85g==
            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0TkoB3AYBuDf330fsxSzFLMUsxRWKaxyjZJilmKWYpYi980shSS5QpKQ
3Pf1yPD19C7fW9+XW99c1RQJIbSZregQIsJXXAiZTI0PIZfZLGQ+S1nMSpaz
jjVsZSO72ME+9nCIAxzjCFe5yE2u84SHvON4TAj3nOADJ/nIKT5xms+c4Qtn
+co5vnGe71zgx18PP7nELy7zmyv84SpDVAhX+m/lfR5zjRt/+7jCYY6yn4Ps
Zi/b2ckGtrCatSxjBYtYwjwWMIs5TGYGb9w7nddM4yVTecEUnjOZZ0ziKRN5
zAQeMZ4HjOMeY7nLGO4wmtuMivz/9xcKgUg1
            "]]}, {
           GrayLevel[0.2], 
           
           Line3DBox[{1444, 753, 1443, 2448, 1683, 1445, 2449, 1684, 1446, 
            2450, 1685, 1447, 2451, 1686, 1448, 2452, 1687, 1449, 2453, 1688, 
            1450, 2454, 1689, 1451, 2455, 1690, 1452, 2456, 1691, 1453, 2457, 
            1692, 1454, 2458, 1693, 1455, 2459, 1694, 1456, 2460, 1695, 1457, 
            2461, 1696, 1458}], 
           
           Line3DBox[{1460, 2133, 2343, 1459, 769, 1461, 2462, 1697, 1462, 
            2463, 1698, 1463, 2464, 1699, 1464, 2465, 1700, 1465, 2466, 1701, 
            1466, 2467, 1702, 1467, 2468, 1703, 1468, 2469, 1704, 1469, 2470, 
            1705, 1470, 2471, 1706, 1471, 2472, 1707, 1472, 2473, 1708, 1473, 
            2474, 1709, 1474}], 
           
           Line3DBox[{1476, 2134, 2344, 1475, 2135, 2345, 1477, 785, 1478, 
            2475, 1710, 1479, 2476, 1711, 1480, 2477, 1712, 1481, 2478, 1713, 
            1482, 2479, 1714, 1483, 2480, 1715, 1484, 2481, 1716, 1485, 2482, 
            1717, 1486, 2483, 1718, 1487, 2484, 1719, 1488, 2485, 1720, 1489, 
            2486, 1721, 1490}], 
           
           Line3DBox[{1492, 2136, 2346, 1491, 2137, 2347, 1493, 2138, 2348, 
            1494, 801, 1495, 2487, 1722, 1496, 2488, 1723, 1497, 2489, 1724, 
            1498, 2490, 1725, 1499, 2491, 1726, 1500, 2492, 1727, 1501, 2493, 
            1728, 1502, 2494, 1729, 1503, 2495, 1730, 1504, 2496, 1731, 1505, 
            2497, 1732, 1506}], 
           
           Line3DBox[{1508, 2139, 2349, 1507, 2140, 2350, 1509, 2141, 2351, 
            1510, 2142, 2352, 1511, 817, 1512, 2498, 1733, 1513, 2499, 1734, 
            1514, 2500, 1735, 1515, 2501, 1736, 1516, 2502, 1737, 1517, 2503, 
            1738, 1518, 2504, 1739, 1519, 2505, 1740, 1520, 2506, 1741, 1521, 
            2507, 1742, 1522}], 
           
           Line3DBox[{1524, 2143, 2353, 1523, 2144, 2354, 1525, 2145, 2355, 
            1526, 2146, 2356, 1527, 2147, 2357, 1528, 833, 1529, 2508, 1743, 
            1530, 2509, 1744, 1531, 2510, 1745, 1532, 2511, 1746, 1533, 2512, 
            1747, 1534, 2513, 1748, 1535, 2514, 1749, 1536, 2515, 1750, 1537, 
            2516, 1751, 1538}], 
           
           Line3DBox[{1540, 2148, 2358, 1539, 2149, 2359, 1541, 2150, 2360, 
            1542, 2151, 2361, 1543, 2152, 2362, 1544, 2153, 2363, 1545, 849, 
            1546, 2517, 1752, 1547, 2518, 1753, 1548, 2519, 1754, 1549, 2520, 
            1755, 1550, 2521, 1756, 1551, 2522, 1757, 1552, 2523, 1758, 1553, 
            2524, 1759, 1554}], 
           
           Line3DBox[{1556, 2154, 2364, 1555, 2155, 2365, 1557, 2156, 2366, 
            1558, 2157, 2367, 1559, 2158, 2368, 1560, 2159, 2369, 1561, 2160, 
            2370, 1562, 865, 1563, 2525, 1760, 1564, 2526, 1761, 1565, 2527, 
            1762, 1566, 2528, 1763, 1567, 2529, 1764, 1568, 2530, 1765, 1569, 
            2531, 1766, 1570}], 
           
           Line3DBox[{1572, 2161, 2371, 1571, 2162, 2372, 1573, 2163, 2373, 
            1574, 2164, 2374, 1575, 2165, 2375, 1576, 2166, 2376, 1577, 2167, 
            2377, 1578, 2168, 2378, 1579, 881, 1580, 2532, 1767, 1581, 2533, 
            1768, 1582, 2534, 1769, 1583, 2535, 1770, 1584, 2536, 1771, 1585, 
            2537, 1772, 1586}], 
           
           Line3DBox[{1588, 2169, 2379, 1587, 2170, 2380, 1589, 2171, 2381, 
            1590, 2172, 2382, 1591, 2173, 2383, 1592, 2174, 2384, 1593, 2175, 
            2385, 1594, 2176, 2386, 1595, 2177, 2387, 1596, 897, 1597, 2538, 
            1773, 1598, 2539, 1774, 1599, 2540, 1775, 1600, 2541, 1776, 1601, 
            2542, 1777, 1602}], 
           
           Line3DBox[{1604, 2178, 2388, 1603, 2179, 2389, 1605, 2180, 2390, 
            1606, 2181, 2391, 1607, 2182, 2392, 1608, 2183, 2393, 1609, 2184, 
            2394, 1610, 2185, 2395, 1611, 2186, 2396, 1612, 2187, 2397, 1613, 
            913, 1614, 2543, 1778, 1615, 2544, 1779, 1616, 2545, 1780, 1617, 
            2546, 1781, 1618}], 
           
           Line3DBox[{1620, 2188, 2398, 1619, 2189, 2399, 1621, 2190, 2400, 
            1622, 2191, 2401, 1623, 2192, 2402, 1624, 2193, 2403, 1625, 2194, 
            2404, 1626, 2195, 2405, 1627, 2196, 2406, 1628, 2197, 2407, 1629, 
            2198, 2408, 1630, 929, 1631, 2547, 1782, 1632, 2548, 1783, 1633, 
            2549, 1784, 1634}], 
           
           Line3DBox[{1636, 2199, 2409, 1635, 2200, 2410, 1637, 2201, 2411, 
            1638, 2202, 2412, 1639, 2203, 2413, 1640, 2204, 2414, 1641, 2205, 
            2415, 1642, 2206, 2416, 1643, 2207, 2417, 1644, 2208, 2418, 1645, 
            2209, 2419, 1646, 2210, 2420, 1647, 945, 1648, 2550, 1785, 1649, 
            2551, 1786, 1650}], 
           
           Line3DBox[{1652, 2211, 2421, 1651, 2212, 2422, 1653, 2213, 2423, 
            1654, 2214, 2424, 1655, 2215, 2425, 1656, 2216, 2426, 1657, 2217, 
            2427, 1658, 2218, 2428, 1659, 2219, 2429, 1660, 2220, 2430, 1661, 
            2221, 2431, 1662, 2222, 2432, 1663, 2223, 2433, 1664, 961, 1665, 
            2552, 1787, 1666}], 
           
           Line3DBox[{1668, 2224, 2434, 1667, 2225, 2435, 1669, 2226, 2436, 
            1670, 2227, 2437, 1671, 2228, 2438, 1672, 2229, 2439, 1673, 2230, 
            2440, 1674, 2231, 2441, 1675, 2232, 2442, 1676, 2233, 2443, 1677, 
            2234, 2444, 1678, 2235, 2445, 1679, 2236, 2446, 1680, 2237, 2447, 
            1681, 977, 1682}], 
           
           Line3DBox[{1789, 1218, 1788, 2658, 2028, 1790, 2659, 2029, 1791, 
            2660, 2030, 1792, 2661, 2031, 1793, 2662, 2032, 1794, 2663, 2033, 
            1795, 2664, 2034, 1796, 2665, 2035, 1797, 2666, 2036, 1798, 2667, 
            2037, 1799, 2668, 2038, 1800, 2669, 2039, 1801, 2670, 2040, 1802, 
            2671, 2041, 1803}], 
           
           Line3DBox[{1805, 2238, 2553, 1804, 1234, 1806, 2672, 2042, 1807, 
            2673, 2043, 1808, 2674, 2044, 1809, 2675, 2045, 1810, 2676, 2046, 
            1811, 2677, 2047, 1812, 2678, 2048, 1813, 2679, 2049, 1814, 2680, 
            2050, 1815, 2681, 2051, 1816, 2682, 2052, 1817, 2683, 2053, 1818, 
            2684, 2054, 1819}], 
           
           Line3DBox[{1821, 2239, 2554, 1820, 2240, 2555, 1822, 1250, 1823, 
            2685, 2055, 1824, 2686, 2056, 1825, 2687, 2057, 1826, 2688, 2058, 
            1827, 2689, 2059, 1828, 2690, 2060, 1829, 2691, 2061, 1830, 2692, 
            2062, 1831, 2693, 2063, 1832, 2694, 2064, 1833, 2695, 2065, 1834, 
            2696, 2066, 1835}], 
           
           Line3DBox[{1837, 2241, 2556, 1836, 2242, 2557, 1838, 2243, 2558, 
            1839, 1266, 1840, 2697, 2067, 1841, 2698, 2068, 1842, 2699, 2069, 
            1843, 2700, 2070, 1844, 2701, 2071, 1845, 2702, 2072, 1846, 2703, 
            2073, 1847, 2704, 2074, 1848, 2705, 2075, 1849, 2706, 2076, 1850, 
            2707, 2077, 1851}], 
           
           Line3DBox[{1853, 2244, 2559, 1852, 2245, 2560, 1854, 2246, 2561, 
            1855, 2247, 2562, 1856, 1282, 1857, 2708, 2078, 1858, 2709, 2079, 
            1859, 2710, 2080, 1860, 2711, 2081, 1861, 2712, 2082, 1862, 2713, 
            2083, 1863, 2714, 2084, 1864, 2715, 2085, 1865, 2716, 2086, 1866, 
            2717, 2087, 1867}], 
           
           Line3DBox[{1869, 2248, 2563, 1868, 2249, 2564, 1870, 2250, 2565, 
            1871, 2251, 2566, 1872, 2252, 2567, 1873, 1298, 1874, 2718, 2088, 
            1875, 2719, 2089, 1876, 2720, 2090, 1877, 2721, 2091, 1878, 2722, 
            2092, 1879, 2723, 2093, 1880, 2724, 2094, 1881, 2725, 2095, 1882, 
            2726, 2096, 1883}], 
           
           Line3DBox[{1885, 2253, 2568, 1884, 2254, 2569, 1886, 2255, 2570, 
            1887, 2256, 2571, 1888, 2257, 2572, 1889, 2258, 2573, 1890, 1314, 
            1891, 2727, 2097, 1892, 2728, 2098, 1893, 2729, 2099, 1894, 2730, 
            2100, 1895, 2731, 2101, 1896, 2732, 2102, 1897, 2733, 2103, 1898, 
            2734, 2104, 1899}], 
           
           Line3DBox[{1901, 2259, 2574, 1900, 2260, 2575, 1902, 2261, 2576, 
            1903, 2262, 2577, 1904, 2263, 2578, 1905, 2264, 2579, 1906, 2265, 
            2580, 1907, 1330, 1908, 2735, 2105, 1909, 2736, 2106, 1910, 2737, 
            2107, 1911, 2738, 2108, 1912, 2739, 2109, 1913, 2740, 2110, 1914, 
            2741, 2111, 1915}], 
           
           Line3DBox[{1917, 2266, 2581, 1916, 2267, 2582, 1918, 2268, 2583, 
            1919, 2269, 2584, 1920, 2270, 2585, 1921, 2271, 2586, 1922, 2272, 
            2587, 1923, 2273, 2588, 1924, 1346, 1925, 2742, 2112, 1926, 2743, 
            2113, 1927, 2744, 2114, 1928, 2745, 2115, 1929, 2746, 2116, 1930, 
            2747, 2117, 1931}], 
           
           Line3DBox[{1933, 2274, 2589, 1932, 2275, 2590, 1934, 2276, 2591, 
            1935, 2277, 2592, 1936, 2278, 2593, 1937, 2279, 2594, 1938, 2280, 
            2595, 1939, 2281, 2596, 1940, 2282, 2597, 1941, 1362, 1942, 2748, 
            2118, 1943, 2749, 2119, 1944, 2750, 2120, 1945, 2751, 2121, 1946, 
            2752, 2122, 1947}], 
           
           Line3DBox[{1949, 2283, 2598, 1948, 2284, 2599, 1950, 2285, 2600, 
            1951, 2286, 2601, 1952, 2287, 2602, 1953, 2288, 2603, 1954, 2289, 
            2604, 1955, 2290, 2605, 1956, 2291, 2606, 1957, 2292, 2607, 1958, 
            1378, 1959, 2753, 2123, 1960, 2754, 2124, 1961, 2755, 2125, 1962, 
            2756, 2126, 1963}], 
           
           Line3DBox[{1965, 2293, 2608, 1964, 2294, 2609, 1966, 2295, 2610, 
            1967, 2296, 2611, 1968, 2297, 2612, 1969, 2298, 2613, 1970, 2299, 
            2614, 1971, 2300, 2615, 1972, 2301, 2616, 1973, 2302, 2617, 1974, 
            2303, 2618, 1975, 1394, 1976, 2757, 2127, 1977, 2758, 2128, 1978, 
            2759, 2129, 1979}], 
           
           Line3DBox[{1981, 2304, 2619, 1980, 2305, 2620, 1982, 2306, 2621, 
            1983, 2307, 2622, 1984, 2308, 2623, 1985, 2309, 2624, 1986, 2310, 
            2625, 1987, 2311, 2626, 1988, 2312, 2627, 1989, 2313, 2628, 1990, 
            2314, 2629, 1991, 2315, 2630, 1992, 1410, 1993, 2760, 2130, 1994, 
            2761, 2131, 1995}], 
           
           Line3DBox[{1997, 2316, 2631, 1996, 2317, 2632, 1998, 2318, 2633, 
            1999, 2319, 2634, 2000, 2320, 2635, 2001, 2321, 2636, 2002, 2322, 
            2637, 2003, 2323, 2638, 2004, 2324, 2639, 2005, 2325, 2640, 2006, 
            2326, 2641, 2007, 2327, 2642, 2008, 2328, 2643, 2009, 1426, 2010, 
            2762, 2132, 2011}], 
           
           Line3DBox[{2013, 2329, 2644, 2012, 2330, 2645, 2014, 2331, 2646, 
            2015, 2332, 2647, 2016, 2333, 2648, 2017, 2334, 2649, 2018, 2335, 
            2650, 2019, 2336, 2651, 2020, 2337, 2652, 2021, 2338, 2653, 2022, 
            2339, 2654, 2023, 2340, 2655, 2024, 2341, 2656, 2025, 2342, 2657, 
            2026, 1442, 2027}]}, {
           GrayLevel[0.2], 
           
           Line3DBox[{513, 753, 514, 2343, 768, 543, 2344, 783, 558, 2346, 
            798, 573, 2349, 813, 588, 2353, 828, 603, 2358, 843, 618, 2364, 
            858, 633, 2371, 873, 648, 2379, 888, 663, 2388, 903, 678, 2398, 
            918, 693, 2409, 933, 708, 2421, 948, 723, 2434, 963, 738}], 
           
           Line3DBox[{515, 754, 2448, 516, 769, 544, 2345, 784, 559, 2347, 
            799, 574, 2350, 814, 589, 2354, 829, 604, 2359, 844, 619, 2365, 
            859, 634, 2372, 874, 649, 2380, 889, 664, 2389, 904, 679, 2399, 
            919, 694, 2410, 934, 709, 2422, 949, 724, 2435, 964, 739}], 
           
           Line3DBox[{517, 755, 2449, 518, 770, 2462, 545, 785, 560, 2348, 
            800, 575, 2351, 815, 590, 2355, 830, 605, 2360, 845, 620, 2366, 
            860, 635, 2373, 875, 650, 2381, 890, 665, 2390, 905, 680, 2400, 
            920, 695, 2411, 935, 710, 2423, 950, 725, 2436, 965, 740}], 
           
           Line3DBox[{519, 756, 2450, 520, 771, 2463, 546, 786, 2475, 561, 
            801, 576, 2352, 816, 591, 2356, 831, 606, 2361, 846, 621, 2367, 
            861, 636, 2374, 876, 651, 2382, 891, 666, 2391, 906, 681, 2401, 
            921, 696, 2412, 936, 711, 2424, 951, 726, 2437, 966, 741}], 
           
           Line3DBox[{521, 757, 2451, 522, 772, 2464, 547, 787, 2476, 562, 
            802, 2487, 577, 817, 592, 2357, 832, 607, 2362, 847, 622, 2368, 
            862, 637, 2375, 877, 652, 2383, 892, 667, 2392, 907, 682, 2402, 
            922, 697, 2413, 937, 712, 2425, 952, 727, 2438, 967, 742}], 
           
           Line3DBox[{523, 758, 2452, 524, 773, 2465, 548, 788, 2477, 563, 
            803, 2488, 578, 818, 2498, 593, 833, 608, 2363, 848, 623, 2369, 
            863, 638, 2376, 878, 653, 2384, 893, 668, 2393, 908, 683, 2403, 
            923, 698, 2414, 938, 713, 2426, 953, 728, 2439, 968, 743}], 
           
           Line3DBox[{525, 759, 2453, 526, 774, 2466, 549, 789, 2478, 564, 
            804, 2489, 579, 819, 2499, 594, 834, 2508, 609, 849, 624, 2370, 
            864, 639, 2377, 879, 654, 2385, 894, 669, 2394, 909, 684, 2404, 
            924, 699, 2415, 939, 714, 2427, 954, 729, 2440, 969, 744}], 
           
           Line3DBox[{527, 760, 2454, 528, 775, 2467, 550, 790, 2479, 565, 
            805, 2490, 580, 820, 2500, 595, 835, 2509, 610, 850, 2517, 625, 
            865, 640, 2378, 880, 655, 2386, 895, 670, 2395, 910, 685, 2405, 
            925, 700, 2416, 940, 715, 2428, 955, 730, 2441, 970, 745}], 
           
           Line3DBox[{529, 761, 2455, 530, 776, 2468, 551, 791, 2480, 566, 
            806, 2491, 581, 821, 2501, 596, 836, 2510, 611, 851, 2518, 626, 
            866, 2525, 641, 881, 656, 2387, 896, 671, 2396, 911, 686, 2406, 
            926, 701, 2417, 941, 716, 2429, 956, 731, 2442, 971, 746}], 
           
           Line3DBox[{531, 762, 2456, 532, 777, 2469, 552, 792, 2481, 567, 
            807, 2492, 582, 822, 2502, 597, 837, 2511, 612, 852, 2519, 627, 
            867, 2526, 642, 882, 2532, 657, 897, 672, 2397, 912, 687, 2407, 
            927, 702, 2418, 942, 717, 2430, 957, 732, 2443, 972, 747}], 
           
           Line3DBox[{533, 763, 2457, 534, 778, 2470, 553, 793, 2482, 568, 
            808, 2493, 583, 823, 2503, 598, 838, 2512, 613, 853, 2520, 628, 
            868, 2527, 643, 883, 2533, 658, 898, 2538, 673, 913, 688, 2408, 
            928, 703, 2419, 943, 718, 2431, 958, 733, 2444, 973, 748}], 
           Line3DBox[{535, 764, 2458, 536, 779, 2471, 554, 794, 2483, 569, 
            809, 2494, 584, 824, 2504, 599, 839, 2513, 614, 854, 2521, 629, 
            869, 2528, 644, 884, 2534, 659, 899, 2539, 674, 914, 2543, 689, 
            929, 704, 2420, 944, 719, 2432, 959, 734, 2445, 974, 749}], 
           
           Line3DBox[{537, 765, 2459, 538, 780, 2472, 555, 795, 2484, 570, 
            810, 2495, 585, 825, 2505, 600, 840, 2514, 615, 855, 2522, 630, 
            870, 2529, 645, 885, 2535, 660, 900, 2540, 675, 915, 2544, 690, 
            930, 2547, 705, 945, 720, 2433, 960, 735, 2446, 975, 750}], 
           
           Line3DBox[{539, 766, 2460, 540, 781, 2473, 556, 796, 2485, 571, 
            811, 2496, 586, 826, 2506, 601, 841, 2515, 616, 856, 2523, 631, 
            871, 2530, 646, 886, 2536, 661, 901, 2541, 676, 916, 2545, 691, 
            931, 2548, 706, 946, 2550, 721, 961, 736, 2447, 976, 751}], 
           
           Line3DBox[{541, 767, 2461, 542, 782, 2474, 557, 797, 2486, 572, 
            812, 2497, 587, 827, 2507, 602, 842, 2516, 617, 857, 2524, 632, 
            872, 2531, 647, 887, 2537, 662, 902, 2542, 677, 917, 2546, 692, 
            932, 2549, 707, 947, 2551, 722, 962, 2552, 737, 977, 752}], 
           
           Line3DBox[{978, 1218, 979, 2553, 1233, 1008, 2554, 1248, 1023, 
            2556, 1263, 1038, 2559, 1278, 1053, 2563, 1293, 1068, 2568, 1308, 
            1083, 2574, 1323, 1098, 2581, 1338, 1113, 2589, 1353, 1128, 2598, 
            1368, 1143, 2608, 1383, 1158, 2619, 1398, 1173, 2631, 1413, 1188, 
            2644, 1428, 1203}], 
           
           Line3DBox[{980, 1219, 2658, 981, 1234, 1009, 2555, 1249, 1024, 
            2557, 1264, 1039, 2560, 1279, 1054, 2564, 1294, 1069, 2569, 1309, 
            1084, 2575, 1324, 1099, 2582, 1339, 1114, 2590, 1354, 1129, 2599, 
            1369, 1144, 2609, 1384, 1159, 2620, 1399, 1174, 2632, 1414, 1189, 
            2645, 1429, 1204}], 
           
           Line3DBox[{982, 1220, 2659, 983, 1235, 2672, 1010, 1250, 1025, 
            2558, 1265, 1040, 2561, 1280, 1055, 2565, 1295, 1070, 2570, 1310, 
            1085, 2576, 1325, 1100, 2583, 1340, 1115, 2591, 1355, 1130, 2600, 
            1370, 1145, 2610, 1385, 1160, 2621, 1400, 1175, 2633, 1415, 1190, 
            2646, 1430, 1205}], 
           
           Line3DBox[{984, 1221, 2660, 985, 1236, 2673, 1011, 1251, 2685, 
            1026, 1266, 1041, 2562, 1281, 1056, 2566, 1296, 1071, 2571, 1311, 
            1086, 2577, 1326, 1101, 2584, 1341, 1116, 2592, 1356, 1131, 2601, 
            1371, 1146, 2611, 1386, 1161, 2622, 1401, 1176, 2634, 1416, 1191, 
            2647, 1431, 1206}], 
           
           Line3DBox[{986, 1222, 2661, 987, 1237, 2674, 1012, 1252, 2686, 
            1027, 1267, 2697, 1042, 1282, 1057, 2567, 1297, 1072, 2572, 1312, 
            1087, 2578, 1327, 1102, 2585, 1342, 1117, 2593, 1357, 1132, 2602, 
            1372, 1147, 2612, 1387, 1162, 2623, 1402, 1177, 2635, 1417, 1192, 
            2648, 1432, 1207}], 
           
           Line3DBox[{988, 1223, 2662, 989, 1238, 2675, 1013, 1253, 2687, 
            1028, 1268, 2698, 1043, 1283, 2708, 1058, 1298, 1073, 2573, 1313, 
            1088, 2579, 1328, 1103, 2586, 1343, 1118, 2594, 1358, 1133, 2603, 
            1373, 1148, 2613, 1388, 1163, 2624, 1403, 1178, 2636, 1418, 1193, 
            2649, 1433, 1208}], 
           
           Line3DBox[{990, 1224, 2663, 991, 1239, 2676, 1014, 1254, 2688, 
            1029, 1269, 2699, 1044, 1284, 2709, 1059, 1299, 2718, 1074, 1314, 
            1089, 2580, 1329, 1104, 2587, 1344, 1119, 2595, 1359, 1134, 2604, 
            1374, 1149, 2614, 1389, 1164, 2625, 1404, 1179, 2637, 1419, 1194, 
            2650, 1434, 1209}], 
           
           Line3DBox[{992, 1225, 2664, 993, 1240, 2677, 1015, 1255, 2689, 
            1030, 1270, 2700, 1045, 1285, 2710, 1060, 1300, 2719, 1075, 1315, 
            2727, 1090, 1330, 1105, 2588, 1345, 1120, 2596, 1360, 1135, 2605, 
            1375, 1150, 2615, 1390, 1165, 2626, 1405, 1180, 2638, 1420, 1195, 
            2651, 1435, 1210}], 
           
           Line3DBox[{994, 1226, 2665, 995, 1241, 2678, 1016, 1256, 2690, 
            1031, 1271, 2701, 1046, 1286, 2711, 1061, 1301, 2720, 1076, 1316, 
            2728, 1091, 1331, 2735, 1106, 1346, 1121, 2597, 1361, 1136, 2606, 
            1376, 1151, 2616, 1391, 1166, 2627, 1406, 1181, 2639, 1421, 1196, 
            2652, 1436, 1211}], 
           
           Line3DBox[{996, 1227, 2666, 997, 1242, 2679, 1017, 1257, 2691, 
            1032, 1272, 2702, 1047, 1287, 2712, 1062, 1302, 2721, 1077, 1317, 
            2729, 1092, 1332, 2736, 1107, 1347, 2742, 1122, 1362, 1137, 2607, 
            1377, 1152, 2617, 1392, 1167, 2628, 1407, 1182, 2640, 1422, 1197, 
            2653, 1437, 1212}], 
           
           Line3DBox[{998, 1228, 2667, 999, 1243, 2680, 1018, 1258, 2692, 
            1033, 1273, 2703, 1048, 1288, 2713, 1063, 1303, 2722, 1078, 1318, 
            2730, 1093, 1333, 2737, 1108, 1348, 2743, 1123, 1363, 2748, 1138, 
            1378, 1153, 2618, 1393, 1168, 2629, 1408, 1183, 2641, 1423, 1198, 
            2654, 1438, 1213}], 
           
           Line3DBox[{1000, 1229, 2668, 1001, 1244, 2681, 1019, 1259, 2693, 
            1034, 1274, 2704, 1049, 1289, 2714, 1064, 1304, 2723, 1079, 1319, 
            2731, 1094, 1334, 2738, 1109, 1349, 2744, 1124, 1364, 2749, 1139, 
            1379, 2753, 1154, 1394, 1169, 2630, 1409, 1184, 2642, 1424, 1199, 
            2655, 1439, 1214}], 
           
           Line3DBox[{1002, 1230, 2669, 1003, 1245, 2682, 1020, 1260, 2694, 
            1035, 1275, 2705, 1050, 1290, 2715, 1065, 1305, 2724, 1080, 1320, 
            2732, 1095, 1335, 2739, 1110, 1350, 2745, 1125, 1365, 2750, 1140, 
            1380, 2754, 1155, 1395, 2757, 1170, 1410, 1185, 2643, 1425, 1200, 
            2656, 1440, 1215}], 
           
           Line3DBox[{1004, 1231, 2670, 1005, 1246, 2683, 1021, 1261, 2695, 
            1036, 1276, 2706, 1051, 1291, 2716, 1066, 1306, 2725, 1081, 1321, 
            2733, 1096, 1336, 2740, 1111, 1351, 2746, 1126, 1366, 2751, 1141, 
            1381, 2755, 1156, 1396, 2758, 1171, 1411, 2760, 1186, 1426, 1201, 
            2657, 1441, 1216}], 
           
           Line3DBox[{1006, 1232, 2671, 1007, 1247, 2684, 1022, 1262, 2696, 
            1037, 1277, 2707, 1052, 1292, 2717, 1067, 1307, 2726, 1082, 1322, 
            2734, 1097, 1337, 2741, 1112, 1352, 2747, 1127, 1367, 2752, 1142, 
            1382, 2756, 1157, 1397, 2759, 1172, 1412, 2761, 1187, 1427, 2762, 
            1202, 1442, 1217}]}, {}, {}, {}, {}, {}}}, 
        VertexNormals -> CompressedData["
1:eJzs3XVUVd3aN367u1uxO7Awv7bYWIjY3WIHFip2K4ooBmIHIogJXiAqISnd
m13kBgzsePcZXpMxftOX33nOGK/j9j7Pff7Z45zDmHvtvdea67uu6zOdBjMt
xswpVKBAAf9SBQoU1r+O+PFyzJPAcPArWTi1Cq25KBPHjeI2WI4OJfE6+IBh
8KLDOkyZf6r02T0vUavD2OAAh0TKiB9hsr5Xxj9//2/+vsD/9T85yL1RcHNg
bgS+Fuy/IGFeCl3p0a7lgTglJmS8W3i43AOoq14x29onmrRra59NWq3LG2fz
oav3J1a0chfjmMSX29fH358s7rw8+mVoKFm77KablbJwqP3LjYV3OREG9DPM
tteQ8YdyC6ftSPlfNz7/HuL3yftd8vu9VIs2m3XtrRCvVHPVmkGDBmvF+4n3
z3vfVZlD17zZkUg9ggfFN3V2wbyanyosLZ6J0U63N3afG0X7i3fdG1U6ibbf
nblp1qK0/3Xj83WS9yqul/zOf4sihoZfisagYKUje2qUUFOzhjU+LrTV4Eq3
4Vk1iivQrPmgzVs+aanBALNVudmJKHcyN7Rt+ct0r/Tl5B7WCkoNc4bttAzc
SZj3udClROJXjI4O3fxjXwr2/fw8MPn5+SA+F59n2P3zvIM438Y/SS+nNo6j
womDS1VvGUyH7WaefqHIgNew3uWcTWLIb9apzt/qa2hDycpHs5eq/7jj/0/P
f5OObW/M6uhEo72XbkpxV9HlDSfvquumYc/gH3dnt3wOz/Xvaz8YlErXx15w
s2ypxtDtwyatuaISr5QcsKPw7ntJuP/z86Dyz88H8bn4PCM+7/LON77+xXwA
MQ/EX17hk2mmpLQSK1+tuERAnwVvMtPTEDp3r/m9YskUbOzc6ItzHH3JWFil
0dCUP+74/9Pz/z+d3/jziM+X97ma/jzPxHlHBny+/afjG7ufTAKSqKxht2Iv
EEhdH/h3jXibjtrfj1LHwklEd8rsjXVU04fkoNBrqX/e8f/u+Z/PM3HeQZxv
fP2L+SBvHvhPxz8UYFt7tYWK3n+qMtpB9RTlE9aVuPs5Fc5X+j/v8VhJER6G
Zd3ax9LsRgXd/eZo/7jj/93zf4WdqRUuHYlEWOHJHTxJS56bG2Y/XKdC9taZ
2wyuJGJt/zrb25in0rgWBbqjYDxebalh+3RJBIqMK/2wlWcK7arT+uLjY0os
MJk4tdK7BCwMHm124X0qXbLafvjk0VgMnuj8qfQ1dxrkZ+Szdo6KNgTGBD80
TMPjEhPtZ65Vk/vPV9wcVaPqsWFxCPv5e+DOz98H4nfx/HmdiOsGH/l64flL
zGcQ85jvz/sKnvy8z8CS7y9/2vzf9UD5Q7bFHtLA3u0zbJ1SqJTxts/pQzWo
ubVy7rUK3jhRu/PdWt/S6NrU/nbGZZVo0G+xueUJD2ozIHlcrFcqNXlg8HF8
tgqlV9VxqFrsKZZ5X7g70zGdmm+Z3al302T4rMhpPeitWrzS1F6pzxq2jQb/
HuL3gfhd+Dohvm7yrheev8R8hi48j/F9hfg+k3d/4fs9TH/e/yHu+3/a/P+7
8zP/HuL3yftd+DrBwp/XTd718qcd/989//N1AoOf1w3E9cLzl5jP8uaxP+34
/+75n+cvMZ/lzWN8X0HOz/sMjeH7y592/H/3/M/3FXGfgbi/hP+836Piz/t/
3n3/Tzv+v3v+/7uP/3fP/3/38fM7/+t2PDzwynqleCXx3/P7vfg6EddN3vXy
z9////99fnV+8d/F/y/V/3/5vcT7ifeX6uH//H0+f1/g//qfvPo/id9Nmv9J
XE/5zG89pfycd/+R8nNeLpDy8/+a8cX8LuZ7af7/5fcS85qY56T5jcT9R8rP
eblAys/g/AwpP/+vGT+/fll+57+434j7j5SfifMzpPwMzs+Q8nNejpbyM3F+
Jik/E+dnkur/efUAqf4Prv9Dqv//Mcf/n57/IgeIXCDlZxJ5TcrPJHK0lJ+J
8zNJ+TnvuVPKzyTqAVL9P69OI9X/8+pnUv3/jzn+//T8/0/nN/E8I55vpPxM
4rlTys//4/FFvUzUz6T6P7j+D6n+/8cc/++e/8VzpnjulPIziXqAlJ//x+OL
Oqaoa0r1f3D9H1L9/485/t89/3P9n7j+D6n+T6JOI9X/SdTPpPo/ibqmVP/P
qzdL9X9w/Z+k+j9x/Z+k+j+JvplU/yfRz5Tq/8T1f5Lq/3/M/C/qMqJOI9X/
SdTPpPp/Xl1Tqv+TqDdL9X8SfQCp/k+iPyPV//P6ZlL9n0Q/U6r/5/WZpfo/
cf2fpPr/HzP//+78LPoxoj8j1f+J6/+Q6v9/zPH/3fO/6JNx/Z+k+j+JfqZU
//9jjv/vnv9F/1L0M6X6P3H9H1L9/485/r97/hd9ZdFnlur/xPV/SPX/P+b4
/+75/+8+/t89///dx8/v/Jfr/lL9/5ffS/TJRN9Mqof/8/f5/H1+df6uLcZP
9msfRI8bPvjU7WEofe8SmOAbpMOYw55FOw91R8XE9TM6qmKo9UGdcfGyOpjo
NidfqfIMcbve5mqWJFCGovCpeh8zkNTLquejAbsxZW6l07XXXqVnW08Urfg+
GzXeGCRP2+xDi9t4F2zVL5xWzVFeSfXRobt5fcuWH5/TR7+5E59NDqDiVGzm
5ftZML8bqjtx5QE+JS1e8KZ8PJ02O2xf72QmZvkfHL5v9kOKujVE1c5HSSXO
3m8z+H4aZo0eZ755FtGd8TOquLeMJEV2YYdC3jpoj12/YJN+Bc0KxI/YcD2R
fHsXT2ldJhPXZupmz9zgAIuxTnOq742lep6nzTvX1OFxbd/Zo2ZdQPuTb49t
2POU2rfxNR1+MRu6e0tmd4lyotbXhyyx+RFFDfc1Mul2SgfPCrmXNpx8QkWL
qY5HkzfNbT5tyLqZ2aj2aYHFzjVnyOZq4rjBimiKfxp8svU6HawUNv13PPSi
ZrUXrrjSIom0j0dXe3kyA5sMbIzqj50Lt4ldD095GEMDI/rNqj1Ch4QvX4w+
ntyC1I2u0SrfZArsUWDED7t0dFXXOfPe4j7dL3p1Xc0aUeQesOJcS1cdVNEX
xlhfcsLnMRnDGmmCaINyXcmr37PQ8MXnltPcnVHiRqGhgaPjaEHF8Eyv+EzU
sTUv+eG9Mz3uPX3mE60bTYh4Y6IOzsZe8w69L5zzpiF1HlotNYqgDUe/f4zz
0+HyJnoatPEFHa3w48iKEdE09WZ/+80VdCjfsnmnsT098Tqw1qRqz+IpwqzC
Q/dhmThbLtUgLOMcHbxw0TK3nJrMQiuV905Lxfdotzlvhr6kxo692mUbh9G3
ed97LvPQoWGXnHcNe7rhYE3nZkbzI2hNyTpZbUtlwTrMimaU9sek6KP29h/j
aWlDo5UqnwzciwheWTblLJKqdHqc5LOPulvterH9SzaufKCkwouS4NjdvkFs
TwXZ2hyau/qaFverOqeln4lBd7vrBrHqp/T+yfpp9V9nwmvF1drJeyModrDT
/Kd3L2OUsuP3BTWzsG5crvb2jxhaavd+Y2pEJF00CPExy0jH6tQXw9+uCIER
Nl3ruDeZvO/2MRq4Lg0Ju8dlezWMx8EiHz295oXQxbMGzdP2ZaCy9saWV7U9
qMbhZQtXtypLL0t7RSf6ZyPy+mTXbk3jaXL7Us9H6+8/ijtO1knaDKyd/X3V
5ltHsWpOv+0r7JLpY3CXLo0epGOQlU/bqn0TMdS2xSDjrlG08NiRFwqXNNR+
U3bKts6EuYOTA1fOvUJTTCPuDnyUjYI2jqfa3Uogq/HxY5cdv0PbrsdZdRuQ
iXY99tbO2vaSyl95+HrTDQXVLvQ4crJFOqo8znofk5SECmXeRW0+nEDdCjeK
SNiQAoslcS+PZkRBM+yNZ9sRLhSp9a3hZqvDSBefreHR0WhpeHx6975qGmDx
Y0dBCw2KfqsV3W1QEvoOHdh08y0ttVo8tXSusQJd3g23XG1yG5d7LpqQNk9J
nb02L91cKx2TLDI9KibF0uCYKaO/3AtByW3bl68NycAq04y9K6f4o8tVzy/n
KR5rDnQ+HRWagcOZbsFWjipYzTh6s+utF+gU28s042wqhnRdlHVp8h0UoRfe
D4296PjTAsuzHbJR9dDs/rqqcVTh7NEaV30SqH8vhyYnFamYuyxxS+czN+lx
mWcjzy7VkuH26bu7eWrR2d/2aG50HHrv3b7QaLCGhn4yP1hqiQrr20Yrc8wi
oWhr5bC9rpYGDhpq/gNqjOjcttrCai/o2BWb7uWWhNH4o536L/+qQ8duzeM9
z4bTxeBtqauuJMGw8OcJR8LT0L3Zj5Z75ymwpsTIu3VqR+BGYHjdNlPTcEpX
1e3ccA06j6z/sXboJRxfVrCwd1QKqi9/XMJl0yXyeHlrzBlrFV2tHx17fkwa
iuvPavV1L8w+V3FShYgUelSw5/LjajUeBCq/hg9Oxu4T0bcGpKqp1xrT3us+
K9Cwf/bc+qOUMG2wVFVzsSfZD6ytVWekoe7JXksO9HyCoVk52sHdotDs1CjD
8jY6XMw5a3dgz1PMHd514F7jcEx0//jixHcdNqwKWnZZE0DuP8qnWfu9gOOg
KUH1L2eh9IqMub0slOTc3q/JnTPPyHdNnS/BF9NgGF/Ksva2CFpbtVLfkZ8V
NGbptboqbSpOOk5aXqnkKfh7eNw0cdKQi87y/nH9c0q/foWmB1cNx5Xp476V
XJFCIQ3W7+g0VoVigy7ZNfqoQqFHR226rEukfiXnacLDVBiVk1j8ZvU4tFnh
9OX8WU9UqviufJs7mThW7F3K/GbnaPYgm+Mfb8ejQLn4VXdOZKL+yjZuqcNC
kb2yWfYZ45fof6B+xWWls/K93+V3X+v8vrTtxhw1Xj2tMfxs36d0Ps6iwGbv
FLR9FhrQ6VQKygYPeWlXIo7OjxyyVR2ngKnxTDf/wDBYPkjBM5t4atBj7+1V
Cen53ndunnieU3fEKzptdN58v4EXbaYszefJWSja7fiXb6UVNOx5MbOpofE0
1IKOFb6YgovvPrcb4BpM28e9azSlppI2VYtc/6FVWr73hSaXV9/AvhDEh1jO
aBBzk/wsvErViM/CqHJtbD/3S0WDefc2WTQPoVXKDnGve6pwf9bQac/1ebxJ
j6czNpRSUNESav9an5T5ztv/r+Zno2z1loorlegbOLNEyIBz8K2IpvcbpKNp
gboxE6epkazdNsa2wyvytY++tDJHiyNF0x+EWibj+8bhawJ7J1LRKTFmSw20
+c7PRfa4nmva2J92VZr1bkfaVZT5lLZ2yZBspI+LH9lPpaJdR83CbVZ60ccR
DcbG3E5FK9eWOd0meVKxGxUPu/dJpiEmqas2O+Y/P7c0+x7RdkwCbpiEtP+k
vkJG43Wzrs7LxPMOV/d/MlJj3L55/X68v0FNwp4bl/NIRdfQawmxk1VwmVMo
xtUylsye38gZ/Uzz2+fn2Pk3L+cujEax0CtjZ8dpKahexytzXijhtrRXoMfT
eBwxj57YonwqGbf0G+GmSMTsdj39ri2KRumQ72WiS6dSn4enG27ulozb12z3
TEyJRd+6rv3vXEwl720zq892S0Tj6bndNLO9UWbmnQbHxqWQ+a06Xi8mabBt
uMvStEgFNVIffHDjky0SylXrPaFjBiZGpw7pvvIl+Uy/oLowMwVn02mlu7sa
k9+v0g2opMDB05aNfjglo8vw1LHXjTUo0rXJAJPLSgxf6T7yQA39/9/j4d6p
i9VwM1u2c8ThJHQ8UdtvYVkFCo5u86PfEy1y2we4V2+hxgylq2eFCjHo6hih
vrVa89vn5wopJpZLdVdpX5FrR3tlptDpqtuKtDPUoMbZ6vXuWd1D7TplDu48
mUbFFUP6n/mhRNp6xxlG385Tj8xvSQFmadQr0qJ5qa0qbA2f5OpR+Qo+3Oo/
zrxVOpmWe/6owWQlwgMeKXZcj0dPijCoujiVqg41K+gclIBbe9+VM52vxY+Q
ma0PDw0j/2WaWVvd1FBZVOpp7ROGqeaNnj3aEYVa0ycEX6uYCTOXJfXbjtpA
7avd221grsRHs6mDXLqkw9btTIWHz55g4urJh57fU6D3fNPhJYtk4MOBhq/a
HzxPCtNBG0dbJOO6xZSgriHpKKbcf3aNlw8O1Kj7MLlOPJp4zVt2ssHvn5/z
e77I7zkiv+eF/Obn0cqC43XlkrE15+HIZVXv09yOVwft0ufDJ2tyc5rrv6du
N742zfUPI6MF0w7aZCTCdrnTh+UfFFjbpmv3wqaJNOhQ4q7czdp85+f88nl+
OTy/vP275+ffnZ9nWXc55fJWheFFPu/InmWHrYGD928smIalnkVjyqak4rhf
/NZ5Ie7k4edqOvm5Cmc6P78TdV+N4r3czb+fiCXf21925i5X/5Of/01+nn0w
Y9feiak4esBx0RvFLWrzdLba9ZYaLRMdXiht0nD/csvzTxaF07Qmbe9+GKJA
c0WTV/VcVXA0DsgtlZBMe5Y6fb0ckPxPfv43+TkzynWqzj8Ze709ntzf7o3C
jwoFz2uSjuTjlSY30R+v88k5Hed5etLjg4FbB2apce9aocAOQ2PRvsNCXcpK
Ba1J9jpfpsY/+fnf5edZT7/NmGeYiLsNg9cljH1EZtWO795eNBPKEe0jl5VM
Bb15F/7EOYKWXlx55noDJb6NqRgwIiwRi1IvV3cukETJnV5PezA15Z/8/G/y
83LdhtxW9gq8TUxtcmmFFZXamvPeaWIGoj5vtktapsa1auP334l6Tvu+me5P
LJgKhe2WNbWXKdHfZOHUtzPjKSPnSE7IB80fl59H1SuR4dAtCRVTrg3r6BBE
ReoXOKyMT0cz/8Vz+tlo4VOpkGNC7QiKf3bvdmBFNSwcT9pnFUtGyZbX1Qve
B5EyY29Czvs0BFRaHNHWWQOXQyGzehuGU8mQppt29NEgxelFt7cNlVhxvdio
CydDqNWXOhPbFkvDzo8ZDe7rc671LfOkqt3DaFbNfn06z9Eick6r6trOKnxK
SBny5lYoGUTG1ZxQJBVTKxc1G/5YhZnvTW8pO72iMZv9u2/blILzMzbcvNRL
jax+UVsKPXxFRi5ut0q/1SLg4MxaLreUOL7nSIPljUNpX3H33SN2pcKq0Mzt
Q400sBxY3lxzP4xqd3nYbmC4Bi83RYzJPp6Mqk+3Or4sFULJ3X1n+lql4ftL
36tGjbV4HLP//tur4fTeo13n/tfV6LGn6PvuaxTY0dYvcGR4IPkuW+uwfX46
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
AhL9bckVgF0BJFdA7AoguQJiVwDJFRC7AkiuAOwKSHIFxK6AJJcLdrkkuVyw
y4XkcsEuF5LLJXYFkFwBsSuA5AqIXQEkVwB2BSS5AmJXQJIrIHYFJLkCYlcA
yRWAXQEkV0DsCiC5AmJXAMkVELsCSK4A7ApIcrlglwvJ5YJdLiSXC3a5kFwu
2BVAcgXErgCSKyB2BZBcAbErgOQKwK6AJFdA7ApIcgX/4/mZXQGxKyDJFRC7
AkiugNgVQHIFv8zP7HLBLpcklwt2uZBcLtjlQnK5v8zP7AqIXQFJroDYFUBy
BcSuAJIr+G3zM7tcYpcLyeUSu1xILpfY5UJyucQuF5LLJeETJZcLdrkkuVyw
yyXJ5RK7XEgul9jlkuRyiV0uSS6X2OVCcrm/bX5ml0vsciG5XGKXC8nlErtc
SC6X2OVCcrnELheSyyXhcyWXC3a5JLlcYpdLkssldrkkuVxil0uSyyV2uSS5
3N82P7PLBbtcSC4X7HIhuVxilwvJ5YJdLiSXS+xyIblcYpcLyeUSu1xILhfs
cklyucQulySXC3a5JLlcYpdLksv9bfPz787P7HKJXS5JLpfY5UJyucQuF5LL
/Sc/55Of2eUSu1xILpfY5UJyucQuF5LL/Sc/55Of2eUSu1ySXC6xy4Xkcold
LiSX+09+zic/s8sldrmQXC6xy4XkcoldLiSX+09+zmd+ZpdL7HJJcrnELheS
yyV2uZBc7h+Tn9nlklj/LblcYpcLyeWSWF8uuVxilwvJ5RK7XEgul9jlQnK5
xC4XkssldrmQXC6xy4XkcoldLiSXS2J9v+RyiV0uJJdL7HIhuVxilwvJ5RK7
XAiXK+rRoj4t6tKifirqqe+5jhrGfYIA7huIfoHo04i+jejXdOM+meibiX5Z
fu/73zq+cKXCmQpfWpH7BFW5byD6BdZc1xZ1blHfFv0b0c8RfRzRPxP9NNFH
W8v9S9HPFH3M/N73v3V84YALxPx0wcIDi/6N6OeIPo7oN4j+g+g7iL6a6LOJ
/lor7msO5z5nZe5vir5yB+4zi/6y6Ou35T6/6O8fYFdxgp2F8BXCtQjn0pR9
yyx2Re/YGXVhX5Tf5/qrjl+4beG4hd8ew3010WcT/TXRBxJ9IdEPqs/9TtH/
FH1P0W8W/WfRd7bhfr/o/4/jvv8m9hbCXwh3IbzLJfYvwr0Ib/SZ/ZFwR8J7
Cf8l3Fd+n+uvOn7h7Pexuxfe/hb3O0X/U/Q9RX9O9OtEny6W+9CiLy360VfZ
AQgXIDxAEjsM4TKEx5jDDka4GOFhHrJDqsUuSXgkM3ZgJ9iFgT2YcHhF2eUd
YI+X3+f6q45frItozOskxPoI0YcWfWnRjxZ9U9FH3c/900/sA9TsBYQTED5D
eA3hNISPEV5mGDuZ/N43v/GFz1vPXk84PeEjp7CX7MpO8j8d/3cfv1jHIta1
iPUswgcILyCcgOhni/626GsvZLfxnR2Hgv2GcDNu7GiEn7nAbkk4JuGXhBsT
jkz4MeH2hOMTfk+4STU7SuEnfdmtmrFjPc9+Vbjh9uyIh7Iftma3fZ4d90b2
28LNC0cv/PwjXrcwntcxiPULYt3IHl5HItaPiHVE73ldkVhPJNYdEa9DEuuP
hNsQjkP4DeEMhDsQ3uAJexoV+xrhapzYMwnflOea2JMJXzadXdkJ9nzC9wnX
Z8SeUvhK4SqFZxW+VbhW4Ym3sy8WrngHe27hu4XrHs6eXvh64eqdeD2DWN8g
1jVU5PUkYn3JAF5XItbziPU9Yl2PWPe1hdeBifVfYp1YPV43JtaLfWFPI3yN
cDXCfwgPIhyIKzsn4Z6Ed9rHzky4M+HNjrDzm8PuT3g/Y3aWwl0Kb2nFzlW4
V+FdhTMW7lh4Y+G8hfsW3tuanX0hdvfC24t1DmLdw0Ze7yDWmazndSdivYlY
5zOS1/2I9T5inZVYdyXWW4l1esTr9sR6PbGuL43X+Yn1fcI5CfckvJNwOcLp
CJ/Tjv3ZE+HR2KEJ/yc8oHCA29hfCo8pHGZ+75vf+MJ/b2APLhy48PfO7PGF
w/9Px//dxy/WYYp1mWI9pvBnwqMJhya8lPBTwk1tYBc4gZ2g8IHCZVZlpyl8
pnCxK9nJrmYfK1yycMrCJzdlFy6cuPDhwuVnsNMXPl+sixDrJMT6iPw+1191
/GLd7AxeRyvWzwoXKJyg8IF32LEJ1yY8Wxn2mu3Yb54TbpO9rPCzZ9jNGrNX
Fn5ZuOUl7MXXsh8Xblx4/ens94XbF+slavL6CbFuQqxXucfrVwbzupX8Ptdf
dfxinbMZr3sW6517sdcUflO4TeELhTcUzlA4WuFqhacVjvk+u2bhmYUjN2RX
3ok9eRw7fuH6hecX6yjEugqxnkKsY6nM61rEehaxjkisKxLrifL7XH/V8Yt1
6dV5nXre+nR2tMLVCk8r3KdwoMJ/TmTfnMneWThn4cuFNxfOXPj+Yuz9hfPP
733/W8eP5X9HYCT/uwLi3xMQvll4Z+GchccVPle4XOHOR7NDF/5cuP/6vA5A
+H+x7kKswxDrL/J93//S8cW/+yD+HQjx7z9ollUKar7uCL3m1831zh448y0b
rkYPNnzf7kPuRlFxBv1fUffnNyaF6q+vRS4zQmtEutCpATXn132tpp1PHoW4
V0lF8a5FDyiKPsJJdZMrI29GU9UTZQ29zHQY2NM8xeraERrBr02e7yp4WD/+
vXGWX33X+dCnLlnLFgx6RX4lLd4k6McPXVix96gkFzqycupF82w1DZw7K75Z
tVQceNPxY7dij7DBfpjXDP34c/yKv36sH79FnRZFS98+Qh34tYF7yPqD+vGP
rX/Z2MLSR58XJ+boBr6ixvuH143Xj9/uapsmD2JcaJd6TbvF+vnHpuRam2FV
U/G527U3F/XHP7r8oYy++vGztxxzeaYf36Gunf303UfoGr+ajcita6cf37NE
kanlXBKgOVDy9YYXgTT2VsFe9cwz0H1X3Jf65eJo640KE44ddgaFTppQSZeJ
BsEFItb1jSSL9o8mZKxNoD571vZ93DAdVRMNyw+dFw+tSc/FNwcm09ruX2YV
Vmuxsv2+jasbR8J7rIPHsgBP2rnFasyuRzpYv3T4NvlHLC3oVebcnl3O2DKo
2za7nEw4fP9ctFWfSMpu+aFE/TUJdO/QlxLWjdJxNy5owlHzePhPNe560ziZ
/HYbxDtrtCi6rMXRoo0iMfXL8m8OwZ7Ue87xN0768bfW7qWdpx8//VPU8MP6
8Te9uZ5yQj9+epV6A0/rx99uMj/0oX788+fm7uqjH7+oxUqNhf74P8RW3+yo
P/7It4azv6u0WFykj8H4ZpH4nGG1tNwLTwp40PJLV/34ulqFopL2BSGTX0ss
88+eVD8Lhn6hpz6XT6IlU4y/edaPhbv9grTXHqnQ5UbX1mVH4qHXwvPrFgag
buSsgKVF9OezZ9PIhq006J1+67Vr0DWqNGPP6X2vU5DbdovN6jqvKPKs0YtR
nwOoRtuxMwzC9Of56Ec5ns5xNMznWZexZsnkYT099mbZFLyqNdamcJ8QxIZX
W9qooZremg8+WWVbClYnrJtVoq0CYyaafrWK1dCbaTu8iiYpMBdvk+K6X8Sl
jvHpJS7E086yey4NtM3EXpvawXcrJNGt9b4VOlSNxUhb9TYrz1Rocr97FHeJ
RIPs69YLlC+xbXDy2Fc1dGg74px3sdYa6Dx8L0asvUYLQ2dXr68//nLjc4eM
tErAy+YbCsY5+VKT40dDyj3IwMQNunrRPi/o/pbi1VU1kpCyv0GV1zMysH9n
2VsvMsMxcZdqztDSIbC1Lh2xuLkOWV524eXvhtJkXeUmLlM94Vhh0fRxlllo
9KVG2vPBCjq1vUdcs+Bo/fN+D6MWdqn48OD+mGbXn5LZzeVTq5mrqdH+RqnB
SAXN62z61D4A79NHNtgyJYWiGt2yn3RNjfCgXJtHfkq0GlT9Qpndajq1rohD
3IkkbC9oXaqacQzWPRu7Z35Bd/KOPvPasL0ONWYsul8n/gW1ulrNY2PNJIwq
ebHV/ekZ2NlmQ8dn+uP//LTNSWP98S8d333nkn8d/4fPjxbPicaXj6aVKm4P
wOCpHY5MupeJ7gWibzUzOEnzjjXbeeSuN6xblZlXyj4bMyy9XoxpGko9LU5f
vnL2AbU5Yrrg280srO2xQNf0YTJNuFTP+sLCOBpzd/jaJ9FadLAbbDjrijsV
LLL3UWXHWCq8Hm9qKjIR2HbSdVdzGyqYHLP0yyl/KpgbVnjpsGx82b3uqt81
Fey/eJ5t+SOa6q6b+GhGtgZHr65bnfZNgzeGz4bHdkqmiPiOlgf7JSFnZsvA
OYuDMGPTuxV3TEJIl2ynHqV/nqpTedFz+24n6VwdT8e9vt6odKx2rd6nsxGu
KRZf0yAOcc6PB7bf5kaRPhXSbeMyYV19142Xu2Job7PnFeuFPIDhkrF3VW10
cBysKbv3TjKZWTZ9c6RgJN2tUn3uviGpqBhXo2SraV6YsC1zU3VHNd3qebrg
qIqp+HFiYvt1rqHwnH5qUc5ofzr+7NqlOqWy8NJw8cc6zjFo4aUcUOSKI+Lv
dVYcM9bBq5Om/6hgDaIq+s2v4hVGJcvGLevbQ4MZ5lfOtfusxL0fsarr4xU0
VFPBvYROhdHv+r4t9yAUz6snHl5m7E+l7J8ee1cyC6oNH3auLPQCyfyaOHB7
35qlsuFxyrvz569qqjU0/GH5OfEYl3L5c+F9KtR1T52aHOZK1rPeHm3w+Dme
VlowsPaybJQ2LbrdZZ8GcQ/P2U2774jgidkFbp5PwdmEH9nOt+LgVbJcmbfN
QrEwrsXiofszUNou4PGqRDVKVad2revqr+8QuyduyVrsfP+oTLNiKixa3K5B
daOzWDgtqKTbvTQMU5Zf+tVAjaGuXQe6HfOjqcbvm1iXTIWDpUOR+Jw4nKqT
UqBx2DOK6F7z7mGTTASPqFnZckcsuVXQXSn4Wo3uXl+aN+6l1ufiko2cj4Wj
6YvLpi4myfAwr9DCOyEVM090fbX16SsEt6o9besqJaxs/Nt6zk2Fqea9252I
CNxqVcOhSU4iuk/vgE4BaZifktw1MTocJYMW9ZnfIxFlZpbJ6dY5HeN7Vats
uTYaXestLL7i3CskzojPdKiQiSZzD9z6ZJykn0+Odpzm/RxTbhStsUk/P3Sd
vmrQjzP3aNfNsy8WDYxC4xNPSyXc1MFo/L1jPYZewUqjxde9u/nozxuTwrMt
srH62bmt8bZEC+5ufBw5wgW9k4bcwc1sREQearC6oR8uDn/dZWHYPVy+O8Sw
B7Jh92H95pWBl+iItvX0akGh8F62Ylb83SyMifluc+JlFMq9PlNvuI0dXCzH
mH65o0PQrtWJ5zf5UJfwCqG+3vZYYbrP6tjybPQps6xIo7GhNCSy6t5Yp0g6
3cEmscvFTJR07Fq3ZrNnuJg05/IsSzUdt386bJb+fG7ffEnQsqb+aLencOQ6
31C61Wv/sZn68+3JuR/uLWc9gge/jizb8NPmq9lY1FQb/r1tEh1WWG/cXNof
P6xfGatbZyAIa296vfWk0NfjSna+GEoVKx2K3r1WnxPUTavOOKuEbm3f3tuq
R5L9gzN+zw6nYH0Rx9HfxsbCOrdilVo6T2paZnmrR/rrdPKbM6mP7aJpVES9
jj+aJaHEptj2TjXToHFMDioTF4dOZocfp1SNwPeBqgp+welYc0k38OYrJQ69
GzUkfKYH3GM7Xg89k4bWJ+Ze9frqRA5hheYPHhmDm4PMp1cYp58PLbePb9U4
HM4GI01dX3uifXTkce/KWSgRZJy9eokDivBri4Xbw6z0eVvsPyH2o5BcAYn9
EyRXQNw3h9SXz9unRerL5+2TI/Xlf3nf/9bxxT6yYl9ZyRUQ98chuQIS+1pI
roDE/i1SXz5v/xypL5+3f5HUl//lff9bxxf7/rIrIMkVkNi/RXIFJPYbkVwB
iX11pL48uC8PqS8P7suT1Jcn7suT1Jcn7suT5Ary9rWTXAHYFUByBb98rr/q
+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
MZdWmU9KxJpRFppdM1U0YXqZVznL1Ji608BBeT0JJaqYpc09qqEdz+obzNqf
jJZnA5s8sH+KxLoTF3ZtqaVObrlG409rse3Hms0d3obieYWsWbnmWhq4OTl8
agUNPul6Grdw9sfC1bctmx5JpU/Pl5ncnKWCzdZ6VYo1DUFyTif7ZXtSqXuH
c4YDVUqca6LYfaaAL5aYxVy0j0qjZ3t9G7uok9Hb+tXMlvZBmGrr5VZ+Yho1
M25hbvoxGdOGed+eVlWJLkErOzaunULnps8r/WxvjHBaefOrmFfHP/tS4FmA
A0UcD9raZUAUabY6jW3rr8Nuj265ob3MyG5TjVNdLZRkvHLPtRrN07HYu5zJ
NZ+7FBQ/pcuoIC1tjbdZ9X6YFuNL7mtw3t4Tm5VJQVNuqin6Ridlln7eWNrA
yrhNaRdq6bjMpYphIs0qPvS4X/1MPBj//tWQQwqs2lH9bbHqKmpVxfT2ZAcV
bmwZ1/5KrBZXm7d/+2OlkjTdZwYXnh2DljPu1U1oFwuHiM4VDLLV1NDx06RE
fW7y5vvfGL4fivvglVUaz46RPmTZ7sSx3u3PYPFRe+dRS7JRP+HtgpCJoVQv
uv3YYg8iaVTFe+EzHTLhP2NRE/cPz2Dq/KWG3xI1JZjWOpNbIVW4wLz7ubiP
2w/5Xn102wiEGawrM9LkGj64DZj3pFkWGjfp6PbAJQ3TbBq977P1JUWEzPCt
6pcM3ckVPYOrabHp8sEHJzYk0dKIbQNtPivQxKfq3qorQ3HdW/Wm+BsFdW/Z
L2fO3TSYqWZ/WKa/33v5DL40b7eSHtqte9J5ghrTOd9kc94ROSdxSIHoce2T
yOza8ZwLA/0xt1j4wkItMrANF4xfXLlH3yM8ur38EEhBk3Zb9PmSBd+RR81M
bivxcX475eUnEdS9afrdoidTYLexRMeujZLhlNTt/aSjHvRi+IeTzZ6no8Gn
21fGu6fhgtXXe20eudKXDl8XL49Tosayj4dsXdUo29b54t3cOBo9YUOR8gXU
iPS81slCf/wPpvq8PrVLSarI7xde649f5/Wtfo8LwXBu3ijo4xstVZzQxad0
rBrlAqcZJ+6LwIFTZZPP9NTQ23nNfgyerkHxrSdbtvmkwOqNJfbO7aCl8Y7O
1TZ1TMJ6zrsi/4rc+2jpffdTW6JpkHUZ07ktkvB5/L1zDvXTsPP1YiuXsDiU
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
j8lRdEONPZGq3QhPxruXyTW6dldQTNQpZ10pDTbeSAz0GRSHOidbauIXKalj
0EiHM+O0KNb9x+h3+vng1R2j65vSFNQtu8ierGpaXLyYrvKdkIC2VXSHHg6I
p+m2WebzbqUCkR/c7e4qgY69tnnp7xtR6u31W19Swf3z0im2wxIw16T4k7Y+
KipQ5+ORKyvVWH1rSpMux5LgYX3pxbbvanpZaGj/Q4OUGNhgUfmJ059jclIf
hes1NfUqX76pf1QKJvZu1rqcTziib9p2Nr6UQkXdPdo4q5VoM+zbzYDhz9Dx
xL0m1RunkkOxenbfZqgRO99t3rCRr6CwnvQju3oabTGp+HnAuWSUX/B6cMzE
Z3hUodS0sjvTqJ/TVLd5Z5XwLfd2Wc3lISjTYfey8BP6+61XnSo5U5JxP2ZZ
+xItktG+RWqQzjCFyidaXmxxPQ7Hx0c7u/+fLu78r+bt+wM4oUKDbqhrTKai
KK4pwwvJVJREXUTmzFNlnokSokglKkokGpUGS2mQSPM8ndOpTuMJZegavu/P
47G/v+z/4Jy11177tZ6Pxzkt3gjyUsxUsqmhS3bxk8tPN+OX2Z2GO2qRWLlD
7Xb+hQrKcCrYK77Wgn1OxxK61sTTfZOwVZN+i8giUvooaF4TOnaUJK//upc+
7G89GJjYQEvuPzctc6zD3Cm2Id2rnsPMdbqJ83YJ5ZstOv9N6NtqhaAvyma3
iJbqflq5tpr6Qf3Tv7XNGHfbXXXLQTH+1vreLW+GmEKWLm58R2LY6mjFdUxs
wHafc/1ujhGRQnftxdPjy3FsTXCPLw65CNLK2lz7rJI0X9j/HvCjCTeft0U6
6afihMhDI+lJDMVtC/6TfVyGp4H71yTX5JKt5sQ+ru9i6bHn4BWdnm044eyc
cTAyi2KV0gOrz9VQz6TTu2MvNmH0pC9pnwZl4cnCKbb3t4iosHzhutJfjTgR
0vXl75UZWHHFz8XBMoPaSmOSVzcLuTH/qrZYvgYtH55NmeN0E60977l/DW+G
8e3MLQu8GjHwLB1ffiiHDowzWJ62ToQFkm1mb79K0KF0Kaj/jWqS8++/0dpC
jAllH9cojq1E/Q668/mwiHSXivunnBHyTrbBMDO/StwMjPWNmFlMf85X7Nwh
akSTayjm1mdS0uvTbmK3N2S53NZoY0cbZusdcVuxqIqsLPs9XnX6CV29VLqF
RrXgsvtsryHxueiM2xD98mEOZRn8FxPr3YqmzWWloVtF2GrZ6h1QJOTikQse
eHRvwtyxfxkrOEmAQ32fejk+J9PNXb67nKVQ3p42b/zFRly6VdZm9zKV5L/1
E8t7i6FntikmL7kWWwefCr9rVUlbKvqN8nGUYK+uz7IFM2tg+LWzy7RURBoX
69MKe9Vh0li5bapdufjskG+s4i0hnAra8TJDmC9vx/deoleGvHDv0sXzG2iN
q6PHuBARrq9tk9uqmY2ykV/3/lNUSxccl91L7WjA978Ttx99nkqfY02Cpa/f
wPKdzttyAxkOyRwLFyWFQfntnFbVWVWwUPj97LJQh50qxQvmn61BrpXKgQ8Z
WbBs2rRhpXDuMn8ru+mJDZhR+GaORb+9MNxyt9bCqQ61pm77XTUbEXnItnbb
ijxyP+dt7uMngn/1VdFFqsEZktrdSBNT5xf5m+XptXCMiNE2PF+EprvDAjqe
1tGFEOfuFcJ+43n497r//a4jfaf54b+H1ZNtdOBVhYAaXKVL/YxWXaGqH1tO
bJwipvNRpUPumjfhXs+rc63fJ8JX71NizBIJ7XVcYJ1+XIrI/4LMQgLFsLqV
NsHZWUzZT34vNzEWo7tJ3avq7Fr8eOPQOEUjm7QDE4+3dDWguTZMZtAjFUMU
s8SvijOxqe6j6Y72NrQuW9ZvRGMsKqNk37YX5MLQV8t48+02WEl+G3hoijF8
9iGbFZ0vEZH0V1R/wya0qp/Q3DVSipXrIk9/CUslZYtPA56tk2DssA5j/R/l
CLeRf7znfCUdWjclURojxfaKMztOy47T3G77LhndFtGLG8ZNIQlNeDJ9+Pkr
sUVIFulWmW+qIzXpKZ+6Zgmue1y4mXtAgm2jnY42fBaRz9MlpweV1sB22YsJ
HfJpuKhy0DNyZjnlO3sX6B9rQfektJNn054hPG1QZGjqM+pbf+LXWrEM3uvL
l00XPleVxGz0jL+SaMZh2zeau6RYVdgQHz6/AXn469KYCWWUP7k6tj1YJOyl
4U6No4rxPFfvYvGtStIJEJ1/KG3E/GHTZL6hMXgQYPxbST+VLDRUinKEeeLU
ej/CKbMC8rNSbO9fjqTf+pnyDidaMEz/q78oqAE5p11O7swsoK5eV1uWCPu4
2vry06+qa3C/6sv+Vb7VpG0erqGoVQ/Hs6qHUlISYGiSs0trfg7VXBUvXia8
j9qza+clzcnGxJqAiRTnQ4GRg+aNHSDDFy27RT75DfiSnfzEyzGbZh6XyI8T
3v1Tnzvm7bSow+H6geMsR9dQNTmcMvIUIcX8WpzutmpcMzbDl63VlDW4pPfh
vg1w8FdKNTMSzmt80PDRSmlkclxXbqFQT8M+QQ5aU8Q4bNznZ4H9FXxqGVOc
IfRh2rhtmvl3JHh3+eHpoO55VJt1cce+9HqY64vKBh4RwTa4uEx3dCUFJQwT
zz1bjzLr0OSA0Eokv/pQMf1YLm1Ov5qiJcznveEHlIOta1Cwzlc0t9KbSoYE
1A8+0wy/+Cs/3j+WoP9uzaEHHdLIaeJVF4+iBiyW993WbbcYjw5aOLxcUE6f
L7f2GbGqHlV7DB5kPqtG5YeeL1NnlNDwc0MtsoW8sc160YbYVxVQ1T/Zedk6
nMqebfj3kpBztvja517aL0GxqUXh9u1P6IF/2JNOd+Ee1fftrmtdixs/Nsh9
+LeU1HVe/3wg5LFu/V/WF9+uwbSAfJu+TlWkNre1X6WQ326497ug8MGZDrhv
CHT+/pC+R23pf++7DC+MPQYOWZ5K012PPisxyCGao/BrnmsbNp4x2jDDPp42
OxoOtskUU/L61ep+EY3or5Z2JkHIY101e44MLqgk84VrbdpmteD18k/Ny1Vd
4fFmjt/VsGRSKFr8OD9chp+qWZanpybQ6THaJ7NzM+ici+35x/Nk6Dau0/Hi
rBQqni89ckevmtTOLtT2v9kMyy3WiWtve2NMR+dtx60iOui2KudpSRMKN12y
scgJhPefX1tbBmbTwIUzVKi/DP4YOTxTLZTionOD7nxNIp/iT2Y6iTIYL/a8
fvt3OskGaGZPNS+hCdJvN9J7tyJqku0s+QdutMt/udybmFqabVCw1PufRvxr
Yd/tnbAn3q90VbdTKqS+yjdcr+u0QXJj9fyQK8EIGOw+XvFcMOWMa9yj1S5D
m5Fv/hClEmqxe3Q8bPpTbN++1sLUpxX77YwOzPQoptlVVrfWbSylo9dizqyQ
NkGSeDNiZEQeUpzVPx/sLqaM+fbBO0iKEfqKpp5pJdh3YdST/+KzqVpeI7NN
uI/TO3XEy26l0u7jjzWXvrsM832DWjM8he87YlWtQm0pHS64pmF+IYcsw+on
HVMX7m9hcnSP/DAMilzzt+FsMXlOnLtgjFETVGwjXs7sXY7Q1Z+TLMyKiHLy
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
B+Z1xHkdMa8jzuuIeR39v9f9HzUeDNc=
         "]], {}, {{}, {}}}, Axes -> True, AxesLabel -> {None, None, None}, 
      BoxRatios -> {1, 1, 0.4}, DisplayFunction -> Identity, FaceGridsStyle -> 
      Automatic, ImageSize -> {180., 166.74088966451538`}, 
      Method -> {"DefaultBoundaryStyle" -> Directive[
          GrayLevel[0.3]], 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "RotationControl" -> "Globe"}, PlotRange -> {Full, Full, All}, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, SphericalRegion -> True, 
      Ticks -> {Automatic, Automatic, Automatic}, ViewAngle -> 
      0.42769327351158737`, 
      ViewPoint -> {2.0011519684188976`, -2.1175975311899693`, 
       1.720805478603359}, 
      ViewVertical -> {-0.34928925607862155`, 0.3696141412626785, 
       0.8610356567336199}], 
     FormBox[
      FormBox[
       TemplateBox[{"3", "14"}, "SwatchLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30100577`", ",", "0.22414668499999998`", ",", 
                    "0.090484535`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19699838300000003`", ",", "0.252204821`", ",", 
                    "0.33320940200000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               Graphics3DBox[
                SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                  DirectedInfinity[1]}, 
                PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
                0]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     Graphics3DBox[{
       GraphicsComplex3DBox[CompressedData["
1:eJyN3WGSHcdxLWA86MmCZFmGNJApgUPqTgsChyA4xA7eXcNbwYQj/NtbuEuZ
pdzfXsUswaYoihIpw45AnYzoLydjhD8ddZBTtzq7Oivr1Knqq3/99///b0+f
PHnyHz978uRHT/LvP//fw9cnx4fLz8BTfg6e8gvwlH8DnvIleMoH8JQ38JRf
gaf8Gjzla/CU34Cn/BY85RvwlN+BW578Lf4MXP+LvwDX/+KX4PpffANP+dWA
vwbX/+JvwPW/+A24/hfXr1N/t6z988H+Bbj+f0b5crA/DPYbeMqvwO3/2l8P
9m/A9f8zyjeD/bvBXv/pf/HH4o34C3D9L3454IcB38BTfjXgrwf8esDfgOt/
8ZsBfzfg+kn/Gz/slz6Pyd/W/xtw44r1H8D1k8/jFbj9/wXla3Djv/W/BU/9
N+Cp/x24443jYfwh7vuv/8UfG2/FL8H1v/gGnvKrAX8Nrv/F34CnnrcDfgOu
/8W9b/3vePjs+LD988HeuDLlO/6e9ofBfgNP+RW4/V/768H+zWD/drC/Gezf
Dfben/4Xtz/qf3Hjt/4XfyzfFN/AU3414K8H/HrA3wz42wG/GfB3A+596P/g
9v+NsvF4GieNRxtl+43PYxvKuZrvBzevDJ72X4M7TgZP+9+Cp/034Gn/O3D7
ke9D2itufqb/xR2f9L+476f+F9+Gdr4a8Nfg+l/8Dbj+F78B1//itkv/O195
dnzY/vlgbx6g/x0PLwf7w2C/De0x3ns/2l8P9m/A9b/tuRns3w32/r7+F7e/
6H9x8y39L3454IcB34bffTXgj/EN4m/A9b/4zYC/G3B/R/87//a9NP44X3kB
7vhr/ZfgjvfWvw31m79MvIL9aZpvWf9bcHkF638H7jzV+XDqE3f+rP/F7S/6
X/wSXP+Lb0M9rwb8Nbj+F3+MbxO/Adf/4v6d/pdPenZ82P75YO97qf+1vxzs
D4P9Ntibj9v/tb8e7OUVJr5Tf2n/brB/jA8V93nqf3Hjn/4XN1/Q/+LbgL8a
cOej+l9c/kb/iz/GN4t7lSe1Xt8beSjb7TjjPF+/mJc5j9LvG7h5qs/VvMc8
wH5j3DfO2i+nOPKY37WT/5c/dXyQ/5efMp+S/3f+7/xD/n+aX+l/cfNL/S/u
+Kr/xY0vj/l1iitTvJf/l1fVXh5T/zufkP+XF9B+A9f/8lXy/+a12k95nuPo
5Cfj8mPrJ/p/+ntx+X/5VucH8v/2f3H5/4kv0P/i8v/6X9x8Uf+Ly/8/5qdp
nJzylymvnPJ9+X95WOuX/5fnsv4NXP87r5vm4c6LpvswD7Z+33vzjMfWQ/S/
uPy//hef2iH/Lz9rPfL/E/+l/8Wd/+t/cfl//S8u///YfU9535SPGx99r6Z+
oL18j/1fe/n/iWeceDr7v/bGP+O/9vL/032YNz+2vqH/xR239L+4763+n9on
Lv8/8bn6X1z+X/+Ly//rf3H5/8fuY5rHTPPLad4/8TETTzbxlxOvPPH9XuV5
g8tLBpdHCy7vs2Fn/HNeHdx5oO2d5ovm2fZ/+RX5/2l9Wv+Ly//rf/GNsv4X
l//X/+Ly//pfXP7/sXZN8/KJLzH/Nv5oP+kM5P/t/9obP+zHtkf+3/6vvfy/
PKbtkf+ffkde47H1B/0v7rxI/4vL/+t/cfl//S++Db9rv/T+xa1Xvtj/972x
/0/1PbbOoP/l/yZeduLLzaMdf63fvMNxborL1i//b7+0fvn/6SqPbP2+N/J0
j60n6H9x+X/9L+48Sv+Ly//rf/FtqMc4bv+3Hvu1/rUe7eSXp/9/bN1A//tc
5TmMP9o7v9X/2ptHm7dpvw328v/2f+2NH/Zj7eX/p6u882PrA/pfXN5N/4vL
O+h/cedd+l98G3DzDvu/uHHaeCFuv9a/4tP1PTz0e67ypD8ZyrnG/h8+XE+/
2NunXLg86wX1X4DH/lcfrud/2dunXDg81ukl7XkJHvvffrgeP93bp1y4PMEV
7b8CZ157v+3tUy6cediZvDXlwpf96fcfrnfkWSkXTp57Ii9IufDYf/bhess4
lnLh5BFH4m7Khaf9y/5AnEi5cON0+u0zyumfwb/e98fC/0a/C/7LD9fqV8/2
5eo/Cz/9et3Xp3v8mL+/2uNPll0992f7cj3f1OPzXfjdsq/nlfb84cO1nsuz
fbn8n/v64sP1wLh3yN/Hr/LI8TN4+Vn7C/B1LT/DK5efwcvP8tBX4Os9LT/D
W5SfwcvP4OVn5t/lZ/Lio/ma/dw8On5+QTl+Dr7K5ecXlC+w/2EfLwv/fh8X
C//xav+ne/z081W+wn79ffn5xb5cfn6xL5efX+zL5ef87sJvmWfcrvqP5L/H
VX/5eeGH/F78Ki8cPwd3XHMd7wL8O/xM/eXn4E9Xez8FT/1X4OtafoZXKz8v
vI0L8BDl5+DGDeovP6f+hZef5Tni50vK8XNw43Nw43Pwb/BzcPtz8G/343nh
f2HcDr7qLT8TR8rPC2/xeeEtPi88z6X8vPDWnxd+Xvbl54Uf0r74VZ43fgYv
P2t/8TBefraelw/j5WfrvwInTsj7nuUjF15+Bi8/g5efwY/OdxdefpaHjp8t
/wQ74/NG+QL7VS4/b/ty+Xnbl8vPG+WrPZ78ufyc65/3eWXhP/pwLT/nd3+2
rvJhK1+6hac5Jx7DH5xWnCg/p/3GCXnb+Dm48VkdxAW48wjGpfJzcOcFrrNd
ga/xvPw85O+F/7DP021/+Tn4Gn/Lz7S//Bx85aXlZ9sfPxuv4+fgxufgxufg
5s+v9+Xyc8Yh8+eFt/w59S8/lJ+D25+D/xU/5/qn/byn8NWvys9pv35O+z/6
cC0/p/3mcfKw8bPzsF88jJefyUPLz+ZNLx/Gy8/qIK7AmZfYnvIzePl5mF+q
/yo/285B915+tv3xs/l0/Bzc+PyG8gX25s/BzTeCmz+nfvPn2P/fD9fyc3D7
c3Djc+o3Psd+4eXnXP+4n5cX/n8+XMvPqd95trxq/Bzc+KyO7ALc/Jn6y8/B
n364lp+t/wp89bfyM/WXn4Mbn6m//Bx8Pcfy88B/FP7Nnudo7Y+f5Tvi5+DG
5+DG5+Dmz8Htz8HNn4ObPwf/bs9vFW5/Dm58Dm58Dv7Dnn8q3P4c/L/xc67/
Bf8ZntT+DF5+1v7iYbz8bD0vH8bLz9Z/9TBefvZ3B116+dn2yEvD87V2Drr0
8rPtl2/Wz/+9L5ef04+NGz/s/V5+/n7Po5Sf/7r3e/k5/di87ru938vPf97P
A8rP3+79fkee0ebd3+z9fktcbjzS13u/H+zHxInTT/blxt/L0yder/hffl64
+fPpx5Tj54Wbb5xWfDyvvLr8vHB58tOP9uXy88KdD56efrjeLh6j/Lxweezc
Z+NFc//wdaeMH1+u/4+f/3mV7c/Bic+uk5Sfg5M/n/5p4fbnhZs/V55hXhcc
/vn0jwtf5fLzwuU3kme0eXfyD3ik00/X/+vnhcs/V55BHne+2JcrTtBP49/j
Bffn+pLrSKt/572p9aKF5/nUulDeh/W8ys+xlzf6JeXl59PC5euOsV94+Tm/
t+qJn8+Zfy67+Pm08NPnH67x8zH2Cy8/r/mM/TnzHOPzMbjxOTj5s+t45efg
5M9H1mHKz8Hhn8/rfbA/5z0xPh9jb3xeuPxz5oHySKeBf655IPPs88f7cvk1
OPH5uPAWn2NP/nxOnCCvc120/Jz/T3yNn+Gty8+/pRw/J74vvPy88BafY0/c
OK/fkxc9wUuXn9O+VU/5+XerbH8OTnw+ah8/Byd/PrNuXH4OTv7sOnP5OTj8
8/mThaccPy/c+HzEvvy8cPnnMzrc8vPAPx/V7S4/31/ty/HzOTjx+W7hxucT
63jx8+3CE0crj4v9+vv49xD7PD/X512HX/lH4l+tt4cHXu9ZravHPn7N+jm6
61onT36zrrUevsq571r3jj1+zXhgf85zMj7fBSc+px+YP98GJ99IPzN/PsTe
/Dk4/LM6iPJzcPiNrKM47876k/xz4oU80nHh8s+1jgIvahwpPwcnPt8lrhGf
kw+ZPycOmj8fY0/+fIi9+XPs4Z/vk8cx71ZXUn5OXFnjb/l54J9vU59+hpcu
P8eece/+s317ys/Bic932sfPwcmfb4Pbnxdu/nzAvvwcHP75Ht1N+Xngn9Xp
lJ8H/vmWdfLy88A/H7AvP5PnlZ+DG58X3uJz7Mmfb2NP/nyMPfnzYeEtf449
/HPy2tafg8PX3QV/j5/hpcvP1/v2lJ9jv+6//Bx75iX3X+zrLz8HNz4HNz4H
J3++pf7yc3Dy54P1x8/B4Z/v0XmVnwf++Q6dUfl54J/VkZWfB/75QP3lZ+bh
5efgxueFt/gce/Ln2+Dkz0fqLz+nfvPn2MM/32cebH+GNy4/Jy8zPg/8821w
eFF1eeXn1A9vdP/V3r78HNz4rH38HJz8+Rb78nNw8ueD9cfPweGf79EVlp8H
/vkO+/LzwD/fYl9+HvhndY7yofX/6nLDp8Lf1fNEl5t+Id9UvIy63NQDP3Ii
/pV94jfz+fix6XLjR+afNZ9Bl5u8yflSnmvT5Sbv+Ht1uase89Ej/FjZJ98n
f0q71eVmvuV4H780XW50VcO6b9Pl5v0hnua5Nl3uyg99/9Nv1OVmvJ76a9Pl
5oout+zQ5SZ+qMut9wld7sn+Fh1s8iB0ucnv1OVWvqYud81X1OXm79Xlnny+
ua/wsKyjh+dQl1u8g+t/ix9Vl1t8s7pc4wN40+XGXl1ueAF1ub6/4E2Xm/tX
l7v82HS5vl/gTZebebO63OjphvM0mi53XZsuN1d0ua0/k5ery612oMvNeKIu
N+OPutzkBepyK19Tl7vip7rc1p+ZF6nLrfmpeouPuL/Uv3gydbnhNdXlFt+s
Ltf+nPion93fpi73q/19WL+63OSDTZeb+tXlLn81Xa79ObhxA31v0+Wu9jVd
LjxS4cv/TZebK7rc1p/D+xmf814Zn6Nr1c/Rwdqfo5td9upyK19Tl7viubrc
1p/THv2c+zI+p/5lry639efUr/9Sf3hidbn2Z/CmyzU+gzddrv0ZvOlyU7+6
3OWXpsu1P4M3Xa7xeeBFxZsud12bLjdXdLmtP2/7etXltvi87dutLrflGwuP
X9Tllh/V5X7O/6f9eY/Q5WbeqS43fIC63ORL6nLDn6nLDa+pLrf4ZnW59ufk
8fpZXZW6XPM6dIXqctu8QF2tutx1/02Xm/eIv8+43HS5uS91ucv/TZfLOmzV
v/zfdLm5ostt/TnzK+Nz1imNz+mv+hk+Ul1uy58zzpk/p7z8oC639ee0Xz+n
/bkvdLnpV+pyW39O+/Vf2h8eV12u/Rm86XKNz+gumy7X/gzedLnmz+gNmy7X
/gzedLm5L39v+avpcu3P4E2XC//a9r+hy23xWb4QXW7Lnxfe8o08D/PnxAXz
55RXvFWX2/pz2m98TvuNz2m/cSPtT16ELje8prrc4pvV5dqf41/9rC5VXa55
HfWry235s/Wry13303S59ufUb9yg/qbLXe1putzkRf79ut+my80VXW7rz+mX
xue8V8bn9Ff9nPu0P2cd3vw5fjR/TnnZq8tt/Tnt189pv/E57TNu5O/tz2m/
/kv7w+Oqy7U/gzddrvEZvOly7c/gTZdr/gzedLn2Z/CmyzU+gzddrv0ZvOly
PRdCf6PLbfH5b8QbdLktf/5+P96qy23581/IN/9eXa7zlG/3PG3T5Trv/mbP
uzZdrjzS13setely4UVP2qnLpT+f1rps1q+aLpe8LutDLa+LLpd847TWjaIv
aLrc7cNVXW6bd2fdi/ng6emyX/xn0+XCY2d9rvGiWbeDrzs92V+bLtf+vHDj
c4sf6HLNn0uXa39euPlz6XLN64LDP9e6u/154fIbpct13h0c/rl0ufbnn+6v
TZcLL3pmXVxdrvlGdLm1Lq0ul/gcXW6tT6LLzTqzutzoC5ouF/651vvpz9Hl
ytdFlxsdXNPlwm9El5t2qcvN36nLPern8KT05+g/jM+lyzU+L9z82fFQXa75
89F8UF0u/HPpcunP0d8Yn0uXa3wODv9culx4pNPAP5cuF170LE+tLpf4HF1u
i8+xJ6+LLte8zrxDXW70BU2XC/98Zt9y0+USnxOXW3yOPfxzdLnyoid4aXW5
R/0cntT+vHDj81F7dLnmz2fyNXW55s8tv1OXC/9culz78yf7a9PlGp8/2V+b
Ltf+PPDPR+zV5dqfo8s1PkeXa3w+MT9Wl5t4qy73RL4RXe7BcZA8Wl1udG3q
cqNPVJcbXWrT5a561eWmXU2XS3+OLvegn8OT0p+jyzU+ly6X+Hyi3U2XS74R
Xa75c+lyzZ+Dwz87X1GXK79Rulzm3dHlyj+XLhceKbpc+efS5cKL3stTq8sl
PkeXa3wuXS55XXS55s+ly7U//2F/bbpc+Ofocp13Oy9Ul3unnwf+ObpcedEj
vKC63IN+Dk9qf1648flOe3S55s+ly7U/f8ZVXa5xIzj88z3zaXW58hvOv9Xl
yj/fwqeqy5V/Psi/ostt/Tnx1LgRe+Nz8l3y5+hyzZ+jyzV/Thxv+XPK8M/R
5bb+jG5OXW7NK9Tlwm9El5v2qMs92Z+v99emy7U/f7Gvt+lyjc/hc8mfb6lf
Xa7588H61eXCP9/D96jLbfEZvlNdrvyzfJK6XPnng3wqutzWnxN/jc9f7q9N
l0teF12u+fOR+tXltvw5Zfjn6HJbf4ZXU5fb4vPAP0eXKy8qb6cu96Cfv9rb
q8tt8Vl7dLnmz7fYq8s1fz5Yv7pc+Ofiqe3PA/98h726XPnnW+zV5co/N35U
PWP4vEG3287tGPiS4lE8t2aYj9Y81XObhnx/2p9XZcb5yrM8B2oYr2oc85yd
IR4cWA9o55rAQzddqedDTOcTP8M+PO5z8PCInKfZ/O++50vs4TPK3u+deD7c
qz1e+/Ze7/Ha33a9xyuP4zyj5n/3nchnuH4w6ICLF/3j3v/tHAP0rIU/H+rx
3FL8H/xM/2/2h8F+w36VS4ex8JqXvB7srwd7dfSOt7Gn/zf7d4N9+r/nnbgv
2f4fPPz9c/DwwS/A0aG3dYZL8PDWB3DOJ2jnHb7a4yf7f+yZb5W98Uc9kfla
6nHddZqvoLMvXvRPe/+778Fzoo3/tW6A/1s9vxl+9xI89R/2uOdzqF+Ln2of
QnD3bRD/274FdS6p5+1Qv3oN52fDvgjXCdv5Scaf4D8Qf4JnnWo4J77ij797
CZ76D+CpfwNf5Yo/8DdP4BvqvWB+rO6k1e88L/XIN8NXTftYihf9897/7RwD
9ksY/1s9nkeI/5v95WB/GOw38FV+Ak+mXq3ZXw/2bwb7t4P9zWD/brBPPHbd
231Nxn/3OT0Hz7jg/ub8/W/AE+fd388+jLbOtoH7fTLXi9QV+t0m1z3Ubfk9
G/l7dTGTDhr/1fP4y97/7htr52US/2tdN/70/GPyn9rnhp5e/bvnZo3647TT
/Te5L/cxpP3owav96mr5/lBrvzovvr8y7etTx9HOt3P8Df50XZ+Dcz6Z+2Bq
/GV9ssbf2LOe1vYxbtjj/3ZfrG9U+6/B0/434Pi/tf8G+7Sf+bf7MGs8/n7v
f/c1uh/P+N/q4dx//d/2kV4O9ofBfhvaw3pRtWc4nyH+b/ZvwPF/a496Or5X
NO2bbbok9+Wa/wT/bu//wn/Y+7/tn3O9Pfm8eofEedczh30U+r/dl+dvfbf3
f2v/G/C0Xx1o2g/fXO1XZ8d8qOZjf9v73323fmfF+N/2Xbs/kPyn/a77Gsn/
W/3bUP+roX7OOTP+t/qH8xzi/1a/+tDUD9/vvvSms3Pfu/ln8Mxb1TcN+zZb
/unvXoKnfvctDfuO9H+r/zV46ld3P+jm9X+r/wY89asb5RyBdh6B5xTg/4aj
1xv30+L/Zu9+O/L/Zr8N9q8Ge/eLEP+bvfsZ8H+zl2eOvfrc4fzWlNv+7+Q9
nEOTcttfm7yHc5hSbvsXk3d6Dln0t+4P2xbO+Vkpt/03yTs5nyjltr8heSfn
v6Tc9OPxa/wGD1znhwYPD+R5l9HNfYx9xtHfYZ888go859L9fo+nXDoG4kid
hwUPXOc3pf6ss3PeUMq1DkccqfNc4IHrHNXwq9E/frTHK55+jD37wrWvcwAX
Hr1P9DGOZ3XOGnxs9AfN/vM9nvXqrO86ntU5QfCxd189bF/nnMqXfgyeedPv
wHOeIecYVl71+z1e+qA/YB+/fIY9+/9afqaOIPWoZ4x/v8I+85PwR54P/eke
rzzpao9HTxedk3m85+WlHB2JvOItepPEqazTt/q/HOp3X078GV03vF/p3oKv
ftDOT4wu7A/Yr/bU+XTwckd0dukP0Rm0+r/c41X/V3s89ZcOLs8t58v9fo/X
+Mp+3Mzjo9dp9p8P9l8M9l8O9u5/Wnjp2wY9cuOXPgOPn9S/hK/4Ajy/r74g
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
P2yD/bBv6CC/F/th39BBfi/2074h8rrSK5rXZb2BvK50ceR1td5hXpf5Bnld
zefN6/K75HXJp1telzyevK7um7yudDLmdeE5yetqXkpeV/k3eV3Vb16X+yKv
y/yw5XXhu3/1sH3L62L/8mH7ltcFN69L+83r8hzN6/K+mtfl+ZrXJV6a12Ue
a14Xv5HX1fexzevSH8jr6vvw5nWZ95HXZR7a8rrMh8nr6nxI8rpaNzevS38j
r8u81Lyu5ofkdcW/mNdlXkheV1fPGYgfNupP+83r8lyeHnd45rctr0v/JK9L
nGp5XcYJ8rpcW16XeTd5XZ57y+uynj2ts5PXFZ+47ret/5LXVTw0r8tzJ68r
3tO8Ljh5XV3N69JPNuwSZ8zrgpPXVfvN6/LcyeuKjzavy/tIXhcereV10XmQ
16X+lteF7yCvS/0tr8s6Lnld8STD+rJ5XZ23Sl5X6xPmdXnu5HW1zkleV7wP
eV2dw2lel+dCXldXz30Pvj1cf8vr8v6S19WVvK7qJ68r/5jXpf3Dem7L69Ke
Yd225XWxH9ZtW16X9c5h3bbldbEf1m1bXhf7Yd225XWxn9Zt3+/zusrz3pPX
8X2hhr/f53WV57GfOXlD/b183Xvyum/29RROOwrPfpAL8B+4L/m01Bf8u/39
t3PVLh62P0983Xvyum/3v1v41/vfLZzvQYmfzeu+3t9n+908L/m6PC/4unpe
8nUX4O4TgK87DXzdceLrsu9re7idhdMfCs88+gKc/lE434EpPhA/Fo5uuOqh
/Y3vSn9Gj1j92XOWLsCZtzS+znP06B/tnKUr7NH1tva/J6/jPSqc/lz4d/v+
XHjyV85hnL7PEzz3VfXkvKkr8J/v78t2nsnrfH8bX4euosUN+S7P9+R9aftD
X4Izr2vnBfG9E3Xbtt88Pu2/I68zflaeQ5wvnPex8HyvzO/a/bCPY4V/t49j
ha/3In4oPO/7FfiKV/FD4fih8BXn78zr1vhyIq9z/Gp8lOcaMw62/bkX4Iwv
ja97Cc7+llb/1cP28Y/1n83r6CeNb5SvW/d7S15n/lB5CXxT4cSTwnm/Cmd8
nPidwr/dj9OFw4OI13yees7kdfndO/M65o3e1615HfOHyW8Vt1xn9Xx49HXH
ab3TfWWx53tf7Xz4SV+3Yb/KNd5knFk6hIrLnNtTcSr1L36j3k/O7an+l/r1
L+f2lN/Svz0XOzjjl3lr+Y3z28tviRPRXamv83xW8qDyW+rXb3mfote53uPR
5xnH23ub9qz5bPmNcxNqvEtew35Rz+Gp8S727KNr566jrzuzj8hzeGq8y7i0
8BrvsC9eI/au68Qe/zjuHexH7i+Nn+SX07/WuFb9JOOD+9/47p/5busnqce8
J3lZ9FvmGfaTjOeOE8lb/V5W4rTny6RfwHe388bR1x1dX+dcneIvMw5wv+1c
nes9fsf9Wn/xFOj9cr/WX/05/f3p/r4K/2h/X85LzOPD31V/zvjmvpTkC/bn
5FncV/VH7qvycXRp9dzgzT0np/IK4trd64ftK6/AvuIT9sUzeW7PzcP29b6k
f8Gb1/P5aN/Oum952LyXH+/bWfW7npr6zT+Sd8C/V794um+PepW0p54DvKp6
lbSn7HP+kvo69q1Vf0x+i74ucazeo7yX8pWx//X+d6u/4Ofq7z/e19/0Hujr
zAu1r/ci9yHfmveJ7+dWP+V7u1UffKV6gOqf+Z2sj8LXHclXahxE795w+LoT
47frsPJ1J/YtVNzmd52vyNed0WdXPd6X66TydX5H2/MK5OvQPbf64euO3FfF
N78Pm7iOjlxcvu6MXrn9rnyd+xlYh218nXp31mEbX4fe2nXYxtd5bub2cDud
X8rXHekP8hbydSfyB8dF4/6ZcaraSfvbOqZ8HX5u+5fl69Drt3VY+Tr05W3/
snwdcby1H77O96hwv9eWeEh/rnjLfdW4zX2Jy9fVvg75Or6naTvl63x/2zqs
fJ1xw3VM+Trel6a7lq9jP0Dbhytfx7hr+xtft3D5OuNnjTs8d+d1zlvO5vfU
0/g64ljVQx5Wv8t+g6qH707W7+KHqofvTtbvJo6pr2P8auuM8nWMg033Ll9n
nHcdVr6OfLTVL19HHmb9ja+jn7R1ZPk6vhfZ/ANfd6RfVb7G+1X5kfPA4Pit
6mG+Ub/r9x9TL/tSxNs8AL/5u/J1pYuAr8t9Oe+v9XH4Ov1W7yvvYzt3Eb7u
nvHR/bDydbfsa2rnLk7nbG/Yq/PO+Ol5FuyHla/LPKvxdepWE9fXOkLj61yv
TN5h/pP3m/HL8VC+7sT4VXGUeWDlC9v6/Y3fZVyv5+86VupBx1Pt8TsN5PuN
91/rFPJ1J9Zl/M5z4+voV20/rHyd413sVz7W+Dp1Zrmf7IeVr/Ocjtgz73Z/
q+Nei1PYy9eVvhS+7uh+v+Sz7ruLv5nPO2+Qr8v+aPm6s+8X+2fl6+Ifx7GT
OubU7/py8nHG93aOH3xd4k/j6zxvKPky99v2qxL/1IFZv3xd3q/G13FeW+U1
7Ies8Rz+xflcW3e3P8ev2Wfue2Z/Tv2/299X1c+4WPWzLuO+1sbX8Vzcr9r4
Ot5H7Rtf5zkj7oeVr3P9KON89mkyjuW5yNfdym/neboezL5987LEefm6e+Zp
lc+Sr6pDlq9L3Gh8HXlb1U++og5Zvu6e363nzPfZa76VOA9fl/FRvk4/l27W
fafqeIf9sI2vM7/P72T+ZZ77+b6e8je/W/7me/LqPOXr/jd/+x+FQ5Eh
        "], {{{
           RGBColor[0.880722, 0.611041, 0.142051], 
           EdgeForm[None], 
           Specularity[
            GrayLevel[1], 3], 
           StyleBox[
            GraphicsGroup3DBox[{
              Polygon3DBox[CompressedData["
1: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
uy/WVmMpuxfWsshryKVct4oaG9k9uOYcL5/dm2uBy2X34JrhL7L7jNsZG19m
13Jf4+rJdbrm9h+i85Uy5/fRuVFZ8UfcrOB8+F10PlH+/CM6cyoH/RWdSZQb
/4zOlsqBz0T3Y5WHxyRnbz3v16pXVfD1vy6556b5pEpyX0734rLk+lE12aXJ
/T1d/0uSe24aA99GZxtl6UrJ/T3dr8rJPUDdxz3RuUsZ+3Nco+C177PoZ03Z
8oDkzKZ8cig/AwvOCf9EZypl4P2Ts5bWrH2Tc51y9yHJ/VvlBC0EypPKsSWS
c6ny7fXJvUGN1QOT86fWu4OT+9LKG99EZzzl/B3R2VJzw+7orKu6YFd0blSu
3hmdG5XDD0rOusok/0ZnYOXnv6NzoPL5f9EZWDm8tjJEwb2yG5L7nJq370yu
l9VnHphcR6tO6pdcL6ufOSC5jlbvqH9yfap+db3kWk99s7uS63H1pYfqWhfc
s+qbXBerp90ruabT3HVfch2tvuK9yXWu+o33JNe26hPentxXUf98SHJNrZ5Y
3eT6UX253sm1oXrafZLrOPW06yTXm+rXnZPc01Bvo1Ryn1/r8kXJvWLN4RWT
e7yawy9O7v1qPqmaXLOrT3hTcm9cvcTTkvcINF/dnNxDUB18Y3Jdr55qreT6
V33CM5L3CzRfnY4HFTxHXZi8Z6EMcEFyH15rd3mtowVngArJPXCtO2cn7zVo
TT8zeW9C89tZyXsTyhglk/cglDEC7lpw/bVfcn2hmu6T6HVBuat5cr9O2bVp
co9FvZYWeHPBdcEDybWz+k+DNV8UnPmv4WdewRlySnQeUwZoltzHU1bsWjyu
1KfpltzjUmbeFD2nKdO+Fp33lHVfjc6NyrcvR9dfqrOOK76PqrEe1LNXwufT
HX9acCY/Prlnpdrk6uT+pDLtVcn9TNUapZN7TaoXTk7uMSrnn5LcH1N9cXnx
PdVcVCO556kMXJOfNQVn3ROSe2Kqj07lZ0zB8+0tyf1SZeNXoutKrdEnJvcD
VXecn9wfU/1yXnI/TfPzuclzoMZqmeT+mGqWK5N7pKq/rkjunaomOim536ha
qRw/kwuu3com99lUB70UXc8qP7wRvRarHtwYvdYrg62OzgPad1iATy64xz4v
Ogeq9z49Omspn0+LzpDqbyyLrkG07zAjOlOpBzI1OtcpB86Pzlfad1gRXXdr
v2NVdJbQnsjH0Xnp//VRdM2onvni6JpRPfPnomtM5f0l0TWj+ucro7OK9kqW
R/dDtPexNLpnov2R+5P7e9q/mBmdD9UDnxudgbXXsDU6v6lu+jA6j6mW2RKd
r1SvrY3OPNpP2Rydc1RHfxSd8VTHvRidqVQTvx5dv6junh2daZWHP4jOeKrF
3ozOTqrd5kTncO0NPRudt7W3Mis6G2uPZlt0HlNduSY6U2lv6P3obKlM9xa+
quBach0uW/Ce0ejk/qf2XD6NzoSqVYcl9yG1B/FudE9YufcdfH7Befvt6H6v
svQifEjBOXlhcR9M9+W94n+7zmGv5D07Zaejk/f+lJFS8h6ics4LxfdU12oD
PqXgnN82uW+vvZgOyb137W+2S+7Va0/ttuT+vPba2if37bXXuT66B65a4Jjk
vUXlrmOT13HNIfsk72kqdxUl7zkqj8XkfUzlui/5nqsLrhd+id53UO76LXp/
U9ns9+K1W7no1+j9UOWxL6J77Krpfsa3FFzH/RS9B6Gc9lV0/1913NfF904Z
YHv0HoFqupycu5Q97k7u92rvbG/cvOAs2jF570P7y4fjbgXn6iOT+5nKn0ck
7/UoVx+WvNejGuGo5H1Y5dXOyfsm2muultzX1brWSuO+4P2mW5N7ttpr65Tc
n9dec6PkHrL2p1om78to/6tHcj9f++/1k/vG2psbkdyj1n5fw+Ses/aqRiX3
sbVveEdy/1l73F2S1yatI22S91+079ak+Dy1ZrVO3tPRHlxPPVcF7++PTO6f
a7+yQXKf+f/7gMk9be2XDU/u1Wvv8n8XPFci
               "]], 
              Polygon3DBox[CompressedData["
1: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
unJ+1q/i9xjzVyzZo+aCI5voiRNL9KpnQq9HT8ON4z16RXoCPkvPRO9Ez0Cv
SU2tV2OMVWvrSejlGBP0Koyxekt6NsZeY46xx5ij12BM0TvSwzHWGGP1nvRE
jL2H8t4XldRM1k7GOGNvv05i3x6Mn1LiEekVOafObe9OtIhz7tw75+Zq94R7
wxitd2OMNHYb042dxmRjszFXbeqeMfYaw91LxmhjuTHf2G2MNlYb09Warplr
55qrTdxj7jX3pN6VMdZYa4zSezEnWqupkcyV5lRr0Ts7ybXmXGstNZC5WA1l
LWaNpra6uErtYg1j7W7O1UtRU5mL1VTWcuZMtZaaSa90RCdaypytt6KmMpef
WsUb0CNYpY7msra0BlSLmUP11o7pJLduWUXbq4nVxsZcY6+aSG/OHGguNOfo
dZkj9OLUiOYOa1BrUTWYXmz/KrW8Nb1emTW2tbY1kt61Od/a+rlOtIBnwrPh
mVFbeuY8e54JtZ5nwLPgGVLLbQ/3K6nZ1rfWgq8q8SA2MDfBV5d4DBvCa1bJ
ZeY0a1M1hdpiu0609U7wNSWexkZ1NKRe17udaEtrOr0ua3xrve3gviU18Xp1
arBr4ds7qc30XK5v19/11BM5r6Sm1CvZCr6wPQ8rw9vAV5bUqGu7P/j/8Uo0
k9pJj+T8kppb72RbuE9JjbtuHQ/mgpKadKV2P/Vv94P7Q0/ounY/6BWNx/j4
JTHT2GnMVmtP1Uks/8/DgL/rxNtQo6iFl+lEu5hT1QLmUHOtOdTawRxgbp2S
589ZolnVrnOqY0tqXmtfPZ5R7frrdZpz1fbmcHOxMdBYaAxUy4+zrijR1Gpr
a2hr6b3b9TTn693M3YkWUCOpldT41jrmfHO/Od5aV82qdlVjWhs9Yh1T0nOw
92BNYG2gxrUWViOpldRs1s5qTLWmmsJa1j2jX3F+lb1kjjHXqNnU8kuaB0t6
EvYm3I/Wpj3b/aeGaEpyltrCHD9JSY4y9+shbNXuX3sHegDrlPRE9AbUeGo9
NZFepxpJraQG1DtTU6mt1Fzfte+zRfv79QrUYGoxc4xepJpObaeHYe9FDbRB
iUepNrLmXb/EI7IWVhOtV+JBqZXMofOV1EjmVnsiL5f0OOyV2BN6qcSDtlek
ZlQ7qin1ytQIC5TUVGoHPTe9VD1cvTg9GL0YPUG9NnsiG5Z4xPZK1Kxbtufb
+VaDqkXVqHplalC1qBpVr0vPZN0Sj+6tdr+u0a63+13PZK12/fRSrHGWK/Fc
rH2scZYp8XCsffR0XO912/1uTbh8iYa0VtTTWKXEI9Tr0BNZocRT0CvRA1m5
xHPUG7En90pJz8lenZ7QIiWeiV6RGnKhkppQbWmNuGR7Xj1/apIFSzwYtYoe
09olPSi9Jz2EhUs8Hb0Fa9Cl2vP6ZHuel2jPp+fLmn7pEk/JWl/PYdESz0Yv
wpp42RLPylp56wmT//u1+cjzNq6Np8YXe5Svl/Tk7F2q4eZsz7PxSU04d0mN
rFZUs81T4jGo5dTM85bUnGppNd9cbfxRC9rTe7ekZ2ivT007Q4kGV+saD+do
45fxTw08XYmmUxurcacq0cBqX+Oz8VKP4qauaP6JSjSstYAe0RQlmlLvSE0+
WYnGV6tbA8xU4uFYG1gj1G08tnawRh6/jcfGfzX6NCUaWu1uPDQ+29O9pI7H
8H4br42P1gSzlHiI1grWELOVeETWFvZs32vjnb1ce6xj23xn/LMn+3xJz8he
rT0SeyX2ZOx92sOwl2EPxd6lPd+3S3pY9oLtUb9R0vO0d23P+LWSnqi9ZHuo
b5X0hO2t2mN+s6RHa+/ZHvarJT1qe9v2ZOzN2EOxd2XP94WSHpm9YHtG9o7s
+djbtUaZv8STsHaxh/tOSc/Z3q49JXtL9qDshdsTfqakZ2iv2B7ccyU9Qntz
9qyfLemB2su2Z2Xvyp6VvV57TPaa7EEe1+ov9a16VP2nB7FGGw+Mt+Z8tcLJ
VbRA/zp71T3/X/3S5Cw4h87lA03mxjlz7oY2mVvnzLm7oc7ZcM+792+qcxY8
I56Vu5r8FtfUtfUMqgVOqXI2hzVZC9fQtXywyVo6Z87dkCaxxzVxbe5tsjau
qWurh9qtzcfqx/uarLVn2rNtT+74Eo/TXt3wJmvhmfRsjmhyNt2T7s27m+w9
19i1fqBOrDQmGhuH1omNK5X4z3r69rbs8ej16/nbu7LHZS9gZJ3Ybs40d9rD
sPdlz8vexsN1cpk5zFxmT8DegHrcXrA9HuuT3p3UL+pl9Yf1kvr5oTq5zxxi
LhleJ7aaM8wdw+A1Oon5xv776/TzreGs5UbVya3mVHPrg3VyjTnEXPJondxn
jjPXPVIn15mTzc0j6mgBY7qxfWCTs+GZ9mzf0yT3mkPMJYPgDzrJweZiPQK9
Aj0Cvbh+dWKNMc/Yp6ett929Ey/9yjqxTI2iVhlcRc+r/9XL9lDsJdqjtbdy
eZ3YqMZR61jzW/uf1klvrk+dWGmMNFbqieqN6rnqlfv8se15Vy/aczqpxGOw
F6XHqdepp6qXbr1p/Wi9aH3Zt07sNiYbm/XE9cb1/PXmrZmtnXt10vvR47WX
0KMT7/eyOtrMGG2svqKONjPmG/uvrRNrjenGdjW5/eOzq2h1e9QnlNTo9q6t
Gewn965SS4xsEouN4cbywU20kZpJ7aRnrHesx2tv4Lo6sdwYb6y/Hp6jkxhv
rL+6Tm4zh5nL9Hz0fuyR2Nuwx2HvRP1p7+PSOrnHnGPu0UPWS9aTtZdxVZ1c
aA4yF91Xx3tQs6hdrFnsH55VpZa5pk5uM8eaa++to23UQGohe3r29uxh+W2D
PW6/NbFnYu/75Ca1jjWNtY09d3vv9nT9tsAeqL1de4j2Rk9qUltZI1krndhk
71lzWXud1aQ2tCa0NjyzSe1mDWkt2atJLWkNaS15dpPa0ZpQPX9Gk1rLms/1
OqdJ/LamsrayZ2nv0jnYuk5P096mHo/fnvRuUltaI1ornt6k1rOGc38MqaMN
1ZRqy9MY799JTeh82kO3l24P3m9d7Hnb+7ZH7rcs9mzt3brntq0TE42Nxhh7
dUc12dueGc/OEU1isXvSvXl4k7k3Rhur/SbBbxNGd/JtiD1We632rP0Wxm8c
/NbhsU6+RfEbCL+FeKKTb4Ps2du7t/7325Njmng7xlBjqd8A+C2APXy/LfKb
Ar8tGNPJtztHNznbJ5f0V+0p21t+tJNva/wGwm8h/MbAb5lOaVL7WlObT+2p
++2GZ8xeu3Piu15ZZa5urlObqBnVjrfWqTXUDGoHPUt7l/ohepkD6mhbNbfa
+9Qmtbua1vx5T51aQM2r9r3LnN+JJlYbD66jha0RrBXsoeq36L/od+l/6cfo
p+h32cPWD9Lf0T+5o442V+Or9W+po22ssay19Fv0g/SH9FPurFMbqOnV9rfV
0f7WVNZWt9epFawJrA0G1ald1PRqe+fcuXfN7HUPrKP1rQmsDe5sopXURGoj
e/r29u2p++3QgCZaSQ2llrqjiTZSY6m19GQ8G+dVOY+eGdf2iipnSU9Ub9Sa
2m+n9Hg8++dUOa96PJ79c6uc1xvr1ALWCNYKd9epXayBrIX+D5ZfgSc=
               "]], 
              Polygon3DBox[CompressedData["
1:eJwl1nW4FGUfBuD9aAEBaRQppUvpBukSkG6QbpBukG5QWuk8xKG7u7tTpRsE
BCT97tE/nnOd575+7+w7s7Ozm7JR+8rtIoRCoVMSWaZGC4UWRgyF9sHTetMo
oVBv1ov9wuaxXOyWNGfdWD+WUv/V3CJ2gJ1lzdlNaca6sr4shT7TXDg7wi6y
1mwKW8D2RvhvL43ZDWnKurA+LLk+2txkto7tYlXYDLaUHWYXWCs2iy1jR9kl
1obNZsvZMXaZtWXT2GJ2kJ1jLdhkNp/tYSdZEzaKTWJr2U5WlU1nS9ghdp61
ZLelBevO+rNU+nVpwjqz3iyZ/ou1YWw/O8OasccykI1n01lhfYC5oWwBW8mK
s/rsK1aRVWW3vXF1WGZWnn3HbrJ6LCurwKqwW6wRK8zqsybsJavLsrBvWWV2
gzVgBVgd9j37izVkBVld1og9Z9+zQqwea8xesFosOSvEirLTrDZLwQqzYuws
q8mSsYLsG3aGVWexWRb2NdvDarA4LCvLxnazt67DLnaK/cEG6OPM/cI2sr2s
BqvGQiw5S+nfNdbOYSvYcXaFtQuuOxvGFrJVrBjrx/qy6Wwhy8v6sj5sGlvA
8rA+rDf7lc1nuVl/1o/NYGEsHxvBxrJlbCMrx35k/dlMtojlZyPZOLacbWLl
2SA2nIWx1awEa8yKsAasKXvl3IayUWwJW8dKmxvCRrLFbC0rxQazEWwRW8NK
smFsNFvK1rMybDgbw8LZBlaWjWVT2Qa2h1UP7nlWkQUPky4sKvuJ/co2sX2s
JlvCtrDL7B7rxRaxTewiu8N6sDC2kV1gt1l3tpBtYOfZLdaNLWab2SV2l/Vk
C9h6do7dZF3ZCrabXWdP2SC2iu1lN9lzNphtYkfZQ/aWjWbr2EF2l71iw9kG
dpjdZ6/ZSLaUbWVX2H3Wm61ke9gN9owNZFvYcfaYvWdj2WZ2jD1i79gYtpEd
YQ/YGzaKhbNt7Cp7wPqw5WwH+509Yv3YMrad/cYesr5sn2RnxVhpdt/9spWl
ZjlZXnaZXWRVWGPWisXUj0o+VpZVZE/NXWJVWRPWmn2sH5P8rByrxJ6Zu8Aq
s0asJYuhr7a/fewW+4sNYTslPcvLCrLfrd3O0rLcLD+7yhawqCwOS8I2szD2
EYvPPmNb2Q6WjuVhBdhvbA/LxAqwIuw628uysaKsFLvHdrEMLB8rxP5gu1lG
lp8VZtfYEZaXlWEV2J9sjXPbz26zF2yomfXsELvH/mYj2HEpyiqzmuyNtRPZ
X3rUCP99Hy/0ZzJ7qccInC1iU9gr/WMJHnGL2VT2tx5bPmJL2Es2x2usYttY
w2BG5rE1bAdrpD+X8WwuW8Yq6c/kZzaHhbOK+pPgWcQmsBmsiP5n8DxhE9lM
9o0+SV4E+xD/hsLs5VHwfWbuZzaNFdKfBs8nNonNYkWD85cJbB5bzr4LjiUT
2Xy2glXWtzrxE+wJ+8DGBb9B5I0eL7heLNzrjg/ORY8Y4d+vgtB8NoO9D+4f
icVWsJnsQ3D/BNeQrWTT2Ts9UXCt2XI2i/2jfy5x2Co2317WOfhZdoN1CZ5X
Eo3FZZ+yLebmmlvDTrNrrLOZtewAu8NesmHBeyYRWTSWgK23dh6LzGIG+2Eb
2Ss2l61m29n3wW8Lea1/ItHZ0mB/LIq5WCwx28SmsbfB8SUmW8ZmswjmorD4
bF2wZxaJRWcJ2YZgL/a8lp1h11knM2PYFLae7WbV2H7JwYqzMuyBtQdYTlaC
lWUPWVtr67HebBBLaKYNq8t6sYEsQfA7ipVjrdgPLBJrysqz1qxj8HXPmrMK
rC3rzKKwdqw+68MGs0SsO+vAxrIpLAPrxtqzMWwyS8+6snZsNJvE0rGOrBUb
zn5mX7BOrDUbwcaz1OxOMMsGsJEss97ZXBs2kk1gadhZKc1qsvqh0L8fnC7m
2rJRbCJKy85LWVabNWQR9HvBMdkgNppl1R8G58KGsnEsm97M8b5lbVgnFjn4
XLGZbBs7xOoGn182i21nh1m94PnAprMt7ACrzf6QRqwj68mSBs8Mc9PYZraf
1WLXpDHrxHqxz4PPuLkZbCs7yOqwc1KG1WIN2P/0XuZ6sqlsLsvJerDubDKb
zXKw1qwO68kGsHjsQfDesSFsLPta72muB5vC5rDs7H5wrdlgNoZ9pbcyV5v1
YD+y+Kwlq8Tas64sGrsbvO9sIBvFsuiHJQ8rzb5lT9zjHaxtyPqxoSyJmTNS
itVg9dg/5laxhCwNS88Os3AWiyVjKdgutpjFYImDZxHbzpawmOxTloztYEvZ
xywpS852squsBmvO2rE4+mWpxpqyNiyWvkLisy9ZWnbQ2uUsHvuCpWEH2EGW
i5Vk5dgjdojlZqVYefaYrWQJWGqWjh1i21galovlY1fYIhadJWRJ2Ta2jMVl
qVhqtp9tYV+yHCwPu8RWs0QsLcvAjrDN7AuWneVmF9nvrBZryTqwuPopKcGq
sTrsvbmTrDirymqzd+w1W8V2sePsh+B7R1az3ewE66ifkGKsCqvF3lp7mpVk
1Vld9oH94N5oyYaxn9iXZtqzBqwvG8ISs/XyGcvIsrAT1q5lSVh6lokdY7+x
mqwFa88+0TdJKpaN5WIXzK1jn7IMLDM7zq6w6qwZa8ti62skMUvHMrKj5jaw
pCwTy8pOso3sc5aZfcVOsQnsefB7RiKxBez/f5QrjA==
               "]]}], Lighting -> {{"Ambient", 
               RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
              "Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
               ImageScaled[{2, 0, 2}]}}]}, {
           RGBColor[0.368417, 0.506779, 0.709798], 
           EdgeForm[None], 
           Specularity[
            GrayLevel[1], 3], 
           StyleBox[
            GraphicsGroup3DBox[{
              Polygon3DBox[CompressedData["
1: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
NiSc86k/1iNc7+k8q2e4vtL51OHh3pP6pf8L58TqB+6bS30V7bnZdbrm2I7Z
tb/ykNrZvSzN+e2ye0qak1Wyew5aX1sru+bV3lHIrqm1p5Rl18vKkbZUdr2s
PXG/XOrP6N5l1+laC9tm9680/2tk1/uq6Wtm96m0jtrlUn9GsSK7L6HcaZvs
PpjWb1Ue9cu8RuqF82n1J2tl9+603jdU+BxI53HjwucuOosZFa6p1B/uGq7l
dDbXMVxjq5fbKVyX6lxv/3D9rDOOzuGaUOd6HcK1us4BDwjX1eoJtw/X5+oV
twjXMzp3aBmui3R2sHe4ttHZxH7h+l/nLK3CNYDOFCZkn3lpPz0Mn1TmNX5I
di9R67pduKegs5h9w/0CndG0Ddfh6p3uE+41qOfcOlxXqGfbJlxXqBbYK1xf
6eyjcbh/p7ObRuH+nc5KRoTrf/W3DwnX/OqNHxquXdUz7xKuh3V2OTzcX1B/
fli4jlIf+OBwf0F9+MPCdZT6+SPDPQj1ww8M19s6n20e7qfofKdZuM+iM6b6
4VpUPfAG4dpS5wgNw3WpzhqahHs0OntqGu5v6lxpt3AfU2dPu4d7NDoD2jNc
i+rcZ49wjaqzpIrsnpX2l0rZ/SXtR9pXlZ8XFe/C56A6Z6+T3XNTLfBfhXsK
OrfdNlzz6wy9VvgMVWfo1cNnsTp/rx0+p9T5+KYK90R0Llye3bPSnrixwj0L
nf/WDJ/L6vy9mN3L0t5XObt/qH1tu3A/QufCObs3qD00ZffEtA/+HxnA8oc=

               "]], 
              Polygon3DBox[CompressedData["
1:eJwtmnW8XNUVhd9kzss9EyAhJAQIEOJYgODuEtzdCe7uGhxKcXe3UqxClRaX
UlxKcXd3SKDf1zX/lH6/c2fyZu7de6+19oyYuPf6e/Xp6ek5l/8p/HdI09Mz
c6un5yXgkH49Pe1OT8/98CnwMnA/+F/wmfDKcIUfgU+HV4QH8foZ4f/AB8J/
g5+GD+rt6VkSvhN+CN4DXhj+B/wsfAi8NNzh/R6Fz+D1K8HrcL4DPIDzXngq
zh+Dz+J8Ffg/lfeGl4MHwetx/U7wQK5v4LuaXL8vvAT8PjwFvgLeBn4T/g6+
CN4MfhJ+Bz4ZXh1+Df4aPh/eGH4L/h6+GN4cfhv+Ab4E3gL+AP4ZvhLeFn4X
/gm+DN4K7tvJ5z+Nv3d5uBd+EP4VvBz8Otd/A1/A9ZvAb8DfwhfCm8LvwZPh
y+Gt4YbXPwz/mtevAP+xyf3Zh/PF4cL5A/CpnC8LP875W/CJnK8K/67J6/eE
F4F7uP4ez0vu1x+a3I+9OV8MbnF+L3wS50vBH3L+C3wV59vBU7gff4aPLrn+
R/iP8BEl93sA1w+Gn4X3hX/m/C/wMSV/b3/OB8HPwPvAC8NLwN/Dp8MzwrPC
r8CHwRfCl8Eb8e/fDV8EXw5vDP8Dnty3p6cPfB/XT4SHcj4b/Bp8BHwxfAW8
Cdf/E14UXgr+kfMz4d83eb734nxReBF4SfgHzs+A14QnwtNw3oYfgl/28/Sm
Pvrwfd3n81TyfD/G+ZvwCZxPgP8JPwcf2pv6uht+Bj64N9/vZL6fP8FHlfz7
P8F3wUeW3K+BXD8Efh7eH14X3hGeltf3haeFp4ef43w/eG14e7g/5wW+B34e
Pqw3z8eD8Evev97U38PwK/Ck3tRbG67wI7zfLvA78I/wpZxvCT8Fv2u/gNeA
X4W/gs+DN4Kva3K/t4Xnha9t8rxsA88Db9eknofDU8PXNPn8W8Pj4InwwfAI
eBr4eviv8HbwfPA28AHwMLgffA58I7wOPAo+C74eXgseAR8Bnw0vAU8PHwOf
By8NzwgfDZ8LLwXPAB8FnwMvCQ+xX8H94Sf4PvaCz4ZvgNfmfCR8a5P7vws8
P3xLk/rZGR4PbwnvB88CV3hv+Hh4Hnha+Ar49/Dm8BzwHvCx8Nxwf/hy+Hfw
ZvDs9gN4avjf/D17wPvAJ8Dzcj4Q3hc+EZ4Png7eCz4OHgcPgM+Fb4LXhUf7
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
xzNb0+Pp9fRk7ob0ZHozNZdZt5rxnXYyP7WkGdNn7ewYzJ7MhD9pR9OZFZuB
fdTODsNszEz0rXYyO7NSM7UX29mRmLWZsb/Rzk7N7N0M7qV2Mn2zOTPRF7rf
j1mpGe1r7WRmZrdmwB+0k7GZDbsDea77/fr8/D+TL/EMZvVqbLW2GtHsUc2n
9nu1+zyqCd9rZ0eoVtRj6DX0IO7K3AHd0a0H60lPojfR47zefX69vwPhKX1T
f9bP5/BHTTLkV9rZabS69eO//1q3vsyErur+PdaTO4mzuv3FejMDMgsyszGr
dQdzZrffuJvR07irdKel11Ezq531QGaxZlRmVXoQs1gzKrMqPZNZrpmW2ZaZ
k1mzmZHZkZ7JLNhMdlK339zV7XfHdvuF/c+dmrs1dwDuRt35uFs1k3YX5M7F
3ac7PHcxZk5XdvuJWbc7Gnd5ZtrubvRs7g7dKerl9HTuFt3p6fXcIbmrcwfh
bskdlLsoM2h3r3osd4fuuPReZlq1ZOdm1mVm0bckUzDLMEMzSzNDM8vW401V
4nH0fgvUzD5ntrN70ZrZo2ZRuywGH9PKTHI2zVXj9xcq8VuL1GgbZ5qzbaGa
2efMd/YvWDP7nbHO2rlrtMvCJXnFwjWz0Jnp7FwWPrOVmehsnL9GS6iR1Erz
1GgTNYxa5scms8cZpLb4qUmeqqZQW/wAD2+lxq31eWu0nBpHrTNDjV8eUpK3
jIf3aWXGO+tnqslXZyzZH46r0U5qMLXYfDVaQI2oVnwYXq+VHmuvnbMm/1iw
JH8dWpM/zlSyrxxdkx/MUZLfzg5vC89dkq+NqskTZi/JN+eo6c32aPPglWq0
oRpNrTa2Jt+YqySPG1OTt8xZknc+WjNr7OH28uVrtKEaUC24Wo0WViOrlVeH
b29FI6uVx3YyG+0Z9o4RNfnTmJI8ebaavHlUiV8fVtPL7en61Zlr8sKhJf56
lpo8ceaSvGxWeF14lpJ8eUwnXkUPo5cZWePvx5bkG8Nr/P/okrxgcpM87+t2
9qeP1cxOZ46z5+cm+d637ewnemry4e/b2b/0r9HOamq19Qo1WlcNrZY2k2xK
MjqzyqZm1jvz3Rf0hcfb29vZVw+oqTU1udp8mhqtbs1au4Nr8o1BJfleqcnD
JrezL5++Jg8ZXJIfdmryxFKSV05V87dY89b+ujVaTo2n1lunRpuoUdR2G9b0
bnu4Wmjqmt7hZ/KzrQc/2YomVBuqofX+m/ZGW2/A+evwNSX7l341vaa3ZJ9R
a/LKdsk+Y0jNvmH6knxzUI1WUbOYX05bk5fak+xNnzaZlc5UZ+snTWarM9PZ
+XGT2elMdDZ+1mT2OGOdtd82mdXOUGdpn5r9zo/t/D7m+yaz3hnvrP+lSd78
XTu/f5nSZD/zTTv7+e+aaAE1gFrg8yaz2pnn7PuyiRZw5jv7e2vyyint5EHT
wcvB05TklwNr9idTl+Sd7Zr87ad29mkz1uwzZij5/cQXTbSEGkGt8E0TbeBM
d7Z/3WS2q2nUNl810TZqFLVKqyb/+6Gd/aZ6cURXT6oHvYfXdOe1uzVrdlRX
f5m9PV2j3dSkalP1vnpdPa++f7bGC5ghmCU8V5MlmIGYhTxeo+3UbGo3n2mf
bT+zvw1Zs0Zbq9HV6k/VaE01o9rRe+a98zP4W6cna7SgmlRtao1Za37n/lbE
79Dv0nvurtKeM7KrN9XHa9TMdme8XsOeb+/3GTV7955576xBsz1rztqzRs3y
l6zxgnoyvdna8D9b8QR6g+drsh8zH7OfZ+B9W/FMeqcnarSrmlZta81b+9aE
Wb/3yHtlT3I3vVSNd9SD6kWtMWvNHuAu0R5gL7Dm3GVYc9aePcnd4tI1XlYP
qhe15qw9/cD4rl/RH+gX9F8+kz6b1qTZvM+sz67PrFn84jXeU0+uN7fn2fv0
b/o/e6i91Jpyt/1vrt+uFY2v1l+mxuvqsfXa9mh7tTPb375Yc9aePdzfytxd
oz3VoHqNe+D5W/Esehdr1tq1p/tbNnu6vd0adhe9RI131jPrnR+s8U56JL3S
QzWf3e9Ar7RWjbfT8+n9lqvJRsxkzGac0c5qZ/KErl+xNqwR/cyqNdmSGZFZ
kTPaWa2f089Y09a2msPfSjnTne3ONHeZagy1hj3A3y79P8MvmbFm+2oCtYEz
3l2cM9PZ6Ux197Qy//6VrWRGZkdqDrWHmsFdsDPaWe3MdBe8Yk22Y6ZjtqMm
UZuoefxtlTPaWa1mMRufUJN9mXGZdakB1YJqHLP4/2u6Eo3obuqRGq+px9Xr
3g8v34oH1gurUdQqahR3iQ/UeGM9rl53lZoszYzNrM0Z4ixxJro7UyOoFdQQ
7qbVOGodNZW73n/VeFU9tF5ajaBWUKO4a/gfPFDwbQ==
               "]], 
              Polygon3DBox[CompressedData["
1:eJwl1mWYVVUbBuCDDMMMjeQwQzN0d3e30g1KtxLSIam0pEqKASqh2AEI2Eko
XdIlIt3fva7vx/vjua93n7X3PmuvtXI/M+TpwU9EIpE9KlmomEjkWFQkciVp
JJIzSSSSLXkkkoQdYmdYPMvMUrHz7A4rzBJZSnaO3WaFWD72iA31w/P4T+xj
loKdlW/pK8jysqSxkchofcv4PraNRek7Kl/Sl4PFhT52hF1g2VlWlppdYHdZ
EZafRbPj7CrLxeJZMmOMNcZr/C/2DYvRd1q+oS8/y83SskvsPivGCrI07CK7
x4qyAiwdu8wesOKsEGvNFhpjLT/BDrMKrBCrxIaw/iw5OyVfd20iy8Vi2Rl2
kxVgeVh6doU9ZCVYYfYk+4c9YiVZkfC8nm2cMV7n+9mOMAYbz5azA2wne4KN
YkvZXrY1/L/sBbaE7WFfsQgbyRaz3ezr8H+wMexV9ifbzjK6lxtylKrASrPH
7Dl989nP7JMwLjssn3PPCSwLK88K6qvIB7N+7Ib6WT6tLyWLlkvpy6uvDO/H
erIE9kBOpWqwyiw7eyinVjVZFVaa5XNtWdaf9WLZ2D05harGKrIyLFFfOTaA
9WaZ2S05WlViZVlBlkFfXtaetWIlWTwrwrqzTqwsy8/Ks4GsDyvHCrAKbBDr
ywqxjCwf68Baszh2V45VVVkFloXdlpOryqwcy8diXRvHmrGGLDeLZplZY1aP
5WRRLCNryOqwAiwVS2AtWROWld2RY1QVVp4lshT6srHmrBHLy2JYVtaUNWDx
7L6cUlVnlVh+llJfPGvBGrM8LDnLwpqw+iwHS8oysAasdph/7KB8yjzIxjKx
wiyTvkTekbVhJVg2Vph1Yx3ZdfWT/LdrU7Bk8k31CzvLUrHkYZ6qA+wki2MZ
5ctqZ1iDWFL2KNp7Z7+xiywNi5WvqF1hHWFR7LG+q+w7dohFsyTyv+p7doQl
Z0/I19QP7BiLYUnl/9SPYc1gsSxK/kd9G75dloxF5KKeN4vnLcA7s3bsgfpT
PqwvM0sf1l21nx1nWVkGuYhrM7s2P+/E2rJiLCsryLqw9qw4i2OFWFfWgWVi
N+VkqiIrwx6qv+SjxsjCnpRvqV/ZeZaaxch31R/sH5aOpZTvq33sIMvE0sn3
1N6wfrGMLK18R/3OLrO0LIWcwb1cZ0lVeVYqrOPWpgnueUX4TbaLtdQ3nE1l
29gXYVw2iM1m37MP2UFWirVkM9jz4X2yYqwpm8IGh/tlRVkT9iIbGOYUS89K
sl6sZVi/WDpWgvVkLcJ8ZGlZcfYsax6elRVhjdlkNii8J5aTVWfDWbfwjllx
1oxNZUPCO2E5WDU2jHUN84elYcXYM6xpmGcsNSvKerBmYS6z7Kwqe551Dt8B
K8lasOnsOdaQtWG92Er2KmvOerORbDN7jzVjvdgItom9y5qynmw428jWh7nM
Hss51NOsavg2WBJ9uVhrViN8QzH/P4zkZK1Y9fCtsUdydvUUq8Yas3b6+rDV
7PUw51kJ1pxNY0NZI9aW9War2GusPmvFnmXL2VLWgLVmPdkKtizMZZbAqrDn
WBe2m+ViNdgI1p3tYblZTTaS9WAnWE3WjS1lL7KTrBbrzpaxKew0a8L6s7Vs
LjvOarCubAmbzI6x6qwLW8wmsaOsGuvMFrGJ7BRrzPqxN9jssKaxa3I6VYcV
Z2dYU30D2JtsHtvB/pXTqtqsKPubNdLXl61hc9g37KqcRtVixdhZ1kzfQPYW
m8/OseZsEHubLWCXWHv2AvuArWCHWGXWgS1g49lhVoV1ZK+wcWw7OylHVGmW
ENZY1kXfOPYJW8O2sRPyY+tGKZadNWHP6hvGN7B17AiryjqxhWwCO89asMHs
HfZK2BdYBzaKfciWs4vsKTaUrWeLwr7AOrLRbAtbyS6wlmwIW8cWhrWddWJj
2EdsFavMyrK6bCwbyaqwcqweG8deYFVZeVafjWej2JPWv1nsXXaO7QnrJJvN
3gvrMdsbzhFsPtsU1lS2n6VnL7P1YX9ku1kqNo29GfZH9itLzaazt8Leyn5h
adgM9nbYq9lvLBtbzD5i/7Ej4WzBFrDN7Ao7wOLYIraFXWNHWVo2k73DTrPf
WTr2ElvHzrA/WGY2j21kl9hfLCObw95nF9i+sG+xuWxD2L/Zn2Gf8f4Gslns
O/ZB2KPYAPYy+5ZtDmcG1odNZ9+wDeFswbqziexz9ia7wXqwSewL9hbLZ9xV
bCt7wM6FvUxff/YS28U2hf2S9WUz2A72Pkvp2slsdTg3sO/ZbX392Ey2k21k
KfRNYqvC3s++C2cBfYPZHPYD28Ji9U1kK8PZhH0b9m59Q9hc9iP7iCXqW822
sYfsPMvLVrKv2X12ltVybV3Wms1mM1hNVoe1YrPYdLaV7Zb/9Q3mZqlZPdZQ
X3s+n81idVkD1o7NYy+zOqw+a8vmspdYbVaPtWFz2ExWjVVgDdgENpq1YMPY
FLaVfc6qs4qsIZvIxrAarBJrxCaxsawSK8PqsDFsBHuKjWDT2Hb2JXuaTWEL
2e/sJ9aKTWWL2B/sZ5bg/S1ln7Ab7DjLzpaxT9lNdoLFsyXsY3adHWN52Ar2
FbvHzrBc7HX2BbvDTrH8bA3bzh6xCywHe5V9xm6xkyw3W86+ZHfZaXbVPXdm
Y9nHbDXLqe819jm7zf5m1/R1ZePZp+wN9h/rxiawz9haVpEVZpXZUDYg3DNL
xjKxRqwu+x/PNwbP
               "]]}], Lighting -> {{"Ambient", 
               RGBColor[
               0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
              "Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{0, 2, 2}]}, {"Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{2, 2, 2}]}, {"Directional", 
               RGBColor[
               0.15473514000000002`, 0.21284718000000002`, 
                0.29811516000000005`], 
               ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {{
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwt0UkuBEAUgOHSrbU2tTZERCSIAyAOgDgAHQegY22KjR3iADgBiQMgDoA4
AOIA5nmeZ74Wi5evVvXnVdVnBtMDOSGEMZMTMVyIhZDiCuu5wWbusJ2H7OYj
+5ibF8IwKzjBRs6wlfPs5BJ7uMZ+bnGUe5ziHff173nAh2yHjzziE4/5zBO+
8JSvPOMbz/nOC37wkp+84hev+c0b/vA2Ev4WntW/dZzkLke4yQxXmeYiOzjH
Fk6zgeMs4xAj7OW9d+nK7sM2brOJ66zjMktZq59kDUtYzWJWsYiVLGQ5C5hi
gknms5hxFlI6JOjqEGcuY4wyysj///4Coco85g==
            "]]}, {
           GrayLevel[0], 
           Line3DBox[CompressedData["
1:eJwl0TkoB3AYBuDf330fsxSzFLMUsxRWKaxyjZJilmKWYpYi980shSS5QpKQ
3Pf1yPD19C7fW9+XW99c1RQJIbSZregQIsJXXAiZTI0PIZfZLGQ+S1nMSpaz
jjVsZSO72ME+9nCIAxzjCFe5yE2u84SHvON4TAj3nOADJ/nIKT5xms+c4Qtn
+co5vnGe71zgx18PP7nELy7zmyv84SpDVAhX+m/lfR5zjRt/+7jCYY6yn4Ps
Zi/b2ckGtrCatSxjBYtYwjwWMIs5TGYGb9w7nddM4yVTecEUnjOZZ0ziKRN5
zAQeMZ4HjOMeY7nLGO4wmtuMivz/9xcKgUg1
            "]]}, {
           GrayLevel[0.2], 
           
           Line3DBox[{1444, 753, 1443, 2448, 1683, 1445, 2449, 1684, 1446, 
            2450, 1685, 1447, 2451, 1686, 1448, 2452, 1687, 1449, 2453, 1688, 
            1450, 2454, 1689, 1451, 2455, 1690, 1452, 2456, 1691, 1453, 2457, 
            1692, 1454, 2458, 1693, 1455, 2459, 1694, 1456, 2460, 1695, 1457, 
            2461, 1696, 1458}], 
           
           Line3DBox[{1460, 2133, 2343, 1459, 769, 1461, 2462, 1697, 1462, 
            2463, 1698, 1463, 2464, 1699, 1464, 2465, 1700, 1465, 2466, 1701, 
            1466, 2467, 1702, 1467, 2468, 1703, 1468, 2469, 1704, 1469, 2470, 
            1705, 1470, 2471, 1706, 1471, 2472, 1707, 1472, 2473, 1708, 1473, 
            2474, 1709, 1474}], 
           
           Line3DBox[{1476, 2134, 2344, 1475, 2135, 2345, 1477, 785, 1478, 
            2475, 1710, 1479, 2476, 1711, 1480, 2477, 1712, 1481, 2478, 1713, 
            1482, 2479, 1714, 1483, 2480, 1715, 1484, 2481, 1716, 1485, 2482, 
            1717, 1486, 2483, 1718, 1487, 2484, 1719, 1488, 2485, 1720, 1489, 
            2486, 1721, 1490}], 
           
           Line3DBox[{1492, 2136, 2346, 1491, 2137, 2347, 1493, 2138, 2348, 
            1494, 801, 1495, 2487, 1722, 1496, 2488, 1723, 1497, 2489, 1724, 
            1498, 2490, 1725, 1499, 2491, 1726, 1500, 2492, 1727, 1501, 2493, 
            1728, 1502, 2494, 1729, 1503, 2495, 1730, 1504, 2496, 1731, 1505, 
            2497, 1732, 1506}], 
           
           Line3DBox[{1508, 2139, 2349, 1507, 2140, 2350, 1509, 2141, 2351, 
            1510, 2142, 2352, 1511, 817, 1512, 2498, 1733, 1513, 2499, 1734, 
            1514, 2500, 1735, 1515, 2501, 1736, 1516, 2502, 1737, 1517, 2503, 
            1738, 1518, 2504, 1739, 1519, 2505, 1740, 1520, 2506, 1741, 1521, 
            2507, 1742, 1522}], 
           
           Line3DBox[{1524, 2143, 2353, 1523, 2144, 2354, 1525, 2145, 2355, 
            1526, 2146, 2356, 1527, 2147, 2357, 1528, 833, 1529, 2508, 1743, 
            1530, 2509, 1744, 1531, 2510, 1745, 1532, 2511, 1746, 1533, 2512, 
            1747, 1534, 2513, 1748, 1535, 2514, 1749, 1536, 2515, 1750, 1537, 
            2516, 1751, 1538}], 
           
           Line3DBox[{1540, 2148, 2358, 1539, 2149, 2359, 1541, 2150, 2360, 
            1542, 2151, 2361, 1543, 2152, 2362, 1544, 2153, 2363, 1545, 849, 
            1546, 2517, 1752, 1547, 2518, 1753, 1548, 2519, 1754, 1549, 2520, 
            1755, 1550, 2521, 1756, 1551, 2522, 1757, 1552, 2523, 1758, 1553, 
            2524, 1759, 1554}], 
           
           Line3DBox[{1556, 2154, 2364, 1555, 2155, 2365, 1557, 2156, 2366, 
            1558, 2157, 2367, 1559, 2158, 2368, 1560, 2159, 2369, 1561, 2160, 
            2370, 1562, 865, 1563, 2525, 1760, 1564, 2526, 1761, 1565, 2527, 
            1762, 1566, 2528, 1763, 1567, 2529, 1764, 1568, 2530, 1765, 1569, 
            2531, 1766, 1570}], 
           
           Line3DBox[{1572, 2161, 2371, 1571, 2162, 2372, 1573, 2163, 2373, 
            1574, 2164, 2374, 1575, 2165, 2375, 1576, 2166, 2376, 1577, 2167, 
            2377, 1578, 2168, 2378, 1579, 881, 1580, 2532, 1767, 1581, 2533, 
            1768, 1582, 2534, 1769, 1583, 2535, 1770, 1584, 2536, 1771, 1585, 
            2537, 1772, 1586}], 
           
           Line3DBox[{1588, 2169, 2379, 1587, 2170, 2380, 1589, 2171, 2381, 
            1590, 2172, 2382, 1591, 2173, 2383, 1592, 2174, 2384, 1593, 2175, 
            2385, 1594, 2176, 2386, 1595, 2177, 2387, 1596, 897, 1597, 2538, 
            1773, 1598, 2539, 1774, 1599, 2540, 1775, 1600, 2541, 1776, 1601, 
            2542, 1777, 1602}], 
           
           Line3DBox[{1604, 2178, 2388, 1603, 2179, 2389, 1605, 2180, 2390, 
            1606, 2181, 2391, 1607, 2182, 2392, 1608, 2183, 2393, 1609, 2184, 
            2394, 1610, 2185, 2395, 1611, 2186, 2396, 1612, 2187, 2397, 1613, 
            913, 1614, 2543, 1778, 1615, 2544, 1779, 1616, 2545, 1780, 1617, 
            2546, 1781, 1618}], 
           
           Line3DBox[{1620, 2188, 2398, 1619, 2189, 2399, 1621, 2190, 2400, 
            1622, 2191, 2401, 1623, 2192, 2402, 1624, 2193, 2403, 1625, 2194, 
            2404, 1626, 2195, 2405, 1627, 2196, 2406, 1628, 2197, 2407, 1629, 
            2198, 2408, 1630, 929, 1631, 2547, 1782, 1632, 2548, 1783, 1633, 
            2549, 1784, 1634}], 
           
           Line3DBox[{1636, 2199, 2409, 1635, 2200, 2410, 1637, 2201, 2411, 
            1638, 2202, 2412, 1639, 2203, 2413, 1640, 2204, 2414, 1641, 2205, 
            2415, 1642, 2206, 2416, 1643, 2207, 2417, 1644, 2208, 2418, 1645, 
            2209, 2419, 1646, 2210, 2420, 1647, 945, 1648, 2550, 1785, 1649, 
            2551, 1786, 1650}], 
           
           Line3DBox[{1652, 2211, 2421, 1651, 2212, 2422, 1653, 2213, 2423, 
            1654, 2214, 2424, 1655, 2215, 2425, 1656, 2216, 2426, 1657, 2217, 
            2427, 1658, 2218, 2428, 1659, 2219, 2429, 1660, 2220, 2430, 1661, 
            2221, 2431, 1662, 2222, 2432, 1663, 2223, 2433, 1664, 961, 1665, 
            2552, 1787, 1666}], 
           
           Line3DBox[{1668, 2224, 2434, 1667, 2225, 2435, 1669, 2226, 2436, 
            1670, 2227, 2437, 1671, 2228, 2438, 1672, 2229, 2439, 1673, 2230, 
            2440, 1674, 2231, 2441, 1675, 2232, 2442, 1676, 2233, 2443, 1677, 
            2234, 2444, 1678, 2235, 2445, 1679, 2236, 2446, 1680, 2237, 2447, 
            1681, 977, 1682}], 
           
           Line3DBox[{1789, 1218, 1788, 2658, 2028, 1790, 2659, 2029, 1791, 
            2660, 2030, 1792, 2661, 2031, 1793, 2662, 2032, 1794, 2663, 2033, 
            1795, 2664, 2034, 1796, 2665, 2035, 1797, 2666, 2036, 1798, 2667, 
            2037, 1799, 2668, 2038, 1800, 2669, 2039, 1801, 2670, 2040, 1802, 
            2671, 2041, 1803}], 
           
           Line3DBox[{1805, 2238, 2553, 1804, 1234, 1806, 2672, 2042, 1807, 
            2673, 2043, 1808, 2674, 2044, 1809, 2675, 2045, 1810, 2676, 2046, 
            1811, 2677, 2047, 1812, 2678, 2048, 1813, 2679, 2049, 1814, 2680, 
            2050, 1815, 2681, 2051, 1816, 2682, 2052, 1817, 2683, 2053, 1818, 
            2684, 2054, 1819}], 
           
           Line3DBox[{1821, 2239, 2554, 1820, 2240, 2555, 1822, 1250, 1823, 
            2685, 2055, 1824, 2686, 2056, 1825, 2687, 2057, 1826, 2688, 2058, 
            1827, 2689, 2059, 1828, 2690, 2060, 1829, 2691, 2061, 1830, 2692, 
            2062, 1831, 2693, 2063, 1832, 2694, 2064, 1833, 2695, 2065, 1834, 
            2696, 2066, 1835}], 
           
           Line3DBox[{1837, 2241, 2556, 1836, 2242, 2557, 1838, 2243, 2558, 
            1839, 1266, 1840, 2697, 2067, 1841, 2698, 2068, 1842, 2699, 2069, 
            1843, 2700, 2070, 1844, 2701, 2071, 1845, 2702, 2072, 1846, 2703, 
            2073, 1847, 2704, 2074, 1848, 2705, 2075, 1849, 2706, 2076, 1850, 
            2707, 2077, 1851}], 
           
           Line3DBox[{1853, 2244, 2559, 1852, 2245, 2560, 1854, 2246, 2561, 
            1855, 2247, 2562, 1856, 1282, 1857, 2708, 2078, 1858, 2709, 2079, 
            1859, 2710, 2080, 1860, 2711, 2081, 1861, 2712, 2082, 1862, 2713, 
            2083, 1863, 2714, 2084, 1864, 2715, 2085, 1865, 2716, 2086, 1866, 
            2717, 2087, 1867}], 
           
           Line3DBox[{1869, 2248, 2563, 1868, 2249, 2564, 1870, 2250, 2565, 
            1871, 2251, 2566, 1872, 2252, 2567, 1873, 1298, 1874, 2718, 2088, 
            1875, 2719, 2089, 1876, 2720, 2090, 1877, 2721, 2091, 1878, 2722, 
            2092, 1879, 2723, 2093, 1880, 2724, 2094, 1881, 2725, 2095, 1882, 
            2726, 2096, 1883}], 
           
           Line3DBox[{1885, 2253, 2568, 1884, 2254, 2569, 1886, 2255, 2570, 
            1887, 2256, 2571, 1888, 2257, 2572, 1889, 2258, 2573, 1890, 1314, 
            1891, 2727, 2097, 1892, 2728, 2098, 1893, 2729, 2099, 1894, 2730, 
            2100, 1895, 2731, 2101, 1896, 2732, 2102, 1897, 2733, 2103, 1898, 
            2734, 2104, 1899}], 
           
           Line3DBox[{1901, 2259, 2574, 1900, 2260, 2575, 1902, 2261, 2576, 
            1903, 2262, 2577, 1904, 2263, 2578, 1905, 2264, 2579, 1906, 2265, 
            2580, 1907, 1330, 1908, 2735, 2105, 1909, 2736, 2106, 1910, 2737, 
            2107, 1911, 2738, 2108, 1912, 2739, 2109, 1913, 2740, 2110, 1914, 
            2741, 2111, 1915}], 
           
           Line3DBox[{1917, 2266, 2581, 1916, 2267, 2582, 1918, 2268, 2583, 
            1919, 2269, 2584, 1920, 2270, 2585, 1921, 2271, 2586, 1922, 2272, 
            2587, 1923, 2273, 2588, 1924, 1346, 1925, 2742, 2112, 1926, 2743, 
            2113, 1927, 2744, 2114, 1928, 2745, 2115, 1929, 2746, 2116, 1930, 
            2747, 2117, 1931}], 
           
           Line3DBox[{1933, 2274, 2589, 1932, 2275, 2590, 1934, 2276, 2591, 
            1935, 2277, 2592, 1936, 2278, 2593, 1937, 2279, 2594, 1938, 2280, 
            2595, 1939, 2281, 2596, 1940, 2282, 2597, 1941, 1362, 1942, 2748, 
            2118, 1943, 2749, 2119, 1944, 2750, 2120, 1945, 2751, 2121, 1946, 
            2752, 2122, 1947}], 
           
           Line3DBox[{1949, 2283, 2598, 1948, 2284, 2599, 1950, 2285, 2600, 
            1951, 2286, 2601, 1952, 2287, 2602, 1953, 2288, 2603, 1954, 2289, 
            2604, 1955, 2290, 2605, 1956, 2291, 2606, 1957, 2292, 2607, 1958, 
            1378, 1959, 2753, 2123, 1960, 2754, 2124, 1961, 2755, 2125, 1962, 
            2756, 2126, 1963}], 
           
           Line3DBox[{1965, 2293, 2608, 1964, 2294, 2609, 1966, 2295, 2610, 
            1967, 2296, 2611, 1968, 2297, 2612, 1969, 2298, 2613, 1970, 2299, 
            2614, 1971, 2300, 2615, 1972, 2301, 2616, 1973, 2302, 2617, 1974, 
            2303, 2618, 1975, 1394, 1976, 2757, 2127, 1977, 2758, 2128, 1978, 
            2759, 2129, 1979}], 
           
           Line3DBox[{1981, 2304, 2619, 1980, 2305, 2620, 1982, 2306, 2621, 
            1983, 2307, 2622, 1984, 2308, 2623, 1985, 2309, 2624, 1986, 2310, 
            2625, 1987, 2311, 2626, 1988, 2312, 2627, 1989, 2313, 2628, 1990, 
            2314, 2629, 1991, 2315, 2630, 1992, 1410, 1993, 2760, 2130, 1994, 
            2761, 2131, 1995}], 
           
           Line3DBox[{1997, 2316, 2631, 1996, 2317, 2632, 1998, 2318, 2633, 
            1999, 2319, 2634, 2000, 2320, 2635, 2001, 2321, 2636, 2002, 2322, 
            2637, 2003, 2323, 2638, 2004, 2324, 2639, 2005, 2325, 2640, 2006, 
            2326, 2641, 2007, 2327, 2642, 2008, 2328, 2643, 2009, 1426, 2010, 
            2762, 2132, 2011}], 
           
           Line3DBox[{2013, 2329, 2644, 2012, 2330, 2645, 2014, 2331, 2646, 
            2015, 2332, 2647, 2016, 2333, 2648, 2017, 2334, 2649, 2018, 2335, 
            2650, 2019, 2336, 2651, 2020, 2337, 2652, 2021, 2338, 2653, 2022, 
            2339, 2654, 2023, 2340, 2655, 2024, 2341, 2656, 2025, 2342, 2657, 
            2026, 1442, 2027}]}, {
           GrayLevel[0.2], 
           
           Line3DBox[{513, 753, 514, 2343, 768, 543, 2344, 783, 558, 2346, 
            798, 573, 2349, 813, 588, 2353, 828, 603, 2358, 843, 618, 2364, 
            858, 633, 2371, 873, 648, 2379, 888, 663, 2388, 903, 678, 2398, 
            918, 693, 2409, 933, 708, 2421, 948, 723, 2434, 963, 738}], 
           
           Line3DBox[{515, 754, 2448, 516, 769, 544, 2345, 784, 559, 2347, 
            799, 574, 2350, 814, 589, 2354, 829, 604, 2359, 844, 619, 2365, 
            859, 634, 2372, 874, 649, 2380, 889, 664, 2389, 904, 679, 2399, 
            919, 694, 2410, 934, 709, 2422, 949, 724, 2435, 964, 739}], 
           Line3DBox[{517, 755, 2449, 518, 770, 2462, 545, 785, 560, 2348, 
            800, 575, 2351, 815, 590, 2355, 830, 605, 2360, 845, 620, 2366, 
            860, 635, 2373, 875, 650, 2381, 890, 665, 2390, 905, 680, 2400, 
            920, 695, 2411, 935, 710, 2423, 950, 725, 2436, 965, 740}], 
           
           Line3DBox[{519, 756, 2450, 520, 771, 2463, 546, 786, 2475, 561, 
            801, 576, 2352, 816, 591, 2356, 831, 606, 2361, 846, 621, 2367, 
            861, 636, 2374, 876, 651, 2382, 891, 666, 2391, 906, 681, 2401, 
            921, 696, 2412, 936, 711, 2424, 951, 726, 2437, 966, 741}], 
           
           Line3DBox[{521, 757, 2451, 522, 772, 2464, 547, 787, 2476, 562, 
            802, 2487, 577, 817, 592, 2357, 832, 607, 2362, 847, 622, 2368, 
            862, 637, 2375, 877, 652, 2383, 892, 667, 2392, 907, 682, 2402, 
            922, 697, 2413, 937, 712, 2425, 952, 727, 2438, 967, 742}], 
           
           Line3DBox[{523, 758, 2452, 524, 773, 2465, 548, 788, 2477, 563, 
            803, 2488, 578, 818, 2498, 593, 833, 608, 2363, 848, 623, 2369, 
            863, 638, 2376, 878, 653, 2384, 893, 668, 2393, 908, 683, 2403, 
            923, 698, 2414, 938, 713, 2426, 953, 728, 2439, 968, 743}], 
           
           Line3DBox[{525, 759, 2453, 526, 774, 2466, 549, 789, 2478, 564, 
            804, 2489, 579, 819, 2499, 594, 834, 2508, 609, 849, 624, 2370, 
            864, 639, 2377, 879, 654, 2385, 894, 669, 2394, 909, 684, 2404, 
            924, 699, 2415, 939, 714, 2427, 954, 729, 2440, 969, 744}], 
           
           Line3DBox[{527, 760, 2454, 528, 775, 2467, 550, 790, 2479, 565, 
            805, 2490, 580, 820, 2500, 595, 835, 2509, 610, 850, 2517, 625, 
            865, 640, 2378, 880, 655, 2386, 895, 670, 2395, 910, 685, 2405, 
            925, 700, 2416, 940, 715, 2428, 955, 730, 2441, 970, 745}], 
           
           Line3DBox[{529, 761, 2455, 530, 776, 2468, 551, 791, 2480, 566, 
            806, 2491, 581, 821, 2501, 596, 836, 2510, 611, 851, 2518, 626, 
            866, 2525, 641, 881, 656, 2387, 896, 671, 2396, 911, 686, 2406, 
            926, 701, 2417, 941, 716, 2429, 956, 731, 2442, 971, 746}], 
           
           Line3DBox[{531, 762, 2456, 532, 777, 2469, 552, 792, 2481, 567, 
            807, 2492, 582, 822, 2502, 597, 837, 2511, 612, 852, 2519, 627, 
            867, 2526, 642, 882, 2532, 657, 897, 672, 2397, 912, 687, 2407, 
            927, 702, 2418, 942, 717, 2430, 957, 732, 2443, 972, 747}], 
           
           Line3DBox[{533, 763, 2457, 534, 778, 2470, 553, 793, 2482, 568, 
            808, 2493, 583, 823, 2503, 598, 838, 2512, 613, 853, 2520, 628, 
            868, 2527, 643, 883, 2533, 658, 898, 2538, 673, 913, 688, 2408, 
            928, 703, 2419, 943, 718, 2431, 958, 733, 2444, 973, 748}], 
           
           Line3DBox[{535, 764, 2458, 536, 779, 2471, 554, 794, 2483, 569, 
            809, 2494, 584, 824, 2504, 599, 839, 2513, 614, 854, 2521, 629, 
            869, 2528, 644, 884, 2534, 659, 899, 2539, 674, 914, 2543, 689, 
            929, 704, 2420, 944, 719, 2432, 959, 734, 2445, 974, 749}], 
           
           Line3DBox[{537, 765, 2459, 538, 780, 2472, 555, 795, 2484, 570, 
            810, 2495, 585, 825, 2505, 600, 840, 2514, 615, 855, 2522, 630, 
            870, 2529, 645, 885, 2535, 660, 900, 2540, 675, 915, 2544, 690, 
            930, 2547, 705, 945, 720, 2433, 960, 735, 2446, 975, 750}], 
           
           Line3DBox[{539, 766, 2460, 540, 781, 2473, 556, 796, 2485, 571, 
            811, 2496, 586, 826, 2506, 601, 841, 2515, 616, 856, 2523, 631, 
            871, 2530, 646, 886, 2536, 661, 901, 2541, 676, 916, 2545, 691, 
            931, 2548, 706, 946, 2550, 721, 961, 736, 2447, 976, 751}], 
           
           Line3DBox[{541, 767, 2461, 542, 782, 2474, 557, 797, 2486, 572, 
            812, 2497, 587, 827, 2507, 602, 842, 2516, 617, 857, 2524, 632, 
            872, 2531, 647, 887, 2537, 662, 902, 2542, 677, 917, 2546, 692, 
            932, 2549, 707, 947, 2551, 722, 962, 2552, 737, 977, 752}], 
           
           Line3DBox[{978, 1218, 979, 2553, 1233, 1008, 2554, 1248, 1023, 
            2556, 1263, 1038, 2559, 1278, 1053, 2563, 1293, 1068, 2568, 1308, 
            1083, 2574, 1323, 1098, 2581, 1338, 1113, 2589, 1353, 1128, 2598, 
            1368, 1143, 2608, 1383, 1158, 2619, 1398, 1173, 2631, 1413, 1188, 
            2644, 1428, 1203}], 
           
           Line3DBox[{980, 1219, 2658, 981, 1234, 1009, 2555, 1249, 1024, 
            2557, 1264, 1039, 2560, 1279, 1054, 2564, 1294, 1069, 2569, 1309, 
            1084, 2575, 1324, 1099, 2582, 1339, 1114, 2590, 1354, 1129, 2599, 
            1369, 1144, 2609, 1384, 1159, 2620, 1399, 1174, 2632, 1414, 1189, 
            2645, 1429, 1204}], 
           
           Line3DBox[{982, 1220, 2659, 983, 1235, 2672, 1010, 1250, 1025, 
            2558, 1265, 1040, 2561, 1280, 1055, 2565, 1295, 1070, 2570, 1310, 
            1085, 2576, 1325, 1100, 2583, 1340, 1115, 2591, 1355, 1130, 2600, 
            1370, 1145, 2610, 1385, 1160, 2621, 1400, 1175, 2633, 1415, 1190, 
            2646, 1430, 1205}], 
           
           Line3DBox[{984, 1221, 2660, 985, 1236, 2673, 1011, 1251, 2685, 
            1026, 1266, 1041, 2562, 1281, 1056, 2566, 1296, 1071, 2571, 1311, 
            1086, 2577, 1326, 1101, 2584, 1341, 1116, 2592, 1356, 1131, 2601, 
            1371, 1146, 2611, 1386, 1161, 2622, 1401, 1176, 2634, 1416, 1191, 
            2647, 1431, 1206}], 
           
           Line3DBox[{986, 1222, 2661, 987, 1237, 2674, 1012, 1252, 2686, 
            1027, 1267, 2697, 1042, 1282, 1057, 2567, 1297, 1072, 2572, 1312, 
            1087, 2578, 1327, 1102, 2585, 1342, 1117, 2593, 1357, 1132, 2602, 
            1372, 1147, 2612, 1387, 1162, 2623, 1402, 1177, 2635, 1417, 1192, 
            2648, 1432, 1207}], 
           
           Line3DBox[{988, 1223, 2662, 989, 1238, 2675, 1013, 1253, 2687, 
            1028, 1268, 2698, 1043, 1283, 2708, 1058, 1298, 1073, 2573, 1313, 
            1088, 2579, 1328, 1103, 2586, 1343, 1118, 2594, 1358, 1133, 2603, 
            1373, 1148, 2613, 1388, 1163, 2624, 1403, 1178, 2636, 1418, 1193, 
            2649, 1433, 1208}], 
           
           Line3DBox[{990, 1224, 2663, 991, 1239, 2676, 1014, 1254, 2688, 
            1029, 1269, 2699, 1044, 1284, 2709, 1059, 1299, 2718, 1074, 1314, 
            1089, 2580, 1329, 1104, 2587, 1344, 1119, 2595, 1359, 1134, 2604, 
            1374, 1149, 2614, 1389, 1164, 2625, 1404, 1179, 2637, 1419, 1194, 
            2650, 1434, 1209}], 
           
           Line3DBox[{992, 1225, 2664, 993, 1240, 2677, 1015, 1255, 2689, 
            1030, 1270, 2700, 1045, 1285, 2710, 1060, 1300, 2719, 1075, 1315, 
            2727, 1090, 1330, 1105, 2588, 1345, 1120, 2596, 1360, 1135, 2605, 
            1375, 1150, 2615, 1390, 1165, 2626, 1405, 1180, 2638, 1420, 1195, 
            2651, 1435, 1210}], 
           
           Line3DBox[{994, 1226, 2665, 995, 1241, 2678, 1016, 1256, 2690, 
            1031, 1271, 2701, 1046, 1286, 2711, 1061, 1301, 2720, 1076, 1316, 
            2728, 1091, 1331, 2735, 1106, 1346, 1121, 2597, 1361, 1136, 2606, 
            1376, 1151, 2616, 1391, 1166, 2627, 1406, 1181, 2639, 1421, 1196, 
            2652, 1436, 1211}], 
           
           Line3DBox[{996, 1227, 2666, 997, 1242, 2679, 1017, 1257, 2691, 
            1032, 1272, 2702, 1047, 1287, 2712, 1062, 1302, 2721, 1077, 1317, 
            2729, 1092, 1332, 2736, 1107, 1347, 2742, 1122, 1362, 1137, 2607, 
            1377, 1152, 2617, 1392, 1167, 2628, 1407, 1182, 2640, 1422, 1197, 
            2653, 1437, 1212}], 
           
           Line3DBox[{998, 1228, 2667, 999, 1243, 2680, 1018, 1258, 2692, 
            1033, 1273, 2703, 1048, 1288, 2713, 1063, 1303, 2722, 1078, 1318, 
            2730, 1093, 1333, 2737, 1108, 1348, 2743, 1123, 1363, 2748, 1138, 
            1378, 1153, 2618, 1393, 1168, 2629, 1408, 1183, 2641, 1423, 1198, 
            2654, 1438, 1213}], 
           
           Line3DBox[{1000, 1229, 2668, 1001, 1244, 2681, 1019, 1259, 2693, 
            1034, 1274, 2704, 1049, 1289, 2714, 1064, 1304, 2723, 1079, 1319, 
            2731, 1094, 1334, 2738, 1109, 1349, 2744, 1124, 1364, 2749, 1139, 
            1379, 2753, 1154, 1394, 1169, 2630, 1409, 1184, 2642, 1424, 1199, 
            2655, 1439, 1214}], 
           
           Line3DBox[{1002, 1230, 2669, 1003, 1245, 2682, 1020, 1260, 2694, 
            1035, 1275, 2705, 1050, 1290, 2715, 1065, 1305, 2724, 1080, 1320, 
            2732, 1095, 1335, 2739, 1110, 1350, 2745, 1125, 1365, 2750, 1140, 
            1380, 2754, 1155, 1395, 2757, 1170, 1410, 1185, 2643, 1425, 1200, 
            2656, 1440, 1215}], 
           
           Line3DBox[{1004, 1231, 2670, 1005, 1246, 2683, 1021, 1261, 2695, 
            1036, 1276, 2706, 1051, 1291, 2716, 1066, 1306, 2725, 1081, 1321, 
            2733, 1096, 1336, 2740, 1111, 1351, 2746, 1126, 1366, 2751, 1141, 
            1381, 2755, 1156, 1396, 2758, 1171, 1411, 2760, 1186, 1426, 1201, 
            2657, 1441, 1216}], 
           
           Line3DBox[{1006, 1232, 2671, 1007, 1247, 2684, 1022, 1262, 2696, 
            1037, 1277, 2707, 1052, 1292, 2717, 1067, 1307, 2726, 1082, 1322, 
            2734, 1097, 1337, 2741, 1112, 1352, 2747, 1127, 1367, 2752, 1142, 
            1382, 2756, 1157, 1397, 2759, 1172, 1412, 2761, 1187, 1427, 2762, 
            1202, 1442, 1217}]}, {}, {}, {}, {}, {}}}, 
        VertexNormals -> CompressedData["
1:eJzs3WdUVFvWLmDMOecs5hwwgek1ixkTIuacxRxQERVFMSsqKgbErCiiGNFJ
UkCJkjNUFZkCDGDWWz2cq34sL7e/HuM6jqe/039qdLdj1S5q77XfPeezaunO
Nhs3r6iOjs7Lsjo6xTSvo368GvcsIIz4FWa32obUWZKNr0UGLopfkEb5N4pY
BOSH40qvjm32xypQt/P4IH+HBJq28FS5s3teIStulNHGPln//Pt/8+8bdDk0
+MpGBfGr+O84ph+7yXxsCInXofv1gpYcUkNV44rJtn5RZJL1fvGhig+Rur7e
2cS1mv99iYVJj75JxK+os2bdkCFDU1G06uE9tUuryKy4nt6XEtFo2aT2x8Un
UjDWa/mWNDclGXXpcGNOl1t0eZPdPVWDjP914/P3Qfz9aL+Xwr4vHf6PxcGr
DyZXsXT7+d/ywO9H/P7a923ZaojF1k+pdMVgZE7tUkloPMhkTX5uAtw3FtR7
OCSd9gz9cW9um+e4Pv6Cq3kb1f+68fk6Ib5utNdLYee/2Z1XR74MD6ExcRX3
9nv5kqxcdtPNqjnoFTQkroWzC9ZkD1/3dmcCLajzqfLyUtm4X+5yci+rJKpk
lx/SodJlSg91xokZWRi+Y8SUdVeUxK9Q+u8stvt+IvjzEH8+7efi80ycdxDn
W1ixqZ3dKZWq7kqvfOlwBNwtmuQ+2qDE4L6dsk7cSqPu+ysdPFHyEZUx3P45
c3jKH3f8/+n5j0ED9HLtU+hgp1ebi1nfIsMPFRfP2JmGfaV62ESWS6Sxt25v
7jk/knbcm71lzpIM3Ilf8LnopQTxSmOjQix+7E1DuZ+fR3w+iM/F5xnxeac9
3/j6J54PtPPA+oH1d7Q3TafcbbO3615JwLjWOj1RJA7H63W7V/dbBtXZVi3/
WmUvXJs+8KRhBcUfd/z/6fn/n85vRj8/D/b+/HwQn2vtz/NMnHfa8+0/Hb/4
hHKP2rqn0euttU94LguHdf12F58cVaD9oOQJMR7ppDtgqan58afU/KHux4m5
yj/u+H/3/L//53kmzjuI842vfzEfQMwD/+n4i4PGmlwoSKfFRpOnV30fj0uW
Ow7ZHYnBCq8L92Y7ZlL5NfUdapT0RKutc7v2bZH8xx3/757/iyUMLVurTRBN
fJZZUWUYS4dOzj79IikLGaVXv151iRB/eZVPtomC0G/R2+zMDFTQMyj5AgE0
3M0uEUik7g9f9gh/l4mCT9XHOig9cdD/RL21ZkqqFL+h9L3P6Rjip++zfp6S
hk52/lTumhttCogOeqSXAZ9Vee2GvFOR789XzOiT7t2kQxT4+yD+frTfC18n
4rqBuF54/iKez7TzWI+f9xVxn0FZvr/8afO/35xT3b41SiH3EX0rOhtF06Yy
1Y7kLlchyNC56RfnWAqZb2N6v2QyfclaXL3p8DS43ylvE+Ooovrfj1CXYon0
MTkw5Fq6AuFP9Sq4dooh5ysDn/d6oqC5TYu4+c1LhVvpyfaz16vw5Ocr3RxT
u8bREbEY9vP7EN8PxPfC1wnxdaO9Xnj+Ip7PtPMY31eI7zPa+0uVn/d74vu/
9r7/p83/vzs/8/chvh+I74WvE3HdUEW+Xv604/+753++TsR1A3G9GP6cv1Dp
53wGfZ7H/rTj/7vnf56/xHwGMY/xfUXcZ7T3lz/t+P/u+f/Zz/uKuM9A3F+M
f97vxf0f4r7/px3/3z3//93H/7vn/7/7+IWd/zr/1//kFfp98XWifRXXyz//
/v/97wur84v/Lv5/qf6v/d6k+rb2/aV6+D//vpB/L9X9Sar///J9ietHXE/S
/Kad56T8rL3/SPlZmwuk/Py/Znwxv4v5Xpr/f/m+pPmttzS/ae8/Un7W5gIp
P2vzWiH5+b9+fNEnE30zKf/8cv6L+424/0j5mTg/Q8rP4PwMKT9rc7SUn7XP
N1J+JvHcKdX/wfV/kur/4Po/pPr/H3P8/+n5L3IA52dI+RmcnyHlZxI5WsrP
JJ5vpPysfe6U8rO2HiDV/7V1Gqn+r62fSfX/P+b4/9Pz/z+d3zg/E+dnkvIz
iedOKT//j8cX9TJRP5Pq/9q6plT//2OO/3fP/5yfSTx3SvmZRD2gkPz8b8cX
dUxR15Tq/9p6cyH1/7/8+H/3/C+e/7n+D6n+T6JOI9X/wfV/SPV/EnVNqf4P
rv9Dqv+D6/8k1f+1/Rmp/k+ibybV/7X9TKn+T6LPLNX//5j5X9RluP4Pqf6v
rZ9J9X9tXVOq/2vrzVL9n7j+D6n+T6I/I9X/tX0zqf6v7WdK9X9tn1mq/2v7
/1L9/4+Z/393fhb9GNGfker/JPpmUv3/jzn+v3v+F30y0TeT6v/E9X8qpP7/
lx//3z3/i/6l6GdK9X8SfWap/v/HHP/fPf9z/Z9En1mq/5Po/0v1/z/m+P/u
+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
mf3YWcQspdD7XWH3tQ69bOrlbH+FSlcevdlyIwn1ij6JmGqWiaK2jqc6OsVj
y8S48SuO3cH267GWBoOyUetthWnbuxEtHpocsHr+FUwzDr83+HFuofedM92e
34l8oKLSfdxMvx+Pge/tL7vyV6qw3L1EdIW0dDruF7dtQbAbnvrdNZ76XIk5
Vt1PubxT0sjin3fmzjlJ2wKG7ttcJKPQ+8K69Bcj360KJn1sudbFJhle9/rp
D96QgfUT8lNv/4jGspMFm9PDI3BRN9jHJCsTHquu1ku2CUfM0FsLPe9dpjGK
Lt8X1ckpdN7+/zU/H6+YrhuadQ77L1w0z6+ogklI1UpeGem4tIU8Aze/wJHK
Pw6vGhWF6TcH2ltUVqP+CdMyHwqc8aDvzNnPUl0xKfytkSoot9D5+cTKWx9W
ftBcR+179CxmnIAhBxOs8y1S8Wxdfl6r7plkcONri/yXodBfNOOAbZbmuVBR
ZKK6YjJZ5j0avaLGA8zvcnWItebvU9j8nHb0+gXbzCvUQidu1KbrCfDtWyqt
XflszHp5YOTeuY8Q6TRM2dFHgdJnH7Qf+iADBqaNzNt8fI6PfvMne0/1Rykq
Ofvyg5zfPj+XVOw7u87Dh/bXbvAouX4ctfBYsMKucTY+72/yutOB80gyHrJ5
rFkyXTebFtgjOBMnXM9UfuT9jCavnXrw+f0k6rvQeGSZ4lnY6LKsUYcxm9Cp
5v3duqYK+mgyfYhL90yozKr2tvIJpemmTb0f74ykujMnBV2rko2bNu8rGi9M
JZ2Q2e0ODQ+F34qUOdtcVQj1f5y083oc9aZw3RpL01F9uEkR58B4bA2bcvdp
tSv0wWngBNO2mTCu+Pxx46kKZG10nKX/7Tx6ZX9L9DfJQJ8Is1ZltylR52yt
hvct71O9+uUP7LLLQKmkYQPP/FCgWpqR+XL1Vewtfu1In+w0nK6xvXhHvZTf
Pj+/7+TvVqu1imYr7rpXrhxN3R3DVU5rU+BqsmLXqEOJ1OV4Pb/FFZKoyNj2
PwY8S0XxHs0HGV1W0MjVbqP3106iA70e2UxfqsK0gjXqQVWTaP9p86Y/biVT
j5Hp468bpsAkKn1Yz9Wv4DvzgvLC7DQ6n0mr3dxU2DHSZXlGRBKaqg48vPHp
BMVXrNl3UpcsNJuZb5Ay14vKz77T+OiENJg61fd4MSUFztdO7JmcFkP9G9wd
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
ZFDnMsNvep4LxHDDvYP2fkzGtAYBZhSXQD4tJlVuvdKFml4u0d0wL6vQ+fnA
8yum6q/hVLbUmjnrHRVY2aFgRMGRNPg/v7TAtno4Lnqun20QHYsH3Ru33Bmc
CdsqS29NN4xG1VGDR+3Mv0WHn99qMX2i+rfPzxd7Np1csX4AZS54uz335GvN
A8jRRU81eW/azVLTz81zh9fHkckDUkKp/ZDKR6s0zUG8b1KzuQ8e0cLu132G
nQmhKsGuRXbY5aC72yvd4+qHOHh6T1KDy9FkfdT0QFQLNZbuDhwxqlMMWTa1
cB7VyQ12vQ1MG3/Nxsm8hg7b66XR/m1pTUOrK9B1SMdJX22i8XLO8Nb15yop
/sexnCY9kzAlZGLPLHslDixotrDI2qtYWbVurdfrwrC/08t+lQw1uXdM95X2
5k+pdfSmbxnlk9H4vP8Hv9BMvAnu1Ovpwzu432lGVnaLVNzINT6392sqlp65
ouNk7ol+w92NO5aNQt1FE6+tHKH+7fNz9z05IQP3JVPL8QY5C47FUu3Tpydu
yklFLxo+derrKKq5U7fqecMkCjKtG+l3Ih12xay8FmTFkomibuSr68lksG7X
uCC3VFwIK3j5uFgEvX2U1KSuSzINq/ql5SXDdNypuLbpbvM4mFq77J/8TUUX
Jnxc4r9diZmNHj3oMuU18St0P+h5hEGNLz5WtfauUVBUgw9FhsakYqfHo8N+
c6LxfW+FRRe2vKIVS/aWbHg3A/uX2WXGaZ57jg08/1VX8zmPfAu8m/UoA3E/
5gefUyjQebL1in33/UgxIK/YhtEZqDK+rV4FSwXGP8naQCcOkPEn/RcNhqUj
KrVRm3Lhqt8+P7frGbPKuamKAs9t/LTWLRgDd1Vtl7w4DZFfm3z3N1HRkosl
2nY76EmmkfZ1Ow5Ix5t3W7/2PRFD97YEXx05/gldalx91qe0bGw6l120m4WK
Su3d4ueT4IXRsTs3pGjmz2iD78eKRr1ERfNNT8tYXaAh+cbuJoNy0TFIx3VE
ngrvrn9qdsAshpZEPpxfdrAKW36e98TXgfb8T7lYfPlT80QaH97Ls2ydVGy6
2LlRFU2OyDMKrVYlI5bKeSz21n+swvE1x+JOfVPibrdRsTpRyXRvWeSqT+OU
GFUnJeiVgQLfR00vucM7kspa31SP8VViXp2RyRXbpv72+fl35+eQExar30Y5
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
YFcAyRWAXQEkV0DsCiC5Am1/XnIFYFdAkisAuwKSXC7Y5ZLkcsEulySXC3a5
kFwu2BVAcgXErgCSKwC7ApJcAdgVkOQKwK6AJFdA7ApIcgVa3yG5ArArIMkV
ELsCklwBsSuA5Aq0PkVyBWBXQJLLBbtcklwu2OWS5HLBLpcklwt2BSS5ArAr
gOQKiF0BJFeg9UGSKwC7ApJcAdgVkOQK/sfzM7sCsCsgyRUQuwKSXAGxK4Dk
Cn6Zn9nlgl0uSS4X7HJJcrlglwvJ5f4yP7MrALsCklwBsSsgyRUQuwJIruC3
zc/scsEuF5LLJXa5kFwu2OVCcrnELheSywW7XJJcLtjlkuRywS6XJJdL7HJJ
crlgl0uSyyV2uSS5XGKXS5LL/W3zM7tcsMuF5HLBLheSywW7XEguF+xyIblc
YpcLyeVqfa7kcsEulySXC3a5JLlcsMslyeWCXS5JLhfscklyub9tfmaXC3a5
JLlcsMuF5HLBLheSywW7XJJcLrHLheRyiV0uJJer9emSywW7XJJcLtjlkuRy
wS6XJJcLdrkkudzfNj//7vzMLpfY5ZLkcoldLkkul9jlQnK5/+TnQvIzu1xi
l0uSyyV2uSS5XGKXS5LL/Sc/F5Kf2eUSu1ySXC6xyyXJ5RK7XEgu95/8XEh+
ZpdL7HJJcrnELpckl0vscklyuf/k50LmZ3a5YJdLkssldrkkuVxilwvJ5f4x
+Vms92aXS5LLJfEquVzt+nLJ5RK7XJJcLtjlkuRyiV0uSS5Xuz5ecrnELpck
l0vscklyucQulySXq13fL7lcYpdLkssldrkkuVxil0uSy9X+PoFwuaIeLerT
oi4t6qeinirqqKJPIPoGol8g+jSibyP6NaJPVov7ZqJfVtj7/reOL1ypcKbC
l07kPkEQ9w1EvyCW69pGXOcW9W3RvxH9HNHHEf0z0U8TfTTRvxT9TNHHLOx9
/1vHFw5YuGDhgUX/RvRzRB9H9Btqc/9B9B3iuK8m+myivyb6mt25zyn6m6Kv
LPrMfbi/LPr6os8v+vvCVQhnIXyFcC0x7FyEbxGuqAo7I+GLCvtcf9XxC7ct
HLfw26KvNof7bKK/JvpAptwXEv2g5dzv3MD9T9H3HMr9ZtF/LsN950nc7xf9
f9H3F95C+AvhLoR3Ef5FuBfhjYQ/Eu5IeC/hv4T7Kuxz/VXH78LOXrh74e1b
cr8znfufou8p+nNzuF8n+nSiD72G+9Ke3I8WDmANu4B17AFGsMOowy5DeAzh
YISLER5GOCThkoRHEg5MuDDhwYTDU7PLEx6vsM/1Vx2/WBch1kmI9RGiD/2Y
+9KiHy36pqKPKvqnwgcILyCcwDb2GcJrCKchfIzwMsLJFPa+hY0vfJ7wesLp
CR8pvKRwkv/p+L/7+MU6FrGuRaxnKcE+wJ29gHACop+t5v626GvXPvTTbVRj
xyH8hnAzw9jRCD8j3NImdkzCLwk3dosd2Wb2Y1bs9oqz4xN+T7hJ4SiFnxRu
NZIdaw32q9vZDQtHLPywIbtt4biF3z7Cbl44euHnbXjdgljHINYv3OV1I7N5
HYlYPyLWEYl1RWI9kVh3JNYhifVHwm1YsuMQfkM4g5rsDoQ3EJ5G+BrhaoRn
Er5JuKbb7MmELxOubBR7vpLs+4Trs2ZPKXylcJXCs25n3ypc64/gn57YiX2x
cMXCcwvfLVz3Mfb0wtcLVy/WM4j1DWJdg1hPItaXPOF1JcTrecT6HrGuR6z7
EuvAxPovsU5MrBsT68WEp8lhXyNcjfAfW9iDCAcinNN6dk/COwlnNp3dmfBm
wvkJ9ye8n3CWwl0Kbymcq3Cvwrv6sDM2Znd8lr3xDHbeSnbfwnsLZy/cvfD2
Yp2DWPcg1juIdSZi3YlYbyLW+dzndT/reL2PWGcl1l2J9VZinZ5YtyfW64l1
fWKdn1jfJ5yTgt2T8E7C5QinI3yO8GfCowmHJvxfN/aAwgEKfyk8pnCYhb1v
YeML/y08uHDgwt+bsMcXDv8/Hf93H79YhynWZe7l9ZiP2Z81YI8mHJrwUk3Y
Twk3tZBdYD12gsIHCpe5kZ2m8JlX2MUKJyt8bDS75GbslIVPFi5cOHHhw4XL
F05f+HwTXhdxktdJgNdHFPa5/qrjF+tmxTpasX5WuEDhBIUPFI7Nhl2b8GyW
7DWLsN8UbvMoe9lR7GeFmxVeWfhl4ZYbsxcXfly48Qns9YXfF25frJcQ6yfE
ugmxXuUDr18R61YK+1x/1fGLdc5i3bNY73yAvaY9+03hNoUvFN5QOEPhaDuy
qxWeVjjmLuyahWcWjnwUu3LhyYXjF65feH6xjkKsqxDrKWbxOpZ8XtfSg9ez
iHVEYl1Rc15PVNjn+quOX6xLF+vUxfr0A+xohasVnla4z+9RPx2o8J9V2DfX
YO8snPM69uXCmwtnPo99v/D+wvkX9r7/rePv5N8REL8rIH5PIJh98y32zsI5
C48rfK5wuanszoVDF/68J7t/sQ5A+H+x7kKswxDrLwp73//W8cXvPojfgcjn
338IbnXLqr9bEl1puKa4Ij0RbepWmdCqUSrsnIptfe2rpKo1MrbumRmFkObL
ptTQSUUv19ya7euoSCeidU2Xvg5kMKvJkOuanG+nan5l9M0oKtOjxP6kEo9R
43gFPQ8TNer5XYkv/zSJ5n7ZMCwvLRHlzsdfTGmYiln271U7NeO/sxxyxHNG
FLZvWm58WDP+wi3FSn/QjG919o3+FV0H6tbzQrt6mvE32Y/wmKUZf//bLh8N
Sj7GPL9Sb55oxj+z+/2Jpprx89L1BoVrxj+st7ZTgmb8p6+i3x3SjP+s441h
iZrx55sXWblVM/6wbetubdaMX6dgdpN+XRyoveVJ1UrN+GMrHczqrxn/i8G1
txc1x5+79aiLt2b8Bml9Paw0f5/2lfrXPqL5+5j5dDGsqvn7pOwv82bTiwBy
L118ekWXeIx3KtKnoWkWXPvF3rLvk0ppa2uFjm+ShHWD3BdX0FxPxc5W6lct
Io1GHY2+YKzwxdoNtetZavJD5I+nlZ+8vkfn3a4W2xK3lboq01qdVuXCa7zD
0xX+7rS6097Na5tFYNdWy3HWj9UoZXDJyKp3KpVsfH7+es345oP6bJm/MAmp
Zarsvh2eRlNP3M/cmeILq05Rs+5rxjcoOqWyWteV5hS9WjS8jSW9KZee5KvM
xfQvK785BLlTiRWtj5RoGoG+8469vaUZf0W7x3b/Gn/q6s3T/jV+9rs9zf41
vp9t4vdgzfiW9wdPWqPyRaChe9uLmvHLr+oTaxdyj8w9yn10j9lKOxbfbH5W
c/yfsyyXV3zhTkuL99Od2DIC/g/bfOmhGf9IRpNW1nMjyeSTkYHR2VQ0vThI
d8EsJfr62OtOMVLRvjtJfRsUVaLnJ5Xr23OJ2LdDr1zboqF06mPPM1nhKbDb
VS8/bUYK7vWLblMF19A3ev/9L1uT0Nj81Lb5M7KwOSTiufF1JfUoNj2wVmAk
nPIefa87MBULdpBb3Mh06vj1or9ny6Nw2zC2TFKQChmbbXWrj4+igDO1266o
70kHffxrVO2nRmOvw+WWh9xC9Sa9V6e0iSaPSQ8PRE9R41KXuMzSF+JoPt4l
xva8iF0V9lwafCIb8X7tkm00x9/vTMkx6iJKmB7qPyRLc/ynTwb12VsvlFps
6N/eKiAFp78UzwidnYJiep26lhp2DbdfPBxtsSsJH2/OumQ2JQuvWm0qEnvL
lypOzB822jIezY8dCa74MAs7G+me/fExiU7OdLDc3zkVS/c6TFrZJRHNWiVG
x+0Np/WNt04+2zsFrwKjlUNnau7LE6ZVb1xWSUvr7zzS/10ydqTv/r5iiQJb
ly1wiRiVQXfTC1yHu/mhzKyx1RZbKnDLpfr7Ei1TyaT0thudHt2hISdb1Vv1
NRW73iy1dAmNpQpx+/sfrhxOAys0rP7sdSYeL3/gdmprFIZYlTee3zqRPk+8
f86hUQa2eI/fs7CIG20rYlW2pmE0vKPOvNHrpDlvt9m1af8pidZuLm0zX3P8
xo7ONbdojr9iwAzDBM3x7z9VIfmM5vjfLmj541/Hn+XxrVGvC0Hk3Kpp4Me3
qagyqbtPuRjN9eJ+ravZxCR6ON3nzSlrBZQR3y+8maRC7RUfD564q6KKHZwv
3suPxdhJm4pX0lGh8afbVya6ZdAZy6/32z++iy+dvy5dGavAyc2lu/Romky3
Ew0Kphx5ihcjP9i1fJ4Jv9FHTIxuK+jTwo6Ky8/Cod8i814JuzRsxAXDF1fu
43P4U4NXHwIQOGW3Wb8vOUgYphM1oVMijK8dy7sw+CXNLxm2uGjrLMza8n7V
HaNgyp3dJmDe0kCok0+qxnxXw0Q598MKzfG7+wy9tGC3Ag9PbnjWTXP8zX1q
2NRYHULXvZRvS71NQs82A/Lm3cuA2m5V76CaqbTl8oGHxzclYln49sG2n5PQ
rHkX14cuGTTDtmlBv22vEB48y7eGXzLsh32vNbZDOEXrbig/2ugafXAdtOBZ
yxy4zzy1JG/sS/pxfHKnDXdDcMz72qX6mvu1/6wlzd0+eNNE5y+1/ZapEGdc
90x+5XQ0in+3KHhyCBpGdRpf8mEExlS5HzbbIRtX16S4d4nwwY6Ox4/27XSG
lh6xdx6zLBfPayUcWmH4ksa97/+u4sMQlLX3PPq+TA7azLrfIL5jDDmEd6us
m6tCE8dPUxJMVbixdUKnKzGpdLVVp3c/ViuQ0nN2ULG50Xg4seD1sINJtGZn
rXclaynRtrrx7akOSpg1tjRsX84FrR1XuFTXS8CcUsOP+TXKxsQyexuft3cn
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
+VorDx+iKWG2n3o+oeEGiWfmDsjFQusLm65usMGjqLmXjIs/pyun9zk1OpSL
vsXLVhnU9DkVSdjicKHWDpp5r7RZm4O5GOK7rUE1P09Ynz29oOg+T/roP/a7
Ykwu1gS9Gz64nQu5jXBqX6HVK9LxLvt1Sqdc9FneZMyaCa4Ymn97p9PncCo9
Ym3rZblqUNUexVJ6JFKFexfe5HbxpFKvFhz1PZiFYgHDx9vvCaY3N5SvVkZG
U0bpAstpNTQ5ateWGtNuxFCVdl6KhePi6NDjo8cVCzNQMKRr+IVOmufljKej
OxRPpjp6k9JLxWfg4KvYCvE3IqhV1JdK588k046bOl2CO6Vj74moFqVdQ6jG
7SV6/kUV1P16Q9+z2eloHDVg2KBvkdiyJufDywcq2pjdwfSzJrc8aGqvEzgv
me6v+dSj2v2T2Kxr/2ZJVCaq6TU4ZTFYQXWWWHU/VUkzP+ioQy53zkS9KU1M
h45LoQc3x/quvnCJrqQ1aJb4Og39VGcie79U0JYeqZljmoXSjKLdS3to8oyH
TdSi6csSaff/6dq+/3re3z+AH6GMVIQih05mZJTjIOMRkSgtUcheGYdQ2SKV
PdKug4pSEU2rciklobT3eK96t99S2eP7/txuz+8vz3/hej2v63pc99vtZdZr
bOIl+XvXd46MvNmMSLtlxrtWSKjFaM+D/T0fkpaSelri7UYcsU0eFX34HZI7
E3b7puZQRMpAGny2HY+t+4xJvyfBoaHOb1WDyihMx1AQvqUern+XYszQPPJK
WVXtlRuO3Iy+le8Gy9AoiFV/aVVKQntpdnmvKuy9lKhY96oZmX4T7+ndkNCa
/N9OZbY18NM4ZLEvUIxDerbnJ3ysp1zDgIAsaTqe9ze1el/ZgJs3gmq3BRRT
j5z6Isf+XnjmMvNGk1k7Cmtf/yqbXkzvX7Z6aE4uhvken4bA263YnGc8r2d7
Es6HXVgUbijBo38jl6hENWKHV/2NK4oi5JtWOIrvF2DA+yEy+5ZG9Nx6qjaJ
ShC0yq5p8vBkivhTIaP4Wxte3/1p0VqWRropX0+PHH6Pvqg2vPVNlaFn45EO
jzuhNGvJfOu7N+IRt2nAtPmN8hw7fq96bZKIwtQ+6xacK8G9J6Xl3bekeBj/
SNVBU0qndJ7Nn3CmAof3XXoSoiVCaPTd/rdmltDV0SOTf04pgWWEic2Rxa2Y
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
         "]], {}, {{}, {}}}, Axes -> True, AxesLabel -> {None, None, None}, 
      BoxRatios -> {1, 1, 0.4}, DisplayFunction -> Identity, FaceGridsStyle -> 
      Automatic, ImageSize -> {180., 166.74088966451538`}, 
      Method -> {"DefaultBoundaryStyle" -> Directive[
          GrayLevel[0.3]], 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "RotationControl" -> "Globe"}, PlotRange -> {Full, Full, All}, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, SphericalRegion -> True, 
      Ticks -> {Automatic, Automatic, Automatic}, ViewAngle -> 
      0.42769327351158737`, 
      ViewPoint -> {1.741350092350308, -2.480650215420759, 
       1.5046841411420944`}, 
      ViewVertical -> {-0.255486073023456, 0.3639541438948875, 
       0.8956920495531894}], 
     FormBox[
      FormBox[
       TemplateBox[{"5", "12"}, "SwatchLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                    GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30100577`", ",", "0.22414668499999998`", ",", 
                    "0.090484535`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19699838300000003`", ",", "0.252204821`", ",", 
                    "0.33320940200000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               Graphics3DBox[
                SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                  DirectedInfinity[1]}, 
                PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
                0]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{3.8522927234152775`*^9, 3.852292978880948*^9},
 CellLabel->
  "Out[320]=",ExpressionUUID->"141f3860-ce99-4368-a0df-27dd758b07cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"sX", "=", 
       RowBox[{"{", 
        RowBox[{
        "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
         "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14",
          ",", "15", ",", "16"}], "}"}]}], ",", "dzialanie", ",", 
      RowBox[{"grupy", "=", 
       RowBox[{"{", "}"}]}], ",", " ", 
      RowBox[{"wlasnosci", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"dzialanie", "=", " ", 
          RowBox[{"NewOpFSet", "[", 
           RowBox[{
            RowBox[{"FSet", "@@", "sX"}], ",", " ", 
            RowBox[{"list3d", "[", 
             RowBox[{"[", "f", "]"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"wlasnosci", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"IsAssociative", "[", "dzialanie", "]"}], ",", 
             RowBox[{"HasNeutral", "[", "dzialanie", "]"}], ",", 
             RowBox[{"HasInverses", "[", "dzialanie", "]"}], ",", 
             RowBox[{"IsAbelian", "[", "dzialanie", "]"}]}], "}"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"IsGroup", "[", "dzialanie", "]"}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"grupy", ",", "f"}], "]"}]}], "]"}], ";"}], 
        "\[IndentingNewLine]", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"f", ",", "sX"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"TableForm", "[", 
      RowBox[{"wlasnosci", ",", " ", 
       RowBox[{"TableAlignments", "\[Rule]", "Center"}], ",", 
       RowBox[{"TableDirections", "\[Rule]", "Row"}], ",", " ", 
       RowBox[{"TableHeadings", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"firstline", ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Laczne\>\"", ",", "\"\<El. neutralny\>\"", ",", " ", 
            "\"\<El. odwrotny\>\"", ",", " ", "\"\<Przemienne\>\""}], "}"}]}],
          "}"}]}]}], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"dD7", " ", "=", " ", 
      RowBox[{"NewOpFSet", "[", 
       RowBox[{"sX", ",", " ", 
        RowBox[{"list3d", "[", 
         RowBox[{"[", "7", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"OpFSetTable", "[", "dD7", "]"}], ";"}], "*)"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.852324747967001*^9, 3.852324869051318*^9}, {
  3.8523249469121933`*^9, 3.8523249591556683`*^9}, {3.8523250114566517`*^9, 
  3.8523253029688826`*^9}, {3.852325335217161*^9, 3.852325345806382*^9}, {
  3.852325417835128*^9, 3.852325567354862*^9}, {3.8523256055160217`*^9, 
  3.852325947308465*^9}, {3.8523259916804624`*^9, 3.8523260250552645`*^9}, {
  3.8523260800965595`*^9, 3.852326104241208*^9}},
 CellLabel->
  "In[664]:=",ExpressionUUID->"9416fead-02da-48e4-9aef-1ebd1f65e97c"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"B1\"\>",
       HoldForm], 
      TagBox["\<\"B2\"\>",
       HoldForm], 
      TagBox["\<\"B3\"\>",
       HoldForm], 
      TagBox["\<\"B4\"\>",
       HoldForm], 
      TagBox["\<\"B5\"\>",
       HoldForm], 
      TagBox["\<\"B6\"\>",
       HoldForm], 
      TagBox["\<\"B7\"\>",
       HoldForm], 
      TagBox["\<\"B8\"\>",
       HoldForm], 
      TagBox["\<\"B9\"\>",
       HoldForm], 
      TagBox["\<\"B10\"\>",
       HoldForm], 
      TagBox["\<\"B11\"\>",
       HoldForm], 
      TagBox["\<\"B12\"\>",
       HoldForm], 
      TagBox["\<\"B13\"\>",
       HoldForm], 
      TagBox["\<\"B14\"\>",
       HoldForm], 
      TagBox["\<\"B15\"\>",
       HoldForm], 
      TagBox["\<\"B16\"\>",
       HoldForm]},
     {
      TagBox["\<\"Laczne\"\>",
       HoldForm], "True", "True", "False", "True", "False", "True", "True", 
      "True", "False", "True", "False", "False", "False", "False", "False", 
      "True"},
     {
      TagBox["\<\"El. neutralny\"\>",
       HoldForm], "False", "True", "False", "False", "False", "False", "True",
       "True", "False", "True", "False", "False", "False", "False", "False", 
      "False"},
     {
      TagBox["\<\"El. odwrotny\"\>",
       HoldForm], "False", "False", "False", "False", "False", "False", 
      "True", "False", "False", "True", "False", "False", "False", "False", 
      "False", "False"},
     {
      TagBox["\<\"Przemienne\"\>",
       HoldForm], "True", "True", "False", "False", "False", "False", "True", 
      "True", "True", "True", "False", "False", "False", "False", "True", 
      "True"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[1.2]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableAlignments -> Center, TableDirections -> Row, 
    TableHeadings -> {{
      "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", 
       "B12", "B13", "B14", "B15", "B16"}, {
      "Laczne", "El. neutralny", "El. odwrotny", "Przemienne"}}]]]], "Output",
 CellChangeTimes->{{3.852325981603817*^9, 3.852326031326087*^9}, {
  3.8523261010671334`*^9, 3.8523261171838846`*^9}},
 CellLabel->
  "Out[664]//TableForm=",ExpressionUUID->"893d755e-b487-4eeb-a87f-\
dc4c0214f825"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dD7", "=", "  ", 
   RowBox[{"NewOpFSet", "[", 
    RowBox[{
     RowBox[{"FSet", "[", 
      RowBox[{
      "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
       "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", 
       ",", "15", ",", "16"}], "]"}], ",", " ", 
     RowBox[{"list3d", "[", 
      RowBox[{"[", "7", "]"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dD10", "=", "  ", 
   RowBox[{"NewOpFSet", "[", 
    RowBox[{
     RowBox[{"FSet", "[", 
      RowBox[{
      "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
       "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", 
       ",", "15", ",", "16"}], "]"}], ",", " ", 
     RowBox[{"list3d", "[", 
      RowBox[{"[", "10", "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"GetNeutral", "[", "dD7", "]"}], ",", 
   RowBox[{"GetNeutral", "[", "dD10", "]"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"inverse7", "=", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"inverse10", "=", 
      RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"inverse7", ",", 
          RowBox[{"GetInverse", "[", 
           RowBox[{"dD7", ",", "i"}], "]"}]}], "]"}], ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"inverse10", ",", 
          RowBox[{"GetInverse", "[", 
           RowBox[{"dD10", ",", "i"}], "]"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "16"}], "}"}]}], "]"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<B7: \>\"", ",", "inverse7", ",", " ", "\"\<\\nB10: \>\"", ",", " ", 
      "inverse10"}], "]"}]}]}], "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.852326316574434*^9, 3.852326413055086*^9}, {
   3.852326471986611*^9, 3.852326506676138*^9}, 3.852326559096483*^9, {
   3.852326590142752*^9, 3.8523269746201973`*^9}},
 CellLabel->
  "In[680]:=",ExpressionUUID->"ee4bd13d-bfa5-4262-a3ed-364ff7ef34fb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "16"}], "}"}]], "Output",
 CellChangeTimes->{3.8523265099384356`*^9, 3.852326635288311*^9, 
  3.8523266953496833`*^9, 3.852326797186396*^9, 3.852326977553256*^9},
 CellLabel->
  "Out[682]=",ExpressionUUID->"6aa5551d-5a9c-4d3b-9356-17302919b759"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"B7: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", 
     "15", ",", "16"}], "}"}], "\[InvisibleSpace]", "\<\"\\nB10: \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", 
     "15", ",", "16"}], "}"}]}],
  SequenceForm[
  "B7: ", {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16}, 
   "\nB10: ", {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16}],
  Editable->False]], "Print",
 CellChangeTimes->{3.852326695482482*^9, 3.8523267975935044`*^9, 
  3.852326978342231*^9},
 CellLabel->
  "During evaluation of \
In[680]:=",ExpressionUUID->"6883e41c-7b24-4e6b-bee7-717980342e93"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1269, 641},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (August 22, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"b01ed991-45f5-4587-9038-5b0edc562bf2"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 176, 3, 98, "Title",ExpressionUUID->"582a966e-e249-496c-b3a7-96ef36a1d70a"],
Cell[CellGroupData[{
Cell[781, 29, 11444, 296, 613, "Code",ExpressionUUID->"e9a8eb91-63b4-42d2-90f2-94ec4249a9e7"],
Cell[12228, 327, 2755, 82, 156, "Output",ExpressionUUID->"2ca01f21-45b9-4d27-9a8d-42ba2a6c1e3a"]
}, Open  ]],
Cell[14998, 412, 7112, 173, 349, "Code",ExpressionUUID->"e996f882-0969-4752-bbb1-c0e5598014ac"],
Cell[22113, 587, 4377, 91, 349, "Code",ExpressionUUID->"20094ba8-9fb8-4305-a8c5-1f47b2312d6e"],
Cell[26493, 680, 4229, 92, 183, "Text",ExpressionUUID->"2940d00b-52a1-4e8b-8356-49c06789110f"],
Cell[CellGroupData[{
Cell[30747, 776, 268, 6, 50, "Code",ExpressionUUID->"b4671a5d-3bf9-44a1-b8ac-da62d2eb7845"],
Cell[CellGroupData[{
Cell[31040, 786, 434, 12, 29, "Print",ExpressionUUID->"cd61b498-cdab-415a-bc88-0f7cbab33a08"],
Cell[31477, 800, 4245, 126, 274, "Print",ExpressionUUID->"bf64b493-d586-4c93-bee8-ace31fd785d3"],
Cell[35725, 928, 432, 12, 29, "Print",ExpressionUUID->"238448fd-0d85-4d99-a755-b3711731831d"],
Cell[36160, 942, 4247, 126, 274, "Print",ExpressionUUID->"3aaf8724-7997-4848-aada-5f302d713804"]
}, Open  ]]
}, Open  ]],
Cell[40434, 1072, 372, 7, 35, "Text",ExpressionUUID->"d542d940-d32e-4c7b-868f-4783daa1df7e"],
Cell[CellGroupData[{
Cell[40831, 1083, 1950, 41, 103, "Code",ExpressionUUID->"08550ab3-f702-4b2d-bc46-af9bb8bcc057"],
Cell[42784, 1126, 2998, 86, 59, "Print",ExpressionUUID->"a30cf20d-5ba8-40cd-8802-34e5487eeabb"]
}, Open  ]],
Cell[45797, 1215, 1291, 21, 173, "Text",ExpressionUUID->"78f3eefb-831b-411f-ad13-112bcf3b5f88"],
Cell[CellGroupData[{
Cell[47113, 1240, 271, 6, 50, "Code",ExpressionUUID->"8fa68f71-b342-4aed-a854-674646c6302b"],
Cell[CellGroupData[{
Cell[47409, 1250, 432, 12, 29, "Print",ExpressionUUID->"06ba5249-0942-4527-9c18-f53d7ea300fd"],
Cell[47844, 1264, 4133, 126, 274, "Print",ExpressionUUID->"caafe116-bb4e-4284-be80-f7338d9eea4a"],
Cell[51980, 1392, 433, 12, 29, "Print",ExpressionUUID->"bd2833ea-4748-4458-b427-69c149415d93"],
Cell[52416, 1406, 4387, 126, 274, "Print",ExpressionUUID->"8eda4ee6-7ea9-49de-adfa-e3e080aec080"]
}, Open  ]]
}, Open  ]],
Cell[56830, 1536, 417, 8, 58, "Text",ExpressionUUID->"cf20a5ac-8cdf-4f99-b2a9-5886f3a9e222"],
Cell[CellGroupData[{
Cell[57272, 1548, 253, 6, 50, "Code",ExpressionUUID->"0efbd676-c820-4fc5-bc55-5b77ca3a84a1"],
Cell[CellGroupData[{
Cell[57550, 1558, 459, 13, 29, "Print",ExpressionUUID->"536bd0dd-034a-48d7-959d-7301e119de4b"],
Cell[58012, 1573, 4197, 127, 274, "Print",ExpressionUUID->"b554b2ab-fa0f-40ff-8144-932bf38fe0e6"]
}, Open  ]]
}, Open  ]],
Cell[62236, 1704, 359, 7, 35, "Text",ExpressionUUID->"e782e98f-3896-455e-9d26-6b2a8d869dab"],
Cell[CellGroupData[{
Cell[62620, 1715, 229, 5, 50, "Code",ExpressionUUID->"0cee2c06-015f-46e0-9397-a88dda296dae"],
Cell[CellGroupData[{
Cell[62874, 1724, 432, 12, 29, "Print",ExpressionUUID->"a90addb8-0b28-4bba-a20a-0b5634d0c757"],
Cell[63309, 1738, 4322, 126, 274, "Print",ExpressionUUID->"855a0fc8-8415-4a68-a88a-84e8d70d7520"]
}, Open  ]]
}, Open  ]],
Cell[67658, 1868, 245, 6, 35, "Text",ExpressionUUID->"80eff861-6d0a-4ccf-9fcd-168ffd2486a5"],
Cell[CellGroupData[{
Cell[67928, 1878, 227, 5, 50, "Code",ExpressionUUID->"ec7c0e9e-4e66-4e08-9eaa-b3bf8b266da3"],
Cell[CellGroupData[{
Cell[68180, 1887, 432, 12, 29, "Print",ExpressionUUID->"742b2701-3b89-48d3-aa80-a0125cb74f7c"],
Cell[68615, 1901, 4172, 126, 274, "Print",ExpressionUUID->"5ed4ae84-1977-412c-9f94-f8f038d75a4a"]
}, Open  ]]
}, Open  ]],
Cell[72814, 2031, 308, 7, 35, "Text",ExpressionUUID->"8a05623d-51a7-492a-ac0c-175c9e89904f"],
Cell[CellGroupData[{
Cell[73147, 2042, 276, 6, 50, "Code",ExpressionUUID->"6fcd3fb9-2737-42fb-b8ef-460e9ea97def"],
Cell[CellGroupData[{
Cell[73448, 2052, 432, 12, 29, "Print",ExpressionUUID->"f5964001-ed0b-4884-8e0a-34607d9cd853"],
Cell[73883, 2066, 4172, 126, 274, "Print",ExpressionUUID->"66f44f2f-7f64-4d42-be58-6ba69b2d7fb1"]
}, Open  ]]
}, Open  ]],
Cell[78082, 2196, 307, 7, 35, "Text",ExpressionUUID->"2d3424b5-dcd2-449d-b974-9f45ef5d3ffe"],
Cell[CellGroupData[{
Cell[78414, 2207, 228, 5, 50, "Code",ExpressionUUID->"e3562b33-4c9d-4e8a-983e-dcc4e0e9268d"],
Cell[CellGroupData[{
Cell[78667, 2216, 433, 12, 29, "Print",ExpressionUUID->"6bdeb98c-a1a7-4cca-b54e-50894f49e372"],
Cell[79103, 2230, 4320, 126, 274, "Print",ExpressionUUID->"47c19cf2-ce96-430a-a345-cf4109382deb"]
}, Open  ]]
}, Open  ]],
Cell[83450, 2360, 310, 7, 35, "Text",ExpressionUUID->"f3ef7394-28bf-4831-bc8c-a8f8b732246d"],
Cell[CellGroupData[{
Cell[83785, 2371, 230, 5, 50, "Code",ExpressionUUID->"b770089b-3f40-4bd0-ad01-5636ddc26c88"],
Cell[CellGroupData[{
Cell[84040, 2380, 431, 12, 29, "Print",ExpressionUUID->"be85c334-dc38-4e6f-af92-4992c8d858c4"],
Cell[84474, 2394, 4320, 126, 274, "Print",ExpressionUUID->"60810db6-f623-4d90-a10c-d725a9701d84"]
}, Open  ]]
}, Open  ]],
Cell[88821, 2524, 361, 8, 35, "Text",ExpressionUUID->"4ab4cc67-91e9-4153-b37b-a6d7f726faab"],
Cell[CellGroupData[{
Cell[89207, 2536, 227, 5, 50, "Code",ExpressionUUID->"04bacbb0-f26f-4fb6-8684-7c16d337c2cf"],
Cell[CellGroupData[{
Cell[89459, 2545, 434, 12, 29, "Print",ExpressionUUID->"2a06034f-98ce-4e17-b062-0a53f60571cb"],
Cell[89896, 2559, 4247, 126, 274, "Print",ExpressionUUID->"c784ee83-df48-4622-9580-1e7baacc8322"]
}, Open  ]]
}, Open  ]],
Cell[94170, 2689, 302, 6, 35, "Text",ExpressionUUID->"6730c214-0db5-4143-bfa9-2b046a471e0a"],
Cell[CellGroupData[{
Cell[94497, 2699, 225, 5, 50, "Code",ExpressionUUID->"c6d78f85-152e-419d-ab50-bd69fca3c8dd"],
Cell[CellGroupData[{
Cell[94747, 2708, 434, 12, 29, "Print",ExpressionUUID->"ec42ff25-94c2-4c56-bb5b-9d78d4082908"],
Cell[95184, 2722, 4247, 126, 274, "Print",ExpressionUUID->"0fdec40a-168c-485b-9732-48448dd66b5b"]
}, Open  ]]
}, Open  ]],
Cell[99458, 2852, 297, 6, 35, "Text",ExpressionUUID->"fe3be7c4-98f1-4972-ae60-1d878028082b"],
Cell[CellGroupData[{
Cell[99780, 2862, 228, 5, 50, "Code",ExpressionUUID->"2ccf2db9-5ef8-4f17-af1e-9995cff3aefa"],
Cell[CellGroupData[{
Cell[100033, 2871, 431, 12, 29, "Print",ExpressionUUID->"db35fe25-3d73-4bfa-ada0-7add72e0ed00"],
Cell[100467, 2885, 4243, 126, 274, "Print",ExpressionUUID->"9e6ecb8d-6098-4c4a-949b-a8c26a67519f"]
}, Open  ]]
}, Open  ]],
Cell[104737, 3015, 460, 8, 58, "Text",ExpressionUUID->"7f0cbf38-4b7a-442b-be36-beff9108f963"],
Cell[CellGroupData[{
Cell[105222, 3027, 228, 5, 50, "Code",ExpressionUUID->"b78dc951-3839-4c39-9cad-70488f63c6e6"],
Cell[CellGroupData[{
Cell[105475, 3036, 435, 12, 29, "Print",ExpressionUUID->"d27d194f-0f43-4cce-8937-38a25c8c12c1"],
Cell[105913, 3050, 4247, 126, 274, "Print",ExpressionUUID->"d9e76767-0bda-4972-add2-2c26d51c57bd"]
}, Open  ]]
}, Open  ]],
Cell[110187, 3180, 483, 10, 81, "Text",ExpressionUUID->"8de1cbf8-3543-4125-9a15-03a98591b4d6"],
Cell[110673, 3192, 516, 9, 58, "Text",ExpressionUUID->"3ef45c21-f470-43e4-870d-d6371a2ab358"],
Cell[111192, 3203, 2095, 53, 156, "Code",ExpressionUUID->"81ddb226-495b-4bb5-8ee8-eb885502cede"],
Cell[CellGroupData[{
Cell[113312, 3260, 2919, 80, 173, "Code",ExpressionUUID->"ee8b04cb-ec41-4fa2-8ac5-e8e590a98c05"],
Cell[CellGroupData[{
Cell[116256, 3344, 632, 15, 29, "Print",ExpressionUUID->"2662401e-5597-4f8a-ac7c-aa01e8ed5cf7"],
Cell[116891, 3361, 4447, 129, 274, "Print",ExpressionUUID->"6d3d78b6-8317-4963-9e4b-1557bbc27984"],
Cell[121341, 3492, 411, 7, 40, "Print",ExpressionUUID->"14c82450-5d50-4e13-85da-75e4cd4521f1"]
}, Open  ]],
Cell[121767, 3502, 9148, 207, 119, "Output",ExpressionUUID->"2f2eb97f-f5f4-4d9c-9a95-0d2941d8b4bf"]
}, Open  ]],
Cell[130930, 3712, 834, 16, 150, "Text",ExpressionUUID->"54b4a9e3-3dc1-45cb-9e93-0e979d7ac675"],
Cell[CellGroupData[{
Cell[131789, 3732, 2891, 79, 255, "Input",ExpressionUUID->"af013473-102c-4d54-a79b-f1622cfaa050",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[134705, 3815, 512, 14, 29, "Print",ExpressionUUID->"d001ecf0-b788-4b22-9475-6664e903a3b8"],
Cell[135220, 3831, 4326, 128, 274, "Print",ExpressionUUID->"37d837a9-ddbc-4cb3-b001-0b41f98dd07f"],
Cell[139549, 3961, 290, 6, 40, "Print",ExpressionUUID->"199cb5b2-9331-4b83-bddb-ea9d64822673"]
}, Open  ]],
Cell[139854, 3970, 9211, 208, 244, "Output",ExpressionUUID->"e0880bcb-1c46-49d7-a911-0a75699d06d5"]
}, Open  ]],
Cell[149080, 4181, 217, 6, 58, "Text",ExpressionUUID->"0d216568-94d7-41d2-99c7-258fd3339d02"],
Cell[CellGroupData[{
Cell[149322, 4191, 2017, 43, 172, "Input",ExpressionUUID->"6f212729-ddc3-42a5-9dfe-63e1d106270f",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[151364, 4238, 561, 15, 29, "Print",ExpressionUUID->"be5a3fcb-296a-4e17-aab7-00a819fd18dd"],
Cell[151928, 4255, 4299, 129, 274, "Print",ExpressionUUID->"4a052fc7-0c04-4688-8ee3-8d9111830ffd"],
Cell[156230, 4386, 2919, 84, 73, "Print",ExpressionUUID->"feaff92b-7183-4269-8d9d-e127c760f92f"]
}, Open  ]]
}, Open  ]],
Cell[159176, 4474, 491, 11, 104, "Text",ExpressionUUID->"898d15fe-2fad-4bc1-97be-a2644763be2c"],
Cell[CellGroupData[{
Cell[159692, 4489, 1959, 42, 172, "Input",ExpressionUUID->"0204de62-3e42-4d27-ade5-12790dc1e1cb",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[161676, 4535, 509, 13, 29, "Print",ExpressionUUID->"5ebe1ef0-ec68-4657-8c92-56027d238297"],
Cell[162188, 4550, 4395, 127, 274, "Print",ExpressionUUID->"f3cad3b6-ab1f-4e1c-bf94-fbbfba5e0159"],
Cell[166586, 4679, 2898, 82, 73, "Print",ExpressionUUID->"ee6e4e16-84e9-4782-9b68-44fc0d893d85"]
}, Open  ]]
}, Open  ]],
Cell[169511, 4765, 578, 13, 127, "Text",ExpressionUUID->"2cf7ae85-edeb-4da7-891a-11e1044b3c64"],
Cell[170092, 4780, 2189, 61, 187, "Input",ExpressionUUID->"9f445e9d-a6aa-461a-8c5c-4d7e446006f5",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[172306, 4845, 3586, 90, 186, "Input",ExpressionUUID->"d953b3d8-25c1-4f2e-a1b3-edd9094bc082",
 InitializationCell->True],
Cell[175895, 4937, 17137, 363, 258, "Output",ExpressionUUID->"2bb05134-c392-472c-bf11-4b928e831b9f"],
Cell[193035, 5302, 17166, 357, 258, "Output",ExpressionUUID->"2bb96ac9-80a5-4282-892e-1d5b8dfc4d27"],
Cell[210204, 5661, 17263, 364, 258, "Output",ExpressionUUID->"0b71fb26-a764-4726-88e2-7c988fbef4eb"],
Cell[227470, 6027, 17260, 364, 258, "Output",ExpressionUUID->"bd92beb3-2790-4a47-9365-915d9fbcc2fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244767, 6396, 1000, 23, 94, "Input",ExpressionUUID->"c8a3d560-540b-40d5-9f2d-474cced611f9",
 InitializationCell->True],
Cell[245770, 6421, 2035161, 35282, 188, "Output",ExpressionUUID->"6f27cc78-5a09-44dc-9b7c-b8179b77b2f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2280968, 41708, 3155, 97, 165, "Input",ExpressionUUID->"17a341f0-2d6c-4597-97fa-794421c08598",
 InitializationCell->True],
Cell[2284126, 41807, 462010, 8176, 188, "Output",ExpressionUUID->"80b92b5f-a505-4921-b408-28cd72b7becb"],
Cell[2746139, 49985, 575215, 10032, 186, "Output",ExpressionUUID->"141f3860-ce99-4368-a0df-27dd758b07cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3321391, 60022, 3226, 75, 335, "Input",ExpressionUUID->"9416fead-02da-48e4-9aef-1ebd1f65e97c",
 InitializationCell->True],
Cell[3324620, 60099, 2739, 82, 156, "Output",ExpressionUUID->"893d755e-b487-4eeb-a87f-dc4c0214f825"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3327396, 60186, 2252, 60, 222, "Input",ExpressionUUID->"ee4bd13d-bfa5-4262-a3ed-364ff7ef34fb",
 InitializationCell->True],
Cell[3329651, 60248, 294, 6, 32, "Output",ExpressionUUID->"6aa5551d-5a9c-4d3b-9356-17302919b759"],
Cell[3329948, 60256, 967, 22, 40, "Print",ExpressionUUID->"6883e41c-7b24-4e6b-bee7-717980342e93"]
}, Open  ]]
}, Open  ]]
}
]
*)

